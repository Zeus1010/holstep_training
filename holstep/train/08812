N Aq12.exists_contour_combinatoric
C |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ (((MEM r2) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 f3 f4 c/\ c= cl'y f0 f2 f3 f5 c/\ c= cprev_el f2 f4 f6 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ cMEM f7 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL c/\ cMEM f8 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL c/\ c= cfind_face f0 f3 f9 c/\ cMEM f10 f8 cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
D TRUTH
A |- T
T cT
D I_DEF
A |- (I = (\x. x))
T c= part cI / b0
D FST
A |- (!x. (!y. ((FST (x , y)) = x)))
T c= cFST c, f0 f1 f0
D SND
A |- (!x. (!y. ((SND (x , y)) = y)))
T c= cSND c, f0 f1 f1
D MEM_APPEND
A |- (!x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))))
T c= cMEM f0 cAPPEND f1 f2 c\/ cMEM f0 f1 cMEM f0 f2
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D IN_SET_OF_LIST
A |- (!x. (!l. ((x IN (set_of_list l)) = ((MEM x) l))))
T c= cIN f0 * part cset_of_list f1 cMEM f0 f1
D Fan.POWER_0
A |- (!f. (((POWER f) (NUMERAL _0)) = I))
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
D Hexagons.disj1
A |- (A ==> (A \/ B))
T c==> f0 c\/ f0 f1
D Hexagons.disj2
A |- (A ==> (B \/ A))
T c==> f0 c\/ f1 f0
D Seq.mem_seq1
A |- (!x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y))))
T c= cMEM f0 cCONS f1 cNIL c= f0 f1
D Seq.mem_cat
A |- (!x. (!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))))
T c= cMEM f0 ccat f1 f2 c\/ cMEM f0 f1 cMEM f0 f2
D Seq.allP
A |- (!a. (!s. ((!x. (((MEM x) s) ==> (a x))) = ((all a) s))))
T c= ! c==> cMEM b0 f0 * f1 b0 call f1 f0
D Seq.mem_filter
A |- (!a. (!x. (!s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s))))))
T c= cMEM f0 cfilter f1 f2 c/\ * f1 f0 cMEM f0 f2
D Seq2.APPEND_cat
A |- (APPEND = cat)
T c= part cAPPEND part ccat
D Seq2.mem_flatten
A |- (!x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))))
T c= cMEM f0 cflatten f1 c? / c/\ cMEM b0 f1 cMEM f0 b0
D List_hypermap.mem_find_face_imp_faces_eq
A |- (!d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2))))))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2
D Tame_defs2.good_list
A |- (!L. ((good_list L) = ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))))))
T c= cgood_list f0 c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0
D Tame_defs2.final_dart_list
A |- (!L. (!N. (((final_dart_list L) N) = (flatten ((filter (final_list L)) N)))))
T c= cfinal_dart_list f0 f1 cflatten cfilter * part cfinal_list f0 f1
D Tame_defs2.ntrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))))))
T c= cntrans f0 f1 f2 f3 f4 cFST cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2
D Tame_defs2.rtrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))))
T c= crtrans f0 f1 f2 f3 f4 cSND cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2
D Tame_defs2.ytrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))))))
T c= cytrans f0 f1 f2 f3 f4 cl'y f0 crtrans f0 f1 f2 f3 f4 f3
D Tame_defs2.ztrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))
T c= cztrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3
D Tame_defs2.s_flag_list
A |- (!L. (!N. (!r. (!x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))))))))))
T c= cs_flag_list f0 f1 f2 f3 c/\ ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1
D Tame_defs2.marked_list
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))))
T c= cmarked_list f0 f1 f2 f3 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3
D Tame_list.MEM_replace
A |- (!x. (!f. (!xs. (!g. (((MEM x) (((replace f) xs) g)) ==> (((MEM x) g) \/ (((MEM f) g) /\ ((MEM x) xs))))))))
T c==> cMEM f0 creplace f1 f2 f3 c\/ cMEM f0 f3 c/\ cMEM f1 f3 cMEM f0 f2
D Tame_list.MEM3_replace
A |- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))))
T c==> c/\ c~ c= f0 f1 cMEM f0 f2 cMEM f0 creplace f1 f3 f2
D Hojodcm.PPLHULJ_v0
A |- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= f4 cfind_face f0 f3 c= f5 cnext_el f4 f3 c/\ cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 c/\ cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 c< cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 cindexf f5 cztrans f0 f1 f2 f3 cNUMERAL c_0 f4
D Aq1.uniq_snd_split_norm
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cuniq cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3
D Aq1.uniq_fst_split_norm
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cuniq cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3
D Aq4.AQ4
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 call * part cloop_list f0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0
D Aq8.snd_mem_rtran1
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0
D Aq8.fst_mem_rtran1
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0
D Aq12.exists_conected_loop
A |- (!s. (((uniq s) /\ (((loop_list L) s) /\ (((MEM x) s) /\ ((MEM y) s)))) ==> (?r. (((contour_list L) r) /\ (((HD r) = x) /\ (((LAST r) = y) /\ (((set_of_list r) SUBSET (set_of_list s)) /\ (~ (r = NIL)))))))))
T c==> c/\ cuniq f0 c/\ cloop_list f1 f0 c/\ cMEM f2 f0 cMEM f3 f0 c? / c/\ ccontour_list f1 b0 c/\ c= cHD b0 f2 c/\ c= cLAST b0 f3 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list f0 c~ c= b0 cNIL
D Aq12.exists_contour_snd_fst
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r1) /\ ((MEM u) r2)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 f3 f4 c/\ c= cl'y f0 f2 f3 f5 c/\ c= cprev_el f2 f4 f6 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ c= cSND csplit_normal_list f0 f2 f9 f5 f6 f8 c/\ c= cFST csplit_normal_list f0 f2 f9 f5 f6 f7 c/\ c= cfind_face f0 f3 f9 c/\ cMEM f10 f7 cMEM f11 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
D Aq12.exists_contour_fst_snd
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 f3 f4 c/\ c= cl'y f0 f2 f3 f5 c/\ c= cprev_el f2 f4 f6 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ c= cSND csplit_normal_list f0 f2 f9 f5 f6 f8 c/\ c= cFST csplit_normal_list f0 f2 f9 f5 f6 f7 c/\ c= cfind_face f0 f3 f9 c/\ cMEM f10 f8 cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
D Aq12.exists_contour_snd_not_fst
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 f3 f4 c/\ c= cl'y f0 f2 f3 f5 c/\ c= cprev_el f2 f4 f6 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ c= cSND csplit_normal_list f0 f2 f9 f5 f6 f8 c/\ cMEM f7 f1 c/\ c= cfind_face f0 f3 f9 c/\ cMEM f10 f8 cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
D Aq12.exists_contour_not_fst_snd
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r2) /\ ((MEM v) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 f3 f4 c/\ c= cl'y f0 f2 f3 f5 c/\ c= cprev_el f2 f4 f6 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ c= cSND csplit_normal_list f0 f2 f9 f5 f6 f8 c/\ cMEM f7 f1 c/\ c= cfind_face f0 f3 f9 c/\ cMEM f10 f8 cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
D Aq12.exists_contour_not_snd_fst
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 f3 f4 c/\ c= cl'y f0 f2 f3 f5 c/\ c= cprev_el f2 f4 f6 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ cMEM f8 f1 c/\ c= cFST csplit_normal_list f0 f2 f9 f5 f6 f7 c/\ c= cfind_face f0 f3 f9 c/\ cMEM f10 f8 cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
D Aq12.exists_contour_fst_not_snd
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 f3 f4 c/\ c= cl'y f0 f2 f3 f5 c/\ c= cprev_el f2 f4 f6 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ cMEM f7 f1 c/\ c= cFST csplit_normal_list f0 f2 f9 f5 f6 f8 c/\ c= cfind_face f0 f3 f9 c/\ cMEM f10 f8 cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
- (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))
T c==> c= cnext_el f0 f1 f2 c==> c= cfind_face f3 f1 f0 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f3 f5 f0 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f3 f5 f0 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f3 f5 f0 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f3 f5 f0 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> cMEM f4 cCONS cFST csplit_normal_list f3 f5 f0 f6 f7 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f3 f5 f0 f6 f7 cNIL c==> cfinal_list f3 f9 c==> cuniq clist_of_darts f3 c==> call / c~ c= b0 cNIL f3 c==> ! c==> cMEM b0 clist_of_darts f3 cMEM c, cSND b0 cFST b0 clist_of_darts f3 c==> cMEM f6 f0 c==> cMEM f12 f0 c==> c< cindexf f2 f6 f0 cindexf f2 f12 f0 c==> c= cfind_face f3 f6 f0 c==> cMEM cFST csplit_normal_list f3 f5 f0 f6 f7 cntrans f3 f8 f5 f1 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f3 f5 f0 f6 f7 c==> cloop_list f3 cFST csplit_normal_list f3 f5 f0 f6 f7 c? / c/\ ccontour_list f3 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f3 ccat creplace f5 cCONS cSND csplit_normal_list f3 f5 f0 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f3 f5 f0 f6 f7 cNIL
+ ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))))
T c==> cMEM f0 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c==> cfinal_list f1 f0 c==> c= cfind_face f1 f6 f3 c==> cMEM f7 f0 c==> cMEM f8 f9 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f10 c\/ cMEM f9 f10 c/\ cMEM f2 f10 c= f9 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c==> cMEM f0 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f10 c\/ cMEM f0 f10 c/\ cMEM f2 f10 c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c= cnext_el f3 f6 f11 c==> cuniq clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cMEM f4 f3 c==> cMEM f12 f3 c==> c< cindexf f11 f4 f3 cindexf f11 f12 f3 c==> c= cfind_face f1 f4 f3 c==> cMEM cFST csplit_normal_list f1 f2 f3 f4 f5 cntrans f1 f10 f2 f6 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f1 f2 f3 f4 f5 c==> cloop_list f1 cFST csplit_normal_list f1 f2 f3 f4 f5 c==> c= f9 cFST csplit_normal_list f1 f2 f3 f4 f5 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f10 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= cfind_face f0 f3 f4 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f2 f1 c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c/\ c= cnext_el f4 f3 f5 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
- |- ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)
T * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
+ (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((?w. (((next_el f) x) = w)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f0 f2 f3 f6 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= f7 cSND csplit_normal_list f0 f2 f8 f6 f5 c==> c= f9 cSND csplit_normal_list f0 f2 f8 f6 f5 c==> c= cfind_face f0 f3 f8 c==> cMEM f10 f7 c==> cMEM f11 f9 c==> cMEM f2 f1 c==> cMEM f7 creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f6 f5 cNIL f1 c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f6 f5 cNIL f1 c==> cfinal_list f0 f7 c==> cfinal_list f0 f9 c==> cmarked_list f0 f1 f2 f3 c==> c? / c= cnext_el f8 f3 b0 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f6 f5 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f8 f6 f5 cNIL
- ((~ (A ==> (A \/ B))) ==> F), (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) |- ((((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) /\ ((~ (A ==> (A \/ B))) ==> F))
T c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c/\ c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
+ |- ((!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r2) /\ ((MEM v) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 f0 b4 c/\ cfinal_list b5 f1 c/\ cfinal_list b5 f2 c/\ c= cSND csplit_normal_list b5 b7 b2 b3 b4 f2 c/\ cMEM f1 b6 c/\ c= cfind_face b5 b8 b2 c/\ cMEM b0 f2 cMEM b1 f1 c? / c/\ ccontour_list b5 b9 c/\ c~ c= b9 cNIL c/\ c= cHD b9 b0 c/\ c= cLAST b9 b1 cSUBSET * part cset_of_list b9 * part cset_of_list cflatten cfilter * part cfinal_list b5 ccat creplace b7 cCONS cSND csplit_normal_list b5 b7 b2 b3 b4 cNIL b6 cCONS cFST csplit_normal_list b5 b7 b2 b3 b4 cNIL cT
+ |- (((!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) ==> ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i)) = ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i))
T c= c==> ! c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4 * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (FST (((((split_normal_list L) r) f) y) z1))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f5 f6 c==> c= cfind_face f0 f5 f2 c==> c= cfind_face f0 f3 f2 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c\/ cMEM f7 f8 c/\ cMEM f1 f8 c= f7 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f1 f8 c= f9 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c< cindexf f6 f3 f2 cindexf f6 f10 f2 c==> cMEM f11 f7 c==> cMEM f12 f9 c==> cMEM f3 f2 c==> cMEM f10 f2 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL c==> cMEM cFST csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f8 f1 f5 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= f7 cFST csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
+ (uniq (list_of_darts L)), (((next_el f) x) = w), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((final_list L) r2) |- (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cfinal_list f0 f9 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 f1 c==> cMEM f11 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f11 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f4 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f9 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f12 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
+ (!x. ((x IN (set_of_list s)) ==> (x IN (set_of_list ((final_dart_list L) N))))), (~ ((final_list L) r)), (x' IN (set_of_list s)) |- (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))
T c==> ! c==> cIN b0 * part cset_of_list f0 cIN b0 * part cset_of_list cfinal_dart_list f1 f2 c==> c~ cfinal_list f1 f3 c==> cIN f4 * part cset_of_list f0 cIN f4 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f3 cCONS cSND csplit_normal_list f1 f3 f5 f6 f7 cNIL f2 cCONS cFST csplit_normal_list f1 f3 f5 f6 f7 cNIL
- (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))
T c==> c= cfind_face f0 f1 f2 c==> cMEM f3 f4 c==> cMEM f5 f6 c==> cMEM f4 cCONS cFST csplit_normal_list f0 f7 f2 f8 f9 cNIL c==> cMEM f6 cCONS cFST csplit_normal_list f0 f7 f2 f8 f9 cNIL c==> cfinal_list f0 f6 c==> c==> cMEM f4 creplace f7 cCONS cSND csplit_normal_list f0 f7 f2 f8 f9 cNIL f10 c\/ cMEM f4 f10 c/\ cMEM f7 f10 c= f4 cSND csplit_normal_list f0 f7 f2 f8 f9 c==> c==> cMEM f6 creplace f7 cCONS cSND csplit_normal_list f0 f7 f2 f8 f9 cNIL f10 c\/ cMEM f6 f10 c/\ cMEM f7 f10 c= f6 cSND csplit_normal_list f0 f7 f2 f8 f9 c==> c= cnext_el f2 f1 f11 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f8 f2 c==> cMEM f12 f2 c==> c< cindexf f11 f8 f2 cindexf f11 f12 f2 c==> c= cfind_face f0 f8 f2 c==> cMEM cFST csplit_normal_list f0 f7 f2 f8 f9 cntrans f0 f10 f7 f1 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f7 f2 f8 f9 c==> cloop_list f0 cFST csplit_normal_list f0 f7 f2 f8 f9 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f3 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f7 cCONS cSND csplit_normal_list f0 f7 f2 f8 f9 cNIL f10 cCONS cFST csplit_normal_list f0 f7 f2 f8 f9 cNIL
+ |- (((!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))) ==> ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))) r)) = ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))) r))
T c= c==> ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cSND csplit_normal_list f0 b0 cfind_face f0 cl'y f0 b0 b1 cl'y f0 b0 b1 cprev_el b0 cl'z f0 f1 b0 b1 cntrans f0 f1 b0 b1 cNUMERAL cBIT1 c_0 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cSND csplit_normal_list f0 b0 cfind_face f0 cl'y f0 b0 b1 cl'y f0 b0 b1 cprev_el b0 cl'z f0 f1 b0 b1 cntrans f0 f1 b0 b1 cNUMERAL cBIT1 c_0 f2 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cSND csplit_normal_list f0 b0 cfind_face f0 cl'y f0 b0 b1 cl'y f0 b0 b1 cprev_el b0 cl'z f0 f1 b0 b1 cntrans f0 f1 b0 b1 cNUMERAL cBIT1 c_0 f2
+ |- (((((uniq (FST (((((split_normal_list L) r) f) y) z1))) /\ (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) /\ (((MEM u) (FST (((((split_normal_list L) r) f) y) z1))) /\ ((MEM v) (FST (((((split_normal_list L) r) f) y) z1)))))) ==> (?r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL)))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c= c==> c==> c/\ cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c/\ cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c/\ cMEM f5 cFST csplit_normal_list f0 f1 f2 f3 f4 cMEM f6 cFST csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c= cHD b0 f5 c/\ c= cLAST b0 f6 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list cFST csplit_normal_list f0 f1 f2 f3 f4 c~ c= b0 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f5 c/\ c= cLAST b0 f6 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f7 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f5 c/\ c= cLAST b0 f6 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f7 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
- (~ (r' = NIL)), (r' = s), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), (x' IN (set_of_list s)), ((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))), ((final_list L) r2) |- (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))
T c==> c~ c= f0 cNIL c==> c= f0 f1 c==> c= f2 cSND csplit_normal_list f3 f4 f5 f6 f7 c==> cMEM f2 creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f8 c==> cIN f9 * part cset_of_list f1 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cSND csplit_normal_list f3 f4 f5 f6 f7 c==> cfinal_list f3 f2 cIN f9 * part cset_of_list cflatten cfilter * part cfinal_list f3 cAPPEND creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f3 f4 f5 f6 f7 cNIL
+ (~ ((final_list L) r)), (x' = d) |- ((x' = d) /\ ((x' IN (set_of_list ((final_dart_list L) N))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c==> c~ cfinal_list f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c==> cIN f2 * part cset_of_list cfinal_dart_list f0 f4 cIN f2 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f5 f6 f7 cNIL f4 cCONS cFST csplit_normal_list f0 f1 f5 f6 f7 cNIL
+ (good_list L), ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1))))))))))))) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> cgood_list f0 c==> c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 f3 f4 c/\ c= cl'y f0 f2 f3 f5 c/\ c= cprev_el f2 f4 f6 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ c\/ cMEM f7 creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cMEM f7 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL c/\ c\/ cMEM f8 creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cMEM f8 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL c/\ c= cfind_face f0 f3 f9 c/\ cMEM f10 f8 cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f11 f6 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f8 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (r2 = (SND (((((split_normal_list L) r) f) y) z1))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f1 f6 c==> c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f11 f6 c= f11 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((final_list L) r2) /\ ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c/\ cfinal_list f0 f7 c/\ c\/ cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 cMEM f8 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL c/\ c\/ cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 cMEM f7 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL c/\ c= cfind_face f0 f4 f9 c/\ cMEM f10 f7 cMEM f11 f8 c==> cfinal_list f0 f8 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ |- (((!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((MEM r2) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r1) /\ ((MEM v) r2)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) ==> ((\z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((MEM r2) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r1) /\ ((MEM v) r2)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) z1)) = ((\z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((MEM r2) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r1) /\ ((MEM v) r2)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) z1))
T c= c==> ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ c= cSND csplit_normal_list b1 b3 f4 f1 b0 f3 c/\ cMEM f2 b2 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f3 cMEM f6 f2 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f5 c/\ c= cLAST b5 f6 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ c= cSND csplit_normal_list b1 b3 f4 f1 b0 f3 c/\ cMEM f2 b2 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f3 cMEM f6 f2 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f5 c/\ c= cLAST b5 f6 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL f7 * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ c= cSND csplit_normal_list b1 b3 f4 f1 b0 f3 c/\ cMEM f2 b2 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f3 cMEM f6 f2 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f5 c/\ c= cLAST b5 f6 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL f7
- (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((final_list L) r2) |- ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) /\ ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))
T c==> c==> cMEM f0 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c\/ cMEM f0 f6 c/\ cMEM f1 f6 c= f0 cSND csplit_normal_list f2 f1 f3 f4 f5 c==> cMEM f7 f0 c==> cMEM f8 f9 c==> cfinal_list f2 f9 c/\ c==> cMEM f0 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c\/ cMEM f0 f6 c/\ cMEM f1 f6 c= f0 cSND csplit_normal_list f2 f1 f3 f4 f5 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c\/ cMEM f9 f6 c/\ cMEM f1 f6 c= f9 cSND csplit_normal_list f2 f1 f3 f4 f5 c==> c= cnext_el f3 f10 f11 c==> cuniq clist_of_darts f2 c==> call / c~ c= b0 cNIL f2 c==> ! c==> cMEM b0 clist_of_darts f2 cMEM c, cSND b0 cFST b0 clist_of_darts f2 c==> cMEM f4 f3 c==> cMEM f12 f3 c==> c< cindexf f11 f4 f3 cindexf f11 f12 f3 c==> c= cfind_face f2 f4 f3 c==> cMEM cFST csplit_normal_list f2 f1 f3 f4 f5 cntrans f2 f6 f1 f10 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f2 f1 f3 f4 f5 c==> cloop_list f2 cFST csplit_normal_list f2 f1 f3 f4 f5 c==> c= f0 cFST csplit_normal_list f2 f1 f3 f4 f5 c==> c= f9 cFST csplit_normal_list f2 f1 f3 f4 f5 c? / c/\ ccontour_list f2 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f2 ccat creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f2 f1 f3 f4 f5 cNIL
+ (r2 = (FST (((((split_normal_list L) r) f) y) z1))), (x' IN (set_of_list s)), ((final_list L) r2) |- (((set_of_list s) SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> c= f0 cFST csplit_normal_list f1 f2 f3 f4 f5 c==> cIN f6 * part cset_of_list f7 c==> cfinal_list f1 f0 c==> cSUBSET * part cset_of_list f7 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5 cIN f6 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ |- (((!x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) ==> ((\x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) x)) = ((\x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) x))
T c= c==> ! ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 * / ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0 * / ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0
+ |- (((?s. (r' = s)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c= c==> c? / c= f0 b0 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f2 c/\ c= cLAST b0 f3 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f4 cCONS cSND csplit_normal_list f1 f4 f5 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f1 f4 f5 f6 f7 cNIL c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f2 c/\ c= cLAST b0 f3 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f4 cCONS cSND csplit_normal_list f1 f4 f5 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f1 f4 f5 f6 f7 cNIL
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM v) r2), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM v) r2) /\ (((MEM u) r1) ==> (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (r2 = (SND (((((split_normal_list L) r) f) y) z1))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f10 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f8 f9 c==> cMEM f11 f10 c==> cMEM f1 f6 c==> c= f10 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f9 f6 c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))), ((contour_list L) s) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> c/\ c~ c= f2 cNIL c/\ c= cHD f2 f3 c/\ c= cLAST f2 f4 cSUBSET * part cset_of_list f2 * part cset_of_list cfinal_dart_list f0 f5 c==> ccontour_list f0 f2 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f3 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f6 f7 f8 cNIL f5 cCONS cFST csplit_normal_list f0 f1 f6 f7 f8 cNIL
+ |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))) x)
T * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 b0 f3 c/\ c= cl'y f0 f2 b0 f4 c/\ c= cprev_el f2 f3 f5 c/\ cfinal_list f0 f6 c/\ cfinal_list f0 f7 c/\ cMEM f7 f1 c/\ c= cFST csplit_normal_list f0 f2 f8 f4 f5 f6 c/\ c= cfind_face f0 b0 f8 c/\ cMEM f9 f7 cMEM f10 f6 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f10 c/\ c= cLAST b1 f9 cSUBSET * part cset_of_list b1 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f4 f5 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f8 f4 f5 cNIL f11
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c= f8 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f9 f4 c==> cMEM f10 f8 c==> cMEM f6 f1 c==> cMEM f11 f1 c==> cMEM f5 f12 c==> cMEM f8 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f12 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f8 c==> c< cindexf f3 f6 f1 cindexf f3 f11 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cSND csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f12 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cSND csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f12 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- |- ((\r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))) r2)
T * / ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b7 c/\ cgood_list_nodes b7 c/\ cmarked_list b7 b8 b9 b10 c/\ c~ cfinal_list b7 b9 c/\ c= cl'z b7 b8 b9 b10 f0 c/\ c= cl'y b7 b9 b10 b5 c/\ c= cprev_el b9 f0 b6 c/\ cfinal_list b7 b1 c/\ cfinal_list b7 b0 c/\ c= cSND csplit_normal_list b7 b9 b4 b5 b6 b0 c/\ cMEM b1 b8 c/\ c= cfind_face b7 b10 b4 c/\ cMEM b3 b0 cMEM b2 b1 c? / c/\ ccontour_list b7 b11 c/\ c~ c= b11 cNIL c/\ c= cHD b11 b2 c/\ c= cLAST b11 b3 cSUBSET * part cset_of_list b11 * part cset_of_list cflatten cfilter * part cfinal_list b7 ccat creplace b9 cCONS cSND csplit_normal_list b7 b9 b4 b5 b6 cNIL b8 cCONS cFST csplit_normal_list b7 b9 b4 b5 b6 cNIL f1
+ |- (((all a) s) = (!x. (((MEM x) s) ==> (a x))))
T c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0
+ (~ ((final_list L) r)), ((MEM d) l), ((MEM l) N), ((final_list L) l) |- ((MEM l) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N))
T c==> c~ cfinal_list f0 f1 c==> cMEM f2 f3 c==> cMEM f3 f4 c==> cfinal_list f0 f3 cMEM f3 creplace f1 cCONS cSND csplit_normal_list f0 f1 f5 f6 f7 cNIL f4
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1))), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c/\ c= cfind_face f0 f4 f7 c/\ cMEM f8 f9 cMEM f10 f11 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f11 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ |- (((!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))) ==> ((\N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))) N)) = ((\N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))) N))
T c= c==> ! ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= b3 cfind_face f0 b2 c= b4 cnext_el b3 b2 c/\ cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 c/\ cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 c< cindexf b4 cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 cindexf b4 cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 * / ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= b3 cfind_face f0 b2 c= b4 cnext_el b3 b2 c/\ cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 c/\ cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 c< cindexf b4 cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 cindexf b4 cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 f1 * / ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= b3 cfind_face f0 b2 c= b4 cnext_el b3 b2 c/\ cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 c/\ cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 c< cindexf b4 cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 cindexf b4 cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 f1
+ |- ((\L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))) L)
T * / c= cMEM f0 cflatten b0 c? / c/\ cMEM b1 b0 cMEM f0 b1 f1
+ (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = ((((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c= c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f4 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f6 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f6 f7 f8 cNIL c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 call * part cloop_list f0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f4 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f6 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f6 f7 f8 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= cfind_face f0 f3 f4 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f2 f1 c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
- |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) /\ (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c/\ c= cfind_face f0 f4 f7 c==> cMEM f10 f9 c==> cMEM f11 f8 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f9 f6 c/\ cMEM f1 f6 c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f7 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) |- (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 f3 f4 c/\ c= cl'y f0 f2 f3 f5 c/\ c= cprev_el f2 f4 f6 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ c\/ cMEM f7 creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cMEM f7 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL c/\ c\/ cMEM f8 creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cMEM f8 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL c/\ c= cfind_face f0 f3 f9 c/\ cMEM f10 f8 cMEM f11 f7 c/\ c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 f3 f4 c/\ c= cl'y f0 f2 f3 f5 c/\ c= cprev_el f2 f4 f6 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ c\/ cMEM f7 creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cMEM f7 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL c/\ c\/ cMEM f8 creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cMEM f8 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL c/\ c= cfind_face f0 f3 f9 c/\ cMEM f10 f8 cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
+ |- (((!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))) ==> ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))) r)) = ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))) r))
T c= c==> ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 b0 c/\ c= cl'z f0 f1 b0 b1 f2 c/\ c= cl'y f0 b0 b1 f3 c/\ c= cprev_el b0 f2 f4 c/\ cfinal_list f0 f5 c/\ cfinal_list f0 f6 c/\ cMEM f6 f1 c/\ c= cFST csplit_normal_list f0 b0 f7 f3 f4 f5 c/\ c= cfind_face f0 b1 f7 c/\ cMEM f8 f6 cMEM f9 f5 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 f9 c/\ c= cLAST b2 f8 cSUBSET * part cset_of_list b2 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b0 cCONS cSND csplit_normal_list f0 b0 f7 f3 f4 cNIL f1 cCONS cFST csplit_normal_list f0 b0 f7 f3 f4 cNIL * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 b0 c/\ c= cl'z f0 f1 b0 b1 f2 c/\ c= cl'y f0 b0 b1 f3 c/\ c= cprev_el b0 f2 f4 c/\ cfinal_list f0 f5 c/\ cfinal_list f0 f6 c/\ cMEM f6 f1 c/\ c= cFST csplit_normal_list f0 b0 f7 f3 f4 f5 c/\ c= cfind_face f0 b1 f7 c/\ cMEM f8 f6 cMEM f9 f5 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 f9 c/\ c= cLAST b2 f8 cSUBSET * part cset_of_list b2 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b0 cCONS cSND csplit_normal_list f0 b0 f7 f3 f4 cNIL f1 cCONS cFST csplit_normal_list f0 b0 f7 f3 f4 cNIL f10 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 b0 c/\ c= cl'z f0 f1 b0 b1 f2 c/\ c= cl'y f0 b0 b1 f3 c/\ c= cprev_el b0 f2 f4 c/\ cfinal_list f0 f5 c/\ cfinal_list f0 f6 c/\ cMEM f6 f1 c/\ c= cFST csplit_normal_list f0 b0 f7 f3 f4 f5 c/\ c= cfind_face f0 b1 f7 c/\ cMEM f8 f6 cMEM f9 f5 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 f9 c/\ c= cLAST b2 f8 cSUBSET * part cset_of_list b2 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b0 cCONS cSND csplit_normal_list f0 b0 f7 f3 f4 cNIL f1 cCONS cFST csplit_normal_list f0 b0 f7 f3 f4 cNIL f10
+ (~ ((final_list L) r)) |- (((!x. (((\s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))) x) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))) ==> ((?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))) = ((?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c~ cfinal_list f0 f1 c= c==> ! c==> * / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f2 c/\ c= cLAST b1 f3 cSUBSET * part cset_of_list b1 * part cset_of_list cfinal_dart_list f0 f4 b0 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f2 c/\ c= cLAST b1 f3 cSUBSET * part cset_of_list b1 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f5 f6 f7 cNIL f4 cCONS cFST csplit_normal_list f0 f1 f5 f6 f7 cNIL c==> c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f2 c/\ c= cLAST b0 f3 cSUBSET * part cset_of_list b0 * part cset_of_list cfinal_dart_list f0 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f2 c/\ c= cLAST b0 f3 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f5 f6 f7 cNIL f4 cCONS cFST csplit_normal_list f0 f1 f5 f6 f7 cNIL c==> c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f2 c/\ c= cLAST b0 f3 cSUBSET * part cset_of_list b0 * part cset_of_list cfinal_dart_list f0 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f2 c/\ c= cLAST b0 f3 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f5 f6 f7 cNIL f4 cCONS cFST csplit_normal_list f0 f1 f5 f6 f7 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (SND (((((split_normal_list L) r) f) y) z1))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cSND csplit_normal_list f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f5 f6 c==> c= f7 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c= f8 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c< cindexf f6 f3 f2 cindexf f6 f9 f2 c==> cMEM f10 f7 c==> cMEM f11 f8 c==> cMEM f3 f2 c==> cMEM f9 f2 c==> cMEM f1 f12 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f12 c==> cMEM cSND csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f12 f1 f5 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> cfinal_list f0 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f12 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM v) r2), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM u) r1) ==> (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (r2 = (SND (((((split_normal_list L) r) f) y) z1))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f10 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f11 f10 c==> cMEM f1 f6 c==> c= f10 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f9 f6 c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cfind_face f0 f3 f4 c==> c= cfind_face f0 f8 f4 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f10 f1 c/\ cMEM f2 f1 c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c< cindexf f5 f8 f4 cindexf f5 f6 f4 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f8 f4 c==> cMEM f6 f4 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> cMEM f10 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c==> cMEM cFST csplit_normal_list f0 f2 f4 f8 f7 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 c/\ c= cl'y f0 f1 f2 f3 c==> c= cprev_el f1 f5 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f3 f6 cNIL f4 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f3 f6 cNIL f4 c==> c= cfind_face f0 f2 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cMEM f1 f4 c==> c= f7 cSND csplit_normal_list f0 f1 f9 f3 f6 c==> c= f8 cSND csplit_normal_list f0 f1 f9 f3 f6 c==> ! c==> cMEM b0 cntrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f2 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f3 f6 cNIL f4 cCONS cFST csplit_normal_list f0 f1 f9 f3 f6 cNIL
- (~ (r' = NIL)) |- ((NIL = r') = F)
T c==> c~ c= f0 cNIL c= c= cNIL f0 cF
- (~ (r' = NIL)), (r' = s), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), (x' IN (set_of_list s)), ((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))), ((final_list L) r2) |- ((x' IN (set_of_list s)) /\ (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> c~ c= f0 cNIL c==> c= f0 f1 c==> c= f2 cFST csplit_normal_list f3 f4 f5 f6 f7 c==> cIN f8 * part cset_of_list f1 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cFST csplit_normal_list f3 f4 f5 f6 f7 c==> cfinal_list f3 f2 c/\ cIN f8 * part cset_of_list f1 cIN f8 * part cset_of_list cflatten cfilter * part cfinal_list f3 cAPPEND creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f9 cCONS cFST csplit_normal_list f3 f4 f5 f6 f7 cNIL
+ (uniq (FST (((((split_normal_list L) r) f) y) z1))), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((MEM u) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM v) (FST (((((split_normal_list L) r) f) y) z1))), ((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= f5 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f6 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f7 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cfinal_list f0 f5 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f6 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
+ |- ((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))) = T)
T c= ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 b0 f3 c/\ c= cl'y f0 f2 b0 f4 c/\ c= cprev_el f2 f3 f5 c/\ cfinal_list f0 f6 c/\ cfinal_list f0 f7 c/\ c\/ cMEM f6 creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f4 f5 cNIL f1 cMEM f6 cCONS cFST csplit_normal_list f0 f2 f8 f4 f5 cNIL c/\ c\/ cMEM f7 creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f4 f5 cNIL f1 cMEM f7 cCONS cFST csplit_normal_list f0 f2 f8 f4 f5 cNIL c/\ c= cfind_face f0 b0 f8 c/\ cMEM f9 f7 cMEM f10 f6 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f10 c/\ c= cLAST b1 f9 cSUBSET * part cset_of_list b1 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f4 f5 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f8 f4 f5 cNIL cT
+ |- (((!l. ((x IN (set_of_list l)) = ((MEM x) l))) ==> ((\l. ((x IN (set_of_list l)) = ((MEM x) l))) l)) = ((\l. ((x IN (set_of_list l)) = ((MEM x) l))) l))
T c= c==> ! c= cIN f0 * part cset_of_list b0 cMEM f0 b0 * / c= cIN f0 * part cset_of_list b0 cMEM f0 b0 f1 * / c= cIN f0 * part cset_of_list b0 cMEM f0 b0 f1
- (((next_el f) x) = w), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((final_list L) r2) |- ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))
T c==> c= cnext_el f0 f1 f2 c==> c==> cMEM f3 creplace f4 cCONS cSND csplit_normal_list f5 f4 f0 f6 f7 cNIL f8 c\/ cMEM f3 f8 c/\ cMEM f4 f8 c= f3 cSND csplit_normal_list f5 f4 f0 f6 f7 c==> c==> cMEM f9 creplace f4 cCONS cSND csplit_normal_list f5 f4 f0 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f4 f8 c= f9 cSND csplit_normal_list f5 f4 f0 f6 f7 c==> cMEM f10 f3 c==> cMEM f11 f9 c==> cfinal_list f5 f9 c==> cuniq clist_of_darts f5 c==> call / c~ c= b0 cNIL f5 c==> ! c==> cMEM b0 clist_of_darts f5 cMEM c, cSND b0 cFST b0 clist_of_darts f5 c==> cMEM f6 f0 c==> cMEM f12 f0 c==> c< cindexf f2 f6 f0 cindexf f2 f12 f0 c==> c= cfind_face f5 f6 f0 c==> cMEM cFST csplit_normal_list f5 f4 f0 f6 f7 cntrans f5 f8 f4 f1 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f5 f4 f0 f6 f7 c==> cloop_list f5 cFST csplit_normal_list f5 f4 f0 f6 f7 c==> c= f3 cFST csplit_normal_list f5 f4 f0 f6 f7 c==> c= f9 cFST csplit_normal_list f5 f4 f0 f6 f7 c? / c/\ ccontour_list f5 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f5 ccat creplace f4 cCONS cSND csplit_normal_list f5 f4 f0 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f5 f4 f0 f6 f7 cNIL
- |- (T = (!A. (!B. ((~ (A ==> (B \/ A))) ==> F))))
T c= cT ! ! c==> c~ c==> b0 c\/ b1 b0 cF
- |- (((!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) ==> ((\t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) t)) = ((\t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) t))
T c= c==> ! c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 * / c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 f1 * / c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 f1
- |- ((!A. (A ==> (A \/ T))) = ((T ==> (T \/ T)) /\ (F ==> (F \/ T))))
T c= ! c==> b0 c\/ b0 cT c/\ c==> cT c\/ cT cT c==> cF c\/ cF cT
- |- (((!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))) ==> ((\f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))) f)) = ((\f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))) f))
T c= c==> ! ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c~ cfinal_list b3 b5 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 b1 c/\ c= cprev_el b5 f0 b2 c/\ cfinal_list b3 f1 c/\ cfinal_list b3 f2 c/\ cMEM f1 b4 c/\ c= cFST csplit_normal_list b3 b5 b0 b1 b2 f2 c/\ c= cfind_face b3 b6 b0 c/\ cMEM f3 f2 cMEM f4 f1 c? / c/\ ccontour_list b3 b7 c/\ c~ c= b7 cNIL c/\ c= cHD b7 f4 c/\ c= cLAST b7 f3 cSUBSET * part cset_of_list b7 * part cset_of_list cflatten cfilter * part cfinal_list b3 ccat creplace b5 cCONS cSND csplit_normal_list b3 b5 b0 b1 b2 cNIL b4 cCONS cFST csplit_normal_list b3 b5 b0 b1 b2 cNIL * / ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c~ cfinal_list b3 b5 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 b1 c/\ c= cprev_el b5 f0 b2 c/\ cfinal_list b3 f1 c/\ cfinal_list b3 f2 c/\ cMEM f1 b4 c/\ c= cFST csplit_normal_list b3 b5 b0 b1 b2 f2 c/\ c= cfind_face b3 b6 b0 c/\ cMEM f3 f2 cMEM f4 f1 c? / c/\ ccontour_list b3 b7 c/\ c~ c= b7 cNIL c/\ c= cHD b7 f4 c/\ c= cLAST b7 f3 cSUBSET * part cset_of_list b7 * part cset_of_list cflatten cfilter * part cfinal_list b3 ccat creplace b5 cCONS cSND csplit_normal_list b3 b5 b0 b1 b2 cNIL b4 cCONS cFST csplit_normal_list b3 b5 b0 b1 b2 cNIL f5 * / ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c~ cfinal_list b3 b5 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 b1 c/\ c= cprev_el b5 f0 b2 c/\ cfinal_list b3 f1 c/\ cfinal_list b3 f2 c/\ cMEM f1 b4 c/\ c= cFST csplit_normal_list b3 b5 b0 b1 b2 f2 c/\ c= cfind_face b3 b6 b0 c/\ cMEM f3 f2 cMEM f4 f1 c? / c/\ ccontour_list b3 b7 c/\ c~ c= b7 cNIL c/\ c= cHD b7 f4 c/\ c= cLAST b7 f3 cSUBSET * part cset_of_list b7 * part cset_of_list cflatten cfilter * part cfinal_list b3 ccat creplace b5 cCONS cSND csplit_normal_list b3 b5 b0 b1 b2 cNIL b4 cCONS cFST csplit_normal_list b3 b5 b0 b1 b2 cNIL f5
+ |- (((!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) ==> ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)) = ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s))
T c= c==> ! ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
+ (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((((\r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL))))))) r') ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = T)
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f0 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 c==> cfinal_list f1 f0 c= c==> * / c/\ ccontour_list f1 b0 c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 c~ c= b0 cNIL f9 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL cT
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> cMEM f10 f6 c==> cMEM f11 f9 c==> cMEM f7 f4 c==> cMEM f12 f4 c==> cMEM f2 f1 c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> c< cindexf f5 f7 f4 cindexf f5 f12 f4 c==> c= cfind_face f0 f7 f4 c==> cMEM cSND csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (FST (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r2) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (T = ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cFST csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> cMEM f9 f7 c==> cMEM f10 f11 c==> cMEM f11 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c= cT c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f6 f1 f4 c/\ c~ cfinal_list f0 f1 c/\ c= cl'z f0 f6 f1 f4 f2 c/\ c= cl'y f0 f1 f4 f5 c/\ c= cprev_el f1 f2 f3 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f11 c/\ cMEM f11 f6 c/\ c= cFST csplit_normal_list f0 f1 f8 f5 f3 f7 c/\ c= cfind_face f0 f4 f8 c/\ cMEM f10 f11 cMEM f9 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ ((MEM r1) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f9 f6 c/\ cMEM f1 f6 cMEM f9 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM u) r1) /\ ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> (((MEM r) N) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f8 f9 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f9 f6 c/\ cMEM f1 f6 c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f1 f6 c==> c= f11 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (((all a) s) = (!x. (((MEM x) s) ==> (a x)))) |- ((!x. (((MEM x) s) ==> (a x))) = ((all a) s))
T c==> c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0 c= ! c==> cMEM b0 f1 * f0 b0 call f0 f1
+ (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) |- ((((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c= c==> c==> c/\ cMEM f2 cfinal_dart_list f0 f1 cMEM f3 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f2 c/\ c= cLAST b0 f3 cSUBSET * part cset_of_list b0 * part cset_of_list cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f2 c/\ c= cLAST b0 f3 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f4 cCONS cSND csplit_normal_list f0 f4 f5 f6 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f4 f5 f6 f7 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f2 c/\ c= cLAST b0 f3 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f4 cCONS cSND csplit_normal_list f0 f4 f5 f6 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f4 f5 f6 f7 cNIL
+ |- (((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))) L))
T c= c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cprev_el b2 f0 f2 c/\ cfinal_list b0 f3 c/\ cfinal_list b0 f4 c/\ c= cSND csplit_normal_list b0 b2 f5 f1 f2 f4 c/\ cMEM f3 b1 c/\ c= cfind_face b0 b3 f5 c/\ cMEM f6 f4 cMEM f7 f3 c? / c/\ ccontour_list b0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 f7 c/\ c= cLAST b4 f6 cSUBSET * part cset_of_list b4 * part cset_of_list cflatten cfilter * part cfinal_list b0 ccat creplace b2 cCONS cSND csplit_normal_list b0 b2 f5 f1 f2 cNIL b1 cCONS cFST csplit_normal_list b0 b2 f5 f1 f2 cNIL * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cprev_el b2 f0 f2 c/\ cfinal_list b0 f3 c/\ cfinal_list b0 f4 c/\ c= cSND csplit_normal_list b0 b2 f5 f1 f2 f4 c/\ cMEM f3 b1 c/\ c= cfind_face b0 b3 f5 c/\ cMEM f6 f4 cMEM f7 f3 c? / c/\ ccontour_list b0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 f7 c/\ c= cLAST b4 f6 cSUBSET * part cset_of_list b4 * part cset_of_list cflatten cfilter * part cfinal_list b0 ccat creplace b2 cCONS cSND csplit_normal_list b0 b2 f5 f1 f2 cNIL b1 cCONS cFST csplit_normal_list b0 b2 f5 f1 f2 cNIL f8 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cprev_el b2 f0 f2 c/\ cfinal_list b0 f3 c/\ cfinal_list b0 f4 c/\ c= cSND csplit_normal_list b0 b2 f5 f1 f2 f4 c/\ cMEM f3 b1 c/\ c= cfind_face b0 b3 f5 c/\ cMEM f6 f4 cMEM f7 f3 c? / c/\ ccontour_list b0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 f7 c/\ c= cLAST b4 f6 cSUBSET * part cset_of_list b4 * part cset_of_list cflatten cfilter * part cfinal_list b0 ccat creplace b2 cCONS cSND csplit_normal_list b0 b2 f5 f1 f2 cNIL b1 cCONS cFST csplit_normal_list b0 b2 f5 f1 f2 cNIL f8
+ (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) /\ (?l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l))))
T c==> c= f0 cFST csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f6 cFST csplit_normal_list f1 f2 f3 f4 f5 c==> cfinal_list f1 f0 c/\ cMEM f6 cFST csplit_normal_list f1 f2 f3 f4 f5 c? / c/\ c/\ cfinal_list f1 b0 c\/ cMEM b0 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f7 cMEM b0 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL cMEM f6 b0
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L))
T c= c==> ! ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0
+ |- ((\s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) s1)
T * / ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
+ (uniq (FST (((((split_normal_list L) r) f) y) z1))), (r1 = (FST (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= f5 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f6 f5 c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cfinal_list f0 f7 c==> c= f7 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f8 cFST csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f6 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f9 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
+ (~ ((final_list L) r)), (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))))))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) N), ((MEM r2) N), ((final_list L) r1), ((final_list L) r2) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c/\ ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f2 cMEM b1 cfinal_dart_list f0 f2 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f2 ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f2 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f3 cMEM ce_list b2 ccat cs_list f0 f1 f3 cfinal_dart_list f0 f2 c==> cMEM f4 f5 c==> cMEM f6 f7 c==> cMEM f5 f2 c==> cMEM f7 f2 c==> cfinal_list f0 f5 c==> cfinal_list f0 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f4 c/\ c= cLAST b0 f6 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f9 f10 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f8 f9 f10 cNIL
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) /\ ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f0 f2 f3 f6 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= f7 cSND csplit_normal_list f0 f2 f8 f6 f5 c==> c= f9 cSND csplit_normal_list f0 f2 f8 f6 f5 c==> c= cfind_face f0 f3 f8 c==> cMEM f10 f7 c==> cMEM f11 f9 c==> cMEM f2 f1 c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f6 f5 cNIL f1 c==> cfinal_list f0 f9 c==> cmarked_list f0 f1 f2 f3 c/\ ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f8 f3 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f6 f5 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f8 f6 f5 cNIL
+ (~ (r' = NIL)), ((HD r') = u), ((LAST r') = v), (r' = s), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))), ((contour_list L) r'), ((final_list L) r2) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ c= f0 cNIL c==> c= cHD f0 f1 c==> c= cLAST f0 f2 c==> c= f0 f3 c==> c= f4 cSND csplit_normal_list f5 f6 f7 f8 f9 c==> cMEM f4 creplace f6 cCONS cSND csplit_normal_list f5 f6 f7 f8 f9 cNIL f10 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cSND csplit_normal_list f5 f6 f7 f8 f9 c==> ccontour_list f5 f0 c==> cfinal_list f5 f4 c? / c/\ ccontour_list f5 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f5 ccat creplace f6 cCONS cSND csplit_normal_list f5 f6 f7 f8 f9 cNIL f10 cCONS cFST csplit_normal_list f5 f6 f7 f8 f9 cNIL
+ |- ((!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))) = T)
T c= ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 b0 c/\ c= cl'z f0 f1 b0 b1 f2 c/\ c= cl'y f0 b0 b1 f3 c/\ c= cprev_el b0 f2 f4 c/\ cfinal_list f0 f5 c/\ cfinal_list f0 f6 c/\ c\/ cMEM f5 creplace b0 cCONS cSND csplit_normal_list f0 b0 f7 f3 f4 cNIL f1 cMEM f5 cCONS cFST csplit_normal_list f0 b0 f7 f3 f4 cNIL c/\ c\/ cMEM f6 creplace b0 cCONS cSND csplit_normal_list f0 b0 f7 f3 f4 cNIL f1 cMEM f6 cCONS cFST csplit_normal_list f0 b0 f7 f3 f4 cNIL c/\ c= cfind_face f0 b1 f7 c/\ cMEM f8 f6 cMEM f9 f5 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 f9 c/\ c= cLAST b2 f8 cSUBSET * part cset_of_list b2 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b0 cCONS cSND csplit_normal_list f0 b0 f7 f3 f4 cNIL f1 cCONS cFST csplit_normal_list f0 b0 f7 f3 f4 cNIL cT
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
+ |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cprev_el b2 f0 f2 c/\ cfinal_list b0 f3 c/\ cfinal_list b0 f4 c/\ cMEM f3 b1 c/\ c= cFST csplit_normal_list b0 b2 f5 f1 f2 f4 c/\ c= cfind_face b0 b3 f5 c/\ cMEM f6 f4 cMEM f7 f3 c? / c/\ ccontour_list b0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 f7 c/\ c= cLAST b4 f6 cSUBSET * part cset_of_list b4 * part cset_of_list cflatten cfilter * part cfinal_list b0 ccat creplace b2 cCONS cSND csplit_normal_list b0 b2 f5 f1 f2 cNIL b1 cCONS cFST csplit_normal_list b0 b2 f5 f1 f2 cNIL f8
+ (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (!w. (((\w. (((next_el f) x) = w)) w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f0 f2 f3 f6 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= f7 cSND csplit_normal_list f0 f2 f8 f6 f5 c==> c= f9 cSND csplit_normal_list f0 f2 f8 f6 f5 c==> c= cfind_face f0 f3 f8 c==> cMEM f10 f7 c==> cMEM f11 f9 c==> cMEM f2 f1 c==> cMEM f7 creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f6 f5 cNIL f1 c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f6 f5 cNIL f1 c==> cfinal_list f0 f7 c==> cfinal_list f0 f9 c==> cmarked_list f0 f1 f2 f3 ! c==> * / c= cnext_el f8 f3 b1 b0 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f10 c/\ c= cLAST b1 f11 cSUBSET * part cset_of_list b1 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f6 f5 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f8 f6 f5 cNIL
+ |- (((!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) ==> ((\s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) s2)) = ((\s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) s2))
T c= c==> ! c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 * / c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2 * / c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) /\ ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> (((MEM r) N) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c==> c= cfind_face f0 f4 f8 c==> cMEM f10 f9 c==> cMEM f11 f7 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c\/ cMEM f7 f6 c/\ cMEM f1 f6 c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> cMEM f1 f6 c==> c= f9 cSND csplit_normal_list f0 f1 f8 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c/\ c\/ cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cMEM f7 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c/\ c= cfind_face f0 f4 f8 c/\ cMEM f9 f7 cMEM f10 f11 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> cfinal_list f0 f11 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f9 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
- |- (((!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) ==> ((\z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) z1)) = ((\z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) z1))
T c= c==> ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ c= cSND csplit_normal_list b1 b3 f4 f1 b0 f3 c/\ cMEM f2 b2 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f3 cMEM f6 f2 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f6 c/\ c= cLAST b5 f5 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ c= cSND csplit_normal_list b1 b3 f4 f1 b0 f3 c/\ cMEM f2 b2 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f3 cMEM f6 f2 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f6 c/\ c= cLAST b5 f5 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL f7 * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ c= cSND csplit_normal_list b1 b3 f4 f1 b0 f3 c/\ cMEM f2 b2 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f3 cMEM f6 f2 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f6 c/\ c= cLAST b5 f5 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL f7
- |- (((!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))) ==> ((\v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))) v)) = ((\v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))) v))
T c= c==> ! ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ cfinal_list b4 f1 c/\ cfinal_list b4 f2 c/\ c= cSND csplit_normal_list b4 b6 b1 b2 b3 f2 c/\ cMEM f1 b5 c/\ c= cfind_face b4 b7 b1 c/\ cMEM b0 f2 cMEM f3 f1 c? / c/\ ccontour_list b4 b8 c/\ c~ c= b8 cNIL c/\ c= cHD b8 f3 c/\ c= cLAST b8 b0 cSUBSET * part cset_of_list b8 * part cset_of_list cflatten cfilter * part cfinal_list b4 ccat creplace b6 cCONS cSND csplit_normal_list b4 b6 b1 b2 b3 cNIL b5 cCONS cFST csplit_normal_list b4 b6 b1 b2 b3 cNIL * / ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ cfinal_list b4 f1 c/\ cfinal_list b4 f2 c/\ c= cSND csplit_normal_list b4 b6 b1 b2 b3 f2 c/\ cMEM f1 b5 c/\ c= cfind_face b4 b7 b1 c/\ cMEM b0 f2 cMEM f3 f1 c? / c/\ ccontour_list b4 b8 c/\ c~ c= b8 cNIL c/\ c= cHD b8 f3 c/\ c= cLAST b8 b0 cSUBSET * part cset_of_list b8 * part cset_of_list cflatten cfilter * part cfinal_list b4 ccat creplace b6 cCONS cSND csplit_normal_list b4 b6 b1 b2 b3 cNIL b5 cCONS cFST csplit_normal_list b4 b6 b1 b2 b3 cNIL f4 * / ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ cfinal_list b4 f1 c/\ cfinal_list b4 f2 c/\ c= cSND csplit_normal_list b4 b6 b1 b2 b3 f2 c/\ cMEM f1 b5 c/\ c= cfind_face b4 b7 b1 c/\ cMEM b0 f2 cMEM f3 f1 c? / c/\ ccontour_list b4 b8 c/\ c~ c= b8 cNIL c/\ c= cHD b8 f3 c/\ c= cLAST b8 b0 cSUBSET * part cset_of_list b8 * part cset_of_list cflatten cfilter * part cfinal_list b4 ccat creplace b6 cCONS cSND csplit_normal_list b4 b6 b1 b2 b3 cNIL b5 cCONS cFST csplit_normal_list b4 b6 b1 b2 b3 cNIL f4
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
+ ((HD r') = u), ((LAST r') = v), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL)))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((contour_list L) r'), ((final_list L) r2) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c= cHD f0 f1 c==> c= cLAST f0 f2 c==> c= f3 cSND csplit_normal_list f4 f5 f6 f7 f8 c==> c/\ c= cLAST f0 f2 c/\ cSUBSET * part cset_of_list f0 * part cset_of_list cSND csplit_normal_list f4 f5 f6 f7 f8 c~ c= f0 cNIL c==> cMEM f3 creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 c==> ccontour_list f4 f0 c==> cfinal_list f4 f3 c? / c/\ ccontour_list f4 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f4 ccat creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 cCONS cFST csplit_normal_list f4 f5 f6 f7 f8 cNIL
+ (!x. ((x IN (set_of_list s)) ==> (x IN (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), (x' IN (set_of_list s)), ((final_list L) r2) |- (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))
T c==> ! c==> cIN b0 * part cset_of_list f0 cIN b0 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c= f6 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f7 c==> cIN f8 * part cset_of_list f0 c==> cfinal_list f1 f6 cIN f8 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f7 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ |- (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ ((MEM r2) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)))))
T c==> cMEM f0 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c\/ cMEM f0 f6 c/\ cMEM f1 f6 cMEM f0 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL
+ (~ ((final_list L) r)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((final_list L) r1), ((((marked_list L) N) r) x) |- (((final_list L) r2) ==> (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r1) N) ==> (((MEM r2) N) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c==> cfinal_list f0 f8 c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 c==> c= cfind_face f0 f4 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cMEM f7 f6 c==> cMEM f8 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL
+ (~ ((final_list L) r)), (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))), ((contour_list L) s) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> c/\ ccontour_list f0 f2 c/\ c~ c= f2 cNIL c/\ c= cHD f2 f3 c/\ c= cLAST f2 f4 cSUBSET * part cset_of_list f2 * part cset_of_list cfinal_dart_list f0 f5 c==> ccontour_list f0 f2 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f3 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f6 f7 f8 cNIL f5 cCONS cFST csplit_normal_list f0 f1 f6 f7 f8 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) /\ (((MEM r2) N) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f8 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c/\ c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f11 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f1 f6 c==> c= f11 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) = T)
T c==> cis_restricted chypermap_of_list f0 c= cis_restricted chypermap_of_list f0 cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) N), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1))))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f10 c==> cMEM f11 f8 c==> cMEM f10 f6 c==> cMEM f10 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f10 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c/\ c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), (((final_list L) l) /\ ((MEM l) N)), ((MEM d) l) |- (?l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l)))
T c==> c~ cfinal_list f0 f1 c==> c/\ cfinal_list f0 f2 cMEM f2 f3 c==> cMEM f4 f2 c? / c/\ c/\ cfinal_list f0 b0 c\/ cMEM b0 creplace f1 cCONS cSND csplit_normal_list f0 f1 f5 f6 f7 cNIL f3 cMEM b0 cCONS cFST csplit_normal_list f0 f1 f5 f6 f7 cNIL cMEM f4 b0
+ (~ ((final_list L) r)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((final_list L) r2) /\ (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r1) N) ==> (((MEM r2) N) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cfinal_list f0 f2 c==> cfinal_list f0 f3 c==> cmarked_list f0 f4 f1 f5 c/\ cfinal_list f0 f3 c==> cMEM f2 creplace f1 cCONS cSND csplit_normal_list f0 f1 f6 f7 f8 cNIL f4 c==> cMEM f3 creplace f1 cCONS cSND csplit_normal_list f0 f1 f6 f7 f8 cNIL f4 c==> c= cfind_face f0 f5 f6 c==> cMEM f9 f3 c==> cMEM f10 f2 c==> cMEM f2 f4 c==> cMEM f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f9 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f6 f7 f8 cNIL f4 cCONS cFST csplit_normal_list f0 f1 f6 f7 f8 cNIL
+ |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r2) /\ ((MEM v) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))) = T)
T c= ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cprev_el b2 f0 f2 c/\ cfinal_list b0 f3 c/\ cfinal_list b0 f4 c/\ c= cSND csplit_normal_list b0 b2 f5 f1 f2 f4 c/\ cMEM f3 b1 c/\ c= cfind_face b0 b3 f5 c/\ cMEM f6 f4 cMEM f7 f3 c? / c/\ ccontour_list b0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 f6 c/\ c= cLAST b4 f7 cSUBSET * part cset_of_list b4 * part cset_of_list cflatten cfilter * part cfinal_list b0 ccat creplace b2 cCONS cSND csplit_normal_list b0 b2 f5 f1 f2 cNIL b1 cCONS cFST csplit_normal_list b0 b2 f5 f1 f2 cNIL cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c/\ c\/ cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cMEM f7 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c/\ c= cfind_face f0 f4 f8 c/\ cMEM f9 f7 cMEM f10 f11 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> cfinal_list f0 f11 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f11 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f9 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c/\ c= cprev_el f1 f2 f3 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ c\/ cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 cMEM f7 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL c/\ c\/ cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 cMEM f8 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL c/\ c= cfind_face f0 f4 f9 c/\ cMEM f10 f8 cMEM f11 f7 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL
+ (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), (x' IN (set_of_list s)), ((final_list L) r2) |- ((!x. ((x IN (set_of_list s)) ==> (x IN (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f0 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 c==> cIN f7 * part cset_of_list f8 c==> cfinal_list f1 f0 c==> ! c==> cIN b0 * part cset_of_list f8 cIN b0 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 cIN f7 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c/\ c\/ cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cMEM f7 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c/\ c= cfind_face f0 f4 f8 c/\ cMEM f9 f7 cMEM f10 f11 c==> cfinal_list f0 f11 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f9 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
- ((~ (s = NIL)) = (?x. ((MEM x) s))) |- ((?x. ((MEM x) s)) = (~ (s = NIL)))
T c==> c= c~ c= f0 cNIL c? / cMEM b0 f0 c= c? / cMEM b0 f0 c~ c= f0 cNIL
+ (~ (r' = NIL)), ((HD r') = u), ((LAST r') = v), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))), ((contour_list L) r'), ((final_list L) r2) |- ((?s. (r' = s)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ c= f0 cNIL c==> c= cHD f0 f1 c==> c= cLAST f0 f2 c==> c= f3 cSND csplit_normal_list f4 f5 f6 f7 f8 c==> cMEM f3 creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cSND csplit_normal_list f4 f5 f6 f7 f8 c==> ccontour_list f4 f0 c==> cfinal_list f4 f3 c==> c? / c= f0 b0 c? / c/\ ccontour_list f4 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f4 ccat creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 cCONS cFST csplit_normal_list f4 f5 f6 f7 f8 cNIL
+ (r' = s), ((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) |- ((((set_of_list s) SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))) = (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> c= f0 f1 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cFST csplit_normal_list f2 f3 f4 f5 f6 c= c==> cSUBSET * part cset_of_list f1 * part cset_of_list cFST csplit_normal_list f2 f3 f4 f5 f6 cIN f7 * part cset_of_list cflatten cfilter * part cfinal_list f2 cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f4 f5 f6 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f4 f5 f6 cNIL cIN f7 * part cset_of_list cflatten cfilter * part cfinal_list f2 cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f4 f5 f6 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f4 f5 f6 cNIL
+ ((\s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))) s) |- (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))
T c==> * / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cfinal_dart_list f0 f3 f4 c/\ ccontour_list f0 f4 c/\ c~ c= f4 cNIL c/\ c= cHD f4 f1 c/\ c= cLAST f4 f2 cSUBSET * part cset_of_list f4 * part cset_of_list cfinal_dart_list f0 f3
+ (good_list L), (good_list_nodes L), ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1))))))))))), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ c~ cfinal_list f0 f1 c/\ c= cl'z f0 f2 f1 f3 f4 c/\ c= cl'y f0 f1 f3 f5 c/\ c= cprev_el f1 f4 f6 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ c\/ cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 cMEM f7 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL c/\ c\/ cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 cMEM f8 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL c/\ c= cfind_face f0 f3 f9 c/\ cMEM f10 f8 cMEM f11 f7 c==> cmarked_list f0 f2 f1 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL
+ (~ (r' = NIL)), ((HD r') = u), ((LAST r') = v), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))), ((contour_list L) r'), ((final_list L) r2) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ c= f0 cNIL c==> c= cHD f0 f1 c==> c= cLAST f0 f2 c==> c= f3 cSND csplit_normal_list f4 f5 f6 f7 f8 c==> cMEM f3 creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cSND csplit_normal_list f4 f5 f6 f7 f8 c==> ccontour_list f4 f0 c==> cfinal_list f4 f3 c? / c/\ ccontour_list f4 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f4 ccat creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 cCONS cFST csplit_normal_list f4 f5 f6 f7 f8 cNIL
+ ((MEM u) r1), ((MEM v) r2), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- (((MEM u) r1) /\ ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))
T c==> cMEM f0 f1 c==> cMEM f2 f3 c==> cMEM f3 cCONS cFST csplit_normal_list f4 f5 f6 f7 f8 cNIL c==> cfinal_list f4 f3 c/\ cMEM f0 f1 c==> c==> cMEM f1 creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 c\/ cMEM f1 f9 c/\ cMEM f5 f9 c= f1 cSND csplit_normal_list f4 f5 f6 f7 f8 c==> c==> cMEM f3 creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 c\/ cMEM f3 f9 c/\ cMEM f5 f9 c= f3 cSND csplit_normal_list f4 f5 f6 f7 f8 c==> c= cnext_el f6 f10 f11 c==> cuniq clist_of_darts f4 c==> call / c~ c= b0 cNIL f4 c==> ! c==> cMEM b0 clist_of_darts f4 cMEM c, cSND b0 cFST b0 clist_of_darts f4 c==> cMEM f7 f6 c==> cMEM f12 f6 c==> c< cindexf f11 f7 f6 cindexf f11 f12 f6 c==> c= cfind_face f4 f7 f6 c==> cMEM cFST csplit_normal_list f4 f5 f6 f7 f8 cntrans f4 f9 f5 f10 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f4 f5 f6 f7 f8 c==> cloop_list f4 cFST csplit_normal_list f4 f5 f6 f7 f8 c==> c= f1 cFST csplit_normal_list f4 f5 f6 f7 f8 c? / c/\ ccontour_list f4 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f0 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f4 ccat creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 cCONS cFST csplit_normal_list f4 f5 f6 f7 f8 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cfind_face f0 f3 f4 c==> c= cfind_face f0 f8 f4 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f10 f1 c/\ cMEM f2 f1 c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c< cindexf f5 f8 f4 cindexf f5 f6 f4 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f8 f4 c==> cMEM f6 f4 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> cMEM f10 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> cMEM cFST csplit_normal_list f0 f2 f4 f8 f7 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
+ (~ ((final_list L) r)), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) /\ (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r1) N) ==> (((MEM r2) N) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cMEM f2 creplace f1 cCONS cSND csplit_normal_list f0 f1 f3 f4 f5 cNIL f6 c==> cfinal_list f0 f2 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f8 c/\ cMEM f2 creplace f1 cCONS cSND csplit_normal_list f0 f1 f3 f4 f5 cNIL f6 c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f3 f4 f5 cNIL f6 c==> c= cfind_face f0 f8 f3 c==> cMEM f9 f7 c==> cMEM f10 f2 c==> cMEM f2 f6 c==> cMEM f7 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f9 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f3 f4 f5 cNIL
+ |- ((\f. (!xs. (!g. (((MEM r2) (((replace f) xs) g)) ==> (((MEM r2) g) \/ (((MEM f) g) /\ ((MEM r2) xs))))))) r)
T * / ! ! c==> cMEM f0 creplace b0 b1 b2 c\/ cMEM f0 b2 c/\ cMEM b0 b2 cMEM f0 b1 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM v) r2) /\ ((MEM u) r1)), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c/\ cMEM f8 f9 cMEM f10 f11 c==> cMEM f8 f9 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f11 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM v) r2), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM u) r1) ==> (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f10 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f11 f10 c==> cMEM f1 f6 c==> c= f10 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f7 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ (r2 = (FST (((((split_normal_list L) r) f) y) z1))), (x' IN (set_of_list s)), ((final_list L) r2) |- ((!x. ((x IN (set_of_list s)) ==> (x IN (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> c= f0 cFST csplit_normal_list f1 f2 f3 f4 f5 c==> cIN f6 * part cset_of_list f7 c==> cfinal_list f1 f0 c==> ! c==> cIN b0 * part cset_of_list f7 cIN b0 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5 cIN f6 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((find_face L) y) = f) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c< cindexf f5 f8 f4 cindexf f5 f6 f4 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f8 f4 c==> cMEM f6 f4 c==> cMEM f2 f1 c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c==> c= cfind_face f0 f8 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
+ (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL)))))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c/\ ccontour_list f1 f6 c/\ c= cHD f6 f7 c/\ c= cLAST f6 f8 c/\ cSUBSET * part cset_of_list f6 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 c~ c= f6 cNIL c==> cMEM f0 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f9 c==> cfinal_list f1 f0 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f9 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ |- (((!xs. (!g. (((MEM r2) (((replace r) xs) g)) ==> (((MEM r2) g) \/ (((MEM r) g) /\ ((MEM r2) xs)))))) ==> ((\xs. (!g. (((MEM r2) (((replace r) xs) g)) ==> (((MEM r2) g) \/ (((MEM r) g) /\ ((MEM r2) xs)))))) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL))) = ((\xs. (!g. (((MEM r2) (((replace r) xs) g)) ==> (((MEM r2) g) \/ (((MEM r) g) /\ ((MEM r2) xs)))))) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)))
T c= c==> ! ! c==> cMEM f0 creplace f1 b0 b1 c\/ cMEM f0 b1 c/\ cMEM f1 b1 cMEM f0 b0 * / ! c==> cMEM f0 creplace f1 b0 b1 c\/ cMEM f0 b1 c/\ cMEM f1 b1 cMEM f0 b0 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL * / ! c==> cMEM f0 creplace f1 b0 b1 c\/ cMEM f0 b1 c/\ cMEM f1 b1 cMEM f0 b0 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f8 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- (((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) /\ ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))))
T c==> cMEM f0 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c==> cMEM f6 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c==> cfinal_list f1 f6 c/\ cMEM f6 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c==> c= cfind_face f1 f7 f3 c==> cMEM f8 f6 c==> cMEM f9 f0 c==> c==> cMEM f0 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f10 c\/ cMEM f0 f10 c/\ cMEM f2 f10 c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f10 c\/ cMEM f6 f10 c/\ cMEM f2 f10 c= f6 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c= cnext_el f3 f7 f11 c==> cuniq clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cMEM f4 f3 c==> cMEM f12 f3 c==> c< cindexf f11 f4 f3 cindexf f11 f12 f3 c==> c= cfind_face f1 f4 f3 c==> cMEM cFST csplit_normal_list f1 f2 f3 f4 f5 cntrans f1 f10 f2 f7 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f1 f2 f3 f4 f5 c==> cloop_list f1 cFST csplit_normal_list f1 f2 f3 f4 f5 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f10 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ ((MEM u) ((final_dart_list L) N)), ((MEM v) ((final_dart_list L) N)) |- (((?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = (((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> cMEM f0 cfinal_dart_list f1 f2 c==> cMEM f3 cfinal_dart_list f1 f2 c= c==> c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f0 c/\ c= cLAST b0 f3 cSUBSET * part cset_of_list b0 * part cset_of_list cfinal_dart_list f1 f2 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f0 c/\ c= cLAST b0 f3 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f4 cCONS cSND csplit_normal_list f1 f4 f5 f6 f7 cNIL f2 cCONS cFST csplit_normal_list f1 f4 f5 f6 f7 cNIL c==> c==> c/\ cMEM f0 cfinal_dart_list f1 f2 cMEM f3 cfinal_dart_list f1 f2 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f0 c/\ c= cLAST b0 f3 cSUBSET * part cset_of_list b0 * part cset_of_list cfinal_dart_list f1 f2 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f0 c/\ c= cLAST b0 f3 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f4 cCONS cSND csplit_normal_list f1 f4 f5 f6 f7 cNIL f2 cCONS cFST csplit_normal_list f1 f4 f5 f6 f7 cNIL
+ (~ (r' = NIL)), (r' = s) |- (((~ (s = NIL)) ==> ((s = NIL) = F)) = ((s = NIL) = F))
T c==> c~ c= f0 cNIL c==> c= f0 f1 c= c==> c~ c= f1 cNIL c= c= f1 cNIL cF c= c= f1 cNIL cF
+ (~ (r' = NIL)), ((HD r') = u), ((LAST r') = v), (r' = s), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))), ((contour_list L) r'), ((final_list L) r2) |- (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))
T c==> c~ c= f0 cNIL c==> c= cHD f0 f1 c==> c= cLAST f0 f2 c==> c= f0 f3 c==> c= f4 cFST csplit_normal_list f5 f6 f7 f8 f9 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cFST csplit_normal_list f5 f6 f7 f8 f9 c==> ccontour_list f5 f0 c==> cfinal_list f5 f4 c/\ ccontour_list f5 f3 c/\ c~ c= f3 cNIL c/\ c= cHD f3 f1 c/\ c= cLAST f3 f2 cSUBSET * part cset_of_list f3 * part cset_of_list cflatten cfilter * part cfinal_list f5 ccat creplace f6 cCONS cSND csplit_normal_list f5 f6 f7 f8 f9 cNIL f10 cCONS cFST csplit_normal_list f5 f6 f7 f8 f9 cNIL
+ (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cfind_face f0 f3 f4 c==> c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f10 f1 c/\ cMEM f2 f1 c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> cMEM f10 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
+ |- (((!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) ==> ((\r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) r)) = ((\r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) r))
T c= c==> ! ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 * / ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2 * / ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2
+ ((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) |- ((((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = ((((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) (FST (((((split_normal_list L) r) f) y) z1)))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> cMEM cFST csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f5 f1 f6 cNUMERAL cBIT1 c_0 c= c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f5 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL c==> c==> cMEM cFST csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f5 f1 f6 cNUMERAL cBIT1 c_0 cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f5 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
+ (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x), ((\w. (((next_el f) x) = w)) w) |- (((\w. (((next_el f) x) = w)) w) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f0 f2 f3 f6 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= f7 cSND csplit_normal_list f0 f2 f8 f6 f5 c==> c= f9 cSND csplit_normal_list f0 f2 f8 f6 f5 c==> c= cfind_face f0 f3 f8 c==> cMEM f10 f7 c==> cMEM f11 f9 c==> cMEM f2 f1 c==> cMEM f7 creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f6 f5 cNIL f1 c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f6 f5 cNIL f1 c==> cfinal_list f0 f7 c==> cfinal_list f0 f9 c==> cmarked_list f0 f1 f2 f3 c==> * / c= cnext_el f8 f3 b0 f12 c/\ * / c= cnext_el f8 f3 b0 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f6 f5 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f8 f6 f5 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cfind_face f0 f3 f4 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f10 f1 c/\ cMEM f2 f1 c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> cMEM f10 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= f4 cfind_face f0 f3 c= f5 cnext_el f4 f3 c/\ cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 c/\ cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 c< cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 cindexf f5 cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
+ (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cfind_face f0 f3 f4 c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f10 f1 c/\ cMEM f2 f1 c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> cMEM f10 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f9 f6 c/\ cMEM f1 f6 c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f10 f9 c==> cMEM f11 f8 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f9 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c/\ c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ ((MEM u) r1), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((all (\l. (~ (l = NIL)))) L) /\ ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))
T c==> cMEM f0 f1 c==> call / c~ c= b0 cNIL f2 c==> cfinal_list f2 f3 c/\ call / c~ c= b0 cNIL f2 c==> ! c==> cMEM b0 clist_of_darts f2 cMEM c, cSND b0 cFST b0 clist_of_darts f2 c==> cMEM f4 f5 c==> cMEM f6 f5 c==> c< cindexf f7 f4 f5 cindexf f7 f6 f5 c==> c= cfind_face f2 f4 f5 c==> cMEM cFST csplit_normal_list f2 f8 f5 f4 f9 cntrans f2 f10 f8 f11 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f2 f8 f5 f4 f9 c==> cloop_list f2 cFST csplit_normal_list f2 f8 f5 f4 f9 c==> c= f1 cFST csplit_normal_list f2 f8 f5 f4 f9 c==> c= f3 cFST csplit_normal_list f2 f8 f5 f4 f9 c==> cMEM f12 cFST csplit_normal_list f2 f8 f5 f4 f9 c? / c/\ ccontour_list f2 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f0 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f2 ccat creplace f8 cCONS cSND csplit_normal_list f2 f8 f5 f4 f9 cNIL f10 cCONS cFST csplit_normal_list f2 f8 f5 f4 f9 cNIL
+ (~ ((final_list L) r)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r1) N) ==> (((MEM r2) N) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cfinal_list f0 f2 c==> cfinal_list f0 f3 c==> cmarked_list f0 f4 f1 f5 c==> cMEM f3 creplace f1 cCONS cSND csplit_normal_list f0 f1 f6 f7 f8 cNIL f4 c==> c= cfind_face f0 f5 f6 c==> cMEM f9 f3 c==> cMEM f10 f2 c==> cMEM f2 f4 c==> cMEM f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f9 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f6 f7 f8 cNIL f4 cCONS cFST csplit_normal_list f0 f1 f6 f7 f8 cNIL
- (~ ((final_list L) r)), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r1) N) ==> (((MEM r2) N) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 f1 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cMEM f7 f2 c==> cMEM f8 f2 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f4 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f9 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
+ (~ (r' = NIL)), ((HD r') = u), ((LAST r') = v), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))), ((contour_list L) r'), ((final_list L) r2) |- (((\s. (r' = s)) s) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ c= f0 cNIL c==> c= cHD f0 f1 c==> c= cLAST f0 f2 c==> c= f3 cFST csplit_normal_list f4 f5 f6 f7 f8 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cFST csplit_normal_list f4 f5 f6 f7 f8 c==> ccontour_list f4 f0 c==> cfinal_list f4 f3 c==> * / c= f0 b0 f9 c? / c/\ ccontour_list f4 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f4 ccat creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f10 cCONS cFST csplit_normal_list f4 f5 f6 f7 f8 cNIL
+ ((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) |- (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) = T)
T c==> cMEM cSND csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f5 f1 f6 cNUMERAL cBIT1 c_0 c= cMEM cSND csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f5 f1 f6 cNUMERAL cBIT1 c_0 cT
+ |- (((!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) ==> ((\x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) x)) = ((\x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) x))
T c= c==> ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 b0 call * part cloop_list f0 cntrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 b0 call * part cloop_list f0 cntrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 f3 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 b0 call * part cloop_list f0 cntrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 f3
+ |- ((\f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))) f)
T * / ! ! c==> c/\ c~ c= f0 b0 cMEM f0 b2 cMEM f0 creplace b0 b1 b2 f1
- (?r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL))))))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c? / c/\ ccontour_list f0 b0 c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list cSND csplit_normal_list f0 f3 f4 f5 f6 c~ c= b0 cNIL c==> c= f7 cSND csplit_normal_list f0 f3 f4 f5 f6 c==> cMEM f7 creplace f3 cCONS cSND csplit_normal_list f0 f3 f4 f5 f6 cNIL f8 c==> cfinal_list f0 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f3 cCONS cSND csplit_normal_list f0 f3 f4 f5 f6 cNIL f8 cCONS cFST csplit_normal_list f0 f3 f4 f5 f6 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((final_list L) r2) ==> (((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> (((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cmarked_list f0 f6 f1 f4 c==> cfinal_list f0 f7 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL c==> cMEM f7 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL c==> c= cfind_face f0 f4 f9 c==> cMEM f10 f7 c==> cMEM f11 f8 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f9 f5 f3 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 c\/ cMEM f7 f6 c/\ cMEM f1 f6 c= f7 cSND csplit_normal_list f0 f1 f9 f5 f3 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))) = T)
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c= ! ! ! c==> c/\ c~ c= f0 b0 cMEM f0 b2 cMEM f0 creplace b0 b1 b2 cT
- ((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) |- (((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) = T)
T c==> cSUBSET * part cset_of_list f0 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 c= cSUBSET * part cset_of_list f0 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> cMEM f9 f10 c==> cMEM f11 f7 c==> cMEM f10 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> cfinal_list f0 f10 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) x)
T * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 cntrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 f3
- ((?x. ((MEM x) s)) = (~ (s = NIL))) |- ((~ (s = NIL)) = (?x. ((MEM x) s)))
T c==> c= c? / cMEM b0 f0 c~ c= f0 cNIL c= c~ c= f0 cNIL c? / cMEM b0 f0
+ |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))) x)
T * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cuniq cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 f3
+ (~ ((final_list L) r)), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r1) N) ==> (((MEM r2) N) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f4 f6 cNIL f2 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f4 f6 cNIL f2 c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cMEM f7 f2 c==> cMEM f8 f2 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f4 f6 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f9 f4 f6 cNIL
+ |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))) r)
T * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 b0 c/\ c= cl'z f0 f1 b0 b1 f2 c/\ c= cl'y f0 b0 b1 f3 c/\ c= cprev_el b0 f2 f4 c/\ cfinal_list f0 f5 c/\ cfinal_list f0 f6 c/\ c= cSND csplit_normal_list f0 b0 f7 f3 f4 f6 c/\ c= cFST csplit_normal_list f0 b0 f7 f3 f4 f5 c/\ c= cfind_face f0 b1 f7 c/\ cMEM f8 f5 cMEM f9 f6 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 f9 c/\ c= cLAST b2 f8 cSUBSET * part cset_of_list b2 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b0 cCONS cSND csplit_normal_list f0 b0 f7 f3 f4 cNIL f1 cCONS cFST csplit_normal_list f0 b0 f7 f3 f4 cNIL f10
+ (uniq (FST (((((split_normal_list L) r) f) y) z1))), (r1 = (FST (((((split_normal_list L) r) f) y) z1))), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) (FST (((((split_normal_list L) r) f) y) z1))), ((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= f5 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= f6 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f7 f5 c==> cMEM f8 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cfinal_list f0 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f9 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
- ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))
T c==> cMEM f0 f1 c==> cMEM f2 f3 c==> cMEM f4 f5 c==> cMEM f3 creplace f4 cCONS cSND csplit_normal_list f6 f4 f7 f8 f9 cNIL f5 c==> cfinal_list f6 f3 c==> c= f1 cSND csplit_normal_list f6 f4 f7 f8 f9 c==> c= f3 cSND csplit_normal_list f6 f4 f7 f8 f9 c==> c= cnext_el f7 f10 f11 c==> cuniq clist_of_darts f6 c==> call / c~ c= b0 cNIL f6 c==> ! c==> cMEM b0 clist_of_darts f6 cMEM c, cSND b0 cFST b0 clist_of_darts f6 c==> cMEM f8 f7 c==> cMEM f12 f7 c==> c< cindexf f11 f8 f7 cindexf f11 f12 f7 c==> c= cfind_face f6 f8 f7 c==> cMEM cSND csplit_normal_list f6 f4 f7 f8 f9 cntrans f6 f5 f4 f10 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f6 f4 f7 f8 f9 c==> cloop_list f6 cSND csplit_normal_list f6 f4 f7 f8 f9 c? / c/\ ccontour_list f6 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f0 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f6 ccat creplace f4 cCONS cSND csplit_normal_list f6 f4 f7 f8 f9 cNIL f5 cCONS cFST csplit_normal_list f6 f4 f7 f8 f9 cNIL
+ (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f0 f2 f3 f6 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= f7 cSND csplit_normal_list f0 f2 f8 f6 f5 c==> c= f9 cSND csplit_normal_list f0 f2 f8 f6 f5 c==> c= cfind_face f0 f3 f8 c==> cMEM f10 f7 c==> cMEM f11 f9 c==> cMEM f2 f1 c==> cMEM f7 creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f6 f5 cNIL f1 c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f6 f5 cNIL f1 c==> cfinal_list f0 f7 c==> cfinal_list f0 f9 c==> cmarked_list f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f6 f5 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f8 f6 f5 cNIL
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))) ==> ((\g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))) g)) = ((\g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))) g))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c= c==> ! c==> c/\ c~ c= f0 f1 cMEM f0 b0 cMEM f0 creplace f1 f2 b0 * / c==> c/\ c~ c= f0 f1 cMEM f0 b0 cMEM f0 creplace f1 f2 b0 f3 * / c==> c/\ c~ c= f0 f1 cMEM f0 b0 cMEM f0 creplace f1 f2 b0 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (FST (((((split_normal_list L) r) f) y) z1))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f5 f6 c==> c= cfind_face f0 f5 f2 c==> c= cfind_face f0 f3 f2 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c\/ cMEM f7 f8 c/\ cMEM f1 f8 c= f7 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f1 f8 c= f9 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c< cindexf f6 f3 f2 cindexf f6 f10 f2 c==> cMEM f11 f7 c==> cMEM f12 f9 c==> cMEM f3 f2 c==> cMEM f10 f2 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL c==> cMEM cFST csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f8 f1 f5 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cfinal_list f0 f9 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f8 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ |- ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x)
T * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3
- |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ (~ ((final_list L) r)) |- ((((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c~ cfinal_list f0 f1 c= c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c/\ ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f2 cMEM b1 cfinal_dart_list f0 f2 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f2 ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f2 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f3 cMEM ce_list b2 ccat cs_list f0 f1 f3 cfinal_dart_list f0 f2 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f4 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f6 f7 f8 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f6 f7 f8 cNIL c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c/\ c==> cfinal_list f0 f1 cflag_list f0 f2 c==> c~ cfinal_list f0 f1 c/\ ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f2 cMEM b1 cfinal_dart_list f0 f2 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f2 ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f2 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f3 cMEM ce_list b2 ccat cs_list f0 f1 f3 cfinal_dart_list f0 f2 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f4 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f6 f7 f8 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f6 f7 f8 cNIL
+ (x' IN (set_of_list s)) |- (((x' IN (set_of_list ((final_dart_list L) N))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))) = (((x' IN (set_of_list s)) ==> (x' IN (set_of_list ((final_dart_list L) N)))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c==> cIN f0 * part cset_of_list f1 c= c==> cIN f0 * part cset_of_list cfinal_dart_list f2 f3 cIN f0 * part cset_of_list cflatten cfilter * part cfinal_list f2 cAPPEND creplace f4 cCONS cSND csplit_normal_list f2 f4 f5 f6 f7 cNIL f3 cCONS cFST csplit_normal_list f2 f4 f5 f6 f7 cNIL c==> c==> cIN f0 * part cset_of_list f1 cIN f0 * part cset_of_list cfinal_dart_list f2 f3 cIN f0 * part cset_of_list cflatten cfilter * part cfinal_list f2 cAPPEND creplace f4 cCONS cSND csplit_normal_list f2 f4 f5 f6 f7 cNIL f3 cCONS cFST csplit_normal_list f2 f4 f5 f6 f7 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((((indexf w) y) f) < (((indexf w) z) f)) /\ ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c= f8 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c< cindexf f3 f6 f1 cindexf f3 f9 f1 c==> cMEM f10 f4 c==> cMEM f11 f8 c==> cMEM f6 f1 c==> cMEM f9 f1 c==> cMEM f5 f12 c==> cMEM f8 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f12 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f8 c/\ c< cindexf f3 f6 f1 cindexf f3 f9 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cSND csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f12 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cSND csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f12 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
+ (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (~ ((final_list L) r)) |- ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM u) ((final_dart_list L) N)) ==> (((MEM v) ((final_dart_list L) N)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> c~ cfinal_list f0 f2 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> cMEM f4 cfinal_dart_list f0 f1 c==> cMEM f5 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f4 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f6 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f6 f7 f8 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1))))), ((MEM u) r1), ((MEM v) r2), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f8 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), (((final_list L) l) /\ ((MEM l) N)), ((MEM d) l), ((final_list L) l) |- (?l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l)))
T c==> c~ cfinal_list f0 f1 c==> c/\ cfinal_list f0 f2 cMEM f2 f3 c==> cMEM f4 f2 c==> cfinal_list f0 f2 c? / c/\ c/\ cfinal_list f0 b0 c\/ cMEM b0 creplace f1 cCONS cSND csplit_normal_list f0 f1 f5 f6 f7 cNIL f3 cMEM b0 cCONS cFST csplit_normal_list f0 f1 f5 f6 f7 cNIL cMEM f4 b0
+ (x' = d), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((x' = d) /\ ((x' IN (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c==> c= f0 f1 c==> c= f2 cSND csplit_normal_list f3 f4 f5 f6 f7 c==> cMEM f2 creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f8 c==> cfinal_list f3 f2 c/\ c= f0 f1 c==> cIN f0 * part cset_of_list cSND csplit_normal_list f3 f4 f5 f6 f7 cIN f0 * part cset_of_list cflatten cfilter * part cfinal_list f3 cAPPEND creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f3 f4 f5 f6 f7 cNIL
+ |- ((\L. (!x. (!y. (!s. (((uniq s) /\ (((loop_list L) s) /\ (((MEM x) s) /\ ((MEM y) s)))) ==> (?r. (((contour_list L) r) /\ (((HD r) = x) /\ (((LAST r) = y) /\ (((set_of_list r) SUBSET (set_of_list s)) /\ (~ (r = NIL)))))))))))) L)
T * / ! ! ! c==> c/\ cuniq b3 c/\ cloop_list b0 b3 c/\ cMEM b1 b3 cMEM b2 b3 c? / c/\ ccontour_list b0 b4 c/\ c= cHD b4 b1 c/\ c= cLAST b4 b2 c/\ cSUBSET * part cset_of_list b4 * part cset_of_list b3 c~ c= b4 cNIL f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c= f8 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f9 f4 c==> cMEM f6 f1 c==> cMEM f10 f1 c==> cMEM f5 f11 c==> cMEM f8 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f11 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f8 c==> c< cindexf f3 f6 f1 cindexf f3 f10 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cSND csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f11 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f12 cSND csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f11 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (SND (((((split_normal_list L) r) f) y) z1))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) (SND (((((split_normal_list L) r) f) y) z1)))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cSND csplit_normal_list f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f5 f6 c==> c= f7 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c= f8 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c< cindexf f6 f3 f2 cindexf f6 f9 f2 c==> cMEM f10 f7 c==> cMEM f11 f8 c==> cMEM f3 f2 c==> cMEM f9 f2 c==> cMEM f1 f12 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f12 c==> cMEM cSND csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f12 f1 f5 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f8 c==> c==> cMEM cSND csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f12 f1 f5 cNUMERAL cBIT1 c_0 cloop_list f0 cSND csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f12 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1))), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c/\ c= cfind_face f0 f4 f7 c/\ cMEM f8 f9 cMEM f10 f11 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f11 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ |- (((!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) ==> ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1)) = ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1))
T c= c==> ! ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1 * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
+ |- (((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))))) ==> ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))))) L)) = ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))))) L))
T c= c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cFST csplit_normal_list b0 b2 cfind_face b0 cl'y b0 b2 b3 cl'y b0 b2 b3 cprev_el b2 cl'z b0 b1 b2 b3 cntrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cFST csplit_normal_list b0 b2 cfind_face b0 cl'y b0 b2 b3 cl'y b0 b2 b3 cprev_el b2 cl'z b0 b1 b2 b3 cntrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 f0 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cFST csplit_normal_list b0 b2 cfind_face b0 cl'y b0 b2 b3 cl'y b0 b2 b3 cprev_el b2 cl'z b0 b1 b2 b3 cntrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 f0
- |- (((!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))) ==> ((\y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))) y)) = ((\y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))) y))
T c= c==> ! ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 b0 c/\ c= cprev_el b4 f0 b1 c/\ cfinal_list b2 f1 c/\ cfinal_list b2 f2 c/\ c= cSND csplit_normal_list b2 b4 f3 b0 b1 f2 c/\ cMEM f1 b3 c/\ c= cfind_face b2 b5 f3 c/\ cMEM f4 f2 cMEM f5 f1 c? / c/\ ccontour_list b2 b6 c/\ c~ c= b6 cNIL c/\ c= cHD b6 f5 c/\ c= cLAST b6 f4 cSUBSET * part cset_of_list b6 * part cset_of_list cflatten cfilter * part cfinal_list b2 ccat creplace b4 cCONS cSND csplit_normal_list b2 b4 f3 b0 b1 cNIL b3 cCONS cFST csplit_normal_list b2 b4 f3 b0 b1 cNIL * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 b0 c/\ c= cprev_el b4 f0 b1 c/\ cfinal_list b2 f1 c/\ cfinal_list b2 f2 c/\ c= cSND csplit_normal_list b2 b4 f3 b0 b1 f2 c/\ cMEM f1 b3 c/\ c= cfind_face b2 b5 f3 c/\ cMEM f4 f2 cMEM f5 f1 c? / c/\ ccontour_list b2 b6 c/\ c~ c= b6 cNIL c/\ c= cHD b6 f5 c/\ c= cLAST b6 f4 cSUBSET * part cset_of_list b6 * part cset_of_list cflatten cfilter * part cfinal_list b2 ccat creplace b4 cCONS cSND csplit_normal_list b2 b4 f3 b0 b1 cNIL b3 cCONS cFST csplit_normal_list b2 b4 f3 b0 b1 cNIL f6 * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 b0 c/\ c= cprev_el b4 f0 b1 c/\ cfinal_list b2 f1 c/\ cfinal_list b2 f2 c/\ c= cSND csplit_normal_list b2 b4 f3 b0 b1 f2 c/\ cMEM f1 b3 c/\ c= cfind_face b2 b5 f3 c/\ cMEM f4 f2 cMEM f5 f1 c? / c/\ ccontour_list b2 b6 c/\ c~ c= b6 cNIL c/\ c= cHD b6 f5 c/\ c= cLAST b6 f4 cSUBSET * part cset_of_list b6 * part cset_of_list cflatten cfilter * part cfinal_list b2 ccat creplace b4 cCONS cSND csplit_normal_list b2 b4 f3 b0 b1 cNIL b3 cCONS cFST csplit_normal_list b2 b4 f3 b0 b1 cNIL f6
+ |- ((!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r2) /\ ((MEM v) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) = T)
T c= ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ c= cSND csplit_normal_list b1 b3 f4 f1 b0 f3 c/\ cMEM f2 b2 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f3 cMEM f6 f2 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f5 c/\ c= cLAST b5 f6 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL cT
+ (~ (r' = NIL)), ((HD r') = u), ((LAST r') = v), (r' = s), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))), ((contour_list L) r'), ((final_list L) r2) |- ((\s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))) s)
T c==> c~ c= f0 cNIL c==> c= cHD f0 f1 c==> c= cLAST f0 f2 c==> c= f0 f3 c==> c= f4 cFST csplit_normal_list f5 f6 f7 f8 f9 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cFST csplit_normal_list f5 f6 f7 f8 f9 c==> ccontour_list f5 f0 c==> cfinal_list f5 f4 * / c/\ ccontour_list f5 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f5 ccat creplace f6 cCONS cSND csplit_normal_list f5 f6 f7 f8 f9 cNIL f10 cCONS cFST csplit_normal_list f5 f6 f7 f8 f9 cNIL f3
+ (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL))))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((contour_list L) r'), ((final_list L) r2) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c/\ c= cHD f6 f7 c/\ c= cLAST f6 f8 c/\ cSUBSET * part cset_of_list f6 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 c~ c= f6 cNIL c==> cMEM f0 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f9 c==> ccontour_list f1 f6 c==> cfinal_list f1 f0 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f9 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (FST (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cFST csplit_normal_list f0 f1 f8 f5 f3 c==> c= f9 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> cMEM f10 f7 c==> cMEM f11 f9 c==> cfinal_list f0 f7 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c/\ c= f7 cFST csplit_normal_list f0 f1 f8 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))) x)
T * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 b0 f3 c/\ c= cl'y f0 f2 b0 f4 c/\ c= cprev_el f2 f3 f5 c/\ cfinal_list f0 f6 c/\ cfinal_list f0 f7 c/\ cMEM f6 f1 c/\ c= cFST csplit_normal_list f0 f2 f8 f4 f5 f7 c/\ c= cfind_face f0 b0 f8 c/\ cMEM f9 f7 cMEM f10 f6 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f10 c/\ c= cLAST b1 f9 cSUBSET * part cset_of_list b1 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f4 f5 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f8 f4 f5 cNIL f11
+ ((MEM u) r1), ((final_list L) r2) |- ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))
T c==> cMEM f0 f1 c==> cfinal_list f2 f3 c==> c= cfind_face f2 f4 f5 c==> cMEM cFST csplit_normal_list f2 f6 f5 f4 f7 cntrans f2 f8 f6 f9 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f2 f6 f5 f4 f7 c==> cloop_list f2 cFST csplit_normal_list f2 f6 f5 f4 f7 c==> c= f1 cFST csplit_normal_list f2 f6 f5 f4 f7 c==> c= f3 cFST csplit_normal_list f2 f6 f5 f4 f7 c==> cMEM f10 cFST csplit_normal_list f2 f6 f5 f4 f7 c? / c/\ ccontour_list f2 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f0 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f2 ccat creplace f6 cCONS cSND csplit_normal_list f2 f6 f5 f4 f7 cNIL f8 cCONS cFST csplit_normal_list f2 f6 f5 f4 f7 cNIL
+ (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f2 f1 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> cfinal_list f0 f9 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f4 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
+ (x' = d) |- (((d IN (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) ==> (d IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))) = ((x' IN (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c==> c= f0 f1 c= c==> cIN f1 * part cset_of_list cSND csplit_normal_list f2 f3 f4 f5 f6 cIN f1 * part cset_of_list cflatten cfilter * part cfinal_list f2 cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f4 f5 f6 cNIL f7 cCONS cFST csplit_normal_list f2 f3 f4 f5 f6 cNIL c==> cIN f0 * part cset_of_list cSND csplit_normal_list f2 f3 f4 f5 f6 cIN f0 * part cset_of_list cflatten cfilter * part cfinal_list f2 cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f4 f5 f6 cNIL f7 cCONS cFST csplit_normal_list f2 f3 f4 f5 f6 cNIL
+ (~ ((final_list L) r)), ((MEM u) r1), ((MEM v) r2), ((MEM r1) N), ((MEM r2) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cMEM f2 f3 c==> cMEM f4 f5 c==> cMEM f3 f6 c==> cMEM f5 f6 c==> cfinal_list f0 f3 c==> cfinal_list f0 f5 c==> cmarked_list f0 f6 f1 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f2 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f9 f10 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f9 f10 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1))), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c/\ c= cfind_face f0 f4 f7 c/\ cMEM f8 f9 cMEM f10 f11 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f11 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) |- ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))
T c==> c~ cfinal_list f0 f1 c==> cSUBSET * part cset_of_list f2 * part cset_of_list cfinal_dart_list f0 f3 cSUBSET * part cset_of_list f2 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f4 f5 f6 cNIL f3 cCONS cFST csplit_normal_list f0 f1 f4 f5 f6 cNIL
+ |- (((!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) d2))) ==> (((find_face L) y) = ((find_face L) d2))))) ==> ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) d2))) ==> (((find_face L) y) = ((find_face L) d2))))) x)) = ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) d2))) ==> (((find_face L) y) = ((find_face L) d2))))) x))
T c= c==> ! ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1 * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1
- (uniq (list_of_darts L)), (((next_el f) x) = w), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((final_list L) r2) |- (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> cfinal_list f0 f9 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f4 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f9 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
+ (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cfind_face f0 f3 f4 c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f10 f1 c/\ cMEM f2 f1 c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> cMEM f10 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r2) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r2) N) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> cMEM f9 f7 c==> cMEM f10 f11 c==> cMEM f11 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f11 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ (~ ((final_list L) r)), ((MEM d) l), ((MEM l) N), ((final_list L) l) |- (~ (l = r))
T c==> c~ cfinal_list f0 f1 c==> cMEM f2 f3 c==> cMEM f3 f4 c==> cfinal_list f0 f3 c~ c= f3 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM y) f) /\ (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> cMEM f6 f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ cMEM f6 f1 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f4 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f9 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- |- ((\l. (!m. ((((APPEND l) m) = NIL) = ((l = NIL) /\ (m = NIL))))) l)
T * / ! c= c= cAPPEND b0 b1 cNIL c/\ c= b0 cNIL c= b1 cNIL f0
+ ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) |- (((((MEM r2) N) \/ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ ((MEM r2) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> cMEM f0 f1 c==> cMEM f2 creplace f0 cCONS cSND csplit_normal_list f3 f0 f4 f5 f6 cNIL f1 c= c==> c\/ cMEM f2 f1 c= f2 cSND csplit_normal_list f3 f0 f4 f5 f6 c? / c/\ ccontour_list f3 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f3 ccat creplace f0 cCONS cSND csplit_normal_list f3 f0 f4 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f3 f0 f4 f5 f6 cNIL c==> c==> cMEM f2 creplace f0 cCONS cSND csplit_normal_list f3 f0 f4 f5 f6 cNIL f1 c\/ cMEM f2 f1 c/\ cMEM f0 f1 cMEM f2 cCONS cSND csplit_normal_list f3 f0 f4 f5 f6 cNIL c? / c/\ ccontour_list f3 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f3 ccat creplace f0 cCONS cSND csplit_normal_list f3 f0 f4 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f3 f0 f4 f5 f6 cNIL
+ |- (((!r. (!x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))))))) ==> ((\r. (!x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))))))) r)) = ((\r. (!x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))))))) r))
T c= c==> ! ! c= cs_flag_list f0 f1 b0 b1 c/\ ! ! c==> c/\ cMEM b2 cfinal_dart_list f0 f1 cMEM b3 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 b2 c/\ c= cLAST b4 b3 cSUBSET * part cset_of_list b4 * part cset_of_list cfinal_dart_list f0 f1 ! ! ! c==> c/\ c= b4 cLAST b3 c/\ cMEM b3 cparts f0 b2 c/\ cMEM b2 f1 c/\ c~ cfinal_list f0 b2 c~ cMEM b4 cs_list f0 b0 b1 cMEM ce_list b4 ccat cs_list f0 b0 b1 cfinal_dart_list f0 f1 * / ! c= cs_flag_list f0 f1 b0 b1 c/\ ! ! c==> c/\ cMEM b2 cfinal_dart_list f0 f1 cMEM b3 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 b2 c/\ c= cLAST b4 b3 cSUBSET * part cset_of_list b4 * part cset_of_list cfinal_dart_list f0 f1 ! ! ! c==> c/\ c= b4 cLAST b3 c/\ cMEM b3 cparts f0 b2 c/\ cMEM b2 f1 c/\ c~ cfinal_list f0 b2 c~ cMEM b4 cs_list f0 b0 b1 cMEM ce_list b4 ccat cs_list f0 b0 b1 cfinal_dart_list f0 f1 f2 * / ! c= cs_flag_list f0 f1 b0 b1 c/\ ! ! c==> c/\ cMEM b2 cfinal_dart_list f0 f1 cMEM b3 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 b2 c/\ c= cLAST b4 b3 cSUBSET * part cset_of_list b4 * part cset_of_list cfinal_dart_list f0 f1 ! ! ! c==> c/\ c= b4 cLAST b3 c/\ cMEM b3 cparts f0 b2 c/\ cMEM b2 f1 c/\ c~ cfinal_list f0 b2 c~ cMEM b4 cs_list f0 b0 b1 cMEM ce_list b4 ccat cs_list f0 b0 b1 cfinal_dart_list f0 f1 f2
+ (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) |- (((((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) (FST (((((split_normal_list L) r) f) y) z1)))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c= c==> c==> cMEM cFST csplit_normal_list f0 f2 f4 f5 f6 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 cFST csplit_normal_list f0 f2 f4 f5 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f5 f6 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f5 f6 cNIL
+ (r' = s), ((contour_list L) r') |- ((contour_list L) s)
T c==> c= f0 f1 c==> ccontour_list f2 f0 ccontour_list f2 f1
+ ((MEM v) r2), ((MEM r2) N), ((final_list L) r2) |- ((((final_list L) r2) /\ ((MEM r2) N)) /\ ((MEM v) r2))
T c==> cMEM f0 f1 c==> cMEM f1 f2 c==> cfinal_list f3 f1 c/\ c/\ cfinal_list f3 f1 cMEM f1 f2 cMEM f0 f1
+ |- (((!x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))))))) ==> ((\x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))))))) x)) = ((\x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))))))) x))
T c= c==> ! c= cs_flag_list f0 f1 f2 b0 c/\ ! ! c==> c/\ cMEM b1 cfinal_dart_list f0 f1 cMEM b2 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b3 c/\ c~ c= b3 cNIL c/\ c= cHD b3 b1 c/\ c= cLAST b3 b2 cSUBSET * part cset_of_list b3 * part cset_of_list cfinal_dart_list f0 f1 ! ! ! c==> c/\ c= b3 cLAST b2 c/\ cMEM b2 cparts f0 b1 c/\ cMEM b1 f1 c/\ c~ cfinal_list f0 b1 c~ cMEM b3 cs_list f0 f2 b0 cMEM ce_list b3 ccat cs_list f0 f2 b0 cfinal_dart_list f0 f1 * / c= cs_flag_list f0 f1 f2 b0 c/\ ! ! c==> c/\ cMEM b1 cfinal_dart_list f0 f1 cMEM b2 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b3 c/\ c~ c= b3 cNIL c/\ c= cHD b3 b1 c/\ c= cLAST b3 b2 cSUBSET * part cset_of_list b3 * part cset_of_list cfinal_dart_list f0 f1 ! ! ! c==> c/\ c= b3 cLAST b2 c/\ cMEM b2 cparts f0 b1 c/\ cMEM b1 f1 c/\ c~ cfinal_list f0 b1 c~ cMEM b3 cs_list f0 f2 b0 cMEM ce_list b3 ccat cs_list f0 f2 b0 cfinal_dart_list f0 f1 f3 * / c= cs_flag_list f0 f1 f2 b0 c/\ ! ! c==> c/\ cMEM b1 cfinal_dart_list f0 f1 cMEM b2 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b3 c/\ c~ c= b3 cNIL c/\ c= cHD b3 b1 c/\ c= cLAST b3 b2 cSUBSET * part cset_of_list b3 * part cset_of_list cfinal_dart_list f0 f1 ! ! ! c==> c/\ c= b3 cLAST b2 c/\ cMEM b2 cparts f0 b1 c/\ cMEM b1 f1 c/\ c~ cfinal_list f0 b1 c~ cMEM b3 cs_list f0 f2 b0 cMEM ce_list b3 ccat cs_list f0 f2 b0 cfinal_dart_list f0 f1 f3
+ |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cprev_el b2 f0 f2 c/\ cfinal_list b0 f3 c/\ cfinal_list b0 f4 c/\ cMEM f4 b1 c/\ c= cFST csplit_normal_list b0 b2 f5 f1 f2 f3 c/\ c= cfind_face b0 b3 f5 c/\ cMEM f6 f4 cMEM f7 f3 c? / c/\ ccontour_list b0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 f7 c/\ c= cLAST b4 f6 cSUBSET * part cset_of_list b4 * part cset_of_list cflatten cfilter * part cfinal_list b0 ccat creplace b2 cCONS cSND csplit_normal_list b0 b2 f5 f1 f2 cNIL b1 cCONS cFST csplit_normal_list b0 b2 f5 f1 f2 cNIL f8
+ |- ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N)
T * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((((find_face L) y) = f) /\ (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c= f8 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c= cfind_face f0 f6 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f9 f1 c==> cMEM f10 f4 c==> cMEM f11 f8 c==> cMEM f6 f1 c==> cMEM f9 f1 c==> cMEM f5 f12 c==> cMEM f8 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f12 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f8 c/\ c= cfind_face f0 f6 f1 c==> cMEM cSND csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f12 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cSND csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f12 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
+ ((MEM u) r1), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))
T c==> cMEM f0 f1 c==> cMEM f2 f3 c==> cMEM f4 creplace f2 cCONS cSND csplit_normal_list f5 f2 f6 f7 f8 cNIL f3 c==> cfinal_list f5 f4 c==> c= f1 cSND csplit_normal_list f5 f2 f6 f7 f8 c==> c= f4 cSND csplit_normal_list f5 f2 f6 f7 f8 c==> c= cnext_el f6 f9 f10 c==> cuniq clist_of_darts f5 c==> call / c~ c= b0 cNIL f5 c==> ! c==> cMEM b0 clist_of_darts f5 cMEM c, cSND b0 cFST b0 clist_of_darts f5 c==> cMEM f7 f6 c==> cMEM f11 f6 c==> c< cindexf f10 f7 f6 cindexf f10 f11 f6 c==> c= cfind_face f5 f7 f6 c==> cMEM cSND csplit_normal_list f5 f2 f6 f7 f8 cntrans f5 f3 f2 f9 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f5 f2 f6 f7 f8 c==> cloop_list f5 cSND csplit_normal_list f5 f2 f6 f7 f8 c==> cMEM f12 cSND csplit_normal_list f5 f2 f6 f7 f8 c? / c/\ ccontour_list f5 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f0 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f5 ccat creplace f2 cCONS cSND csplit_normal_list f5 f2 f6 f7 f8 cNIL f3 cCONS cFST csplit_normal_list f5 f2 f6 f7 f8 cNIL
+ (~ (r' = NIL)), ((HD r') = u), ((LAST r') = v), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))), ((contour_list L) r'), ((final_list L) r2), ((\s. (r' = s)) s) |- (((\s. (r' = s)) s) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ c= f0 cNIL c==> c= cHD f0 f1 c==> c= cLAST f0 f2 c==> c= f3 cSND csplit_normal_list f4 f5 f6 f7 f8 c==> cMEM f3 creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cSND csplit_normal_list f4 f5 f6 f7 f8 c==> ccontour_list f4 f0 c==> cfinal_list f4 f3 c==> * / c= f0 b0 f10 c/\ * / c= f0 b0 f10 c? / c/\ ccontour_list f4 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f4 ccat creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 cCONS cFST csplit_normal_list f4 f5 f6 f7 f8 cNIL
- |- (((~ (A ==> (B \/ A))) ==> F) = (A ==> (B \/ A)))
T c= c==> c~ c==> f0 c\/ f1 f0 cF c==> f0 c\/ f1 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) N), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f9 f6 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((((next_el f) x) = w) /\ ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))
T c==> c= cnext_el f0 f1 f2 c==> c= f3 cSND csplit_normal_list f4 f5 f0 f6 f7 c==> c= f8 cSND csplit_normal_list f4 f5 f0 f6 f7 c==> cMEM f9 f3 c==> cMEM f8 creplace f5 cCONS cSND csplit_normal_list f4 f5 f0 f6 f7 cNIL f10 c==> cfinal_list f4 f8 c/\ c= cnext_el f0 f1 f2 c==> cuniq clist_of_darts f4 c==> call / c~ c= b0 cNIL f4 c==> ! c==> cMEM b0 clist_of_darts f4 cMEM c, cSND b0 cFST b0 clist_of_darts f4 c==> cMEM f6 f0 c==> cMEM f11 f0 c==> c< cindexf f2 f6 f0 cindexf f2 f11 f0 c==> c= cfind_face f4 f6 f0 c==> cMEM cSND csplit_normal_list f4 f5 f0 f6 f7 cntrans f4 f10 f5 f1 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f4 f5 f0 f6 f7 c==> cloop_list f4 cSND csplit_normal_list f4 f5 f0 f6 f7 c==> cMEM f12 cSND csplit_normal_list f4 f5 f0 f6 f7 c? / c/\ ccontour_list f4 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f4 ccat creplace f5 cCONS cSND csplit_normal_list f4 f5 f0 f6 f7 cNIL f10 cCONS cFST csplit_normal_list f4 f5 f0 f6 f7 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((((find_face L) y) = f) /\ (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c==> c= cfind_face f0 f6 f4 c==> c==> cMEM f7 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f6 f8 cNIL f1 c\/ cMEM f7 f1 c/\ cMEM f2 f1 c= f7 cSND csplit_normal_list f0 f2 f4 f6 f8 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f6 f8 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f6 f8 c==> c< cindexf f5 f6 f4 cindexf f5 f10 f4 c==> cMEM f11 f7 c==> cMEM f12 f9 c==> cMEM f6 f4 c==> cMEM f10 f4 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f2 f4 f6 f8 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f6 f8 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ c= cfind_face f0 f6 f4 c==> cMEM cFST csplit_normal_list f0 f2 f4 f6 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f2 f4 f6 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f6 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f6 f8 cNIL
+ (uniq (list_of_darts L)), (((next_el f) x) = w), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> cfinal_list f0 f9 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f4 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= ! ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 cT
+ |- (((!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) ==> ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s)) = ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s))
T c= c==> ! c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))) = (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ (((MEM r2) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))
T c= ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cprev_el b2 f0 f2 c/\ cfinal_list b0 f3 c/\ cfinal_list b0 f4 c/\ c\/ cMEM f3 creplace b2 cCONS cSND csplit_normal_list b0 b2 f5 f1 f2 cNIL b1 cMEM f3 cCONS cFST csplit_normal_list b0 b2 f5 f1 f2 cNIL c/\ c\/ cMEM f4 creplace b2 cCONS cSND csplit_normal_list b0 b2 f5 f1 f2 cNIL b1 cMEM f4 cCONS cFST csplit_normal_list b0 b2 f5 f1 f2 cNIL c/\ c= cfind_face b0 b3 f5 c/\ cMEM f6 f4 cMEM f7 f3 c? / c/\ ccontour_list b0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 f7 c/\ c= cLAST b4 f6 cSUBSET * part cset_of_list b4 * part cset_of_list cflatten cfilter * part cfinal_list b0 ccat creplace b2 cCONS cSND csplit_normal_list b0 b2 f5 f1 f2 cNIL b1 cCONS cFST csplit_normal_list b0 b2 f5 f1 f2 cNIL ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cprev_el b2 f0 f2 c/\ cfinal_list b0 f3 c/\ cfinal_list b0 f4 c/\ cMEM f3 ccat creplace b2 cCONS cSND csplit_normal_list b0 b2 f5 f1 f2 cNIL b1 cCONS cFST csplit_normal_list b0 b2 f5 f1 f2 cNIL c/\ cMEM f4 ccat creplace b2 cCONS cSND csplit_normal_list b0 b2 f5 f1 f2 cNIL b1 cCONS cFST csplit_normal_list b0 b2 f5 f1 f2 cNIL c/\ c= cfind_face b0 b3 f5 c/\ cMEM f6 f4 cMEM f7 f3 c? / c/\ ccontour_list b0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 f7 c/\ c= cLAST b4 f6 cSUBSET * part cset_of_list b4 * part cset_of_list cflatten cfilter * part cfinal_list b0 ccat creplace b2 cCONS cSND csplit_normal_list b0 b2 f5 f1 f2 cNIL b1 cCONS cFST csplit_normal_list b0 b2 f5 f1 f2 cNIL
+ (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- (((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) /\ (?l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f6 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f0 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f7 c==> cfinal_list f1 f0 c/\ cMEM f6 cSND csplit_normal_list f1 f2 f3 f4 f5 c? / c/\ c/\ cfinal_list f1 b0 c\/ cMEM b0 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f7 cMEM b0 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL cMEM f6 b0
- |- (((!z. (!r1. (!r2. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r1) /\ ((MEM u) r2)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))) ==> ((\z. (!r1. (!r2. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r1) /\ ((MEM u) r2)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))) z)) = ((\z. (!r1. (!r2. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r1) /\ ((MEM u) r2)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))) z))
T c= c==> ! ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b8 c/\ cgood_list_nodes b8 c/\ cmarked_list b8 b9 b10 b11 c/\ c~ cfinal_list b8 b10 c/\ c= cl'z b8 b9 b10 b11 b0 c/\ c= cl'y b8 b10 b11 b6 c/\ c= cprev_el b10 b0 b7 c/\ cfinal_list b8 b1 c/\ cfinal_list b8 b2 c/\ c= cSND csplit_normal_list b8 b10 b5 b6 b7 b2 c/\ c= cFST csplit_normal_list b8 b10 b5 b6 b7 b1 c/\ c= cfind_face b8 b11 b5 c/\ cMEM b4 b1 cMEM b3 b2 c? / c/\ ccontour_list b8 b12 c/\ c~ c= b12 cNIL c/\ c= cHD b12 b3 c/\ c= cLAST b12 b4 cSUBSET * part cset_of_list b12 * part cset_of_list cflatten cfilter * part cfinal_list b8 ccat creplace b10 cCONS cSND csplit_normal_list b8 b10 b5 b6 b7 cNIL b9 cCONS cFST csplit_normal_list b8 b10 b5 b6 b7 cNIL * / ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b8 c/\ cgood_list_nodes b8 c/\ cmarked_list b8 b9 b10 b11 c/\ c~ cfinal_list b8 b10 c/\ c= cl'z b8 b9 b10 b11 b0 c/\ c= cl'y b8 b10 b11 b6 c/\ c= cprev_el b10 b0 b7 c/\ cfinal_list b8 b1 c/\ cfinal_list b8 b2 c/\ c= cSND csplit_normal_list b8 b10 b5 b6 b7 b2 c/\ c= cFST csplit_normal_list b8 b10 b5 b6 b7 b1 c/\ c= cfind_face b8 b11 b5 c/\ cMEM b4 b1 cMEM b3 b2 c? / c/\ ccontour_list b8 b12 c/\ c~ c= b12 cNIL c/\ c= cHD b12 b3 c/\ c= cLAST b12 b4 cSUBSET * part cset_of_list b12 * part cset_of_list cflatten cfilter * part cfinal_list b8 ccat creplace b10 cCONS cSND csplit_normal_list b8 b10 b5 b6 b7 cNIL b9 cCONS cFST csplit_normal_list b8 b10 b5 b6 b7 cNIL f0 * / ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b8 c/\ cgood_list_nodes b8 c/\ cmarked_list b8 b9 b10 b11 c/\ c~ cfinal_list b8 b10 c/\ c= cl'z b8 b9 b10 b11 b0 c/\ c= cl'y b8 b10 b11 b6 c/\ c= cprev_el b10 b0 b7 c/\ cfinal_list b8 b1 c/\ cfinal_list b8 b2 c/\ c= cSND csplit_normal_list b8 b10 b5 b6 b7 b2 c/\ c= cFST csplit_normal_list b8 b10 b5 b6 b7 b1 c/\ c= cfind_face b8 b11 b5 c/\ cMEM b4 b1 cMEM b3 b2 c? / c/\ ccontour_list b8 b12 c/\ c~ c= b12 cNIL c/\ c= cHD b12 b3 c/\ c= cLAST b12 b4 cSUBSET * part cset_of_list b12 * part cset_of_list cflatten cfilter * part cfinal_list b8 ccat creplace b10 cCONS cSND csplit_normal_list b8 b10 b5 b6 b7 cNIL b9 cCONS cFST csplit_normal_list b8 b10 b5 b6 b7 cNIL f0
+ (~ (r' = NIL)), (r' = s), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))), ((final_list L) r2) |- ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> c~ c= f0 cNIL c==> c= f0 f1 c==> c= f2 cSND csplit_normal_list f3 f4 f5 f6 f7 c==> cMEM f2 creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f8 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cSND csplit_normal_list f3 f4 f5 f6 f7 c==> cfinal_list f3 f2 c==> cIN f9 * part cset_of_list f1 cIN f9 * part cset_of_list cflatten cfilter * part cfinal_list f3 cAPPEND creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f3 f4 f5 f6 f7 cNIL
+ ((HD r') = u), ((LAST r') = v), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))), ((contour_list L) r'), ((final_list L) r2) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c= cHD f0 f1 c==> c= cLAST f0 f2 c==> c= f3 cSND csplit_normal_list f4 f5 f6 f7 f8 c==> c/\ cSUBSET * part cset_of_list f0 * part cset_of_list cSND csplit_normal_list f4 f5 f6 f7 f8 c~ c= f0 cNIL c==> cMEM f3 creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cSND csplit_normal_list f4 f5 f6 f7 f8 c==> ccontour_list f4 f0 c==> cfinal_list f4 f3 c? / c/\ ccontour_list f4 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f4 ccat creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 cCONS cFST csplit_normal_list f4 f5 f6 f7 f8 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f2 f1 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> cMEM f4 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (FST (((((split_normal_list L) r) f) y) z1))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f5 f6 c==> c= cfind_face f0 f5 f2 c==> c= cfind_face f0 f3 f2 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c\/ cMEM f7 f8 c/\ cMEM f1 f8 c= f7 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f1 f8 c= f9 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c< cindexf f6 f3 f2 cindexf f6 f10 f2 c==> cMEM f11 f7 c==> cMEM f12 f9 c==> cMEM f3 f2 c==> cMEM f10 f2 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL c==> cMEM cFST csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f8 f1 f5 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cfinal_list f0 f9 c==> c= f7 cFST csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM u) r1) /\ (((MEM r1) N) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f8 f9 c==> cMEM f9 f6 c==> c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f11 f6 c/\ cMEM f1 f6 c= f11 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (r2 = (FST (((((split_normal_list L) r) f) y) z1))), (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL))))), ((contour_list L) r'), ((final_list L) r2) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c= f0 cFST csplit_normal_list f1 f2 f3 f4 f5 c==> c/\ c= cHD f6 f7 c/\ c= cLAST f6 f8 c/\ cSUBSET * part cset_of_list f6 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5 c~ c= f6 cNIL c==> ccontour_list f1 f6 c==> cfinal_list f1 f0 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f9 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
- |- ((\m. ((((APPEND l) m) = NIL) = ((l = NIL) /\ (m = NIL)))) m)
T * / c= c= cAPPEND f0 b0 cNIL c/\ c= f0 cNIL c= b0 cNIL f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) y) = f), ((((marked_list L) N) r) x) |- (((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f5 f7 c==> cmarked_list f0 f6 f1 f4 c= c==> cuniq cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f9 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f6 f1 f4 c~ cfinal_list f0 f1 cuniq cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f4 cl'y f0 f1 f4 cprev_el f1 cl'z f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f9 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> c/\ cMEM f1 f6 c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), ((MEM d) l), ((MEM l) N), ((final_list L) l) |- ((((~ (l = r)) /\ ((MEM l) N)) ==> ((MEM l) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N))) = ((MEM l) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)))
T c==> c~ cfinal_list f0 f1 c==> cMEM f2 f3 c==> cMEM f3 f4 c==> cfinal_list f0 f3 c= c==> c/\ c~ c= f3 f1 cMEM f3 f4 cMEM f3 creplace f1 cCONS cSND csplit_normal_list f0 f1 f5 f6 f7 cNIL f4 cMEM f3 creplace f1 cCONS cSND csplit_normal_list f0 f1 f5 f6 f7 cNIL f4
- |- (((!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))) ==> ((\f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))) f)) = ((\f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))) f))
T c= c==> ! ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c~ cfinal_list b3 b5 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 b1 c/\ c= cprev_el b5 f0 b2 c/\ cfinal_list b3 f1 c/\ cfinal_list b3 f2 c/\ c= cSND csplit_normal_list b3 b5 b0 b1 b2 f2 c/\ cMEM f1 b4 c/\ c= cfind_face b3 b6 b0 c/\ cMEM f3 f2 cMEM f4 f1 c? / c/\ ccontour_list b3 b7 c/\ c~ c= b7 cNIL c/\ c= cHD b7 f4 c/\ c= cLAST b7 f3 cSUBSET * part cset_of_list b7 * part cset_of_list cflatten cfilter * part cfinal_list b3 ccat creplace b5 cCONS cSND csplit_normal_list b3 b5 b0 b1 b2 cNIL b4 cCONS cFST csplit_normal_list b3 b5 b0 b1 b2 cNIL * / ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c~ cfinal_list b3 b5 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 b1 c/\ c= cprev_el b5 f0 b2 c/\ cfinal_list b3 f1 c/\ cfinal_list b3 f2 c/\ c= cSND csplit_normal_list b3 b5 b0 b1 b2 f2 c/\ cMEM f1 b4 c/\ c= cfind_face b3 b6 b0 c/\ cMEM f3 f2 cMEM f4 f1 c? / c/\ ccontour_list b3 b7 c/\ c~ c= b7 cNIL c/\ c= cHD b7 f4 c/\ c= cLAST b7 f3 cSUBSET * part cset_of_list b7 * part cset_of_list cflatten cfilter * part cfinal_list b3 ccat creplace b5 cCONS cSND csplit_normal_list b3 b5 b0 b1 b2 cNIL b4 cCONS cFST csplit_normal_list b3 b5 b0 b1 b2 cNIL f5 * / ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c~ cfinal_list b3 b5 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 b1 c/\ c= cprev_el b5 f0 b2 c/\ cfinal_list b3 f1 c/\ cfinal_list b3 f2 c/\ c= cSND csplit_normal_list b3 b5 b0 b1 b2 f2 c/\ cMEM f1 b4 c/\ c= cfind_face b3 b6 b0 c/\ cMEM f3 f2 cMEM f4 f1 c? / c/\ ccontour_list b3 b7 c/\ c~ c= b7 cNIL c/\ c= cHD b7 f4 c/\ c= cLAST b7 f3 cSUBSET * part cset_of_list b7 * part cset_of_list cflatten cfilter * part cfinal_list b3 ccat creplace b5 cCONS cSND csplit_normal_list b3 b5 b0 b1 b2 cNIL b4 cCONS cFST csplit_normal_list b3 b5 b0 b1 b2 cNIL f5
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((find_face L) y) = f) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cfind_face f0 f3 f4 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f10 f1 c/\ cMEM f2 f1 c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c< cindexf f5 f8 f4 cindexf f5 f6 f4 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f8 f4 c==> cMEM f6 f4 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> cMEM f10 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c==> c= cfind_face f0 f8 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
- (good_list L) |- ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> (((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cl'y f0 f2 f3 f5 c==> c= cprev_el f2 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL c==> cMEM f8 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> c==> cMEM f7 creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 c\/ cMEM f7 f1 c/\ cMEM f2 f1 c= f7 cSND csplit_normal_list f0 f2 f9 f5 f6 c==> c==> cMEM f8 creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 c\/ cMEM f8 f1 c/\ cMEM f2 f1 c= f8 cSND csplit_normal_list f0 f2 f9 f5 f6 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f3 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ |- (((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))) L))
T c= c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cprev_el b2 f0 f2 c/\ cfinal_list b0 f3 c/\ cfinal_list b0 f4 c/\ c= cSND csplit_normal_list b0 b2 f5 f1 f2 f4 c/\ c= cFST csplit_normal_list b0 b2 f5 f1 f2 f3 c/\ c= cfind_face b0 b3 f5 c/\ cMEM f6 f3 cMEM f7 f4 c? / c/\ ccontour_list b0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 f7 c/\ c= cLAST b4 f6 cSUBSET * part cset_of_list b4 * part cset_of_list cflatten cfilter * part cfinal_list b0 ccat creplace b2 cCONS cSND csplit_normal_list b0 b2 f5 f1 f2 cNIL b1 cCONS cFST csplit_normal_list b0 b2 f5 f1 f2 cNIL * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cprev_el b2 f0 f2 c/\ cfinal_list b0 f3 c/\ cfinal_list b0 f4 c/\ c= cSND csplit_normal_list b0 b2 f5 f1 f2 f4 c/\ c= cFST csplit_normal_list b0 b2 f5 f1 f2 f3 c/\ c= cfind_face b0 b3 f5 c/\ cMEM f6 f3 cMEM f7 f4 c? / c/\ ccontour_list b0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 f7 c/\ c= cLAST b4 f6 cSUBSET * part cset_of_list b4 * part cset_of_list cflatten cfilter * part cfinal_list b0 ccat creplace b2 cCONS cSND csplit_normal_list b0 b2 f5 f1 f2 cNIL b1 cCONS cFST csplit_normal_list b0 b2 f5 f1 f2 cNIL f8 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cprev_el b2 f0 f2 c/\ cfinal_list b0 f3 c/\ cfinal_list b0 f4 c/\ c= cSND csplit_normal_list b0 b2 f5 f1 f2 f4 c/\ c= cFST csplit_normal_list b0 b2 f5 f1 f2 f3 c/\ c= cfind_face b0 b3 f5 c/\ cMEM f6 f3 cMEM f7 f4 c? / c/\ ccontour_list b0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 f7 c/\ c= cLAST b4 f6 cSUBSET * part cset_of_list b4 * part cset_of_list cflatten cfilter * part cfinal_list b0 ccat creplace b2 cCONS cSND csplit_normal_list b0 b2 f5 f1 f2 cNIL b1 cCONS cFST csplit_normal_list b0 b2 f5 f1 f2 cNIL f8
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM v) r2), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM v) r2) /\ (((MEM u) r1) ==> (((MEM r1) N) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f10 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f8 f9 c==> cMEM f11 f10 c==> cMEM f10 f6 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f9 f6 c/\ cMEM f1 f6 c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((final_list L) r1), ((((marked_list L) N) r) x) |- (((final_list L) r1) /\ (((final_list L) r2) ==> (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c/\ cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 c==> c= cfind_face f0 f4 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cMEM f1 f6 c==> c= f7 cSND csplit_normal_list f0 f1 f9 f5 f3 c==> c= f8 cSND csplit_normal_list f0 f1 f9 f5 f3 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL
+ ((MEM u) r1), ((final_list L) r2) |- ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> cMEM f0 f1 c==> cfinal_list f2 f3 c==> cuniq cFST csplit_normal_list f2 f4 f5 f6 f7 c==> cloop_list f2 cFST csplit_normal_list f2 f4 f5 f6 f7 c==> c= f1 cFST csplit_normal_list f2 f4 f5 f6 f7 c==> c= f3 cFST csplit_normal_list f2 f4 f5 f6 f7 c==> cMEM f8 cFST csplit_normal_list f2 f4 f5 f6 f7 c? / c/\ ccontour_list f2 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f0 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f2 ccat creplace f4 cCONS cSND csplit_normal_list f2 f4 f5 f6 f7 cNIL f9 cCONS cFST csplit_normal_list f2 f4 f5 f6 f7 cNIL
+ |- (((!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) ==> ((\x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) x)) = ((\x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) x))
T c= c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 * / ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 f0 * / ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 f0
- |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ |- (((!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) ==> ((\s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) s1)) = ((\s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) s1))
T c= c==> ! ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 * / ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1 * / ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
+ (uniq (list_of_darts L)), (((next_el f) x) = w), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f4 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f9 f6 c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((good_list L) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cfind_face f0 f3 f4 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f10 f1 c/\ cMEM f2 f1 c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> cMEM f10 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c==> cgood_list f0 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
+ (~ (s = NIL)), (~ ((final_list L) r)), ((HD s) = u), ((LAST s) = v), (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))), ((contour_list L) s) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ c= f0 cNIL c==> c~ cfinal_list f1 f2 c==> c= cHD f0 f3 c==> c= cLAST f0 f4 c==> c/\ c= cLAST f0 f4 cSUBSET * part cset_of_list f0 * part cset_of_list cfinal_dart_list f1 f5 c==> ccontour_list f1 f0 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f3 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f6 f7 f8 cNIL f5 cCONS cFST csplit_normal_list f1 f2 f6 f7 f8 cNIL
+ (~ ((final_list L) r)), (x' IN (set_of_list s)), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) |- (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))
T c==> c~ cfinal_list f0 f1 c==> cIN f2 * part cset_of_list f3 c==> cSUBSET * part cset_of_list f3 * part cset_of_list cfinal_dart_list f0 f4 cIN f2 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f5 f6 f7 cNIL f4 cCONS cFST csplit_normal_list f0 f1 f5 f6 f7 cNIL
- |- (((!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))) ==> ((\r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))) r1)) = ((\r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))) r1))
T c= c==> ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c~ cfinal_list b6 b8 c/\ c= cl'z b6 b7 b8 b9 f0 c/\ c= cl'y b6 b8 b9 b4 c/\ c= cprev_el b8 f0 b5 c/\ cfinal_list b6 b0 c/\ cfinal_list b6 f1 c/\ c= cSND csplit_normal_list b6 b8 b3 b4 b5 f1 c/\ cMEM b0 b7 c/\ c= cfind_face b6 b9 b3 c/\ cMEM b2 f1 cMEM b1 b0 c? / c/\ ccontour_list b6 b10 c/\ c~ c= b10 cNIL c/\ c= cHD b10 b1 c/\ c= cLAST b10 b2 cSUBSET * part cset_of_list b10 * part cset_of_list cflatten cfilter * part cfinal_list b6 ccat creplace b8 cCONS cSND csplit_normal_list b6 b8 b3 b4 b5 cNIL b7 cCONS cFST csplit_normal_list b6 b8 b3 b4 b5 cNIL * / ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c~ cfinal_list b6 b8 c/\ c= cl'z b6 b7 b8 b9 f0 c/\ c= cl'y b6 b8 b9 b4 c/\ c= cprev_el b8 f0 b5 c/\ cfinal_list b6 b0 c/\ cfinal_list b6 f1 c/\ c= cSND csplit_normal_list b6 b8 b3 b4 b5 f1 c/\ cMEM b0 b7 c/\ c= cfind_face b6 b9 b3 c/\ cMEM b2 f1 cMEM b1 b0 c? / c/\ ccontour_list b6 b10 c/\ c~ c= b10 cNIL c/\ c= cHD b10 b1 c/\ c= cLAST b10 b2 cSUBSET * part cset_of_list b10 * part cset_of_list cflatten cfilter * part cfinal_list b6 ccat creplace b8 cCONS cSND csplit_normal_list b6 b8 b3 b4 b5 cNIL b7 cCONS cFST csplit_normal_list b6 b8 b3 b4 b5 cNIL f2 * / ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c~ cfinal_list b6 b8 c/\ c= cl'z b6 b7 b8 b9 f0 c/\ c= cl'y b6 b8 b9 b4 c/\ c= cprev_el b8 f0 b5 c/\ cfinal_list b6 b0 c/\ cfinal_list b6 f1 c/\ c= cSND csplit_normal_list b6 b8 b3 b4 b5 f1 c/\ cMEM b0 b7 c/\ c= cfind_face b6 b9 b3 c/\ cMEM b2 f1 cMEM b1 b0 c? / c/\ ccontour_list b6 b10 c/\ c~ c= b10 cNIL c/\ c= cHD b10 b1 c/\ c= cLAST b10 b2 cSUBSET * part cset_of_list b10 * part cset_of_list cflatten cfilter * part cfinal_list b6 ccat creplace b8 cCONS cSND csplit_normal_list b6 b8 b3 b4 b5 cNIL b7 cCONS cFST csplit_normal_list b6 b8 b3 b4 b5 cNIL f2
- (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> cMEM f10 f6 c==> cMEM f11 f9 c==> cMEM f2 f1 c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f7 f4 c==> cMEM f12 f4 c==> c< cindexf f5 f7 f4 cindexf f5 f12 f4 c==> c= cfind_face f0 f7 f4 c==> cMEM cSND csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
+ |- (((?d. (x' = d)) ==> ((x' IN (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))) = ((x' IN (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c= c==> c? / c= f0 b0 c==> cIN f0 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 cIN f0 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c==> cIN f0 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 cIN f0 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cuniq cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f4 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f6 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f6 f7 f8 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f4 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f6 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f6 f7 f8 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((final_list L) r1), ((((marked_list L) N) r) x) |- (((final_list L) r2) ==> (((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> (((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c==> cfinal_list f0 f8 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL c==> c= cfind_face f0 f4 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 c\/ cMEM f7 f6 c/\ cMEM f1 f6 c= f7 cSND csplit_normal_list f0 f1 f9 f5 f3 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f9 f5 f3 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL
+ (!x. ((x IN (set_of_list s)) ==> (x IN (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))))) |- ((\x. ((x IN (set_of_list s)) ==> (x IN (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))))) x')
T c==> ! c==> cIN b0 * part cset_of_list f0 cIN b0 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5 * / c==> cIN b0 * part cset_of_list f0 cIN b0 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5 f6
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r2) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f11 f6 c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- |- ((\f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))) f)
T * / ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c~ cfinal_list b3 b5 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 b1 c/\ c= cprev_el b5 f0 b2 c/\ cfinal_list b3 f1 c/\ cfinal_list b3 f2 c/\ c= cSND csplit_normal_list b3 b5 b0 b1 b2 f2 c/\ c= cFST csplit_normal_list b3 b5 b0 b1 b2 f1 c/\ c= cfind_face b3 b6 b0 c/\ cMEM f3 f2 cMEM f4 f1 c? / c/\ ccontour_list b3 b7 c/\ c~ c= b7 cNIL c/\ c= cHD b7 f4 c/\ c= cLAST b7 f3 cSUBSET * part cset_of_list b7 * part cset_of_list cflatten cfilter * part cfinal_list b3 ccat creplace b5 cCONS cSND csplit_normal_list b3 b5 b0 b1 b2 cNIL b4 cCONS cFST csplit_normal_list b3 b5 b0 b1 b2 cNIL f5
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= f9 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> cMEM f10 f7 c==> cMEM f11 f9 c==> cMEM f1 f6 c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c/\ c\/ cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cMEM f7 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c/\ c= cfind_face f0 f4 f8 c/\ cMEM f9 f7 cMEM f10 f11 c==> c\/ cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cMEM f7 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> cfinal_list f0 f11 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f9 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (FST (((((split_normal_list L) r) f) y) z1))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f5 f6 c==> c= cfind_face f0 f5 f2 c==> c= cfind_face f0 f3 f2 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c\/ cMEM f7 f8 c/\ cMEM f1 f8 c= f7 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f1 f8 c= f9 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c< cindexf f6 f3 f2 cindexf f6 f10 f2 c==> cMEM f11 f7 c==> cMEM f12 f9 c==> cMEM f3 f2 c==> cMEM f10 f2 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL c==> cMEM cFST csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f8 f1 f5 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((final_list L) r1), ((((marked_list L) N) r) x) |- (((final_list L) r1) /\ (((final_list L) r2) ==> (((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> (((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c/\ cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL c==> c= cfind_face f0 f4 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 c\/ cMEM f7 f6 c/\ cMEM f1 f6 c= f7 cSND csplit_normal_list f0 f1 f9 f5 f3 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f9 f5 f3 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL
+ (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- (!d. (((\d. (x' = d)) d) ==> ((x' IN (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f0 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 c==> cfinal_list f1 f0 ! c==> * / c= f7 b1 b0 c==> cIN f7 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 cIN f7 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c= f8 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f9 f4 c==> cMEM f10 f8 c==> cMEM f5 f11 c==> cMEM f8 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f11 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f8 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cSND csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f11 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cSND csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f11 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- |- (((!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) ==> ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)) = ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f))
T c= c==> ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f8 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r) N) /\ ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f1 f6 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f1 f6 c==> c= f11 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ |- (((!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) ==> ((\z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) z1)) = ((\z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) z1))
T c= c==> ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ c= cSND csplit_normal_list b1 b3 f4 f1 b0 f3 c/\ c= cFST csplit_normal_list b1 b3 f4 f1 b0 f2 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f2 cMEM f6 f3 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f6 c/\ c= cLAST b5 f5 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ c= cSND csplit_normal_list b1 b3 f4 f1 b0 f3 c/\ c= cFST csplit_normal_list b1 b3 f4 f1 b0 f2 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f2 cMEM f6 f3 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f6 c/\ c= cLAST b5 f5 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL f7 * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ c= cSND csplit_normal_list b1 b3 f4 f1 b0 f3 c/\ c= cFST csplit_normal_list b1 b3 f4 f1 b0 f2 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f2 cMEM f6 f3 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f6 c/\ c= cLAST b5 f5 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL f7
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- (x' IN (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) |- ((x' IN (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) = T)
T c==> cIN f0 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 c= cIN f0 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 cT
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM y) f) /\ (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f2 f1 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> cMEM f6 f1 c==> cMEM f4 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ cMEM f6 f1 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
+ |- (((!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((MEM r2) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r1) /\ ((MEM v) r2)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))) ==> ((\v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((MEM r2) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r1) /\ ((MEM v) r2)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))) v)) = ((\v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((MEM r2) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r1) /\ ((MEM v) r2)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))) v))
T c= c==> ! ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ cfinal_list b4 f1 c/\ cfinal_list b4 f2 c/\ c= cSND csplit_normal_list b4 b6 b1 b2 b3 f2 c/\ cMEM f1 b5 c/\ c= cfind_face b4 b7 b1 c/\ cMEM f3 f2 cMEM b0 f1 c? / c/\ ccontour_list b4 b8 c/\ c~ c= b8 cNIL c/\ c= cHD b8 f3 c/\ c= cLAST b8 b0 cSUBSET * part cset_of_list b8 * part cset_of_list cflatten cfilter * part cfinal_list b4 ccat creplace b6 cCONS cSND csplit_normal_list b4 b6 b1 b2 b3 cNIL b5 cCONS cFST csplit_normal_list b4 b6 b1 b2 b3 cNIL * / ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ cfinal_list b4 f1 c/\ cfinal_list b4 f2 c/\ c= cSND csplit_normal_list b4 b6 b1 b2 b3 f2 c/\ cMEM f1 b5 c/\ c= cfind_face b4 b7 b1 c/\ cMEM f3 f2 cMEM b0 f1 c? / c/\ ccontour_list b4 b8 c/\ c~ c= b8 cNIL c/\ c= cHD b8 f3 c/\ c= cLAST b8 b0 cSUBSET * part cset_of_list b8 * part cset_of_list cflatten cfilter * part cfinal_list b4 ccat creplace b6 cCONS cSND csplit_normal_list b4 b6 b1 b2 b3 cNIL b5 cCONS cFST csplit_normal_list b4 b6 b1 b2 b3 cNIL f4 * / ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ cfinal_list b4 f1 c/\ cfinal_list b4 f2 c/\ c= cSND csplit_normal_list b4 b6 b1 b2 b3 f2 c/\ cMEM f1 b5 c/\ c= cfind_face b4 b7 b1 c/\ cMEM f3 f2 cMEM b0 f1 c? / c/\ ccontour_list b4 b8 c/\ c~ c= b8 cNIL c/\ c= cHD b8 f3 c/\ c= cLAST b8 b0 cSUBSET * part cset_of_list b8 * part cset_of_list cflatten cfilter * part cfinal_list b4 ccat creplace b6 cCONS cSND csplit_normal_list b4 b6 b1 b2 b3 cNIL b5 cCONS cFST csplit_normal_list b4 b6 b1 b2 b3 cNIL f4
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> (((MEM r2) N) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> cfinal_list f0 f7 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c==> c= cfind_face f0 f4 f8 c==> cMEM f10 f9 c==> cMEM f11 f7 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c\/ cMEM f7 f6 c/\ cMEM f1 f6 c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> cMEM f9 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> cMEM f9 f7 c==> cMEM f10 f11 c==> cfinal_list f0 f7 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> c= f11 cFST csplit_normal_list f0 f1 f8 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ (~ (r' = NIL)), (r' = s), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))), ((final_list L) r2) |- (((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))) = T)
T c==> c~ c= f0 cNIL c==> c= f0 f1 c==> c= f2 cFST csplit_normal_list f3 f4 f5 f6 f7 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cFST csplit_normal_list f3 f4 f5 f6 f7 c==> cfinal_list f3 f2 c= c==> cIN f8 * part cset_of_list f1 cIN f8 * part cset_of_list cflatten cfilter * part cfinal_list f3 cAPPEND creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f9 cCONS cFST csplit_normal_list f3 f4 f5 f6 f7 cNIL cT
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (r2 = (SND (((((split_normal_list L) r) f) y) z1))))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c\/ cMEM f9 f6 c= f9 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> cMEM f10 f7 c==> cMEM f11 f9 c==> cMEM f1 f6 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> cfinal_list f0 f7 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1
+ (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- (((!x. (((\r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL))))))) x) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))) ==> ((?r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))) = ((?r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c= f0 cFST csplit_normal_list f1 f2 f3 f4 f5 c==> cfinal_list f1 f0 c= c==> ! c==> * / c/\ ccontour_list f1 b1 c/\ c= cHD b1 f6 c/\ c= cLAST b1 f7 c/\ cSUBSET * part cset_of_list b1 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5 c~ c= b1 cNIL b0 c? / c/\ ccontour_list f1 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f6 c/\ c= cLAST b1 f7 cSUBSET * part cset_of_list b1 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c==> c? / c/\ ccontour_list f1 b0 c/\ c= cHD b0 f6 c/\ c= cLAST b0 f7 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5 c~ c= b0 cNIL c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f6 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c==> c? / c/\ ccontour_list f1 b0 c/\ c= cHD b0 f6 c/\ c= cLAST b0 f7 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5 c~ c= b0 cNIL c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f6 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= cfind_face f0 f8 f4 c==> c< cindexf f5 f8 f4 cindexf f5 f6 f4 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f8 f4 c==> cMEM f6 f4 c==> cMEM f2 f1 c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c==> cMEM cSND csplit_normal_list f0 f2 f4 f8 f7 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cuniq cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
+ (((next_el f) x) = w), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((final_list L) r2) |- ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))
T c==> c= cnext_el f0 f1 f2 c==> c==> cMEM f3 creplace f4 cCONS cSND csplit_normal_list f5 f4 f0 f6 f7 cNIL f8 c\/ cMEM f3 f8 c/\ cMEM f4 f8 c= f3 cSND csplit_normal_list f5 f4 f0 f6 f7 c==> c==> cMEM f9 creplace f4 cCONS cSND csplit_normal_list f5 f4 f0 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f4 f8 c= f9 cSND csplit_normal_list f5 f4 f0 f6 f7 c==> cMEM f10 f3 c==> cfinal_list f5 f9 c==> cuniq clist_of_darts f5 c==> call / c~ c= b0 cNIL f5 c==> ! c==> cMEM b0 clist_of_darts f5 cMEM c, cSND b0 cFST b0 clist_of_darts f5 c==> cMEM f6 f0 c==> cMEM f11 f0 c==> c< cindexf f2 f6 f0 cindexf f2 f11 f0 c==> c= cfind_face f5 f6 f0 c==> cMEM cFST csplit_normal_list f5 f4 f0 f6 f7 cntrans f5 f8 f4 f1 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f5 f4 f0 f6 f7 c==> cloop_list f5 cFST csplit_normal_list f5 f4 f0 f6 f7 c==> c= f3 cFST csplit_normal_list f5 f4 f0 f6 f7 c==> c= f9 cFST csplit_normal_list f5 f4 f0 f6 f7 c==> cMEM f12 cFST csplit_normal_list f5 f4 f0 f6 f7 c? / c/\ ccontour_list f5 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f5 ccat creplace f4 cCONS cSND csplit_normal_list f5 f4 f0 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f5 f4 f0 f6 f7 cNIL
- |- (((!m. ((HD ((APPEND l) m)) = (((COND (l = NIL)) (HD m)) (HD l)))) ==> ((\m. ((HD ((APPEND l) m)) = (((COND (l = NIL)) (HD m)) (HD l)))) m)) = ((\m. ((HD ((APPEND l) m)) = (((COND (l = NIL)) (HD m)) (HD l)))) m))
T c= c==> ! c= cHD cAPPEND f0 b0 cCOND c= f0 cNIL cHD b0 cHD f0 * / c= cHD cAPPEND f0 b0 cCOND c= f0 cNIL cHD b0 cHD f0 f1 * / c= cHD cAPPEND f0 b0 cCOND c= f0 cNIL cHD b0 cHD f0 f1
+ (~ ((final_list L) r)), ((MEM d) l), ((MEM l) N), ((final_list L) l) |- ((\l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l))) l)
T c==> c~ cfinal_list f0 f1 c==> cMEM f2 f3 c==> cMEM f3 f4 c==> cfinal_list f0 f3 * / c/\ c/\ cfinal_list f0 b0 c\/ cMEM b0 creplace f1 cCONS cSND csplit_normal_list f0 f1 f5 f6 f7 cNIL f4 cMEM b0 cCONS cFST csplit_normal_list f0 f1 f5 f6 f7 cNIL cMEM f2 b0 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= cfind_face f0 f8 f4 c==> c< cindexf f5 f8 f4 cindexf f5 f6 f4 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f8 f4 c==> cMEM f6 f4 c==> cMEM f2 f1 c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c==> cMEM cSND csplit_normal_list f0 f2 f4 f8 f7 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 f3 f4 c/\ c= cl'y f0 f2 f3 f5 c/\ c= cprev_el f2 f4 f6 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ cMEM f8 f1 c/\ c= cFST csplit_normal_list f0 f2 f9 f5 f6 f7 c/\ c= cfind_face f0 f3 f9 c/\ cMEM f10 f8 cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
+ (~ (r' = NIL)), (r' = s), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))), ((final_list L) r2) |- (!x. ((x IN (set_of_list s)) ==> (x IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c==> c~ c= f0 cNIL c==> c= f0 f1 c==> c= f2 cFST csplit_normal_list f3 f4 f5 f6 f7 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cFST csplit_normal_list f3 f4 f5 f6 f7 c==> cfinal_list f3 f2 ! c==> cIN b0 * part cset_of_list f1 cIN b0 * part cset_of_list cflatten cfilter * part cfinal_list f3 cAPPEND creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f3 f4 f5 f6 f7 cNIL
- (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((final_list L) r2) |- ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))
T c==> c==> cMEM f0 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c\/ cMEM f0 f6 c/\ cMEM f1 f6 c= f0 cSND csplit_normal_list f2 f1 f3 f4 f5 c==> cMEM f7 f0 c==> cMEM f8 f9 c==> cfinal_list f2 f9 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c\/ cMEM f9 f6 c/\ cMEM f1 f6 c= f9 cSND csplit_normal_list f2 f1 f3 f4 f5 c==> c= cnext_el f3 f10 f11 c==> cuniq clist_of_darts f2 c==> call / c~ c= b0 cNIL f2 c==> ! c==> cMEM b0 clist_of_darts f2 cMEM c, cSND b0 cFST b0 clist_of_darts f2 c==> cMEM f4 f3 c==> cMEM f12 f3 c==> c< cindexf f11 f4 f3 cindexf f11 f12 f3 c==> c= cfind_face f2 f4 f3 c==> cMEM cFST csplit_normal_list f2 f1 f3 f4 f5 cntrans f2 f6 f1 f10 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f2 f1 f3 f4 f5 c==> cloop_list f2 cFST csplit_normal_list f2 f1 f3 f4 f5 c==> c= f0 cFST csplit_normal_list f2 f1 f3 f4 f5 c==> c= f9 cFST csplit_normal_list f2 f1 f3 f4 f5 c? / c/\ ccontour_list f2 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f2 ccat creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f2 f1 f3 f4 f5 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> cfinal_list f0 f7 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c==> c= cfind_face f0 f4 f8 c==> cMEM f10 f9 c==> cMEM f11 f7 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c\/ cMEM f7 f6 c/\ cMEM f1 f6 c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c\/ cMEM f9 f6 c/\ cMEM f1 f6 c= f9 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f8 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (r2 = (SND (((((split_normal_list L) r) f) y) z1))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> cMEM f9 f7 c==> cMEM f10 f11 c==> cMEM f1 f6 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> cfinal_list f0 f7 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c\/ cMEM f11 f6 c= f11 cSND csplit_normal_list f0 f1 f8 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r1) /\ ((MEM u) r2)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))) = T)
T c= ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cprev_el b2 f0 f2 c/\ cfinal_list b0 f3 c/\ cfinal_list b0 f4 c/\ c= cSND csplit_normal_list b0 b2 f5 f1 f2 f4 c/\ c= cFST csplit_normal_list b0 b2 f5 f1 f2 f3 c/\ c= cfind_face b0 b3 f5 c/\ cMEM f6 f3 cMEM f7 f4 c? / c/\ ccontour_list b0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 f7 c/\ c= cLAST b4 f6 cSUBSET * part cset_of_list b4 * part cset_of_list cflatten cfilter * part cfinal_list b0 ccat creplace b2 cCONS cSND csplit_normal_list b0 b2 f5 f1 f2 cNIL b1 cCONS cFST csplit_normal_list b0 b2 f5 f1 f2 cNIL cT
+ |- (((!x. (!y. (!s. (((uniq s) /\ (((loop_list L) s) /\ (((MEM x) s) /\ ((MEM y) s)))) ==> (?r. (((contour_list L) r) /\ (((HD r) = x) /\ (((LAST r) = y) /\ (((set_of_list r) SUBSET (set_of_list s)) /\ (~ (r = NIL))))))))))) ==> ((\x. (!y. (!s. (((uniq s) /\ (((loop_list L) s) /\ (((MEM x) s) /\ ((MEM y) s)))) ==> (?r. (((contour_list L) r) /\ (((HD r) = x) /\ (((LAST r) = y) /\ (((set_of_list r) SUBSET (set_of_list s)) /\ (~ (r = NIL))))))))))) u)) = ((\x. (!y. (!s. (((uniq s) /\ (((loop_list L) s) /\ (((MEM x) s) /\ ((MEM y) s)))) ==> (?r. (((contour_list L) r) /\ (((HD r) = x) /\ (((LAST r) = y) /\ (((set_of_list r) SUBSET (set_of_list s)) /\ (~ (r = NIL))))))))))) u))
T c= c==> ! ! ! c==> c/\ cuniq b2 c/\ cloop_list f0 b2 c/\ cMEM b0 b2 cMEM b1 b2 c? / c/\ ccontour_list f0 b3 c/\ c= cHD b3 b0 c/\ c= cLAST b3 b1 c/\ cSUBSET * part cset_of_list b3 * part cset_of_list b2 c~ c= b3 cNIL * / ! ! c==> c/\ cuniq b2 c/\ cloop_list f0 b2 c/\ cMEM b0 b2 cMEM b1 b2 c? / c/\ ccontour_list f0 b3 c/\ c= cHD b3 b0 c/\ c= cLAST b3 b1 c/\ cSUBSET * part cset_of_list b3 * part cset_of_list b2 c~ c= b3 cNIL f1 * / ! ! c==> c/\ cuniq b2 c/\ cloop_list f0 b2 c/\ cMEM b0 b2 cMEM b1 b2 c? / c/\ ccontour_list f0 b3 c/\ c= cHD b3 b0 c/\ c= cLAST b3 b1 c/\ cSUBSET * part cset_of_list b3 * part cset_of_list b2 c~ c= b3 cNIL f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f9 f6 c/\ cMEM f1 f6 c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f10 f9 c==> cMEM f11 f8 c==> cMEM f1 f6 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f9 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c= f8 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f9 f4 c==> cMEM f10 f8 c==> cMEM f5 f11 c==> cMEM f8 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f11 c==> cfinal_list f0 f8 c/\ cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cSND csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f11 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cSND csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f11 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- A, (A ==> (B \/ A)) |- (A /\ (B \/ A))
T c==> f0 c==> c==> f0 c\/ f1 f0 c/\ f0 c\/ f1 f0
- |- ((!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c~ cfinal_list b3 b5 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 b1 c/\ c= cprev_el b5 f0 b2 c/\ cfinal_list b3 f1 c/\ cfinal_list b3 f2 c/\ c= cSND csplit_normal_list b3 b5 b0 b1 b2 f2 c/\ cMEM f1 b4 c/\ c= cfind_face b3 b6 b0 c/\ cMEM f3 f2 cMEM f4 f1 c? / c/\ ccontour_list b3 b7 c/\ c~ c= b7 cNIL c/\ c= cHD b7 f4 c/\ c= cLAST b7 f3 cSUBSET * part cset_of_list b7 * part cset_of_list cflatten cfilter * part cfinal_list b3 ccat creplace b5 cCONS cSND csplit_normal_list b3 b5 b0 b1 b2 cNIL b4 cCONS cFST csplit_normal_list b3 b5 b0 b1 b2 cNIL cT
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (FST (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r2) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cFST csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> cMEM f9 f7 c==> cMEM f10 f11 c==> cMEM f11 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c/\ c= f7 cFST csplit_normal_list f0 f1 f8 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), (x' IN (set_of_list s)), ((final_list L) r2) |- (((x' IN (set_of_list s)) ==> (x' IN (set_of_list (SND (((((split_normal_list L) r) f) y) z1))))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f0 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 c==> cIN f7 * part cset_of_list f8 c==> cfinal_list f1 f0 c==> c==> cIN f7 * part cset_of_list f8 cIN f7 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 cIN f7 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
- (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((((next_el f) x) = w) /\ ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f4 f3 f5 c==> c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> cMEM f10 f6 c==> cMEM f11 f9 c==> cMEM f2 f1 c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c==> cfinal_list f0 f9 c/\ c= cnext_el f4 f3 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f7 f4 c==> cMEM f12 f4 c==> c< cindexf f5 f7 f4 cindexf f5 f12 f4 c==> c= cfind_face f0 f7 f4 c==> cMEM cSND csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
- |- ((!d. t) = t)
T c= ! f0 f0
- |- ((!A. (A ==> (A \/ F))) = ((T ==> (T \/ F)) /\ (F ==> (F \/ F))))
T c= ! c==> b0 c\/ b0 cF c/\ c==> cT c\/ cT cF c==> cF c\/ cF cF
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))), (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c==> c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f8 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))) = T)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c= c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0 cT
+ (r' = s), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))), ((final_list L) r2) |- ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> c= f0 f1 c==> c= f2 cSND csplit_normal_list f3 f4 f5 f6 f7 c==> cMEM f2 creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f8 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cSND csplit_normal_list f3 f4 f5 f6 f7 c==> cfinal_list f3 f2 c==> cIN f9 * part cset_of_list f1 cIN f9 * part cset_of_list cflatten cfilter * part cfinal_list f3 cAPPEND creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f3 f4 f5 f6 f7 cNIL
+ |- ((\x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))) x)
T * / ! c= crtrans f0 f1 f2 b0 b1 cSND cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
+ |- ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)
T * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
+ (~ ((final_list L) r)), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r1) N) ==> (((MEM r2) N) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cmarked_list f0 f2 f1 f3 c==> c= cprev_el f1 f4 f5 c==> cfinal_list f0 f6 c==> cfinal_list f0 f7 c==> cMEM f6 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f9 f5 cNIL f2 c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f9 f5 cNIL f2 c==> c= cfind_face f0 f3 f8 c==> cMEM f10 f7 c==> cMEM f11 f6 c==> cMEM f6 f2 c==> cMEM f7 f2 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f9 f5 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f8 f9 f5 cNIL
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cSND csplit_normal_list b0 b2 cfind_face b0 cl'y b0 b2 b3 cl'y b0 b2 b3 cprev_el b2 cl'z b0 b1 b2 b3 cntrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 f0
+ (uniq (FST (((((split_normal_list L) r) f) y) z1))), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((MEM u) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM v) (FST (((((split_normal_list L) r) f) y) z1))), ((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- (((MEM u) (FST (((((split_normal_list L) r) f) y) z1))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= f5 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f6 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f7 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cfinal_list f0 f5 c/\ cMEM f6 cFST csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f6 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
+ (((next_el f) x) = w), ((MEM u) r1), ((final_list L) r2) |- ((((next_el f) x) = w) /\ ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))
T c==> c= cnext_el f0 f1 f2 c==> cMEM f3 f4 c==> cfinal_list f5 f6 c/\ c= cnext_el f0 f1 f2 c==> cuniq clist_of_darts f5 c==> call / c~ c= b0 cNIL f5 c==> ! c==> cMEM b0 clist_of_darts f5 cMEM c, cSND b0 cFST b0 clist_of_darts f5 c==> cMEM f7 f0 c==> cMEM f8 f0 c==> c< cindexf f2 f7 f0 cindexf f2 f8 f0 c==> c= cfind_face f5 f7 f0 c==> cMEM cFST csplit_normal_list f5 f9 f0 f7 f10 cntrans f5 f11 f9 f1 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f5 f9 f0 f7 f10 c==> cloop_list f5 cFST csplit_normal_list f5 f9 f0 f7 f10 c==> c= f4 cFST csplit_normal_list f5 f9 f0 f7 f10 c==> c= f6 cFST csplit_normal_list f5 f9 f0 f7 f10 c==> cMEM f12 cFST csplit_normal_list f5 f9 f0 f7 f10 c? / c/\ ccontour_list f5 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f3 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f5 ccat creplace f9 cCONS cSND csplit_normal_list f5 f9 f0 f7 f10 cNIL f11 cCONS cFST csplit_normal_list f5 f9 f0 f7 f10 cNIL
+ |- (((!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) ==> ((\L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) L)) = ((\L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) L))
T c= c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 * / ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 f0 * / ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 f0
+ |- (((!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) ==> ((\N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) N)) = ((\N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) N))
T c= c==> ! ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 * / ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1 * / ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1
+ |- ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)
T * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((((find_face L) y) = f) /\ (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f4 f1 c==> c==> cMEM f5 creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 c\/ cMEM f5 f8 c/\ cMEM f6 f8 c= f5 cSND csplit_normal_list f0 f6 f1 f4 f7 c==> c==> cMEM f9 creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f6 f8 c= f9 cSND csplit_normal_list f0 f6 f1 f4 f7 c==> c< cindexf f3 f4 f1 cindexf f3 f10 f1 c==> cMEM f11 f5 c==> cMEM f12 f9 c==> cMEM f4 f1 c==> cMEM f10 f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ c= cfind_face f0 f4 f1 c==> cMEM cFST csplit_normal_list f0 f6 f1 f4 f7 cntrans f0 f8 f6 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f6 f1 f4 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f6 f1 f4 f7 c==> c= f5 cFST csplit_normal_list f0 f6 f1 f4 f7 c==> c= f9 cFST csplit_normal_list f0 f6 f1 f4 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f6 f1 f4 f7 cNIL
+ |- ((\L. (!N. (((final_dart_list L) N) = (flatten ((filter (final_list L)) N))))) L)
T * / ! c= cfinal_dart_list b0 b1 cflatten cfilter * part cfinal_list b0 b1 f0
- |- ((\y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))) y)
T * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 b0 c/\ c= cprev_el b4 f0 b1 c/\ cfinal_list b2 f1 c/\ cfinal_list b2 f2 c/\ cMEM f1 b3 c/\ c= cFST csplit_normal_list b2 b4 f3 b0 b1 f2 c/\ c= cfind_face b2 b5 f3 c/\ cMEM f4 f2 cMEM f5 f1 c? / c/\ ccontour_list b2 b6 c/\ c~ c= b6 cNIL c/\ c= cHD b6 f5 c/\ c= cLAST b6 f4 cSUBSET * part cset_of_list b6 * part cset_of_list cflatten cfilter * part cfinal_list b2 ccat creplace b4 cCONS cSND csplit_normal_list b2 b4 f3 b0 b1 cNIL b3 cCONS cFST csplit_normal_list b2 b4 f3 b0 b1 cNIL f6
+ ((\r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL))))))) r') |- (((((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL)))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> * / c/\ ccontour_list f0 b0 c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list cSND csplit_normal_list f0 f3 f4 f5 f6 c~ c= b0 cNIL f7 c= c==> c/\ ccontour_list f0 f7 c/\ c= cHD f7 f1 c/\ c= cLAST f7 f2 c/\ cSUBSET * part cset_of_list f7 * part cset_of_list cSND csplit_normal_list f0 f3 f4 f5 f6 c~ c= f7 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f3 cCONS cSND csplit_normal_list f0 f3 f4 f5 f6 cNIL f8 cCONS cFST csplit_normal_list f0 f3 f4 f5 f6 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f3 cCONS cSND csplit_normal_list f0 f3 f4 f5 f6 cNIL f8 cCONS cFST csplit_normal_list f0 f3 f4 f5 f6 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), (((MEM y) f) /\ (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f)))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM y) f) /\ (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f)))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= cfind_face f0 f3 f4 c==> c/\ cMEM f8 f4 c/\ cMEM f6 f4 c< cindexf f5 f8 f4 cindexf f5 f6 f4 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f2 f1 c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c/\ c/\ cMEM f8 f4 c/\ cMEM f6 f4 c< cindexf f5 f8 f4 cindexf f5 f6 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
+ |- (((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ ((MEM r2) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c= c==> c==> cMEM f0 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c\/ cMEM f0 f6 c/\ cMEM f1 f6 c= f0 cSND csplit_normal_list f2 f1 f3 f4 f5 c? / c/\ ccontour_list f2 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f2 ccat creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f2 f1 f3 f4 f5 cNIL c==> c==> cMEM f0 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c\/ cMEM f0 f6 c/\ cMEM f1 f6 cMEM f0 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL c? / c/\ ccontour_list f2 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f2 ccat creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f2 f1 f3 f4 f5 cNIL
- |- (!s. (((\s. (r' = s)) s) ==> (?s. (r' = s))))
T c==> * / c= f0 b0 f1 c? / c= f0 b0
- |- (((!l1. (!l2. ((set_of_list ((APPEND l1) l2)) = ((set_of_list l1) UNION (set_of_list l2))))) ==> ((\l1. (!l2. ((set_of_list ((APPEND l1) l2)) = ((set_of_list l1) UNION (set_of_list l2))))) l1)) = ((\l1. (!l2. ((set_of_list ((APPEND l1) l2)) = ((set_of_list l1) UNION (set_of_list l2))))) l1))
T c= c==> ! ! c= * part cset_of_list cAPPEND b0 b1 * * part cUNION * part cset_of_list b0 * part cset_of_list b1 * / ! c= * part cset_of_list cAPPEND b0 b1 * * part cUNION * part cset_of_list b0 * part cset_of_list b1 f0 * / ! c= * part cset_of_list cAPPEND b0 b1 * * part cUNION * part cset_of_list b0 * part cset_of_list b1 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f))), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= cfind_face f0 f3 f4 c==> c/\ cMEM f6 f4 c< cindexf f5 f8 f4 cindexf f5 f6 f4 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f8 f4 c==> cMEM f2 f1 c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
- |- ((((\w. (((next_el f) x) = w)) w) ==> (?w. (((next_el f) x) = w))) = T)
T c= c==> * / c= cnext_el f0 f1 b0 f2 c? / c= cnext_el f0 f1 b0 cT
- |- ((!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c~ cfinal_list b3 b5 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 b1 c/\ c= cprev_el b5 f0 b2 c/\ cfinal_list b3 f1 c/\ cfinal_list b3 f2 c/\ cMEM f2 b4 c/\ c= cFST csplit_normal_list b3 b5 b0 b1 b2 f1 c/\ c= cfind_face b3 b6 b0 c/\ cMEM f3 f2 cMEM f4 f1 c? / c/\ ccontour_list b3 b7 c/\ c~ c= b7 cNIL c/\ c= cHD b7 f4 c/\ c= cLAST b7 f3 cSUBSET * part cset_of_list b7 * part cset_of_list cflatten cfilter * part cfinal_list b3 ccat creplace b5 cCONS cSND csplit_normal_list b3 b5 b0 b1 b2 cNIL b4 cCONS cFST csplit_normal_list b3 b5 b0 b1 b2 cNIL cT
- (x' = d), (x' IN (set_of_list s)) |- (d IN (set_of_list s))
T c==> c= f0 f1 c==> cIN f0 * part cset_of_list f2 cIN f1 * part cset_of_list f2
+ (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((x' = d) ==> ((x' IN (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f0 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 c==> cfinal_list f1 f0 c==> c= f7 f8 c==> cIN f7 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 cIN f7 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cprev_el b2 f0 f2 c/\ cfinal_list b0 f3 c/\ cfinal_list b0 f4 c/\ c= cSND csplit_normal_list b0 b2 f5 f1 f2 f4 c/\ c= cFST csplit_normal_list b0 b2 f5 f1 f2 f3 c/\ c= cfind_face b0 b3 f5 c/\ cMEM f6 f4 cMEM f7 f3 c? / c/\ ccontour_list b0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 f7 c/\ c= cLAST b4 f6 cSUBSET * part cset_of_list b4 * part cset_of_list cflatten cfilter * part cfinal_list b0 ccat creplace b2 cCONS cSND csplit_normal_list b0 b2 f5 f1 f2 cNIL b1 cCONS cFST csplit_normal_list b0 b2 f5 f1 f2 cNIL f8
+ |- ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L)
T * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
+ (~ (r' = NIL)), (r' = s), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))), ((final_list L) r2) |- ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))
T c==> c~ c= f0 cNIL c==> c= f0 f1 c==> c= f2 cFST csplit_normal_list f3 f4 f5 f6 f7 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cFST csplit_normal_list f3 f4 f5 f6 f7 c==> cfinal_list f3 f2 cSUBSET * part cset_of_list f1 * part cset_of_list cflatten cfilter * part cfinal_list f3 ccat creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f3 f4 f5 f6 f7 cNIL
- (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f4 f3 f5 c==> c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> cMEM f10 f6 c==> cMEM f11 f9 c==> cMEM f2 f1 c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c==> cfinal_list f0 f9 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f7 f4 c==> cMEM f12 f4 c==> c< cindexf f5 f7 f4 cindexf f5 f12 f4 c==> c= cfind_face f0 f7 f4 c==> cMEM cSND csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
- |- (((!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) ==> ((\z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) z1)) = ((\z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) z1))
T c= c==> ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ cMEM f3 b2 c/\ c= cFST csplit_normal_list b1 b3 f4 f1 b0 f2 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f3 cMEM f6 f2 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f6 c/\ c= cLAST b5 f5 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ cMEM f3 b2 c/\ c= cFST csplit_normal_list b1 b3 f4 f1 b0 f2 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f3 cMEM f6 f2 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f6 c/\ c= cLAST b5 f5 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL f7 * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ cMEM f3 b2 c/\ c= cFST csplit_normal_list b1 b3 f4 f1 b0 f2 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f3 cMEM f6 f2 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f6 c/\ c= cLAST b5 f5 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL f7
+ (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2), ((\d. (x' = d)) d) |- (((\d. (x' = d)) d) /\ ((x' IN (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c==> c= f0 cFST csplit_normal_list f1 f2 f3 f4 f5 c==> cfinal_list f1 f0 c==> * / c= f6 b0 f7 c/\ * / c= f6 b0 f7 c==> cIN f6 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5 cIN f6 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ |- ((\s. (r' = s)) r')
T * / c= f0 b0 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c\/ cMEM f9 f6 c/\ cMEM f1 f6 c= f9 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> cMEM f10 f9 c==> cMEM f11 f7 c==> cMEM f1 f6 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c==> cfinal_list f0 f9 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ ((MEM u) r1), ((MEM y) f), ((final_list L) r2) |- (((MEM y) f) /\ (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))
T c==> cMEM f0 f1 c==> cMEM f2 f3 c==> cfinal_list f4 f5 c/\ cMEM f2 f3 c==> cMEM f6 f3 c==> c< cindexf f7 f2 f3 cindexf f7 f6 f3 c==> c= cfind_face f4 f2 f3 c==> cMEM cFST csplit_normal_list f4 f8 f3 f2 f9 cntrans f4 f10 f8 f11 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f4 f8 f3 f2 f9 c==> cloop_list f4 cFST csplit_normal_list f4 f8 f3 f2 f9 c==> c= f1 cFST csplit_normal_list f4 f8 f3 f2 f9 c==> c= f5 cFST csplit_normal_list f4 f8 f3 f2 f9 c==> cMEM f12 cFST csplit_normal_list f4 f8 f3 f2 f9 c? / c/\ ccontour_list f4 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f0 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f4 ccat creplace f8 cCONS cSND csplit_normal_list f4 f8 f3 f2 f9 cNIL f10 cCONS cFST csplit_normal_list f4 f8 f3 f2 f9 cNIL
- |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ |- (((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))) ==> ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))) N)) = ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))) N))
T c= c==> ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= cl'z f0 b0 b1 b2 f1 c/\ c= cl'y f0 b1 b2 f2 c/\ c= cprev_el b1 f1 f3 c/\ cfinal_list f0 f4 c/\ cfinal_list f0 f5 c/\ cMEM f4 b0 c/\ c= cFST csplit_normal_list f0 b1 f6 f2 f3 f5 c/\ c= cfind_face f0 b2 f6 c/\ cMEM f7 f5 cMEM f8 f4 c? / c/\ ccontour_list f0 b3 c/\ c~ c= b3 cNIL c/\ c= cHD b3 f8 c/\ c= cLAST b3 f7 cSUBSET * part cset_of_list b3 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b1 cCONS cSND csplit_normal_list f0 b1 f6 f2 f3 cNIL b0 cCONS cFST csplit_normal_list f0 b1 f6 f2 f3 cNIL * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= cl'z f0 b0 b1 b2 f1 c/\ c= cl'y f0 b1 b2 f2 c/\ c= cprev_el b1 f1 f3 c/\ cfinal_list f0 f4 c/\ cfinal_list f0 f5 c/\ cMEM f4 b0 c/\ c= cFST csplit_normal_list f0 b1 f6 f2 f3 f5 c/\ c= cfind_face f0 b2 f6 c/\ cMEM f7 f5 cMEM f8 f4 c? / c/\ ccontour_list f0 b3 c/\ c~ c= b3 cNIL c/\ c= cHD b3 f8 c/\ c= cLAST b3 f7 cSUBSET * part cset_of_list b3 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b1 cCONS cSND csplit_normal_list f0 b1 f6 f2 f3 cNIL b0 cCONS cFST csplit_normal_list f0 b1 f6 f2 f3 cNIL f9 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= cl'z f0 b0 b1 b2 f1 c/\ c= cl'y f0 b1 b2 f2 c/\ c= cprev_el b1 f1 f3 c/\ cfinal_list f0 f4 c/\ cfinal_list f0 f5 c/\ cMEM f4 b0 c/\ c= cFST csplit_normal_list f0 b1 f6 f2 f3 f5 c/\ c= cfind_face f0 b2 f6 c/\ cMEM f7 f5 cMEM f8 f4 c? / c/\ ccontour_list f0 b3 c/\ c~ c= b3 cNIL c/\ c= cHD b3 f8 c/\ c= cLAST b3 f7 cSUBSET * part cset_of_list b3 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b1 cCONS cSND csplit_normal_list f0 b1 f6 f2 f3 cNIL b0 cCONS cFST csplit_normal_list f0 b1 f6 f2 f3 cNIL f9
+ |- (((?w. (((next_el f) x) = w)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c= c==> c? / c= cnext_el f0 f1 b0 c? / c/\ ccontour_list f2 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f3 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f2 ccat creplace f5 cCONS cSND csplit_normal_list f2 f5 f0 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f2 f5 f0 f6 f7 cNIL c? / c/\ ccontour_list f2 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f3 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f2 ccat creplace f5 cCONS cSND csplit_normal_list f2 f5 f0 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f2 f5 f0 f6 f7 cNIL
+ (~ ((final_list L) r)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))), (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) N), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c==> c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f11 c==> cMEM f10 f8 c==> cMEM f11 f6 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f11 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((final_list L) r2) |- ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) /\ ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))
T c==> c==> cMEM f0 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c\/ cMEM f0 f6 c/\ cMEM f1 f6 c= f0 cSND csplit_normal_list f2 f1 f3 f4 f5 c==> cMEM f7 f8 c==> cfinal_list f2 f0 c/\ c==> cMEM f0 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c\/ cMEM f0 f6 c/\ cMEM f1 f6 c= f0 cSND csplit_normal_list f2 f1 f3 f4 f5 c==> c= cnext_el f3 f9 f10 c==> cuniq clist_of_darts f2 c==> call / c~ c= b0 cNIL f2 c==> ! c==> cMEM b0 clist_of_darts f2 cMEM c, cSND b0 cFST b0 clist_of_darts f2 c==> cMEM f4 f3 c==> cMEM f11 f3 c==> c< cindexf f10 f4 f3 cindexf f10 f11 f3 c==> c= cfind_face f2 f4 f3 c==> cMEM cFST csplit_normal_list f2 f1 f3 f4 f5 cntrans f2 f6 f1 f9 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f2 f1 f3 f4 f5 c==> cloop_list f2 cFST csplit_normal_list f2 f1 f3 f4 f5 c==> c= f8 cFST csplit_normal_list f2 f1 f3 f4 f5 c==> c= f0 cFST csplit_normal_list f2 f1 f3 f4 f5 c==> cMEM f12 cFST csplit_normal_list f2 f1 f3 f4 f5 c? / c/\ ccontour_list f2 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f2 ccat creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f2 f1 f3 f4 f5 cNIL
- (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cfind_face f0 f3 f4 c==> c==> cMEM f5 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f6 f7 cNIL f1 c\/ cMEM f5 f1 c/\ cMEM f2 f1 c= f5 cSND csplit_normal_list f0 f2 f4 f6 f7 c==> c==> cMEM f8 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f6 f7 cNIL f1 c\/ cMEM f8 f1 c/\ cMEM f2 f1 c= f8 cSND csplit_normal_list f0 f2 f4 f6 f7 c==> cMEM f9 f5 c==> cMEM f10 f8 c==> cMEM f5 cCONS cFST csplit_normal_list f0 f2 f4 f6 f7 cNIL c==> cMEM f8 cCONS cFST csplit_normal_list f0 f2 f4 f6 f7 cNIL c==> cfinal_list f0 f8 c==> c= cnext_el f4 f3 f11 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 f4 c==> cMEM f12 f4 c==> c< cindexf f11 f6 f4 cindexf f11 f12 f4 c==> c= cfind_face f0 f6 f4 c==> cMEM cFST csplit_normal_list f0 f2 f4 f6 f7 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f2 f4 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f6 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f6 f7 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (FST (((((split_normal_list L) r) f) y) z1))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (FST (((((split_normal_list L) r) f) y) z1))), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM y) f), ((MEM z) f), ((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- (((MEM v) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f5 f6 c==> c= f7 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= f8 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f9 c\/ cMEM f7 f9 c/\ cMEM f1 f9 c= f7 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f9 c\/ cMEM f8 f9 c/\ cMEM f1 f9 c= f8 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c< cindexf f6 f3 f2 cindexf f6 f10 f2 c==> cMEM f11 f7 c==> cMEM f3 f2 c==> cMEM f10 f2 c==> cMEM cFST csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f9 f1 f5 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cfinal_list f0 f8 c==> cMEM f12 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f9 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- (((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) N)) = ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) N))
T c= c==> ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 b0 b1 b2 call * part cloop_list f0 cntrans f0 b0 b1 b2 cNUMERAL cBIT1 c_0 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 b0 b1 b2 call * part cloop_list f0 cntrans f0 b0 b1 b2 cNUMERAL cBIT1 c_0 f1 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 b0 b1 b2 call * part cloop_list f0 cntrans f0 b0 b1 b2 cNUMERAL cBIT1 c_0 f1
+ (!x. ((x IN (set_of_list s)) ==> (x IN (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), (x' IN (set_of_list s)), ((final_list L) r2) |- ((!x. ((x IN (set_of_list s)) ==> (x IN (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))))) /\ (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> ! c==> cIN b0 * part cset_of_list f0 cIN b0 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c= f6 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f7 c==> cIN f8 * part cset_of_list f0 c==> cfinal_list f1 f6 c/\ ! c==> cIN b0 * part cset_of_list f0 cIN b0 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 cIN f8 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f7 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
- |- ((!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b7 c/\ cgood_list_nodes b7 c/\ cmarked_list b7 b8 b9 b10 c/\ c~ cfinal_list b7 b9 c/\ c= cl'z b7 b8 b9 b10 f0 c/\ c= cl'y b7 b9 b10 b5 c/\ c= cprev_el b9 f0 b6 c/\ cfinal_list b7 b1 c/\ cfinal_list b7 b0 c/\ cMEM b1 b8 c/\ c= cFST csplit_normal_list b7 b9 b4 b5 b6 b0 c/\ c= cfind_face b7 b10 b4 c/\ cMEM b3 b0 cMEM b2 b1 c? / c/\ ccontour_list b7 b11 c/\ c~ c= b11 cNIL c/\ c= cHD b11 b2 c/\ c= cLAST b11 b3 cSUBSET * part cset_of_list b11 * part cset_of_list cflatten cfilter * part cfinal_list b7 ccat creplace b9 cCONS cSND csplit_normal_list b7 b9 b4 b5 b6 cNIL b8 cCONS cFST csplit_normal_list b7 b9 b4 b5 b6 cNIL cT
+ |- (((!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) ==> ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i)) = ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i))
T c= c==> ! c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4
- (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), (x' IN (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))), ((final_list L) r2) |- ((x' IN (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) /\ (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f0 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 c==> cIN f7 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cfinal_list f1 f0 c/\ cIN f7 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 cIN f7 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
- ((\w. (((next_el f) x) = w)) w) |- (((((next_el f) x) = w) ==> (?w. (((next_el f) x) = w))) = (?w. (((next_el f) x) = w)))
T c==> * / c= cnext_el f0 f1 b0 f2 c= c==> c= cnext_el f0 f1 f2 c? / c= cnext_el f0 f1 b0 c? / c= cnext_el f0 f1 b0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> (((MEM r) N) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f8 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f10 f9 c==> cMEM f11 f8 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f1 f6 c==> c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- |- ((\u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))) u)
T * / ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 f0 b4 c/\ cfinal_list b5 f1 c/\ cfinal_list b5 f2 c/\ cMEM f1 b6 c/\ c= cFST csplit_normal_list b5 b7 b2 b3 b4 f2 c/\ c= cfind_face b5 b8 b2 c/\ cMEM b1 f2 cMEM b0 f1 c? / c/\ ccontour_list b5 b9 c/\ c~ c= b9 cNIL c/\ c= cHD b9 b0 c/\ c= cLAST b9 b1 cSUBSET * part cset_of_list b9 * part cset_of_list cflatten cfilter * part cfinal_list b5 ccat creplace b7 cCONS cSND csplit_normal_list b5 b7 b2 b3 b4 cNIL b6 cCONS cFST csplit_normal_list b5 b7 b2 b3 b4 cNIL f3
+ (~ ((final_list L) r)), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r1) N) ==> (((MEM r2) N) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> c= cl'z f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c/\ c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cMEM f7 f2 c==> cMEM f8 f2 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL
- (?r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL))))))), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- ((?r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL))))))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c? / c/\ ccontour_list f0 b0 c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list cFST csplit_normal_list f0 f3 f4 f5 f6 c~ c= b0 cNIL c==> c= f7 cFST csplit_normal_list f0 f3 f4 f5 f6 c==> cfinal_list f0 f7 c/\ c? / c/\ ccontour_list f0 b0 c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list cFST csplit_normal_list f0 f3 f4 f5 f6 c~ c= b0 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f3 cCONS cSND csplit_normal_list f0 f3 f4 f5 f6 cNIL f8 cCONS cFST csplit_normal_list f0 f3 f4 f5 f6 cNIL
+ (r1 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f6 f0 c==> cMEM f7 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 c==> cfinal_list f1 f7 c==> c= f7 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c= cnext_el f3 f9 f10 c==> cuniq clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cMEM f4 f3 c==> cMEM f11 f3 c==> c< cindexf f10 f4 f3 cindexf f10 f11 f3 c==> c= cfind_face f1 f4 f3 c==> cMEM cSND csplit_normal_list f1 f2 f3 f4 f5 cntrans f1 f8 f2 f9 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cloop_list f1 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f12 cSND csplit_normal_list f1 f2 f3 f4 f5 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f6 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 call * part cloop_list b0 cntrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> cMEM f9 f7 c==> cMEM f10 f11 c==> cMEM f1 f6 c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ |- (((!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))) ==> ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))) r)) = ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))) r))
T c= c==> ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 b0 c/\ c= cl'z f0 f1 b0 b1 f2 c/\ c= cl'y f0 b0 b1 f3 c/\ c= cprev_el b0 f2 f4 c/\ cfinal_list f0 f5 c/\ cfinal_list f0 f6 c/\ c= cSND csplit_normal_list f0 b0 f7 f3 f4 f6 c/\ cMEM f5 f1 c/\ c= cfind_face f0 b1 f7 c/\ cMEM f8 f6 cMEM f9 f5 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 f9 c/\ c= cLAST b2 f8 cSUBSET * part cset_of_list b2 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b0 cCONS cSND csplit_normal_list f0 b0 f7 f3 f4 cNIL f1 cCONS cFST csplit_normal_list f0 b0 f7 f3 f4 cNIL * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 b0 c/\ c= cl'z f0 f1 b0 b1 f2 c/\ c= cl'y f0 b0 b1 f3 c/\ c= cprev_el b0 f2 f4 c/\ cfinal_list f0 f5 c/\ cfinal_list f0 f6 c/\ c= cSND csplit_normal_list f0 b0 f7 f3 f4 f6 c/\ cMEM f5 f1 c/\ c= cfind_face f0 b1 f7 c/\ cMEM f8 f6 cMEM f9 f5 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 f9 c/\ c= cLAST b2 f8 cSUBSET * part cset_of_list b2 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b0 cCONS cSND csplit_normal_list f0 b0 f7 f3 f4 cNIL f1 cCONS cFST csplit_normal_list f0 b0 f7 f3 f4 cNIL f10 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 b0 c/\ c= cl'z f0 f1 b0 b1 f2 c/\ c= cl'y f0 b0 b1 f3 c/\ c= cprev_el b0 f2 f4 c/\ cfinal_list f0 f5 c/\ cfinal_list f0 f6 c/\ c= cSND csplit_normal_list f0 b0 f7 f3 f4 f6 c/\ cMEM f5 f1 c/\ c= cfind_face f0 b1 f7 c/\ cMEM f8 f6 cMEM f9 f5 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 f9 c/\ c= cLAST b2 f8 cSUBSET * part cset_of_list b2 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b0 cCONS cSND csplit_normal_list f0 b0 f7 f3 f4 cNIL f1 cCONS cFST csplit_normal_list f0 b0 f7 f3 f4 cNIL f10
- (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c= f8 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f9 f4 c==> cMEM f10 f8 c==> cMEM f5 f11 c==> cMEM f8 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f11 c==> cfinal_list f0 f8 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cSND csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f11 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cSND csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f11 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), (x' IN (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))), ((final_list L) r2) |- (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f0 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 c==> cIN f7 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cfinal_list f1 f0 cIN f7 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2), ((\r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL))))))) r') |- (((\r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL))))))) r') /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c= f0 cFST csplit_normal_list f1 f2 f3 f4 f5 c==> cfinal_list f1 f0 c==> * / c/\ ccontour_list f1 b0 c/\ c= cHD b0 f6 c/\ c= cLAST b0 f7 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5 c~ c= b0 cNIL f8 c/\ * / c/\ ccontour_list f1 b0 c/\ c= cHD b0 f6 c/\ c= cLAST b0 f7 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5 c~ c= b0 cNIL f8 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f6 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f9 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
- ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) |- (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) = T)
T c==> cSUBSET * part cset_of_list f0 * part cset_of_list cfinal_dart_list f1 f2 c= cSUBSET * part cset_of_list f0 * part cset_of_list cfinal_dart_list f1 f2 cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (T = ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> cMEM f9 f10 c==> cMEM f11 f7 c==> cMEM f10 f6 c==> cfinal_list f0 f10 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c= cT c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f6 f1 f4 c/\ c~ cfinal_list f0 f1 c/\ c= cl'z f0 f6 f1 f4 f2 c/\ c= cl'y f0 f1 f4 f5 c/\ c= cprev_el f1 f2 f3 c/\ cfinal_list f0 f10 c/\ cfinal_list f0 f7 c/\ c= cSND csplit_normal_list f0 f1 f8 f5 f3 f7 c/\ cMEM f10 f6 c/\ c= cfind_face f0 f4 f8 c/\ cMEM f11 f7 cMEM f9 f10 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ |- (((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((MEM r2) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r1) /\ ((MEM v) r2)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))) ==> ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((MEM r2) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r1) /\ ((MEM v) r2)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))) N)) = ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((MEM r2) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r1) /\ ((MEM v) r2)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))) N))
T c= c==> ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= cl'z f0 b0 b1 b2 f1 c/\ c= cl'y f0 b1 b2 f2 c/\ c= cprev_el b1 f1 f3 c/\ cfinal_list f0 f4 c/\ cfinal_list f0 f5 c/\ c= cSND csplit_normal_list f0 b1 f6 f2 f3 f5 c/\ cMEM f4 b0 c/\ c= cfind_face f0 b2 f6 c/\ cMEM f7 f5 cMEM f8 f4 c? / c/\ ccontour_list f0 b3 c/\ c~ c= b3 cNIL c/\ c= cHD b3 f7 c/\ c= cLAST b3 f8 cSUBSET * part cset_of_list b3 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b1 cCONS cSND csplit_normal_list f0 b1 f6 f2 f3 cNIL b0 cCONS cFST csplit_normal_list f0 b1 f6 f2 f3 cNIL * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= cl'z f0 b0 b1 b2 f1 c/\ c= cl'y f0 b1 b2 f2 c/\ c= cprev_el b1 f1 f3 c/\ cfinal_list f0 f4 c/\ cfinal_list f0 f5 c/\ c= cSND csplit_normal_list f0 b1 f6 f2 f3 f5 c/\ cMEM f4 b0 c/\ c= cfind_face f0 b2 f6 c/\ cMEM f7 f5 cMEM f8 f4 c? / c/\ ccontour_list f0 b3 c/\ c~ c= b3 cNIL c/\ c= cHD b3 f7 c/\ c= cLAST b3 f8 cSUBSET * part cset_of_list b3 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b1 cCONS cSND csplit_normal_list f0 b1 f6 f2 f3 cNIL b0 cCONS cFST csplit_normal_list f0 b1 f6 f2 f3 cNIL f9 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= cl'z f0 b0 b1 b2 f1 c/\ c= cl'y f0 b1 b2 f2 c/\ c= cprev_el b1 f1 f3 c/\ cfinal_list f0 f4 c/\ cfinal_list f0 f5 c/\ c= cSND csplit_normal_list f0 b1 f6 f2 f3 f5 c/\ cMEM f4 b0 c/\ c= cfind_face f0 b2 f6 c/\ cMEM f7 f5 cMEM f8 f4 c? / c/\ ccontour_list f0 b3 c/\ c~ c= b3 cNIL c/\ c= cHD b3 f7 c/\ c= cLAST b3 f8 cSUBSET * part cset_of_list b3 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b1 cCONS cSND csplit_normal_list f0 b1 f6 f2 f3 cNIL b0 cCONS cFST csplit_normal_list f0 b1 f6 f2 f3 cNIL f9
+ (~ ((final_list L) r)), ((MEM u) r1), ((MEM v) r2), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM u) r1) /\ (((MEM r1) N) ==> (((MEM r2) N) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cMEM f2 f3 c==> cMEM f4 f5 c==> cfinal_list f0 f3 c==> cfinal_list f0 f5 c==> cmarked_list f0 f6 f1 f7 c/\ cMEM f2 f3 c==> cMEM f3 f6 c==> cMEM f5 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f2 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f9 f10 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f9 f10 cNIL
- ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) ==> ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r1) N) ==> (((MEM r2) N) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))
T c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cl'y f0 f2 f3 f5 c==> c= cprev_el f2 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 c==> cMEM f8 creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cMEM f7 f1 c==> cMEM f8 f1 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f9 f6 c/\ cMEM f1 f6 c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> cMEM f9 f7 c==> cMEM f10 f11 c==> cfinal_list f0 f7 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
- A |- ((A ==> (A \/ B)) ==> (A \/ B))
T c==> f0 c==> c==> f0 c\/ f0 f1 c\/ f0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c< cindexf f3 f6 f1 cindexf f3 f10 f1 c==> cMEM f11 f4 c==> cMEM f12 f9 c==> cMEM f6 f1 c==> cMEM f10 f1 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f4 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f9 f6 c/\ cMEM f1 f6 c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f10 f8 c==> cMEM f11 f9 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f8 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM v) r2) /\ ((MEM u) r1)), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c/\ cMEM f8 f9 cMEM f10 f11 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f11 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) /\ ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> cMEM f9 f7 c==> cMEM f10 f11 c==> cMEM f1 f6 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c/\ c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= f11 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f8 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ |- (((!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((MEM r2) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r1) /\ ((MEM v) r2)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))) ==> ((\u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((MEM r2) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r1) /\ ((MEM v) r2)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))) u)) = ((\u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((MEM r2) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r1) /\ ((MEM v) r2)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))) u))
T c= c==> ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 f0 b4 c/\ cfinal_list b5 f1 c/\ cfinal_list b5 f2 c/\ c= cSND csplit_normal_list b5 b7 b2 b3 b4 f2 c/\ cMEM f1 b6 c/\ c= cfind_face b5 b8 b2 c/\ cMEM b0 f2 cMEM b1 f1 c? / c/\ ccontour_list b5 b9 c/\ c~ c= b9 cNIL c/\ c= cHD b9 b0 c/\ c= cLAST b9 b1 cSUBSET * part cset_of_list b9 * part cset_of_list cflatten cfilter * part cfinal_list b5 ccat creplace b7 cCONS cSND csplit_normal_list b5 b7 b2 b3 b4 cNIL b6 cCONS cFST csplit_normal_list b5 b7 b2 b3 b4 cNIL * / ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 f0 b4 c/\ cfinal_list b5 f1 c/\ cfinal_list b5 f2 c/\ c= cSND csplit_normal_list b5 b7 b2 b3 b4 f2 c/\ cMEM f1 b6 c/\ c= cfind_face b5 b8 b2 c/\ cMEM b0 f2 cMEM b1 f1 c? / c/\ ccontour_list b5 b9 c/\ c~ c= b9 cNIL c/\ c= cHD b9 b0 c/\ c= cLAST b9 b1 cSUBSET * part cset_of_list b9 * part cset_of_list cflatten cfilter * part cfinal_list b5 ccat creplace b7 cCONS cSND csplit_normal_list b5 b7 b2 b3 b4 cNIL b6 cCONS cFST csplit_normal_list b5 b7 b2 b3 b4 cNIL f3 * / ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 f0 b4 c/\ cfinal_list b5 f1 c/\ cfinal_list b5 f2 c/\ c= cSND csplit_normal_list b5 b7 b2 b3 b4 f2 c/\ cMEM f1 b6 c/\ c= cfind_face b5 b8 b2 c/\ cMEM b0 f2 cMEM b1 f1 c? / c/\ ccontour_list b5 b9 c/\ c~ c= b9 cNIL c/\ c= cHD b9 b0 c/\ c= cLAST b9 b1 cSUBSET * part cset_of_list b9 * part cset_of_list cflatten cfilter * part cfinal_list b5 ccat creplace b7 cCONS cSND csplit_normal_list b5 b7 b2 b3 b4 cNIL b6 cCONS cFST csplit_normal_list b5 b7 b2 b3 b4 cNIL f3
+ ((\l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM d) l))) l) |- ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM d) l))
T c==> * / c/\ c/\ cfinal_list f0 b0 cMEM b0 f1 cMEM f2 b0 f3 c/\ c/\ cfinal_list f0 f3 cMEM f3 f1 cMEM f2 f3
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 ! c==> c/\ c= b0 cLAST f4 c/\ cMEM f4 cparts f0 f5 c/\ cMEM f5 f1 c/\ c~ cfinal_list f0 f5 c~ cMEM b0 cs_list f0 f2 f3 cMEM ce_list b0 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cMEM f1 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f9 f5 f6 c==> c= f8 cSND csplit_normal_list f0 f1 f9 f5 f6 c==> ! c==> cMEM b0 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f3 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) x)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 * / ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 f0
+ |- ((\r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))))) r)
T * / ! ! c= cytrans f0 f1 b0 b1 b2 cl'y f0 crtrans f0 f1 b0 b1 b2 b1 f2
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1))), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c/\ c= cfind_face f0 f4 f7 c/\ cMEM f8 f9 cMEM f10 f11 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f11 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r2) N) \/ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> cMEM f9 f7 c==> cMEM f10 f11 c==> cMEM f1 f6 c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> c\/ cMEM f11 f6 c= f11 cSND csplit_normal_list f0 f1 f8 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
- |- ((?r'. t) = t)
T c= c? / f0 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1))))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f8 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c/\ c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> c\/ cMEM f9 f6 c/\ cMEM f1 f6 c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ |- ((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))) = T)
T c= ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= cl'z f0 b0 b1 b2 f1 c/\ c= cl'y f0 b1 b2 f2 c/\ c= cprev_el b1 f1 f3 c/\ cfinal_list f0 f4 c/\ cfinal_list f0 f5 c/\ c\/ cMEM f4 creplace b1 cCONS cSND csplit_normal_list f0 b1 f6 f2 f3 cNIL b0 cMEM f4 cCONS cFST csplit_normal_list f0 b1 f6 f2 f3 cNIL c/\ c\/ cMEM f5 creplace b1 cCONS cSND csplit_normal_list f0 b1 f6 f2 f3 cNIL b0 cMEM f5 cCONS cFST csplit_normal_list f0 b1 f6 f2 f3 cNIL c/\ c= cfind_face f0 b2 f6 c/\ cMEM f7 f5 cMEM f8 f4 c? / c/\ ccontour_list f0 b3 c/\ c~ c= b3 cNIL c/\ c= cHD b3 f8 c/\ c= cLAST b3 f7 cSUBSET * part cset_of_list b3 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b1 cCONS cSND csplit_normal_list f0 b1 f6 f2 f3 cNIL b0 cCONS cFST csplit_normal_list f0 b1 f6 f2 f3 cNIL cT
+ ((HD r') = u), (r' = s) |- ((HD s) = u)
T c==> c= cHD f0 f1 c==> c= f0 f2 c= cHD f2 f1
- ((~ (A ==> (B \/ A))) ==> F) |- ((((~ (A ==> (B \/ A))) ==> F) ==> ((~ (A ==> (B \/ A))) ==> F)) ==> ((~ (A ==> (B \/ A))) ==> F))
T c==> c==> c~ c==> f0 c\/ f1 f0 cF c==> c==> c==> c~ c==> f0 c\/ f1 f0 cF c==> c~ c==> f0 c\/ f1 f0 cF c==> c~ c==> f0 c\/ f1 f0 cF
- ((~ (A ==> (B \/ A))) ==> F), (((~ (A ==> (B \/ A))) ==> F) ==> ((~ (A ==> (B \/ A))) ==> F)) |- ((((~ (A ==> (B \/ A))) ==> F) ==> ((~ (A ==> (B \/ A))) ==> F)) /\ ((~ (A ==> (B \/ A))) ==> F))
T c==> c==> c~ c==> f0 c\/ f1 f0 cF c==> c==> c==> c~ c==> f0 c\/ f1 f0 cF c==> c~ c==> f0 c\/ f1 f0 cF c/\ c==> c==> c~ c==> f0 c\/ f1 f0 cF c==> c~ c==> f0 c\/ f1 f0 cF c==> c~ c==> f0 c\/ f1 f0 cF
+ |- ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s)
T * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- (((!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))) ==> ((\y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))) y)) = ((\y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))) y))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c= c==> ! c==> c/\ c= b0 cLAST f4 c/\ cMEM f4 cparts f0 f5 c/\ cMEM f5 f1 c/\ c~ cfinal_list f0 f5 c~ cMEM b0 cs_list f0 f2 f3 cMEM ce_list b0 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 * / c==> c/\ c= b0 cLAST f4 c/\ cMEM f4 cparts f0 f5 c/\ cMEM f5 f1 c/\ c~ cfinal_list f0 f5 c~ cMEM b0 cs_list f0 f2 f3 cMEM ce_list b0 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 f6 * / c==> c/\ c= b0 cLAST f4 c/\ cMEM f4 cparts f0 f5 c/\ cMEM f5 f1 c/\ c~ cfinal_list f0 f5 c~ cMEM b0 cs_list f0 f2 f3 cMEM ce_list b0 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 f6
- |- ((\v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))) v)
T * / ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ cfinal_list b4 f1 c/\ cfinal_list b4 f2 c/\ cMEM f2 b5 c/\ c= cFST csplit_normal_list b4 b6 b1 b2 b3 f1 c/\ c= cfind_face b4 b7 b1 c/\ cMEM b0 f2 cMEM f3 f1 c? / c/\ ccontour_list b4 b8 c/\ c~ c= b8 cNIL c/\ c= cHD b8 f3 c/\ c= cLAST b8 b0 cSUBSET * part cset_of_list b8 * part cset_of_list cflatten cfilter * part cfinal_list b4 ccat creplace b6 cCONS cSND csplit_normal_list b4 b6 b1 b2 b3 cNIL b5 cCONS cFST csplit_normal_list b4 b6 b1 b2 b3 cNIL f4
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1))), (((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c/\ c= cfind_face f0 f4 f7 c/\ cMEM f8 f9 cMEM f10 f11 c==> c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> c\/ cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f11 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> cMEM f9 f10 c==> cMEM f11 f7 c==> cMEM f10 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> cfinal_list f0 f10 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c/\ c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
- |- ((\r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))) r2)
T * / ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b7 c/\ cgood_list_nodes b7 c/\ cmarked_list b7 b8 b9 b10 c/\ c~ cfinal_list b7 b9 c/\ c= cl'z b7 b8 b9 b10 f0 c/\ c= cl'y b7 b9 b10 b5 c/\ c= cprev_el b9 f0 b6 c/\ cfinal_list b7 b1 c/\ cfinal_list b7 b0 c/\ cMEM b1 b8 c/\ c= cFST csplit_normal_list b7 b9 b4 b5 b6 b0 c/\ c= cfind_face b7 b10 b4 c/\ cMEM b3 b0 cMEM b2 b1 c? / c/\ ccontour_list b7 b11 c/\ c~ c= b11 cNIL c/\ c= cHD b11 b2 c/\ c= cLAST b11 b3 cSUBSET * part cset_of_list b11 * part cset_of_list cflatten cfilter * part cfinal_list b7 ccat creplace b9 cCONS cSND csplit_normal_list b7 b9 b4 b5 b6 cNIL b8 cCONS cFST csplit_normal_list b7 b9 b4 b5 b6 cNIL f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> (((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 f1 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 c\/ cMEM f7 f2 c/\ cMEM f1 f2 c= f7 cSND csplit_normal_list f0 f1 f9 f5 f6 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 c\/ cMEM f8 f2 c/\ cMEM f1 f2 c= f8 cSND csplit_normal_list f0 f1 f9 f5 f6 c==> ! c==> cMEM b0 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f3 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL
+ (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL)))))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL)))))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c/\ ccontour_list f1 f6 c/\ c= cHD f6 f7 c/\ c= cLAST f6 f8 c/\ cSUBSET * part cset_of_list f6 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 c~ c= f6 cNIL c==> cMEM f0 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f9 c==> cfinal_list f1 f0 c/\ c/\ ccontour_list f1 f6 c/\ c= cHD f6 f7 c/\ c= cLAST f6 f8 c/\ cSUBSET * part cset_of_list f6 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 c~ c= f6 cNIL c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f9 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
- (r' = s), ((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) |- (((set_of_list s) SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) = T)
T c==> c= f0 f1 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cFST csplit_normal_list f2 f3 f4 f5 f6 c= cSUBSET * part cset_of_list f1 * part cset_of_list cFST csplit_normal_list f2 f3 f4 f5 f6 cT
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cuniq cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f4 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f6 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f6 f7 f8 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f4 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f6 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f6 f7 f8 cNIL
+ |- ((\x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y)))) x)
T * / ! c= cMEM b0 cCONS b1 cNIL c= b0 b1 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c= f8 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c= cfind_face f0 f6 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f9 f1 c==> cMEM f10 f4 c==> cMEM f6 f1 c==> cMEM f9 f1 c==> cMEM f5 f11 c==> cMEM f8 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f11 c==> cMEM cSND csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f11 f5 f2 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f8 c==> cuniq cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f12 cSND csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f11 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
+ |- (((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))) ==> ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))) x)) = ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))) x))
T c= c==> ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cuniq cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cuniq cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 f3 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cuniq cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 f3
+ (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- (?l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l)))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f6 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f0 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f7 c==> cfinal_list f1 f0 c? / c/\ c/\ cfinal_list f1 b0 c\/ cMEM b0 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f7 cMEM b0 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL cMEM f6 b0
+ |- (((!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) ==> ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x)) = ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x))
T c= c==> ! ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3 * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> c= cfind_face f0 f4 f8 c==> cMEM f10 f9 c==> cMEM f11 f7 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c\/ cMEM f7 f6 c/\ cMEM f1 f6 c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c\/ cMEM f9 f6 c/\ cMEM f1 f6 c= f9 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f8 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
- |- (((!z. (!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))) ==> ((\z. (!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))) z)) = ((\z. (!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))) z))
T c= c==> ! ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b8 c/\ cgood_list_nodes b8 c/\ cmarked_list b8 b9 b10 b11 c/\ c~ cfinal_list b8 b10 c/\ c= cl'z b8 b9 b10 b11 b0 c/\ c= cl'y b8 b10 b11 b6 c/\ c= cprev_el b10 b0 b7 c/\ cfinal_list b8 b2 c/\ cfinal_list b8 b1 c/\ c= cSND csplit_normal_list b8 b10 b5 b6 b7 b1 c/\ c= cFST csplit_normal_list b8 b10 b5 b6 b7 b2 c/\ c= cfind_face b8 b11 b5 c/\ cMEM b4 b1 cMEM b3 b2 c? / c/\ ccontour_list b8 b12 c/\ c~ c= b12 cNIL c/\ c= cHD b12 b3 c/\ c= cLAST b12 b4 cSUBSET * part cset_of_list b12 * part cset_of_list cflatten cfilter * part cfinal_list b8 ccat creplace b10 cCONS cSND csplit_normal_list b8 b10 b5 b6 b7 cNIL b9 cCONS cFST csplit_normal_list b8 b10 b5 b6 b7 cNIL * / ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b8 c/\ cgood_list_nodes b8 c/\ cmarked_list b8 b9 b10 b11 c/\ c~ cfinal_list b8 b10 c/\ c= cl'z b8 b9 b10 b11 b0 c/\ c= cl'y b8 b10 b11 b6 c/\ c= cprev_el b10 b0 b7 c/\ cfinal_list b8 b2 c/\ cfinal_list b8 b1 c/\ c= cSND csplit_normal_list b8 b10 b5 b6 b7 b1 c/\ c= cFST csplit_normal_list b8 b10 b5 b6 b7 b2 c/\ c= cfind_face b8 b11 b5 c/\ cMEM b4 b1 cMEM b3 b2 c? / c/\ ccontour_list b8 b12 c/\ c~ c= b12 cNIL c/\ c= cHD b12 b3 c/\ c= cLAST b12 b4 cSUBSET * part cset_of_list b12 * part cset_of_list cflatten cfilter * part cfinal_list b8 ccat creplace b10 cCONS cSND csplit_normal_list b8 b10 b5 b6 b7 cNIL b9 cCONS cFST csplit_normal_list b8 b10 b5 b6 b7 cNIL f0 * / ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b8 c/\ cgood_list_nodes b8 c/\ cmarked_list b8 b9 b10 b11 c/\ c~ cfinal_list b8 b10 c/\ c= cl'z b8 b9 b10 b11 b0 c/\ c= cl'y b8 b10 b11 b6 c/\ c= cprev_el b10 b0 b7 c/\ cfinal_list b8 b2 c/\ cfinal_list b8 b1 c/\ c= cSND csplit_normal_list b8 b10 b5 b6 b7 b1 c/\ c= cFST csplit_normal_list b8 b10 b5 b6 b7 b2 c/\ c= cfind_face b8 b11 b5 c/\ cMEM b4 b1 cMEM b3 b2 c? / c/\ ccontour_list b8 b12 c/\ c~ c= b12 cNIL c/\ c= cHD b12 b3 c/\ c= cLAST b12 b4 cSUBSET * part cset_of_list b12 * part cset_of_list cflatten cfilter * part cfinal_list b8 ccat creplace b10 cCONS cSND csplit_normal_list b8 b10 b5 b6 b7 cNIL b9 cCONS cFST csplit_normal_list b8 b10 b5 b6 b7 cNIL f0
+ ((HD r') = u), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL)))), ((contour_list L) r'), ((final_list L) r2) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c= cHD f0 f1 c==> c= f2 cFST csplit_normal_list f3 f4 f5 f6 f7 c==> c/\ c= cLAST f0 f8 c/\ cSUBSET * part cset_of_list f0 * part cset_of_list cFST csplit_normal_list f3 f4 f5 f6 f7 c~ c= f0 cNIL c==> ccontour_list f3 f0 c==> cfinal_list f3 f2 c? / c/\ ccontour_list f3 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f3 ccat creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f9 cCONS cFST csplit_normal_list f3 f4 f5 f6 f7 cNIL
+ (~ ((final_list L) r)), (x' IN (set_of_list s)), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) |- ((x' IN (set_of_list s)) /\ (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> c~ cfinal_list f0 f1 c==> cIN f2 * part cset_of_list f3 c==> cSUBSET * part cset_of_list f3 * part cset_of_list cfinal_dart_list f0 f4 c/\ cIN f2 * part cset_of_list f3 cIN f2 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f5 f6 f7 cNIL f4 cCONS cFST csplit_normal_list f0 f1 f5 f6 f7 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) /\ (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c= f1 cSND csplit_normal_list f0 f2 f3 f4 f5 c==> c= f6 cSND csplit_normal_list f0 f2 f3 f4 f5 c==> cMEM f7 f1 c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f0 f2 f3 f4 f5 cNIL f8 c==> cfinal_list f0 f6 c/\ ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f4 f3 c==> cMEM f9 f3 c==> c< cindexf f10 f4 f3 cindexf f10 f9 f3 c==> c= cfind_face f0 f4 f3 c==> cMEM cSND csplit_normal_list f0 f2 f3 f4 f5 cntrans f0 f8 f2 f11 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f2 f3 f4 f5 c==> cloop_list f0 cSND csplit_normal_list f0 f2 f3 f4 f5 c==> cMEM f12 cSND csplit_normal_list f0 f2 f3 f4 f5 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f3 f4 f5 cNIL f8 cCONS cFST csplit_normal_list f0 f2 f3 f4 f5 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) N), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f9 f6 c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> c\/ cMEM f11 f6 c/\ cMEM f1 f6 c= f11 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ |- ((\x. (!y. (!s. (((uniq s) /\ (((loop_list L) s) /\ (((MEM x) s) /\ ((MEM y) s)))) ==> (?r. (((contour_list L) r) /\ (((HD r) = x) /\ (((LAST r) = y) /\ (((set_of_list r) SUBSET (set_of_list s)) /\ (~ (r = NIL))))))))))) u)
T * / ! ! c==> c/\ cuniq b2 c/\ cloop_list f0 b2 c/\ cMEM b0 b2 cMEM b1 b2 c? / c/\ ccontour_list f0 b3 c/\ c= cHD b3 b0 c/\ c= cLAST b3 b1 c/\ cSUBSET * part cset_of_list b3 * part cset_of_list b2 c~ c= b3 cNIL f1
+ ((HD r') = u), ((LAST r') = v), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), (((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL))), ((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))), ((contour_list L) r'), ((final_list L) r2) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c= cHD f0 f1 c==> c= cLAST f0 f2 c==> c= f3 cFST csplit_normal_list f4 f5 f6 f7 f8 c==> c/\ cSUBSET * part cset_of_list f0 * part cset_of_list cFST csplit_normal_list f4 f5 f6 f7 f8 c~ c= f0 cNIL c==> cSUBSET * part cset_of_list f0 * part cset_of_list cFST csplit_normal_list f4 f5 f6 f7 f8 c==> ccontour_list f4 f0 c==> cfinal_list f4 f3 c? / c/\ ccontour_list f4 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f4 ccat creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 cCONS cFST csplit_normal_list f4 f5 f6 f7 f8 cNIL
+ (((find_face L) x) = f), ((MEM v) r2), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))
T c==> c= cfind_face f0 f1 f2 c==> cMEM f3 f4 c==> cMEM f4 cCONS cFST csplit_normal_list f0 f5 f2 f6 f7 cNIL c==> cfinal_list f0 f4 c==> cMEM f8 f9 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f2 f6 f7 cNIL f10 c\/ cMEM f9 f10 c/\ cMEM f5 f10 c= f9 cSND csplit_normal_list f0 f5 f2 f6 f7 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f2 f6 f7 cNIL f10 c\/ cMEM f4 f10 c/\ cMEM f5 f10 c= f4 cSND csplit_normal_list f0 f5 f2 f6 f7 c==> c= cnext_el f2 f1 f11 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 f2 c==> cMEM f12 f2 c==> c< cindexf f11 f6 f2 cindexf f11 f12 f2 c==> c= cfind_face f0 f6 f2 c==> cMEM cFST csplit_normal_list f0 f5 f2 f6 f7 cntrans f0 f10 f5 f1 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f2 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f2 f6 f7 c==> c= f9 cFST csplit_normal_list f0 f5 f2 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f3 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f2 f6 f7 cNIL f10 cCONS cFST csplit_normal_list f0 f5 f2 f6 f7 cNIL
- |- ((!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c~ cfinal_list b6 b8 c/\ c= cl'z b6 b7 b8 b9 f0 c/\ c= cl'y b6 b8 b9 b4 c/\ c= cprev_el b8 f0 b5 c/\ cfinal_list b6 b0 c/\ cfinal_list b6 f1 c/\ c= cSND csplit_normal_list b6 b8 b3 b4 b5 f1 c/\ c= cFST csplit_normal_list b6 b8 b3 b4 b5 b0 c/\ c= cfind_face b6 b9 b3 c/\ cMEM b2 f1 cMEM b1 b0 c? / c/\ ccontour_list b6 b10 c/\ c~ c= b10 cNIL c/\ c= cHD b10 b1 c/\ c= cLAST b10 b2 cSUBSET * part cset_of_list b10 * part cset_of_list cflatten cfilter * part cfinal_list b6 ccat creplace b8 cCONS cSND csplit_normal_list b6 b8 b3 b4 b5 cNIL b7 cCONS cFST csplit_normal_list b6 b8 b3 b4 b5 cNIL cT
- |- ((!r1. (!r2. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r1) /\ ((MEM u) r2)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b7 c/\ cgood_list_nodes b7 c/\ cmarked_list b7 b8 b9 b10 c/\ c~ cfinal_list b7 b9 c/\ c= cl'z b7 b8 b9 b10 f0 c/\ c= cl'y b7 b9 b10 b5 c/\ c= cprev_el b9 f0 b6 c/\ cfinal_list b7 b0 c/\ cfinal_list b7 b1 c/\ c= cSND csplit_normal_list b7 b9 b4 b5 b6 b1 c/\ c= cFST csplit_normal_list b7 b9 b4 b5 b6 b0 c/\ c= cfind_face b7 b10 b4 c/\ cMEM b3 b0 cMEM b2 b1 c? / c/\ ccontour_list b7 b11 c/\ c~ c= b11 cNIL c/\ c= cHD b11 b2 c/\ c= cLAST b11 b3 cSUBSET * part cset_of_list b11 * part cset_of_list cflatten cfilter * part cfinal_list b7 ccat creplace b9 cCONS cSND csplit_normal_list b7 b9 b4 b5 b6 cNIL b8 cCONS cFST csplit_normal_list b7 b9 b4 b5 b6 cNIL cT
- |- ((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) ==> (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3
+ (~ (r' = NIL)), (r' = s), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))), ((final_list L) r2) |- ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> c~ c= f0 cNIL c==> c= f0 f1 c==> c= f2 cFST csplit_normal_list f3 f4 f5 f6 f7 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cFST csplit_normal_list f3 f4 f5 f6 f7 c==> cfinal_list f3 f2 c==> cIN f8 * part cset_of_list f1 cIN f8 * part cset_of_list cflatten cfilter * part cfinal_list f3 cAPPEND creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f9 cCONS cFST csplit_normal_list f3 f4 f5 f6 f7 cNIL
- ((all (\l. (~ (l = NIL)))) L) |- (((all (\l. (~ (l = NIL)))) L) = T)
T c==> call / c~ c= b0 cNIL f0 c= call / c~ c= b0 cNIL f0 cT
- (~ (A ==> (B \/ A))) |- ((~ (A ==> (B \/ A))) /\ F)
T c==> c~ c==> f0 c\/ f1 f0 c/\ c~ c==> f0 c\/ f1 f0 cF
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f9 f6 c/\ cMEM f1 f6 c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f10 f8 c==> cMEM f11 f9 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f8 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f7 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ |- (((!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))) ==> ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))) r)) = ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))) r))
T c= c==> ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 b0 c/\ c= cl'z f0 f1 b0 b1 f2 c/\ c= cl'y f0 b0 b1 f3 c/\ c= cprev_el b0 f2 f4 c/\ cfinal_list f0 f5 c/\ cfinal_list f0 f6 c/\ c= cSND csplit_normal_list f0 b0 f7 f3 f4 f6 c/\ c= cFST csplit_normal_list f0 b0 f7 f3 f4 f5 c/\ c= cfind_face f0 b1 f7 c/\ cMEM f8 f6 cMEM f9 f5 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 f9 c/\ c= cLAST b2 f8 cSUBSET * part cset_of_list b2 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b0 cCONS cSND csplit_normal_list f0 b0 f7 f3 f4 cNIL f1 cCONS cFST csplit_normal_list f0 b0 f7 f3 f4 cNIL * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 b0 c/\ c= cl'z f0 f1 b0 b1 f2 c/\ c= cl'y f0 b0 b1 f3 c/\ c= cprev_el b0 f2 f4 c/\ cfinal_list f0 f5 c/\ cfinal_list f0 f6 c/\ c= cSND csplit_normal_list f0 b0 f7 f3 f4 f6 c/\ c= cFST csplit_normal_list f0 b0 f7 f3 f4 f5 c/\ c= cfind_face f0 b1 f7 c/\ cMEM f8 f6 cMEM f9 f5 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 f9 c/\ c= cLAST b2 f8 cSUBSET * part cset_of_list b2 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b0 cCONS cSND csplit_normal_list f0 b0 f7 f3 f4 cNIL f1 cCONS cFST csplit_normal_list f0 b0 f7 f3 f4 cNIL f10 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 b0 c/\ c= cl'z f0 f1 b0 b1 f2 c/\ c= cl'y f0 b0 b1 f3 c/\ c= cprev_el b0 f2 f4 c/\ cfinal_list f0 f5 c/\ cfinal_list f0 f6 c/\ c= cSND csplit_normal_list f0 b0 f7 f3 f4 f6 c/\ c= cFST csplit_normal_list f0 b0 f7 f3 f4 f5 c/\ c= cfind_face f0 b1 f7 c/\ cMEM f8 f6 cMEM f9 f5 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 f9 c/\ c= cLAST b2 f8 cSUBSET * part cset_of_list b2 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b0 cCONS cSND csplit_normal_list f0 b0 f7 f3 f4 cNIL f1 cCONS cFST csplit_normal_list f0 b0 f7 f3 f4 cNIL f10
+ |- ((\xs. (!g. (((MEM r2) (((replace r) xs) g)) ==> (((MEM r2) g) \/ (((MEM r) g) /\ ((MEM r2) xs)))))) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL))
T * / ! c==> cMEM f0 creplace f1 b0 b1 c\/ cMEM f0 b1 c/\ cMEM f1 b1 cMEM f0 b0 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))), (((MEM f) g) /\ ((MEM x) xs)) |- ((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) /\ ((MEM x) (((replace f) xs) g)))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c==> c/\ cMEM f0 f1 cMEM f2 f3 c/\ ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 cMEM f2 creplace f0 f3 f1
- |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ (~ (r' = NIL)), ((HD r') = u), ((LAST r') = v), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))), ((contour_list L) r'), ((final_list L) r2) |- ((((\s. (r' = s)) s) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = T)
T c==> c~ c= f0 cNIL c==> c= cHD f0 f1 c==> c= cLAST f0 f2 c==> c= f3 cSND csplit_normal_list f4 f5 f6 f7 f8 c==> cMEM f3 creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cSND csplit_normal_list f4 f5 f6 f7 f8 c==> ccontour_list f4 f0 c==> cfinal_list f4 f3 c= c==> * / c= f0 b0 f10 c? / c/\ ccontour_list f4 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f4 ccat creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 cCONS cFST csplit_normal_list f4 f5 f6 f7 f8 cNIL cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f1 f6 c==> c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> c= f11 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f7 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> (((MEM r2) N) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f10 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f11 f10 c==> c==> cMEM f10 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f10 f6 c/\ cMEM f1 f6 c= f10 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ |- ((\s. (((uniq s) /\ (((loop_list L) s) /\ (((MEM u) s) /\ ((MEM v) s)))) ==> (?r. (((contour_list L) r) /\ (((HD r) = u) /\ (((LAST r) = v) /\ (((set_of_list r) SUBSET (set_of_list s)) /\ (~ (r = NIL))))))))) (FST (((((split_normal_list L) r) f) y) z1)))
T * / c==> c/\ cuniq b0 c/\ cloop_list f0 b0 c/\ cMEM f1 b0 cMEM f2 b0 c? / c/\ ccontour_list f0 b1 c/\ c= cHD b1 f1 c/\ c= cLAST b1 f2 c/\ cSUBSET * part cset_of_list b1 * part cset_of_list b0 c~ c= b1 cNIL cFST csplit_normal_list f0 f3 f4 f5 f6
+ |- (((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))) ==> ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))) N)) = ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))) N))
T c= c==> ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= cl'z f0 b0 b1 b2 f1 c/\ c= cl'y f0 b1 b2 f2 c/\ c= cprev_el b1 f1 f3 c/\ cfinal_list f0 f4 c/\ cfinal_list f0 f5 c/\ c= cSND csplit_normal_list f0 b1 f6 f2 f3 f5 c/\ c= cFST csplit_normal_list f0 b1 f6 f2 f3 f4 c/\ c= cfind_face f0 b2 f6 c/\ cMEM f7 f5 cMEM f8 f4 c? / c/\ ccontour_list f0 b3 c/\ c~ c= b3 cNIL c/\ c= cHD b3 f8 c/\ c= cLAST b3 f7 cSUBSET * part cset_of_list b3 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b1 cCONS cSND csplit_normal_list f0 b1 f6 f2 f3 cNIL b0 cCONS cFST csplit_normal_list f0 b1 f6 f2 f3 cNIL * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= cl'z f0 b0 b1 b2 f1 c/\ c= cl'y f0 b1 b2 f2 c/\ c= cprev_el b1 f1 f3 c/\ cfinal_list f0 f4 c/\ cfinal_list f0 f5 c/\ c= cSND csplit_normal_list f0 b1 f6 f2 f3 f5 c/\ c= cFST csplit_normal_list f0 b1 f6 f2 f3 f4 c/\ c= cfind_face f0 b2 f6 c/\ cMEM f7 f5 cMEM f8 f4 c? / c/\ ccontour_list f0 b3 c/\ c~ c= b3 cNIL c/\ c= cHD b3 f8 c/\ c= cLAST b3 f7 cSUBSET * part cset_of_list b3 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b1 cCONS cSND csplit_normal_list f0 b1 f6 f2 f3 cNIL b0 cCONS cFST csplit_normal_list f0 b1 f6 f2 f3 cNIL f9 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= cl'z f0 b0 b1 b2 f1 c/\ c= cl'y f0 b1 b2 f2 c/\ c= cprev_el b1 f1 f3 c/\ cfinal_list f0 f4 c/\ cfinal_list f0 f5 c/\ c= cSND csplit_normal_list f0 b1 f6 f2 f3 f5 c/\ c= cFST csplit_normal_list f0 b1 f6 f2 f3 f4 c/\ c= cfind_face f0 b2 f6 c/\ cMEM f7 f5 cMEM f8 f4 c? / c/\ ccontour_list f0 b3 c/\ c~ c= b3 cNIL c/\ c= cHD b3 f8 c/\ c= cLAST b3 f7 cSUBSET * part cset_of_list b3 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b1 cCONS cSND csplit_normal_list f0 b1 f6 f2 f3 cNIL b0 cCONS cFST csplit_normal_list f0 b1 f6 f2 f3 cNIL f9
+ |- (((!x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) ==> ((\x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) x)) = ((\x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) x))
T c= c==> ! ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 * / ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 f0 * / ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 f0
- |- (((!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))) ==> ((\r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))) r2)) = ((\r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))) r2))
T c= c==> ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b7 c/\ cgood_list_nodes b7 c/\ cmarked_list b7 b8 b9 b10 c/\ c~ cfinal_list b7 b9 c/\ c= cl'z b7 b8 b9 b10 f0 c/\ c= cl'y b7 b9 b10 b5 c/\ c= cprev_el b9 f0 b6 c/\ cfinal_list b7 b1 c/\ cfinal_list b7 b0 c/\ c= cSND csplit_normal_list b7 b9 b4 b5 b6 b0 c/\ cMEM b1 b8 c/\ c= cfind_face b7 b10 b4 c/\ cMEM b3 b0 cMEM b2 b1 c? / c/\ ccontour_list b7 b11 c/\ c~ c= b11 cNIL c/\ c= cHD b11 b2 c/\ c= cLAST b11 b3 cSUBSET * part cset_of_list b11 * part cset_of_list cflatten cfilter * part cfinal_list b7 ccat creplace b9 cCONS cSND csplit_normal_list b7 b9 b4 b5 b6 cNIL b8 cCONS cFST csplit_normal_list b7 b9 b4 b5 b6 cNIL * / ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b7 c/\ cgood_list_nodes b7 c/\ cmarked_list b7 b8 b9 b10 c/\ c~ cfinal_list b7 b9 c/\ c= cl'z b7 b8 b9 b10 f0 c/\ c= cl'y b7 b9 b10 b5 c/\ c= cprev_el b9 f0 b6 c/\ cfinal_list b7 b1 c/\ cfinal_list b7 b0 c/\ c= cSND csplit_normal_list b7 b9 b4 b5 b6 b0 c/\ cMEM b1 b8 c/\ c= cfind_face b7 b10 b4 c/\ cMEM b3 b0 cMEM b2 b1 c? / c/\ ccontour_list b7 b11 c/\ c~ c= b11 cNIL c/\ c= cHD b11 b2 c/\ c= cLAST b11 b3 cSUBSET * part cset_of_list b11 * part cset_of_list cflatten cfilter * part cfinal_list b7 ccat creplace b9 cCONS cSND csplit_normal_list b7 b9 b4 b5 b6 cNIL b8 cCONS cFST csplit_normal_list b7 b9 b4 b5 b6 cNIL f1 * / ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b7 c/\ cgood_list_nodes b7 c/\ cmarked_list b7 b8 b9 b10 c/\ c~ cfinal_list b7 b9 c/\ c= cl'z b7 b8 b9 b10 f0 c/\ c= cl'y b7 b9 b10 b5 c/\ c= cprev_el b9 f0 b6 c/\ cfinal_list b7 b1 c/\ cfinal_list b7 b0 c/\ c= cSND csplit_normal_list b7 b9 b4 b5 b6 b0 c/\ cMEM b1 b8 c/\ c= cfind_face b7 b10 b4 c/\ cMEM b3 b0 cMEM b2 b1 c? / c/\ ccontour_list b7 b11 c/\ c~ c= b11 cNIL c/\ c= cHD b11 b2 c/\ c= cLAST b11 b3 cSUBSET * part cset_of_list b11 * part cset_of_list cflatten cfilter * part cfinal_list b7 ccat creplace b9 cCONS cSND csplit_normal_list b7 b9 b4 b5 b6 cNIL b8 cCONS cFST csplit_normal_list b7 b9 b4 b5 b6 cNIL f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((((find_face L) y) = f) /\ (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f4 f1 c==> c==> cMEM f5 creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 c\/ cMEM f5 f8 c/\ cMEM f6 f8 c= f5 cSND csplit_normal_list f0 f6 f1 f4 f7 c==> c==> cMEM f9 creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f6 f8 c= f9 cSND csplit_normal_list f0 f6 f1 f4 f7 c==> c< cindexf f3 f4 f1 cindexf f3 f10 f1 c==> cMEM f11 f5 c==> cMEM f12 f9 c==> cMEM f4 f1 c==> cMEM f10 f1 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f6 f1 f4 f7 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ c= cfind_face f0 f4 f1 c==> cMEM cFST csplit_normal_list f0 f6 f1 f4 f7 cntrans f0 f8 f6 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f6 f1 f4 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f6 f1 f4 f7 c==> c= f5 cFST csplit_normal_list f0 f6 f1 f4 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f6 f1 f4 f7 cNIL
+ |- (((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))))) ==> ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))))) L)) = ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))))) L))
T c= c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cuniq cSND csplit_normal_list b0 b2 cfind_face b0 cl'y b0 b2 b3 cl'y b0 b2 b3 cprev_el b2 cl'z b0 b1 b2 b3 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cuniq cSND csplit_normal_list b0 b2 cfind_face b0 cl'y b0 b2 b3 cl'y b0 b2 b3 cprev_el b2 cl'z b0 b1 b2 b3 f0 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cuniq cSND csplit_normal_list b0 b2 cfind_face b0 cl'y b0 b2 b3 cl'y b0 b2 b3 cprev_el b2 cl'z b0 b1 b2 b3 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f10 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f11 f10 c==> c==> cMEM f10 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f10 f6 c/\ cMEM f1 f6 c= f10 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f9 f6 c/\ cMEM f1 f6 c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f7 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- ((((next_el f) x) = w) /\ ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c==> c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f6 f1 c/\ cMEM f2 f1 c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> cMEM f10 f6 c==> cMEM f11 f9 c==> cMEM f6 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> cfinal_list f0 f9 c/\ c= cnext_el f4 f3 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f7 f4 c==> cMEM f12 f4 c==> c< cindexf f5 f7 f4 cindexf f5 f12 f4 c==> c= cfind_face f0 f7 f4 c==> cMEM cFST csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
+ (uniq (FST (((((split_normal_list L) r) f) y) z1))), (r1 = (FST (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) /\ ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= f5 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f6 f5 c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cfinal_list f0 f7 c/\ c= f5 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= f7 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f8 cFST csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f6 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f9 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
+ ((final_list L) l) |- (((final_list L) l) = T)
T c==> cfinal_list f0 f1 c= cfinal_list f0 f1 cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) N), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r1) N) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f9 f6 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f9 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ (r' = NIL)), (r' = s) |- ((s = NIL) = F)
T c==> c~ c= f0 cNIL c==> c= f0 f1 c= c= f1 cNIL cF
+ ((MEM u) r1), ((final_list L) r2) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))
T c==> cMEM f0 f1 c==> cfinal_list f2 f3 c==> ! c==> cMEM b0 clist_of_darts f2 cMEM c, cSND b0 cFST b0 clist_of_darts f2 c==> cMEM f4 f5 c==> cMEM f6 f5 c==> c< cindexf f7 f4 f5 cindexf f7 f6 f5 c==> c= cfind_face f2 f4 f5 c==> cMEM cFST csplit_normal_list f2 f8 f5 f4 f9 cntrans f2 f10 f8 f11 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f2 f8 f5 f4 f9 c==> cloop_list f2 cFST csplit_normal_list f2 f8 f5 f4 f9 c==> c= f1 cFST csplit_normal_list f2 f8 f5 f4 f9 c==> c= f3 cFST csplit_normal_list f2 f8 f5 f4 f9 c==> cMEM f12 cFST csplit_normal_list f2 f8 f5 f4 f9 c? / c/\ ccontour_list f2 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f0 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f2 ccat creplace f8 cCONS cSND csplit_normal_list f2 f8 f5 f4 f9 cNIL f10 cCONS cFST csplit_normal_list f2 f8 f5 f4 f9 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> c\/ cMEM f9 f6 c/\ cMEM f1 f6 c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f10 f8 c==> cMEM f11 f9 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f8 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), ((MEM u) r1), ((MEM v) r2), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r1) N) ==> (((MEM r2) N) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cMEM f2 f3 c==> cMEM f4 f5 c==> cfinal_list f0 f3 c==> cfinal_list f0 f5 c==> cmarked_list f0 f6 f1 f7 c==> cMEM f3 f6 c==> cMEM f5 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f2 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f9 f10 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f9 f10 cNIL
+ (~ ((final_list L) r)), (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) N), ((MEM r2) N), ((final_list L) r1), ((final_list L) r2) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c/\ ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f2 cMEM b1 cfinal_dart_list f0 f2 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f2 ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f2 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f3 cMEM ce_list b2 ccat cs_list f0 f1 f3 cfinal_dart_list f0 f2 c==> cMEM f4 f5 c==> cMEM f6 f7 c==> cMEM f5 f2 c==> cMEM f7 f2 c==> cfinal_list f0 f5 c==> cfinal_list f0 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f4 c/\ c= cLAST b0 f6 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f9 f10 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f8 f9 f10 cNIL
+ |- (((!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) ==> ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)) = ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x))
T c= c==> ! c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ |- ((\N. (((final_dart_list L) N) = (flatten ((filter (final_list L)) N)))) N)
T * / c= cfinal_dart_list f0 b0 cflatten cfilter * part cfinal_list f0 b0 f1
- ((normal_list L) N) |- (((normal_list L) N) = T)
T c==> cnormal_list f0 f1 c= cnormal_list f0 f1 cT
+ (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- ((((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL)))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c= f0 cFST csplit_normal_list f1 f2 f3 f4 f5 c==> cfinal_list f1 f0 c==> c/\ ccontour_list f1 f6 c/\ c= cHD f6 f7 c/\ c= cLAST f6 f8 c/\ cSUBSET * part cset_of_list f6 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5 c~ c= f6 cNIL c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f9 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 ! ! ! c==> c/\ c~ c= f0 b0 cMEM f0 b2 cMEM f0 creplace b0 b1 b2
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ ((MEM r2) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f8 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f11 f6 c/\ cMEM f1 f6 cMEM f11 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c= f6 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f7 f0 c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 c==> cfinal_list f1 f6 c==> cMEM cSND csplit_normal_list f1 f2 f3 f4 f5 cntrans f1 f8 f2 f9 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cloop_list f1 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f10 cSND csplit_normal_list f1 f2 f3 f4 f5 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ |- (((!r1'. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1') /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((MEM r1') N) /\ ((((find_face L) x) = f) /\ (((MEM u) r1) /\ ((MEM v) r1')))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))) ==> ((\r1'. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1') /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((MEM r1') N) /\ ((((find_face L) x) = f) /\ (((MEM u) r1) /\ ((MEM v) r1')))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))) r2)) = ((\r1'. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1') /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((MEM r1') N) /\ ((((find_face L) x) = f) /\ (((MEM u) r1) /\ ((MEM v) r1')))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))) r2))
T c= c==> ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c~ cfinal_list b6 b8 c/\ c= cl'z b6 b7 b8 b9 f0 c/\ c= cl'y b6 b8 b9 b4 c/\ c= cprev_el b8 f0 b5 c/\ cfinal_list b6 b0 c/\ cfinal_list b6 f1 c/\ c= cSND csplit_normal_list b6 b8 b3 b4 b5 f1 c/\ cMEM b0 b7 c/\ c= cfind_face b6 b9 b3 c/\ cMEM b1 f1 cMEM b2 b0 c? / c/\ ccontour_list b6 b10 c/\ c~ c= b10 cNIL c/\ c= cHD b10 b1 c/\ c= cLAST b10 b2 cSUBSET * part cset_of_list b10 * part cset_of_list cflatten cfilter * part cfinal_list b6 ccat creplace b8 cCONS cSND csplit_normal_list b6 b8 b3 b4 b5 cNIL b7 cCONS cFST csplit_normal_list b6 b8 b3 b4 b5 cNIL * / ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c~ cfinal_list b6 b8 c/\ c= cl'z b6 b7 b8 b9 f0 c/\ c= cl'y b6 b8 b9 b4 c/\ c= cprev_el b8 f0 b5 c/\ cfinal_list b6 b0 c/\ cfinal_list b6 f1 c/\ c= cSND csplit_normal_list b6 b8 b3 b4 b5 f1 c/\ cMEM b0 b7 c/\ c= cfind_face b6 b9 b3 c/\ cMEM b1 f1 cMEM b2 b0 c? / c/\ ccontour_list b6 b10 c/\ c~ c= b10 cNIL c/\ c= cHD b10 b1 c/\ c= cLAST b10 b2 cSUBSET * part cset_of_list b10 * part cset_of_list cflatten cfilter * part cfinal_list b6 ccat creplace b8 cCONS cSND csplit_normal_list b6 b8 b3 b4 b5 cNIL b7 cCONS cFST csplit_normal_list b6 b8 b3 b4 b5 cNIL f2 * / ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c~ cfinal_list b6 b8 c/\ c= cl'z b6 b7 b8 b9 f0 c/\ c= cl'y b6 b8 b9 b4 c/\ c= cprev_el b8 f0 b5 c/\ cfinal_list b6 b0 c/\ cfinal_list b6 f1 c/\ c= cSND csplit_normal_list b6 b8 b3 b4 b5 f1 c/\ cMEM b0 b7 c/\ c= cfind_face b6 b9 b3 c/\ cMEM b1 f1 cMEM b2 b0 c? / c/\ ccontour_list b6 b10 c/\ c~ c= b10 cNIL c/\ c= cHD b10 b1 c/\ c= cLAST b10 b2 cSUBSET * part cset_of_list b10 * part cset_of_list cflatten cfilter * part cfinal_list b6 ccat creplace b8 cCONS cSND csplit_normal_list b6 b8 b3 b4 b5 cNIL b7 cCONS cFST csplit_normal_list b6 b8 b3 b4 b5 cNIL f2
- (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) |- ((\x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) x)
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 * / c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 f4
- (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) /\ ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c= f6 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f7 f0 c==> cMEM f8 f6 c==> cMEM f2 f9 c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f9 c==> cfinal_list f1 f6 c/\ c= f6 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c= cnext_el f3 f10 f11 c==> cuniq clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cMEM f4 f3 c==> cMEM f12 f3 c==> c< cindexf f11 f4 f3 cindexf f11 f12 f3 c==> c= cfind_face f1 f4 f3 c==> cMEM cSND csplit_normal_list f1 f2 f3 f4 f5 cntrans f1 f9 f2 f10 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cloop_list f1 cSND csplit_normal_list f1 f2 f3 f4 f5 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f9 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ |- ((\x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))) x)
T * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ c= b1 cfind_face f0 b0 c= b2 cnext_el b1 b0 c/\ cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 b1 c/\ cMEM cztrans f0 f1 f2 b0 cNUMERAL c_0 b1 c< cindexf b2 cytrans f0 f1 f2 b0 cNUMERAL c_0 b1 cindexf b2 cztrans f0 f1 f2 b0 cNUMERAL c_0 b1 f3
+ (~ ((final_list L) r)), ((((marked_list L) N) r) x) |- (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r1) N) ==> (((MEM r2) N) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cmarked_list f0 f2 f1 f3 c==> cfinal_list f0 f4 c==> cfinal_list f0 f5 c==> cMEM f4 creplace f1 cCONS cSND csplit_normal_list f0 f1 f6 f7 f8 cNIL f2 c==> cMEM f5 creplace f1 cCONS cSND csplit_normal_list f0 f1 f6 f7 f8 cNIL f2 c==> c= cfind_face f0 f3 f6 c==> cMEM f9 f5 c==> cMEM f10 f4 c==> cMEM f4 f2 c==> cMEM f5 f2 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f9 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f6 f7 f8 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f6 f7 f8 cNIL
+ |- (((uniq (FST (((((split_normal_list L) r) f) y) z1))) /\ (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) /\ (((MEM u) (FST (((((split_normal_list L) r) f) y) z1))) /\ ((MEM v) (FST (((((split_normal_list L) r) f) y) z1)))))) ==> (?r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL))))))))
T c==> c/\ cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c/\ cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c/\ cMEM f5 cFST csplit_normal_list f0 f1 f2 f3 f4 cMEM f6 cFST csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c= cHD b0 f5 c/\ c= cLAST b0 f6 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list cFST csplit_normal_list f0 f1 f2 f3 f4 c~ c= b0 cNIL
+ ((\w. (((next_el f) x) = w)) w) |- (((next_el f) x) = w)
T c==> * / c= cnext_el f0 f1 b0 f2 c= cnext_el f0 f1 f2
- |- (((!x'. (((\w. (((next_el f) x) = w)) x') ==> (?w. (((next_el f) x) = w)))) ==> ((?w. (((next_el f) x) = w)) ==> (?w. (((next_el f) x) = w)))) = ((?w. (((next_el f) x) = w)) ==> (?w. (((next_el f) x) = w))))
T c= c==> ! c==> * / c= cnext_el f0 f1 b1 b0 c? / c= cnext_el f0 f1 b1 c==> c? / c= cnext_el f0 f1 b0 c? / c= cnext_el f0 f1 b0 c==> c? / c= cnext_el f0 f1 b0 c? / c= cnext_el f0 f1 b0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f8 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f11 f6 c/\ cMEM f1 f6 c= f11 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((final_list L) r2) |- ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) /\ ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))))
T c==> c==> cMEM f0 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c\/ cMEM f0 f6 c/\ cMEM f1 f6 c= f0 cSND csplit_normal_list f2 f1 f3 f4 f5 c==> cMEM f7 f0 c==> cfinal_list f2 f8 c/\ c==> cMEM f0 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c\/ cMEM f0 f6 c/\ cMEM f1 f6 c= f0 cSND csplit_normal_list f2 f1 f3 f4 f5 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f2 f1 f3 f4 f5 c==> c= cnext_el f3 f9 f10 c==> cuniq clist_of_darts f2 c==> call / c~ c= b0 cNIL f2 c==> ! c==> cMEM b0 clist_of_darts f2 cMEM c, cSND b0 cFST b0 clist_of_darts f2 c==> cMEM f4 f3 c==> cMEM f11 f3 c==> c< cindexf f10 f4 f3 cindexf f10 f11 f3 c==> c= cfind_face f2 f4 f3 c==> cMEM cFST csplit_normal_list f2 f1 f3 f4 f5 cntrans f2 f6 f1 f9 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f2 f1 f3 f4 f5 c==> cloop_list f2 cFST csplit_normal_list f2 f1 f3 f4 f5 c==> c= f0 cFST csplit_normal_list f2 f1 f3 f4 f5 c==> c= f8 cFST csplit_normal_list f2 f1 f3 f4 f5 c==> cMEM f12 cFST csplit_normal_list f2 f1 f3 f4 f5 c? / c/\ ccontour_list f2 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f2 ccat creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f2 f1 f3 f4 f5 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f9 f6 c/\ cMEM f1 f6 c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f10 f8 c==> cMEM f11 f9 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f8 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f6 f1 f4 call * part cloop_list f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- |- ((\v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))) v)
T * / ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ cfinal_list b4 f1 c/\ cfinal_list b4 f2 c/\ cMEM f1 b5 c/\ c= cFST csplit_normal_list b4 b6 b1 b2 b3 f2 c/\ c= cfind_face b4 b7 b1 c/\ cMEM b0 f2 cMEM f3 f1 c? / c/\ ccontour_list b4 b8 c/\ c~ c= b8 cNIL c/\ c= cHD b8 f3 c/\ c= cLAST b8 b0 cSUBSET * part cset_of_list b8 * part cset_of_list cflatten cfilter * part cfinal_list b4 ccat creplace b6 cCONS cSND csplit_normal_list b4 b6 b1 b2 b3 cNIL b5 cCONS cFST csplit_normal_list b4 b6 b1 b2 b3 cNIL f4
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f8 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c/\ c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) y) = f), ((((marked_list L) N) r) x) |- (((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f5 f7 c==> cmarked_list f0 f6 f1 f4 c= c==> cuniq cFST csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f9 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f6 f1 f4 c~ cfinal_list f0 f1 cuniq cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f4 cl'y f0 f1 f4 cprev_el f1 cl'z f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f9 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((MEM r2) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r1) /\ ((MEM v) r2)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cprev_el b2 f0 f2 c/\ cfinal_list b0 f3 c/\ cfinal_list b0 f4 c/\ c= cSND csplit_normal_list b0 b2 f5 f1 f2 f4 c/\ cMEM f3 b1 c/\ c= cfind_face b0 b3 f5 c/\ cMEM f6 f4 cMEM f7 f3 c? / c/\ ccontour_list b0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 f6 c/\ c= cLAST b4 f7 cSUBSET * part cset_of_list b4 * part cset_of_list cflatten cfilter * part cfinal_list b0 ccat creplace b2 cCONS cSND csplit_normal_list b0 b2 f5 f1 f2 cNIL b1 cCONS cFST csplit_normal_list b0 b2 f5 f1 f2 cNIL f8
- |- ((((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) ==> (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)))
T c==> c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
+ |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) r)
T * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cuniq cSND csplit_normal_list f0 b0 cfind_face f0 cl'y f0 b0 b1 cl'y f0 b0 b1 cprev_el b0 cl'z f0 f1 b0 b1 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f4 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
+ (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- ((?r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c= f0 cFST csplit_normal_list f1 f2 f3 f4 f5 c==> cfinal_list f1 f0 c==> c? / c/\ ccontour_list f1 b0 c/\ c= cHD b0 f6 c/\ c= cLAST b0 f7 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5 c~ c= b0 cNIL c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f6 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), ((MEM u) r1), ((final_list L) r2) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) /\ (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 f2 c==> cfinal_list f0 f3 c/\ ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f4 f5 c==> cMEM f6 f5 c==> c< cindexf f7 f4 f5 cindexf f7 f6 f5 c==> c= cfind_face f0 f4 f5 c==> cMEM cFST csplit_normal_list f0 f8 f5 f4 f9 cntrans f0 f10 f8 f11 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f8 f5 f4 f9 c==> cloop_list f0 cFST csplit_normal_list f0 f8 f5 f4 f9 c==> c= f2 cFST csplit_normal_list f0 f8 f5 f4 f9 c==> c= f3 cFST csplit_normal_list f0 f8 f5 f4 f9 c==> cMEM f12 cFST csplit_normal_list f0 f8 f5 f4 f9 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f8 cCONS cSND csplit_normal_list f0 f8 f5 f4 f9 cNIL f10 cCONS cFST csplit_normal_list f0 f8 f5 f4 f9 cNIL
+ ((HD r') = u), ((LAST r') = v), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL)))), ((contour_list L) r'), ((final_list L) r2) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c= cHD f0 f1 c==> c= cLAST f0 f2 c==> c= f3 cFST csplit_normal_list f4 f5 f6 f7 f8 c==> c/\ c= cLAST f0 f2 c/\ cSUBSET * part cset_of_list f0 * part cset_of_list cFST csplit_normal_list f4 f5 f6 f7 f8 c~ c= f0 cNIL c==> ccontour_list f4 f0 c==> cfinal_list f4 f3 c? / c/\ ccontour_list f4 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f4 ccat creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 cCONS cFST csplit_normal_list f4 f5 f6 f7 f8 cNIL
+ (uniq (FST (((((split_normal_list L) r) f) y) z1))), ((MEM u) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM v) (FST (((((split_normal_list L) r) f) y) z1))), ((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) |- (((?r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = ((((uniq (FST (((((split_normal_list L) r) f) y) z1))) /\ (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) /\ (((MEM u) (FST (((((split_normal_list L) r) f) y) z1))) /\ ((MEM v) (FST (((((split_normal_list L) r) f) y) z1)))))) ==> (?r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL)))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f5 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f6 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c= c==> c? / c/\ ccontour_list f0 b0 c/\ c= cHD b0 f5 c/\ c= cLAST b0 f6 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list cFST csplit_normal_list f0 f1 f2 f3 f4 c~ c= b0 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f5 c/\ c= cLAST b0 f6 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f7 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL c==> c==> c/\ cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c/\ cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c/\ cMEM f5 cFST csplit_normal_list f0 f1 f2 f3 f4 cMEM f6 cFST csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c= cHD b0 f5 c/\ c= cLAST b0 f6 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list cFST csplit_normal_list f0 f1 f2 f3 f4 c~ c= b0 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f5 c/\ c= cLAST b0 f6 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f7 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
- ((~ (A ==> (A \/ B))) ==> F) |- ((((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) ==> ((~ (A ==> (A \/ B))) ==> F))
T c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
+ |- (((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) ==> ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) x)) = ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) x))
T c= c==> ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 cntrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 cntrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 f3 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 cntrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 f3
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) N), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r1) N) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f9 f6 c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f9 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ |- ((\L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) x))) ==> (((find_face L) y) = ((find_face L) x)))) L)
T * / c==> c/\ cuniq clist_of_darts b0 cMEM f0 cfind_face b0 f1 c= cfind_face b0 f0 cfind_face b0 f1 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f2 f1 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c< cindexf f3 f6 f1 cindexf f3 f10 f1 c==> cMEM f11 f4 c==> cMEM f12 f9 c==> cMEM f6 f1 c==> cMEM f10 f1 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f4 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (uniq (FST (((((split_normal_list L) r) f) y) z1))), (r1 = (FST (((((split_normal_list L) r) f) y) z1))), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- (((MEM v) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= f5 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= f6 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f7 f5 c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cfinal_list f0 f6 c==> cMEM f8 cFST csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f9 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
+ (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (~ ((final_list L) r)), ((MEM u) ((final_dart_list L) N)) |- (((MEM u) ((final_dart_list L) N)) /\ (((MEM v) ((final_dart_list L) N)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> c~ cfinal_list f0 f2 c==> cMEM f3 cfinal_dart_list f0 f1 c/\ cMEM f3 cfinal_dart_list f0 f1 c==> cMEM f4 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f3 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f5 f6 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f5 f6 f7 cNIL
+ |- ((\L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) L)
T * / ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((l'z L) N) r) x) = z), ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'z f0 f2 f1 f3 f4 c==> c/\ c= cl'z f0 f2 f1 f3 f4 c/\ c= cl'y f0 f1 f3 f5 c/\ c= cprev_el f1 f4 f6 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ c\/ cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 cMEM f7 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL c/\ c\/ cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 cMEM f8 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL c/\ c= cfind_face f0 f3 f9 c/\ cMEM f10 f8 cMEM f11 f7 c==> cmarked_list f0 f2 f1 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= ! ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 cT
+ (~ ((final_list L) r)), ((MEM v) r2), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM v) r2) /\ (((MEM u) r1) ==> (((MEM r1) N) ==> (((MEM r2) N) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cMEM f2 f3 c==> cfinal_list f0 f4 c==> cfinal_list f0 f3 c==> cmarked_list f0 f5 f1 f6 c/\ cMEM f2 f3 c==> cMEM f7 f4 c==> cMEM f4 f5 c==> cMEM f3 f5 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f9 f10 cNIL f5 cCONS cFST csplit_normal_list f0 f1 f8 f9 f10 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (SND (((((split_normal_list L) r) f) y) z1))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cSND csplit_normal_list f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f5 f6 c==> c= f7 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c= f8 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c< cindexf f6 f3 f2 cindexf f6 f9 f2 c==> cMEM f10 f7 c==> cMEM f3 f2 c==> cMEM f9 f2 c==> cMEM f1 f11 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f11 c==> cMEM cSND csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f11 f1 f5 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f8 c==> cloop_list f0 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f12 cSND csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f11 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) xs)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 * / ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 f2
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c= f8 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c< cindexf f3 f6 f1 cindexf f3 f9 f1 c==> cMEM f10 f4 c==> cMEM f11 f8 c==> cMEM f6 f1 c==> cMEM f9 f1 c==> cMEM f5 f12 c==> cMEM f8 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f12 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f8 c==> c= cfind_face f0 f6 f1 c==> cMEM cSND csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f12 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cSND csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f12 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c= f8 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f9 f4 c==> cMEM f10 f8 c==> cMEM f5 f11 c==> cMEM f8 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f11 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f8 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cSND csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f11 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cSND csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f11 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
+ |- (((!d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) ==> ((\d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) y)) = ((\d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) y))
T c= c==> ! ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 * / ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 f0 * / ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 f0
+ (r' = s), ((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) |- ((((set_of_list s) SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))) = (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> c= f0 f1 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cSND csplit_normal_list f2 f3 f4 f5 f6 c= c==> cSUBSET * part cset_of_list f1 * part cset_of_list cSND csplit_normal_list f2 f3 f4 f5 f6 cIN f7 * part cset_of_list cflatten cfilter * part cfinal_list f2 cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f4 f5 f6 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f4 f5 f6 cNIL cIN f7 * part cset_of_list cflatten cfilter * part cfinal_list f2 cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f4 f5 f6 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f4 f5 f6 cNIL
- |- ((\s. ((?x. ((MEM x) s)) = (~ (s = NIL)))) s)
T * / c= c? / cMEM b1 b0 c~ c= b0 cNIL f0
- |- ((\z. (!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))) z)
T * / ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b8 c/\ cgood_list_nodes b8 c/\ cmarked_list b8 b9 b10 b11 c/\ c~ cfinal_list b8 b10 c/\ c= cl'z b8 b9 b10 b11 b0 c/\ c= cl'y b8 b10 b11 b6 c/\ c= cprev_el b10 b0 b7 c/\ cfinal_list b8 b2 c/\ cfinal_list b8 b1 c/\ cMEM b2 b9 c/\ c= cFST csplit_normal_list b8 b10 b5 b6 b7 b1 c/\ c= cfind_face b8 b11 b5 c/\ cMEM b4 b1 cMEM b3 b2 c? / c/\ ccontour_list b8 b12 c/\ c~ c= b12 cNIL c/\ c= cHD b12 b3 c/\ c= cLAST b12 b4 cSUBSET * part cset_of_list b12 * part cset_of_list cflatten cfilter * part cfinal_list b8 ccat creplace b10 cCONS cSND csplit_normal_list b8 b10 b5 b6 b7 cNIL b9 cCONS cFST csplit_normal_list b8 b10 b5 b6 b7 cNIL f0
+ (~ (s = NIL)), (~ ((final_list L) r)), ((HD s) = u), ((LAST s) = v), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((contour_list L) s) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ c= f0 cNIL c==> c~ cfinal_list f1 f2 c==> c= cHD f0 f3 c==> c= cLAST f0 f4 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cfinal_dart_list f1 f5 c==> ccontour_list f1 f0 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f3 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f6 f7 f8 cNIL f5 cCONS cFST csplit_normal_list f1 f2 f6 f7 f8 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (SND (((((split_normal_list L) r) f) y) z1))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((uniq (SND (((((split_normal_list L) r) f) y) z1))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq cSND csplit_normal_list f0 f2 f4 f5 f6 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f7 c==> c= f8 cSND csplit_normal_list f0 f2 f4 f5 f6 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f5 f6 c==> c= cfind_face f0 f5 f4 c==> c< cindexf f7 f5 f4 cindexf f7 f10 f4 c==> cMEM f11 f8 c==> cMEM f12 f9 c==> cMEM f5 f4 c==> cMEM f10 f4 c==> cMEM f2 f1 c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f5 f6 cNIL f1 c==> cMEM cSND csplit_normal_list f0 f2 f4 f5 f6 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ cuniq cSND csplit_normal_list f0 f2 f4 f5 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f5 f6 cNIL
+ |- (((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) ==> ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) x)) = ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) x))
T c= c==> ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 cntrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 cntrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 f3 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 cntrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (FST (((((split_normal_list L) r) f) y) z1))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (FST (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f5 f6 c==> c= f7 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c\/ cMEM f7 f8 c/\ cMEM f1 f8 c= f7 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f1 f8 c= f9 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c< cindexf f6 f3 f2 cindexf f6 f10 f2 c==> cMEM f11 f7 c==> cMEM f12 f9 c==> cMEM f3 f2 c==> cMEM f10 f2 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL c==> cMEM cFST csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f8 f1 f5 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cfinal_list f0 f9 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
+ ((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) |- (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) = T)
T c==> cloop_list f0 cSND csplit_normal_list f0 f1 f2 f3 f4 c= cloop_list f0 cSND csplit_normal_list f0 f1 f2 f3 f4 cT
+ |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))) x)
T * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cuniq cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f4 f1 c==> c==> cMEM f5 creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 c\/ cMEM f5 f8 c/\ cMEM f6 f8 c= f5 cSND csplit_normal_list f0 f6 f1 f4 f7 c==> c==> cMEM f9 creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f6 f8 c= f9 cSND csplit_normal_list f0 f6 f1 f4 f7 c==> c< cindexf f3 f4 f1 cindexf f3 f10 f1 c==> cMEM f11 f5 c==> cMEM f12 f9 c==> cMEM f4 f1 c==> cMEM f10 f1 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f6 f1 f4 f7 cNIL c==> cMEM cFST csplit_normal_list f0 f6 f1 f4 f7 cntrans f0 f8 f6 f2 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> cuniq cFST csplit_normal_list f0 f6 f1 f4 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f6 f1 f4 f7 c==> c= f5 cFST csplit_normal_list f0 f6 f1 f4 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f6 f1 f4 f7 cNIL
+ |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((MEM r2) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r1) /\ ((MEM v) r2)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))) x)
T * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 b0 f3 c/\ c= cl'y f0 f2 b0 f4 c/\ c= cprev_el f2 f3 f5 c/\ cfinal_list f0 f6 c/\ cfinal_list f0 f7 c/\ c= cSND csplit_normal_list f0 f2 f8 f4 f5 f7 c/\ cMEM f6 f1 c/\ c= cfind_face f0 b0 f8 c/\ cMEM f9 f7 cMEM f10 f6 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f9 c/\ c= cLAST b1 f10 cSUBSET * part cset_of_list b1 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f4 f5 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f8 f4 f5 cNIL f11
+ (~ (r' = NIL)), ((HD r') = u), ((LAST r') = v), (r' = s), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))), ((contour_list L) r'), ((final_list L) r2) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ c= f0 cNIL c==> c= cHD f0 f1 c==> c= cLAST f0 f2 c==> c= f0 f3 c==> c= f4 cFST csplit_normal_list f5 f6 f7 f8 f9 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cFST csplit_normal_list f5 f6 f7 f8 f9 c==> ccontour_list f5 f0 c==> cfinal_list f5 f4 c? / c/\ ccontour_list f5 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f5 ccat creplace f6 cCONS cSND csplit_normal_list f5 f6 f7 f8 f9 cNIL f10 cCONS cFST csplit_normal_list f5 f6 f7 f8 f9 cNIL
+ |- (((!y. (!s. (((uniq s) /\ (((loop_list L) s) /\ (((MEM u) s) /\ ((MEM y) s)))) ==> (?r. (((contour_list L) r) /\ (((HD r) = u) /\ (((LAST r) = y) /\ (((set_of_list r) SUBSET (set_of_list s)) /\ (~ (r = NIL)))))))))) ==> ((\y. (!s. (((uniq s) /\ (((loop_list L) s) /\ (((MEM u) s) /\ ((MEM y) s)))) ==> (?r. (((contour_list L) r) /\ (((HD r) = u) /\ (((LAST r) = y) /\ (((set_of_list r) SUBSET (set_of_list s)) /\ (~ (r = NIL)))))))))) v)) = ((\y. (!s. (((uniq s) /\ (((loop_list L) s) /\ (((MEM u) s) /\ ((MEM y) s)))) ==> (?r. (((contour_list L) r) /\ (((HD r) = u) /\ (((LAST r) = y) /\ (((set_of_list r) SUBSET (set_of_list s)) /\ (~ (r = NIL)))))))))) v))
T c= c==> ! ! c==> c/\ cuniq b1 c/\ cloop_list f0 b1 c/\ cMEM f1 b1 cMEM b0 b1 c? / c/\ ccontour_list f0 b2 c/\ c= cHD b2 f1 c/\ c= cLAST b2 b0 c/\ cSUBSET * part cset_of_list b2 * part cset_of_list b1 c~ c= b2 cNIL * / ! c==> c/\ cuniq b1 c/\ cloop_list f0 b1 c/\ cMEM f1 b1 cMEM b0 b1 c? / c/\ ccontour_list f0 b2 c/\ c= cHD b2 f1 c/\ c= cLAST b2 b0 c/\ cSUBSET * part cset_of_list b2 * part cset_of_list b1 c~ c= b2 cNIL f2 * / ! c==> c/\ cuniq b1 c/\ cloop_list f0 b1 c/\ cMEM f1 b1 cMEM b0 b1 c? / c/\ ccontour_list f0 b2 c/\ c= cHD b2 f1 c/\ c= cLAST b2 b0 c/\ cSUBSET * part cset_of_list b2 * part cset_of_list b1 c~ c= b2 cNIL f2
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ ((MEM r2) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f8 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f11 f6 c/\ cMEM f1 f6 cMEM f11 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ ((MEM u) r1), ((MEM v) r2), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))
T c==> cMEM f0 f1 c==> cMEM f2 f3 c==> cMEM f3 cCONS cFST csplit_normal_list f4 f5 f6 f7 f8 cNIL c==> cfinal_list f4 f3 c==> c==> cMEM f1 creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 c\/ cMEM f1 f9 c/\ cMEM f5 f9 c= f1 cSND csplit_normal_list f4 f5 f6 f7 f8 c==> c==> cMEM f3 creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 c\/ cMEM f3 f9 c/\ cMEM f5 f9 c= f3 cSND csplit_normal_list f4 f5 f6 f7 f8 c==> c= cnext_el f6 f10 f11 c==> cuniq clist_of_darts f4 c==> call / c~ c= b0 cNIL f4 c==> ! c==> cMEM b0 clist_of_darts f4 cMEM c, cSND b0 cFST b0 clist_of_darts f4 c==> cMEM f7 f6 c==> cMEM f12 f6 c==> c< cindexf f11 f7 f6 cindexf f11 f12 f6 c==> c= cfind_face f4 f7 f6 c==> cMEM cFST csplit_normal_list f4 f5 f6 f7 f8 cntrans f4 f9 f5 f10 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f4 f5 f6 f7 f8 c==> cloop_list f4 cFST csplit_normal_list f4 f5 f6 f7 f8 c==> c= f1 cFST csplit_normal_list f4 f5 f6 f7 f8 c? / c/\ ccontour_list f4 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f0 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f4 ccat creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 cCONS cFST csplit_normal_list f4 f5 f6 f7 f8 cNIL
- ((MEM v) r2), ((final_list L) r2) |- (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))))
T c==> cMEM f0 f1 c==> cfinal_list f2 f1 c==> cMEM f3 f4 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f2 f5 f6 f7 f8 cNIL f9 c\/ cMEM f4 f9 c/\ cMEM f5 f9 c= f4 cSND csplit_normal_list f2 f5 f6 f7 f8 c==> c==> cMEM f1 creplace f5 cCONS cSND csplit_normal_list f2 f5 f6 f7 f8 cNIL f9 c\/ cMEM f1 f9 c/\ cMEM f5 f9 c= f1 cSND csplit_normal_list f2 f5 f6 f7 f8 c==> c= cnext_el f6 f10 f11 c==> cuniq clist_of_darts f2 c==> call / c~ c= b0 cNIL f2 c==> ! c==> cMEM b0 clist_of_darts f2 cMEM c, cSND b0 cFST b0 clist_of_darts f2 c==> cMEM f7 f6 c==> cMEM f12 f6 c==> c< cindexf f11 f7 f6 cindexf f11 f12 f6 c==> c= cfind_face f2 f7 f6 c==> cMEM cFST csplit_normal_list f2 f5 f6 f7 f8 cntrans f2 f9 f5 f10 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f2 f5 f6 f7 f8 c==> cloop_list f2 cFST csplit_normal_list f2 f5 f6 f7 f8 c==> c= f4 cFST csplit_normal_list f2 f5 f6 f7 f8 c==> c= f1 cFST csplit_normal_list f2 f5 f6 f7 f8 c? / c/\ ccontour_list f2 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f3 c/\ c= cLAST b0 f0 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f2 ccat creplace f5 cCONS cSND csplit_normal_list f2 f5 f6 f7 f8 cNIL f9 cCONS cFST csplit_normal_list f2 f5 f6 f7 f8 cNIL
+ |- ((\z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((MEM r2) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r1) /\ ((MEM v) r2)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) z1)
T * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ c= cSND csplit_normal_list b1 b3 f4 f1 b0 f3 c/\ cMEM f2 b2 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f3 cMEM f6 f2 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f5 c/\ c= cLAST b5 f6 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL f7
- |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ (uniq (FST (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) /\ ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))
T c==> cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f5 f6 c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cfinal_list f0 f7 c/\ cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= f6 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= f7 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f8 cFST csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f5 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f9 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
+ (uniq (list_of_darts L)), (((find_face L) x) = f), ((MEM y) f) |- (((((find_face L) y) = f) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = ((((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) x))) ==> (((find_face L) y) = ((find_face L) x))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> cuniq clist_of_darts f0 c==> c= cfind_face f0 f1 f2 c==> cMEM f3 f2 c= c==> c= cfind_face f0 f3 f2 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f4 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f6 cCONS cSND csplit_normal_list f0 f6 f2 f3 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f6 f2 f3 f7 cNIL c==> c==> c/\ cuniq clist_of_darts f0 cMEM f3 cfind_face f0 f1 c= cfind_face f0 f3 cfind_face f0 f1 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f4 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f6 cCONS cSND csplit_normal_list f0 f6 f2 f3 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f6 f2 f3 f7 cNIL
- (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f2 f1 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> cMEM f4 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> cfinal_list f0 f9 c/\ cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
+ (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2), ((\d. (x' = d)) d) |- (((\d. (x' = d)) d) /\ ((x' IN (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f0 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 c==> cfinal_list f1 f0 c==> * / c= f7 b0 f8 c/\ * / c= f7 b0 f8 c==> cIN f7 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 cIN f7 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
- ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))))
T c==> cMEM f0 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c==> cMEM f6 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c==> cfinal_list f1 f6 c==> c= cfind_face f1 f7 f3 c==> cMEM f8 f6 c==> cMEM f9 f0 c==> c==> cMEM f0 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f10 c\/ cMEM f0 f10 c/\ cMEM f2 f10 c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f10 c\/ cMEM f6 f10 c/\ cMEM f2 f10 c= f6 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c= cnext_el f3 f7 f11 c==> cuniq clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cMEM f4 f3 c==> cMEM f12 f3 c==> c< cindexf f11 f4 f3 cindexf f11 f12 f3 c==> c= cfind_face f1 f4 f3 c==> cMEM cFST csplit_normal_list f1 f2 f3 f4 f5 cntrans f1 f10 f2 f7 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f1 f2 f3 f4 f5 c==> cloop_list f1 cFST csplit_normal_list f1 f2 f3 f4 f5 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f10 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
- |- (((!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))) ==> ((\r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))) r2)) = ((\r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))) r2))
T c= c==> ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b7 c/\ cgood_list_nodes b7 c/\ cmarked_list b7 b8 b9 b10 c/\ c~ cfinal_list b7 b9 c/\ c= cl'z b7 b8 b9 b10 f0 c/\ c= cl'y b7 b9 b10 b5 c/\ c= cprev_el b9 f0 b6 c/\ cfinal_list b7 b1 c/\ cfinal_list b7 b0 c/\ cMEM b1 b8 c/\ c= cFST csplit_normal_list b7 b9 b4 b5 b6 b0 c/\ c= cfind_face b7 b10 b4 c/\ cMEM b3 b0 cMEM b2 b1 c? / c/\ ccontour_list b7 b11 c/\ c~ c= b11 cNIL c/\ c= cHD b11 b2 c/\ c= cLAST b11 b3 cSUBSET * part cset_of_list b11 * part cset_of_list cflatten cfilter * part cfinal_list b7 ccat creplace b9 cCONS cSND csplit_normal_list b7 b9 b4 b5 b6 cNIL b8 cCONS cFST csplit_normal_list b7 b9 b4 b5 b6 cNIL * / ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b7 c/\ cgood_list_nodes b7 c/\ cmarked_list b7 b8 b9 b10 c/\ c~ cfinal_list b7 b9 c/\ c= cl'z b7 b8 b9 b10 f0 c/\ c= cl'y b7 b9 b10 b5 c/\ c= cprev_el b9 f0 b6 c/\ cfinal_list b7 b1 c/\ cfinal_list b7 b0 c/\ cMEM b1 b8 c/\ c= cFST csplit_normal_list b7 b9 b4 b5 b6 b0 c/\ c= cfind_face b7 b10 b4 c/\ cMEM b3 b0 cMEM b2 b1 c? / c/\ ccontour_list b7 b11 c/\ c~ c= b11 cNIL c/\ c= cHD b11 b2 c/\ c= cLAST b11 b3 cSUBSET * part cset_of_list b11 * part cset_of_list cflatten cfilter * part cfinal_list b7 ccat creplace b9 cCONS cSND csplit_normal_list b7 b9 b4 b5 b6 cNIL b8 cCONS cFST csplit_normal_list b7 b9 b4 b5 b6 cNIL f1 * / ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b7 c/\ cgood_list_nodes b7 c/\ cmarked_list b7 b8 b9 b10 c/\ c~ cfinal_list b7 b9 c/\ c= cl'z b7 b8 b9 b10 f0 c/\ c= cl'y b7 b9 b10 b5 c/\ c= cprev_el b9 f0 b6 c/\ cfinal_list b7 b1 c/\ cfinal_list b7 b0 c/\ cMEM b1 b8 c/\ c= cFST csplit_normal_list b7 b9 b4 b5 b6 b0 c/\ c= cfind_face b7 b10 b4 c/\ cMEM b3 b0 cMEM b2 b1 c? / c/\ ccontour_list b7 b11 c/\ c~ c= b11 cNIL c/\ c= cHD b11 b2 c/\ c= cLAST b11 b3 cSUBSET * part cset_of_list b11 * part cset_of_list cflatten cfilter * part cfinal_list b7 ccat creplace b9 cCONS cSND csplit_normal_list b7 b9 b4 b5 b6 cNIL b8 cCONS cFST csplit_normal_list b7 b9 b4 b5 b6 cNIL f1
+ |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cprev_el b2 f0 f2 c/\ cfinal_list b0 f3 c/\ cfinal_list b0 f4 c/\ c= cSND csplit_normal_list b0 b2 f5 f1 f2 f4 c/\ c= cFST csplit_normal_list b0 b2 f5 f1 f2 f3 c/\ c= cfind_face b0 b3 f5 c/\ cMEM f6 f3 cMEM f7 f4 c? / c/\ ccontour_list b0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 f7 c/\ c= cLAST b4 f6 cSUBSET * part cset_of_list b4 * part cset_of_list cflatten cfilter * part cfinal_list b0 ccat creplace b2 cCONS cSND csplit_normal_list b0 b2 f5 f1 f2 cNIL b1 cCONS cFST csplit_normal_list b0 b2 f5 f1 f2 cNIL f8
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) N), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f9 f6 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f11 f6 c/\ cMEM f1 f6 c= f11 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c= f6 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f7 f0 c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 c==> cfinal_list f1 f6 c==> c= cnext_el f3 f9 f10 c==> cuniq clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cMEM f4 f3 c==> cMEM f11 f3 c==> c< cindexf f10 f4 f3 cindexf f10 f11 f3 c==> c= cfind_face f1 f4 f3 c==> cMEM cSND csplit_normal_list f1 f2 f3 f4 f5 cntrans f1 f8 f2 f9 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cloop_list f1 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f12 cSND csplit_normal_list f1 f2 f3 f4 f5 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ (uniq (FST (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((final_list L) r2) |- ((uniq (FST (((((split_normal_list L) r) f) y) z1))) /\ (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f5 f6 c==> cfinal_list f0 f7 c/\ cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= f6 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= f7 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f8 cFST csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f5 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f9 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> (((MEM r) N) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f9 f6 c/\ cMEM f1 f6 c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f1 f6 c==> c= f11 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), ((MEM d) l), ((MEM l) N), ((final_list L) l) |- ((l = r) ==> F)
T c==> c~ cfinal_list f0 f1 c==> cMEM f2 f3 c==> cMEM f3 f4 c==> cfinal_list f0 f3 c==> c= f3 f1 cF
- |- (((!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))) ==> ((\f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))) f)) = ((\f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))) f))
T c= c==> ! ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c~ cfinal_list b3 b5 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 b1 c/\ c= cprev_el b5 f0 b2 c/\ cfinal_list b3 f1 c/\ cfinal_list b3 f2 c/\ cMEM f2 b4 c/\ c= cFST csplit_normal_list b3 b5 b0 b1 b2 f1 c/\ c= cfind_face b3 b6 b0 c/\ cMEM f3 f2 cMEM f4 f1 c? / c/\ ccontour_list b3 b7 c/\ c~ c= b7 cNIL c/\ c= cHD b7 f4 c/\ c= cLAST b7 f3 cSUBSET * part cset_of_list b7 * part cset_of_list cflatten cfilter * part cfinal_list b3 ccat creplace b5 cCONS cSND csplit_normal_list b3 b5 b0 b1 b2 cNIL b4 cCONS cFST csplit_normal_list b3 b5 b0 b1 b2 cNIL * / ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c~ cfinal_list b3 b5 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 b1 c/\ c= cprev_el b5 f0 b2 c/\ cfinal_list b3 f1 c/\ cfinal_list b3 f2 c/\ cMEM f2 b4 c/\ c= cFST csplit_normal_list b3 b5 b0 b1 b2 f1 c/\ c= cfind_face b3 b6 b0 c/\ cMEM f3 f2 cMEM f4 f1 c? / c/\ ccontour_list b3 b7 c/\ c~ c= b7 cNIL c/\ c= cHD b7 f4 c/\ c= cLAST b7 f3 cSUBSET * part cset_of_list b7 * part cset_of_list cflatten cfilter * part cfinal_list b3 ccat creplace b5 cCONS cSND csplit_normal_list b3 b5 b0 b1 b2 cNIL b4 cCONS cFST csplit_normal_list b3 b5 b0 b1 b2 cNIL f5 * / ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c~ cfinal_list b3 b5 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 b1 c/\ c= cprev_el b5 f0 b2 c/\ cfinal_list b3 f1 c/\ cfinal_list b3 f2 c/\ cMEM f2 b4 c/\ c= cFST csplit_normal_list b3 b5 b0 b1 b2 f1 c/\ c= cfind_face b3 b6 b0 c/\ cMEM f3 f2 cMEM f4 f1 c? / c/\ ccontour_list b3 b7 c/\ c~ c= b7 cNIL c/\ c= cHD b7 f4 c/\ c= cLAST b7 f3 cSUBSET * part cset_of_list b7 * part cset_of_list cflatten cfilter * part cfinal_list b3 ccat creplace b5 cCONS cSND csplit_normal_list b3 b5 b0 b1 b2 cNIL b4 cCONS cFST csplit_normal_list b3 b5 b0 b1 b2 cNIL f5
+ |- ((\v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))) v)
T * / ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ cfinal_list b4 f1 c/\ cfinal_list b4 f2 c/\ c= cSND csplit_normal_list b4 b6 b1 b2 b3 f2 c/\ c= cFST csplit_normal_list b4 b6 b1 b2 b3 f1 c/\ c= cfind_face b4 b7 b1 c/\ cMEM b0 f1 cMEM f3 f2 c? / c/\ ccontour_list b4 b8 c/\ c~ c= b8 cNIL c/\ c= cHD b8 f3 c/\ c= cLAST b8 b0 cSUBSET * part cset_of_list b8 * part cset_of_list cflatten cfilter * part cfinal_list b4 ccat creplace b6 cCONS cSND csplit_normal_list b4 b6 b1 b2 b3 cNIL b5 cCONS cFST csplit_normal_list b4 b6 b1 b2 b3 cNIL f4
+ (~ (s = NIL)), (r' = s), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))), ((final_list L) r2) |- ((~ (s = NIL)) /\ ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c==> c~ c= f0 cNIL c==> c= f1 f0 c==> c= f2 cFST csplit_normal_list f3 f4 f5 f6 f7 c==> cSUBSET * part cset_of_list f1 * part cset_of_list cFST csplit_normal_list f3 f4 f5 f6 f7 c==> cfinal_list f3 f2 c/\ c~ c= f0 cNIL c==> cIN f8 * part cset_of_list f0 cIN f8 * part cset_of_list cflatten cfilter * part cfinal_list f3 cAPPEND creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f9 cCONS cFST csplit_normal_list f3 f4 f5 f6 f7 cNIL
+ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) |- (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) = T)
T c==> cMEM f0 cFST csplit_normal_list f1 f2 f3 f4 f5 c= cMEM f0 cFST csplit_normal_list f1 f2 f3 f4 f5 cT
+ |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((MEM r2) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r1) /\ ((MEM v) r2)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))) r)
T * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 b0 c/\ c= cl'z f0 f1 b0 b1 f2 c/\ c= cl'y f0 b0 b1 f3 c/\ c= cprev_el b0 f2 f4 c/\ cfinal_list f0 f5 c/\ cfinal_list f0 f6 c/\ c= cSND csplit_normal_list f0 b0 f7 f3 f4 f6 c/\ cMEM f5 f1 c/\ c= cfind_face f0 b1 f7 c/\ cMEM f8 f6 cMEM f9 f5 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 f8 c/\ c= cLAST b2 f9 cSUBSET * part cset_of_list b2 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b0 cCONS cSND csplit_normal_list f0 b0 f7 f3 f4 cNIL f1 cCONS cFST csplit_normal_list f0 b0 f7 f3 f4 cNIL f10
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c= cfind_face f0 f7 f4 c==> c< cindexf f5 f7 f4 cindexf f5 f10 f4 c==> cMEM f11 f6 c==> cMEM f12 f9 c==> cMEM f7 f4 c==> cMEM f10 f4 c==> cMEM f2 f1 c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> cMEM cSND csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> (((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cmarked_list f0 f6 f1 f4 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL c==> c= cfind_face f0 f4 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 c\/ cMEM f7 f6 c/\ cMEM f1 f6 c= f7 cSND csplit_normal_list f0 f1 f9 f5 f3 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f9 f5 f3 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL
- |- ((!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ cfinal_list b4 f1 c/\ cfinal_list b4 f2 c/\ c= cSND csplit_normal_list b4 b6 b1 b2 b3 f2 c/\ cMEM f1 b5 c/\ c= cfind_face b4 b7 b1 c/\ cMEM b0 f2 cMEM f3 f1 c? / c/\ ccontour_list b4 b8 c/\ c~ c= b8 cNIL c/\ c= cHD b8 f3 c/\ c= cLAST b8 b0 cSUBSET * part cset_of_list b8 * part cset_of_list cflatten cfilter * part cfinal_list b4 ccat creplace b6 cCONS cSND csplit_normal_list b4 b6 b1 b2 b3 cNIL b5 cCONS cFST csplit_normal_list b4 b6 b1 b2 b3 cNIL cT
+ (~ ((final_list L) r)), ((\l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM d) l))) l) |- (((\l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM d) l))) l) /\ (?l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l))))
T c==> c~ cfinal_list f0 f1 c==> * / c/\ c/\ cfinal_list f0 b0 cMEM b0 f2 cMEM f3 b0 f4 c/\ * / c/\ c/\ cfinal_list f0 b0 cMEM b0 f2 cMEM f3 b0 f4 c? / c/\ c/\ cfinal_list f0 b0 c\/ cMEM b0 creplace f1 cCONS cSND csplit_normal_list f0 f1 f5 f6 f7 cNIL f2 cMEM b0 cCONS cFST csplit_normal_list f0 f1 f5 f6 f7 cNIL cMEM f3 b0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) /\ (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c==> c= cfind_face f0 f4 f8 c==> cMEM f10 f9 c==> cMEM f11 f7 c==> cMEM f1 f6 c==> c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= f9 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f8 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ |- ((?l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM v) l))) = ((MEM v) ((final_dart_list L) N)))
T c= c? / c/\ c/\ cfinal_list f0 b0 cMEM b0 f1 cMEM f2 b0 cMEM f2 cfinal_dart_list f0 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM y) f) /\ (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> cMEM f10 f6 c==> cMEM f11 f9 c==> cMEM f7 f4 c==> cMEM f2 f1 c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ cMEM f7 f4 c==> cMEM f12 f4 c==> c< cindexf f5 f7 f4 cindexf f5 f12 f4 c==> c= cfind_face f0 f7 f4 c==> cMEM cSND csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
+ (~ (s = NIL)), (~ ((final_list L) r)), ((HD s) = u), ((LAST s) = v), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((contour_list L) s) |- ((\s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))) s)
T c==> c~ c= f0 cNIL c==> c~ cfinal_list f1 f2 c==> c= cHD f0 f3 c==> c= cLAST f0 f4 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cfinal_dart_list f1 f5 c==> ccontour_list f1 f0 * / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f3 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f6 f7 f8 cNIL f5 cCONS cFST csplit_normal_list f1 f2 f6 f7 f8 cNIL f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c==> c= cfind_face f0 f4 f8 c==> cMEM f9 f7 c==> cMEM f10 f11 c==> cMEM f1 f6 c==> c= f11 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f8 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f9 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ |- (((!f. (!xs. (!g. (((MEM r2) (((replace f) xs) g)) ==> (((MEM r2) g) \/ (((MEM f) g) /\ ((MEM r2) xs))))))) ==> ((\f. (!xs. (!g. (((MEM r2) (((replace f) xs) g)) ==> (((MEM r2) g) \/ (((MEM f) g) /\ ((MEM r2) xs))))))) r)) = ((\f. (!xs. (!g. (((MEM r2) (((replace f) xs) g)) ==> (((MEM r2) g) \/ (((MEM f) g) /\ ((MEM r2) xs))))))) r))
T c= c==> ! ! ! c==> cMEM f0 creplace b0 b1 b2 c\/ cMEM f0 b2 c/\ cMEM b0 b2 cMEM f0 b1 * / ! ! c==> cMEM f0 creplace b0 b1 b2 c\/ cMEM f0 b2 c/\ cMEM b0 b2 cMEM f0 b1 f1 * / ! ! c==> cMEM f0 creplace b0 b1 b2 c\/ cMEM f0 b2 c/\ cMEM b0 b2 cMEM f0 b1 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((final_list L) r2) /\ (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c/\ cfinal_list f0 f7 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 c==> c= cfind_face f0 f4 f9 c==> cMEM f10 f7 c==> cMEM f11 f8 c==> cMEM f1 f6 c==> c= f8 cSND csplit_normal_list f0 f1 f9 f5 f3 c==> c= f7 cSND csplit_normal_list f0 f1 f9 f5 f3 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) N), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ ((MEM r2) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f9 f6 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f11 f6 c/\ cMEM f1 f6 cMEM f11 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 call * part cloop_list f0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f4 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f6 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f6 f7 f8 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f4 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f6 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f6 f7 f8 cNIL
+ ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) |- (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) = T)
T c==> cMEM f0 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c= cMEM f0 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 cT
+ (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), ((MEM u) r1), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((((find_face L) y) = f) /\ (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c= f6 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c= cfind_face f1 f4 f3 c==> cMEM f7 f0 c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 c==> cfinal_list f1 f6 c/\ c= cfind_face f1 f4 f3 c==> cMEM cSND csplit_normal_list f1 f2 f3 f4 f5 cntrans f1 f8 f2 f9 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cloop_list f1 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f10 cSND csplit_normal_list f1 f2 f3 f4 f5 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ |- ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)
T * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f10 c==> cMEM f11 f8 c==> cMEM f10 f6 c==> cfinal_list f0 f10 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c/\ c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c==> c= cfind_face f0 f4 f8 c==> cMEM f10 f9 c==> cMEM f11 f7 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c\/ cMEM f7 f6 c/\ cMEM f1 f6 c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c\/ cMEM f9 f6 c/\ cMEM f1 f6 c= f9 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f8 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
- (~ ((final_list L) r)), ((MEM d) ((final_dart_list L) N)) |- (((MEM d) ((final_dart_list L) N)) /\ (?l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l))))
T c==> c~ cfinal_list f0 f1 c==> cMEM f2 cfinal_dart_list f0 f3 c/\ cMEM f2 cfinal_dart_list f0 f3 c? / c/\ c/\ cfinal_list f0 b0 c\/ cMEM b0 creplace f1 cCONS cSND csplit_normal_list f0 f1 f4 f5 f6 cNIL f3 cMEM b0 cCONS cFST csplit_normal_list f0 f1 f4 f5 f6 cNIL cMEM f2 b0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 f1 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cMEM f1 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f9 f5 f6 c==> c= f8 cSND csplit_normal_list f0 f1 f9 f5 f6 c==> ! c==> cMEM b0 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f3 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL
+ ((MEM d) l), ((final_list L) l) |- ((((MEM l) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) = ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l)))
T c==> cMEM f0 f1 c==> cfinal_list f2 f1 c= c\/ cMEM f1 creplace f3 cCONS cSND csplit_normal_list f2 f3 f4 f5 f6 cNIL f7 cMEM f1 cCONS cFST csplit_normal_list f2 f3 f4 f5 f6 cNIL c/\ c/\ cfinal_list f2 f1 c\/ cMEM f1 creplace f3 cCONS cSND csplit_normal_list f2 f3 f4 f5 f6 cNIL f7 cMEM f1 cCONS cFST csplit_normal_list f2 f3 f4 f5 f6 cNIL cMEM f0 f1
+ (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((final_list L) r2) |- ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))
T c==> c==> cMEM f0 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c\/ cMEM f0 f6 c/\ cMEM f1 f6 c= f0 cSND csplit_normal_list f2 f1 f3 f4 f5 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c\/ cMEM f7 f6 c/\ cMEM f1 f6 c= f7 cSND csplit_normal_list f2 f1 f3 f4 f5 c==> cMEM f8 f0 c==> cfinal_list f2 f7 c==> c= cnext_el f3 f9 f10 c==> cuniq clist_of_darts f2 c==> call / c~ c= b0 cNIL f2 c==> ! c==> cMEM b0 clist_of_darts f2 cMEM c, cSND b0 cFST b0 clist_of_darts f2 c==> cMEM f4 f3 c==> cMEM f11 f3 c==> c< cindexf f10 f4 f3 cindexf f10 f11 f3 c==> c= cfind_face f2 f4 f3 c==> cMEM cFST csplit_normal_list f2 f1 f3 f4 f5 cntrans f2 f6 f1 f9 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f2 f1 f3 f4 f5 c==> cloop_list f2 cFST csplit_normal_list f2 f1 f3 f4 f5 c==> c= f0 cFST csplit_normal_list f2 f1 f3 f4 f5 c==> c= f7 cFST csplit_normal_list f2 f1 f3 f4 f5 c==> cMEM f12 cFST csplit_normal_list f2 f1 f3 f4 f5 c? / c/\ ccontour_list f2 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f2 ccat creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f2 f1 f3 f4 f5 cNIL
+ ((!x. (((MEM x) s) ==> (a x))) = ((all a) s)) |- (((all a) s) = (!x. (((MEM x) s) ==> (a x))))
T c==> c= ! c==> cMEM b0 f0 * f1 b0 call f1 f0 c= call f1 f0 ! c==> cMEM b0 f0 * f1 b0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cFST csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> cMEM f9 f10 c==> cMEM f11 f7 c==> cMEM f10 f6 c==> cfinal_list f0 f10 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1))), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c/\ c= cfind_face f0 f4 f7 c/\ cMEM f8 f9 cMEM f10 f11 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f11 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) /\ ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))
T c==> c= cfind_face f0 f1 f2 c==> c==> cMEM f3 creplace f4 cCONS cSND csplit_normal_list f0 f4 f2 f5 f6 cNIL f7 c\/ cMEM f3 f7 c/\ cMEM f4 f7 c= f3 cSND csplit_normal_list f0 f4 f2 f5 f6 c==> c==> cMEM f8 creplace f4 cCONS cSND csplit_normal_list f0 f4 f2 f5 f6 cNIL f7 c\/ cMEM f8 f7 c/\ cMEM f4 f7 c= f8 cSND csplit_normal_list f0 f4 f2 f5 f6 c==> cMEM f9 f3 c==> cMEM f10 f8 c==> cMEM f3 cCONS cFST csplit_normal_list f0 f4 f2 f5 f6 cNIL c==> cMEM f8 cCONS cFST csplit_normal_list f0 f4 f2 f5 f6 cNIL c==> cfinal_list f0 f8 c/\ c==> cMEM f8 creplace f4 cCONS cSND csplit_normal_list f0 f4 f2 f5 f6 cNIL f7 c\/ cMEM f8 f7 c/\ cMEM f4 f7 c= f8 cSND csplit_normal_list f0 f4 f2 f5 f6 c==> c= cnext_el f2 f1 f11 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f5 f2 c==> cMEM f12 f2 c==> c< cindexf f11 f5 f2 cindexf f11 f12 f2 c==> c= cfind_face f0 f5 f2 c==> cMEM cFST csplit_normal_list f0 f4 f2 f5 f6 cntrans f0 f7 f4 f1 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f4 f2 f5 f6 c==> cloop_list f0 cFST csplit_normal_list f0 f4 f2 f5 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f4 cCONS cSND csplit_normal_list f0 f4 f2 f5 f6 cNIL f7 cCONS cFST csplit_normal_list f0 f4 f2 f5 f6 cNIL
+ (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), (x' IN (set_of_list s)), ((final_list L) r2) |- (((set_of_list s) SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f0 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 c==> cIN f7 * part cset_of_list f8 c==> cfinal_list f1 f0 c==> cSUBSET * part cset_of_list f8 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 cIN f7 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= cfind_face f0 f3 f4 c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f2 f1 c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
+ |- ((\s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s)))) s)
T * / c= cMEM f0 cfilter f1 b0 c/\ * f1 f0 cMEM f0 b0 f2
- (x' IN (set_of_list ((final_dart_list L) N))) |- ((x' IN (set_of_list ((final_dart_list L) N))) = T)
T c==> cIN f0 * part cset_of_list cfinal_dart_list f1 f2 c= cIN f0 * part cset_of_list cfinal_dart_list f1 f2 cT
+ (~ ((final_list L) r)), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r1) N) ==> (((MEM r2) N) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> c= cl'z f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cMEM f7 f2 c==> cMEM f8 f2 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- ((\p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))) p)
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 * / ! c==> c/\ c= b1 cLAST b0 c/\ cMEM b0 cparts f0 f4 c/\ cMEM f4 f1 c/\ c~ cfinal_list f0 f4 c~ cMEM b1 cs_list f0 f2 f3 cMEM ce_list b1 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 f5
- |- ((\B. (!A. ((~ (A ==> (A \/ B))) ==> F))) B)
T * / ! c==> c~ c==> b1 c\/ b1 b0 cF f0
+ (r1 = (SND (((((split_normal_list L) r) f) y) z1))) |- ((((MEM u) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = (((MEM u) r1) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c= c==> cMEM f6 cSND csplit_normal_list f1 f2 f3 f4 f5 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f6 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c==> cMEM f6 f0 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f6 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ (uniq (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM v) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- (((MEM u) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> cuniq cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c= f5 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f6 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f5 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f7 c==> cloop_list f0 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> cfinal_list f0 f5 c==> cMEM f8 cSND csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f6 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f7 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM z) f) /\ (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f2 f1 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> cMEM f4 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- (r' = s), ((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) |- (((set_of_list s) SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) = T)
T c==> c= f0 f1 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cSND csplit_normal_list f2 f3 f4 f5 f6 c= cSUBSET * part cset_of_list f1 * part cset_of_list cSND csplit_normal_list f2 f3 f4 f5 f6 cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (FST (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cFST csplit_normal_list f0 f1 f8 f5 f3 c==> c= f9 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> cMEM f10 f7 c==> cMEM f11 f9 c==> cfinal_list f0 f7 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f6 f1 f4 c/\ c~ cfinal_list f0 f1 c/\ c= cl'z f0 f6 f1 f4 f2 c/\ c= cl'y f0 f1 f4 f5 c/\ c= cprev_el f1 f2 f3 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f9 c/\ c= cSND csplit_normal_list f0 f1 f8 f5 f3 f9 c/\ c= cFST csplit_normal_list f0 f1 f8 f5 f3 f7 c/\ c= cfind_face f0 f4 f8 c/\ cMEM f11 f9 cMEM f10 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ ((MEM u) r1), ((final_list L) r2) |- (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))
T c==> cMEM f0 f1 c==> cfinal_list f2 f3 c==> cMEM f4 f5 c==> c< cindexf f6 f7 f5 cindexf f6 f4 f5 c==> c= cfind_face f2 f7 f5 c==> cMEM cFST csplit_normal_list f2 f8 f5 f7 f9 cntrans f2 f10 f8 f11 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f2 f8 f5 f7 f9 c==> cloop_list f2 cFST csplit_normal_list f2 f8 f5 f7 f9 c==> c= f1 cFST csplit_normal_list f2 f8 f5 f7 f9 c==> c= f3 cFST csplit_normal_list f2 f8 f5 f7 f9 c==> cMEM f12 cFST csplit_normal_list f2 f8 f5 f7 f9 c? / c/\ ccontour_list f2 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f0 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f2 ccat creplace f8 cCONS cSND csplit_normal_list f2 f8 f5 f7 f9 cNIL f10 cCONS cFST csplit_normal_list f2 f8 f5 f7 f9 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))), (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1))))), ((MEM u) r1), ((MEM v) r2), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c==> c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f8 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ |- ((\x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l)))))) x)
T * / ! c= cMEM b0 cflatten b1 c? / c/\ cMEM b2 b1 cMEM b0 b2 f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> cMEM f10 f6 c==> cMEM f11 f9 c==> cMEM f2 f1 c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> cMEM f7 f4 c==> cMEM f12 f4 c==> c< cindexf f5 f7 f4 cindexf f5 f12 f4 c==> c= cfind_face f0 f7 f4 c==> cMEM cSND csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> (((MEM r2) N) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f8 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f10 f9 c==> cMEM f11 f8 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ (r' = NIL)), ((HD r') = u), ((LAST r') = v), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))), ((contour_list L) r'), ((final_list L) r2) |- (!s. (((\s. (r' = s)) s) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c~ c= f0 cNIL c==> c= cHD f0 f1 c==> c= cLAST f0 f2 c==> c= f3 cFST csplit_normal_list f4 f5 f6 f7 f8 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cFST csplit_normal_list f4 f5 f6 f7 f8 c==> ccontour_list f4 f0 c==> cfinal_list f4 f3 ! c==> * / c= f0 b1 b0 c? / c/\ ccontour_list f4 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f1 c/\ c= cLAST b1 f2 cSUBSET * part cset_of_list b1 * part cset_of_list cflatten cfilter * part cfinal_list f4 ccat creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 cCONS cFST csplit_normal_list f4 f5 f6 f7 f8 cNIL
+ (r' = s), ((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) |- ((set_of_list s) SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1))))
T c==> c= f0 f1 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cSND csplit_normal_list f2 f3 f4 f5 f6 cSUBSET * part cset_of_list f1 * part cset_of_list cSND csplit_normal_list f2 f3 f4 f5 f6
- |- ((r' = s) = ((\s. (r' = s)) s))
T c= c= f0 f1 * / c= f0 b0 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (FST (((((split_normal_list L) r) f) y) z1))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (FST (((((split_normal_list L) r) f) y) z1))), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM y) f), ((MEM z) f), ((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f5 f6 c==> c= f7 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= f8 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f9 c\/ cMEM f7 f9 c/\ cMEM f1 f9 c= f7 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f9 c\/ cMEM f8 f9 c/\ cMEM f1 f9 c= f8 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c< cindexf f6 f3 f2 cindexf f6 f10 f2 c==> cMEM f11 f7 c==> cMEM f12 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f3 f2 c==> cMEM f10 f2 c==> cMEM cFST csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f9 f1 f5 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cfinal_list f0 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f9 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
- |- (((!s. ((?x. ((MEM x) s)) = (~ (s = NIL)))) ==> ((\s. ((?x. ((MEM x) s)) = (~ (s = NIL)))) s)) = ((\s. ((?x. ((MEM x) s)) = (~ (s = NIL)))) s))
T c= c==> ! c= c? / cMEM b1 b0 c~ c= b0 cNIL * / c= c? / cMEM b1 b0 c~ c= b0 cNIL f0 * / c= c? / cMEM b1 b0 c~ c= b0 cNIL f0
- (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c==> c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f6 f1 c/\ cMEM f2 f1 c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> cMEM f10 f6 c==> cMEM f11 f9 c==> cMEM f6 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> cfinal_list f0 f9 c/\ cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f7 f4 c==> cMEM f12 f4 c==> c< cindexf f5 f7 f4 cindexf f5 f12 f4 c==> c= cfind_face f0 f7 f4 c==> cMEM cFST csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
+ (~ ((final_list L) r)) |- (((\d. (x' = d)) d) ==> ((x' IN (set_of_list ((final_dart_list L) N))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c==> c~ cfinal_list f0 f1 c==> * / c= f2 b0 f3 c==> cIN f2 * part cset_of_list cfinal_dart_list f0 f4 cIN f2 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f5 f6 f7 cNIL f4 cCONS cFST csplit_normal_list f0 f1 f5 f6 f7 cNIL
+ |- (((!f. (((POWER f) (NUMERAL _0)) = I)) ==> ((\f. (((POWER f) (NUMERAL _0)) = I)) f)) = ((\f. (((POWER f) (NUMERAL _0)) = I)) f))
T c= c==> ! c= * * part cPOWER b0 cNUMERAL c_0 part cI * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0 * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0
+ |- ((\x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) x)
T * / ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 f0
- ((MEM u) r1), ((MEM v) r2), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- (((MEM u) r1) /\ (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))
T c==> cMEM f0 f1 c==> cMEM f2 f3 c==> cMEM f3 creplace f4 cCONS cSND csplit_normal_list f5 f4 f6 f7 f8 cNIL f9 c==> cfinal_list f5 f3 c/\ cMEM f0 f1 c==> cMEM f4 f9 c==> c= f1 cSND csplit_normal_list f5 f4 f6 f7 f8 c==> c= f3 cSND csplit_normal_list f5 f4 f6 f7 f8 c==> c= cnext_el f6 f10 f11 c==> cuniq clist_of_darts f5 c==> call / c~ c= b0 cNIL f5 c==> ! c==> cMEM b0 clist_of_darts f5 cMEM c, cSND b0 cFST b0 clist_of_darts f5 c==> cMEM f7 f6 c==> cMEM f12 f6 c==> c< cindexf f11 f7 f6 cindexf f11 f12 f6 c==> c= cfind_face f5 f7 f6 c==> cMEM cSND csplit_normal_list f5 f4 f6 f7 f8 cntrans f5 f9 f4 f10 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f5 f4 f6 f7 f8 c==> cloop_list f5 cSND csplit_normal_list f5 f4 f6 f7 f8 c? / c/\ ccontour_list f5 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f0 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f5 ccat creplace f4 cCONS cSND csplit_normal_list f5 f4 f6 f7 f8 cNIL f9 cCONS cFST csplit_normal_list f5 f4 f6 f7 f8 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c= f8 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c= cfind_face f0 f6 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f9 f1 c==> cMEM f10 f4 c==> cMEM f11 f8 c==> cMEM f6 f1 c==> cMEM f9 f1 c==> cMEM f5 f12 c==> cMEM f8 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f12 c==> cMEM cSND csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f12 f5 f2 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f8 c/\ cMEM cSND csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f12 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cSND csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f12 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
+ |- ((\i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))) i)
T * / c= crtrans f0 f1 f2 f3 b0 cSND cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4
+ (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- (((!x. (((\d. (x' = d)) x) ==> ((x' IN (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))) ==> ((?d. (x' = d)) ==> ((x' IN (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))) = ((?d. (x' = d)) ==> ((x' IN (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f0 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 c==> cfinal_list f1 f0 c= c==> ! c==> * / c= f7 b1 b0 c==> cIN f7 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 cIN f7 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c==> c? / c= f7 b0 c==> cIN f7 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 cIN f7 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c==> c? / c= f7 b0 c==> cIN f7 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 cIN f7 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ |- (((!L. (!N. (!r. (!x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))))))))) ==> ((\L. (!N. (!r. (!x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))))))))) L))
T c= c==> ! ! ! ! c= cs_flag_list b0 b1 b2 b3 c/\ ! ! c==> c/\ cMEM b4 cfinal_dart_list b0 b1 cMEM b5 cfinal_dart_list b0 b1 c? / c/\ ccontour_list b0 b6 c/\ c~ c= b6 cNIL c/\ c= cHD b6 b4 c/\ c= cLAST b6 b5 cSUBSET * part cset_of_list b6 * part cset_of_list cfinal_dart_list b0 b1 ! ! ! c==> c/\ c= b6 cLAST b5 c/\ cMEM b5 cparts b0 b4 c/\ cMEM b4 b1 c/\ c~ cfinal_list b0 b4 c~ cMEM b6 cs_list b0 b2 b3 cMEM ce_list b6 ccat cs_list b0 b2 b3 cfinal_dart_list b0 b1 * / ! ! ! c= cs_flag_list b0 b1 b2 b3 c/\ ! ! c==> c/\ cMEM b4 cfinal_dart_list b0 b1 cMEM b5 cfinal_dart_list b0 b1 c? / c/\ ccontour_list b0 b6 c/\ c~ c= b6 cNIL c/\ c= cHD b6 b4 c/\ c= cLAST b6 b5 cSUBSET * part cset_of_list b6 * part cset_of_list cfinal_dart_list b0 b1 ! ! ! c==> c/\ c= b6 cLAST b5 c/\ cMEM b5 cparts b0 b4 c/\ cMEM b4 b1 c/\ c~ cfinal_list b0 b4 c~ cMEM b6 cs_list b0 b2 b3 cMEM ce_list b6 ccat cs_list b0 b2 b3 cfinal_dart_list b0 b1 f0 * / ! ! ! c= cs_flag_list b0 b1 b2 b3 c/\ ! ! c==> c/\ cMEM b4 cfinal_dart_list b0 b1 cMEM b5 cfinal_dart_list b0 b1 c? / c/\ ccontour_list b0 b6 c/\ c~ c= b6 cNIL c/\ c= cHD b6 b4 c/\ c= cLAST b6 b5 cSUBSET * part cset_of_list b6 * part cset_of_list cfinal_dart_list b0 b1 ! ! ! c==> c/\ c= b6 cLAST b5 c/\ cMEM b5 cparts b0 b4 c/\ cMEM b4 b1 c/\ c~ cfinal_list b0 b4 c~ cMEM b6 cs_list b0 b2 b3 cMEM ce_list b6 ccat cs_list b0 b2 b3 cfinal_dart_list b0 b1 f0
+ (!x. ((x IN (set_of_list s)) ==> (x IN (set_of_list ((final_dart_list L) N))))) |- ((\x. ((x IN (set_of_list s)) ==> (x IN (set_of_list ((final_dart_list L) N))))) x')
T c==> ! c==> cIN b0 * part cset_of_list f0 cIN b0 * part cset_of_list cfinal_dart_list f1 f2 * / c==> cIN b0 * part cset_of_list f0 cIN b0 * part cset_of_list cfinal_dart_list f1 f2 f3
+ ((MEM v) r2), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- (((MEM v) r2) /\ (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))))
T c==> cMEM f0 f1 c==> cMEM f1 cCONS cFST csplit_normal_list f2 f3 f4 f5 f6 cNIL c==> cfinal_list f2 f1 c/\ cMEM f0 f1 c==> cMEM f7 f8 c==> c==> cMEM f8 creplace f3 cCONS cSND csplit_normal_list f2 f3 f4 f5 f6 cNIL f9 c\/ cMEM f8 f9 c/\ cMEM f3 f9 c= f8 cSND csplit_normal_list f2 f3 f4 f5 f6 c==> c==> cMEM f1 creplace f3 cCONS cSND csplit_normal_list f2 f3 f4 f5 f6 cNIL f9 c\/ cMEM f1 f9 c/\ cMEM f3 f9 c= f1 cSND csplit_normal_list f2 f3 f4 f5 f6 c==> c= cnext_el f4 f10 f11 c==> cuniq clist_of_darts f2 c==> call / c~ c= b0 cNIL f2 c==> ! c==> cMEM b0 clist_of_darts f2 cMEM c, cSND b0 cFST b0 clist_of_darts f2 c==> cMEM f5 f4 c==> cMEM f12 f4 c==> c< cindexf f11 f5 f4 cindexf f11 f12 f4 c==> c= cfind_face f2 f5 f4 c==> cMEM cFST csplit_normal_list f2 f3 f4 f5 f6 cntrans f2 f9 f3 f10 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f2 f3 f4 f5 f6 c==> cloop_list f2 cFST csplit_normal_list f2 f3 f4 f5 f6 c==> c= f8 cFST csplit_normal_list f2 f3 f4 f5 f6 c? / c/\ ccontour_list f2 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f0 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f2 ccat creplace f3 cCONS cSND csplit_normal_list f2 f3 f4 f5 f6 cNIL f9 cCONS cFST csplit_normal_list f2 f3 f4 f5 f6 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> cMEM f9 f7 c==> cMEM f10 f11 c==> cMEM f1 f6 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> cfinal_list f0 f7 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ ((MEM r2) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> cMEM f9 f7 c==> cMEM f10 f11 c==> cMEM f1 f6 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> cfinal_list f0 f7 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c\/ cMEM f11 f6 c/\ cMEM f1 f6 cMEM f11 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) g)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 * / c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 f3
+ |- (((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))) ==> ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))) x)) = ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))) x))
T c= c==> ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 b0 f3 c/\ c= cl'y f0 f2 b0 f4 c/\ c= cprev_el f2 f3 f5 c/\ cfinal_list f0 f6 c/\ cfinal_list f0 f7 c/\ cMEM f6 f1 c/\ c= cFST csplit_normal_list f0 f2 f8 f4 f5 f7 c/\ c= cfind_face f0 b0 f8 c/\ cMEM f9 f7 cMEM f10 f6 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f10 c/\ c= cLAST b1 f9 cSUBSET * part cset_of_list b1 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f4 f5 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f8 f4 f5 cNIL * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 b0 f3 c/\ c= cl'y f0 f2 b0 f4 c/\ c= cprev_el f2 f3 f5 c/\ cfinal_list f0 f6 c/\ cfinal_list f0 f7 c/\ cMEM f6 f1 c/\ c= cFST csplit_normal_list f0 f2 f8 f4 f5 f7 c/\ c= cfind_face f0 b0 f8 c/\ cMEM f9 f7 cMEM f10 f6 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f10 c/\ c= cLAST b1 f9 cSUBSET * part cset_of_list b1 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f4 f5 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f8 f4 f5 cNIL f11 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 b0 f3 c/\ c= cl'y f0 f2 b0 f4 c/\ c= cprev_el f2 f3 f5 c/\ cfinal_list f0 f6 c/\ cfinal_list f0 f7 c/\ cMEM f6 f1 c/\ c= cFST csplit_normal_list f0 f2 f8 f4 f5 f7 c/\ c= cfind_face f0 b0 f8 c/\ cMEM f9 f7 cMEM f10 f6 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f10 c/\ c= cLAST b1 f9 cSUBSET * part cset_of_list b1 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f4 f5 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f8 f4 f5 cNIL f11
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1))))), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c/\ c\/ cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cMEM f7 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c/\ c\/ cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cMEM f9 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c/\ c= cfind_face f0 f4 f8 c/\ cMEM f10 f9 cMEM f11 f7 c==> c\/ cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cMEM f7 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> cfinal_list f0 f7 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ |- (((!x. (!f. (!xs. (!g. (((MEM x) (((replace f) xs) g)) ==> (((MEM x) g) \/ (((MEM f) g) /\ ((MEM x) xs)))))))) ==> ((\x. (!f. (!xs. (!g. (((MEM x) (((replace f) xs) g)) ==> (((MEM x) g) \/ (((MEM f) g) /\ ((MEM x) xs)))))))) r2)) = ((\x. (!f. (!xs. (!g. (((MEM x) (((replace f) xs) g)) ==> (((MEM x) g) \/ (((MEM f) g) /\ ((MEM x) xs)))))))) r2))
T c= c==> ! ! ! ! c==> cMEM b0 creplace b1 b2 b3 c\/ cMEM b0 b3 c/\ cMEM b1 b3 cMEM b0 b2 * / ! ! ! c==> cMEM b0 creplace b1 b2 b3 c\/ cMEM b0 b3 c/\ cMEM b1 b3 cMEM b0 b2 f0 * / ! ! ! c==> cMEM b0 creplace b1 b2 b3 c\/ cMEM b0 b3 c/\ cMEM b1 b3 cMEM b0 b2 f0
+ ((MEM u) r1), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))
T c==> cMEM f0 f1 c==> cMEM f2 creplace f3 cCONS cSND csplit_normal_list f4 f3 f5 f6 f7 cNIL f8 c==> cfinal_list f4 f2 c==> c= f1 cSND csplit_normal_list f4 f3 f5 f6 f7 c==> c= f2 cSND csplit_normal_list f4 f3 f5 f6 f7 c==> c= cnext_el f5 f9 f10 c==> cuniq clist_of_darts f4 c==> call / c~ c= b0 cNIL f4 c==> ! c==> cMEM b0 clist_of_darts f4 cMEM c, cSND b0 cFST b0 clist_of_darts f4 c==> cMEM f6 f5 c==> cMEM f11 f5 c==> c< cindexf f10 f6 f5 cindexf f10 f11 f5 c==> c= cfind_face f4 f6 f5 c==> cMEM cSND csplit_normal_list f4 f3 f5 f6 f7 cntrans f4 f8 f3 f9 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f4 f3 f5 f6 f7 c==> cloop_list f4 cSND csplit_normal_list f4 f3 f5 f6 f7 c==> cMEM f12 cSND csplit_normal_list f4 f3 f5 f6 f7 c? / c/\ ccontour_list f4 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f0 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f4 ccat creplace f3 cCONS cSND csplit_normal_list f4 f3 f5 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f4 f3 f5 f6 f7 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM v) r2) /\ (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f8 f9 c==> cMEM f11 f10 c==> c==> cMEM f10 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f10 f6 c/\ cMEM f1 f6 c= f10 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f9 f6 c/\ cMEM f1 f6 c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f7 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- |- ((((next_el f) x) = w) ==> (?w. (((next_el f) x) = w)))
T c==> c= cnext_el f0 f1 f2 c? / c= cnext_el f0 f1 b0
+ (uniq (FST (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f5 f6 c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cfinal_list f0 f7 c==> c= f6 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= f7 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f8 cFST csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f5 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f9 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
+ |- (((((uniq (SND (((((split_normal_list L) r) f) y) z1))) /\ (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) /\ (((MEM u) (SND (((((split_normal_list L) r) f) y) z1))) /\ ((MEM v) (SND (((((split_normal_list L) r) f) y) z1)))))) ==> (?r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL)))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c= c==> c==> c/\ cuniq cSND csplit_normal_list f0 f1 f2 f3 f4 c/\ cloop_list f0 cSND csplit_normal_list f0 f1 f2 f3 f4 c/\ cMEM f5 cSND csplit_normal_list f0 f1 f2 f3 f4 cMEM f6 cSND csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c= cHD b0 f5 c/\ c= cLAST b0 f6 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list cSND csplit_normal_list f0 f1 f2 f3 f4 c~ c= b0 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f5 c/\ c= cLAST b0 f6 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f7 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f5 c/\ c= cLAST b0 f6 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f7 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
+ ((MEM v) r2), ((MEM r2) N), ((final_list L) r2) |- (T = ((((final_list L) r2) /\ ((MEM r2) N)) /\ ((MEM v) r2)))
T c==> cMEM f0 f1 c==> cMEM f1 f2 c==> cfinal_list f3 f1 c= cT c/\ c/\ cfinal_list f3 f1 cMEM f1 f2 cMEM f0 f1
+ (~ ((final_list L) r)), (l = r), ((final_list L) l) |- F
T c==> c~ cfinal_list f0 f1 c==> c= f2 f1 c==> cfinal_list f0 f2 cF
+ (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c= f6 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f7 f0 c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 c==> cfinal_list f1 f6 c==> cMEM f4 f3 c==> cMEM f9 f3 c==> c< cindexf f10 f4 f3 cindexf f10 f9 f3 c==> c= cfind_face f1 f4 f3 c==> cMEM cSND csplit_normal_list f1 f2 f3 f4 f5 cntrans f1 f8 f2 f11 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cloop_list f1 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f12 cSND csplit_normal_list f1 f2 f3 f4 f5 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ (~ ((final_list L) r)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r1) N) ==> (((MEM r2) N) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c==> c= cfind_face f0 f4 f8 c==> cMEM f10 f9 c==> cMEM f11 f7 c==> cMEM f7 f6 c==> cMEM f9 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((good_list L) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= cfind_face f0 f3 f4 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f2 f1 c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c==> cgood_list f0 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM u) r1) /\ ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f8 f9 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f9 f6 c/\ cMEM f1 f6 c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f11 f6 c/\ cMEM f1 f6 c= f11 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f7 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM v) r2), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM u) r1) ==> (((MEM r1) N) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f10 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f11 f10 c==> cMEM f10 f6 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f9 f6 c/\ cMEM f1 f6 c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f4 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- ((MEM u) r1), ((MEM v) r2), ((final_list L) r2) |- (((MEM u) r1) /\ ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))))
T c==> cMEM f0 f1 c==> cMEM f2 f3 c==> cfinal_list f4 f3 c/\ cMEM f0 f1 c==> c==> cMEM f1 creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 c\/ cMEM f1 f9 c/\ cMEM f5 f9 c= f1 cSND csplit_normal_list f4 f5 f6 f7 f8 c==> c==> cMEM f3 creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 c\/ cMEM f3 f9 c/\ cMEM f5 f9 c= f3 cSND csplit_normal_list f4 f5 f6 f7 f8 c==> c= cnext_el f6 f10 f11 c==> cuniq clist_of_darts f4 c==> call / c~ c= b0 cNIL f4 c==> ! c==> cMEM b0 clist_of_darts f4 cMEM c, cSND b0 cFST b0 clist_of_darts f4 c==> cMEM f7 f6 c==> cMEM f12 f6 c==> c< cindexf f11 f7 f6 cindexf f11 f12 f6 c==> c= cfind_face f4 f7 f6 c==> cMEM cFST csplit_normal_list f4 f5 f6 f7 f8 cntrans f4 f9 f5 f10 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f4 f5 f6 f7 f8 c==> cloop_list f4 cFST csplit_normal_list f4 f5 f6 f7 f8 c==> c= f1 cFST csplit_normal_list f4 f5 f6 f7 f8 c==> c= f3 cFST csplit_normal_list f4 f5 f6 f7 f8 c? / c/\ ccontour_list f4 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f0 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f4 ccat creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 cCONS cFST csplit_normal_list f4 f5 f6 f7 f8 cNIL
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- (((!r2'. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r2') /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2') /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r2')))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))) ==> ((\r2'. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r2') /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2') /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r2')))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))) r1)) = ((\r2'. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r2') /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2') /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r2')))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))) r1))
T c= c==> ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c~ cfinal_list b6 b8 c/\ c= cl'z b6 b7 b8 b9 f0 c/\ c= cl'y b6 b8 b9 b4 c/\ c= cprev_el b8 f0 b5 c/\ cfinal_list b6 f1 c/\ cfinal_list b6 b0 c/\ c= cSND csplit_normal_list b6 b8 b3 b4 b5 b0 c/\ c= cFST csplit_normal_list b6 b8 b3 b4 b5 f1 c/\ c= cfind_face b6 b9 b3 c/\ cMEM b2 f1 cMEM b1 b0 c? / c/\ ccontour_list b6 b10 c/\ c~ c= b10 cNIL c/\ c= cHD b10 b1 c/\ c= cLAST b10 b2 cSUBSET * part cset_of_list b10 * part cset_of_list cflatten cfilter * part cfinal_list b6 ccat creplace b8 cCONS cSND csplit_normal_list b6 b8 b3 b4 b5 cNIL b7 cCONS cFST csplit_normal_list b6 b8 b3 b4 b5 cNIL * / ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c~ cfinal_list b6 b8 c/\ c= cl'z b6 b7 b8 b9 f0 c/\ c= cl'y b6 b8 b9 b4 c/\ c= cprev_el b8 f0 b5 c/\ cfinal_list b6 f1 c/\ cfinal_list b6 b0 c/\ c= cSND csplit_normal_list b6 b8 b3 b4 b5 b0 c/\ c= cFST csplit_normal_list b6 b8 b3 b4 b5 f1 c/\ c= cfind_face b6 b9 b3 c/\ cMEM b2 f1 cMEM b1 b0 c? / c/\ ccontour_list b6 b10 c/\ c~ c= b10 cNIL c/\ c= cHD b10 b1 c/\ c= cLAST b10 b2 cSUBSET * part cset_of_list b10 * part cset_of_list cflatten cfilter * part cfinal_list b6 ccat creplace b8 cCONS cSND csplit_normal_list b6 b8 b3 b4 b5 cNIL b7 cCONS cFST csplit_normal_list b6 b8 b3 b4 b5 cNIL f2 * / ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c~ cfinal_list b6 b8 c/\ c= cl'z b6 b7 b8 b9 f0 c/\ c= cl'y b6 b8 b9 b4 c/\ c= cprev_el b8 f0 b5 c/\ cfinal_list b6 f1 c/\ cfinal_list b6 b0 c/\ c= cSND csplit_normal_list b6 b8 b3 b4 b5 b0 c/\ c= cFST csplit_normal_list b6 b8 b3 b4 b5 f1 c/\ c= cfind_face b6 b9 b3 c/\ cMEM b2 f1 cMEM b1 b0 c? / c/\ ccontour_list b6 b10 c/\ c~ c= b10 cNIL c/\ c= cHD b10 b1 c/\ c= cLAST b10 b2 cSUBSET * part cset_of_list b10 * part cset_of_list cflatten cfilter * part cfinal_list b6 ccat creplace b8 cCONS cSND csplit_normal_list b6 b8 b3 b4 b5 cNIL b7 cCONS cFST csplit_normal_list b6 b8 b3 b4 b5 cNIL f2
- |- (((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) ==> ((\x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) x)) = ((\x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) x))
T c= c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 * / ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 f0 * / ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 f0
- (~ (A ==> (B \/ A))) |- F
T c==> c~ c==> f0 c\/ f1 f0 cF
- |- ((!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c~ cfinal_list b6 b8 c/\ c= cl'z b6 b7 b8 b9 f0 c/\ c= cl'y b6 b8 b9 b4 c/\ c= cprev_el b8 f0 b5 c/\ cfinal_list b6 b0 c/\ cfinal_list b6 f1 c/\ cMEM f1 b7 c/\ c= cFST csplit_normal_list b6 b8 b3 b4 b5 b0 c/\ c= cfind_face b6 b9 b3 c/\ cMEM b2 f1 cMEM b1 b0 c? / c/\ ccontour_list b6 b10 c/\ c~ c= b10 cNIL c/\ c= cHD b10 b1 c/\ c= cLAST b10 b2 cSUBSET * part cset_of_list b10 * part cset_of_list cflatten cfilter * part cfinal_list b6 ccat creplace b8 cCONS cSND csplit_normal_list b6 b8 b3 b4 b5 cNIL b7 cCONS cFST csplit_normal_list b6 b8 b3 b4 b5 cNIL cT
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- (((!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))) ==> ((\p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))) p)) = ((\p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))) p))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c= c==> ! ! c==> c/\ c= b1 cLAST b0 c/\ cMEM b0 cparts f0 f4 c/\ cMEM f4 f1 c/\ c~ cfinal_list f0 f4 c~ cMEM b1 cs_list f0 f2 f3 cMEM ce_list b1 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 * / ! c==> c/\ c= b1 cLAST b0 c/\ cMEM b0 cparts f0 f4 c/\ cMEM f4 f1 c/\ c~ cfinal_list f0 f4 c~ cMEM b1 cs_list f0 f2 f3 cMEM ce_list b1 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 f5 * / ! c==> c/\ c= b1 cLAST b0 c/\ cMEM b0 cparts f0 f4 c/\ cMEM f4 f1 c/\ c~ cfinal_list f0 f4 c~ cMEM b1 cs_list f0 f2 f3 cMEM ce_list b1 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 f5
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f4 f1 c==> c==> cMEM f5 creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 c\/ cMEM f5 f8 c/\ cMEM f6 f8 c= f5 cSND csplit_normal_list f0 f6 f1 f4 f7 c==> c==> cMEM f9 creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f6 f8 c= f9 cSND csplit_normal_list f0 f6 f1 f4 f7 c==> c< cindexf f3 f4 f1 cindexf f3 f10 f1 c==> cMEM f11 f5 c==> cMEM f12 f9 c==> cMEM f4 f1 c==> cMEM f10 f1 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f6 f1 f4 f7 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> cMEM cFST csplit_normal_list f0 f6 f1 f4 f7 cntrans f0 f8 f6 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f6 f1 f4 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f6 f1 f4 f7 c==> c= f5 cFST csplit_normal_list f0 f6 f1 f4 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f6 f1 f4 f7 cNIL
- (uniq (list_of_darts L)), (((next_el f) x) = w), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f4 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f9 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- |- (((!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))) ==> ((\v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))) v)) = ((\v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))) v))
T c= c==> ! ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ cfinal_list b4 f1 c/\ cfinal_list b4 f2 c/\ cMEM f1 b5 c/\ c= cFST csplit_normal_list b4 b6 b1 b2 b3 f2 c/\ c= cfind_face b4 b7 b1 c/\ cMEM b0 f2 cMEM f3 f1 c? / c/\ ccontour_list b4 b8 c/\ c~ c= b8 cNIL c/\ c= cHD b8 f3 c/\ c= cLAST b8 b0 cSUBSET * part cset_of_list b8 * part cset_of_list cflatten cfilter * part cfinal_list b4 ccat creplace b6 cCONS cSND csplit_normal_list b4 b6 b1 b2 b3 cNIL b5 cCONS cFST csplit_normal_list b4 b6 b1 b2 b3 cNIL * / ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ cfinal_list b4 f1 c/\ cfinal_list b4 f2 c/\ cMEM f1 b5 c/\ c= cFST csplit_normal_list b4 b6 b1 b2 b3 f2 c/\ c= cfind_face b4 b7 b1 c/\ cMEM b0 f2 cMEM f3 f1 c? / c/\ ccontour_list b4 b8 c/\ c~ c= b8 cNIL c/\ c= cHD b8 f3 c/\ c= cLAST b8 b0 cSUBSET * part cset_of_list b8 * part cset_of_list cflatten cfilter * part cfinal_list b4 ccat creplace b6 cCONS cSND csplit_normal_list b4 b6 b1 b2 b3 cNIL b5 cCONS cFST csplit_normal_list b4 b6 b1 b2 b3 cNIL f4 * / ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ cfinal_list b4 f1 c/\ cfinal_list b4 f2 c/\ cMEM f1 b5 c/\ c= cFST csplit_normal_list b4 b6 b1 b2 b3 f2 c/\ c= cfind_face b4 b7 b1 c/\ cMEM b0 f2 cMEM f3 f1 c? / c/\ ccontour_list b4 b8 c/\ c~ c= b8 cNIL c/\ c= cHD b8 f3 c/\ c= cLAST b8 b0 cSUBSET * part cset_of_list b8 * part cset_of_list cflatten cfilter * part cfinal_list b4 ccat creplace b6 cCONS cSND csplit_normal_list b4 b6 b1 b2 b3 cNIL b5 cCONS cFST csplit_normal_list b4 b6 b1 b2 b3 cNIL f4
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r1) N) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f9 f6 c==> c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f11 f6 c/\ cMEM f1 f6 c= f11 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (uniq (list_of_darts L)), (((next_el f) x) = w), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> cfinal_list f0 f9 c/\ cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f4 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f))), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cfind_face f0 f3 f4 c==> c/\ cMEM f6 f4 c< cindexf f5 f8 f4 cindexf f5 f6 f4 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f10 f1 c/\ cMEM f2 f1 c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f8 f4 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> cMEM f10 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) N), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f9 f6 c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ |- ((\g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))) g)
T * / c==> c/\ c~ c= f0 f1 cMEM f0 b0 cMEM f0 creplace f1 f2 b0 f3
+ (~ ((final_list L) r)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r1) N) ==> (((MEM r2) N) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cfinal_list f0 f2 c==> cfinal_list f0 f3 c==> cmarked_list f0 f4 f1 f5 c==> c= cfind_face f0 f5 f6 c==> cMEM f7 f3 c==> cMEM f8 f2 c==> cMEM f2 f4 c==> cMEM f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f6 f9 f10 cNIL f4 cCONS cFST csplit_normal_list f0 f1 f6 f9 f10 cNIL
+ |- ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) N)
T * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cSND csplit_normal_list f0 b1 cfind_face f0 cl'y f0 b1 b2 cl'y f0 b1 b2 cprev_el b1 cl'z f0 b0 b1 b2 cntrans f0 b0 b1 b2 cNUMERAL cBIT1 c_0 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c==> c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f11 f6 c/\ cMEM f1 f6 c= f11 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f11 c==> cMEM f10 f8 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f11 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ |- ((((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l)))) = ((d IN (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) ==> (d IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c= c==> cMEM f0 cFST csplit_normal_list f1 f2 f3 f4 f5 c? / c/\ c/\ cfinal_list f1 b0 c\/ cMEM b0 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 cMEM b0 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL cMEM f0 b0 c==> cIN f0 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5 cIN f0 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ |- (((!s. (((uniq s) /\ (((loop_list L) s) /\ (((MEM u) s) /\ ((MEM v) s)))) ==> (?r. (((contour_list L) r) /\ (((HD r) = u) /\ (((LAST r) = v) /\ (((set_of_list r) SUBSET (set_of_list s)) /\ (~ (r = NIL))))))))) ==> ((\s. (((uniq s) /\ (((loop_list L) s) /\ (((MEM u) s) /\ ((MEM v) s)))) ==> (?r. (((contour_list L) r) /\ (((HD r) = u) /\ (((LAST r) = v) /\ (((set_of_list r) SUBSET (set_of_list s)) /\ (~ (r = NIL))))))))) (FST (((((split_normal_list L) r) f) y) z1)))) = ((\s. (((uniq s) /\ (((loop_list L) s) /\ (((MEM u) s) /\ ((MEM v) s)))) ==> (?r. (((contour_list L) r) /\ (((HD r) = u) /\ (((LAST r) = v) /\ (((set_of_list r) SUBSET (set_of_list s)) /\ (~ (r = NIL))))))))) (FST (((((split_normal_list L) r) f) y) z1))))
T c= c==> ! c==> c/\ cuniq b0 c/\ cloop_list f0 b0 c/\ cMEM f1 b0 cMEM f2 b0 c? / c/\ ccontour_list f0 b1 c/\ c= cHD b1 f1 c/\ c= cLAST b1 f2 c/\ cSUBSET * part cset_of_list b1 * part cset_of_list b0 c~ c= b1 cNIL * / c==> c/\ cuniq b0 c/\ cloop_list f0 b0 c/\ cMEM f1 b0 cMEM f2 b0 c? / c/\ ccontour_list f0 b1 c/\ c= cHD b1 f1 c/\ c= cLAST b1 f2 c/\ cSUBSET * part cset_of_list b1 * part cset_of_list b0 c~ c= b1 cNIL cFST csplit_normal_list f0 f3 f4 f5 f6 * / c==> c/\ cuniq b0 c/\ cloop_list f0 b0 c/\ cMEM f1 b0 cMEM f2 b0 c? / c/\ ccontour_list f0 b1 c/\ c= cHD b1 f1 c/\ c= cLAST b1 f2 c/\ cSUBSET * part cset_of_list b1 * part cset_of_list b0 c~ c= b1 cNIL cFST csplit_normal_list f0 f3 f4 f5 f6
+ (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- ((\l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l))) r2)
T c==> c= f0 cFST csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f6 cFST csplit_normal_list f1 f2 f3 f4 f5 c==> cfinal_list f1 f0 * / c/\ c/\ cfinal_list f1 b0 c\/ cMEM b0 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f7 cMEM b0 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL cMEM f6 b0 f0
+ (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- (((\d. (x' = d)) d) ==> ((x' IN (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c==> c= f0 cFST csplit_normal_list f1 f2 f3 f4 f5 c==> cfinal_list f1 f0 c==> * / c= f6 b0 f7 c==> cIN f6 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5 cIN f6 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= cfind_face f0 f3 f4 c==> c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f2 f1 c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= f9 cFST csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> cMEM f10 f7 c==> cMEM f11 f9 c==> cfinal_list f0 f7 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c/\ c= f9 cFST csplit_normal_list f0 f1 f8 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ (~ ((final_list L) r)), ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))))))))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) N), ((MEM r2) N), ((final_list L) r1), ((final_list L) r2) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))))))))))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c/\ ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f2 cMEM b1 cfinal_dart_list f0 f2 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f2 ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f2 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f3 cMEM ce_list b2 ccat cs_list f0 f1 f3 cfinal_dart_list f0 f2 c==> cMEM f4 f5 c==> cMEM f6 f7 c==> cMEM f5 f2 c==> cMEM f7 f2 c==> cfinal_list f0 f5 c==> cfinal_list f0 f7 c/\ c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c/\ ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f2 cMEM b1 cfinal_dart_list f0 f2 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f2 ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f2 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f3 cMEM ce_list b2 ccat cs_list f0 f1 f3 cfinal_dart_list f0 f2 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f4 c/\ c= cLAST b0 f6 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f9 f10 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f8 f9 f10 cNIL
+ (~ (r' = NIL)), ((HD r') = u), ((LAST r') = v), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))), ((contour_list L) r'), ((final_list L) r2) |- (((\s. (r' = s)) s) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ c= f0 cNIL c==> c= cHD f0 f1 c==> c= cLAST f0 f2 c==> c= f3 cSND csplit_normal_list f4 f5 f6 f7 f8 c==> cMEM f3 creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cSND csplit_normal_list f4 f5 f6 f7 f8 c==> ccontour_list f4 f0 c==> cfinal_list f4 f3 c==> * / c= f0 b0 f10 c? / c/\ ccontour_list f4 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f4 ccat creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 cCONS cFST csplit_normal_list f4 f5 f6 f7 f8 cNIL
+ |- ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))))) N)
T * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cuniq cFST csplit_normal_list f0 b1 cfind_face f0 cl'y f0 b1 b2 cl'y f0 b1 b2 cprev_el b1 cl'z f0 b0 b1 b2 f1
+ ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) |- (((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) = T)
T c==> cMEM f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c= cMEM f0 cSND csplit_normal_list f1 f2 f3 f4 f5 cT
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM y) f) /\ (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f)))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= cfind_face f0 f3 f4 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f2 f1 c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c==> c/\ cMEM f8 f4 c/\ cMEM f6 f4 c< cindexf f5 f8 f4 cindexf f5 f6 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
+ (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- ((?d. (x' = d)) ==> ((x' IN (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c==> c= f0 cFST csplit_normal_list f1 f2 f3 f4 f5 c==> cfinal_list f1 f0 c==> c? / c= f6 b0 c==> cIN f6 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5 cIN f6 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f7 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))) = T)
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c= ! c==> c/\ c~ c= f0 f1 cMEM f0 b0 cMEM f0 creplace f1 f2 b0 cT
+ |- (((!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))) ==> ((\xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))) xs)) = ((\xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))) xs))
T c= c==> ! ! c==> c/\ c~ c= f0 f1 cMEM f0 b1 cMEM f0 creplace f1 b0 b1 * / ! c==> c/\ c~ c= f0 f1 cMEM f0 b1 cMEM f0 creplace f1 b0 b1 f2 * / ! c==> c/\ c~ c= f0 f1 cMEM f0 b1 cMEM f0 creplace f1 b0 b1 f2
- A, (A ==> (A \/ B)) |- (A /\ (A \/ B))
T c==> f0 c==> c==> f0 c\/ f0 f1 c/\ f0 c\/ f0 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((((find_face L) y) = f) /\ (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f2 f1 c==> c= cfind_face f0 f4 f1 c==> c==> cMEM f5 creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 c\/ cMEM f5 f8 c/\ cMEM f6 f8 c= f5 cSND csplit_normal_list f0 f6 f1 f4 f7 c==> c==> cMEM f9 creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f6 f8 c= f9 cSND csplit_normal_list f0 f6 f1 f4 f7 c==> c< cindexf f3 f4 f1 cindexf f3 f10 f1 c==> cMEM f11 f5 c==> cMEM f12 f9 c==> cMEM f4 f1 c==> cMEM f10 f1 c==> cMEM f5 cCONS cFST csplit_normal_list f0 f6 f1 f4 f7 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f6 f1 f4 f7 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ c= cfind_face f0 f4 f1 c==> cMEM cFST csplit_normal_list f0 f6 f1 f4 f7 cntrans f0 f8 f6 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f6 f1 f4 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f6 f1 f4 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f6 f1 f4 f7 cNIL
+ |- (((!L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))))) ==> ((\L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))))) L)) = ((\L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))))) L))
T c= c==> ! ! ! ! ! c= crtrans b0 b1 b2 b3 b4 cSND cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 * / ! ! ! ! c= crtrans b0 b1 b2 b3 b4 cSND cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0 * / ! ! ! ! c= crtrans b0 b1 b2 b3 b4 cSND cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
+ (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- ((x' IN (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> c= f0 cFST csplit_normal_list f1 f2 f3 f4 f5 c==> cfinal_list f1 f0 c==> cIN f6 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5 cIN f6 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f7 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ (r1 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f6 f0 c==> cMEM f2 f7 c==> cMEM f8 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f7 c==> cfinal_list f1 f8 c==> c= f8 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c= cnext_el f3 f9 f10 c==> cuniq clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cMEM f4 f3 c==> cMEM f11 f3 c==> c< cindexf f10 f4 f3 cindexf f10 f11 f3 c==> c= cfind_face f1 f4 f3 c==> cMEM cSND csplit_normal_list f1 f2 f3 f4 f5 cntrans f1 f7 f2 f9 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cloop_list f1 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f12 cSND csplit_normal_list f1 f2 f3 f4 f5 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f6 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f7 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM v) r2) /\ ((MEM u) r1)), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c/\ cMEM f8 f9 cMEM f10 f11 c==> cMEM f8 f9 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f11 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((\w. (((next_el f) x) = w)) w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = T)
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f0 f2 f3 f6 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= f7 cSND csplit_normal_list f0 f2 f8 f6 f5 c==> c= f9 cSND csplit_normal_list f0 f2 f8 f6 f5 c==> c= cfind_face f0 f3 f8 c==> cMEM f10 f7 c==> cMEM f11 f9 c==> cMEM f2 f1 c==> cMEM f7 creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f6 f5 cNIL f1 c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f6 f5 cNIL f1 c==> cfinal_list f0 f7 c==> cfinal_list f0 f9 c==> cmarked_list f0 f1 f2 f3 c= c==> * / c= cnext_el f8 f3 b0 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f6 f5 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f8 f6 f5 cNIL cT
- (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((((next_el f) x) = w) /\ ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))
T c==> c= cnext_el f0 f1 f2 c==> c= f3 cSND csplit_normal_list f4 f5 f0 f6 f7 c==> c= f8 cSND csplit_normal_list f4 f5 f0 f6 f7 c==> cMEM f9 f3 c==> cMEM f10 f8 c==> cMEM f5 f11 c==> cMEM f8 creplace f5 cCONS cSND csplit_normal_list f4 f5 f0 f6 f7 cNIL f11 c==> cfinal_list f4 f8 c/\ c= cnext_el f0 f1 f2 c==> cuniq clist_of_darts f4 c==> call / c~ c= b0 cNIL f4 c==> ! c==> cMEM b0 clist_of_darts f4 cMEM c, cSND b0 cFST b0 clist_of_darts f4 c==> cMEM f6 f0 c==> cMEM f12 f0 c==> c< cindexf f2 f6 f0 cindexf f2 f12 f0 c==> c= cfind_face f4 f6 f0 c==> cMEM cSND csplit_normal_list f4 f5 f0 f6 f7 cntrans f4 f11 f5 f1 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f4 f5 f0 f6 f7 c==> cloop_list f4 cSND csplit_normal_list f4 f5 f0 f6 f7 c? / c/\ ccontour_list f4 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f4 ccat creplace f5 cCONS cSND csplit_normal_list f4 f5 f0 f6 f7 cNIL f11 cCONS cFST csplit_normal_list f4 f5 f0 f6 f7 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM y) f) /\ (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c= f8 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f9 f4 c==> cMEM f10 f8 c==> cMEM f6 f1 c==> cMEM f5 f11 c==> cMEM f8 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f11 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f8 c/\ cMEM f6 f1 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cSND csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f11 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cSND csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f11 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c==> c= cfind_face f0 f6 f4 c==> c==> cMEM f7 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f6 f8 cNIL f1 c\/ cMEM f7 f1 c/\ cMEM f2 f1 c= f7 cSND csplit_normal_list f0 f2 f4 f6 f8 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f6 f8 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f6 f8 c==> c< cindexf f5 f6 f4 cindexf f5 f10 f4 c==> cMEM f11 f7 c==> cMEM f12 f9 c==> cMEM f6 f4 c==> cMEM f10 f4 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f2 f4 f6 f8 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f6 f8 cNIL c==> cMEM cFST csplit_normal_list f0 f2 f4 f6 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> cuniq cFST csplit_normal_list f0 f2 f4 f6 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f6 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f6 f8 cNIL
+ |- ((\r. (!x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))))))) r)
T * / ! c= cs_flag_list f0 f1 b0 b1 c/\ ! ! c==> c/\ cMEM b2 cfinal_dart_list f0 f1 cMEM b3 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 b2 c/\ c= cLAST b4 b3 cSUBSET * part cset_of_list b4 * part cset_of_list cfinal_dart_list f0 f1 ! ! ! c==> c/\ c= b4 cLAST b3 c/\ cMEM b3 cparts f0 b2 c/\ cMEM b2 f1 c/\ c~ cfinal_list f0 b2 c~ cMEM b4 cs_list f0 b0 b1 cMEM ce_list b4 ccat cs_list f0 b0 b1 cfinal_dart_list f0 f1 f2
+ (~ (r' = NIL)), ((HD r') = u), ((LAST r') = v), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))), ((contour_list L) r'), ((final_list L) r2), ((\s. (r' = s)) s) |- (((\s. (r' = s)) s) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ c= f0 cNIL c==> c= cHD f0 f1 c==> c= cLAST f0 f2 c==> c= f3 cFST csplit_normal_list f4 f5 f6 f7 f8 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cFST csplit_normal_list f4 f5 f6 f7 f8 c==> ccontour_list f4 f0 c==> cfinal_list f4 f3 c==> * / c= f0 b0 f9 c/\ * / c= f0 b0 f9 c? / c/\ ccontour_list f4 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f4 ccat creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f10 cCONS cFST csplit_normal_list f4 f5 f6 f7 f8 cNIL
+ (x' = d), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((x' IN (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> c= f0 f1 c==> c= f2 cSND csplit_normal_list f3 f4 f5 f6 f7 c==> cMEM f2 creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f8 c==> cfinal_list f3 f2 c==> cIN f0 * part cset_of_list cSND csplit_normal_list f3 f4 f5 f6 f7 cIN f0 * part cset_of_list cflatten cfilter * part cfinal_list f3 cAPPEND creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f3 f4 f5 f6 f7 cNIL
+ (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) /\ ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c= f6 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f7 f0 c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 c==> cfinal_list f1 f6 c/\ c= f6 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c= cnext_el f3 f9 f10 c==> cuniq clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cMEM f4 f3 c==> cMEM f11 f3 c==> c< cindexf f10 f4 f3 cindexf f10 f11 f3 c==> c= cfind_face f1 f4 f3 c==> cMEM cSND csplit_normal_list f1 f2 f3 f4 f5 cntrans f1 f8 f2 f9 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cloop_list f1 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f12 cSND csplit_normal_list f1 f2 f3 f4 f5 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ |- ((\N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))))) N)
T * / ! ! ! c= cytrans f0 b0 b1 b2 b3 cl'y f0 crtrans f0 b0 b1 b2 b3 b2 f1
+ (~ ((final_list L) r)) |- ((?l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM d) l))) ==> (?l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l))))
T c==> c~ cfinal_list f0 f1 c==> c? / c/\ c/\ cfinal_list f0 b0 cMEM b0 f2 cMEM f3 b0 c? / c/\ c/\ cfinal_list f0 b0 c\/ cMEM b0 creplace f1 cCONS cSND csplit_normal_list f0 f1 f4 f5 f6 cNIL f2 cMEM b0 cCONS cFST csplit_normal_list f0 f1 f4 f5 f6 cNIL cMEM f3 b0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r2) N) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f8 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f11 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM y) f) /\ (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f)))), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cfind_face f0 f3 f4 c==> c/\ cMEM f8 f4 c/\ cMEM f6 f4 c< cindexf f5 f8 f4 cindexf f5 f6 f4 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f10 f1 c/\ cMEM f2 f1 c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f8 f4 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> cMEM f10 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM y) f), ((MEM z) f), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f4 f1 c==> c==> cMEM f5 creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 c\/ cMEM f5 f8 c/\ cMEM f6 f8 c= f5 cSND csplit_normal_list f0 f6 f1 f4 f7 c==> c==> cMEM f9 creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f6 f8 c= f9 cSND csplit_normal_list f0 f6 f1 f4 f7 c==> c< cindexf f3 f4 f1 cindexf f3 f10 f1 c==> cMEM f11 f5 c==> cMEM f4 f1 c==> cMEM f10 f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> cMEM cFST csplit_normal_list f0 f6 f1 f4 f7 cntrans f0 f8 f6 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f6 f1 f4 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f6 f1 f4 f7 c==> c= f5 cFST csplit_normal_list f0 f6 f1 f4 f7 c==> c= f9 cFST csplit_normal_list f0 f6 f1 f4 f7 c==> cMEM f12 cFST csplit_normal_list f0 f6 f1 f4 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f6 f1 f4 f7 cNIL
+ |- (((!N. (!r. (!x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))))))))) ==> ((\N. (!r. (!x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))))))))) N)) = ((\N. (!r. (!x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))))))))) N))
T c= c==> ! ! ! c= cs_flag_list f0 b0 b1 b2 c/\ ! ! c==> c/\ cMEM b3 cfinal_dart_list f0 b0 cMEM b4 cfinal_dart_list f0 b0 c? / c/\ ccontour_list f0 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 b3 c/\ c= cLAST b5 b4 cSUBSET * part cset_of_list b5 * part cset_of_list cfinal_dart_list f0 b0 ! ! ! c==> c/\ c= b5 cLAST b4 c/\ cMEM b4 cparts f0 b3 c/\ cMEM b3 b0 c/\ c~ cfinal_list f0 b3 c~ cMEM b5 cs_list f0 b1 b2 cMEM ce_list b5 ccat cs_list f0 b1 b2 cfinal_dart_list f0 b0 * / ! ! c= cs_flag_list f0 b0 b1 b2 c/\ ! ! c==> c/\ cMEM b3 cfinal_dart_list f0 b0 cMEM b4 cfinal_dart_list f0 b0 c? / c/\ ccontour_list f0 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 b3 c/\ c= cLAST b5 b4 cSUBSET * part cset_of_list b5 * part cset_of_list cfinal_dart_list f0 b0 ! ! ! c==> c/\ c= b5 cLAST b4 c/\ cMEM b4 cparts f0 b3 c/\ cMEM b3 b0 c/\ c~ cfinal_list f0 b3 c~ cMEM b5 cs_list f0 b1 b2 cMEM ce_list b5 ccat cs_list f0 b1 b2 cfinal_dart_list f0 b0 f1 * / ! ! c= cs_flag_list f0 b0 b1 b2 c/\ ! ! c==> c/\ cMEM b3 cfinal_dart_list f0 b0 cMEM b4 cfinal_dart_list f0 b0 c? / c/\ ccontour_list f0 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 b3 c/\ c= cLAST b5 b4 cSUBSET * part cset_of_list b5 * part cset_of_list cfinal_dart_list f0 b0 ! ! ! c==> c/\ c= b5 cLAST b4 c/\ cMEM b4 cparts f0 b3 c/\ cMEM b3 b0 c/\ c~ cfinal_list f0 b3 c~ cMEM b5 cs_list f0 b1 b2 cMEM ce_list b5 ccat cs_list f0 b1 b2 cfinal_dart_list f0 b0 f1
- |- (((!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))) ==> ((\r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))) r2)) = ((\r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))) r2))
T c= c==> ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b7 c/\ cgood_list_nodes b7 c/\ cmarked_list b7 b8 b9 b10 c/\ c~ cfinal_list b7 b9 c/\ c= cl'z b7 b8 b9 b10 f0 c/\ c= cl'y b7 b9 b10 b5 c/\ c= cprev_el b9 f0 b6 c/\ cfinal_list b7 b1 c/\ cfinal_list b7 b0 c/\ cMEM b0 b8 c/\ c= cFST csplit_normal_list b7 b9 b4 b5 b6 b1 c/\ c= cfind_face b7 b10 b4 c/\ cMEM b3 b0 cMEM b2 b1 c? / c/\ ccontour_list b7 b11 c/\ c~ c= b11 cNIL c/\ c= cHD b11 b2 c/\ c= cLAST b11 b3 cSUBSET * part cset_of_list b11 * part cset_of_list cflatten cfilter * part cfinal_list b7 ccat creplace b9 cCONS cSND csplit_normal_list b7 b9 b4 b5 b6 cNIL b8 cCONS cFST csplit_normal_list b7 b9 b4 b5 b6 cNIL * / ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b7 c/\ cgood_list_nodes b7 c/\ cmarked_list b7 b8 b9 b10 c/\ c~ cfinal_list b7 b9 c/\ c= cl'z b7 b8 b9 b10 f0 c/\ c= cl'y b7 b9 b10 b5 c/\ c= cprev_el b9 f0 b6 c/\ cfinal_list b7 b1 c/\ cfinal_list b7 b0 c/\ cMEM b0 b8 c/\ c= cFST csplit_normal_list b7 b9 b4 b5 b6 b1 c/\ c= cfind_face b7 b10 b4 c/\ cMEM b3 b0 cMEM b2 b1 c? / c/\ ccontour_list b7 b11 c/\ c~ c= b11 cNIL c/\ c= cHD b11 b2 c/\ c= cLAST b11 b3 cSUBSET * part cset_of_list b11 * part cset_of_list cflatten cfilter * part cfinal_list b7 ccat creplace b9 cCONS cSND csplit_normal_list b7 b9 b4 b5 b6 cNIL b8 cCONS cFST csplit_normal_list b7 b9 b4 b5 b6 cNIL f1 * / ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b7 c/\ cgood_list_nodes b7 c/\ cmarked_list b7 b8 b9 b10 c/\ c~ cfinal_list b7 b9 c/\ c= cl'z b7 b8 b9 b10 f0 c/\ c= cl'y b7 b9 b10 b5 c/\ c= cprev_el b9 f0 b6 c/\ cfinal_list b7 b1 c/\ cfinal_list b7 b0 c/\ cMEM b0 b8 c/\ c= cFST csplit_normal_list b7 b9 b4 b5 b6 b1 c/\ c= cfind_face b7 b10 b4 c/\ cMEM b3 b0 cMEM b2 b1 c? / c/\ ccontour_list b7 b11 c/\ c~ c= b11 cNIL c/\ c= cHD b11 b2 c/\ c= cLAST b11 b3 cSUBSET * part cset_of_list b11 * part cset_of_list cflatten cfilter * part cfinal_list b7 ccat creplace b9 cCONS cSND csplit_normal_list b7 b9 b4 b5 b6 cNIL b8 cCONS cFST csplit_normal_list b7 b9 b4 b5 b6 cNIL f1
+ (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= cfind_face f0 f3 f4 c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f2 f1 c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
- (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c==> c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f6 f1 c/\ cMEM f2 f1 c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> cMEM f10 f6 c==> cMEM f11 f9 c==> cMEM f6 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> cfinal_list f0 f9 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f7 f4 c==> cMEM f12 f4 c==> c< cindexf f5 f7 f4 cindexf f5 f12 f4 c==> c= cfind_face f0 f7 f4 c==> cMEM cFST csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f8 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c/\ c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ (r' = NIL)), ((HD r') = u), ((LAST r') = v), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))), ((contour_list L) r'), ((final_list L) r2) |- ((r' = s) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ c= f0 cNIL c==> c= cHD f0 f1 c==> c= cLAST f0 f2 c==> c= f3 cSND csplit_normal_list f4 f5 f6 f7 f8 c==> cMEM f3 creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cSND csplit_normal_list f4 f5 f6 f7 f8 c==> ccontour_list f4 f0 c==> cfinal_list f4 f3 c==> c= f0 f10 c? / c/\ ccontour_list f4 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f4 ccat creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 cCONS cFST csplit_normal_list f4 f5 f6 f7 f8 cNIL
+ |- ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) N)
T * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cFST csplit_normal_list f0 b1 cfind_face f0 cl'y f0 b1 b2 cl'y f0 b1 b2 cprev_el b1 cl'z f0 b0 b1 b2 cntrans f0 b0 b1 b2 cNUMERAL cBIT1 c_0 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM v) r2) /\ ((MEM u) r1)), ((MEM v) r2), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c/\ cMEM f8 f9 cMEM f10 f11 c==> cMEM f8 f9 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f11 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f8 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f10 f9 c==> cMEM f11 f8 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f9 f6 c/\ cMEM f1 f6 c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f7 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (FST (((((split_normal_list L) r) f) y) z1))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((uniq (FST (((((split_normal_list L) r) f) y) z1))) /\ (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f5 f6 c==> c= cfind_face f0 f3 f2 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c\/ cMEM f7 f8 c/\ cMEM f1 f8 c= f7 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f1 f8 c= f9 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c< cindexf f6 f3 f2 cindexf f6 f10 f2 c==> cMEM f11 f7 c==> cMEM f12 f9 c==> cMEM f3 f2 c==> cMEM f10 f2 c==> cMEM cFST csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f8 f1 f5 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= f7 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= f9 cFST csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
+ (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM y) f), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- (((MEM y) f) /\ (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c= f6 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f7 f0 c==> cMEM f4 f3 c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 c==> cfinal_list f1 f6 c/\ cMEM f4 f3 c==> cMEM f9 f3 c==> c< cindexf f10 f4 f3 cindexf f10 f9 f3 c==> c= cfind_face f1 f4 f3 c==> cMEM cSND csplit_normal_list f1 f2 f3 f4 f5 cntrans f1 f8 f2 f11 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cloop_list f1 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f12 cSND csplit_normal_list f1 f2 f3 f4 f5 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1))), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c/\ c= cfind_face f0 f4 f7 c/\ cMEM f8 f9 cMEM f10 f11 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f11 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ |- (((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))) ==> ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))) N)) = ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))) N))
T c= c==> ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= cl'z f0 b0 b1 b2 f1 c/\ c= cl'y f0 b1 b2 f2 c/\ c= cprev_el b1 f1 f3 c/\ cfinal_list f0 f4 c/\ cfinal_list f0 f5 c/\ c= cSND csplit_normal_list f0 b1 f6 f2 f3 f5 c/\ cMEM f4 b0 c/\ c= cfind_face f0 b2 f6 c/\ cMEM f7 f5 cMEM f8 f4 c? / c/\ ccontour_list f0 b3 c/\ c~ c= b3 cNIL c/\ c= cHD b3 f8 c/\ c= cLAST b3 f7 cSUBSET * part cset_of_list b3 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b1 cCONS cSND csplit_normal_list f0 b1 f6 f2 f3 cNIL b0 cCONS cFST csplit_normal_list f0 b1 f6 f2 f3 cNIL * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= cl'z f0 b0 b1 b2 f1 c/\ c= cl'y f0 b1 b2 f2 c/\ c= cprev_el b1 f1 f3 c/\ cfinal_list f0 f4 c/\ cfinal_list f0 f5 c/\ c= cSND csplit_normal_list f0 b1 f6 f2 f3 f5 c/\ cMEM f4 b0 c/\ c= cfind_face f0 b2 f6 c/\ cMEM f7 f5 cMEM f8 f4 c? / c/\ ccontour_list f0 b3 c/\ c~ c= b3 cNIL c/\ c= cHD b3 f8 c/\ c= cLAST b3 f7 cSUBSET * part cset_of_list b3 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b1 cCONS cSND csplit_normal_list f0 b1 f6 f2 f3 cNIL b0 cCONS cFST csplit_normal_list f0 b1 f6 f2 f3 cNIL f9 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= cl'z f0 b0 b1 b2 f1 c/\ c= cl'y f0 b1 b2 f2 c/\ c= cprev_el b1 f1 f3 c/\ cfinal_list f0 f4 c/\ cfinal_list f0 f5 c/\ c= cSND csplit_normal_list f0 b1 f6 f2 f3 f5 c/\ cMEM f4 b0 c/\ c= cfind_face f0 b2 f6 c/\ cMEM f7 f5 cMEM f8 f4 c? / c/\ ccontour_list f0 b3 c/\ c~ c= b3 cNIL c/\ c= cHD b3 f8 c/\ c= cLAST b3 f7 cSUBSET * part cset_of_list b3 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b1 cCONS cSND csplit_normal_list f0 b1 f6 f2 f3 cNIL b0 cCONS cFST csplit_normal_list f0 b1 f6 f2 f3 cNIL f9
+ |- ((\x. (!f. (!xs. (!g. (((MEM x) (((replace f) xs) g)) ==> (((MEM x) g) \/ (((MEM f) g) /\ ((MEM x) xs)))))))) r2)
T * / ! ! ! c==> cMEM b0 creplace b1 b2 b3 c\/ cMEM b0 b3 c/\ cMEM b1 b3 cMEM b0 b2 f0
- |- ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))
T c= * * part cUNION f0 f1 * part cGSPEC / c? / cSETSPEC b0 c\/ cIN b1 f0 cIN b1 f1 b1
+ (uniq (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM v) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- ((((uniq (SND (((((split_normal_list L) r) f) y) z1))) /\ (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) /\ (((MEM u) (SND (((((split_normal_list L) r) f) y) z1))) /\ ((MEM v) (SND (((((split_normal_list L) r) f) y) z1)))))) ==> (?r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL)))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> cuniq cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c= f5 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f6 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f7 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f5 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c==> cloop_list f0 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> cfinal_list f0 f5 c==> c==> c/\ cuniq cSND csplit_normal_list f0 f1 f2 f3 f4 c/\ cloop_list f0 cSND csplit_normal_list f0 f1 f2 f3 f4 c/\ cMEM f6 cSND csplit_normal_list f0 f1 f2 f3 f4 cMEM f7 cSND csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c= cHD b0 f6 c/\ c= cLAST b0 f7 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list cSND csplit_normal_list f0 f1 f2 f3 f4 c~ c= b0 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f6 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
- |- (((!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))) ==> ((\r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))) r2)) = ((\r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))) r2))
T c= c==> ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b7 c/\ cgood_list_nodes b7 c/\ cmarked_list b7 b8 b9 b10 c/\ c~ cfinal_list b7 b9 c/\ c= cl'z b7 b8 b9 b10 f0 c/\ c= cl'y b7 b9 b10 b5 c/\ c= cprev_el b9 f0 b6 c/\ cfinal_list b7 b1 c/\ cfinal_list b7 b0 c/\ c= cSND csplit_normal_list b7 b9 b4 b5 b6 b0 c/\ c= cFST csplit_normal_list b7 b9 b4 b5 b6 b1 c/\ c= cfind_face b7 b10 b4 c/\ cMEM b3 b0 cMEM b2 b1 c? / c/\ ccontour_list b7 b11 c/\ c~ c= b11 cNIL c/\ c= cHD b11 b2 c/\ c= cLAST b11 b3 cSUBSET * part cset_of_list b11 * part cset_of_list cflatten cfilter * part cfinal_list b7 ccat creplace b9 cCONS cSND csplit_normal_list b7 b9 b4 b5 b6 cNIL b8 cCONS cFST csplit_normal_list b7 b9 b4 b5 b6 cNIL * / ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b7 c/\ cgood_list_nodes b7 c/\ cmarked_list b7 b8 b9 b10 c/\ c~ cfinal_list b7 b9 c/\ c= cl'z b7 b8 b9 b10 f0 c/\ c= cl'y b7 b9 b10 b5 c/\ c= cprev_el b9 f0 b6 c/\ cfinal_list b7 b1 c/\ cfinal_list b7 b0 c/\ c= cSND csplit_normal_list b7 b9 b4 b5 b6 b0 c/\ c= cFST csplit_normal_list b7 b9 b4 b5 b6 b1 c/\ c= cfind_face b7 b10 b4 c/\ cMEM b3 b0 cMEM b2 b1 c? / c/\ ccontour_list b7 b11 c/\ c~ c= b11 cNIL c/\ c= cHD b11 b2 c/\ c= cLAST b11 b3 cSUBSET * part cset_of_list b11 * part cset_of_list cflatten cfilter * part cfinal_list b7 ccat creplace b9 cCONS cSND csplit_normal_list b7 b9 b4 b5 b6 cNIL b8 cCONS cFST csplit_normal_list b7 b9 b4 b5 b6 cNIL f1 * / ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b7 c/\ cgood_list_nodes b7 c/\ cmarked_list b7 b8 b9 b10 c/\ c~ cfinal_list b7 b9 c/\ c= cl'z b7 b8 b9 b10 f0 c/\ c= cl'y b7 b9 b10 b5 c/\ c= cprev_el b9 f0 b6 c/\ cfinal_list b7 b1 c/\ cfinal_list b7 b0 c/\ c= cSND csplit_normal_list b7 b9 b4 b5 b6 b0 c/\ c= cFST csplit_normal_list b7 b9 b4 b5 b6 b1 c/\ c= cfind_face b7 b10 b4 c/\ cMEM b3 b0 cMEM b2 b1 c? / c/\ ccontour_list b7 b11 c/\ c~ c= b11 cNIL c/\ c= cHD b11 b2 c/\ c= cLAST b11 b3 cSUBSET * part cset_of_list b11 * part cset_of_list cflatten cfilter * part cfinal_list b7 ccat creplace b9 cCONS cSND csplit_normal_list b7 b9 b4 b5 b6 cNIL b8 cCONS cFST csplit_normal_list b7 b9 b4 b5 b6 cNIL f1
+ (~ (s = NIL)), (~ ((final_list L) r)), ((HD s) = u), (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))), ((contour_list L) s) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ c= f0 cNIL c==> c~ cfinal_list f1 f2 c==> c= cHD f0 f3 c==> c/\ c= cLAST f0 f4 cSUBSET * part cset_of_list f0 * part cset_of_list cfinal_dart_list f1 f5 c==> ccontour_list f1 f0 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f3 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f6 f7 f8 cNIL f5 cCONS cFST csplit_normal_list f1 f2 f6 f7 f8 cNIL
+ |- ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1)
T * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
+ (x' = d), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- ((x' = d) /\ ((x' IN (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c==> c= f0 f1 c==> c= f2 cFST csplit_normal_list f3 f4 f5 f6 f7 c==> cfinal_list f3 f2 c/\ c= f0 f1 c==> cIN f0 * part cset_of_list cFST csplit_normal_list f3 f4 f5 f6 f7 cIN f0 * part cset_of_list cflatten cfilter * part cfinal_list f3 cAPPEND creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f3 f4 f5 f6 f7 cNIL
+ |- (((!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) ==> ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x)) = ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x))
T c= c==> ! ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3 * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= f4 cfind_face f0 f3 c= f5 cnext_el f4 f3 c/\ cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 c/\ cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 c< cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 cindexf f5 cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f6 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f9 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f9 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f6 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f9 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f9 cNIL
- |- ((\z. (!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))) z)
T * / ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b8 c/\ cgood_list_nodes b8 c/\ cmarked_list b8 b9 b10 b11 c/\ c~ cfinal_list b8 b10 c/\ c= cl'z b8 b9 b10 b11 b0 c/\ c= cl'y b8 b10 b11 b6 c/\ c= cprev_el b10 b0 b7 c/\ cfinal_list b8 b2 c/\ cfinal_list b8 b1 c/\ c= cSND csplit_normal_list b8 b10 b5 b6 b7 b1 c/\ cMEM b2 b9 c/\ c= cfind_face b8 b11 b5 c/\ cMEM b4 b1 cMEM b3 b2 c? / c/\ ccontour_list b8 b12 c/\ c~ c= b12 cNIL c/\ c= cHD b12 b3 c/\ c= cLAST b12 b4 cSUBSET * part cset_of_list b12 * part cset_of_list cflatten cfilter * part cfinal_list b8 ccat creplace b10 cCONS cSND csplit_normal_list b8 b10 b5 b6 b7 cNIL b9 cCONS cFST csplit_normal_list b8 b10 b5 b6 b7 cNIL f0
- |- ((!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r2) /\ ((MEM v) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b7 c/\ cgood_list_nodes b7 c/\ cmarked_list b7 b8 b9 b10 c/\ c~ cfinal_list b7 b9 c/\ c= cl'z b7 b8 b9 b10 f0 c/\ c= cl'y b7 b9 b10 b5 c/\ c= cprev_el b9 f0 b6 c/\ cfinal_list b7 b1 c/\ cfinal_list b7 b0 c/\ c= cSND csplit_normal_list b7 b9 b4 b5 b6 b0 c/\ cMEM b1 b8 c/\ c= cfind_face b7 b10 b4 c/\ cMEM b2 b0 cMEM b3 b1 c? / c/\ ccontour_list b7 b11 c/\ c~ c= b11 cNIL c/\ c= cHD b11 b2 c/\ c= cLAST b11 b3 cSUBSET * part cset_of_list b11 * part cset_of_list cflatten cfilter * part cfinal_list b7 ccat creplace b9 cCONS cSND csplit_normal_list b7 b9 b4 b5 b6 cNIL b8 cCONS cFST csplit_normal_list b7 b9 b4 b5 b6 cNIL cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (r2 = (SND (((((split_normal_list L) r) f) y) z1))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f11 f6 c= f11 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cfind_face f0 f3 f4 c==> c= cfind_face f0 f8 f4 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f10 f1 c/\ cMEM f2 f1 c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c< cindexf f5 f8 f4 cindexf f5 f6 f4 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f8 f4 c==> cMEM f6 f4 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> cMEM f10 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> cMEM cFST csplit_normal_list f0 f2 f4 f8 f7 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c/\ cMEM cFST csplit_normal_list f0 f2 f4 f8 f7 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
+ |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cuniq cFST csplit_normal_list b0 b2 cfind_face b0 cl'y b0 b2 b3 cl'y b0 b2 b3 cprev_el b2 cl'z b0 b1 b2 b3 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1))))), ((MEM u) r1), ((MEM v) r2), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1))))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f8 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c/\ c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)) |- ((?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f2 c/\ c= cLAST b0 f3 cSUBSET * part cset_of_list b0 * part cset_of_list cfinal_dart_list f0 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f2 c/\ c= cLAST b0 f3 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f5 f6 f7 cNIL f4 cCONS cFST csplit_normal_list f0 f1 f5 f6 f7 cNIL
+ (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))
T c==> c= cnext_el f0 f1 f2 c==> c= cfind_face f3 f1 f0 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f3 f5 f0 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f3 f5 f0 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f3 f5 f0 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f3 f5 f0 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> cMEM f9 cCONS cFST csplit_normal_list f3 f5 f0 f6 f7 cNIL c==> cfinal_list f3 f9 c==> cuniq clist_of_darts f3 c==> call / c~ c= b0 cNIL f3 c==> ! c==> cMEM b0 clist_of_darts f3 cMEM c, cSND b0 cFST b0 clist_of_darts f3 c==> cMEM f6 f0 c==> cMEM f12 f0 c==> c< cindexf f2 f6 f0 cindexf f2 f12 f0 c==> c= cfind_face f3 f6 f0 c==> cMEM cFST csplit_normal_list f3 f5 f0 f6 f7 cntrans f3 f8 f5 f1 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f3 f5 f0 f6 f7 c==> cloop_list f3 cFST csplit_normal_list f3 f5 f0 f6 f7 c==> c= f4 cFST csplit_normal_list f3 f5 f0 f6 f7 c? / c/\ ccontour_list f3 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f3 ccat creplace f5 cCONS cSND csplit_normal_list f3 f5 f0 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f3 f5 f0 f6 f7 cNIL
+ (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cfind_face f0 f3 f4 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f10 f1 c/\ cMEM f2 f1 c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> cMEM f10 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
+ (~ ((final_list L) r)) |- (((\s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))) s) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> * / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f2 c/\ c= cLAST b0 f3 cSUBSET * part cset_of_list b0 * part cset_of_list cfinal_dart_list f0 f4 f5 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f2 c/\ c= cLAST b0 f3 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f6 f7 f8 cNIL f4 cCONS cFST csplit_normal_list f0 f1 f6 f7 f8 cNIL
+ (((find_face L) x) = f), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- ((((find_face L) x) = f) /\ (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))))
T c==> c= cfind_face f0 f1 f2 c==> cMEM f3 cCONS cFST csplit_normal_list f0 f4 f2 f5 f6 cNIL c==> cfinal_list f0 f3 c/\ c= cfind_face f0 f1 f2 c==> cMEM f7 f3 c==> cMEM f8 f9 c==> c==> cMEM f9 creplace f4 cCONS cSND csplit_normal_list f0 f4 f2 f5 f6 cNIL f10 c\/ cMEM f9 f10 c/\ cMEM f4 f10 c= f9 cSND csplit_normal_list f0 f4 f2 f5 f6 c==> c==> cMEM f3 creplace f4 cCONS cSND csplit_normal_list f0 f4 f2 f5 f6 cNIL f10 c\/ cMEM f3 f10 c/\ cMEM f4 f10 c= f3 cSND csplit_normal_list f0 f4 f2 f5 f6 c==> c= cnext_el f2 f1 f11 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f5 f2 c==> cMEM f12 f2 c==> c< cindexf f11 f5 f2 cindexf f11 f12 f2 c==> c= cfind_face f0 f5 f2 c==> cMEM cFST csplit_normal_list f0 f4 f2 f5 f6 cntrans f0 f10 f4 f1 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f4 f2 f5 f6 c==> cloop_list f0 cFST csplit_normal_list f0 f4 f2 f5 f6 c==> c= f9 cFST csplit_normal_list f0 f4 f2 f5 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f4 cCONS cSND csplit_normal_list f0 f4 f2 f5 f6 cNIL f10 cCONS cFST csplit_normal_list f0 f4 f2 f5 f6 cNIL
+ (~ ((final_list L) r)), ((MEM u) r1), ((MEM v) r2), ((MEM r1) N), ((MEM r2) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r2) N) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cMEM f2 f3 c==> cMEM f4 f5 c==> cMEM f3 f6 c==> cMEM f5 f6 c==> cfinal_list f0 f3 c==> cfinal_list f0 f5 c==> cmarked_list f0 f6 f1 f7 c/\ cMEM f5 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f2 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f9 f10 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f9 f10 cNIL
- |- ((\l2. ((set_of_list ((APPEND l1) l2)) = ((set_of_list l1) UNION (set_of_list l2)))) l2)
T * / c= * part cset_of_list cAPPEND f0 b0 * * part cUNION * part cset_of_list f0 * part cset_of_list b0 f1
+ (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (~ ((final_list L) r)), ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) N), ((MEM r2) N), ((final_list L) r1), ((final_list L) r2) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> c~ cfinal_list f0 f2 c==> c/\ ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> cMEM f4 f5 c==> cMEM f6 f7 c==> cMEM f5 f1 c==> cMEM f7 f1 c==> cfinal_list f0 f5 c==> cfinal_list f0 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f4 c/\ c= cLAST b0 f6 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f9 f10 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f8 f9 f10 cNIL
+ (~ ((final_list L) r)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) N), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r2) N) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f9 f6 c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f11 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ |- (((!L. (!x. (!y. (!s. (((uniq s) /\ (((loop_list L) s) /\ (((MEM x) s) /\ ((MEM y) s)))) ==> (?r. (((contour_list L) r) /\ (((HD r) = x) /\ (((LAST r) = y) /\ (((set_of_list r) SUBSET (set_of_list s)) /\ (~ (r = NIL)))))))))))) ==> ((\L. (!x. (!y. (!s. (((uniq s) /\ (((loop_list L) s) /\ (((MEM x) s) /\ ((MEM y) s)))) ==> (?r. (((contour_list L) r) /\ (((HD r) = x) /\ (((LAST r) = y) /\ (((set_of_list r) SUBSET (set_of_list s)) /\ (~ (r = NIL)))))))))))) L)) = ((\L. (!x. (!y. (!s. (((uniq s) /\ (((loop_list L) s) /\ (((MEM x) s) /\ ((MEM y) s)))) ==> (?r. (((contour_list L) r) /\ (((HD r) = x) /\ (((LAST r) = y) /\ (((set_of_list r) SUBSET (set_of_list s)) /\ (~ (r = NIL)))))))))))) L))
T c= c==> ! ! ! ! c==> c/\ cuniq b3 c/\ cloop_list b0 b3 c/\ cMEM b1 b3 cMEM b2 b3 c? / c/\ ccontour_list b0 b4 c/\ c= cHD b4 b1 c/\ c= cLAST b4 b2 c/\ cSUBSET * part cset_of_list b4 * part cset_of_list b3 c~ c= b4 cNIL * / ! ! ! c==> c/\ cuniq b3 c/\ cloop_list b0 b3 c/\ cMEM b1 b3 cMEM b2 b3 c? / c/\ ccontour_list b0 b4 c/\ c= cHD b4 b1 c/\ c= cLAST b4 b2 c/\ cSUBSET * part cset_of_list b4 * part cset_of_list b3 c~ c= b4 cNIL f0 * / ! ! ! c==> c/\ cuniq b3 c/\ cloop_list b0 b3 c/\ cMEM b1 b3 cMEM b2 b3 c? / c/\ ccontour_list b0 b4 c/\ c= cHD b4 b1 c/\ c= cLAST b4 b2 c/\ cSUBSET * part cset_of_list b4 * part cset_of_list b3 c~ c= b4 cNIL f0
+ |- ((\z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) z1)
T * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ c= cSND csplit_normal_list b1 b3 f4 f1 b0 f3 c/\ c= cFST csplit_normal_list b1 b3 f4 f1 b0 f2 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f2 cMEM f6 f3 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f6 c/\ c= cLAST b5 f5 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL f7
- |- ((\p. (!q. ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q))))) p)
T * / ! c= cLAST cAPPEND b0 b1 cCOND c= b1 cNIL cLAST b0 cLAST b1 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM v) r2) /\ ((MEM u) r1)), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c/\ cMEM f8 f9 cMEM f10 f11 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f11 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) |- (((((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) (SND (((((split_normal_list L) r) f) y) z1)))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c= c==> c==> cMEM cSND csplit_normal_list f0 f2 f4 f5 f6 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 cSND csplit_normal_list f0 f2 f4 f5 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f5 f6 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f5 f6 cNIL
+ (~ ((final_list L) r)), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) |- (((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))) = T)
T c==> c~ cfinal_list f0 f1 c==> cSUBSET * part cset_of_list f2 * part cset_of_list cfinal_dart_list f0 f3 c= c==> cIN f4 * part cset_of_list f2 cIN f4 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f5 f6 f7 cNIL f3 cCONS cFST csplit_normal_list f0 f1 f5 f6 f7 cNIL cT
+ ((\l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM d) l))) l) |- ((((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM d) l)) ==> (?l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l)))) = (?l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l))))
T c==> * / c/\ c/\ cfinal_list f0 b0 cMEM b0 f1 cMEM f2 b0 f3 c= c==> c/\ c/\ cfinal_list f0 f3 cMEM f3 f1 cMEM f2 f3 c? / c/\ c/\ cfinal_list f0 b0 c\/ cMEM b0 creplace f4 cCONS cSND csplit_normal_list f0 f4 f5 f6 f7 cNIL f1 cMEM b0 cCONS cFST csplit_normal_list f0 f4 f5 f6 f7 cNIL cMEM f2 b0 c? / c/\ c/\ cfinal_list f0 b0 c\/ cMEM b0 creplace f4 cCONS cSND csplit_normal_list f0 f4 f5 f6 f7 cNIL f1 cMEM b0 cCONS cFST csplit_normal_list f0 f4 f5 f6 f7 cNIL cMEM f2 b0
+ (~ ((final_list L) r)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r1) N) ==> (((MEM r2) N) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f8 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f10 f9 c==> cMEM f11 f8 c==> cMEM f8 f6 c==> cMEM f9 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ |- (((!L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) ==> ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L)) = ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L))
T c= c==> ! ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0 * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
- (good_list L), (good_list_nodes L) |- ((good_list_nodes L) /\ (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c/\ cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cl'y f0 f2 f3 f5 c==> c= cprev_el f2 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 c==> cMEM f8 creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cMEM f2 f1 c==> c= f7 cSND csplit_normal_list f0 f2 f9 f5 f6 c==> c= f8 cSND csplit_normal_list f0 f2 f9 f5 f6 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f3 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
+ (~ ((final_list L) r)) |- ((((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> c/\ ccontour_list f0 f2 c/\ c~ c= f2 cNIL c/\ c= cHD f2 f3 c/\ c= cLAST f2 f4 cSUBSET * part cset_of_list f2 * part cset_of_list cfinal_dart_list f0 f5 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f3 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f6 f7 f8 cNIL f5 cCONS cFST csplit_normal_list f0 f1 f6 f7 f8 cNIL
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))) ==> ((\f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))) f)) = ((\f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))) f))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c= c==> ! ! ! c==> c/\ c~ c= f0 b0 cMEM f0 b2 cMEM f0 creplace b0 b1 b2 * / ! ! c==> c/\ c~ c= f0 b0 cMEM f0 b2 cMEM f0 creplace b0 b1 b2 f1 * / ! ! c==> c/\ c~ c= f0 b0 cMEM f0 b2 cMEM f0 creplace b0 b1 b2 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) /\ ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (r2 = (SND (((((split_normal_list L) r) f) y) z1))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> cMEM f9 f7 c==> cMEM f10 f11 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> cfinal_list f0 f7 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c/\ c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c\/ cMEM f11 f6 c= f11 cSND csplit_normal_list f0 f1 f8 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
- (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) |- (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cMEM f4 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 f4
- (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= cfind_face f0 f3 f4 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f2 f1 c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c==> cfinal_list f0 f9 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), (((MEM y) f) /\ (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f)))), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= cfind_face f0 f3 f4 c==> c/\ cMEM f8 f4 c/\ cMEM f6 f4 c< cindexf f5 f8 f4 cindexf f5 f6 f4 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f8 f4 c==> cMEM f2 f1 c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 c==> c= cfind_face f0 f4 f9 c==> cMEM f10 f7 c==> cMEM f11 f8 c==> cMEM f1 f6 c==> c= f8 cSND csplit_normal_list f0 f1 f9 f5 f3 c==> c= f7 cSND csplit_normal_list f0 f1 f9 f5 f3 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) /\ ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= f9 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> cMEM f10 f7 c==> cMEM f11 f9 c==> cMEM f1 f6 c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c/\ c= f9 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f8 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ (x' = d), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- ((x' IN (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> c= f0 f1 c==> c= f2 cFST csplit_normal_list f3 f4 f5 f6 f7 c==> cfinal_list f3 f2 c==> cIN f0 * part cset_of_list cFST csplit_normal_list f3 f4 f5 f6 f7 cIN f0 * part cset_of_list cflatten cfilter * part cfinal_list f3 cAPPEND creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f3 f4 f5 f6 f7 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c==> c= cfind_face f0 f6 f4 c==> c==> cMEM f7 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f6 f8 cNIL f1 c\/ cMEM f7 f1 c/\ cMEM f2 f1 c= f7 cSND csplit_normal_list f0 f2 f4 f6 f8 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f6 f8 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f6 f8 c==> c< cindexf f5 f6 f4 cindexf f5 f10 f4 c==> cMEM f11 f7 c==> cMEM f12 f9 c==> cMEM f6 f4 c==> cMEM f10 f4 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f2 f4 f6 f8 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f6 f8 cNIL c==> cMEM cFST csplit_normal_list f0 f2 f4 f6 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ cMEM cFST csplit_normal_list f0 f2 f4 f6 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f2 f4 f6 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f6 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f6 f8 cNIL
+ (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) |- ((\u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) u)
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 * / ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 f2
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))), (((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c/\ c\/ cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cMEM f7 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c/\ c= cfind_face f0 f4 f8 c/\ cMEM f9 f7 cMEM f10 f11 c==> c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f9 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> c\/ cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cMEM f11 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> cfinal_list f0 f11 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f9 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM z) f) /\ (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f4 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f9 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (SND (((((split_normal_list L) r) f) y) z1))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((uniq (SND (((((split_normal_list L) r) f) y) z1))) /\ (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cSND csplit_normal_list f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f5 f6 c==> c= f7 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c= f8 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c< cindexf f6 f3 f2 cindexf f6 f9 f2 c==> cMEM f10 f7 c==> cMEM f11 f8 c==> cMEM f3 f2 c==> cMEM f9 f2 c==> cMEM f1 f12 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f12 c==> cMEM cSND csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f12 f1 f5 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f8 c/\ cuniq cSND csplit_normal_list f0 f1 f2 f3 f4 c==> cloop_list f0 cSND csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f12 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
+ (r' = s), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), (x' IN (set_of_list s)), ((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))), ((final_list L) r2) |- ((x' IN (set_of_list s)) /\ (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> c= f0 f1 c==> c= f2 cSND csplit_normal_list f3 f4 f5 f6 f7 c==> cMEM f2 creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f8 c==> cIN f9 * part cset_of_list f1 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cSND csplit_normal_list f3 f4 f5 f6 f7 c==> cfinal_list f3 f2 c/\ cIN f9 * part cset_of_list f1 cIN f9 * part cset_of_list cflatten cfilter * part cfinal_list f3 cAPPEND creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f3 f4 f5 f6 f7 cNIL
+ (r2 = (SND (((((split_normal_list L) r) f) y) z1))) |- ((((MEM v) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = (((MEM v) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c= c==> cMEM f6 cSND csplit_normal_list f1 f2 f3 f4 f5 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f6 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c==> cMEM f6 f0 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f6 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= cfind_face f0 f8 f4 c==> c< cindexf f5 f8 f4 cindexf f5 f6 f4 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f8 f4 c==> cMEM f6 f4 c==> cMEM f2 f1 c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
- ((~ (A ==> (B \/ A))) ==> F), (((~ (A ==> (B \/ A))) ==> F) ==> ((~ (A ==> (B \/ A))) ==> F)) |- (((~ (A ==> (B \/ A))) ==> F) /\ ((~ (A ==> (B \/ A))) ==> F))
T c==> c==> c~ c==> f0 c\/ f1 f0 cF c==> c==> c==> c~ c==> f0 c\/ f1 f0 cF c==> c~ c==> f0 c\/ f1 f0 cF c/\ c==> c~ c==> f0 c\/ f1 f0 cF c==> c~ c==> f0 c\/ f1 f0 cF
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))), ((MEM u) r1), ((MEM v) r2), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f8 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c/\ c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c= f8 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f9 f4 c==> cMEM f5 f10 c==> cMEM f8 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f10 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f8 c==> cMEM f6 f1 c==> cMEM f11 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f11 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cSND csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f10 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f12 cSND csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f10 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ (uniq (list_of_darts L)), ((MEM u) r1), ((final_list L) r2) |- ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 f2 c==> cfinal_list f0 f3 c/\ cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f4 f5 c==> cMEM f6 f5 c==> c< cindexf f7 f4 f5 cindexf f7 f6 f5 c==> c= cfind_face f0 f4 f5 c==> cMEM cFST csplit_normal_list f0 f8 f5 f4 f9 cntrans f0 f10 f8 f11 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f8 f5 f4 f9 c==> cloop_list f0 cFST csplit_normal_list f0 f8 f5 f4 f9 c==> c= f2 cFST csplit_normal_list f0 f8 f5 f4 f9 c==> c= f3 cFST csplit_normal_list f0 f8 f5 f4 f9 c==> cMEM f12 cFST csplit_normal_list f0 f8 f5 f4 f9 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f8 cCONS cSND csplit_normal_list f0 f8 f5 f4 f9 cNIL f10 cCONS cFST csplit_normal_list f0 f8 f5 f4 f9 cNIL
+ |- (((?d. (x' = d)) ==> ((x' IN (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))) = ((x' IN (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c= c==> c? / c= f0 b0 c==> cIN f0 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5 cIN f0 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c==> cIN f0 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5 cIN f0 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f1 f6 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f8 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((?r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f0 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 c==> cfinal_list f1 f0 c==> c? / c/\ ccontour_list f1 b0 c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 c~ c= b0 cNIL c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 f3 f4 c/\ c= cl'y f0 f2 f3 f5 c/\ c= cprev_el f2 f4 f6 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ cMEM f7 f1 c/\ c= cFST csplit_normal_list f0 f2 f9 f5 f6 f8 c/\ c= cfind_face f0 f3 f9 c/\ cMEM f10 f8 cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
+ (~ ((final_list L) r)), ((MEM u) ((final_dart_list L) N)), ((MEM v) ((final_dart_list L) N)) |- (((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cMEM f2 cfinal_dart_list f0 f3 c==> cMEM f4 cfinal_dart_list f0 f3 c==> c==> c/\ cMEM f2 cfinal_dart_list f0 f3 cMEM f4 cfinal_dart_list f0 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f2 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cfinal_dart_list f0 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f2 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f5 f6 f7 cNIL f3 cCONS cFST csplit_normal_list f0 f1 f5 f6 f7 cNIL
+ |- ((\u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((MEM r2) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r1) /\ ((MEM v) r2)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))) u)
T * / ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 f0 b4 c/\ cfinal_list b5 f1 c/\ cfinal_list b5 f2 c/\ c= cSND csplit_normal_list b5 b7 b2 b3 b4 f2 c/\ cMEM f1 b6 c/\ c= cfind_face b5 b8 b2 c/\ cMEM b0 f2 cMEM b1 f1 c? / c/\ ccontour_list b5 b9 c/\ c~ c= b9 cNIL c/\ c= cHD b9 b0 c/\ c= cLAST b9 b1 cSUBSET * part cset_of_list b9 * part cset_of_list cflatten cfilter * part cfinal_list b5 ccat creplace b7 cCONS cSND csplit_normal_list b5 b7 b2 b3 b4 cNIL b6 cCONS cFST csplit_normal_list b5 b7 b2 b3 b4 cNIL f3
- (NIL = r') |- (r' = NIL)
T c==> c= cNIL f0 c= f0 cNIL
- |- ((\z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) z1)
T * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ c= cSND csplit_normal_list b1 b3 f4 f1 b0 f3 c/\ c= cFST csplit_normal_list b1 b3 f4 f1 b0 f2 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f3 cMEM f6 f2 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f6 c/\ c= cLAST b5 f5 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL f7
- A, (A ==> (A \/ B)) |- ((A ==> (A \/ B)) /\ (A \/ B))
T c==> f0 c==> c==> f0 c\/ f0 f1 c/\ c==> f0 c\/ f0 f1 c\/ f0 f1
+ ((MEM u) r1), ((final_list L) r2) |- ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))))
T c==> cMEM f0 f1 c==> cfinal_list f2 f3 c==> c==> cMEM f1 creplace f4 cCONS cSND csplit_normal_list f2 f4 f5 f6 f7 cNIL f8 c\/ cMEM f1 f8 c/\ cMEM f4 f8 c= f1 cSND csplit_normal_list f2 f4 f5 f6 f7 c==> c==> cMEM f3 creplace f4 cCONS cSND csplit_normal_list f2 f4 f5 f6 f7 cNIL f8 c\/ cMEM f3 f8 c/\ cMEM f4 f8 c= f3 cSND csplit_normal_list f2 f4 f5 f6 f7 c==> c= cnext_el f5 f9 f10 c==> cuniq clist_of_darts f2 c==> call / c~ c= b0 cNIL f2 c==> ! c==> cMEM b0 clist_of_darts f2 cMEM c, cSND b0 cFST b0 clist_of_darts f2 c==> cMEM f6 f5 c==> cMEM f11 f5 c==> c< cindexf f10 f6 f5 cindexf f10 f11 f5 c==> c= cfind_face f2 f6 f5 c==> cMEM cFST csplit_normal_list f2 f4 f5 f6 f7 cntrans f2 f8 f4 f9 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f2 f4 f5 f6 f7 c==> cloop_list f2 cFST csplit_normal_list f2 f4 f5 f6 f7 c==> c= f1 cFST csplit_normal_list f2 f4 f5 f6 f7 c==> c= f3 cFST csplit_normal_list f2 f4 f5 f6 f7 c==> cMEM f12 cFST csplit_normal_list f2 f4 f5 f6 f7 c? / c/\ ccontour_list f2 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f0 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f2 ccat creplace f4 cCONS cSND csplit_normal_list f2 f4 f5 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f2 f4 f5 f6 f7 cNIL
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 f3 f4 c/\ c= cl'y f0 f2 f3 f5 c/\ c= cprev_el f2 f4 f6 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ c= cSND csplit_normal_list f0 f2 f9 f5 f6 f8 c/\ cMEM f7 f1 c/\ c= cfind_face f0 f3 f9 c/\ cMEM f10 f8 cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((((indexf w) y) f) < (((indexf w) z) f)) /\ ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c==> c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f6 f1 c/\ cMEM f2 f1 c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c< cindexf f5 f7 f4 cindexf f5 f10 f4 c==> cMEM f11 f6 c==> cMEM f12 f9 c==> cMEM f7 f4 c==> cMEM f10 f4 c==> cMEM f6 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ c< cindexf f5 f7 f4 cindexf f5 f10 f4 c==> c= cfind_face f0 f7 f4 c==> cMEM cFST csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
+ (~ ((final_list L) r)) |- (((\l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM d) l))) l) ==> (?l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l))))
T c==> c~ cfinal_list f0 f1 c==> * / c/\ c/\ cfinal_list f0 b0 cMEM b0 f2 cMEM f3 b0 f4 c? / c/\ c/\ cfinal_list f0 b0 c\/ cMEM b0 creplace f1 cCONS cSND csplit_normal_list f0 f1 f5 f6 f7 cNIL f2 cMEM b0 cCONS cFST csplit_normal_list f0 f1 f5 f6 f7 cNIL cMEM f3 b0
+ |- (((!y. (((MEM x) ((CONS y) NIL)) = (x = y))) ==> ((\y. (((MEM x) ((CONS y) NIL)) = (x = y))) y)) = ((\y. (((MEM x) ((CONS y) NIL)) = (x = y))) y))
T c= c==> ! c= cMEM f0 cCONS b0 cNIL c= f0 b0 * / c= cMEM f0 cCONS b0 cNIL c= f0 b0 f1 * / c= cMEM f0 cCONS b0 cNIL c= f0 b0 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) /\ (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f2 f1 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> cMEM f4 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
+ |- (((uniq (SND (((((split_normal_list L) r) f) y) z1))) /\ (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) /\ (((MEM u) (SND (((((split_normal_list L) r) f) y) z1))) /\ ((MEM v) (SND (((((split_normal_list L) r) f) y) z1)))))) ==> (?r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL))))))))
T c==> c/\ cuniq cSND csplit_normal_list f0 f1 f2 f3 f4 c/\ cloop_list f0 cSND csplit_normal_list f0 f1 f2 f3 f4 c/\ cMEM f5 cSND csplit_normal_list f0 f1 f2 f3 f4 cMEM f6 cSND csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c= cHD b0 f5 c/\ c= cLAST b0 f6 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list cSND csplit_normal_list f0 f1 f2 f3 f4 c~ c= b0 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> cMEM f9 f10 c==> cMEM f11 f7 c==> cMEM f10 f6 c==> cfinal_list f0 f10 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ (~ ((final_list L) r)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r1) N) ==> (((MEM r2) N) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f9 f6 c==> cMEM f11 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- |- ((!B. (T ==> (B \/ T))) = ((T ==> (T \/ T)) /\ (T ==> (F \/ T))))
T c= ! c==> cT c\/ b0 cT c/\ c==> cT c\/ cT cT c==> cT c\/ cF cT
- |- (((!A. ((~ (A ==> (A \/ B))) ==> F)) ==> ((\A. ((~ (A ==> (A \/ B))) ==> F)) A)) = ((\A. ((~ (A ==> (A \/ B))) ==> F)) A))
T c= c==> ! c==> c~ c==> b0 c\/ b0 f0 cF * / c==> c~ c==> b0 c\/ b0 f0 cF f1 * / c==> c~ c==> b0 c\/ b0 f0 cF f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) N), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f10 c==> cMEM f11 f8 c==> cMEM f10 f6 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f10 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), ((MEM d) l), ((MEM l) N), ((final_list L) l) |- (((MEM l) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))
T c==> c~ cfinal_list f0 f1 c==> cMEM f2 f3 c==> cMEM f3 f4 c==> cfinal_list f0 f3 c\/ cMEM f3 creplace f1 cCONS cSND csplit_normal_list f0 f1 f5 f6 f7 cNIL f4 cMEM f3 cCONS cFST csplit_normal_list f0 f1 f5 f6 f7 cNIL
+ ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) |- (((((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ ((MEM r2) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> cMEM f0 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c= c==> c\/ cMEM f0 f6 c/\ cMEM f1 f6 c= f0 cSND csplit_normal_list f2 f1 f3 f4 f5 c? / c/\ ccontour_list f2 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f2 ccat creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f2 f1 f3 f4 f5 cNIL c==> c==> cMEM f0 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c\/ cMEM f0 f6 c/\ cMEM f1 f6 cMEM f0 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL c? / c/\ ccontour_list f2 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f2 ccat creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f2 f1 f3 f4 f5 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), (((MEM r2) N) \/ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r2) N) \/ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> c\/ cMEM f9 f6 c= f9 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> cMEM f10 f7 c==> cMEM f11 f9 c==> cMEM f1 f6 c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c/\ c\/ cMEM f9 f6 c= f9 cSND csplit_normal_list f0 f1 f8 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
- |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))) = T)
T c= ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cprev_el b2 f0 f2 c/\ cfinal_list b0 f3 c/\ cfinal_list b0 f4 c/\ c= cSND csplit_normal_list b0 b2 f5 f1 f2 f4 c/\ cMEM f3 b1 c/\ c= cfind_face b0 b3 f5 c/\ cMEM f6 f4 cMEM f7 f3 c? / c/\ ccontour_list b0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 f7 c/\ c= cLAST b4 f6 cSUBSET * part cset_of_list b4 * part cset_of_list cflatten cfilter * part cfinal_list b0 ccat creplace b2 cCONS cSND csplit_normal_list b0 b2 f5 f1 f2 cNIL b1 cCONS cFST csplit_normal_list b0 b2 f5 f1 f2 cNIL cT
+ |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) x)
T * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 cntrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 f3
+ (~ ((final_list L) r)), ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM d) l)) |- (((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM d) l)) /\ (?l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l))))
T c==> c~ cfinal_list f0 f1 c==> c/\ c/\ cfinal_list f0 f2 cMEM f2 f3 cMEM f4 f2 c/\ c/\ c/\ cfinal_list f0 f2 cMEM f2 f3 cMEM f4 f2 c? / c/\ c/\ cfinal_list f0 b0 c\/ cMEM b0 creplace f1 cCONS cSND csplit_normal_list f0 f1 f5 f6 f7 cNIL f3 cMEM b0 cCONS cFST csplit_normal_list f0 f1 f5 f6 f7 cNIL cMEM f4 b0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) /\ ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> (((MEM r2) N) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c==> c= cfind_face f0 f4 f8 c==> cMEM f10 f9 c==> cMEM f11 f7 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c\/ cMEM f7 f6 c/\ cMEM f1 f6 c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> cMEM f9 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
- |- (((!s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x))))))) ==> ((\s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x))))))) s)) = ((\s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x))))))) s))
T c= c==> ! ! c= * * part cUNION b0 b1 * part cGSPEC / c? / cSETSPEC b2 c\/ cIN b3 b0 cIN b3 b1 b3 * / ! c= * * part cUNION b0 b1 * part cGSPEC / c? / cSETSPEC b2 c\/ cIN b3 b0 cIN b3 b1 b3 f0 * / ! c= * * part cUNION b0 b1 * part cGSPEC / c? / cSETSPEC b2 c\/ cIN b3 b0 cIN b3 b1 b3 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (SND (((((split_normal_list L) r) f) y) z1))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cSND csplit_normal_list f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f5 f6 c==> c= f7 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c= f8 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c< cindexf f6 f3 f2 cindexf f6 f9 f2 c==> cMEM f10 f7 c==> cMEM f11 f8 c==> cMEM f3 f2 c==> cMEM f9 f2 c==> cMEM f1 f12 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f12 c==> cMEM cSND csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f12 f1 f5 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> cfinal_list f0 f8 c/\ cloop_list f0 cSND csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f12 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
+ |- (((!a. (!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x)))))) ==> ((\a. (!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x)))))) a)) = ((\a. (!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x)))))) a))
T c= c==> ! ! c= call b0 b1 ! c==> cMEM b2 b1 * b0 b2 * / ! c= call b0 b1 ! c==> cMEM b2 b1 * b0 b2 f0 * / ! c= call b0 b1 ! c==> cMEM b2 b1 * b0 b2 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f1 f6 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> c= f11 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f7 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))), (~ ((final_list L) r)), ((MEM u) ((final_dart_list L) N)), ((MEM v) ((final_dart_list L) N)) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c~ cfinal_list f0 f2 c==> cMEM f4 cfinal_dart_list f0 f1 c==> cMEM f5 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f4 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f6 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f6 f7 f8 cNIL
- (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((final_list L) r2) |- ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))
T c==> c==> cMEM f0 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c\/ cMEM f0 f6 c/\ cMEM f1 f6 c= f0 cSND csplit_normal_list f2 f1 f3 f4 f5 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c\/ cMEM f7 f6 c/\ cMEM f1 f6 c= f7 cSND csplit_normal_list f2 f1 f3 f4 f5 c==> cMEM f8 f0 c==> cMEM f9 f7 c==> cfinal_list f2 f7 c==> c= cnext_el f3 f10 f11 c==> cuniq clist_of_darts f2 c==> call / c~ c= b0 cNIL f2 c==> ! c==> cMEM b0 clist_of_darts f2 cMEM c, cSND b0 cFST b0 clist_of_darts f2 c==> cMEM f4 f3 c==> cMEM f12 f3 c==> c< cindexf f11 f4 f3 cindexf f11 f12 f3 c==> c= cfind_face f2 f4 f3 c==> cMEM cFST csplit_normal_list f2 f1 f3 f4 f5 cntrans f2 f6 f1 f10 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f2 f1 f3 f4 f5 c==> cloop_list f2 cFST csplit_normal_list f2 f1 f3 f4 f5 c==> c= f0 cFST csplit_normal_list f2 f1 f3 f4 f5 c==> c= f7 cFST csplit_normal_list f2 f1 f3 f4 f5 c? / c/\ ccontour_list f2 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f9 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f2 ccat creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f2 f1 f3 f4 f5 cNIL
+ (x' = d) |- (((d IN (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) ==> (d IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))) = ((x' IN (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c==> c= f0 f1 c= c==> cIN f1 * part cset_of_list cFST csplit_normal_list f2 f3 f4 f5 f6 cIN f1 * part cset_of_list cflatten cfilter * part cfinal_list f2 cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f4 f5 f6 cNIL f7 cCONS cFST csplit_normal_list f2 f3 f4 f5 f6 cNIL c==> cIN f0 * part cset_of_list cFST csplit_normal_list f2 f3 f4 f5 f6 cIN f0 * part cset_of_list cflatten cfilter * part cfinal_list f2 cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f4 f5 f6 cNIL f7 cCONS cFST csplit_normal_list f2 f3 f4 f5 f6 cNIL
+ |- (((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = (((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c= c==> c= f0 cFST csplit_normal_list f1 f2 f3 f4 f5 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f6 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c==> cMEM f0 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f6 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) |- ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> c/\ cMEM f2 cfinal_dart_list f0 f1 cMEM f3 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f2 c/\ c= cLAST b0 f3 cSUBSET * part cset_of_list b0 * part cset_of_list cfinal_dart_list f0 f1
+ (good_list_nodes L) |- ((good_list_nodes L) = T)
T c==> cgood_list_nodes f0 c= cgood_list_nodes f0 cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> cMEM f9 f7 c==> cMEM f10 f11 c==> cMEM f1 f6 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> c= f11 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f8 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c==> c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f11 f6 c/\ cMEM f1 f6 c= f11 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f7 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (good_list L), (good_list_nodes L), (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 f3 f4 c/\ c= cl'y f0 f2 f3 f5 c/\ c= cprev_el f2 f4 f6 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ c\/ cMEM f7 creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cMEM f7 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL c/\ c\/ cMEM f8 creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cMEM f8 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL c/\ c= cfind_face f0 f3 f9 c/\ cMEM f10 f8 cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c/\ c= f4 cLAST f5 c/\ cMEM f5 cparts f0 f6 c/\ cMEM f6 f1 c/\ c~ cfinal_list f0 f6 c~ cMEM f4 cs_list f0 f2 f3 cMEM ce_list f4 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM y) f) /\ (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f)))), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cfind_face f0 f3 f4 c==> c/\ cMEM f8 f4 c/\ cMEM f6 f4 c< cindexf f5 f8 f4 cindexf f5 f6 f4 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f10 f1 c/\ cMEM f2 f1 c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> cMEM f10 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
+ ((MEM u) r1), ((final_list L) r2) |- (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))
T c==> cMEM f0 f1 c==> cfinal_list f2 f3 c==> cMEM cFST csplit_normal_list f2 f4 f5 f6 f7 cntrans f2 f8 f4 f9 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f2 f4 f5 f6 f7 c==> cloop_list f2 cFST csplit_normal_list f2 f4 f5 f6 f7 c==> c= f1 cFST csplit_normal_list f2 f4 f5 f6 f7 c==> c= f3 cFST csplit_normal_list f2 f4 f5 f6 f7 c==> cMEM f10 cFST csplit_normal_list f2 f4 f5 f6 f7 c? / c/\ ccontour_list f2 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f0 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f2 ccat creplace f4 cCONS cSND csplit_normal_list f2 f4 f5 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f2 f4 f5 f6 f7 cNIL
+ (uniq (SND (((((split_normal_list L) r) f) y) z1))), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> cuniq cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c= f5 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c= f6 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f7 f5 c==> cMEM f6 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c==> cfinal_list f0 f6 c==> cloop_list f0 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f9 cSND csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f9 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM v) r2) /\ ((MEM u) r1)), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c/\ cMEM f8 f9 cMEM f10 f11 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f11 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (good_list L), (good_list_nodes L), ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1))))))))))))) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 f3 f4 c/\ c= cl'y f0 f2 f3 f5 c/\ c= cprev_el f2 f4 f6 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ c\/ cMEM f7 creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cMEM f7 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL c/\ c\/ cMEM f8 creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cMEM f8 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL c/\ c= cfind_face f0 f3 f9 c/\ cMEM f10 f8 cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f9 f6 c/\ cMEM f1 f6 c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f10 f8 c==> cMEM f11 f9 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f7 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- |- (((!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) ==> ((\xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) xs)) = ((\xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) xs))
T c= c==> ! ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 * / ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 f2 * / ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 f2
+ (~ (r' = NIL)), (r' = s) |- (((~ (s = NIL)) ==> ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))) = ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c==> c~ c= f0 cNIL c==> c= f0 f1 c= c==> c~ c= f1 cNIL c==> cIN f2 * part cset_of_list f1 cIN f2 * part cset_of_list cflatten cfilter * part cfinal_list f3 cAPPEND creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f3 f4 f5 f6 f7 cNIL c==> cIN f2 * part cset_of_list f1 cIN f2 * part cset_of_list cflatten cfilter * part cfinal_list f3 cAPPEND creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f3 f4 f5 f6 f7 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r2) /\ (((final_list L) r1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r1) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= f9 cFST csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> cMEM f10 f7 c==> cMEM f11 f9 c==> cfinal_list f0 f7 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f6 f1 f4 c/\ c~ cfinal_list f0 f1 c/\ c= cl'z f0 f6 f1 f4 f2 c/\ c= cl'y f0 f1 f4 f5 c/\ c= cprev_el f1 f2 f3 c/\ cfinal_list f0 f9 c/\ cfinal_list f0 f7 c/\ c= cSND csplit_normal_list f0 f1 f8 f5 f3 f7 c/\ c= cFST csplit_normal_list f0 f1 f8 f5 f3 f9 c/\ c= cfind_face f0 f4 f8 c/\ cMEM f11 f9 cMEM f10 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ (~ (r' = NIL)), (r' = s), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))), ((final_list L) r2) |- (!x. ((x IN (set_of_list s)) ==> (x IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c==> c~ c= f0 cNIL c==> c= f0 f1 c==> c= f2 cSND csplit_normal_list f3 f4 f5 f6 f7 c==> cMEM f2 creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f8 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cSND csplit_normal_list f3 f4 f5 f6 f7 c==> cfinal_list f3 f2 ! c==> cIN b0 * part cset_of_list f1 cIN b0 * part cset_of_list cflatten cfilter * part cfinal_list f3 cAPPEND creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f3 f4 f5 f6 f7 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= cfind_face f0 f3 f4 c==> c< cindexf f5 f8 f4 cindexf f5 f6 f4 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f8 f4 c==> cMEM f6 f4 c==> cMEM f2 f1 c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
+ (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (((MEM v) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c= f6 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f7 f0 c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 c==> cfinal_list f1 f6 c==> c= cfind_face f1 f4 f3 c==> cMEM cSND csplit_normal_list f1 f2 f3 f4 f5 cntrans f1 f8 f2 f9 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cloop_list f1 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f10 cSND csplit_normal_list f1 f2 f3 f4 f5 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f8 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= cfind_face f0 f8 f4 c==> c< cindexf f5 f8 f4 cindexf f5 f6 f4 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f8 f4 c==> cMEM f6 f4 c==> cMEM f2 f1 c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c==> cMEM cSND csplit_normal_list f0 f2 f4 f8 f7 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
- |- ((?s. (r' = s)) ==> (?s. (r' = s)))
T c==> c? / c= f0 b0 c? / c= f0 b0
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) ==> ((\f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) f)) = ((\f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) f))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= c==> ! ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 * / ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 f1 * / ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 f1
- |- ((\z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) z1)
T * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ c= cSND csplit_normal_list b1 b3 f4 f1 b0 f3 c/\ cMEM f2 b2 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f3 cMEM f6 f2 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f6 c/\ c= cLAST b5 f5 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL f7
- (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cfind_face f0 f3 f4 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f10 f1 c/\ cMEM f2 f1 c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> cMEM f10 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> cfinal_list f0 f9 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
- |- ((\v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))) v)
T * / ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ cfinal_list b4 f1 c/\ cfinal_list b4 f2 c/\ c= cSND csplit_normal_list b4 b6 b1 b2 b3 f2 c/\ c= cFST csplit_normal_list b4 b6 b1 b2 b3 f1 c/\ c= cfind_face b4 b7 b1 c/\ cMEM b0 f2 cMEM f3 f1 c? / c/\ ccontour_list b4 b8 c/\ c~ c= b8 cNIL c/\ c= cHD b8 f3 c/\ c= cLAST b8 b0 cSUBSET * part cset_of_list b8 * part cset_of_list cflatten cfilter * part cfinal_list b4 ccat creplace b6 cCONS cSND csplit_normal_list b4 b6 b1 b2 b3 cNIL b5 cCONS cFST csplit_normal_list b4 b6 b1 b2 b3 cNIL f4
- |- (((A ==> (A \/ B)) ==> (A ==> (A \/ B))) = (A ==> (A \/ B)))
T c= c==> c==> f0 c\/ f0 f1 c==> f0 c\/ f0 f1 c==> f0 c\/ f0 f1
- |- (((!p. (!q. ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q))))) ==> ((\p. (!q. ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q))))) p)) = ((\p. (!q. ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q))))) p))
T c= c==> ! ! c= cLAST cAPPEND b0 b1 cCOND c= b1 cNIL cLAST b0 cLAST b1 * / ! c= cLAST cAPPEND b0 b1 cCOND c= b1 cNIL cLAST b0 cLAST b1 f0 * / ! c= cLAST cAPPEND b0 b1 cCOND c= b1 cNIL cLAST b0 cLAST b1 f0
- |- ((!A. (!B. (A ==> (B \/ A)))) = ((!B. (T ==> (B \/ T))) /\ (!B. (F ==> (B \/ F)))))
T c= ! ! c==> b0 c\/ b1 b0 c/\ ! c==> cT c\/ b0 cT ! c==> cF c\/ b0 cF
- |- ((!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))) = T)
T c= ! ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 b0 c/\ c= cprev_el b4 f0 b1 c/\ cfinal_list b2 f1 c/\ cfinal_list b2 f2 c/\ cMEM f2 b3 c/\ c= cFST csplit_normal_list b2 b4 f3 b0 b1 f1 c/\ c= cfind_face b2 b5 f3 c/\ cMEM f4 f2 cMEM f5 f1 c? / c/\ ccontour_list b2 b6 c/\ c~ c= b6 cNIL c/\ c= cHD b6 f5 c/\ c= cLAST b6 f4 cSUBSET * part cset_of_list b6 * part cset_of_list cflatten cfilter * part cfinal_list b2 ccat creplace b4 cCONS cSND csplit_normal_list b2 b4 f3 b0 b1 cNIL b3 cCONS cFST csplit_normal_list b2 b4 f3 b0 b1 cNIL cT
- (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f2 f1 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> cMEM f4 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> cfinal_list f0 f9 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- |- ((\z. (!r1. (!r2. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r1) /\ ((MEM u) r2)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))) z)
T * / ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b8 c/\ cgood_list_nodes b8 c/\ cmarked_list b8 b9 b10 b11 c/\ c~ cfinal_list b8 b10 c/\ c= cl'z b8 b9 b10 b11 b0 c/\ c= cl'y b8 b10 b11 b6 c/\ c= cprev_el b10 b0 b7 c/\ cfinal_list b8 b1 c/\ cfinal_list b8 b2 c/\ c= cSND csplit_normal_list b8 b10 b5 b6 b7 b2 c/\ c= cFST csplit_normal_list b8 b10 b5 b6 b7 b1 c/\ c= cfind_face b8 b11 b5 c/\ cMEM b4 b1 cMEM b3 b2 c? / c/\ ccontour_list b8 b12 c/\ c~ c= b12 cNIL c/\ c= cHD b12 b3 c/\ c= cLAST b12 b4 cSUBSET * part cset_of_list b12 * part cset_of_list cflatten cfilter * part cfinal_list b8 ccat creplace b10 cCONS cSND csplit_normal_list b8 b10 b5 b6 b7 cNIL b9 cCONS cFST csplit_normal_list b8 b10 b5 b6 b7 cNIL f0
- |- (((~ (A ==> (B \/ A))) ==> F) ==> ((~ (A ==> (B \/ A))) ==> F))
T c==> c==> c~ c==> f0 c\/ f1 f0 cF c==> c~ c==> f0 c\/ f1 f0 cF
- |- (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F))
T c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
- (~ (r' = NIL)), (r' = s) |- (((~ (NIL = s)) ==> ((NIL = s) = F)) = ((NIL = s) = F))
T c==> c~ c= f0 cNIL c==> c= f0 f1 c= c==> c~ c= cNIL f1 c= c= cNIL f1 cF c= c= cNIL f1 cF
- (~ ((final_list L) r)), (x' IN (set_of_list ((final_dart_list L) N))) |- ((x' IN (set_of_list ((final_dart_list L) N))) /\ (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> c~ cfinal_list f0 f1 c==> cIN f2 * part cset_of_list cfinal_dart_list f0 f3 c/\ cIN f2 * part cset_of_list cfinal_dart_list f0 f3 cIN f2 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f4 f5 f6 cNIL f3 cCONS cFST csplit_normal_list f0 f1 f4 f5 f6 cNIL
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r2) N) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cMEM f11 f6 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f8 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f11 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r1) N) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f9 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f10 f8 c==> cMEM f11 f9 c==> cMEM f9 f6 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- |- (((!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))) ==> ((\y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))) y)) = ((\y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))) y))
T c= c==> ! ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 b0 c/\ c= cprev_el b4 f0 b1 c/\ cfinal_list b2 f1 c/\ cfinal_list b2 f2 c/\ c= cSND csplit_normal_list b2 b4 f3 b0 b1 f2 c/\ c= cFST csplit_normal_list b2 b4 f3 b0 b1 f1 c/\ c= cfind_face b2 b5 f3 c/\ cMEM f4 f2 cMEM f5 f1 c? / c/\ ccontour_list b2 b6 c/\ c~ c= b6 cNIL c/\ c= cHD b6 f5 c/\ c= cLAST b6 f4 cSUBSET * part cset_of_list b6 * part cset_of_list cflatten cfilter * part cfinal_list b2 ccat creplace b4 cCONS cSND csplit_normal_list b2 b4 f3 b0 b1 cNIL b3 cCONS cFST csplit_normal_list b2 b4 f3 b0 b1 cNIL * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 b0 c/\ c= cprev_el b4 f0 b1 c/\ cfinal_list b2 f1 c/\ cfinal_list b2 f2 c/\ c= cSND csplit_normal_list b2 b4 f3 b0 b1 f2 c/\ c= cFST csplit_normal_list b2 b4 f3 b0 b1 f1 c/\ c= cfind_face b2 b5 f3 c/\ cMEM f4 f2 cMEM f5 f1 c? / c/\ ccontour_list b2 b6 c/\ c~ c= b6 cNIL c/\ c= cHD b6 f5 c/\ c= cLAST b6 f4 cSUBSET * part cset_of_list b6 * part cset_of_list cflatten cfilter * part cfinal_list b2 ccat creplace b4 cCONS cSND csplit_normal_list b2 b4 f3 b0 b1 cNIL b3 cCONS cFST csplit_normal_list b2 b4 f3 b0 b1 cNIL f6 * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 b0 c/\ c= cprev_el b4 f0 b1 c/\ cfinal_list b2 f1 c/\ cfinal_list b2 f2 c/\ c= cSND csplit_normal_list b2 b4 f3 b0 b1 f2 c/\ c= cFST csplit_normal_list b2 b4 f3 b0 b1 f1 c/\ c= cfind_face b2 b5 f3 c/\ cMEM f4 f2 cMEM f5 f1 c? / c/\ ccontour_list b2 b6 c/\ c~ c= b6 cNIL c/\ c= cHD b6 f5 c/\ c= cLAST b6 f4 cSUBSET * part cset_of_list b6 * part cset_of_list cflatten cfilter * part cfinal_list b2 ccat creplace b4 cCONS cSND csplit_normal_list b2 b4 f3 b0 b1 cNIL b3 cCONS cFST csplit_normal_list b2 b4 f3 b0 b1 cNIL f6
- |- ((((~ (A ==> (B \/ A))) ==> F) ==> ((~ (A ==> (B \/ A))) ==> F)) ==> (((~ (A ==> (B \/ A))) ==> F) ==> ((~ (A ==> (B \/ A))) ==> F)))
T c==> c==> c==> c~ c==> f0 c\/ f1 f0 cF c==> c~ c==> f0 c\/ f1 f0 cF c==> c==> c~ c==> f0 c\/ f1 f0 cF c==> c~ c==> f0 c\/ f1 f0 cF
- |- ((((next_el f) x) = w) = ((\w. (((next_el f) x) = w)) w))
T c= c= cnext_el f0 f1 f2 * / c= cnext_el f0 f1 b0 f2
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM z) f) /\ (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c= f8 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f9 f4 c==> cMEM f10 f8 c==> cMEM f6 f1 c==> cMEM f11 f1 c==> cMEM f5 f12 c==> cMEM f8 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f12 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f8 c/\ cMEM f11 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f11 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cSND csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f12 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cSND csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f12 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f2 f1 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> cMEM f6 f1 c==> cMEM f4 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- |- (((!z. (!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))) ==> ((\z. (!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))) z)) = ((\z. (!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))) z))
T c= c==> ! ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b8 c/\ cgood_list_nodes b8 c/\ cmarked_list b8 b9 b10 b11 c/\ c~ cfinal_list b8 b10 c/\ c= cl'z b8 b9 b10 b11 b0 c/\ c= cl'y b8 b10 b11 b6 c/\ c= cprev_el b10 b0 b7 c/\ cfinal_list b8 b2 c/\ cfinal_list b8 b1 c/\ c= cSND csplit_normal_list b8 b10 b5 b6 b7 b1 c/\ cMEM b2 b9 c/\ c= cfind_face b8 b11 b5 c/\ cMEM b4 b1 cMEM b3 b2 c? / c/\ ccontour_list b8 b12 c/\ c~ c= b12 cNIL c/\ c= cHD b12 b3 c/\ c= cLAST b12 b4 cSUBSET * part cset_of_list b12 * part cset_of_list cflatten cfilter * part cfinal_list b8 ccat creplace b10 cCONS cSND csplit_normal_list b8 b10 b5 b6 b7 cNIL b9 cCONS cFST csplit_normal_list b8 b10 b5 b6 b7 cNIL * / ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b8 c/\ cgood_list_nodes b8 c/\ cmarked_list b8 b9 b10 b11 c/\ c~ cfinal_list b8 b10 c/\ c= cl'z b8 b9 b10 b11 b0 c/\ c= cl'y b8 b10 b11 b6 c/\ c= cprev_el b10 b0 b7 c/\ cfinal_list b8 b2 c/\ cfinal_list b8 b1 c/\ c= cSND csplit_normal_list b8 b10 b5 b6 b7 b1 c/\ cMEM b2 b9 c/\ c= cfind_face b8 b11 b5 c/\ cMEM b4 b1 cMEM b3 b2 c? / c/\ ccontour_list b8 b12 c/\ c~ c= b12 cNIL c/\ c= cHD b12 b3 c/\ c= cLAST b12 b4 cSUBSET * part cset_of_list b12 * part cset_of_list cflatten cfilter * part cfinal_list b8 ccat creplace b10 cCONS cSND csplit_normal_list b8 b10 b5 b6 b7 cNIL b9 cCONS cFST csplit_normal_list b8 b10 b5 b6 b7 cNIL f0 * / ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b8 c/\ cgood_list_nodes b8 c/\ cmarked_list b8 b9 b10 b11 c/\ c~ cfinal_list b8 b10 c/\ c= cl'z b8 b9 b10 b11 b0 c/\ c= cl'y b8 b10 b11 b6 c/\ c= cprev_el b10 b0 b7 c/\ cfinal_list b8 b2 c/\ cfinal_list b8 b1 c/\ c= cSND csplit_normal_list b8 b10 b5 b6 b7 b1 c/\ cMEM b2 b9 c/\ c= cfind_face b8 b11 b5 c/\ cMEM b4 b1 cMEM b3 b2 c? / c/\ ccontour_list b8 b12 c/\ c~ c= b12 cNIL c/\ c= cHD b12 b3 c/\ c= cLAST b12 b4 cSUBSET * part cset_of_list b12 * part cset_of_list cflatten cfilter * part cfinal_list b8 ccat creplace b10 cCONS cSND csplit_normal_list b8 b10 b5 b6 b7 cNIL b9 cCONS cFST csplit_normal_list b8 b10 b5 b6 b7 cNIL f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) /\ (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cmarked_list f0 f6 f1 f4 c/\ c= cprev_el f1 f2 f3 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 c==> c= cfind_face f0 f4 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cMEM f1 f6 c==> c= f7 cSND csplit_normal_list f0 f1 f9 f5 f3 c==> c= f8 cSND csplit_normal_list f0 f1 f9 f5 f3 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL
- (~ (r' = NIL)) |- (~ (NIL = r'))
T c==> c~ c= f0 cNIL c~ c= cNIL f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (FST (((((split_normal_list L) r) f) y) z1))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (FST (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) /\ ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f5 f6 c==> c= f7 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c\/ cMEM f7 f8 c/\ cMEM f1 f8 c= f7 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f1 f8 c= f9 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c< cindexf f6 f3 f2 cindexf f6 f10 f2 c==> cMEM f11 f7 c==> cMEM f12 f9 c==> cMEM f3 f2 c==> cMEM f10 f2 c==> cMEM cFST csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f8 f1 f5 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cfinal_list f0 f9 c/\ c= f7 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= f9 cFST csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
- |- (((!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))) ==> ((\v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))) v)) = ((\v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))) v))
T c= c==> ! ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ cfinal_list b4 f1 c/\ cfinal_list b4 f2 c/\ cMEM f2 b5 c/\ c= cFST csplit_normal_list b4 b6 b1 b2 b3 f1 c/\ c= cfind_face b4 b7 b1 c/\ cMEM b0 f2 cMEM f3 f1 c? / c/\ ccontour_list b4 b8 c/\ c~ c= b8 cNIL c/\ c= cHD b8 f3 c/\ c= cLAST b8 b0 cSUBSET * part cset_of_list b8 * part cset_of_list cflatten cfilter * part cfinal_list b4 ccat creplace b6 cCONS cSND csplit_normal_list b4 b6 b1 b2 b3 cNIL b5 cCONS cFST csplit_normal_list b4 b6 b1 b2 b3 cNIL * / ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ cfinal_list b4 f1 c/\ cfinal_list b4 f2 c/\ cMEM f2 b5 c/\ c= cFST csplit_normal_list b4 b6 b1 b2 b3 f1 c/\ c= cfind_face b4 b7 b1 c/\ cMEM b0 f2 cMEM f3 f1 c? / c/\ ccontour_list b4 b8 c/\ c~ c= b8 cNIL c/\ c= cHD b8 f3 c/\ c= cLAST b8 b0 cSUBSET * part cset_of_list b8 * part cset_of_list cflatten cfilter * part cfinal_list b4 ccat creplace b6 cCONS cSND csplit_normal_list b4 b6 b1 b2 b3 cNIL b5 cCONS cFST csplit_normal_list b4 b6 b1 b2 b3 cNIL f4 * / ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ cfinal_list b4 f1 c/\ cfinal_list b4 f2 c/\ cMEM f2 b5 c/\ c= cFST csplit_normal_list b4 b6 b1 b2 b3 f1 c/\ c= cfind_face b4 b7 b1 c/\ cMEM b0 f2 cMEM f3 f1 c? / c/\ ccontour_list b4 b8 c/\ c~ c= b8 cNIL c/\ c= cHD b8 f3 c/\ c= cLAST b8 b0 cSUBSET * part cset_of_list b8 * part cset_of_list cflatten cfilter * part cfinal_list b4 ccat creplace b6 cCONS cSND csplit_normal_list b4 b6 b1 b2 b3 cNIL b5 cCONS cFST csplit_normal_list b4 b6 b1 b2 b3 cNIL f4
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))), ((~ (x = f)) /\ ((MEM x) g)) |- ((!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) /\ ((MEM x) (((replace f) xs) g)))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c==> c/\ c~ c= f0 f1 cMEM f0 f2 c/\ ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 cMEM f0 creplace f1 f3 f2
- ((\s. (r' = s)) s) |- (((r' = s) ==> (?s. (r' = s))) = (?s. (r' = s)))
T c==> * / c= f0 b0 f1 c= c==> c= f0 f1 c? / c= f0 b0 c? / c= f0 b0
- |- ((\m. ((HD ((APPEND l) m)) = (((COND (l = NIL)) (HD m)) (HD l)))) m)
T * / c= cHD cAPPEND f0 b0 cCOND c= f0 cNIL cHD b0 cHD f0 f1
- (r2 = (FST (((((split_normal_list L) r) f) y) z1))), (x' IN (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))), ((final_list L) r2) |- ((x' IN (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) /\ (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> c= f0 cFST csplit_normal_list f1 f2 f3 f4 f5 c==> cIN f6 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5 c==> cfinal_list f1 f0 c/\ cIN f6 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5 cIN f6 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f7 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
- |- (((POWER f) (SUC n)) = (((POWER f) n) o f))
T c= * * part cPOWER f0 cSUC f1 * * part co * * part cPOWER f0 f1 f0
- (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) |- (((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))) = T)
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c= c==> c/\ cMEM f2 cfinal_dart_list f0 f1 cMEM f3 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f2 c/\ c= cLAST b0 f3 cSUBSET * part cset_of_list b0 * part cset_of_list cfinal_dart_list f0 f1 cT
- |- (((!z. (!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))) ==> ((\z. (!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))) z)) = ((\z. (!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))) z))
T c= c==> ! ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b8 c/\ cgood_list_nodes b8 c/\ cmarked_list b8 b9 b10 b11 c/\ c~ cfinal_list b8 b10 c/\ c= cl'z b8 b9 b10 b11 b0 c/\ c= cl'y b8 b10 b11 b6 c/\ c= cprev_el b10 b0 b7 c/\ cfinal_list b8 b2 c/\ cfinal_list b8 b1 c/\ cMEM b2 b9 c/\ c= cFST csplit_normal_list b8 b10 b5 b6 b7 b1 c/\ c= cfind_face b8 b11 b5 c/\ cMEM b4 b1 cMEM b3 b2 c? / c/\ ccontour_list b8 b12 c/\ c~ c= b12 cNIL c/\ c= cHD b12 b3 c/\ c= cLAST b12 b4 cSUBSET * part cset_of_list b12 * part cset_of_list cflatten cfilter * part cfinal_list b8 ccat creplace b10 cCONS cSND csplit_normal_list b8 b10 b5 b6 b7 cNIL b9 cCONS cFST csplit_normal_list b8 b10 b5 b6 b7 cNIL * / ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b8 c/\ cgood_list_nodes b8 c/\ cmarked_list b8 b9 b10 b11 c/\ c~ cfinal_list b8 b10 c/\ c= cl'z b8 b9 b10 b11 b0 c/\ c= cl'y b8 b10 b11 b6 c/\ c= cprev_el b10 b0 b7 c/\ cfinal_list b8 b2 c/\ cfinal_list b8 b1 c/\ cMEM b2 b9 c/\ c= cFST csplit_normal_list b8 b10 b5 b6 b7 b1 c/\ c= cfind_face b8 b11 b5 c/\ cMEM b4 b1 cMEM b3 b2 c? / c/\ ccontour_list b8 b12 c/\ c~ c= b12 cNIL c/\ c= cHD b12 b3 c/\ c= cLAST b12 b4 cSUBSET * part cset_of_list b12 * part cset_of_list cflatten cfilter * part cfinal_list b8 ccat creplace b10 cCONS cSND csplit_normal_list b8 b10 b5 b6 b7 cNIL b9 cCONS cFST csplit_normal_list b8 b10 b5 b6 b7 cNIL f0 * / ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b8 c/\ cgood_list_nodes b8 c/\ cmarked_list b8 b9 b10 b11 c/\ c~ cfinal_list b8 b10 c/\ c= cl'z b8 b9 b10 b11 b0 c/\ c= cl'y b8 b10 b11 b6 c/\ c= cprev_el b10 b0 b7 c/\ cfinal_list b8 b2 c/\ cfinal_list b8 b1 c/\ cMEM b2 b9 c/\ c= cFST csplit_normal_list b8 b10 b5 b6 b7 b1 c/\ c= cfind_face b8 b11 b5 c/\ cMEM b4 b1 cMEM b3 b2 c? / c/\ ccontour_list b8 b12 c/\ c~ c= b12 cNIL c/\ c= cHD b12 b3 c/\ c= cLAST b12 b4 cSUBSET * part cset_of_list b12 * part cset_of_list cflatten cfilter * part cfinal_list b8 ccat creplace b10 cCONS cSND csplit_normal_list b8 b10 b5 b6 b7 cNIL b9 cCONS cFST csplit_normal_list b8 b10 b5 b6 b7 cNIL f0
- |- (((!A. (!B. ((~ (A ==> (B \/ A))) ==> F))) ==> ((\A. (!B. ((~ (A ==> (B \/ A))) ==> F))) A)) = ((\A. (!B. ((~ (A ==> (B \/ A))) ==> F))) A))
T c= c==> ! ! c==> c~ c==> b0 c\/ b1 b0 cF * / ! c==> c~ c==> b0 c\/ b1 b0 cF f0 * / ! c==> c~ c==> b0 c\/ b1 b0 cF f0
- |- (((!n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) ==> ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n)) = ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n))
T c= c==> ! c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1 * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1
- |- ((!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 f0 b4 c/\ cfinal_list b5 f1 c/\ cfinal_list b5 f2 c/\ cMEM f2 b6 c/\ c= cFST csplit_normal_list b5 b7 b2 b3 b4 f1 c/\ c= cfind_face b5 b8 b2 c/\ cMEM b1 f2 cMEM b0 f1 c? / c/\ ccontour_list b5 b9 c/\ c~ c= b9 cNIL c/\ c= cHD b9 b0 c/\ c= cLAST b9 b1 cSUBSET * part cset_of_list b9 * part cset_of_list cflatten cfilter * part cfinal_list b5 ccat creplace b7 cCONS cSND csplit_normal_list b5 b7 b2 b3 b4 cNIL b6 cCONS cFST csplit_normal_list b5 b7 b2 b3 b4 cNIL cT
- (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> cMEM f10 f6 c==> cMEM f11 f9 c==> cMEM f2 f1 c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c==> cfinal_list f0 f9 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f7 f4 c==> cMEM f12 f4 c==> c< cindexf f5 f7 f4 cindexf f5 f12 f4 c==> c= cfind_face f0 f7 f4 c==> cMEM cSND csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
- |- (((((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) ==> (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F))) = (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)))
T c= c==> c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
- |- (((!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))) ==> ((\r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))) r1)) = ((\r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))) r1))
T c= c==> ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c~ cfinal_list b6 b8 c/\ c= cl'z b6 b7 b8 b9 f0 c/\ c= cl'y b6 b8 b9 b4 c/\ c= cprev_el b8 f0 b5 c/\ cfinal_list b6 b0 c/\ cfinal_list b6 f1 c/\ cMEM b0 b7 c/\ c= cFST csplit_normal_list b6 b8 b3 b4 b5 f1 c/\ c= cfind_face b6 b9 b3 c/\ cMEM b2 f1 cMEM b1 b0 c? / c/\ ccontour_list b6 b10 c/\ c~ c= b10 cNIL c/\ c= cHD b10 b1 c/\ c= cLAST b10 b2 cSUBSET * part cset_of_list b10 * part cset_of_list cflatten cfilter * part cfinal_list b6 ccat creplace b8 cCONS cSND csplit_normal_list b6 b8 b3 b4 b5 cNIL b7 cCONS cFST csplit_normal_list b6 b8 b3 b4 b5 cNIL * / ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c~ cfinal_list b6 b8 c/\ c= cl'z b6 b7 b8 b9 f0 c/\ c= cl'y b6 b8 b9 b4 c/\ c= cprev_el b8 f0 b5 c/\ cfinal_list b6 b0 c/\ cfinal_list b6 f1 c/\ cMEM b0 b7 c/\ c= cFST csplit_normal_list b6 b8 b3 b4 b5 f1 c/\ c= cfind_face b6 b9 b3 c/\ cMEM b2 f1 cMEM b1 b0 c? / c/\ ccontour_list b6 b10 c/\ c~ c= b10 cNIL c/\ c= cHD b10 b1 c/\ c= cLAST b10 b2 cSUBSET * part cset_of_list b10 * part cset_of_list cflatten cfilter * part cfinal_list b6 ccat creplace b8 cCONS cSND csplit_normal_list b6 b8 b3 b4 b5 cNIL b7 cCONS cFST csplit_normal_list b6 b8 b3 b4 b5 cNIL f2 * / ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c~ cfinal_list b6 b8 c/\ c= cl'z b6 b7 b8 b9 f0 c/\ c= cl'y b6 b8 b9 b4 c/\ c= cprev_el b8 f0 b5 c/\ cfinal_list b6 b0 c/\ cfinal_list b6 f1 c/\ cMEM b0 b7 c/\ c= cFST csplit_normal_list b6 b8 b3 b4 b5 f1 c/\ c= cfind_face b6 b9 b3 c/\ cMEM b2 f1 cMEM b1 b0 c? / c/\ ccontour_list b6 b10 c/\ c~ c= b10 cNIL c/\ c= cHD b10 b1 c/\ c= cLAST b10 b2 cSUBSET * part cset_of_list b10 * part cset_of_list cflatten cfilter * part cfinal_list b6 ccat creplace b8 cCONS cSND csplit_normal_list b6 b8 b3 b4 b5 cNIL b7 cCONS cFST csplit_normal_list b6 b8 b3 b4 b5 cNIL f2
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0
- (uniq (list_of_darts L)), (((next_el f) x) = w), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((all (\l. (~ (l = NIL)))) L) /\ ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f4 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f9 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c= cfind_face f0 f7 f4 c==> c< cindexf f5 f7 f4 cindexf f5 f10 f4 c==> cMEM f11 f6 c==> cMEM f12 f9 c==> cMEM f7 f4 c==> cMEM f10 f4 c==> cMEM f2 f1 c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c==> cMEM cSND csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ cMEM cSND csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
- (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= f4 cSND csplit_normal_list f0 f2 f5 f6 f7 c==> c= f8 cSND csplit_normal_list f0 f2 f5 f6 f7 c==> cMEM f9 f4 c==> cMEM f10 f8 c==> cMEM f2 f1 c==> cMEM f8 creplace f2 cCONS cSND csplit_normal_list f0 f2 f5 f6 f7 cNIL f1 c==> cfinal_list f0 f8 c==> c= cnext_el f5 f3 f11 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 f5 c==> cMEM f12 f5 c==> c< cindexf f11 f6 f5 cindexf f11 f12 f5 c==> c= cfind_face f0 f6 f5 c==> cMEM cSND csplit_normal_list f0 f2 f5 f6 f7 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f2 f5 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f5 f6 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f5 f6 f7 cNIL
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> (((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 c\/ cMEM f7 f2 c/\ cMEM f1 f2 c= f7 cSND csplit_normal_list f0 f1 f9 f5 f6 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 c\/ cMEM f8 f2 c/\ cMEM f1 f2 c= f8 cSND csplit_normal_list f0 f1 f9 f5 f6 c==> ! c==> cMEM b0 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f3 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c< cindexf f3 f6 f1 cindexf f3 f10 f1 c==> cMEM f11 f4 c==> cMEM f12 f9 c==> cMEM f6 f1 c==> cMEM f10 f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f4 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f9 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- A |- ((A ==> (B \/ A)) ==> (B \/ A))
T c==> f0 c==> c==> f0 c\/ f1 f0 c\/ f1 f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c==> c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f6 f1 c/\ cMEM f2 f1 c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c< cindexf f5 f7 f4 cindexf f5 f10 f4 c==> cMEM f11 f6 c==> cMEM f12 f9 c==> cMEM f7 f4 c==> cMEM f10 f4 c==> cMEM f6 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> c= cfind_face f0 f7 f4 c==> cMEM cFST csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
- |- (((!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) ==> ((\z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) z1)) = ((\z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) z1))
T c= c==> ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ cMEM f2 b2 c/\ c= cFST csplit_normal_list b1 b3 f4 f1 b0 f3 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f3 cMEM f6 f2 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f6 c/\ c= cLAST b5 f5 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ cMEM f2 b2 c/\ c= cFST csplit_normal_list b1 b3 f4 f1 b0 f3 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f3 cMEM f6 f2 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f6 c/\ c= cLAST b5 f5 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL f7 * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ cMEM f2 b2 c/\ c= cFST csplit_normal_list b1 b3 f4 f1 b0 f3 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f3 cMEM f6 f2 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f6 c/\ c= cLAST b5 f5 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL f7
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((\d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) d)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 * / c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 f1
- (r1 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) /\ ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f6 f0 c==> cMEM f7 f8 c==> cMEM f2 f9 c==> cMEM f8 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f9 c==> cfinal_list f1 f8 c/\ c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c= f8 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c= cnext_el f3 f10 f11 c==> cuniq clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cMEM f4 f3 c==> cMEM f12 f3 c==> c< cindexf f11 f4 f3 cindexf f11 f12 f3 c==> c= cfind_face f1 f4 f3 c==> cMEM cSND csplit_normal_list f1 f2 f3 f4 f5 cntrans f1 f9 f2 f10 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cloop_list f1 cSND csplit_normal_list f1 f2 f3 f4 f5 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f6 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f9 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
- (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) ==> ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c/\ cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cl'y f0 f2 f3 f5 c==> c= cprev_el f2 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 c==> cMEM f8 creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cMEM f2 f1 c==> c= f7 cSND csplit_normal_list f0 f2 f9 f5 f6 c==> c= f8 cSND csplit_normal_list f0 f2 f9 f5 f6 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f3 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) N), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r1) N) /\ ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f9 f6 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f9 f6 c==> c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f11 f6 c/\ cMEM f1 f6 c= f11 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> (((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 c==> c= cprev_el f1 f5 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f1 f9 f3 f6 cNIL c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f9 f3 f6 cNIL c==> c= cfind_face f0 f2 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f3 f6 cNIL f4 c\/ cMEM f7 f4 c/\ cMEM f1 f4 c= f7 cSND csplit_normal_list f0 f1 f9 f3 f6 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f3 f6 cNIL f4 c\/ cMEM f8 f4 c/\ cMEM f1 f4 c= f8 cSND csplit_normal_list f0 f1 f9 f3 f6 c==> ! c==> cMEM b0 cntrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f2 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f3 f6 cNIL f4 cCONS cFST csplit_normal_list f0 f1 f9 f3 f6 cNIL
- |- ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))
T c==> c/\ cMEM f0 f1 cMEM f2 f3 cMEM f2 creplace f0 f3 f1
- |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))) = T)
T c= ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cprev_el b2 f0 f2 c/\ cfinal_list b0 f3 c/\ cfinal_list b0 f4 c/\ cMEM f4 b1 c/\ c= cFST csplit_normal_list b0 b2 f5 f1 f2 f3 c/\ c= cfind_face b0 b3 f5 c/\ cMEM f6 f4 cMEM f7 f3 c? / c/\ ccontour_list b0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 f7 c/\ c= cLAST b4 f6 cSUBSET * part cset_of_list b4 * part cset_of_list cflatten cfilter * part cfinal_list b0 ccat creplace b2 cCONS cSND csplit_normal_list b0 b2 f5 f1 f2 cNIL b1 cCONS cFST csplit_normal_list b0 b2 f5 f1 f2 cNIL cT
- |- ((?w. (((next_el f) x) = w)) ==> (?w. (((next_el f) x) = w)))
T c==> c? / c= cnext_el f0 f1 b0 c? / c= cnext_el f0 f1 b0
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 ! ! c==> c/\ c= b1 cLAST b0 c/\ cMEM b0 cparts f0 f4 c/\ cMEM f4 f1 c/\ c~ cfinal_list f0 f4 c~ cMEM b1 cs_list f0 f2 f3 cMEM ce_list b1 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1
- |- (((!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) ==> ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)) = ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
- |- ((\r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))) r2)
T * / ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b7 c/\ cgood_list_nodes b7 c/\ cmarked_list b7 b8 b9 b10 c/\ c~ cfinal_list b7 b9 c/\ c= cl'z b7 b8 b9 b10 f0 c/\ c= cl'y b7 b9 b10 b5 c/\ c= cprev_el b9 f0 b6 c/\ cfinal_list b7 b1 c/\ cfinal_list b7 b0 c/\ c= cSND csplit_normal_list b7 b9 b4 b5 b6 b0 c/\ c= cFST csplit_normal_list b7 b9 b4 b5 b6 b1 c/\ c= cfind_face b7 b10 b4 c/\ cMEM b3 b0 cMEM b2 b1 c? / c/\ ccontour_list b7 b11 c/\ c~ c= b11 cNIL c/\ c= cHD b11 b2 c/\ c= cLAST b11 b3 cSUBSET * part cset_of_list b11 * part cset_of_list cflatten cfilter * part cfinal_list b7 ccat creplace b9 cCONS cSND csplit_normal_list b7 b9 b4 b5 b6 cNIL b8 cCONS cFST csplit_normal_list b7 b9 b4 b5 b6 cNIL f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((((indexf w) y) f) < (((indexf w) z) f)) /\ ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f2 f1 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c< cindexf f3 f6 f1 cindexf f3 f10 f1 c==> cMEM f11 f4 c==> cMEM f12 f9 c==> cMEM f6 f1 c==> cMEM f10 f1 c==> cMEM f4 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ c< cindexf f3 f6 f1 cindexf f3 f10 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (SND (((((split_normal_list L) r) f) y) z1))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cSND csplit_normal_list f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f5 f6 c==> c= f7 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c= f8 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c< cindexf f6 f3 f2 cindexf f6 f9 f2 c==> cMEM f10 f7 c==> cMEM f11 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f3 f2 c==> cMEM f9 f2 c==> cMEM f1 f12 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f12 c==> cMEM cSND csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f12 f1 f5 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> cfinal_list f0 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f12 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- (?l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM d) l))), (~ ((final_list L) r)) |- ((?l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM d) l))) /\ (?l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l))))
T c==> c? / c/\ c/\ cfinal_list f0 b0 cMEM b0 f1 cMEM f2 b0 c==> c~ cfinal_list f0 f3 c/\ c? / c/\ c/\ cfinal_list f0 b0 cMEM b0 f1 cMEM f2 b0 c? / c/\ c/\ cfinal_list f0 b0 c\/ cMEM b0 creplace f3 cCONS cSND csplit_normal_list f0 f3 f4 f5 f6 cNIL f1 cMEM b0 cCONS cFST csplit_normal_list f0 f3 f4 f5 f6 cNIL cMEM f2 b0
- |- ((!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))) = T)
T c= ! ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 b0 c/\ c= cprev_el b4 f0 b1 c/\ cfinal_list b2 f1 c/\ cfinal_list b2 f2 c/\ c= cSND csplit_normal_list b2 b4 f3 b0 b1 f2 c/\ cMEM f1 b3 c/\ c= cfind_face b2 b5 f3 c/\ cMEM f4 f2 cMEM f5 f1 c? / c/\ ccontour_list b2 b6 c/\ c~ c= b6 cNIL c/\ c= cHD b6 f5 c/\ c= cLAST b6 f4 cSUBSET * part cset_of_list b6 * part cset_of_list cflatten cfilter * part cfinal_list b2 ccat creplace b4 cCONS cSND csplit_normal_list b2 b4 f3 b0 b1 cNIL b3 cCONS cFST csplit_normal_list b2 b4 f3 b0 b1 cNIL cT
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))) = T)
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c= c==> c/\ c~ c= f0 f1 cMEM f0 f2 cMEM f0 creplace f1 f3 f2 cT
- (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))
T c==> c= cfind_face f0 f1 f2 c==> c==> cMEM f3 creplace f4 cCONS cSND csplit_normal_list f0 f4 f2 f5 f6 cNIL f7 c\/ cMEM f3 f7 c/\ cMEM f4 f7 c= f3 cSND csplit_normal_list f0 f4 f2 f5 f6 c==> cMEM f8 f3 c==> cMEM f9 f10 c==> cMEM f3 cCONS cFST csplit_normal_list f0 f4 f2 f5 f6 cNIL c==> cMEM f10 cCONS cFST csplit_normal_list f0 f4 f2 f5 f6 cNIL c==> cfinal_list f0 f10 c==> c==> cMEM f10 creplace f4 cCONS cSND csplit_normal_list f0 f4 f2 f5 f6 cNIL f7 c\/ cMEM f10 f7 c/\ cMEM f4 f7 c= f10 cSND csplit_normal_list f0 f4 f2 f5 f6 c==> c= cnext_el f2 f1 f11 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f5 f2 c==> cMEM f12 f2 c==> c< cindexf f11 f5 f2 cindexf f11 f12 f2 c==> c= cfind_face f0 f5 f2 c==> cMEM cFST csplit_normal_list f0 f4 f2 f5 f6 cntrans f0 f7 f4 f1 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f4 f2 f5 f6 c==> cloop_list f0 cFST csplit_normal_list f0 f4 f2 f5 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f9 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f4 cCONS cSND csplit_normal_list f0 f4 f2 f5 f6 cNIL f7 cCONS cFST csplit_normal_list f0 f4 f2 f5 f6 cNIL
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))
T c==> c= cnext_el f0 f1 f2 c==> c= f3 cSND csplit_normal_list f4 f5 f0 f6 f7 c==> c= f8 cSND csplit_normal_list f4 f5 f0 f6 f7 c==> cMEM f9 f3 c==> cMEM f10 f8 c==> cMEM f5 f11 c==> cMEM f8 creplace f5 cCONS cSND csplit_normal_list f4 f5 f0 f6 f7 cNIL f11 c==> cfinal_list f4 f8 c==> cuniq clist_of_darts f4 c==> call / c~ c= b0 cNIL f4 c==> ! c==> cMEM b0 clist_of_darts f4 cMEM c, cSND b0 cFST b0 clist_of_darts f4 c==> cMEM f6 f0 c==> cMEM f12 f0 c==> c< cindexf f2 f6 f0 cindexf f2 f12 f0 c==> c= cfind_face f4 f6 f0 c==> cMEM cSND csplit_normal_list f4 f5 f0 f6 f7 cntrans f4 f11 f5 f1 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f4 f5 f0 f6 f7 c==> cloop_list f4 cSND csplit_normal_list f4 f5 f0 f6 f7 c? / c/\ ccontour_list f4 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f4 ccat creplace f5 cCONS cSND csplit_normal_list f4 f5 f0 f6 f7 cNIL f11 cCONS cFST csplit_normal_list f4 f5 f0 f6 f7 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (FST (((((split_normal_list L) r) f) y) z1))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f5 f6 c==> c= cfind_face f0 f3 f2 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c\/ cMEM f7 f8 c/\ cMEM f1 f8 c= f7 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f1 f8 c= f9 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c< cindexf f6 f3 f2 cindexf f6 f10 f2 c==> cMEM f11 f7 c==> cMEM f12 f9 c==> cMEM f3 f2 c==> cMEM f10 f2 c==> cMEM cFST csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f8 f1 f5 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cfinal_list f0 f9 c==> c= f7 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= f9 cFST csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
- |- ((!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) ==> (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3
- (~ (A ==> (A \/ B))) |- F
T c==> c~ c==> f0 c\/ f0 f1 cF
- |- ((!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b7 c/\ cgood_list_nodes b7 c/\ cmarked_list b7 b8 b9 b10 c/\ c~ cfinal_list b7 b9 c/\ c= cl'z b7 b8 b9 b10 f0 c/\ c= cl'y b7 b9 b10 b5 c/\ c= cprev_el b9 f0 b6 c/\ cfinal_list b7 b1 c/\ cfinal_list b7 b0 c/\ c= cSND csplit_normal_list b7 b9 b4 b5 b6 b0 c/\ cMEM b1 b8 c/\ c= cfind_face b7 b10 b4 c/\ cMEM b3 b0 cMEM b2 b1 c? / c/\ ccontour_list b7 b11 c/\ c~ c= b11 cNIL c/\ c= cHD b11 b2 c/\ c= cLAST b11 b3 cSUBSET * part cset_of_list b11 * part cset_of_list cflatten cfilter * part cfinal_list b7 ccat creplace b9 cCONS cSND csplit_normal_list b7 b9 b4 b5 b6 cNIL b8 cCONS cFST csplit_normal_list b7 b9 b4 b5 b6 cNIL cT
- |- ((\u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))) u)
T * / ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 f0 b4 c/\ cfinal_list b5 f1 c/\ cfinal_list b5 f2 c/\ c= cSND csplit_normal_list b5 b7 b2 b3 b4 f2 c/\ c= cFST csplit_normal_list b5 b7 b2 b3 b4 f1 c/\ c= cfind_face b5 b8 b2 c/\ cMEM b1 f2 cMEM b0 f1 c? / c/\ ccontour_list b5 b9 c/\ c~ c= b9 cNIL c/\ c= cHD b9 b0 c/\ c= cLAST b9 b1 cSUBSET * part cset_of_list b9 * part cset_of_list cflatten cfilter * part cfinal_list b5 ccat creplace b7 cCONS cSND csplit_normal_list b5 b7 b2 b3 b4 cNIL b6 cCONS cFST csplit_normal_list b5 b7 b2 b3 b4 cNIL f3
- (~ ((final_list L) r)), (l = r), ((MEM d) l), ((MEM l) N), ((final_list L) l) |- F
T c==> c~ cfinal_list f0 f1 c==> c= f2 f1 c==> cMEM f3 f2 c==> cMEM f2 f4 c==> cfinal_list f0 f2 cF
- (r' = s) |- ((r' = s) /\ (?s. (r' = s)))
T c==> c= f0 f1 c/\ c= f0 f1 c? / c= f0 b0
- |- ((\z. (!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))) z)
T * / ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b8 c/\ cgood_list_nodes b8 c/\ cmarked_list b8 b9 b10 b11 c/\ c~ cfinal_list b8 b10 c/\ c= cl'z b8 b9 b10 b11 b0 c/\ c= cl'y b8 b10 b11 b6 c/\ c= cprev_el b10 b0 b7 c/\ cfinal_list b8 b2 c/\ cfinal_list b8 b1 c/\ c= cSND csplit_normal_list b8 b10 b5 b6 b7 b1 c/\ c= cFST csplit_normal_list b8 b10 b5 b6 b7 b2 c/\ c= cfind_face b8 b11 b5 c/\ cMEM b4 b1 cMEM b3 b2 c? / c/\ ccontour_list b8 b12 c/\ c~ c= b12 cNIL c/\ c= cHD b12 b3 c/\ c= cLAST b12 b4 cSUBSET * part cset_of_list b12 * part cset_of_list cflatten cfilter * part cfinal_list b8 ccat creplace b10 cCONS cSND csplit_normal_list b8 b10 b5 b6 b7 cNIL b9 cCONS cFST csplit_normal_list b8 b10 b5 b6 b7 cNIL f0
- |- ((!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) = T)
T c= ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ cMEM f3 b2 c/\ c= cFST csplit_normal_list b1 b3 f4 f1 b0 f2 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f3 cMEM f6 f2 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f6 c/\ c= cLAST b5 f5 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL cT
- |- (((!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- (((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c==> c= cfind_face f0 f6 f4 c==> c==> cMEM f7 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f6 f8 cNIL f1 c\/ cMEM f7 f1 c/\ cMEM f2 f1 c= f7 cSND csplit_normal_list f0 f2 f4 f6 f8 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f6 f8 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f6 f8 c==> c< cindexf f5 f6 f4 cindexf f5 f10 f4 c==> cMEM f11 f7 c==> cMEM f12 f9 c==> cMEM f6 f4 c==> cMEM f10 f4 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f2 f4 f6 f8 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f6 f8 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> cMEM cFST csplit_normal_list f0 f2 f4 f6 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f2 f4 f6 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f6 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f6 f8 cNIL
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'z f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cMEM f1 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f9 f5 f6 c==> c= f8 cSND csplit_normal_list f0 f1 f9 f5 f6 c==> ! c==> cMEM b0 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f3 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL
- |- ((!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ cfinal_list b4 f1 c/\ cfinal_list b4 f2 c/\ cMEM f1 b5 c/\ c= cFST csplit_normal_list b4 b6 b1 b2 b3 f2 c/\ c= cfind_face b4 b7 b1 c/\ cMEM b0 f2 cMEM f3 f1 c? / c/\ ccontour_list b4 b8 c/\ c~ c= b8 cNIL c/\ c= cHD b8 f3 c/\ c= cLAST b8 b0 cSUBSET * part cset_of_list b8 * part cset_of_list cflatten cfilter * part cfinal_list b4 ccat creplace b6 cCONS cSND csplit_normal_list b4 b6 b1 b2 b3 cNIL b5 cCONS cFST csplit_normal_list b4 b6 b1 b2 b3 cNIL cT
- |- ((!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 f0 b4 c/\ cfinal_list b5 f1 c/\ cfinal_list b5 f2 c/\ c= cSND csplit_normal_list b5 b7 b2 b3 b4 f2 c/\ cMEM f1 b6 c/\ c= cfind_face b5 b8 b2 c/\ cMEM b1 f2 cMEM b0 f1 c? / c/\ ccontour_list b5 b9 c/\ c~ c= b9 cNIL c/\ c= cHD b9 b0 c/\ c= cLAST b9 b1 cSUBSET * part cset_of_list b9 * part cset_of_list cflatten cfilter * part cfinal_list b5 ccat creplace b7 cCONS cSND csplit_normal_list b5 b7 b2 b3 b4 cNIL b6 cCONS cFST csplit_normal_list b5 b7 b2 b3 b4 cNIL cT
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))) xs)
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 * / ! c==> c/\ c~ c= f0 f1 cMEM f0 b1 cMEM f0 creplace f1 b0 b1 f2
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'z f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c/\ c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cMEM f1 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f9 f5 f6 c==> c= f8 cSND csplit_normal_list f0 f1 f9 f5 f6 c==> ! c==> cMEM b0 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f3 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL
- (~ (r' = NIL)), (r' = s) |- ((NIL = s) = F)
T c==> c~ c= f0 cNIL c==> c= f0 f1 c= c= cNIL f1 cF
- ((\s. (r' = s)) s) |- (((\s. (r' = s)) s) /\ (?s. (r' = s)))
T c==> * / c= f0 b0 f1 c/\ * / c= f0 b0 f1 c? / c= f0 b0
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 ! c==> c/\ c~ c= f0 f1 cMEM f0 b0 cMEM f0 creplace f1 f2 b0
- ((~ (x = f)) /\ ((MEM x) g)) |- ((!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) ==> ((MEM x) (((replace f) xs) g)))
T c==> c/\ c~ c= f0 f1 cMEM f0 f2 c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 cMEM f0 creplace f1 f3 f2
- (((next_el f) x) = w), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((final_list L) r2) |- ((((next_el f) x) = w) /\ ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))
T c==> c= cnext_el f0 f1 f2 c==> c==> cMEM f3 creplace f4 cCONS cSND csplit_normal_list f5 f4 f0 f6 f7 cNIL f8 c\/ cMEM f3 f8 c/\ cMEM f4 f8 c= f3 cSND csplit_normal_list f5 f4 f0 f6 f7 c==> c==> cMEM f9 creplace f4 cCONS cSND csplit_normal_list f5 f4 f0 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f4 f8 c= f9 cSND csplit_normal_list f5 f4 f0 f6 f7 c==> cMEM f10 f3 c==> cMEM f11 f9 c==> cfinal_list f5 f9 c/\ c= cnext_el f0 f1 f2 c==> cuniq clist_of_darts f5 c==> call / c~ c= b0 cNIL f5 c==> ! c==> cMEM b0 clist_of_darts f5 cMEM c, cSND b0 cFST b0 clist_of_darts f5 c==> cMEM f6 f0 c==> cMEM f12 f0 c==> c< cindexf f2 f6 f0 cindexf f2 f12 f0 c==> c= cfind_face f5 f6 f0 c==> cMEM cFST csplit_normal_list f5 f4 f0 f6 f7 cntrans f5 f8 f4 f1 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f5 f4 f0 f6 f7 c==> cloop_list f5 cFST csplit_normal_list f5 f4 f0 f6 f7 c==> c= f3 cFST csplit_normal_list f5 f4 f0 f6 f7 c==> c= f9 cFST csplit_normal_list f5 f4 f0 f6 f7 c? / c/\ ccontour_list f5 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f5 ccat creplace f4 cCONS cSND csplit_normal_list f5 f4 f0 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f5 f4 f0 f6 f7 cNIL
- (r1 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f6 f0 c==> cMEM f7 f8 c==> cMEM f2 f9 c==> cMEM f8 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f9 c==> cfinal_list f1 f8 c==> c= f8 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c= cnext_el f3 f10 f11 c==> cuniq clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cMEM f4 f3 c==> cMEM f12 f3 c==> c< cindexf f11 f4 f3 cindexf f11 f12 f3 c==> c= cfind_face f1 f4 f3 c==> cMEM cSND csplit_normal_list f1 f2 f3 f4 f5 cntrans f1 f9 f2 f10 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cloop_list f1 cSND csplit_normal_list f1 f2 f3 f4 f5 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f6 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f9 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
- (~ ((final_list L) r)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) N), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f9 f6 c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cMEM f11 f6 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- (r2 = (FST (((((split_normal_list L) r) f) y) z1))), (x' IN (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))), ((final_list L) r2) |- (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))
T c==> c= f0 cFST csplit_normal_list f1 f2 f3 f4 f5 c==> cIN f6 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5 c==> cfinal_list f1 f0 cIN f6 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f7 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= ! c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 cT
- |- (T = (!B. (!A. ((~ (A ==> (A \/ B))) ==> F))))
T c= cT ! ! c==> c~ c==> b1 c\/ b1 b0 cF
- (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) |- ((((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) /\ (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)))
T c==> c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c/\ c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM z) f) /\ (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c==> c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f6 f1 c/\ cMEM f2 f1 c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> cMEM f10 f6 c==> cMEM f11 f9 c==> cMEM f7 f4 c==> cMEM f12 f4 c==> cMEM f6 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ cMEM f12 f4 c==> c< cindexf f5 f7 f4 cindexf f5 f12 f4 c==> c= cfind_face f0 f7 f4 c==> cMEM cFST csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
- |- ((((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) = ((~ (A ==> (A \/ B))) ==> F))
T c= c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
- |- ((!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b7 c/\ cgood_list_nodes b7 c/\ cmarked_list b7 b8 b9 b10 c/\ c~ cfinal_list b7 b9 c/\ c= cl'z b7 b8 b9 b10 f0 c/\ c= cl'y b7 b9 b10 b5 c/\ c= cprev_el b9 f0 b6 c/\ cfinal_list b7 b1 c/\ cfinal_list b7 b0 c/\ cMEM b0 b8 c/\ c= cFST csplit_normal_list b7 b9 b4 b5 b6 b1 c/\ c= cfind_face b7 b10 b4 c/\ cMEM b3 b0 cMEM b2 b1 c? / c/\ ccontour_list b7 b11 c/\ c~ c= b11 cNIL c/\ c= cHD b11 b2 c/\ c= cLAST b11 b3 cSUBSET * part cset_of_list b11 * part cset_of_list cflatten cfilter * part cfinal_list b7 ccat creplace b9 cCONS cSND csplit_normal_list b7 b9 b4 b5 b6 cNIL b8 cCONS cFST csplit_normal_list b7 b9 b4 b5 b6 cNIL cT
- ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- (((MEM r) N) /\ ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))
T c==> cMEM f0 f1 c==> cMEM f2 f3 c==> cMEM f4 f5 c==> cMEM f3 creplace f4 cCONS cSND csplit_normal_list f6 f4 f7 f8 f9 cNIL f5 c==> cfinal_list f6 f3 c/\ cMEM f4 f5 c==> c= f1 cSND csplit_normal_list f6 f4 f7 f8 f9 c==> c= f3 cSND csplit_normal_list f6 f4 f7 f8 f9 c==> c= cnext_el f7 f10 f11 c==> cuniq clist_of_darts f6 c==> call / c~ c= b0 cNIL f6 c==> ! c==> cMEM b0 clist_of_darts f6 cMEM c, cSND b0 cFST b0 clist_of_darts f6 c==> cMEM f8 f7 c==> cMEM f12 f7 c==> c< cindexf f11 f8 f7 cindexf f11 f12 f7 c==> c= cfind_face f6 f8 f7 c==> cMEM cSND csplit_normal_list f6 f4 f7 f8 f9 cntrans f6 f5 f4 f10 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f6 f4 f7 f8 f9 c==> cloop_list f6 cSND csplit_normal_list f6 f4 f7 f8 f9 c? / c/\ ccontour_list f6 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f0 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f6 ccat creplace f4 cCONS cSND csplit_normal_list f6 f4 f7 f8 f9 cNIL f5 cCONS cFST csplit_normal_list f6 f4 f7 f8 f9 cNIL
- |- (((!B. (!A. ((~ (A ==> (A \/ B))) ==> F))) ==> ((\B. (!A. ((~ (A ==> (A \/ B))) ==> F))) B)) = ((\B. (!A. ((~ (A ==> (A \/ B))) ==> F))) B))
T c= c==> ! ! c==> c~ c==> b1 c\/ b1 b0 cF * / ! c==> c~ c==> b1 c\/ b1 b0 cF f0 * / ! c==> c~ c==> b1 c\/ b1 b0 cF f0
- ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- (((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))))
T c==> cMEM f0 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c==> cfinal_list f1 f6 c==> cMEM f6 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c==> c= cfind_face f1 f7 f3 c==> cMEM f8 f6 c==> cMEM f9 f0 c==> c==> cMEM f0 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f10 c\/ cMEM f0 f10 c/\ cMEM f2 f10 c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f10 c\/ cMEM f6 f10 c/\ cMEM f2 f10 c= f6 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c= cnext_el f3 f7 f11 c==> cuniq clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cMEM f4 f3 c==> cMEM f12 f3 c==> c< cindexf f11 f4 f3 cindexf f11 f12 f3 c==> c= cfind_face f1 f4 f3 c==> cMEM cFST csplit_normal_list f1 f2 f3 f4 f5 cntrans f1 f10 f2 f7 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f1 f2 f3 f4 f5 c==> cloop_list f1 cFST csplit_normal_list f1 f2 f3 f4 f5 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f10 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
- |- (((!B. ((~ (A ==> (B \/ A))) ==> F)) ==> ((\B. ((~ (A ==> (B \/ A))) ==> F)) B)) = ((\B. ((~ (A ==> (B \/ A))) ==> F)) B))
T c= c==> ! c==> c~ c==> f0 c\/ b0 f0 cF * / c==> c~ c==> f0 c\/ b0 f0 cF f1 * / c==> c~ c==> f0 c\/ b0 f0 cF f1
- (~ (r' = NIL)) |- (((~ (NIL = r')) ==> ((NIL = r') = F)) = ((NIL = r') = F))
T c==> c~ c= f0 cNIL c= c==> c~ c= cNIL f0 c= c= cNIL f0 cF c= c= cNIL f0 cF
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))), ((~ (x = f)) /\ ((MEM x) g)) |- ((MEM x) (((replace f) xs) g))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c==> c/\ c~ c= f0 f1 cMEM f0 f2 cMEM f0 creplace f1 f3 f2
- (A ==> (A \/ B)) |- ((A ==> (A \/ B)) /\ (A ==> (A \/ B)))
T c==> c==> f0 c\/ f0 f1 c/\ c==> f0 c\/ f0 f1 c==> f0 c\/ f0 f1
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- ((\r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) r')
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 * / ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 f4
- |- ((\q. ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q)))) q)
T * / c= cLAST cAPPEND f0 b0 cCOND c= b0 cNIL cLAST f0 cLAST b0 f1
- (((find_face L) x) = f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))
T c==> c= cfind_face f0 f1 f2 c==> cMEM f3 cCONS cFST csplit_normal_list f0 f4 f2 f5 f6 cNIL c==> cMEM f7 cCONS cFST csplit_normal_list f0 f4 f2 f5 f6 cNIL c==> cfinal_list f0 f7 c==> cMEM f8 f7 c==> cMEM f9 f3 c==> c==> cMEM f3 creplace f4 cCONS cSND csplit_normal_list f0 f4 f2 f5 f6 cNIL f10 c\/ cMEM f3 f10 c/\ cMEM f4 f10 c= f3 cSND csplit_normal_list f0 f4 f2 f5 f6 c==> c==> cMEM f7 creplace f4 cCONS cSND csplit_normal_list f0 f4 f2 f5 f6 cNIL f10 c\/ cMEM f7 f10 c/\ cMEM f4 f10 c= f7 cSND csplit_normal_list f0 f4 f2 f5 f6 c==> c= cnext_el f2 f1 f11 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f5 f2 c==> cMEM f12 f2 c==> c< cindexf f11 f5 f2 cindexf f11 f12 f2 c==> c= cfind_face f0 f5 f2 c==> cMEM cFST csplit_normal_list f0 f4 f2 f5 f6 cntrans f0 f10 f4 f1 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f4 f2 f5 f6 c==> cloop_list f0 cFST csplit_normal_list f0 f4 f2 f5 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f4 cCONS cSND csplit_normal_list f0 f4 f2 f5 f6 cNIL f10 cCONS cFST csplit_normal_list f0 f4 f2 f5 f6 cNIL
- |- ((!B. (F ==> (B \/ F))) = ((F ==> (T \/ F)) /\ (F ==> (F \/ F))))
T c= ! c==> cF c\/ b0 cF c/\ c==> cF c\/ cT cF c==> cF c\/ cF cF
- ((~ (A ==> (A \/ B))) ==> F) |- (((~ (A ==> (A \/ B))) ==> F) /\ ((~ (A ==> (A \/ B))) ==> F))
T c==> c==> c~ c==> f0 c\/ f0 f1 cF c/\ c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
- |- ((A ==> (A \/ B)) ==> (A ==> (A \/ B)))
T c==> c==> f0 c\/ f0 f1 c==> f0 c\/ f0 f1
- |- ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))
T c= cIN f0 * part cGSPEC / * f1 * part cSETSPEC b0 * f1 / / c/\ b0 c= f0 b1
- |- (((!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))) ==> ((\f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))) f)) = ((\f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))) f))
T c= c==> ! ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c~ cfinal_list b3 b5 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 b1 c/\ c= cprev_el b5 f0 b2 c/\ cfinal_list b3 f1 c/\ cfinal_list b3 f2 c/\ c= cSND csplit_normal_list b3 b5 b0 b1 b2 f2 c/\ c= cFST csplit_normal_list b3 b5 b0 b1 b2 f1 c/\ c= cfind_face b3 b6 b0 c/\ cMEM f3 f2 cMEM f4 f1 c? / c/\ ccontour_list b3 b7 c/\ c~ c= b7 cNIL c/\ c= cHD b7 f4 c/\ c= cLAST b7 f3 cSUBSET * part cset_of_list b7 * part cset_of_list cflatten cfilter * part cfinal_list b3 ccat creplace b5 cCONS cSND csplit_normal_list b3 b5 b0 b1 b2 cNIL b4 cCONS cFST csplit_normal_list b3 b5 b0 b1 b2 cNIL * / ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c~ cfinal_list b3 b5 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 b1 c/\ c= cprev_el b5 f0 b2 c/\ cfinal_list b3 f1 c/\ cfinal_list b3 f2 c/\ c= cSND csplit_normal_list b3 b5 b0 b1 b2 f2 c/\ c= cFST csplit_normal_list b3 b5 b0 b1 b2 f1 c/\ c= cfind_face b3 b6 b0 c/\ cMEM f3 f2 cMEM f4 f1 c? / c/\ ccontour_list b3 b7 c/\ c~ c= b7 cNIL c/\ c= cHD b7 f4 c/\ c= cLAST b7 f3 cSUBSET * part cset_of_list b7 * part cset_of_list cflatten cfilter * part cfinal_list b3 ccat creplace b5 cCONS cSND csplit_normal_list b3 b5 b0 b1 b2 cNIL b4 cCONS cFST csplit_normal_list b3 b5 b0 b1 b2 cNIL f5 * / ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c~ cfinal_list b3 b5 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 b1 c/\ c= cprev_el b5 f0 b2 c/\ cfinal_list b3 f1 c/\ cfinal_list b3 f2 c/\ c= cSND csplit_normal_list b3 b5 b0 b1 b2 f2 c/\ c= cFST csplit_normal_list b3 b5 b0 b1 b2 f1 c/\ c= cfind_face b3 b6 b0 c/\ cMEM f3 f2 cMEM f4 f1 c? / c/\ ccontour_list b3 b7 c/\ c~ c= b7 cNIL c/\ c= cHD b7 f4 c/\ c= cLAST b7 f3 cSUBSET * part cset_of_list b7 * part cset_of_list cflatten cfilter * part cfinal_list b3 ccat creplace b5 cCONS cSND csplit_normal_list b3 b5 b0 b1 b2 cNIL b4 cCONS cFST csplit_normal_list b3 b5 b0 b1 b2 cNIL f5
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))), (((MEM f) g) /\ ((MEM x) xs)) |- ((MEM x) (((replace f) xs) g))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c==> c/\ cMEM f0 f1 cMEM f2 f3 cMEM f2 creplace f0 f3 f1
- |- ((\t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) t)
T * / c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 c==> c= cprev_el f1 f5 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f3 f6 cNIL f4 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f3 f6 cNIL f4 c==> c= cfind_face f0 f2 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cMEM f1 f4 c==> c= f7 cSND csplit_normal_list f0 f1 f9 f3 f6 c==> c= f8 cSND csplit_normal_list f0 f1 f9 f3 f6 c==> ! c==> cMEM b0 cntrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f2 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f3 f6 cNIL f4 cCONS cFST csplit_normal_list f0 f1 f9 f3 f6 cNIL
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))) ==> ((\xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))) xs)) = ((\xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))) xs))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c= c==> ! ! c==> c/\ c~ c= f0 f1 cMEM f0 b1 cMEM f0 creplace f1 b0 b1 * / ! c==> c/\ c~ c= f0 f1 cMEM f0 b1 cMEM f0 creplace f1 b0 b1 f2 * / ! c==> c/\ c~ c= f0 f1 cMEM f0 b1 cMEM f0 creplace f1 b0 b1 f2
- |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))) = T)
T c= ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cprev_el b2 f0 f2 c/\ cfinal_list b0 f3 c/\ cfinal_list b0 f4 c/\ cMEM f3 b1 c/\ c= cFST csplit_normal_list b0 b2 f5 f1 f2 f4 c/\ c= cfind_face b0 b3 f5 c/\ cMEM f6 f4 cMEM f7 f3 c? / c/\ ccontour_list b0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 f7 c/\ c= cLAST b4 f6 cSUBSET * part cset_of_list b4 * part cset_of_list cflatten cfilter * part cfinal_list b0 ccat creplace b2 cCONS cSND csplit_normal_list b0 b2 f5 f1 f2 cNIL b1 cCONS cFST csplit_normal_list b0 b2 f5 f1 f2 cNIL cT
- |- ((\y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))) y)
T * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 b0 c/\ c= cprev_el b4 f0 b1 c/\ cfinal_list b2 f1 c/\ cfinal_list b2 f2 c/\ c= cSND csplit_normal_list b2 b4 f3 b0 b1 f2 c/\ cMEM f1 b3 c/\ c= cfind_face b2 b5 f3 c/\ cMEM f4 f2 cMEM f5 f1 c? / c/\ ccontour_list b2 b6 c/\ c~ c= b6 cNIL c/\ c= cHD b6 f5 c/\ c= cLAST b6 f4 cSUBSET * part cset_of_list b6 * part cset_of_list cflatten cfilter * part cfinal_list b2 ccat creplace b4 cCONS cSND csplit_normal_list b2 b4 f3 b0 b1 cNIL b3 cCONS cFST csplit_normal_list b2 b4 f3 b0 b1 cNIL f6
- A, (A ==> (B \/ A)) |- ((A ==> (B \/ A)) /\ (B \/ A))
T c==> f0 c==> c==> f0 c\/ f1 f0 c/\ c==> f0 c\/ f1 f0 c\/ f1 f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c==> c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f6 f1 c/\ cMEM f2 f1 c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> cMEM f10 f6 c==> cMEM f11 f9 c==> cMEM f7 f4 c==> cMEM f6 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> cMEM f12 f4 c==> c< cindexf f5 f7 f4 cindexf f5 f12 f4 c==> c= cfind_face f0 f7 f4 c==> cMEM cFST csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
- (?r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL))))))), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c? / c/\ ccontour_list f0 b0 c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list cFST csplit_normal_list f0 f3 f4 f5 f6 c~ c= b0 cNIL c==> c= f7 cFST csplit_normal_list f0 f3 f4 f5 f6 c==> cfinal_list f0 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f3 cCONS cSND csplit_normal_list f0 f3 f4 f5 f6 cNIL f8 cCONS cFST csplit_normal_list f0 f3 f4 f5 f6 cNIL
- |- ((\l. (!m. ((HD ((APPEND l) m)) = (((COND (l = NIL)) (HD m)) (HD l))))) l)
T * / ! c= cHD cAPPEND b0 b1 cCOND c= b0 cNIL cHD b1 cHD b0 f0
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((final_list L) r2) |- ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) /\ ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))
T c==> c==> cMEM f0 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c\/ cMEM f0 f6 c/\ cMEM f1 f6 c= f0 cSND csplit_normal_list f2 f1 f3 f4 f5 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c\/ cMEM f7 f6 c/\ cMEM f1 f6 c= f7 cSND csplit_normal_list f2 f1 f3 f4 f5 c==> cMEM f8 f0 c==> cMEM f9 f7 c==> cfinal_list f2 f7 c/\ c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c\/ cMEM f7 f6 c/\ cMEM f1 f6 c= f7 cSND csplit_normal_list f2 f1 f3 f4 f5 c==> c= cnext_el f3 f10 f11 c==> cuniq clist_of_darts f2 c==> call / c~ c= b0 cNIL f2 c==> ! c==> cMEM b0 clist_of_darts f2 cMEM c, cSND b0 cFST b0 clist_of_darts f2 c==> cMEM f4 f3 c==> cMEM f12 f3 c==> c< cindexf f11 f4 f3 cindexf f11 f12 f3 c==> c= cfind_face f2 f4 f3 c==> cMEM cFST csplit_normal_list f2 f1 f3 f4 f5 cntrans f2 f6 f1 f10 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f2 f1 f3 f4 f5 c==> cloop_list f2 cFST csplit_normal_list f2 f1 f3 f4 f5 c==> c= f0 cFST csplit_normal_list f2 f1 f3 f4 f5 c==> c= f7 cFST csplit_normal_list f2 f1 f3 f4 f5 c? / c/\ ccontour_list f2 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f9 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f2 ccat creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 cCONS cFST csplit_normal_list f2 f1 f3 f4 f5 cNIL
- ((\w. (((next_el f) x) = w)) w) |- (((\w. (((next_el f) x) = w)) w) /\ (?w. (((next_el f) x) = w)))
T c==> * / c= cnext_el f0 f1 b0 f2 c/\ * / c= cnext_el f0 f1 b0 f2 c? / c= cnext_el f0 f1 b0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (r2 = (SND (((((split_normal_list L) r) f) y) z1))))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (r2 = (SND (((((split_normal_list L) r) f) y) z1))))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c= cfind_face f0 f4 f8 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c\/ cMEM f9 f6 c= f9 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> cMEM f10 f7 c==> cMEM f11 f9 c==> cMEM f1 f6 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> cfinal_list f0 f7 c==> cfinal_list f0 f9 c==> cmarked_list f0 f6 f1 f4 c/\ c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c\/ cMEM f9 f6 c= f9 cSND csplit_normal_list f0 f1 f8 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
- |- (((!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))) ==> ((\u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))) u)) = ((\u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))) u))
T c= c==> ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 f0 b4 c/\ cfinal_list b5 f1 c/\ cfinal_list b5 f2 c/\ c= cSND csplit_normal_list b5 b7 b2 b3 b4 f2 c/\ cMEM f1 b6 c/\ c= cfind_face b5 b8 b2 c/\ cMEM b1 f2 cMEM b0 f1 c? / c/\ ccontour_list b5 b9 c/\ c~ c= b9 cNIL c/\ c= cHD b9 b0 c/\ c= cLAST b9 b1 cSUBSET * part cset_of_list b9 * part cset_of_list cflatten cfilter * part cfinal_list b5 ccat creplace b7 cCONS cSND csplit_normal_list b5 b7 b2 b3 b4 cNIL b6 cCONS cFST csplit_normal_list b5 b7 b2 b3 b4 cNIL * / ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 f0 b4 c/\ cfinal_list b5 f1 c/\ cfinal_list b5 f2 c/\ c= cSND csplit_normal_list b5 b7 b2 b3 b4 f2 c/\ cMEM f1 b6 c/\ c= cfind_face b5 b8 b2 c/\ cMEM b1 f2 cMEM b0 f1 c? / c/\ ccontour_list b5 b9 c/\ c~ c= b9 cNIL c/\ c= cHD b9 b0 c/\ c= cLAST b9 b1 cSUBSET * part cset_of_list b9 * part cset_of_list cflatten cfilter * part cfinal_list b5 ccat creplace b7 cCONS cSND csplit_normal_list b5 b7 b2 b3 b4 cNIL b6 cCONS cFST csplit_normal_list b5 b7 b2 b3 b4 cNIL f3 * / ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 f0 b4 c/\ cfinal_list b5 f1 c/\ cfinal_list b5 f2 c/\ c= cSND csplit_normal_list b5 b7 b2 b3 b4 f2 c/\ cMEM f1 b6 c/\ c= cfind_face b5 b8 b2 c/\ cMEM b1 f2 cMEM b0 f1 c? / c/\ ccontour_list b5 b9 c/\ c~ c= b9 cNIL c/\ c= cHD b9 b0 c/\ c= cLAST b9 b1 cSUBSET * part cset_of_list b9 * part cset_of_list cflatten cfilter * part cfinal_list b5 ccat creplace b7 cCONS cSND csplit_normal_list b5 b7 b2 b3 b4 cNIL b6 cCONS cFST csplit_normal_list b5 b7 b2 b3 b4 cNIL f3
- |- (((!x. (((\s. (r' = s)) x) ==> (?s. (r' = s)))) ==> ((?s. (r' = s)) ==> (?s. (r' = s)))) = ((?s. (r' = s)) ==> (?s. (r' = s))))
T c= c==> ! c==> * / c= f0 b1 b0 c? / c= f0 b1 c==> c? / c= f0 b0 c? / c= f0 b0 c==> c? / c= f0 b0 c? / c= f0 b0
- (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((all (\l. (~ (l = NIL)))) L) /\ ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c==> c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f6 f1 c/\ cMEM f2 f1 c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> cMEM f10 f6 c==> cMEM f11 f9 c==> cMEM f6 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f7 f4 c==> cMEM f12 f4 c==> c< cindexf f5 f7 f4 cindexf f5 f12 f4 c==> c= cfind_face f0 f7 f4 c==> cMEM cFST csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) f)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 * / ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 f1
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) /\ (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c/\ ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3
- (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> c= f6 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f7 f0 c==> cMEM f8 f6 c==> cMEM f2 f9 c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f9 c==> cfinal_list f1 f6 c==> c= cnext_el f3 f10 f11 c==> cuniq clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cMEM f4 f3 c==> cMEM f12 f3 c==> c< cindexf f11 f4 f3 cindexf f11 f12 f3 c==> c= cfind_face f1 f4 f3 c==> cMEM cSND csplit_normal_list f1 f2 f3 f4 f5 cntrans f1 f9 f2 f10 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cloop_list f1 cSND csplit_normal_list f1 f2 f3 f4 f5 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f7 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL f9 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL
- |- ((\f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))) f)
T * / ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c~ cfinal_list b3 b5 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 b1 c/\ c= cprev_el b5 f0 b2 c/\ cfinal_list b3 f1 c/\ cfinal_list b3 f2 c/\ cMEM f2 b4 c/\ c= cFST csplit_normal_list b3 b5 b0 b1 b2 f1 c/\ c= cfind_face b3 b6 b0 c/\ cMEM f3 f2 cMEM f4 f1 c? / c/\ ccontour_list b3 b7 c/\ c~ c= b7 cNIL c/\ c= cHD b7 f4 c/\ c= cLAST b7 f3 cSUBSET * part cset_of_list b7 * part cset_of_list cflatten cfilter * part cfinal_list b3 ccat creplace b5 cCONS cSND csplit_normal_list b3 b5 b0 b1 b2 cNIL b4 cCONS cFST csplit_normal_list b3 b5 b0 b1 b2 cNIL f5
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (SND (((((split_normal_list L) r) f) y) z1))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- (((MEM v) (SND (((((split_normal_list L) r) f) y) z1))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cSND csplit_normal_list f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f5 f6 c==> c= f7 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c= f8 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c< cindexf f6 f3 f2 cindexf f6 f9 f2 c==> cMEM f10 f7 c==> cMEM f11 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f3 f2 c==> cMEM f9 f2 c==> cMEM f1 f12 c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f12 c==> cMEM cSND csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f12 f1 f5 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> cfinal_list f0 f8 c/\ cMEM f11 cSND csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f12 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) /\ (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> cMEM f10 f6 c==> cMEM f11 f9 c==> cMEM f2 f1 c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f7 f4 c==> cMEM f12 f4 c==> c< cindexf f5 f7 f4 cindexf f5 f12 f4 c==> c= cfind_face f0 f7 f4 c==> cMEM cSND csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
- |- ((\g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) g)
T * / c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 f3
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) ==> ((\g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) g)) = ((\g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) g))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= c==> ! c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 * / c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 f3 * / c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 f3
- |- ((\z. (!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r2) /\ ((MEM v) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))) z)
T * / ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b8 c/\ cgood_list_nodes b8 c/\ cmarked_list b8 b9 b10 b11 c/\ c~ cfinal_list b8 b10 c/\ c= cl'z b8 b9 b10 b11 b0 c/\ c= cl'y b8 b10 b11 b6 c/\ c= cprev_el b10 b0 b7 c/\ cfinal_list b8 b2 c/\ cfinal_list b8 b1 c/\ c= cSND csplit_normal_list b8 b10 b5 b6 b7 b1 c/\ cMEM b2 b9 c/\ c= cfind_face b8 b11 b5 c/\ cMEM b3 b1 cMEM b4 b2 c? / c/\ ccontour_list b8 b12 c/\ c~ c= b12 cNIL c/\ c= cHD b12 b3 c/\ c= cLAST b12 b4 cSUBSET * part cset_of_list b12 * part cset_of_list cflatten cfilter * part cfinal_list b8 ccat creplace b10 cCONS cSND csplit_normal_list b8 b10 b5 b6 b7 cNIL b9 cCONS cFST csplit_normal_list b8 b10 b5 b6 b7 cNIL f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) /\ (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c==> c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f6 f1 c/\ cMEM f2 f1 c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> cMEM f10 f6 c==> cMEM f11 f9 c==> cMEM f6 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f7 f4 c==> cMEM f12 f4 c==> c< cindexf f5 f7 f4 cindexf f5 f12 f4 c==> c= cfind_face f0 f7 f4 c==> cMEM cFST csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (FST (((((split_normal_list L) r) f) y) z1))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) /\ ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f5 f6 c==> c= cfind_face f0 f3 f2 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c\/ cMEM f7 f8 c/\ cMEM f1 f8 c= f7 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f1 f8 c= f9 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c< cindexf f6 f3 f2 cindexf f6 f10 f2 c==> cMEM f11 f7 c==> cMEM f12 f9 c==> cMEM f3 f2 c==> cMEM f10 f2 c==> cMEM cFST csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f8 f1 f5 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cfinal_list f0 f9 c/\ cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= f7 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= f9 cFST csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
- ((~ (A ==> (B \/ A))) ==> F) |- (((~ (A ==> (B \/ A))) ==> F) /\ ((~ (A ==> (B \/ A))) ==> F))
T c==> c==> c~ c==> f0 c\/ f1 f0 cF c/\ c==> c~ c==> f0 c\/ f1 f0 cF c==> c~ c==> f0 c\/ f1 f0 cF
- (x' = d), (x' IN (set_of_list s)) |- ((d IN (set_of_list s)) = T)
T c==> c= f0 f1 c==> cIN f0 * part cset_of_list f2 c= cIN f1 * part cset_of_list f2 cT
- |- ((\v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))) v)
T * / ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ cfinal_list b4 f1 c/\ cfinal_list b4 f2 c/\ c= cSND csplit_normal_list b4 b6 b1 b2 b3 f2 c/\ cMEM f1 b5 c/\ c= cfind_face b4 b7 b1 c/\ cMEM b0 f2 cMEM f3 f1 c? / c/\ ccontour_list b4 b8 c/\ c~ c= b8 cNIL c/\ c= cHD b8 f3 c/\ c= cLAST b8 b0 cSUBSET * part cset_of_list b8 * part cset_of_list cflatten cfilter * part cfinal_list b4 ccat creplace b6 cCONS cSND csplit_normal_list b4 b6 b1 b2 b3 cNIL b5 cCONS cFST csplit_normal_list b4 b6 b1 b2 b3 cNIL f4
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) /\ (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c/\ ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM y) f) /\ (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c==> c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f6 f1 c/\ cMEM f2 f1 c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> cMEM f10 f6 c==> cMEM f11 f9 c==> cMEM f7 f4 c==> cMEM f6 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ cMEM f7 f4 c==> cMEM f12 f4 c==> c< cindexf f5 f7 f4 cindexf f5 f12 f4 c==> c= cfind_face f0 f7 f4 c==> cMEM cFST csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
- (((next_el f) x) = w) |- ((((next_el f) x) = w) /\ (?w. (((next_el f) x) = w)))
T c==> c= cnext_el f0 f1 f2 c/\ c= cnext_el f0 f1 f2 c? / c= cnext_el f0 f1 b0
- |- ((\z. (!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))) z)
T * / ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b8 c/\ cgood_list_nodes b8 c/\ cmarked_list b8 b9 b10 b11 c/\ c~ cfinal_list b8 b10 c/\ c= cl'z b8 b9 b10 b11 b0 c/\ c= cl'y b8 b10 b11 b6 c/\ c= cprev_el b10 b0 b7 c/\ cfinal_list b8 b2 c/\ cfinal_list b8 b1 c/\ cMEM b1 b9 c/\ c= cFST csplit_normal_list b8 b10 b5 b6 b7 b2 c/\ c= cfind_face b8 b11 b5 c/\ cMEM b4 b1 cMEM b3 b2 c? / c/\ ccontour_list b8 b12 c/\ c~ c= b12 cNIL c/\ c= cHD b12 b3 c/\ c= cLAST b12 b4 cSUBSET * part cset_of_list b12 * part cset_of_list cflatten cfilter * part cfinal_list b8 ccat creplace b10 cCONS cSND csplit_normal_list b8 b10 b5 b6 b7 cNIL b9 cCONS cFST csplit_normal_list b8 b10 b5 b6 b7 cNIL f0
- ((MEM u) r1), ((MEM v) r2), ((final_list L) r2) |- ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))
T c==> cMEM f0 f1 c==> cMEM f2 f3 c==> cfinal_list f4 f3 c==> c==> cMEM f1 creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 c\/ cMEM f1 f9 c/\ cMEM f5 f9 c= f1 cSND csplit_normal_list f4 f5 f6 f7 f8 c==> c==> cMEM f3 creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 c\/ cMEM f3 f9 c/\ cMEM f5 f9 c= f3 cSND csplit_normal_list f4 f5 f6 f7 f8 c==> c= cnext_el f6 f10 f11 c==> cuniq clist_of_darts f4 c==> call / c~ c= b0 cNIL f4 c==> ! c==> cMEM b0 clist_of_darts f4 cMEM c, cSND b0 cFST b0 clist_of_darts f4 c==> cMEM f7 f6 c==> cMEM f12 f6 c==> c< cindexf f11 f7 f6 cindexf f11 f12 f6 c==> c= cfind_face f4 f7 f6 c==> cMEM cFST csplit_normal_list f4 f5 f6 f7 f8 cntrans f4 f9 f5 f10 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f4 f5 f6 f7 f8 c==> cloop_list f4 cFST csplit_normal_list f4 f5 f6 f7 f8 c==> c= f1 cFST csplit_normal_list f4 f5 f6 f7 f8 c==> c= f3 cFST csplit_normal_list f4 f5 f6 f7 f8 c? / c/\ ccontour_list f4 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f0 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f4 ccat creplace f5 cCONS cSND csplit_normal_list f4 f5 f6 f7 f8 cNIL f9 cCONS cFST csplit_normal_list f4 f5 f6 f7 f8 cNIL
- |- ((!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c~ cfinal_list b3 b5 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 b1 c/\ c= cprev_el b5 f0 b2 c/\ cfinal_list b3 f1 c/\ cfinal_list b3 f2 c/\ c= cSND csplit_normal_list b3 b5 b0 b1 b2 f2 c/\ c= cFST csplit_normal_list b3 b5 b0 b1 b2 f1 c/\ c= cfind_face b3 b6 b0 c/\ cMEM f3 f2 cMEM f4 f1 c? / c/\ ccontour_list b3 b7 c/\ c~ c= b7 cNIL c/\ c= cHD b7 f4 c/\ c= cLAST b7 f3 cSUBSET * part cset_of_list b7 * part cset_of_list cflatten cfilter * part cfinal_list b3 ccat creplace b5 cCONS cSND csplit_normal_list b3 b5 b0 b1 b2 cNIL b4 cCONS cFST csplit_normal_list b3 b5 b0 b1 b2 cNIL cT
- |- ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q)))
T c= cLAST cAPPEND f0 f1 cCOND c= f1 cNIL cLAST f0 cLAST f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> (((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'z f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 c\/ cMEM f7 f2 c/\ cMEM f1 f2 c= f7 cSND csplit_normal_list f0 f1 f9 f5 f6 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 c\/ cMEM f8 f2 c/\ cMEM f1 f2 c= f8 cSND csplit_normal_list f0 f1 f9 f5 f6 c==> ! c==> cMEM b0 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f3 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c= f8 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c= cfind_face f0 f6 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f9 f1 c==> cMEM f10 f4 c==> cMEM f11 f8 c==> cMEM f6 f1 c==> cMEM f9 f1 c==> cMEM f5 f12 c==> cMEM f8 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f12 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f8 c==> cMEM cSND csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f12 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cSND csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f12 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- ((MEM v) r2), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- (((MEM u) r1) ==> (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))
T c==> cMEM f0 f1 c==> cMEM f1 creplace f2 cCONS cSND csplit_normal_list f3 f2 f4 f5 f6 cNIL f7 c==> cfinal_list f3 f1 c==> cMEM f8 f9 c==> cMEM f2 f7 c==> c= f9 cSND csplit_normal_list f3 f2 f4 f5 f6 c==> c= f1 cSND csplit_normal_list f3 f2 f4 f5 f6 c==> c= cnext_el f4 f10 f11 c==> cuniq clist_of_darts f3 c==> call / c~ c= b0 cNIL f3 c==> ! c==> cMEM b0 clist_of_darts f3 cMEM c, cSND b0 cFST b0 clist_of_darts f3 c==> cMEM f5 f4 c==> cMEM f12 f4 c==> c< cindexf f11 f5 f4 cindexf f11 f12 f4 c==> c= cfind_face f3 f5 f4 c==> cMEM cSND csplit_normal_list f3 f2 f4 f5 f6 cntrans f3 f7 f2 f10 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f3 f2 f4 f5 f6 c==> cloop_list f3 cSND csplit_normal_list f3 f2 f4 f5 f6 c? / c/\ ccontour_list f3 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f0 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f3 ccat creplace f2 cCONS cSND csplit_normal_list f3 f2 f4 f5 f6 cNIL f7 cCONS cFST csplit_normal_list f3 f2 f4 f5 f6 cNIL
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))) = T)
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c= ! ! c==> c/\ c~ c= f0 f1 cMEM f0 b1 cMEM f0 creplace f1 b0 b1 cT
- |- ((r' = s) ==> (?s. (r' = s)))
T c==> c= f0 f1 c? / c= f0 b0
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 ! ! c==> c/\ c~ c= f0 f1 cMEM f0 b1 cMEM f0 creplace f1 b0 b1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> cMEM f6 f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f4 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f9 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) /\ (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (r2 = (SND (((((split_normal_list L) r) f) y) z1))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f9 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c/\ c= cfind_face f0 f4 f7 c==> cMEM f10 f8 c==> cMEM f11 f9 c==> cMEM f1 f6 c==> c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- |- (((!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))) ==> ((\y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))) y)) = ((\y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))) y))
T c= c==> ! ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 b0 c/\ c= cprev_el b4 f0 b1 c/\ cfinal_list b2 f1 c/\ cfinal_list b2 f2 c/\ cMEM f2 b3 c/\ c= cFST csplit_normal_list b2 b4 f3 b0 b1 f1 c/\ c= cfind_face b2 b5 f3 c/\ cMEM f4 f2 cMEM f5 f1 c? / c/\ ccontour_list b2 b6 c/\ c~ c= b6 cNIL c/\ c= cHD b6 f5 c/\ c= cLAST b6 f4 cSUBSET * part cset_of_list b6 * part cset_of_list cflatten cfilter * part cfinal_list b2 ccat creplace b4 cCONS cSND csplit_normal_list b2 b4 f3 b0 b1 cNIL b3 cCONS cFST csplit_normal_list b2 b4 f3 b0 b1 cNIL * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 b0 c/\ c= cprev_el b4 f0 b1 c/\ cfinal_list b2 f1 c/\ cfinal_list b2 f2 c/\ cMEM f2 b3 c/\ c= cFST csplit_normal_list b2 b4 f3 b0 b1 f1 c/\ c= cfind_face b2 b5 f3 c/\ cMEM f4 f2 cMEM f5 f1 c? / c/\ ccontour_list b2 b6 c/\ c~ c= b6 cNIL c/\ c= cHD b6 f5 c/\ c= cLAST b6 f4 cSUBSET * part cset_of_list b6 * part cset_of_list cflatten cfilter * part cfinal_list b2 ccat creplace b4 cCONS cSND csplit_normal_list b2 b4 f3 b0 b1 cNIL b3 cCONS cFST csplit_normal_list b2 b4 f3 b0 b1 cNIL f6 * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 b0 c/\ c= cprev_el b4 f0 b1 c/\ cfinal_list b2 f1 c/\ cfinal_list b2 f2 c/\ cMEM f2 b3 c/\ c= cFST csplit_normal_list b2 b4 f3 b0 b1 f1 c/\ c= cfind_face b2 b5 f3 c/\ cMEM f4 f2 cMEM f5 f1 c? / c/\ ccontour_list b2 b6 c/\ c~ c= b6 cNIL c/\ c= cHD b6 f5 c/\ c= cLAST b6 f4 cSUBSET * part cset_of_list b6 * part cset_of_list cflatten cfilter * part cfinal_list b2 ccat creplace b4 cCONS cSND csplit_normal_list b2 b4 f3 b0 b1 cNIL b3 cCONS cFST csplit_normal_list b2 b4 f3 b0 b1 cNIL f6
- |- ((\s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x))))))) s)
T * / ! c= * * part cUNION b0 b1 * part cGSPEC / c? / cSETSPEC b2 c\/ cIN b3 b0 cIN b3 b1 b3 f0
- |- (((!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))) ==> ((\r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))) r1)) = ((\r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))) r1))
T c= c==> ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c~ cfinal_list b6 b8 c/\ c= cl'z b6 b7 b8 b9 f0 c/\ c= cl'y b6 b8 b9 b4 c/\ c= cprev_el b8 f0 b5 c/\ cfinal_list b6 b0 c/\ cfinal_list b6 f1 c/\ cMEM f1 b7 c/\ c= cFST csplit_normal_list b6 b8 b3 b4 b5 b0 c/\ c= cfind_face b6 b9 b3 c/\ cMEM b2 f1 cMEM b1 b0 c? / c/\ ccontour_list b6 b10 c/\ c~ c= b10 cNIL c/\ c= cHD b10 b1 c/\ c= cLAST b10 b2 cSUBSET * part cset_of_list b10 * part cset_of_list cflatten cfilter * part cfinal_list b6 ccat creplace b8 cCONS cSND csplit_normal_list b6 b8 b3 b4 b5 cNIL b7 cCONS cFST csplit_normal_list b6 b8 b3 b4 b5 cNIL * / ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c~ cfinal_list b6 b8 c/\ c= cl'z b6 b7 b8 b9 f0 c/\ c= cl'y b6 b8 b9 b4 c/\ c= cprev_el b8 f0 b5 c/\ cfinal_list b6 b0 c/\ cfinal_list b6 f1 c/\ cMEM f1 b7 c/\ c= cFST csplit_normal_list b6 b8 b3 b4 b5 b0 c/\ c= cfind_face b6 b9 b3 c/\ cMEM b2 f1 cMEM b1 b0 c? / c/\ ccontour_list b6 b10 c/\ c~ c= b10 cNIL c/\ c= cHD b10 b1 c/\ c= cLAST b10 b2 cSUBSET * part cset_of_list b10 * part cset_of_list cflatten cfilter * part cfinal_list b6 ccat creplace b8 cCONS cSND csplit_normal_list b6 b8 b3 b4 b5 cNIL b7 cCONS cFST csplit_normal_list b6 b8 b3 b4 b5 cNIL f2 * / ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c~ cfinal_list b6 b8 c/\ c= cl'z b6 b7 b8 b9 f0 c/\ c= cl'y b6 b8 b9 b4 c/\ c= cprev_el b8 f0 b5 c/\ cfinal_list b6 b0 c/\ cfinal_list b6 f1 c/\ cMEM f1 b7 c/\ c= cFST csplit_normal_list b6 b8 b3 b4 b5 b0 c/\ c= cfind_face b6 b9 b3 c/\ cMEM b2 f1 cMEM b1 b0 c? / c/\ ccontour_list b6 b10 c/\ c~ c= b10 cNIL c/\ c= cHD b10 b1 c/\ c= cLAST b10 b2 cSUBSET * part cset_of_list b10 * part cset_of_list cflatten cfilter * part cfinal_list b6 ccat creplace b8 cCONS cSND csplit_normal_list b6 b8 b3 b4 b5 cNIL b7 cCONS cFST csplit_normal_list b6 b8 b3 b4 b5 cNIL f2
- ((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) |- (((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) = T)
T c==> cSUBSET * part cset_of_list f0 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5 c= cSUBSET * part cset_of_list f0 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5 cT
- |- (((!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))) ==> ((\u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))) u)) = ((\u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))) u))
T c= c==> ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 f0 b4 c/\ cfinal_list b5 f1 c/\ cfinal_list b5 f2 c/\ cMEM f1 b6 c/\ c= cFST csplit_normal_list b5 b7 b2 b3 b4 f2 c/\ c= cfind_face b5 b8 b2 c/\ cMEM b1 f2 cMEM b0 f1 c? / c/\ ccontour_list b5 b9 c/\ c~ c= b9 cNIL c/\ c= cHD b9 b0 c/\ c= cLAST b9 b1 cSUBSET * part cset_of_list b9 * part cset_of_list cflatten cfilter * part cfinal_list b5 ccat creplace b7 cCONS cSND csplit_normal_list b5 b7 b2 b3 b4 cNIL b6 cCONS cFST csplit_normal_list b5 b7 b2 b3 b4 cNIL * / ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 f0 b4 c/\ cfinal_list b5 f1 c/\ cfinal_list b5 f2 c/\ cMEM f1 b6 c/\ c= cFST csplit_normal_list b5 b7 b2 b3 b4 f2 c/\ c= cfind_face b5 b8 b2 c/\ cMEM b1 f2 cMEM b0 f1 c? / c/\ ccontour_list b5 b9 c/\ c~ c= b9 cNIL c/\ c= cHD b9 b0 c/\ c= cLAST b9 b1 cSUBSET * part cset_of_list b9 * part cset_of_list cflatten cfilter * part cfinal_list b5 ccat creplace b7 cCONS cSND csplit_normal_list b5 b7 b2 b3 b4 cNIL b6 cCONS cFST csplit_normal_list b5 b7 b2 b3 b4 cNIL f3 * / ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 f0 b4 c/\ cfinal_list b5 f1 c/\ cfinal_list b5 f2 c/\ cMEM f1 b6 c/\ c= cFST csplit_normal_list b5 b7 b2 b3 b4 f2 c/\ c= cfind_face b5 b8 b2 c/\ cMEM b1 f2 cMEM b0 f1 c? / c/\ ccontour_list b5 b9 c/\ c~ c= b9 cNIL c/\ c= cHD b9 b0 c/\ c= cLAST b9 b1 cSUBSET * part cset_of_list b9 * part cset_of_list cflatten cfilter * part cfinal_list b5 ccat creplace b7 cCONS cSND csplit_normal_list b5 b7 b2 b3 b4 cNIL b6 cCONS cFST csplit_normal_list b5 b7 b2 b3 b4 cNIL f3
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f4 f1 c==> c==> cMEM f5 creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 c\/ cMEM f5 f8 c/\ cMEM f6 f8 c= f5 cSND csplit_normal_list f0 f6 f1 f4 f7 c==> c==> cMEM f9 creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f6 f8 c= f9 cSND csplit_normal_list f0 f6 f1 f4 f7 c==> c< cindexf f3 f4 f1 cindexf f3 f10 f1 c==> cMEM f11 f5 c==> cMEM f12 f9 c==> cMEM f4 f1 c==> cMEM f10 f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> cMEM cFST csplit_normal_list f0 f6 f1 f4 f7 cntrans f0 f8 f6 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f6 f1 f4 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f6 f1 f4 f7 c==> c= f5 cFST csplit_normal_list f0 f6 f1 f4 f7 c==> c= f9 cFST csplit_normal_list f0 f6 f1 f4 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f6 f1 f4 f7 cNIL
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- |- (!w. (((\w. (((next_el f) x) = w)) w) ==> (?w. (((next_el f) x) = w))))
T c==> * / c= cnext_el f0 f1 b0 f2 c? / c= cnext_el f0 f1 b0
- (((find_face L) x) = f), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))
T c==> c= cfind_face f0 f1 f2 c==> cMEM f3 f4 c==> cMEM f5 cCONS cFST csplit_normal_list f0 f6 f2 f7 f8 cNIL c==> cMEM f4 cCONS cFST csplit_normal_list f0 f6 f2 f7 f8 cNIL c==> cfinal_list f0 f4 c==> cMEM f9 f5 c==> c==> cMEM f5 creplace f6 cCONS cSND csplit_normal_list f0 f6 f2 f7 f8 cNIL f10 c\/ cMEM f5 f10 c/\ cMEM f6 f10 c= f5 cSND csplit_normal_list f0 f6 f2 f7 f8 c==> c==> cMEM f4 creplace f6 cCONS cSND csplit_normal_list f0 f6 f2 f7 f8 cNIL f10 c\/ cMEM f4 f10 c/\ cMEM f6 f10 c= f4 cSND csplit_normal_list f0 f6 f2 f7 f8 c==> c= cnext_el f2 f1 f11 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f7 f2 c==> cMEM f12 f2 c==> c< cindexf f11 f7 f2 cindexf f11 f12 f2 c==> c= cfind_face f0 f7 f2 c==> cMEM cFST csplit_normal_list f0 f6 f2 f7 f8 cntrans f0 f10 f6 f1 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f6 f2 f7 f8 c==> cloop_list f0 cFST csplit_normal_list f0 f6 f2 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f3 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f6 cCONS cSND csplit_normal_list f0 f6 f2 f7 f8 cNIL f10 cCONS cFST csplit_normal_list f0 f6 f2 f7 f8 cNIL
- |- ((!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c~ cfinal_list b6 b8 c/\ c= cl'z b6 b7 b8 b9 f0 c/\ c= cl'y b6 b8 b9 b4 c/\ c= cprev_el b8 f0 b5 c/\ cfinal_list b6 b0 c/\ cfinal_list b6 f1 c/\ cMEM b0 b7 c/\ c= cFST csplit_normal_list b6 b8 b3 b4 b5 f1 c/\ c= cfind_face b6 b9 b3 c/\ cMEM b2 f1 cMEM b1 b0 c? / c/\ ccontour_list b6 b10 c/\ c~ c= b10 cNIL c/\ c= cHD b10 b1 c/\ c= cLAST b10 b2 cSUBSET * part cset_of_list b10 * part cset_of_list cflatten cfilter * part cfinal_list b6 ccat creplace b8 cCONS cSND csplit_normal_list b6 b8 b3 b4 b5 cNIL b7 cCONS cFST csplit_normal_list b6 b8 b3 b4 b5 cNIL cT
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r1) N) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> cfinal_list f0 f9 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c==> c= cfind_face f0 f4 f8 c==> cMEM f10 f7 c==> cMEM f11 f9 c==> cMEM f9 f6 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c\/ cMEM f7 f6 c/\ cMEM f1 f6 c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
- (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) ==> ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> (((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c/\ cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cl'y f0 f2 f3 f5 c==> c= cprev_el f2 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL c==> cMEM f8 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> c==> cMEM f7 creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 c\/ cMEM f7 f1 c/\ cMEM f2 f1 c= f7 cSND csplit_normal_list f0 f2 f9 f5 f6 c==> c==> cMEM f8 creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 c\/ cMEM f8 f1 c/\ cMEM f2 f1 c= f8 cSND csplit_normal_list f0 f2 f9 f5 f6 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f3 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
- (~ (r' = NIL)), (r' = s) |- (~ (NIL = s))
T c==> c~ c= f0 cNIL c==> c= f0 f1 c~ c= cNIL f1
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))) g)
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 * / c==> c/\ c~ c= f0 f1 cMEM f0 b0 cMEM f0 creplace f1 f2 b0 f3
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c= f8 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c= cfind_face f0 f6 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f9 f1 c==> cMEM f10 f4 c==> cMEM f11 f8 c==> cMEM f6 f1 c==> cMEM f9 f1 c==> cMEM f5 f12 c==> cMEM f8 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f12 c==> cMEM cSND csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f12 f5 f2 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f8 c==> cuniq cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cSND csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f12 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) |- ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) = T)
T c==> c==> cMEM f0 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c\/ cMEM f0 f6 c/\ cMEM f1 f6 c= f0 cSND csplit_normal_list f2 f1 f3 f4 f5 c= c==> cMEM f0 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c\/ cMEM f0 f6 c/\ cMEM f1 f6 c= f0 cSND csplit_normal_list f2 f1 f3 f4 f5 cT
- |- ((\r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))) r1)
T * / ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c~ cfinal_list b6 b8 c/\ c= cl'z b6 b7 b8 b9 f0 c/\ c= cl'y b6 b8 b9 b4 c/\ c= cprev_el b8 f0 b5 c/\ cfinal_list b6 b0 c/\ cfinal_list b6 f1 c/\ c= cSND csplit_normal_list b6 b8 b3 b4 b5 f1 c/\ cMEM b0 b7 c/\ c= cfind_face b6 b9 b3 c/\ cMEM b2 f1 cMEM b1 b0 c? / c/\ ccontour_list b6 b10 c/\ c~ c= b10 cNIL c/\ c= cHD b10 b1 c/\ c= cLAST b10 b2 cSUBSET * part cset_of_list b10 * part cset_of_list cflatten cfilter * part cfinal_list b6 ccat creplace b8 cCONS cSND csplit_normal_list b6 b8 b3 b4 b5 cNIL b7 cCONS cFST csplit_normal_list b6 b8 b3 b4 b5 cNIL f2
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) /\ (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c= f8 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f9 f4 c==> cMEM f10 f8 c==> cMEM f5 f11 c==> cMEM f8 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f11 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f8 c/\ ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cSND csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f11 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cSND csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f11 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- |- (((!m. ((((APPEND l) m) = NIL) = ((l = NIL) /\ (m = NIL)))) ==> ((\m. ((((APPEND l) m) = NIL) = ((l = NIL) /\ (m = NIL)))) m)) = ((\m. ((((APPEND l) m) = NIL) = ((l = NIL) /\ (m = NIL)))) m))
T c= c==> ! c= c= cAPPEND f0 b0 cNIL c/\ c= f0 cNIL c= b0 cNIL * / c= c= cAPPEND f0 b0 cNIL c/\ c= f0 cNIL c= b0 cNIL f1 * / c= c= cAPPEND f0 b0 cNIL c/\ c= f0 cNIL c= b0 cNIL f1
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
- (((find_face L) x) = f), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- (((MEM v) r2) /\ (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))
T c==> c= cfind_face f0 f1 f2 c==> cMEM f3 f4 c==> cMEM f5 cCONS cFST csplit_normal_list f0 f6 f2 f7 f8 cNIL c==> cMEM f4 cCONS cFST csplit_normal_list f0 f6 f2 f7 f8 cNIL c==> cfinal_list f0 f4 c/\ cMEM f3 f4 c==> cMEM f9 f5 c==> c==> cMEM f5 creplace f6 cCONS cSND csplit_normal_list f0 f6 f2 f7 f8 cNIL f10 c\/ cMEM f5 f10 c/\ cMEM f6 f10 c= f5 cSND csplit_normal_list f0 f6 f2 f7 f8 c==> c==> cMEM f4 creplace f6 cCONS cSND csplit_normal_list f0 f6 f2 f7 f8 cNIL f10 c\/ cMEM f4 f10 c/\ cMEM f6 f10 c= f4 cSND csplit_normal_list f0 f6 f2 f7 f8 c==> c= cnext_el f2 f1 f11 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f7 f2 c==> cMEM f12 f2 c==> c< cindexf f11 f7 f2 cindexf f11 f12 f2 c==> c= cfind_face f0 f7 f2 c==> cMEM cFST csplit_normal_list f0 f6 f2 f7 f8 cntrans f0 f10 f6 f1 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f6 f2 f7 f8 c==> cloop_list f0 cFST csplit_normal_list f0 f6 f2 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f3 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f6 cCONS cSND csplit_normal_list f0 f6 f2 f7 f8 cNIL f10 cCONS cFST csplit_normal_list f0 f6 f2 f7 f8 cNIL
- |- ((!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c~ cfinal_list b6 b8 c/\ c= cl'z b6 b7 b8 b9 f0 c/\ c= cl'y b6 b8 b9 b4 c/\ c= cprev_el b8 f0 b5 c/\ cfinal_list b6 b0 c/\ cfinal_list b6 f1 c/\ c= cSND csplit_normal_list b6 b8 b3 b4 b5 f1 c/\ cMEM b0 b7 c/\ c= cfind_face b6 b9 b3 c/\ cMEM b2 f1 cMEM b1 b0 c? / c/\ ccontour_list b6 b10 c/\ c~ c= b10 cNIL c/\ c= cHD b10 b1 c/\ c= cLAST b10 b2 cSUBSET * part cset_of_list b10 * part cset_of_list cflatten cfilter * part cfinal_list b6 ccat creplace b8 cCONS cSND csplit_normal_list b6 b8 b3 b4 b5 cNIL b7 cCONS cFST csplit_normal_list b6 b8 b3 b4 b5 cNIL cT
- |- (((!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) ==> ((\f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) f)) = ((\f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) f))
T c= c==> ! ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 * / ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 f1 * / ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 f1
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) x)
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 * / ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 f0
- (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) /\ ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))
T c==> c= cfind_face f0 f1 f2 c==> c==> cMEM f3 creplace f4 cCONS cSND csplit_normal_list f0 f4 f2 f5 f6 cNIL f7 c\/ cMEM f3 f7 c/\ cMEM f4 f7 c= f3 cSND csplit_normal_list f0 f4 f2 f5 f6 c==> cMEM f8 f3 c==> cMEM f9 f10 c==> cMEM f3 cCONS cFST csplit_normal_list f0 f4 f2 f5 f6 cNIL c==> cMEM f10 cCONS cFST csplit_normal_list f0 f4 f2 f5 f6 cNIL c==> cfinal_list f0 f10 c/\ c==> cMEM f3 creplace f4 cCONS cSND csplit_normal_list f0 f4 f2 f5 f6 cNIL f7 c\/ cMEM f3 f7 c/\ cMEM f4 f7 c= f3 cSND csplit_normal_list f0 f4 f2 f5 f6 c==> c==> cMEM f10 creplace f4 cCONS cSND csplit_normal_list f0 f4 f2 f5 f6 cNIL f7 c\/ cMEM f10 f7 c/\ cMEM f4 f7 c= f10 cSND csplit_normal_list f0 f4 f2 f5 f6 c==> c= cnext_el f2 f1 f11 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f5 f2 c==> cMEM f12 f2 c==> c< cindexf f11 f5 f2 cindexf f11 f12 f2 c==> c= cfind_face f0 f5 f2 c==> cMEM cFST csplit_normal_list f0 f4 f2 f5 f6 cntrans f0 f7 f4 f1 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f4 f2 f5 f6 c==> cloop_list f0 cFST csplit_normal_list f0 f4 f2 f5 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f9 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f4 cCONS cSND csplit_normal_list f0 f4 f2 f5 f6 cNIL f7 cCONS cFST csplit_normal_list f0 f4 f2 f5 f6 cNIL
- (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- (((MEM u) r1) /\ ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))
T c==> c= cfind_face f0 f1 f2 c==> cMEM f3 f4 c==> cMEM f5 f6 c==> cMEM f4 cCONS cFST csplit_normal_list f0 f7 f2 f8 f9 cNIL c==> cMEM f6 cCONS cFST csplit_normal_list f0 f7 f2 f8 f9 cNIL c==> cfinal_list f0 f6 c/\ cMEM f3 f4 c==> c==> cMEM f4 creplace f7 cCONS cSND csplit_normal_list f0 f7 f2 f8 f9 cNIL f10 c\/ cMEM f4 f10 c/\ cMEM f7 f10 c= f4 cSND csplit_normal_list f0 f7 f2 f8 f9 c==> c==> cMEM f6 creplace f7 cCONS cSND csplit_normal_list f0 f7 f2 f8 f9 cNIL f10 c\/ cMEM f6 f10 c/\ cMEM f7 f10 c= f6 cSND csplit_normal_list f0 f7 f2 f8 f9 c==> c= cnext_el f2 f1 f11 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f8 f2 c==> cMEM f12 f2 c==> c< cindexf f11 f8 f2 cindexf f11 f12 f2 c==> c= cfind_face f0 f8 f2 c==> cMEM cFST csplit_normal_list f0 f7 f2 f8 f9 cntrans f0 f10 f7 f1 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f7 f2 f8 f9 c==> cloop_list f0 cFST csplit_normal_list f0 f7 f2 f8 f9 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f3 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f7 cCONS cSND csplit_normal_list f0 f7 f2 f8 f9 cNIL f10 cCONS cFST csplit_normal_list f0 f7 f2 f8 f9 cNIL
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))), (((MEM f) g) /\ ((MEM x) xs)) |- ((((MEM f) g) /\ ((MEM x) xs)) /\ ((MEM x) (((replace f) xs) g)))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c==> c/\ cMEM f0 f1 cMEM f2 f3 c/\ c/\ cMEM f0 f1 cMEM f2 f3 cMEM f2 creplace f0 f3 f1
- |- ((!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ cfinal_list b4 f1 c/\ cfinal_list b4 f2 c/\ c= cSND csplit_normal_list b4 b6 b1 b2 b3 f2 c/\ c= cFST csplit_normal_list b4 b6 b1 b2 b3 f1 c/\ c= cfind_face b4 b7 b1 c/\ cMEM b0 f2 cMEM f3 f1 c? / c/\ ccontour_list b4 b8 c/\ c~ c= b8 cNIL c/\ c= cHD b8 f3 c/\ c= cLAST b8 b0 cSUBSET * part cset_of_list b8 * part cset_of_list cflatten cfilter * part cfinal_list b4 ccat creplace b6 cCONS cSND csplit_normal_list b4 b6 b1 b2 b3 cNIL b5 cCONS cFST csplit_normal_list b4 b6 b1 b2 b3 cNIL cT
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c< cindexf f5 f7 f4 cindexf f5 f10 f4 c==> cMEM f11 f6 c==> cMEM f12 f9 c==> cMEM f7 f4 c==> cMEM f10 f4 c==> cMEM f2 f1 c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> c= cfind_face f0 f7 f4 c==> cMEM cSND csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- ((\y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))) y)
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 * / c==> c/\ c= b0 cLAST f4 c/\ cMEM f4 cparts f0 f5 c/\ cMEM f5 f1 c/\ c~ cfinal_list f0 f5 c~ cMEM b0 cs_list f0 f2 f3 cMEM ce_list b0 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 f6
- (((MEM f) g) /\ ((MEM x) xs)) |- ((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) ==> ((MEM x) (((replace f) xs) g)))
T c==> c/\ cMEM f0 f1 cMEM f2 f3 c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 cMEM f2 creplace f0 f3 f1
- |- (((~ (A ==> (A \/ B))) ==> F) = (A ==> (A \/ B)))
T c= c==> c~ c==> f0 c\/ f0 f1 cF c==> f0 c\/ f0 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM z) f) /\ (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> cMEM f10 f6 c==> cMEM f11 f9 c==> cMEM f7 f4 c==> cMEM f12 f4 c==> cMEM f2 f1 c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ cMEM f12 f4 c==> c< cindexf f5 f7 f4 cindexf f5 f12 f4 c==> c= cfind_face f0 f7 f4 c==> cMEM cSND csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- (((!l2. ((set_of_list ((APPEND l1) l2)) = ((set_of_list l1) UNION (set_of_list l2)))) ==> ((\l2. ((set_of_list ((APPEND l1) l2)) = ((set_of_list l1) UNION (set_of_list l2)))) l2)) = ((\l2. ((set_of_list ((APPEND l1) l2)) = ((set_of_list l1) UNION (set_of_list l2)))) l2))
T c= c==> ! c= * part cset_of_list cAPPEND f0 b0 * * part cUNION * part cset_of_list f0 * part cset_of_list b0 * / c= * part cset_of_list cAPPEND f0 b0 * * part cUNION * part cset_of_list f0 * part cset_of_list b0 f1 * / c= * part cset_of_list cAPPEND f0 b0 * * part cUNION * part cset_of_list f0 * part cset_of_list b0 f1
- |- ((\l1. (!l2. ((set_of_list ((APPEND l1) l2)) = ((set_of_list l1) UNION (set_of_list l2))))) l1)
T * / ! c= * part cset_of_list cAPPEND b0 b1 * * part cUNION * part cset_of_list b0 * part cset_of_list b1 f0
- (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f2 f1 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> cMEM f4 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- (~ ((final_list L) r)), (l = r), ((MEM d) l), ((MEM l) N), ((final_list L) l) |- ((l = r) /\ F)
T c==> c~ cfinal_list f0 f1 c==> c= f2 f1 c==> cMEM f3 f2 c==> cMEM f2 f4 c==> cfinal_list f0 f2 c/\ c= f2 f1 cF
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM u) r1) /\ (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (r2 = (SND (((((split_normal_list L) r) f) y) z1))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f11 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f8 f9 c==> cMEM f1 f6 c==> c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f11 f6 c= f11 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (FST (((((split_normal_list L) r) f) y) z1))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (FST (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f5 f6 c==> c= f7 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= cfind_face f0 f5 f2 c==> c= cfind_face f0 f3 f2 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c\/ cMEM f7 f8 c/\ cMEM f1 f8 c= f7 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f1 f8 c= f9 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c< cindexf f6 f3 f2 cindexf f6 f10 f2 c==> cMEM f11 f7 c==> cMEM f12 f9 c==> cMEM f3 f2 c==> cMEM f10 f2 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL c==> cMEM cFST csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f8 f1 f5 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cfinal_list f0 f9 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
- |- ((F \/ t) = t)
T c= c\/ cF f0 f0
- |- (((!l. (!m. ((((APPEND l) m) = NIL) = ((l = NIL) /\ (m = NIL))))) ==> ((\l. (!m. ((((APPEND l) m) = NIL) = ((l = NIL) /\ (m = NIL))))) l)) = ((\l. (!m. ((((APPEND l) m) = NIL) = ((l = NIL) /\ (m = NIL))))) l))
T c= c==> ! ! c= c= cAPPEND b0 b1 cNIL c/\ c= b0 cNIL c= b1 cNIL * / ! c= c= cAPPEND b0 b1 cNIL c/\ c= b0 cNIL c= b1 cNIL f0 * / ! c= c= cAPPEND b0 b1 cNIL c/\ c= b0 cNIL c= b1 cNIL f0
- (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c= cfind_face f0 f3 f4 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f2 f1 c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c==> cfinal_list f0 f9 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c/\ c= cnext_el f4 f3 f5 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> (((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'z f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c/\ c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 c\/ cMEM f7 f2 c/\ cMEM f1 f2 c= f7 cSND csplit_normal_list f0 f1 f9 f5 f6 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 c\/ cMEM f8 f2 c/\ cMEM f1 f2 c= f8 cSND csplit_normal_list f0 f1 f9 f5 f6 c==> ! c==> cMEM b0 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f3 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f2 f1 c==> c= cfind_face f0 f4 f1 c==> c==> cMEM f5 creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 c\/ cMEM f5 f8 c/\ cMEM f6 f8 c= f5 cSND csplit_normal_list f0 f6 f1 f4 f7 c==> c==> cMEM f9 creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f6 f8 c= f9 cSND csplit_normal_list f0 f6 f1 f4 f7 c==> c< cindexf f3 f4 f1 cindexf f3 f10 f1 c==> cMEM f11 f5 c==> cMEM f12 f9 c==> cMEM f4 f1 c==> cMEM f10 f1 c==> cMEM f5 cCONS cFST csplit_normal_list f0 f6 f1 f4 f7 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f6 f1 f4 f7 cNIL c==> cMEM cFST csplit_normal_list f0 f6 f1 f4 f7 cntrans f0 f8 f6 f2 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> cuniq cFST csplit_normal_list f0 f6 f1 f4 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f6 f1 f4 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f6 f1 f4 f7 cNIL
- |- (((!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))) ==> ((\y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))) y)) = ((\y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))) y))
T c= c==> ! ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 b0 c/\ c= cprev_el b4 f0 b1 c/\ cfinal_list b2 f1 c/\ cfinal_list b2 f2 c/\ cMEM f1 b3 c/\ c= cFST csplit_normal_list b2 b4 f3 b0 b1 f2 c/\ c= cfind_face b2 b5 f3 c/\ cMEM f4 f2 cMEM f5 f1 c? / c/\ ccontour_list b2 b6 c/\ c~ c= b6 cNIL c/\ c= cHD b6 f5 c/\ c= cLAST b6 f4 cSUBSET * part cset_of_list b6 * part cset_of_list cflatten cfilter * part cfinal_list b2 ccat creplace b4 cCONS cSND csplit_normal_list b2 b4 f3 b0 b1 cNIL b3 cCONS cFST csplit_normal_list b2 b4 f3 b0 b1 cNIL * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 b0 c/\ c= cprev_el b4 f0 b1 c/\ cfinal_list b2 f1 c/\ cfinal_list b2 f2 c/\ cMEM f1 b3 c/\ c= cFST csplit_normal_list b2 b4 f3 b0 b1 f2 c/\ c= cfind_face b2 b5 f3 c/\ cMEM f4 f2 cMEM f5 f1 c? / c/\ ccontour_list b2 b6 c/\ c~ c= b6 cNIL c/\ c= cHD b6 f5 c/\ c= cLAST b6 f4 cSUBSET * part cset_of_list b6 * part cset_of_list cflatten cfilter * part cfinal_list b2 ccat creplace b4 cCONS cSND csplit_normal_list b2 b4 f3 b0 b1 cNIL b3 cCONS cFST csplit_normal_list b2 b4 f3 b0 b1 cNIL f6 * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 b0 c/\ c= cprev_el b4 f0 b1 c/\ cfinal_list b2 f1 c/\ cfinal_list b2 f2 c/\ cMEM f1 b3 c/\ c= cFST csplit_normal_list b2 b4 f3 b0 b1 f2 c/\ c= cfind_face b2 b5 f3 c/\ cMEM f4 f2 cMEM f5 f1 c? / c/\ ccontour_list b2 b6 c/\ c~ c= b6 cNIL c/\ c= cHD b6 f5 c/\ c= cLAST b6 f4 cSUBSET * part cset_of_list b6 * part cset_of_list cflatten cfilter * part cfinal_list b2 ccat creplace b4 cCONS cSND csplit_normal_list b2 b4 f3 b0 b1 cNIL b3 cCONS cFST csplit_normal_list b2 b4 f3 b0 b1 cNIL f6
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2
- |- ((((~ (A ==> (B \/ A))) ==> F) ==> ((~ (A ==> (B \/ A))) ==> F)) = ((~ (A ==> (B \/ A))) ==> F))
T c= c==> c==> c~ c==> f0 c\/ f1 f0 cF c==> c~ c==> f0 c\/ f1 f0 cF c==> c~ c==> f0 c\/ f1 f0 cF
- (((next_el f) x) = w) |- ((\w. (((next_el f) x) = w)) w)
T c==> c= cnext_el f0 f1 f2 * / c= cnext_el f0 f1 b0 f2
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (FST (((((split_normal_list L) r) f) y) z1))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (FST (((((split_normal_list L) r) f) y) z1))), (((find_face L) x) = f), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f5 f6 c==> c= f7 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= cfind_face f0 f5 f2 c==> c= cfind_face f0 f3 f2 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c\/ cMEM f7 f8 c/\ cMEM f1 f8 c= f7 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f1 f8 c= f9 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c< cindexf f6 f3 f2 cindexf f6 f10 f2 c==> cMEM f11 f7 c==> cMEM f12 f9 c==> cMEM f3 f2 c==> cMEM f10 f2 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL c==> cMEM cFST csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f8 f1 f5 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cfinal_list f0 f9 c/\ c= f7 cFST csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
- |- ((set_of_list ((APPEND l1) l2)) = ((set_of_list l1) UNION (set_of_list l2)))
T c= * part cset_of_list cAPPEND f0 f1 * * part cUNION * part cset_of_list f0 * part cset_of_list f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) /\ (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r1) N) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f9 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c/\ c= cfind_face f0 f4 f7 c==> cMEM f10 f8 c==> cMEM f11 f9 c==> cMEM f9 f6 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- |- (((!q. ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q)))) ==> ((\q. ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q)))) q)) = ((\q. ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q)))) q))
T c= c==> ! c= cLAST cAPPEND f0 b0 cCOND c= b0 cNIL cLAST f0 cLAST b0 * / c= cLAST cAPPEND f0 b0 cCOND c= b0 cNIL cLAST f0 cLAST b0 f1 * / c= cLAST cAPPEND f0 b0 cCOND c= b0 cNIL cLAST f0 cLAST b0 f1
- |- (((!l. (!m. ((HD ((APPEND l) m)) = (((COND (l = NIL)) (HD m)) (HD l))))) ==> ((\l. (!m. ((HD ((APPEND l) m)) = (((COND (l = NIL)) (HD m)) (HD l))))) l)) = ((\l. (!m. ((HD ((APPEND l) m)) = (((COND (l = NIL)) (HD m)) (HD l))))) l))
T c= c==> ! ! c= cHD cAPPEND b0 b1 cCOND c= b0 cNIL cHD b1 cHD b0 * / ! c= cHD cAPPEND b0 b1 cCOND c= b0 cNIL cHD b1 cHD b0 f0 * / ! c= cHD cAPPEND b0 b1 cCOND c= b0 cNIL cHD b1 cHD b0 f0
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))) f)
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 * / ! ! c==> c/\ c~ c= f0 b0 cMEM f0 b2 cMEM f0 creplace b0 b1 b2 f1
- |- (((!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))) ==> ((\v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))) v)) = ((\v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))) v))
T c= c==> ! ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ cfinal_list b4 f1 c/\ cfinal_list b4 f2 c/\ c= cSND csplit_normal_list b4 b6 b1 b2 b3 f2 c/\ c= cFST csplit_normal_list b4 b6 b1 b2 b3 f1 c/\ c= cfind_face b4 b7 b1 c/\ cMEM b0 f2 cMEM f3 f1 c? / c/\ ccontour_list b4 b8 c/\ c~ c= b8 cNIL c/\ c= cHD b8 f3 c/\ c= cLAST b8 b0 cSUBSET * part cset_of_list b8 * part cset_of_list cflatten cfilter * part cfinal_list b4 ccat creplace b6 cCONS cSND csplit_normal_list b4 b6 b1 b2 b3 cNIL b5 cCONS cFST csplit_normal_list b4 b6 b1 b2 b3 cNIL * / ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ cfinal_list b4 f1 c/\ cfinal_list b4 f2 c/\ c= cSND csplit_normal_list b4 b6 b1 b2 b3 f2 c/\ c= cFST csplit_normal_list b4 b6 b1 b2 b3 f1 c/\ c= cfind_face b4 b7 b1 c/\ cMEM b0 f2 cMEM f3 f1 c? / c/\ ccontour_list b4 b8 c/\ c~ c= b8 cNIL c/\ c= cHD b8 f3 c/\ c= cLAST b8 b0 cSUBSET * part cset_of_list b8 * part cset_of_list cflatten cfilter * part cfinal_list b4 ccat creplace b6 cCONS cSND csplit_normal_list b4 b6 b1 b2 b3 cNIL b5 cCONS cFST csplit_normal_list b4 b6 b1 b2 b3 cNIL f4 * / ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ cfinal_list b4 f1 c/\ cfinal_list b4 f2 c/\ c= cSND csplit_normal_list b4 b6 b1 b2 b3 f2 c/\ c= cFST csplit_normal_list b4 b6 b1 b2 b3 f1 c/\ c= cfind_face b4 b7 b1 c/\ cMEM b0 f2 cMEM f3 f1 c? / c/\ ccontour_list b4 b8 c/\ c~ c= b8 cNIL c/\ c= cHD b8 f3 c/\ c= cLAST b8 b0 cSUBSET * part cset_of_list b8 * part cset_of_list cflatten cfilter * part cfinal_list b4 ccat creplace b6 cCONS cSND csplit_normal_list b4 b6 b1 b2 b3 cNIL b5 cCONS cFST csplit_normal_list b4 b6 b1 b2 b3 cNIL f4
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((((find_face L) y) = f) /\ (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c= cfind_face f0 f7 f4 c==> c< cindexf f5 f7 f4 cindexf f5 f10 f4 c==> cMEM f11 f6 c==> cMEM f12 f9 c==> cMEM f7 f4 c==> cMEM f10 f4 c==> cMEM f2 f1 c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ c= cfind_face f0 f7 f4 c==> cMEM cSND csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
- |- ((HD ((APPEND l) m)) = (((COND (l = NIL)) (HD m)) (HD l)))
T c= cHD cAPPEND f0 f1 cCOND c= f0 cNIL cHD f1 cHD f0
- (A ==> (B \/ A)) |- ((A ==> (B \/ A)) /\ (A ==> (B \/ A)))
T c==> c==> f0 c\/ f1 f0 c/\ c==> f0 c\/ f1 f0 c==> f0 c\/ f1 f0
- |- ((\u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))) u)
T * / ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 f0 b4 c/\ cfinal_list b5 f1 c/\ cfinal_list b5 f2 c/\ c= cSND csplit_normal_list b5 b7 b2 b3 b4 f2 c/\ cMEM f1 b6 c/\ c= cfind_face b5 b8 b2 c/\ cMEM b1 f2 cMEM b0 f1 c? / c/\ ccontour_list b5 b9 c/\ c~ c= b9 cNIL c/\ c= cHD b9 b0 c/\ c= cLAST b9 b1 cSUBSET * part cset_of_list b9 * part cset_of_list cflatten cfilter * part cfinal_list b5 ccat creplace b7 cCONS cSND csplit_normal_list b5 b7 b2 b3 b4 cNIL b6 cCONS cFST csplit_normal_list b5 b7 b2 b3 b4 cNIL f3
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- |- (((!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) ==> ((\g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) g)) = ((\g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) g))
T c= c==> ! c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 * / c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 f3 * / c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 f3
- |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))) = T)
T c= ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cprev_el b2 f0 f2 c/\ cfinal_list b0 f3 c/\ cfinal_list b0 f4 c/\ c= cSND csplit_normal_list b0 b2 f5 f1 f2 f4 c/\ c= cFST csplit_normal_list b0 b2 f5 f1 f2 f3 c/\ c= cfind_face b0 b3 f5 c/\ cMEM f6 f4 cMEM f7 f3 c? / c/\ ccontour_list b0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 f7 c/\ c= cLAST b4 f6 cSUBSET * part cset_of_list b4 * part cset_of_list cflatten cfilter * part cfinal_list b0 ccat creplace b2 cCONS cSND csplit_normal_list b0 b2 f5 f1 f2 cNIL b1 cCONS cFST csplit_normal_list b0 b2 f5 f1 f2 cNIL cT
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) ==> ((\xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) xs)) = ((\xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) xs))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= c==> ! ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 * / ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 f2 * / ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 f2
- |- (((!z. (!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))) ==> ((\z. (!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))) z)) = ((\z. (!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))) z))
T c= c==> ! ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b8 c/\ cgood_list_nodes b8 c/\ cmarked_list b8 b9 b10 b11 c/\ c~ cfinal_list b8 b10 c/\ c= cl'z b8 b9 b10 b11 b0 c/\ c= cl'y b8 b10 b11 b6 c/\ c= cprev_el b10 b0 b7 c/\ cfinal_list b8 b2 c/\ cfinal_list b8 b1 c/\ cMEM b1 b9 c/\ c= cFST csplit_normal_list b8 b10 b5 b6 b7 b2 c/\ c= cfind_face b8 b11 b5 c/\ cMEM b4 b1 cMEM b3 b2 c? / c/\ ccontour_list b8 b12 c/\ c~ c= b12 cNIL c/\ c= cHD b12 b3 c/\ c= cLAST b12 b4 cSUBSET * part cset_of_list b12 * part cset_of_list cflatten cfilter * part cfinal_list b8 ccat creplace b10 cCONS cSND csplit_normal_list b8 b10 b5 b6 b7 cNIL b9 cCONS cFST csplit_normal_list b8 b10 b5 b6 b7 cNIL * / ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b8 c/\ cgood_list_nodes b8 c/\ cmarked_list b8 b9 b10 b11 c/\ c~ cfinal_list b8 b10 c/\ c= cl'z b8 b9 b10 b11 b0 c/\ c= cl'y b8 b10 b11 b6 c/\ c= cprev_el b10 b0 b7 c/\ cfinal_list b8 b2 c/\ cfinal_list b8 b1 c/\ cMEM b1 b9 c/\ c= cFST csplit_normal_list b8 b10 b5 b6 b7 b2 c/\ c= cfind_face b8 b11 b5 c/\ cMEM b4 b1 cMEM b3 b2 c? / c/\ ccontour_list b8 b12 c/\ c~ c= b12 cNIL c/\ c= cHD b12 b3 c/\ c= cLAST b12 b4 cSUBSET * part cset_of_list b12 * part cset_of_list cflatten cfilter * part cfinal_list b8 ccat creplace b10 cCONS cSND csplit_normal_list b8 b10 b5 b6 b7 cNIL b9 cCONS cFST csplit_normal_list b8 b10 b5 b6 b7 cNIL f0 * / ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b8 c/\ cgood_list_nodes b8 c/\ cmarked_list b8 b9 b10 b11 c/\ c~ cfinal_list b8 b10 c/\ c= cl'z b8 b9 b10 b11 b0 c/\ c= cl'y b8 b10 b11 b6 c/\ c= cprev_el b10 b0 b7 c/\ cfinal_list b8 b2 c/\ cfinal_list b8 b1 c/\ cMEM b1 b9 c/\ c= cFST csplit_normal_list b8 b10 b5 b6 b7 b2 c/\ c= cfind_face b8 b11 b5 c/\ cMEM b4 b1 cMEM b3 b2 c? / c/\ ccontour_list b8 b12 c/\ c~ c= b12 cNIL c/\ c= cHD b12 b3 c/\ c= cLAST b12 b4 cSUBSET * part cset_of_list b12 * part cset_of_list cflatten cfilter * part cfinal_list b8 ccat creplace b10 cCONS cSND csplit_normal_list b8 b10 b5 b6 b7 cNIL b9 cCONS cFST csplit_normal_list b8 b10 b5 b6 b7 cNIL f0
- |- ((\y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))) y)
T * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 b0 c/\ c= cprev_el b4 f0 b1 c/\ cfinal_list b2 f1 c/\ cfinal_list b2 f2 c/\ cMEM f2 b3 c/\ c= cFST csplit_normal_list b2 b4 f3 b0 b1 f1 c/\ c= cfind_face b2 b5 f3 c/\ cMEM f4 f2 cMEM f5 f1 c? / c/\ ccontour_list b2 b6 c/\ c~ c= b6 cNIL c/\ c= cHD b6 f5 c/\ c= cLAST b6 f4 cSUBSET * part cset_of_list b6 * part cset_of_list cflatten cfilter * part cfinal_list b2 ccat creplace b4 cCONS cSND csplit_normal_list b2 b4 f3 b0 b1 cNIL b3 cCONS cFST csplit_normal_list b2 b4 f3 b0 b1 cNIL f6
- |- ((!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c~ cfinal_list b4 b6 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ cfinal_list b4 f1 c/\ cfinal_list b4 f2 c/\ cMEM f2 b5 c/\ c= cFST csplit_normal_list b4 b6 b1 b2 b3 f1 c/\ c= cfind_face b4 b7 b1 c/\ cMEM b0 f2 cMEM f3 f1 c? / c/\ ccontour_list b4 b8 c/\ c~ c= b8 cNIL c/\ c= cHD b8 f3 c/\ c= cLAST b8 b0 cSUBSET * part cset_of_list b8 * part cset_of_list cflatten cfilter * part cfinal_list b4 ccat creplace b6 cCONS cSND csplit_normal_list b4 b6 b1 b2 b3 cNIL b5 cCONS cFST csplit_normal_list b4 b6 b1 b2 b3 cNIL cT
- |- ((\A. (!B. ((~ (A ==> (B \/ A))) ==> F))) A)
T * / ! c==> c~ c==> b0 c\/ b1 b0 cF f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((((indexf w) y) f) < (((indexf w) z) f)) /\ ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c< cindexf f5 f7 f4 cindexf f5 f10 f4 c==> cMEM f11 f6 c==> cMEM f12 f9 c==> cMEM f7 f4 c==> cMEM f10 f4 c==> cMEM f2 f1 c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ c< cindexf f5 f7 f4 cindexf f5 f10 f4 c==> c= cfind_face f0 f7 f4 c==> cMEM cSND csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
- (r' = s) |- ((\s. (r' = s)) s)
T c==> c= f0 f1 * / c= f0 b0 f1
- |- ((!B. (P B)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- |- (((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) ==> (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))))) = (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))))
T c= c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f2 f1 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c< cindexf f3 f6 f1 cindexf f3 f10 f1 c==> cMEM f11 f4 c==> cMEM f12 f9 c==> cMEM f6 f1 c==> cMEM f10 f1 c==> cMEM f4 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- |- ((\g. ((f o g) = (\x. (f (g x))))) g)
T * / c= * * part co f0 b0 / * f0 * b0 b1 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f4 f1 c==> c==> cMEM f5 creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 c\/ cMEM f5 f8 c/\ cMEM f6 f8 c= f5 cSND csplit_normal_list f0 f6 f1 f4 f7 c==> c==> cMEM f9 creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f6 f8 c= f9 cSND csplit_normal_list f0 f6 f1 f4 f7 c==> c< cindexf f3 f4 f1 cindexf f3 f10 f1 c==> cMEM f11 f5 c==> cMEM f12 f9 c==> cMEM f4 f1 c==> cMEM f10 f1 c==> cMEM cFST csplit_normal_list f0 f6 f1 f4 f7 cntrans f0 f8 f6 f2 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> cuniq cFST csplit_normal_list f0 f6 f1 f4 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f6 f1 f4 f7 c==> c= f5 cFST csplit_normal_list f0 f6 f1 f4 f7 c==> c= f9 cFST csplit_normal_list f0 f6 f1 f4 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f6 f1 f4 f7 cNIL
- (((find_face L) x) = f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- ((((find_face L) x) = f) /\ (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))))
T c==> c= cfind_face f0 f1 f2 c==> cMEM f3 cCONS cFST csplit_normal_list f0 f4 f2 f5 f6 cNIL c==> cMEM f7 cCONS cFST csplit_normal_list f0 f4 f2 f5 f6 cNIL c==> cfinal_list f0 f7 c/\ c= cfind_face f0 f1 f2 c==> cMEM f8 f7 c==> cMEM f9 f3 c==> c==> cMEM f3 creplace f4 cCONS cSND csplit_normal_list f0 f4 f2 f5 f6 cNIL f10 c\/ cMEM f3 f10 c/\ cMEM f4 f10 c= f3 cSND csplit_normal_list f0 f4 f2 f5 f6 c==> c==> cMEM f7 creplace f4 cCONS cSND csplit_normal_list f0 f4 f2 f5 f6 cNIL f10 c\/ cMEM f7 f10 c/\ cMEM f4 f10 c= f7 cSND csplit_normal_list f0 f4 f2 f5 f6 c==> c= cnext_el f2 f1 f11 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f5 f2 c==> cMEM f12 f2 c==> c< cindexf f11 f5 f2 cindexf f11 f12 f2 c==> c= cfind_face f0 f5 f2 c==> cMEM cFST csplit_normal_list f0 f4 f2 f5 f6 cntrans f0 f10 f4 f1 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f4 f2 f5 f6 c==> cloop_list f0 cFST csplit_normal_list f0 f4 f2 f5 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f8 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f4 cCONS cSND csplit_normal_list f0 f4 f2 f5 f6 cNIL f10 cCONS cFST csplit_normal_list f0 f4 f2 f5 f6 cNIL
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- (((!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))) ==> ((\u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))) u)) = ((\u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))) u))
T c= c==> ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 f0 b4 c/\ cfinal_list b5 f1 c/\ cfinal_list b5 f2 c/\ cMEM f2 b6 c/\ c= cFST csplit_normal_list b5 b7 b2 b3 b4 f1 c/\ c= cfind_face b5 b8 b2 c/\ cMEM b1 f2 cMEM b0 f1 c? / c/\ ccontour_list b5 b9 c/\ c~ c= b9 cNIL c/\ c= cHD b9 b0 c/\ c= cLAST b9 b1 cSUBSET * part cset_of_list b9 * part cset_of_list cflatten cfilter * part cfinal_list b5 ccat creplace b7 cCONS cSND csplit_normal_list b5 b7 b2 b3 b4 cNIL b6 cCONS cFST csplit_normal_list b5 b7 b2 b3 b4 cNIL * / ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 f0 b4 c/\ cfinal_list b5 f1 c/\ cfinal_list b5 f2 c/\ cMEM f2 b6 c/\ c= cFST csplit_normal_list b5 b7 b2 b3 b4 f1 c/\ c= cfind_face b5 b8 b2 c/\ cMEM b1 f2 cMEM b0 f1 c? / c/\ ccontour_list b5 b9 c/\ c~ c= b9 cNIL c/\ c= cHD b9 b0 c/\ c= cLAST b9 b1 cSUBSET * part cset_of_list b9 * part cset_of_list cflatten cfilter * part cfinal_list b5 ccat creplace b7 cCONS cSND csplit_normal_list b5 b7 b2 b3 b4 cNIL b6 cCONS cFST csplit_normal_list b5 b7 b2 b3 b4 cNIL f3 * / ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 f0 b4 c/\ cfinal_list b5 f1 c/\ cfinal_list b5 f2 c/\ cMEM f2 b6 c/\ c= cFST csplit_normal_list b5 b7 b2 b3 b4 f1 c/\ c= cfind_face b5 b8 b2 c/\ cMEM b1 f2 cMEM b0 f1 c? / c/\ ccontour_list b5 b9 c/\ c~ c= b9 cNIL c/\ c= cHD b9 b0 c/\ c= cLAST b9 b1 cSUBSET * part cset_of_list b9 * part cset_of_list cflatten cfilter * part cfinal_list b5 ccat creplace b7 cCONS cSND csplit_normal_list b5 b7 b2 b3 b4 cNIL b6 cCONS cFST csplit_normal_list b5 b7 b2 b3 b4 cNIL f3
- |- ((\B. ((~ (A ==> (B \/ A))) ==> F)) B)
T * / c==> c~ c==> f0 c\/ b0 f0 cF f1
- |- (((!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))) ==> ((\u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))) u)) = ((\u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))) u))
T c= c==> ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 f0 b4 c/\ cfinal_list b5 f1 c/\ cfinal_list b5 f2 c/\ c= cSND csplit_normal_list b5 b7 b2 b3 b4 f2 c/\ c= cFST csplit_normal_list b5 b7 b2 b3 b4 f1 c/\ c= cfind_face b5 b8 b2 c/\ cMEM b1 f2 cMEM b0 f1 c? / c/\ ccontour_list b5 b9 c/\ c~ c= b9 cNIL c/\ c= cHD b9 b0 c/\ c= cLAST b9 b1 cSUBSET * part cset_of_list b9 * part cset_of_list cflatten cfilter * part cfinal_list b5 ccat creplace b7 cCONS cSND csplit_normal_list b5 b7 b2 b3 b4 cNIL b6 cCONS cFST csplit_normal_list b5 b7 b2 b3 b4 cNIL * / ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 f0 b4 c/\ cfinal_list b5 f1 c/\ cfinal_list b5 f2 c/\ c= cSND csplit_normal_list b5 b7 b2 b3 b4 f2 c/\ c= cFST csplit_normal_list b5 b7 b2 b3 b4 f1 c/\ c= cfind_face b5 b8 b2 c/\ cMEM b1 f2 cMEM b0 f1 c? / c/\ ccontour_list b5 b9 c/\ c~ c= b9 cNIL c/\ c= cHD b9 b0 c/\ c= cLAST b9 b1 cSUBSET * part cset_of_list b9 * part cset_of_list cflatten cfilter * part cfinal_list b5 ccat creplace b7 cCONS cSND csplit_normal_list b5 b7 b2 b3 b4 cNIL b6 cCONS cFST csplit_normal_list b5 b7 b2 b3 b4 cNIL f3 * / ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 f0 b4 c/\ cfinal_list b5 f1 c/\ cfinal_list b5 f2 c/\ c= cSND csplit_normal_list b5 b7 b2 b3 b4 f2 c/\ c= cFST csplit_normal_list b5 b7 b2 b3 b4 f1 c/\ c= cfind_face b5 b8 b2 c/\ cMEM b1 f2 cMEM b0 f1 c? / c/\ ccontour_list b5 b9 c/\ c~ c= b9 cNIL c/\ c= cHD b9 b0 c/\ c= cLAST b9 b1 cSUBSET * part cset_of_list b9 * part cset_of_list cflatten cfilter * part cfinal_list b5 ccat creplace b7 cCONS cSND csplit_normal_list b5 b7 b2 b3 b4 cNIL b6 cCONS cFST csplit_normal_list b5 b7 b2 b3 b4 cNIL f3
- (uniq (list_of_darts L)), (((next_el f) x) = w), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((final_list L) r2) |- ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> cfinal_list f0 f9 c/\ cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f4 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f9 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (r2 = (SND (((((split_normal_list L) r) f) y) z1))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f9 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f10 f8 c==> cMEM f11 f9 c==> cMEM f1 f6 c==> c= f9 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> (((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 c/\ c= cl'y f0 f1 f2 f3 c==> c= cprev_el f1 f5 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f1 f9 f3 f6 cNIL c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f9 f3 f6 cNIL c==> c= cfind_face f0 f2 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f3 f6 cNIL f4 c\/ cMEM f7 f4 c/\ cMEM f1 f4 c= f7 cSND csplit_normal_list f0 f1 f9 f3 f6 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f3 f6 cNIL f4 c\/ cMEM f8 f4 c/\ cMEM f1 f4 c= f8 cSND csplit_normal_list f0 f1 f9 f3 f6 c==> ! c==> cMEM b0 cntrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f2 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f3 f6 cNIL f4 cCONS cFST csplit_normal_list f0 f1 f9 f3 f6 cNIL
- |- ((\r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))) r1)
T * / ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c~ cfinal_list b6 b8 c/\ c= cl'z b6 b7 b8 b9 f0 c/\ c= cl'y b6 b8 b9 b4 c/\ c= cprev_el b8 f0 b5 c/\ cfinal_list b6 b0 c/\ cfinal_list b6 f1 c/\ cMEM f1 b7 c/\ c= cFST csplit_normal_list b6 b8 b3 b4 b5 b0 c/\ c= cfind_face b6 b9 b3 c/\ cMEM b2 f1 cMEM b1 b0 c? / c/\ ccontour_list b6 b10 c/\ c~ c= b10 cNIL c/\ c= cHD b10 b1 c/\ c= cLAST b10 b2 cSUBSET * part cset_of_list b10 * part cset_of_list cflatten cfilter * part cfinal_list b6 ccat creplace b8 cCONS cSND csplit_normal_list b6 b8 b3 b4 b5 cNIL b7 cCONS cFST csplit_normal_list b6 b8 b3 b4 b5 cNIL f2
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= c==> c/\ cMEM f0 f1 cMEM f2 f3 cMEM f2 creplace f0 f3 f1 cT
- (good_list L) |- ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cl'y f0 f2 f3 f5 c==> c= cprev_el f2 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 c==> cMEM f8 creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cMEM f2 f1 c==> c= f7 cSND csplit_normal_list f0 f2 f9 f5 f6 c==> c= f8 cSND csplit_normal_list f0 f2 f9 f5 f6 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f3 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0
- |- ((\z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) z1)
T * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ cMEM f2 b2 c/\ c= cFST csplit_normal_list b1 b3 f4 f1 b0 f3 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f3 cMEM f6 f2 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f6 c/\ c= cLAST b5 f5 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL f7
- |- ((\f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) f)
T * / ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 f1
- |- (((!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) ==> (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))))) = (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))))
T c= c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3
- ((MEM u) r1), ((MEM v) r2), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))
T c==> cMEM f0 f1 c==> cMEM f2 f3 c==> cMEM f3 creplace f4 cCONS cSND csplit_normal_list f5 f4 f6 f7 f8 cNIL f9 c==> cfinal_list f5 f3 c==> cMEM f4 f9 c==> c= f1 cSND csplit_normal_list f5 f4 f6 f7 f8 c==> c= f3 cSND csplit_normal_list f5 f4 f6 f7 f8 c==> c= cnext_el f6 f10 f11 c==> cuniq clist_of_darts f5 c==> call / c~ c= b0 cNIL f5 c==> ! c==> cMEM b0 clist_of_darts f5 cMEM c, cSND b0 cFST b0 clist_of_darts f5 c==> cMEM f7 f6 c==> cMEM f12 f6 c==> c< cindexf f11 f7 f6 cindexf f11 f12 f6 c==> c= cfind_face f5 f7 f6 c==> cMEM cSND csplit_normal_list f5 f4 f6 f7 f8 cntrans f5 f9 f4 f10 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f5 f4 f6 f7 f8 c==> cloop_list f5 cSND csplit_normal_list f5 f4 f6 f7 f8 c? / c/\ ccontour_list f5 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f0 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f5 ccat creplace f4 cCONS cSND csplit_normal_list f5 f4 f6 f7 f8 cNIL f9 cCONS cFST csplit_normal_list f5 f4 f6 f7 f8 cNIL
- |- ((\f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))) f)
T * / ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c~ cfinal_list b3 b5 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 b1 c/\ c= cprev_el b5 f0 b2 c/\ cfinal_list b3 f1 c/\ cfinal_list b3 f2 c/\ c= cSND csplit_normal_list b3 b5 b0 b1 b2 f2 c/\ cMEM f1 b4 c/\ c= cfind_face b3 b6 b0 c/\ cMEM f3 f2 cMEM f4 f1 c? / c/\ ccontour_list b3 b7 c/\ c~ c= b7 cNIL c/\ c= cHD b7 f4 c/\ c= cLAST b7 f3 cSUBSET * part cset_of_list b7 * part cset_of_list cflatten cfilter * part cfinal_list b3 ccat creplace b5 cCONS cSND csplit_normal_list b3 b5 b0 b1 b2 cNIL b4 cCONS cFST csplit_normal_list b3 b5 b0 b1 b2 cNIL f5
- ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) = T)
T c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c= cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 cT
- |- ((!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 f0 b4 c/\ cfinal_list b5 f1 c/\ cfinal_list b5 f2 c/\ cMEM f1 b6 c/\ c= cFST csplit_normal_list b5 b7 b2 b3 b4 f2 c/\ c= cfind_face b5 b8 b2 c/\ cMEM b1 f2 cMEM b0 f1 c? / c/\ ccontour_list b5 b9 c/\ c~ c= b9 cNIL c/\ c= cHD b9 b0 c/\ c= cLAST b9 b1 cSUBSET * part cset_of_list b9 * part cset_of_list cflatten cfilter * part cfinal_list b5 ccat creplace b7 cCONS cSND csplit_normal_list b5 b7 b2 b3 b4 cNIL b6 cCONS cFST csplit_normal_list b5 b7 b2 b3 b4 cNIL cT
- |- (((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) ==> ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)) = ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
- |- ((!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) = T)
T c= ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ cMEM f2 b2 c/\ c= cFST csplit_normal_list b1 b3 f4 f1 b0 f3 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f3 cMEM f6 f2 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f6 c/\ c= cLAST b5 f5 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL cT
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f2 f1 c==> c= cfind_face f0 f4 f1 c==> c==> cMEM f5 creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 c\/ cMEM f5 f8 c/\ cMEM f6 f8 c= f5 cSND csplit_normal_list f0 f6 f1 f4 f7 c==> c==> cMEM f9 creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f6 f8 c= f9 cSND csplit_normal_list f0 f6 f1 f4 f7 c==> c< cindexf f3 f4 f1 cindexf f3 f10 f1 c==> cMEM f11 f5 c==> cMEM f12 f9 c==> cMEM f4 f1 c==> cMEM f10 f1 c==> cMEM f5 cCONS cFST csplit_normal_list f0 f6 f1 f4 f7 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f6 f1 f4 f7 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> cMEM cFST csplit_normal_list f0 f6 f1 f4 f7 cntrans f0 f8 f6 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f6 f1 f4 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f6 f1 f4 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f6 f1 f4 f7 cNIL
- (((~ (A ==> (B \/ A))) ==> F) ==> ((~ (A ==> (B \/ A))) ==> F)) |- ((((~ (A ==> (B \/ A))) ==> F) ==> ((~ (A ==> (B \/ A))) ==> F)) /\ (((~ (A ==> (B \/ A))) ==> F) ==> ((~ (A ==> (B \/ A))) ==> F)))
T c==> c==> c==> c~ c==> f0 c\/ f1 f0 cF c==> c~ c==> f0 c\/ f1 f0 cF c/\ c==> c==> c~ c==> f0 c\/ f1 f0 cF c==> c~ c==> f0 c\/ f1 f0 cF c==> c==> c~ c==> f0 c\/ f1 f0 cF c==> c~ c==> f0 c\/ f1 f0 cF
- (?l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM d) l))), (~ ((final_list L) r)) |- (?l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l)))
T c==> c? / c/\ c/\ cfinal_list f0 b0 cMEM b0 f1 cMEM f2 b0 c==> c~ cfinal_list f0 f3 c? / c/\ c/\ cfinal_list f0 b0 c\/ cMEM b0 creplace f3 cCONS cSND csplit_normal_list f0 f3 f4 f5 f6 cNIL f1 cMEM b0 cCONS cFST csplit_normal_list f0 f3 f4 f5 f6 cNIL cMEM f2 b0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> (((MEM r) N) ==> ((r1 = (SND (((((split_normal_list L) r) f) y) z1))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (r2 = (SND (((((split_normal_list L) r) f) y) z1))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL c==> cfinal_list f0 f9 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c==> c= cfind_face f0 f4 f8 c==> cMEM f10 f7 c==> cMEM f11 f9 c==> cMEM f1 f6 c==> c= f9 cSND csplit_normal_list f0 f1 f8 f5 f3 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 c\/ cMEM f7 f6 c= f7 cSND csplit_normal_list f0 f1 f8 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
- |- (((!g. ((f o g) = (\x. (f (g x))))) ==> ((\g. ((f o g) = (\x. (f (g x))))) g)) = ((\g. ((f o g) = (\x. (f (g x))))) g))
T c= c==> ! c= * * part co f0 b0 / * f0 * b0 b1 * / c= * * part co f0 b0 / * f0 * b0 b1 f1 * / c= * * part co f0 b0 / * f0 * b0 b1 f1
- |- ((\u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))) u)
T * / ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 f0 b4 c/\ cfinal_list b5 f1 c/\ cfinal_list b5 f2 c/\ cMEM f2 b6 c/\ c= cFST csplit_normal_list b5 b7 b2 b3 b4 f1 c/\ c= cfind_face b5 b8 b2 c/\ cMEM b1 f2 cMEM b0 f1 c? / c/\ ccontour_list b5 b9 c/\ c~ c= b9 cNIL c/\ c= cHD b9 b0 c/\ c= cLAST b9 b1 cSUBSET * part cset_of_list b9 * part cset_of_list cflatten cfilter * part cfinal_list b5 ccat creplace b7 cCONS cSND csplit_normal_list b5 b7 b2 b3 b4 cNIL b6 cCONS cFST csplit_normal_list b5 b7 b2 b3 b4 cNIL f3
- ((~ (A ==> (A \/ B))) ==> F), (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) |- (((~ (A ==> (A \/ B))) ==> F) /\ ((~ (A ==> (A \/ B))) ==> F))
T c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c/\ c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> cMEM f10 f6 c==> cMEM f11 f9 c==> cMEM f7 f4 c==> cMEM f2 f1 c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> cMEM f12 f4 c==> c< cindexf f5 f7 f4 cindexf f5 f12 f4 c==> c= cfind_face f0 f7 f4 c==> cMEM cSND csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
- ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) = T)
T c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c= cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 cT
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- ((((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))) = T)
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c= c==> c/\ c= f4 cLAST f5 c/\ cMEM f5 cparts f0 f6 c/\ cMEM f6 f1 c/\ c~ cfinal_list f0 f6 c~ cMEM f4 cs_list f0 f2 f3 cMEM ce_list f4 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 cT
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) /\ (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f4 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f9 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- (~ (r' = NIL)), (r' = s), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), (x' IN (set_of_list s)), ((set_of_list r') SUBSET (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))), ((final_list L) r2) |- (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))
T c==> c~ c= f0 cNIL c==> c= f0 f1 c==> c= f2 cFST csplit_normal_list f3 f4 f5 f6 f7 c==> cIN f8 * part cset_of_list f1 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cFST csplit_normal_list f3 f4 f5 f6 f7 c==> cfinal_list f3 f2 cIN f8 * part cset_of_list cflatten cfilter * part cfinal_list f3 cAPPEND creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f9 cCONS cFST csplit_normal_list f3 f4 f5 f6 f7 cNIL
- (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((all (\l. (~ (l = NIL)))) L) /\ ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> cMEM f10 f6 c==> cMEM f11 f9 c==> cMEM f2 f1 c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f7 f4 c==> cMEM f12 f4 c==> c< cindexf f5 f7 f4 cindexf f5 f12 f4 c==> c= cfind_face f0 f7 f4 c==> cMEM cSND csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) N), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f9 f10 c==> cMEM f11 f8 c==> cMEM f10 f6 c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> cfinal_list f0 f10 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c/\ c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- (~ ((final_list L) r)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM u) r1), ((MEM v) r2), ((MEM r1) N), ((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((MEM r2) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r2) N) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 f9 c==> cMEM f10 f11 c==> cMEM f9 f6 c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cMEM f11 f6 c==> cMEM f11 creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 c==> cfinal_list f0 f9 c==> cfinal_list f0 f11 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f11 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f8 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- |- ((!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c~ cfinal_list b5 b7 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 f0 b4 c/\ cfinal_list b5 f1 c/\ cfinal_list b5 f2 c/\ c= cSND csplit_normal_list b5 b7 b2 b3 b4 f2 c/\ c= cFST csplit_normal_list b5 b7 b2 b3 b4 f1 c/\ c= cfind_face b5 b8 b2 c/\ cMEM b1 f2 cMEM b0 f1 c? / c/\ ccontour_list b5 b9 c/\ c~ c= b9 cNIL c/\ c= cHD b9 b0 c/\ c= cLAST b9 b1 cSUBSET * part cset_of_list b9 * part cset_of_list cflatten cfilter * part cfinal_list b5 ccat creplace b7 cCONS cSND csplit_normal_list b5 b7 b2 b3 b4 cNIL b6 cCONS cFST csplit_normal_list b5 b7 b2 b3 b4 cNIL cT
- (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((all (\l. (~ (l = NIL)))) L) /\ ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f2 f1 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> cMEM f4 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) |- (((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) = T)
T c==> cMEM f0 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c= cMEM f0 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL cT
- |- ((\xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) xs)
T * / ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 f2
- (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((all (\l. (~ (l = NIL)))) L) /\ ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c= f8 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f9 f4 c==> cMEM f10 f8 c==> cMEM f5 f11 c==> cMEM f8 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f11 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f8 c/\ call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cSND csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f11 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cSND csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f11 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) /\ (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> (((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cmarked_list f0 f6 f1 f4 c/\ c= cprev_el f1 f2 f3 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL c==> cMEM f8 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL c==> c= cfind_face f0 f4 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 c\/ cMEM f7 f6 c/\ cMEM f1 f6 c= f7 cSND csplit_normal_list f0 f1 f9 f5 f3 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 c\/ cMEM f8 f6 c/\ cMEM f1 f6 c= f8 cSND csplit_normal_list f0 f1 f9 f5 f3 c==> ! c==> cMEM b0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f4 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL
- |- (((!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))) ==> ((\r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))) r1)) = ((\r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))) r1))
T c= c==> ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c~ cfinal_list b6 b8 c/\ c= cl'z b6 b7 b8 b9 f0 c/\ c= cl'y b6 b8 b9 b4 c/\ c= cprev_el b8 f0 b5 c/\ cfinal_list b6 b0 c/\ cfinal_list b6 f1 c/\ c= cSND csplit_normal_list b6 b8 b3 b4 b5 f1 c/\ c= cFST csplit_normal_list b6 b8 b3 b4 b5 b0 c/\ c= cfind_face b6 b9 b3 c/\ cMEM b2 f1 cMEM b1 b0 c? / c/\ ccontour_list b6 b10 c/\ c~ c= b10 cNIL c/\ c= cHD b10 b1 c/\ c= cLAST b10 b2 cSUBSET * part cset_of_list b10 * part cset_of_list cflatten cfilter * part cfinal_list b6 ccat creplace b8 cCONS cSND csplit_normal_list b6 b8 b3 b4 b5 cNIL b7 cCONS cFST csplit_normal_list b6 b8 b3 b4 b5 cNIL * / ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c~ cfinal_list b6 b8 c/\ c= cl'z b6 b7 b8 b9 f0 c/\ c= cl'y b6 b8 b9 b4 c/\ c= cprev_el b8 f0 b5 c/\ cfinal_list b6 b0 c/\ cfinal_list b6 f1 c/\ c= cSND csplit_normal_list b6 b8 b3 b4 b5 f1 c/\ c= cFST csplit_normal_list b6 b8 b3 b4 b5 b0 c/\ c= cfind_face b6 b9 b3 c/\ cMEM b2 f1 cMEM b1 b0 c? / c/\ ccontour_list b6 b10 c/\ c~ c= b10 cNIL c/\ c= cHD b10 b1 c/\ c= cLAST b10 b2 cSUBSET * part cset_of_list b10 * part cset_of_list cflatten cfilter * part cfinal_list b6 ccat creplace b8 cCONS cSND csplit_normal_list b6 b8 b3 b4 b5 cNIL b7 cCONS cFST csplit_normal_list b6 b8 b3 b4 b5 cNIL f2 * / ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c~ cfinal_list b6 b8 c/\ c= cl'z b6 b7 b8 b9 f0 c/\ c= cl'y b6 b8 b9 b4 c/\ c= cprev_el b8 f0 b5 c/\ cfinal_list b6 b0 c/\ cfinal_list b6 f1 c/\ c= cSND csplit_normal_list b6 b8 b3 b4 b5 f1 c/\ c= cFST csplit_normal_list b6 b8 b3 b4 b5 b0 c/\ c= cfind_face b6 b9 b3 c/\ cMEM b2 f1 cMEM b1 b0 c? / c/\ ccontour_list b6 b10 c/\ c~ c= b10 cNIL c/\ c= cHD b10 b1 c/\ c= cLAST b10 b2 cSUBSET * part cset_of_list b10 * part cset_of_list cflatten cfilter * part cfinal_list b6 ccat creplace b8 cCONS cSND csplit_normal_list b6 b8 b3 b4 b5 cNIL b7 cCONS cFST csplit_normal_list b6 b8 b3 b4 b5 cNIL f2
- |- ((\r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))) r2)
T * / ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b7 c/\ cgood_list_nodes b7 c/\ cmarked_list b7 b8 b9 b10 c/\ c~ cfinal_list b7 b9 c/\ c= cl'z b7 b8 b9 b10 f0 c/\ c= cl'y b7 b9 b10 b5 c/\ c= cprev_el b9 f0 b6 c/\ cfinal_list b7 b1 c/\ cfinal_list b7 b0 c/\ cMEM b0 b8 c/\ c= cFST csplit_normal_list b7 b9 b4 b5 b6 b1 c/\ c= cfind_face b7 b10 b4 c/\ cMEM b3 b0 cMEM b2 b1 c? / c/\ ccontour_list b7 b11 c/\ c~ c= b11 cNIL c/\ c= cHD b11 b2 c/\ c= cLAST b11 b3 cSUBSET * part cset_of_list b11 * part cset_of_list cflatten cfilter * part cfinal_list b7 ccat creplace b9 cCONS cSND csplit_normal_list b7 b9 b4 b5 b6 cNIL b8 cCONS cFST csplit_normal_list b7 b9 b4 b5 b6 cNIL f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (FST (((((split_normal_list L) r) f) y) z1))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f5 f6 c==> c= cfind_face f0 f3 f2 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c\/ cMEM f7 f8 c/\ cMEM f1 f8 c= f7 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f1 f8 c= f9 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c< cindexf f6 f3 f2 cindexf f6 f10 f2 c==> cMEM f11 f7 c==> cMEM f12 f9 c==> cMEM f3 f2 c==> cMEM f10 f2 c==> cMEM cFST csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f8 f1 f5 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= f7 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= f9 cFST csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
- |- ((((APPEND l) m) = NIL) = ((l = NIL) /\ (m = NIL)))
T c= c= cAPPEND f0 f1 cNIL c/\ c= f0 cNIL c= f1 cNIL
- (~ (r' = NIL)), (r' = s), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), (x' IN (set_of_list s)), ((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))), ((final_list L) r2) |- ((x' IN (set_of_list s)) /\ (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> c~ c= f0 cNIL c==> c= f0 f1 c==> c= f2 cSND csplit_normal_list f3 f4 f5 f6 f7 c==> cMEM f2 creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f8 c==> cIN f9 * part cset_of_list f1 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cSND csplit_normal_list f3 f4 f5 f6 f7 c==> cfinal_list f3 f2 c/\ cIN f9 * part cset_of_list f1 cIN f9 * part cset_of_list cflatten cfilter * part cfinal_list f3 cAPPEND creplace f4 cCONS cSND csplit_normal_list f3 f4 f5 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f3 f4 f5 f6 f7 cNIL
- |- ((\f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))) f)
T * / ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c~ cfinal_list b3 b5 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 b1 c/\ c= cprev_el b5 f0 b2 c/\ cfinal_list b3 f1 c/\ cfinal_list b3 f2 c/\ cMEM f1 b4 c/\ c= cFST csplit_normal_list b3 b5 b0 b1 b2 f2 c/\ c= cfind_face b3 b6 b0 c/\ cMEM f3 f2 cMEM f4 f1 c? / c/\ ccontour_list b3 b7 c/\ c~ c= b7 cNIL c/\ c= cHD b7 f4 c/\ c= cLAST b7 f3 cSUBSET * part cset_of_list b7 * part cset_of_list cflatten cfilter * part cfinal_list b3 ccat creplace b5 cCONS cSND csplit_normal_list b3 b5 b0 b1 b2 cNIL b4 cCONS cFST csplit_normal_list b3 b5 b0 b1 b2 cNIL f5
- |- (((!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) ==> ((\z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) z1)) = ((\z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) z1))
T c= c==> ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ c= cSND csplit_normal_list b1 b3 f4 f1 b0 f3 c/\ c= cFST csplit_normal_list b1 b3 f4 f1 b0 f2 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f3 cMEM f6 f2 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f6 c/\ c= cLAST b5 f5 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ c= cSND csplit_normal_list b1 b3 f4 f1 b0 f3 c/\ c= cFST csplit_normal_list b1 b3 f4 f1 b0 f2 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f3 cMEM f6 f2 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f6 c/\ c= cLAST b5 f5 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL f7 * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ c= cSND csplit_normal_list b1 b3 f4 f1 b0 f3 c/\ c= cFST csplit_normal_list b1 b3 f4 f1 b0 f2 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f3 cMEM f6 f2 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f6 c/\ c= cLAST b5 f5 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL f7
- |- ((\z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r2) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) z1)
T * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ cMEM f3 b2 c/\ c= cFST csplit_normal_list b1 b3 f4 f1 b0 f2 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f3 cMEM f6 f2 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f6 c/\ c= cLAST b5 f5 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL f7
- |- ((\r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))) r1)
T * / ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c~ cfinal_list b6 b8 c/\ c= cl'z b6 b7 b8 b9 f0 c/\ c= cl'y b6 b8 b9 b4 c/\ c= cprev_el b8 f0 b5 c/\ cfinal_list b6 b0 c/\ cfinal_list b6 f1 c/\ c= cSND csplit_normal_list b6 b8 b3 b4 b5 f1 c/\ c= cFST csplit_normal_list b6 b8 b3 b4 b5 b0 c/\ c= cfind_face b6 b9 b3 c/\ cMEM b2 f1 cMEM b1 b0 c? / c/\ ccontour_list b6 b10 c/\ c~ c= b10 cNIL c/\ c= cHD b10 b1 c/\ c= cLAST b10 b2 cSUBSET * part cset_of_list b10 * part cset_of_list cflatten cfilter * part cfinal_list b6 ccat creplace b8 cCONS cSND csplit_normal_list b6 b8 b3 b4 b5 cNIL b7 cCONS cFST csplit_normal_list b6 b8 b3 b4 b5 cNIL f2
- |- ((A ==> (B \/ A)) ==> (A ==> (B \/ A)))
T c==> c==> f0 c\/ f1 f0 c==> f0 c\/ f1 f0
- (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- ((((next_el f) x) = w) /\ ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))
T c==> c= cnext_el f0 f1 f2 c==> c= cfind_face f3 f1 f0 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f3 f5 f0 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f3 f5 f0 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f3 f5 f0 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f3 f5 f0 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> cMEM f4 cCONS cFST csplit_normal_list f3 f5 f0 f6 f7 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f3 f5 f0 f6 f7 cNIL c==> cfinal_list f3 f9 c/\ c= cnext_el f0 f1 f2 c==> cuniq clist_of_darts f3 c==> call / c~ c= b0 cNIL f3 c==> ! c==> cMEM b0 clist_of_darts f3 cMEM c, cSND b0 cFST b0 clist_of_darts f3 c==> cMEM f6 f0 c==> cMEM f12 f0 c==> c< cindexf f2 f6 f0 cindexf f2 f12 f0 c==> c= cfind_face f3 f6 f0 c==> cMEM cFST csplit_normal_list f3 f5 f0 f6 f7 cntrans f3 f8 f5 f1 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f3 f5 f0 f6 f7 c==> cloop_list f3 cFST csplit_normal_list f3 f5 f0 f6 f7 c? / c/\ ccontour_list f3 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f3 ccat creplace f5 cCONS cSND csplit_normal_list f3 f5 f0 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f3 f5 f0 f6 f7 cNIL
- |- (((((~ (A ==> (B \/ A))) ==> F) ==> ((~ (A ==> (B \/ A))) ==> F)) ==> (((~ (A ==> (B \/ A))) ==> F) ==> ((~ (A ==> (B \/ A))) ==> F))) = (((~ (A ==> (B \/ A))) ==> F) ==> ((~ (A ==> (B \/ A))) ==> F)))
T c= c==> c==> c==> c~ c==> f0 c\/ f1 f0 cF c==> c~ c==> f0 c\/ f1 f0 cF c==> c==> c~ c==> f0 c\/ f1 f0 cF c==> c~ c==> f0 c\/ f1 f0 cF c==> c==> c~ c==> f0 c\/ f1 f0 cF c==> c~ c==> f0 c\/ f1 f0 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (FST (((((split_normal_list L) r) f) y) z1))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (FST (((((split_normal_list L) r) f) y) z1))), (r2 = (FST (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM y) f), ((MEM z) f), ((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))), ((final_list L) r2) |- (((MEM v) (FST (((((split_normal_list L) r) f) y) z1))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f5 f6 c==> c= f7 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= f8 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f9 c\/ cMEM f7 f9 c/\ cMEM f1 f9 c= f7 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c==> cMEM f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f9 c\/ cMEM f8 f9 c/\ cMEM f1 f9 c= f8 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c< cindexf f6 f3 f2 cindexf f6 f10 f2 c==> cMEM f11 f7 c==> cMEM f12 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cMEM f3 f2 c==> cMEM f10 f2 c==> cMEM cFST csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f9 f1 f5 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cfinal_list f0 f8 c/\ cMEM f12 cFST csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f9 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
- |- ((!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) = T)
T c= ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ c= cSND csplit_normal_list b1 b3 f4 f1 b0 f3 c/\ c= cFST csplit_normal_list b1 b3 f4 f1 b0 f2 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f3 cMEM f6 f2 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f6 c/\ c= cLAST b5 f5 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL cT
- ((((indexf w) y) f) < (((indexf w) z) f)) |- (((((indexf w) y) f) < (((indexf w) z) f)) = T)
T c==> c< cindexf f0 f1 f2 cindexf f0 f3 f2 c= c< cindexf f0 f1 f2 cindexf f0 f3 f2 cT
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c==> c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f6 f1 c/\ cMEM f2 f1 c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> cMEM f10 f6 c==> cMEM f11 f9 c==> cMEM f7 f4 c==> cMEM f12 f4 c==> cMEM f6 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> c< cindexf f5 f7 f4 cindexf f5 f12 f4 c==> c= cfind_face f0 f7 f4 c==> cMEM cFST csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
- |- ((?x. ((MEM x) s)) = (~ (s = NIL)))
T c= c? / cMEM b0 f0 c~ c= f0 cNIL
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- |- ((!B. (!A. (A ==> (A \/ B)))) = ((!A. (A ==> (A \/ T))) /\ (!A. (A ==> (A \/ F)))))
T c= ! ! c==> b1 c\/ b1 b0 c/\ ! c==> b0 c\/ b0 cT ! c==> b0 c\/ b0 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f2 f1 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> cMEM f4 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- |- ((((\s. (r' = s)) s) ==> (?s. (r' = s))) = T)
T c= c==> * / c= f0 b0 f1 c? / c= f0 b0 cT
- (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> cMEM f10 f6 c==> cMEM f11 f9 c==> cMEM f2 f1 c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c==> cfinal_list f0 f9 c/\ cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f7 f4 c==> cMEM f12 f4 c==> c< cindexf f5 f7 f4 cindexf f5 f12 f4 c==> c= cfind_face f0 f7 f4 c==> cMEM cSND csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
- (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) |- ((((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x)) = T)
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c= c==> cMEM f4 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 f4 cT
- (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c==> c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f6 f1 c/\ cMEM f2 f1 c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> cMEM f10 f6 c==> cMEM f11 f9 c==> cMEM f6 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f7 f4 c==> cMEM f12 f4 c==> c< cindexf f5 f7 f4 cindexf f5 f12 f4 c==> c= cfind_face f0 f7 f4 c==> cMEM cFST csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((((indexf w) y) f) < (((indexf w) z) f)) /\ ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c< cindexf f3 f6 f1 cindexf f3 f10 f1 c==> cMEM f11 f4 c==> cMEM f12 f9 c==> cMEM f6 f1 c==> cMEM f10 f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ c< cindexf f3 f6 f1 cindexf f3 f10 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f4 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f9 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f2 f1 c==> c= cfind_face f0 f4 f1 c==> c==> cMEM f5 creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 c\/ cMEM f5 f8 c/\ cMEM f6 f8 c= f5 cSND csplit_normal_list f0 f6 f1 f4 f7 c==> c==> cMEM f9 creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f6 f8 c= f9 cSND csplit_normal_list f0 f6 f1 f4 f7 c==> c< cindexf f3 f4 f1 cindexf f3 f10 f1 c==> cMEM f11 f5 c==> cMEM f12 f9 c==> cMEM f4 f1 c==> cMEM f10 f1 c==> cMEM f5 cCONS cFST csplit_normal_list f0 f6 f1 f4 f7 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f6 f1 f4 f7 cNIL c==> cMEM cFST csplit_normal_list f0 f6 f1 f4 f7 cntrans f0 f8 f6 f2 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ cMEM cFST csplit_normal_list f0 f6 f1 f4 f7 cntrans f0 f8 f6 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f6 f1 f4 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f6 f1 f4 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f6 f1 f4 f7 cNIL
- |- ((\r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))) r1)
T * / ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c~ cfinal_list b6 b8 c/\ c= cl'z b6 b7 b8 b9 f0 c/\ c= cl'y b6 b8 b9 b4 c/\ c= cprev_el b8 f0 b5 c/\ cfinal_list b6 b0 c/\ cfinal_list b6 f1 c/\ cMEM b0 b7 c/\ c= cFST csplit_normal_list b6 b8 b3 b4 b5 f1 c/\ c= cfind_face b6 b9 b3 c/\ cMEM b2 f1 cMEM b1 b0 c? / c/\ ccontour_list b6 b10 c/\ c~ c= b10 cNIL c/\ c= cHD b10 b1 c/\ c= cLAST b10 b2 cSUBSET * part cset_of_list b10 * part cset_of_list cflatten cfilter * part cfinal_list b6 ccat creplace b8 cCONS cSND csplit_normal_list b6 b8 b3 b4 b5 cNIL b7 cCONS cFST csplit_normal_list b6 b8 b3 b4 b5 cNIL f2
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c==> c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f6 f1 c/\ cMEM f2 f1 c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> cMEM f10 f6 c==> cMEM f11 f9 c==> cMEM f6 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> cMEM f7 f4 c==> cMEM f12 f4 c==> c< cindexf f5 f7 f4 cindexf f5 f12 f4 c==> c= cfind_face f0 f7 f4 c==> cMEM cFST csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
- (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (r2 = (SND (((((split_normal_list L) r) f) y) z1))))) |- ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (r2 = (SND (((((split_normal_list L) r) f) y) z1))))) = T)
T c==> c==> cMEM f0 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c\/ cMEM f0 f6 c= f0 cSND csplit_normal_list f2 f1 f3 f4 f5 c= c==> cMEM f0 creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL f6 c\/ cMEM f0 f6 c= f0 cSND csplit_normal_list f2 f1 f3 f4 f5 cT
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- (x' IN (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) |- ((x' IN (set_of_list (FST (((((split_normal_list L) r) f) y) z1)))) = T)
T c==> cIN f0 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5 c= cIN f0 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5 cT
- |- ((\y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))) y)
T * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 b0 c/\ c= cprev_el b4 f0 b1 c/\ cfinal_list b2 f1 c/\ cfinal_list b2 f2 c/\ c= cSND csplit_normal_list b2 b4 f3 b0 b1 f2 c/\ c= cFST csplit_normal_list b2 b4 f3 b0 b1 f1 c/\ c= cfind_face b2 b5 f3 c/\ cMEM f4 f2 cMEM f5 f1 c? / c/\ ccontour_list b2 b6 c/\ c~ c= b6 cNIL c/\ c= cHD b6 f5 c/\ c= cLAST b6 f4 cSUBSET * part cset_of_list b6 * part cset_of_list cflatten cfilter * part cfinal_list b2 ccat creplace b4 cCONS cSND csplit_normal_list b2 b4 f3 b0 b1 cNIL b3 cCONS cFST csplit_normal_list b2 b4 f3 b0 b1 cNIL f6
- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))), (~ ((final_list L) r)) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cfinal_dart_list f0 f3 c==> c~ cfinal_list f0 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f4 cCONS cSND csplit_normal_list f0 f4 f5 f6 f7 cNIL f3 cCONS cFST csplit_normal_list f0 f4 f5 f6 f7 cNIL
- (r' = NIL) |- (NIL = r')
T c==> c= f0 cNIL c= cNIL f0
- |- ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 * f1 b1 b1 * f1 f0
- |- ((\A. ((~ (A ==> (A \/ B))) ==> F)) A)
T * / c==> c~ c==> b0 c\/ b0 f0 cF f1
- |- ((\x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) x)
T * / ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 f0
- |- (((A ==> (B \/ A)) ==> (A ==> (B \/ A))) = (A ==> (B \/ A)))
T c= c==> c==> f0 c\/ f1 f0 c==> f0 c\/ f1 f0 c==> f0 c\/ f1 f0
- (good_list L), (good_list_nodes L) |- ((good_list_nodes L) /\ (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> (((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)) ==> ((((find_face L) x) = f) ==> (((MEM v) r2) ==> (((MEM u) r1) ==> ((((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))) ==> ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c/\ cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cl'y f0 f2 f3 f5 c==> c= cprev_el f2 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL c==> cMEM f8 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> c==> cMEM f7 creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 c\/ cMEM f7 f1 c/\ cMEM f2 f1 c= f7 cSND csplit_normal_list f0 f2 f9 f5 f6 c==> c==> cMEM f8 creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 c\/ cMEM f8 f1 c/\ cMEM f2 f1 c= f8 cSND csplit_normal_list f0 f2 f9 f5 f6 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f9 f3 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
- (~ (A ==> (A \/ B))) |- ((~ (A ==> (A \/ B))) /\ F)
T c==> c~ c==> f0 c\/ f0 f1 c/\ c~ c==> f0 c\/ f0 f1 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c==> cMEM f4 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f4 f8 c/\ cMEM f5 f8 c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c==> cMEM f9 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f5 f8 c= f9 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f10 f4 c==> cMEM f11 f9 c==> cMEM f6 f1 c==> cMEM f12 f1 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cFST csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f8 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f4 cFST csplit_normal_list f0 f5 f1 f6 f7 c==> c= f9 cFST csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- |- ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n)
T * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1
- |- ((!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))) = T)
T c= ! ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 b0 c/\ c= cprev_el b4 f0 b1 c/\ cfinal_list b2 f1 c/\ cfinal_list b2 f2 c/\ cMEM f1 b3 c/\ c= cFST csplit_normal_list b2 b4 f3 b0 b1 f2 c/\ c= cfind_face b2 b5 f3 c/\ cMEM f4 f2 cMEM f5 f1 c? / c/\ ccontour_list b2 b6 c/\ c~ c= b6 cNIL c/\ c= cHD b6 f5 c/\ c= cLAST b6 f4 cSUBSET * part cset_of_list b6 * part cset_of_list cflatten cfilter * part cfinal_list b2 ccat creplace b4 cCONS cSND csplit_normal_list b2 b4 f3 b0 b1 cNIL b3 cCONS cFST csplit_normal_list b2 b4 f3 b0 b1 cNIL cT
- |- (((!z. (!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r2) /\ ((MEM v) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))) ==> ((\z. (!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r2) /\ ((MEM v) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))) z)) = ((\z. (!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r2) /\ ((MEM v) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))) z))
T c= c==> ! ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b8 c/\ cgood_list_nodes b8 c/\ cmarked_list b8 b9 b10 b11 c/\ c~ cfinal_list b8 b10 c/\ c= cl'z b8 b9 b10 b11 b0 c/\ c= cl'y b8 b10 b11 b6 c/\ c= cprev_el b10 b0 b7 c/\ cfinal_list b8 b2 c/\ cfinal_list b8 b1 c/\ c= cSND csplit_normal_list b8 b10 b5 b6 b7 b1 c/\ cMEM b2 b9 c/\ c= cfind_face b8 b11 b5 c/\ cMEM b3 b1 cMEM b4 b2 c? / c/\ ccontour_list b8 b12 c/\ c~ c= b12 cNIL c/\ c= cHD b12 b3 c/\ c= cLAST b12 b4 cSUBSET * part cset_of_list b12 * part cset_of_list cflatten cfilter * part cfinal_list b8 ccat creplace b10 cCONS cSND csplit_normal_list b8 b10 b5 b6 b7 cNIL b9 cCONS cFST csplit_normal_list b8 b10 b5 b6 b7 cNIL * / ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b8 c/\ cgood_list_nodes b8 c/\ cmarked_list b8 b9 b10 b11 c/\ c~ cfinal_list b8 b10 c/\ c= cl'z b8 b9 b10 b11 b0 c/\ c= cl'y b8 b10 b11 b6 c/\ c= cprev_el b10 b0 b7 c/\ cfinal_list b8 b2 c/\ cfinal_list b8 b1 c/\ c= cSND csplit_normal_list b8 b10 b5 b6 b7 b1 c/\ cMEM b2 b9 c/\ c= cfind_face b8 b11 b5 c/\ cMEM b3 b1 cMEM b4 b2 c? / c/\ ccontour_list b8 b12 c/\ c~ c= b12 cNIL c/\ c= cHD b12 b3 c/\ c= cLAST b12 b4 cSUBSET * part cset_of_list b12 * part cset_of_list cflatten cfilter * part cfinal_list b8 ccat creplace b10 cCONS cSND csplit_normal_list b8 b10 b5 b6 b7 cNIL b9 cCONS cFST csplit_normal_list b8 b10 b5 b6 b7 cNIL f0 * / ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b8 c/\ cgood_list_nodes b8 c/\ cmarked_list b8 b9 b10 b11 c/\ c~ cfinal_list b8 b10 c/\ c= cl'z b8 b9 b10 b11 b0 c/\ c= cl'y b8 b10 b11 b6 c/\ c= cprev_el b10 b0 b7 c/\ cfinal_list b8 b2 c/\ cfinal_list b8 b1 c/\ c= cSND csplit_normal_list b8 b10 b5 b6 b7 b1 c/\ cMEM b2 b9 c/\ c= cfind_face b8 b11 b5 c/\ cMEM b3 b1 cMEM b4 b2 c? / c/\ ccontour_list b8 b12 c/\ c~ c= b12 cNIL c/\ c= cHD b12 b3 c/\ c= cLAST b12 b4 cSUBSET * part cset_of_list b12 * part cset_of_list cflatten cfilter * part cfinal_list b8 ccat creplace b10 cCONS cSND csplit_normal_list b8 b10 b5 b6 b7 cNIL b9 cCONS cFST csplit_normal_list b8 b10 b5 b6 b7 cNIL f0
- |- ((!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((MEM r1) N) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c~ cfinal_list b3 b5 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 b1 c/\ c= cprev_el b5 f0 b2 c/\ cfinal_list b3 f1 c/\ cfinal_list b3 f2 c/\ cMEM f1 b4 c/\ c= cFST csplit_normal_list b3 b5 b0 b1 b2 f2 c/\ c= cfind_face b3 b6 b0 c/\ cMEM f3 f2 cMEM f4 f1 c? / c/\ ccontour_list b3 b7 c/\ c~ c= b7 cNIL c/\ c= cHD b7 f4 c/\ c= cLAST b7 f3 cSUBSET * part cset_of_list b7 * part cset_of_list cflatten cfilter * part cfinal_list b3 ccat creplace b5 cCONS cSND csplit_normal_list b3 b5 b0 b1 b2 cNIL b4 cCONS cFST csplit_normal_list b3 b5 b0 b1 b2 cNIL cT
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (FST (((((split_normal_list L) r) f) y) z1))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- ((uniq (FST (((((split_normal_list L) r) f) y) z1))) /\ (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f5 f6 c==> c= cfind_face f0 f5 f2 c==> c= cfind_face f0 f3 f2 c==> c==> cMEM f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c\/ cMEM f7 f8 c/\ cMEM f1 f8 c= f7 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c==> cMEM f9 creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f1 f8 c= f9 cSND csplit_normal_list f0 f1 f2 f3 f4 c==> c< cindexf f6 f3 f2 cindexf f6 f10 f2 c==> cMEM f11 f7 c==> cMEM f12 f9 c==> cMEM f3 f2 c==> cMEM f10 f2 c==> cMEM f7 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL c==> cMEM cFST csplit_normal_list f0 f1 f2 f3 f4 cntrans f0 f8 f1 f5 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ cuniq cFST csplit_normal_list f0 f1 f2 f3 f4 c==> cloop_list f0 cFST csplit_normal_list f0 f1 f2 f3 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f8 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL
- (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c==> c==> cMEM f6 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f6 f1 c/\ cMEM f2 f1 c= f6 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f7 f8 c==> cMEM f10 f6 c==> cMEM f11 f9 c==> cMEM f6 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL c==> cfinal_list f0 f9 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f7 f4 c==> cMEM f12 f4 c==> c< cindexf f5 f7 f4 cindexf f5 f12 f4 c==> c= cfind_face f0 f7 f4 c==> cMEM cFST csplit_normal_list f0 f2 f4 f7 f8 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f2 f4 f7 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f7 f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f7 f8 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) y) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM z) f), ((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r1 = (FST (((((split_normal_list L) r) f) y) z1))) ==> ((r2 = (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f4 f1 c==> c==> cMEM f5 creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 c\/ cMEM f5 f8 c/\ cMEM f6 f8 c= f5 cSND csplit_normal_list f0 f6 f1 f4 f7 c==> c==> cMEM f9 creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 c\/ cMEM f9 f8 c/\ cMEM f6 f8 c= f9 cSND csplit_normal_list f0 f6 f1 f4 f7 c==> c< cindexf f3 f4 f1 cindexf f3 f10 f1 c==> cMEM f11 f5 c==> cMEM f12 f9 c==> cMEM f4 f1 c==> cMEM f10 f1 c==> cMEM cFST csplit_normal_list f0 f6 f1 f4 f7 cntrans f0 f8 f6 f2 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f9 c/\ cMEM cFST csplit_normal_list f0 f6 f1 f4 f7 cntrans f0 f8 f6 f2 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f6 f1 f4 f7 c==> cloop_list f0 cFST csplit_normal_list f0 f6 f1 f4 f7 c==> c= f5 cFST csplit_normal_list f0 f6 f1 f4 f7 c==> c= f9 cFST csplit_normal_list f0 f6 f1 f4 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f6 cCONS cSND csplit_normal_list f0 f6 f1 f4 f7 cNIL f8 cCONS cFST csplit_normal_list f0 f6 f1 f4 f7 cNIL
- (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r2) |- ((((next_el f) x) = w) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (FST (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (FST (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (FST (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))
T c==> c= cfind_face f0 f1 f2 c==> c==> cMEM f3 creplace f4 cCONS cSND csplit_normal_list f0 f4 f2 f5 f6 cNIL f7 c\/ cMEM f3 f7 c/\ cMEM f4 f7 c= f3 cSND csplit_normal_list f0 f4 f2 f5 f6 c==> c==> cMEM f8 creplace f4 cCONS cSND csplit_normal_list f0 f4 f2 f5 f6 cNIL f7 c\/ cMEM f8 f7 c/\ cMEM f4 f7 c= f8 cSND csplit_normal_list f0 f4 f2 f5 f6 c==> cMEM f9 f3 c==> cMEM f10 f8 c==> cMEM f3 cCONS cFST csplit_normal_list f0 f4 f2 f5 f6 cNIL c==> cMEM f8 cCONS cFST csplit_normal_list f0 f4 f2 f5 f6 cNIL c==> cfinal_list f0 f8 c==> c= cnext_el f2 f1 f11 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f5 f2 c==> cMEM f12 f2 c==> c< cindexf f11 f5 f2 cindexf f11 f12 f2 c==> c= cfind_face f0 f5 f2 c==> cMEM cFST csplit_normal_list f0 f4 f2 f5 f6 cntrans f0 f7 f4 f1 cNUMERAL cBIT1 c_0 c==> cuniq cFST csplit_normal_list f0 f4 f2 f5 f6 c==> cloop_list f0 cFST csplit_normal_list f0 f4 f2 f5 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f4 cCONS cSND csplit_normal_list f0 f4 f2 f5 f6 cNIL f7 cCONS cFST csplit_normal_list f0 f4 f2 f5 f6 cNIL
- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))), (~ ((final_list L) r)) |- ((?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cfinal_dart_list f0 f3 c==> c~ cfinal_list f0 f4 c/\ c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cfinal_dart_list f0 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f4 cCONS cSND csplit_normal_list f0 f4 f5 f6 f7 cNIL f3 cCONS cFST csplit_normal_list f0 f4 f5 f6 f7 cNIL
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))), ((~ (x = f)) /\ ((MEM x) g)) |- (((~ (x = f)) /\ ((MEM x) g)) /\ ((MEM x) (((replace f) xs) g)))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c==> c/\ c~ c= f0 f1 cMEM f0 f2 c/\ c/\ c~ c= f0 f1 cMEM f0 f2 cMEM f0 creplace f1 f3 f2
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- (?r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL))))))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((final_list L) r2) |- ((?r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = v) /\ (((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) f) y) z1)))) /\ (~ (r' = NIL))))))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c? / c/\ ccontour_list f0 b0 c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list cSND csplit_normal_list f0 f3 f4 f5 f6 c~ c= b0 cNIL c==> c= f7 cSND csplit_normal_list f0 f3 f4 f5 f6 c==> cMEM f7 creplace f3 cCONS cSND csplit_normal_list f0 f3 f4 f5 f6 cNIL f8 c==> cfinal_list f0 f7 c/\ c? / c/\ ccontour_list f0 b0 c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list cSND csplit_normal_list f0 f3 f4 f5 f6 c~ c= b0 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f3 cCONS cSND csplit_normal_list f0 f3 f4 f5 f6 cNIL f8 cCONS cFST csplit_normal_list f0 f3 f4 f5 f6 cNIL
- (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM r1) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r1) N) \/ (((MEM r) N) /\ (r1 = (SND (((((split_normal_list L) r) f) y) z1)))))), (((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ==> (((MEM r2) N) \/ (((MEM r) N) /\ (r2 = (SND (((((split_normal_list L) r) f) y) z1)))))), ((MEM u) r1), ((MEM v) r2), ((MEM r1) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ cfinal_list f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cfind_face f0 f3 f4 c==> c==> cMEM f9 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f9 f1 c/\ cMEM f2 f1 c= f9 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> c==> cMEM f10 creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 c\/ cMEM f10 f1 c/\ cMEM f2 f1 c= f10 cSND csplit_normal_list f0 f2 f4 f8 f7 c==> cMEM f11 f9 c==> cMEM f12 f10 c==> cMEM f9 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> cMEM f10 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL c==> cfinal_list f0 f9 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c/\ c= cnext_el f4 f3 f5 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f12 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f4 f8 f7 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f4 f8 f7 cNIL
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (((next_el f) x) = w), (r1 = (SND (((((split_normal_list L) r) f) y) z1))), (r2 = (SND (((((split_normal_list L) r) f) y) z1))), ((MEM u) r1), ((MEM v) r2), ((MEM y) f), ((MEM r) N), ((MEM r2) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)), ((all (\l. (~ (l = NIL)))) L), ((final_list L) r2) |- (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq (SND (((((split_normal_list L) r) f) y) z1))) ==> (((loop_list L) (SND (((((split_normal_list L) r) f) y) z1))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> c= cnext_el f1 f2 f3 c==> c= f4 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> c= f8 cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cMEM f9 f4 c==> cMEM f10 f8 c==> cMEM f6 f1 c==> cMEM f5 f11 c==> cMEM f8 creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f11 c==> call / c~ c= b0 cNIL f0 c==> cfinal_list f0 f8 c==> cMEM f12 f1 c==> c< cindexf f3 f6 f1 cindexf f3 f12 f1 c==> c= cfind_face f0 f6 f1 c==> cMEM cSND csplit_normal_list f0 f5 f1 f6 f7 cntrans f0 f11 f5 f2 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f5 f1 f6 f7 c==> cloop_list f0 cSND csplit_normal_list f0 f5 f1 f6 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS cSND csplit_normal_list f0 f5 f1 f6 f7 cNIL f11 cCONS cFST csplit_normal_list f0 f5 f1 f6 f7 cNIL
- |- ((f o g) = (\x. (f (g x))))
T c= * * part co f0 f1 / * f0 * f1 b0
- |- ((!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))) = T)
T c= ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ cfinal_list b1 f2 c/\ cfinal_list b1 f3 c/\ c= cSND csplit_normal_list b1 b3 f4 f1 b0 f3 c/\ cMEM f2 b2 c/\ c= cfind_face b1 b4 f4 c/\ cMEM f5 f3 cMEM f6 f2 c? / c/\ ccontour_list b1 b5 c/\ c~ c= b5 cNIL c/\ c= cHD b5 f6 c/\ c= cLAST b5 f5 cSUBSET * part cset_of_list b5 * part cset_of_list cflatten cfilter * part cfinal_list b1 ccat creplace b3 cCONS cSND csplit_normal_list b1 b3 f4 f1 b0 cNIL b2 cCONS cFST csplit_normal_list b1 b3 f4 f1 b0 cNIL cT
- |- ((!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))) = T)
T c= ! ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 b0 c/\ c= cprev_el b4 f0 b1 c/\ cfinal_list b2 f1 c/\ cfinal_list b2 f2 c/\ c= cSND csplit_normal_list b2 b4 f3 b0 b1 f2 c/\ c= cFST csplit_normal_list b2 b4 f3 b0 b1 f1 c/\ c= cfind_face b2 b5 f3 c/\ cMEM f4 f2 cMEM f5 f1 c? / c/\ ccontour_list b2 b6 c/\ c~ c= b6 cNIL c/\ c= cHD b6 f5 c/\ c= cLAST b6 f4 cSUBSET * part cset_of_list b6 * part cset_of_list cflatten cfilter * part cfinal_list b2 ccat creplace b4 cCONS cSND csplit_normal_list b2 b4 f3 b0 b1 cNIL b3 cCONS cFST csplit_normal_list b2 b4 f3 b0 b1 cNIL cT
- |- ((!r2. (!r1. (!u. (!v. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((FST (((((split_normal_list L) r) f) y) z1)) = r1) /\ ((((find_face L) x) = f) /\ (((MEM v) r2) /\ ((MEM u) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b7 c/\ cgood_list_nodes b7 c/\ cmarked_list b7 b8 b9 b10 c/\ c~ cfinal_list b7 b9 c/\ c= cl'z b7 b8 b9 b10 f0 c/\ c= cl'y b7 b9 b10 b5 c/\ c= cprev_el b9 f0 b6 c/\ cfinal_list b7 b1 c/\ cfinal_list b7 b0 c/\ c= cSND csplit_normal_list b7 b9 b4 b5 b6 b0 c/\ c= cFST csplit_normal_list b7 b9 b4 b5 b6 b1 c/\ c= cfind_face b7 b10 b4 c/\ cMEM b3 b0 cMEM b2 b1 c? / c/\ ccontour_list b7 b11 c/\ c~ c= b11 cNIL c/\ c= cHD b11 b2 c/\ c= cLAST b11 b3 cSUBSET * part cset_of_list b11 * part cset_of_list cflatten cfilter * part cfinal_list b7 ccat creplace b9 cCONS cSND csplit_normal_list b7 b9 b4 b5 b6 cNIL b8 cCONS cFST csplit_normal_list b7 b9 b4 b5 b6 cNIL cT
