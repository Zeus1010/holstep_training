N Iunbuig.L13_LEMMA
C |- (main_nonlinear_terminal_v11 ==> (!V. (!E. (!FF. (!s. (!v. (((((IMAGE (\i. ((v i) , (v (SUC i))))) UNIV) = FF) /\ ((is_scs_v39 s) /\ (((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((scs_basic_v39 s) /\ ((scs_generic v) /\ (((BBs_v39 s) v) /\ ((((IMAGE v) UNIV) = V) /\ ((((IMAGE (\i. ((v i) INSERT ((v (SUC i)) INSERT EMPTY)))) UNIV) = E) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))))))))))))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0)))))))))))))
T c==> cmain_nonlinear_terminal_v11 ! ! ! ! ! c==> c/\ c= * * part cIMAGE / c, * b4 b5 * b4 cSUC b5 part cUNIV b2 c/\ cis_scs_v39 b3 c/\ c= cscs_k_v39 b3 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ cscs_basic_v39 b3 c/\ cscs_generic b4 c/\ cBBs_v39 b3 b4 c/\ c= * * part cIMAGE b4 part cUNIV b0 c/\ c= * * part cIMAGE / * * part cINSERT * b4 b5 * * part cINSERT * b4 cSUC b5 part cEMPTY part cUNIV b1 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b4 cNUMERAL cBIT1 c_0 * * part cINSERT * b4 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * b4 cNUMERAL c_0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 * b4 cNUMERAL c_0 * b4 cNUMERAL cBIT1 c_0 * b4 cNUMERAL cBIT1 cBIT1 c_0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D LE_ADD
A |- (!m. (!n. (m <= (m + n))))
T c<= f0 c+ f0 f1
D ADD_SUB
A |- (!m. (!n. (((m + n) - n) = m)))
T c= c- c+ f0 f1 f1 f0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_NEG_MINUS1
A |- (!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)))
T c= creal_neg f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_UNION
A |- (!s. (!t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t))))))
T c= cIN f0 * * part cUNION f1 f2 c\/ cIN f0 f1 cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D HULL_SUBSET
A |- (!P. (!s. (s SUBSET ((hull P) s))))
T cSUBSET f0 * * part chull f1 f0
D Trigonometry.JLWZFBH4
A |- (!s. ((coplanar s) = (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))
T c= ccoplanar f0 c? / c? / c? / cSUBSET f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
D AFF_GT_SUBSET_AFFINE_HULL
A |- (!s. (!t. (((aff_gt s) t) SUBSET ((hull affine) (s UNION t)))))
T cSUBSET * * part caff_gt f0 f1 * * part chull part caffine * * part cUNION f0 f1
D Counting_spheres.AZIM_NN
A |- (!x. (!y. (!z. (!u. ((real_le (real_of_num (NUMERAL _0))) ((((azim x) y) z) u))))))
T creal_le creal_of_num cNUMERAL c_0 cazim f0 f1 f2 f3
D Iunbuig.EGHNAVX_SCS
A |- (!s. (!k. (!v. (!p. ((LET (\bta. (LET_END (((is_scs_v39 s) /\ (((scs_k_v39 s) = k) /\ (((NUMERAL (BIT1 (BIT1 _0))) < k) /\ (((BBs_v39 s) v) /\ ((scs_basic_v39 s) /\ (scs_generic v)))))) ==> (((bta (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_le (bta (k - (NUMERAL (BIT1 _0))))) pi) /\ ((!i. (!j. (((i < j) /\ (j < k)) ==> ((real_le (bta i)) (bta j))))) /\ ((!q. (!j. ((((bta q) = (real_of_num (NUMERAL _0))) /\ (((NUMERAL _0) < j) /\ ((j <= q) /\ (q < k)))) ==> (((j < q) ==> (((((azim (vec (NUMERAL _0))) (v (p + j))) (v (p + (j + (NUMERAL (BIT1 _0)))))) (v (p + (j + (k - (NUMERAL (BIT1 _0))))))) = pi)) /\ ((v (p + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v p) INSERT EMPTY))) ((v (p + (NUMERAL (BIT1 _0)))) INSERT EMPTY))))))) /\ (!q. (!j. ((((bta q) = (bta (k - (NUMERAL (BIT1 _0))))) /\ (((NUMERAL _0) < q) /\ ((q < (k - (NUMERAL (BIT1 _0)))) /\ ((q <= j) /\ (j < k))))) ==> (((q < j) ==> (((((azim (vec (NUMERAL _0))) (v (p + j))) (v (p + (j + (NUMERAL (BIT1 _0)))))) (v (p + (j + (k - (NUMERAL (BIT1 _0))))))) = pi)) /\ ((v (p + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v p) INSERT EMPTY))) ((v (p + (k - (NUMERAL (BIT1 _0))))) INSERT EMPTY))))))))))))))) (\j. ((((azim (vec (NUMERAL _0))) (v p)) (v (p + (NUMERAL (BIT1 _0))))) (v (p + j)))))))))
T cLET / cLET_END c==> c/\ cis_scs_v39 f0 c/\ c= cscs_k_v39 f0 f1 c/\ c< cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ cBBs_v39 f0 f2 c/\ cscs_basic_v39 f0 cscs_generic f2 c/\ c= * b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_le * b0 c- f1 cNUMERAL cBIT1 c_0 cpi c/\ ! ! c==> c/\ c< b1 b2 c< b2 f1 creal_le * b0 b1 * b0 b2 c/\ ! ! c==> c/\ c= * b0 b1 creal_of_num cNUMERAL c_0 c/\ c< cNUMERAL c_0 b2 c/\ c<= b2 b1 c< b1 f1 c/\ c==> c< b2 b1 c= cazim cvec cNUMERAL c_0 * f2 c+ f3 b2 * f2 c+ f3 c+ b2 cNUMERAL cBIT1 c_0 * f2 c+ f3 c+ b2 c- f1 cNUMERAL cBIT1 c_0 cpi cIN * f2 c+ f3 b2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f2 f3 part cEMPTY * * part cINSERT * f2 c+ f3 cNUMERAL cBIT1 c_0 part cEMPTY ! ! c==> c/\ c= * b0 b1 * b0 c- f1 cNUMERAL cBIT1 c_0 c/\ c< cNUMERAL c_0 b1 c/\ c< b1 c- f1 cNUMERAL cBIT1 c_0 c/\ c<= b1 b2 c< b2 f1 c/\ c==> c< b1 b2 c= cazim cvec cNUMERAL c_0 * f2 c+ f3 b2 * f2 c+ f3 c+ b2 cNUMERAL cBIT1 c_0 * f2 c+ f3 c+ b2 c- f1 cNUMERAL cBIT1 c_0 cpi cIN * f2 c+ f3 b2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f2 f3 part cEMPTY * * part cINSERT * f2 c+ f3 c- f1 cNUMERAL cBIT1 c_0 part cEMPTY / cazim cvec cNUMERAL c_0 * f2 f3 * f2 c+ f3 cNUMERAL cBIT1 c_0 * f2 c+ f3 b0
+ |- (!x. ((x IN (((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY)) UNION ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) = (x IN ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))
T c= cIN f0 * * part cUNION * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 part cEMPTY * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY cIN f0 * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY
+ ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889050) \/ (~ (_9889050 = (v (NUMERAL (BIT1 _0))))))
T c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c\/ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c~ c= f1 * f0 cNUMERAL cBIT1 c_0
- |- ((((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F) ==> ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F)) ==> (((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F) ==> ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F)))
T c==> c==> c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ |- (((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c= c==> c= c+ cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- ((((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 cF
- ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- (!x. (((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0))))))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)))
T c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 ! c\/ c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b0 * f0 cNUMERAL c_0 c~ c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0
- |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
+ (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), (x = (v (NUMERAL (BIT0 (BIT1 _0))))), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- F
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c= f1 * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
- ((((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) ==> B) /\ ((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) |- ((((((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) ==> B) /\ ((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) ==> B) ==> B)
T c==> c/\ c==> c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c==> c==> c/\ c==> c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 f1
+ |- ((((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 cF
+ (x = (v (NUMERAL _0))), ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- (~ ((v (NUMERAL _0)) = (v (NUMERAL _0))))
T c==> c= f0 * f1 cNUMERAL c_0 c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c~ c= * f1 cNUMERAL c_0 * f1 cNUMERAL c_0
- ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F), (((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F) ==> ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F)) |- ((((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F) ==> ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F)) /\ ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F))
T c==> c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c==> c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c/\ c==> c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF
+ |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))
T c= c+ cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
- |- (((!v. ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F)) ==> ((\v. ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F)) v)) = ((\v. ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F)) v))
T c= c==> ! c==> c~ ! c= c\/ c\/ c= b1 cvec cNUMERAL c_0 c= b1 * b0 cNUMERAL c_0 c= b1 * b0 cNUMERAL cBIT1 c_0 c\/ c= b1 cvec cNUMERAL c_0 c\/ c= b1 * b0 cNUMERAL c_0 c= b1 * b0 cNUMERAL cBIT1 c_0 cF * / c==> c~ ! c= c\/ c\/ c= b1 cvec cNUMERAL c_0 c= b1 * b0 cNUMERAL c_0 c= b1 * b0 cNUMERAL cBIT1 c_0 c\/ c= b1 cvec cNUMERAL c_0 c\/ c= b1 * b0 cNUMERAL c_0 c= b1 * b0 cNUMERAL cBIT1 c_0 cF f0 * / c==> c~ ! c= c\/ c\/ c= b1 cvec cNUMERAL c_0 c= b1 * b0 cNUMERAL c_0 c= b1 * b0 cNUMERAL cBIT1 c_0 c\/ c= b1 cvec cNUMERAL c_0 c\/ c= b1 * b0 cNUMERAL c_0 c= b1 * b0 cNUMERAL cBIT1 c_0 cF f0
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) /\ F)
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 cF
+ |- (((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) ==> F)
T c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 cF
- |- ((((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F) ==> ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F)) ==> (((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F) ==> ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F)))
T c==> c==> c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c==> c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF
+ |- (T = (((F ==> B) /\ F) ==> B))
T c= cT c==> c/\ c==> cF f0 cF f0
+ |- (((!t. (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) t) SUBSET ((hull affine) (((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY)) UNION t)))) ==> ((\t. (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) t) SUBSET ((hull affine) (((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY)) UNION t)))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) = ((\t. (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) t) SUBSET ((hull affine) (((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY)) UNION t)))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))
T c= c==> ! cSUBSET * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY b0 * * part chull part caffine * * part cUNION * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY b0 * / cSUBSET * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY b0 * * part chull part caffine * * part cUNION * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY b0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * / cSUBSET * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY b0 * * part chull part caffine * * part cUNION * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY b0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY
+ |- ((s SUBSET ((hull P) s)) = T)
T c= cSUBSET f0 * * part chull f1 f0 cT
+ |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
+ (x = (v (NUMERAL _0))), ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) |- (~ ((v (NUMERAL _0)) = (v (NUMERAL _0))))
T c==> c= f0 * f1 cNUMERAL c_0 c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c~ c= * f1 cNUMERAL c_0 * f1 cNUMERAL c_0
+ |- ((\x. (!y. (!z. (!u. ((real_le (real_of_num (NUMERAL _0))) ((((azim x) y) z) u)))))) x)
T * / ! ! ! creal_le creal_of_num cNUMERAL c_0 cazim b0 b1 b2 b3 f0
+ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_gt ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ (!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) |- (((!x. ((~ (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x)) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> ((\x. ((~ (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x)) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) _9889279)) = ((\x. ((~ (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x)) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) _9889279))
T c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 c= c==> ! c\/ c~ caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 * / c\/ c~ caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 f1 * / c\/ c~ caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 f1
+ |- (((NUMERAL _0) < (NUMERAL (BIT0 (BIT1 _0)))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 cT
- ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ (x = (vec (NUMERAL _0))), ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) |- (~ ((vec (NUMERAL _0)) = (vec (NUMERAL _0))))
T c==> c= f0 cvec cNUMERAL c_0 c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c~ c= cvec cNUMERAL c_0 cvec cNUMERAL c_0
+ (x = (v (NUMERAL _0))), ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- F
T c==> c= f0 * f1 cNUMERAL c_0 c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 cF
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- (((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F) = (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))))))
T c= c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0
- |- (((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0))))))) = T)
T c= c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cT
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_gt a) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
- |- ((~ (_9889273 = _9889274)) \/ ((BIT1 _9889273) = (BIT1 _9889274)))
T c\/ c~ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ |- ((((!x. ((x IN ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) ==> (x IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) ==> (!x. ((x IN ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY))))) ==> (x IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))))) = (((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) ==> (((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))))
T c= c==> c/\ ! c==> cIN b0 * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY ! c==> cIN b0 * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c==> c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY
+ |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
- (x = (vec (NUMERAL _0))), ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- (~ ((vec (NUMERAL _0)) = (v (NUMERAL _0))))
T c==> c= f0 cvec cNUMERAL c_0 c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c~ c= cvec cNUMERAL c_0 * f1 cNUMERAL c_0
- ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F) |- (((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F) /\ ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F))
T c==> c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c/\ c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF
+ |- (((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) ==> F)
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 cF
- (x = (vec (NUMERAL _0))) |- (((~ (_9889049 = (vec (NUMERAL _0)))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889049)) = ((~ (_9889049 = (vec (NUMERAL _0)))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889049)))
T c==> c= f0 cvec cNUMERAL c_0 c= c\/ c~ c= f1 cvec cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f2 cNUMERAL c_0 * * part cINSERT * f2 cNUMERAL cBIT1 c_0 part cEMPTY f1 c\/ c~ c= f1 cvec cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f2 cNUMERAL c_0 * * part cINSERT * f2 cNUMERAL cBIT1 c_0 part cEMPTY f1
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) a)) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) a)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f0 creal_of_num cNUMERAL c_0
+ (!q. (!j. (((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + q))) = (real_of_num (NUMERAL _0))) /\ (((NUMERAL _0) < j) /\ ((j <= q) /\ (q < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ==> (((j < q) ==> (((((azim (vec (NUMERAL _0))) (v ((NUMERAL _0) + j))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT1 _0)))))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = pi)) /\ ((v ((NUMERAL _0) + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) |- ((\j. (((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + (NUMERAL (BIT1 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ (((NUMERAL _0) < j) /\ ((j <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ==> (((j < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((azim (vec (NUMERAL _0))) (v ((NUMERAL _0) + j))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT1 _0)))))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = pi)) /\ ((v ((NUMERAL _0) + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0))))
T c==> ! ! c==> c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ c< cNUMERAL c_0 b1 c/\ c<= b1 b0 c< b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b1 b0 c= cazim cvec cNUMERAL c_0 * f0 c+ cNUMERAL c_0 b1 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cpi cIN * f0 c+ cNUMERAL c_0 b1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * / c==> c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c< cNUMERAL c_0 b0 c/\ c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= cazim cvec cNUMERAL c_0 * f0 c+ cNUMERAL c_0 b0 * f0 c+ cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 c+ b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cpi cIN * f0 c+ cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0
- (x = (v (NUMERAL _0))), ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) |- ((~ F) ==> F)
T c==> c= f0 * f1 cNUMERAL c_0 c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c~ cF cF
- |- ((~ (x = y)) = (((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y) \/ ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x)))
T c= c~ c= f0 f1 c\/ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
+ (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))), (((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0))))) ==> F), ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) |- F
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c==> c\/ c= f1 * f0 cNUMERAL cBIT1 c_0 c\/ c= f1 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= f1 * f0 cNUMERAL c_0 cF c==> c\/ c= f1 cvec cNUMERAL c_0 c\/ c= f1 * f0 cNUMERAL cBIT1 c_0 c\/ c= f1 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= f1 * f0 cNUMERAL c_0 cF
+ (((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL _0))), ((!q. (!j. (((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + q))) = (real_of_num (NUMERAL _0))) /\ (((NUMERAL _0) < j) /\ ((j <= q) /\ (q < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ==> (((j < q) ==> (((((azim (vec (NUMERAL _0))) (v ((NUMERAL _0) + j))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT1 _0)))))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = pi)) /\ ((v ((NUMERAL _0) + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) /\ (!q. (!j. (((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + q))) = ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) /\ (((NUMERAL _0) < q) /\ ((q < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((q <= j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) ==> (((q < j) ==> (((((azim (vec (NUMERAL _0))) (v ((NUMERAL _0) + j))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT1 _0)))))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = pi)) /\ ((v ((NUMERAL _0) + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) INSERT EMPTY)))))))) |- (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))))
T c==> c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c/\ ! ! c==> c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ c< cNUMERAL c_0 b1 c/\ c<= b1 b0 c< b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b1 b0 c= cazim cvec cNUMERAL c_0 * f0 c+ cNUMERAL c_0 b1 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cpi cIN * f0 c+ cNUMERAL c_0 b1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY ! ! c==> c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< cNUMERAL c_0 b0 c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c<= b0 b1 c< b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b0 b1 c= cazim cvec cNUMERAL c_0 * f0 c+ cNUMERAL c_0 b1 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cpi cIN * f0 c+ cNUMERAL c_0 b1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 part cEMPTY ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY
+ (((((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) \/ (((a = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))))) \/ (((((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))))) \/ ((((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))))))) |- F
T c==> c\/ c\/ c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c\/ c\/ c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 cF
+ |- (((!u. ((real_le (real_of_num (NUMERAL _0))) ((((azim x) y) z) u))) ==> ((\u. ((real_le (real_of_num (NUMERAL _0))) ((((azim x) y) z) u))) u)) = ((\u. ((real_le (real_of_num (NUMERAL _0))) ((((azim x) y) z) u))) u))
T c= c==> ! creal_le creal_of_num cNUMERAL c_0 cazim f0 f1 f2 b0 * / creal_le creal_of_num cNUMERAL c_0 cazim f0 f1 f2 b0 f3 * / creal_le creal_of_num cNUMERAL c_0 cazim f0 f1 f2 b0 f3
- (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (vec (NUMERAL _0)))), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (vec (NUMERAL _0)))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (vec (NUMERAL _0))))
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cvec cNUMERAL c_0 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cvec cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cvec cNUMERAL c_0
+ |- (((!s. (s SUBSET ((hull P) s))) ==> ((\s. (s SUBSET ((hull P) s))) s)) = ((\s. (s SUBSET ((hull P) s))) s))
T c= c==> ! cSUBSET b0 * * part chull f0 b0 * / cSUBSET b0 * * part chull f0 b0 f1 * / cSUBSET b0 * * part chull f0 b0 f1
+ (A = F) |- ((((A ==> B) /\ A) ==> B) = (((F ==> B) /\ F) ==> B))
T c==> c= f0 cF c= c==> c/\ c==> f0 f1 f0 f1 c==> c/\ c==> cF f1 cF f1
- (x = (vec (NUMERAL _0))) |- ((((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0))))) = (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c= f0 cvec cNUMERAL c_0 c= chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY * f1 cNUMERAL cBIT0 cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY * f1 cNUMERAL cBIT0 cBIT1 c_0
+ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) |- ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))
T c==> cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY
+ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((real_ge a) (real_of_num (NUMERAL _0))) = (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0
+ |- ((!FF. (!s. (!v. (((((IMAGE (\i. ((v i) , (v (SUC i))))) UNIV) = FF) /\ ((is_scs_v39 s) /\ (((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((scs_basic_v39 s) /\ ((scs_generic v) /\ (((BBs_v39 s) v) /\ ((((IMAGE v) UNIV) = V) /\ ((((IMAGE (\i. ((v i) INSERT ((v (SUC i)) INSERT EMPTY)))) UNIV) = E) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))))))))))))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0)))))))))) = T)
T c= ! ! ! c==> c/\ c= * * part cIMAGE / c, * b2 b3 * b2 cSUC b3 part cUNIV b0 c/\ cis_scs_v39 b1 c/\ c= cscs_k_v39 b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ cscs_basic_v39 b1 c/\ cscs_generic b2 c/\ cBBs_v39 b1 b2 c/\ c= * * part cIMAGE b2 part cUNIV f0 c/\ c= * * part cIMAGE / * * part cINSERT * b2 b3 * * part cINSERT * b2 cSUC b3 part cEMPTY part cUNIV f1 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b2 cNUMERAL cBIT1 c_0 * * part cINSERT * b2 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * b2 cNUMERAL c_0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 * b2 cNUMERAL c_0 * b2 cNUMERAL cBIT1 c_0 * b2 cNUMERAL cBIT1 cBIT1 c_0 cT
+ |- (((~ ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))))) ==> F) = ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))
T c= c==> c~ c= c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 cF c= c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0
- (~ F), (x = (v (NUMERAL _0))), ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 * f1 cNUMERAL c_0 c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ cF cF
- (_9889162 = _9889165), (_9889163 = _9889166) |- ((_9889162 = _9889165) /\ ((~ (_9889161 = _9889164)) \/ ((((hull _9889164) _9889165) _9889166) \/ (~ (((hull _9889161) _9889162) _9889163)))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ c~ c= f4 f5 c\/ chull f5 f1 f3 c~ chull f4 f0 f2
+ (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((x = (v (NUMERAL (BIT1 _0)))) ==> F)
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c= f1 * f0 cNUMERAL cBIT1 c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (~ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((a = (real_of_num (NUMERAL _0))) \/ (~ ((real_le (real_of_num (NUMERAL _0))) a)))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) \/ ((~ (a = (real_of_num (NUMERAL _0)))) /\ ((real_le (real_of_num (NUMERAL _0))) a)))))) |- ((~ (~ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((a = (real_of_num (NUMERAL _0))) \/ (~ ((real_le (real_of_num (NUMERAL _0))) a)))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) \/ ((~ (a = (real_of_num (NUMERAL _0)))) /\ ((real_le (real_of_num (NUMERAL _0))) a)))))) /\ F)
T c==> c~ c~ c/\ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 f0 c\/ c= f0 creal_of_num cNUMERAL c_0 c~ creal_le creal_of_num cNUMERAL c_0 f0 c\/ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ c~ c= f0 creal_of_num cNUMERAL c_0 creal_le creal_of_num cNUMERAL c_0 f0 c/\ c~ c~ c/\ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 f0 c\/ c= f0 creal_of_num cNUMERAL c_0 c~ creal_le creal_of_num cNUMERAL c_0 f0 c\/ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ c~ c= f0 creal_of_num cNUMERAL c_0 creal_le creal_of_num cNUMERAL c_0 f0 cF
+ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) |- (?w. (((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT (w INSERT EMPTY))))))
T c==> cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c? / cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT b0 part cEMPTY
+ (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), (x = (vec (NUMERAL _0))), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((x = (vec (NUMERAL _0))) /\ F)
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c= f1 cvec cNUMERAL c_0 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= f1 cvec cNUMERAL c_0 cF
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))))), (is_scs_v39 s), (scs_generic v), (scs_basic_v39 s), ((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((BBs_v39 s) v) |- ((~ (((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL _0)))) /\ ((real_le (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0)))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY c==> cis_scs_v39 f1 c==> cscs_generic f0 c==> cscs_basic_v39 f1 c==> c= cscs_k_v39 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> cBBs_v39 f1 f0 c/\ c~ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_le creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0
+ (is_scs_v39 s), (scs_basic_v39 s), ((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((scs_generic v) /\ (((BBs_v39 s) v) /\ ((((IMAGE v) UNIV) = V) /\ ((((IMAGE (\i. ((v i) INSERT ((v (SUC i)) INSERT EMPTY)))) UNIV) = E) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))))))))) |- ((real_lt (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))))
T c==> cis_scs_v39 f0 c==> cscs_basic_v39 f0 c==> c= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c/\ cscs_generic f1 c/\ cBBs_v39 f0 f1 c/\ c= * * part cIMAGE f1 part cUNIV f2 c/\ c= * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV f3 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 * * part cINSERT * f1 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f1 cNUMERAL c_0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f1 cNUMERAL c_0 * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL cBIT1 cBIT1 c_0
+ ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((_9889050 = (v (NUMERAL (BIT1 _0)))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889050))
T c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c= f1 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1
+ |- ((y = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) y) = (real_of_num (NUMERAL _0)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
+ |- ((((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 cF
- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0
+ (((((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))))) \/ ((((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0)))))))) |- ((((((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))))) \/ ((((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0)))))))) /\ F)
T c==> c\/ c\/ c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ c\/ c\/ c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 cF
- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ (!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) |- ((((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889279) \/ (~ (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) _9889279)))
T c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 c\/ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c~ caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1
+ ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((real_gt a) (real_of_num (NUMERAL _0))) = ((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a) = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= creal_gt f0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0
- (x = (vec (NUMERAL _0))), ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) |- (~ ((vec (NUMERAL _0)) = (v (NUMERAL _0))))
T c==> c= f0 cvec cNUMERAL c_0 c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c~ c= cvec cNUMERAL c_0 * f1 cNUMERAL c_0
+ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) a)) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) a)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f0 creal_of_num cNUMERAL c_0
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))))), (is_scs_v39 s), (scs_generic v), (scs_basic_v39 s), ((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), (((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL _0))), ((BBs_v39 s) v) |- F
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY c==> cis_scs_v39 f1 c==> cscs_generic f0 c==> cscs_basic_v39 f1 c==> c= cscs_k_v39 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> cBBs_v39 f1 f0 cF
- |- (((~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> F) = (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0))))))
T c= c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0
+ (is_scs_v39 s), (scs_generic v), (scs_basic_v39 s), ((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), (((BBs_v39 s) v) /\ ((((IMAGE v) UNIV) = V) /\ ((((IMAGE (\i. ((v i) INSERT ((v (SUC i)) INSERT EMPTY)))) UNIV) = E) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY))))))))), ((BBs_v39 s) v) |- ((real_lt (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))))
T c==> cis_scs_v39 f0 c==> cscs_generic f1 c==> cscs_basic_v39 f0 c==> c= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c/\ cBBs_v39 f0 f1 c/\ c= * * part cIMAGE f1 part cUNIV f2 c/\ c= * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV f3 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 * * part cINSERT * f1 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f1 cNUMERAL c_0 part cEMPTY c==> cBBs_v39 f0 f1 creal_lt creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f1 cNUMERAL c_0 * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL cBIT1 cBIT1 c_0
+ ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))), (((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))) ==> F) |- F
T c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c==> c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 cF cF
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) /\ F)
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 cF
- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((a = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) a) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) a) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = ((\x. (((real_mul x) a) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 f0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 f0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ |- (((T ==> B) /\ T) ==> B)
T c==> c/\ c==> cT f0 cT f0
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- (x = (v (NUMERAL (BIT1 _0)))) |- ((((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0))))) = (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c= f0 * f1 cNUMERAL cBIT1 c_0 c= chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY * f1 cNUMERAL cBIT0 cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY * f1 cNUMERAL cBIT0 cBIT1 c_0
- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ (((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0)))))) |- ((((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0)))))) /\ F)
T c==> c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 cF
- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (vec (NUMERAL _0)))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (vec (NUMERAL _0))))
T c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cvec cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cvec cNUMERAL c_0
+ (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), (x = (v (NUMERAL _0))), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((x = (v (NUMERAL _0))) /\ F)
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c= f1 * f0 cNUMERAL c_0 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= f1 * f0 cNUMERAL c_0 cF
+ (((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL _0))) |- ((((((((azim (vec (NUMERAL _0))) (v (NUMERAL (BIT0 (BIT1 _0))))) (v (NUMERAL (BIT1 (BIT1 _0))))) (v (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = pi) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) ==> (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))))) = (((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL _0))) ==> ((((((azim (vec (NUMERAL _0))) (v (NUMERAL (BIT0 (BIT1 _0))))) (v (NUMERAL (BIT1 (BIT1 _0))))) (v (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = pi) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) ==> (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))))))
T c==> c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cpi cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY c==> c==> c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cpi cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F) ==> ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F)) = ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F))
T c= c==> c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
+ ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) |- ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0))))))
T c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0
- ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))
T c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c\/ c= f1 cvec cNUMERAL c_0 c\/ c= f1 * f0 cNUMERAL cBIT1 c_0 c\/ c= f1 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= f1 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1
+ ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0)))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (vec (NUMERAL _0)))
T c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cvec cNUMERAL c_0
- (x = (v (NUMERAL (BIT1 _0)))) |- ((~ (x = (vec (NUMERAL _0)))) = (~ ((v (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))))
T c==> c= f0 * f1 cNUMERAL cBIT1 c_0 c= c~ c= f0 cvec cNUMERAL c_0 c~ c= * f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- (((F ==> B) /\ F) ==> B)
T c==> c/\ c==> cF f0 cF f0
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 f1 creal_of_num cNUMERAL c_0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c= c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- ((~ ((v (NUMERAL (BIT1 _0))) = (v (NUMERAL (BIT1 _0))))) ==> ((v (NUMERAL (BIT1 _0))) = (v (NUMERAL (BIT1 _0)))))
T c==> c~ c= * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 c= * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0
+ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) |- ((\v. (?w. (((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT (v INSERT (w INSERT EMPTY))))))) (v (NUMERAL _0)))
T c==> cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * / c? / cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * f0 cNUMERAL c_0
+ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) = (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c= creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ |- ((((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0)))))) ==> F)
T c==> c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 cF
+ ((((((azim (vec (NUMERAL _0))) (v (NUMERAL (BIT0 (BIT1 _0))))) (v (NUMERAL (BIT1 (BIT1 _0))))) (v (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = pi) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) |- (((((((azim (vec (NUMERAL _0))) (v (NUMERAL (BIT0 (BIT1 _0))))) (v (NUMERAL (BIT1 (BIT1 _0))))) (v (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = pi) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) /\ (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY))))))
T c==> c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cpi cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c/\ c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cpi cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY
- |- ((!v. t) = t)
T c= ! f0 f0
- |- ((_9889167 = _9889168) ==> ((BIT0 _9889167) = (BIT0 _9889168)))
T c==> c= f0 f1 c= cBIT0 f0 cBIT0 f1
+ (((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0)))))) |- ((((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0)))))) /\ F)
T c==> c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 cF
+ |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) a)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f0 creal_of_num cNUMERAL c_0
+ ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((!x. (((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0))))))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ ! c\/ c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b0 * f0 cNUMERAL c_0 c~ c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0
+ (x = (v (NUMERAL _0))), ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) |- F
T c==> c= f0 * f1 cNUMERAL c_0 c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 cF
+ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) |- (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))))
T c==> cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY
- (x = (v (NUMERAL (BIT0 (BIT1 _0))))) |- (((~ (_9889051 = (v (NUMERAL (BIT1 _0))))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889051)) = ((~ (_9889051 = (v (NUMERAL (BIT1 _0))))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889051)))
T c==> c= f0 * f1 cNUMERAL cBIT0 cBIT1 c_0 c= c\/ c~ c= f2 * f1 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f2 c\/ c~ c= f2 * f1 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f2
+ |- (((NUMERAL (BIT0 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0)))) = T)
T c= c< cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cT
+ (!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) |- ((\x. ((~ (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x)) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) _9889279)
T c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 * / c\/ c~ caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 f1
+ ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889049) \/ (~ (_9889049 = (vec (NUMERAL _0)))))
T c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c\/ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c~ c= f1 cvec cNUMERAL c_0
+ (is_scs_v39 s), (scs_generic v), (scs_basic_v39 s), ((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), (((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL _0))), ((BBs_v39 s) v) |- (((LET (\bta. (LET_END (((is_scs_v39 s) /\ (((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((BBs_v39 s) v) /\ ((scs_basic_v39 s) /\ (scs_generic v)))))) ==> (((bta (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_le (bta ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) pi) /\ ((!i. (!j. (((i < j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((real_le (bta i)) (bta j))))) /\ ((!q. (!j. ((((bta q) = (real_of_num (NUMERAL _0))) /\ (((NUMERAL _0) < j) /\ ((j <= q) /\ (q < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ==> (((j < q) ==> (((((azim (vec (NUMERAL _0))) (v ((NUMERAL _0) + j))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT1 _0)))))) (v ((NUMERAL _0) + (j + ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))))) = pi)) /\ ((v ((NUMERAL _0) + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v ((NUMERAL _0) + (NUMERAL (BIT1 _0)))) INSERT EMPTY))))))) /\ (!q. (!j. ((((bta q) = (bta ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) /\ (((NUMERAL _0) < q) /\ ((q < ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0)))) /\ ((q <= j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) ==> (((q < j) ==> (((((azim (vec (NUMERAL _0))) (v ((NUMERAL _0) + j))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT1 _0)))))) (v ((NUMERAL _0) + (j + ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))))) = pi)) /\ ((v ((NUMERAL _0) + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v ((NUMERAL _0) + ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) INSERT EMPTY))))))))))))))) (\j. ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (v ((NUMERAL _0) + j))))) ==> (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY))))))
T c==> cis_scs_v39 f0 c==> cscs_generic f1 c==> cscs_basic_v39 f0 c==> c= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cazim cvec cNUMERAL c_0 * f1 cNUMERAL c_0 * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> cBBs_v39 f0 f1 c==> cLET / cLET_END c==> c/\ cis_scs_v39 f0 c/\ c= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ cBBs_v39 f0 f1 c/\ cscs_basic_v39 f0 cscs_generic f1 c/\ c= * b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_le * b0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cpi c/\ ! ! c==> c/\ c< b1 b2 c< b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_le * b0 b1 * b0 b2 c/\ ! ! c==> c/\ c= * b0 b1 creal_of_num cNUMERAL c_0 c/\ c< cNUMERAL c_0 b2 c/\ c<= b2 b1 c< b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b2 b1 c= cazim cvec cNUMERAL c_0 * f1 c+ cNUMERAL c_0 b2 * f1 c+ cNUMERAL c_0 c+ b2 cNUMERAL cBIT1 c_0 * f1 c+ cNUMERAL c_0 c+ b2 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cpi cIN * f1 c+ cNUMERAL c_0 b2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 part cEMPTY * * part cINSERT * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 part cEMPTY ! ! c==> c/\ c= * b0 b1 * b0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c< cNUMERAL c_0 b1 c/\ c< b1 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= b1 b2 c< b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b1 b2 c= cazim cvec cNUMERAL c_0 * f1 c+ cNUMERAL c_0 b2 * f1 c+ cNUMERAL c_0 c+ b2 cNUMERAL cBIT1 c_0 * f1 c+ cNUMERAL c_0 c+ b2 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cpi cIN * f1 c+ cNUMERAL c_0 b2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 part cEMPTY * * part cINSERT * f1 c+ cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 part cEMPTY / cazim cvec cNUMERAL c_0 * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 c+ cNUMERAL c_0 b0 ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 * * part cINSERT * f1 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f1 cNUMERAL c_0 part cEMPTY
+ (x = (v (NUMERAL (BIT0 (BIT1 _0))))) |- ((~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)) = (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c= f0 * f1 cNUMERAL cBIT0 cBIT1 c_0 c= c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f0 c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY * f1 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) SUBSET ((hull affine) (((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY)) UNION ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) ==> ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) = ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))
T c= c==> cSUBSET * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cUNION * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- (~ ((v (NUMERAL (BIT1 _0))) = (v (NUMERAL (BIT1 _0))))) |- ((~ ((v (NUMERAL (BIT1 _0))) = (v (NUMERAL (BIT1 _0))))) /\ ((v (NUMERAL (BIT1 _0))) = (v (NUMERAL (BIT1 _0)))))
T c==> c~ c= * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 c/\ c~ c= * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 c= * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0
+ (x = (vec (NUMERAL _0))) |- ((~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)) = (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (vec (NUMERAL _0)))))
T c==> c= f0 cvec cNUMERAL c_0 c= c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f0 c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY cvec cNUMERAL c_0
+ |- (((NUMERAL (BIT0 (BIT1 _0))) + (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))
T c= c+ cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
+ (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), (x = (v (NUMERAL _0))), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- F
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c= f1 * f0 cNUMERAL c_0 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF
+ (is_scs_v39 s), (scs_generic v), (scs_basic_v39 s), ((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((((IMAGE v) UNIV) = V) /\ ((((IMAGE (\i. ((v i) INSERT ((v (SUC i)) INSERT EMPTY)))) UNIV) = E) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))))))), ((BBs_v39 s) v) |- ((real_lt (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))))
T c==> cis_scs_v39 f0 c==> cscs_generic f1 c==> cscs_basic_v39 f0 c==> c= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c/\ c= * * part cIMAGE f1 part cUNIV f2 c/\ c= * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV f3 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 * * part cINSERT * f1 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f1 cNUMERAL c_0 part cEMPTY c==> cBBs_v39 f0 f1 creal_lt creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f1 cNUMERAL c_0 * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL cBIT1 cBIT1 c_0
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_ge a) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0
+ (((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL _0))), (((real_le ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) pi) /\ ((!i. (!j. (((i < j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((real_le ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + i)))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + j))))))) /\ ((!q. (!j. (((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + q))) = (real_of_num (NUMERAL _0))) /\ (((NUMERAL _0) < j) /\ ((j <= q) /\ (q < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ==> (((j < q) ==> (((((azim (vec (NUMERAL _0))) (v ((NUMERAL _0) + j))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT1 _0)))))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = pi)) /\ ((v ((NUMERAL _0) + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) /\ (!q. (!j. (((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + q))) = ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) /\ (((NUMERAL _0) < q) /\ ((q < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((q <= j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) ==> (((q < j) ==> (((((azim (vec (NUMERAL _0))) (v ((NUMERAL _0) + j))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT1 _0)))))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = pi)) /\ ((v ((NUMERAL _0) + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) INSERT EMPTY)))))))))) |- (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))))
T c==> c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c/\ creal_le cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cpi c/\ ! ! c==> c/\ c< b0 b1 c< b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_le cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b1 c/\ ! ! c==> c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ c< cNUMERAL c_0 b1 c/\ c<= b1 b0 c< b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b1 b0 c= cazim cvec cNUMERAL c_0 * f0 c+ cNUMERAL c_0 b1 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cpi cIN * f0 c+ cNUMERAL c_0 b1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY ! ! c==> c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< cNUMERAL c_0 b0 c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c<= b0 b1 c< b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b0 b1 c= cazim cvec cNUMERAL c_0 * f0 c+ cNUMERAL c_0 b1 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cpi cIN * f0 c+ cNUMERAL c_0 b1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 part cEMPTY ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?w. t) = t)
T c= c? / f0 f0
+ (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), (x = (v (NUMERAL (BIT1 _0)))), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- F
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c= f1 * f0 cNUMERAL cBIT1 c_0 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF
+ ((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY)) UNION ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) = ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) |- (((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) ==> ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) = ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) SUBSET ((hull affine) (((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY)) UNION ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) ==> ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))))
T c==> c= * * part cUNION * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c= c==> cSUBSET * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c==> cSUBSET * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cUNION * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY
+ (x = (v (NUMERAL (BIT1 _0)))), ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) |- (((v (NUMERAL (BIT1 _0))) = (v (NUMERAL (BIT1 _0)))) ==> F)
T c==> c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c= * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL cBIT1 c_0 cF
- (~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) |- F
T c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF
- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_ge a) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0
- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- (x = (v (NUMERAL (BIT1 _0)))), ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) |- ((~ F) ==> F)
T c==> c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c~ cF cF
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ ((a = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) a)) (real_of_num (NUMERAL _0)))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f0 creal_of_num cNUMERAL c_0
+ ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) /\ (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))
T c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0
- (x = (v (NUMERAL _0))) |- ((~ (x = (v (NUMERAL (BIT1 _0))))) = (~ ((v (NUMERAL _0)) = (v (NUMERAL (BIT1 _0))))))
T c==> c= f0 * f1 cNUMERAL c_0 c= c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c~ c= * f1 cNUMERAL c_0 * f1 cNUMERAL cBIT1 c_0
+ (((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL _0))) |- (((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0))) /\ (((real_le ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) pi) /\ ((!i. (!j. (((i < j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((real_le ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + i)))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + j))))))) /\ ((!q. (!j. (((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + q))) = (real_of_num (NUMERAL _0))) /\ (((NUMERAL _0) < j) /\ ((j <= q) /\ (q < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ==> (((j < q) ==> (((((azim (vec (NUMERAL _0))) (v ((NUMERAL _0) + j))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT1 _0)))))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = pi)) /\ ((v ((NUMERAL _0) + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) /\ (!q. (!j. (((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + q))) = ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) /\ (((NUMERAL _0) < q) /\ ((q < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((q <= j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) ==> (((q < j) ==> (((((azim (vec (NUMERAL _0))) (v ((NUMERAL _0) + j))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT1 _0)))))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = pi)) /\ ((v ((NUMERAL _0) + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) INSERT EMPTY))))))))))) ==> (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY))))))
T c==> c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_le cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cpi c/\ ! ! c==> c/\ c< b0 b1 c< b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_le cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b1 c/\ ! ! c==> c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ c< cNUMERAL c_0 b1 c/\ c<= b1 b0 c< b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b1 b0 c= cazim cvec cNUMERAL c_0 * f0 c+ cNUMERAL c_0 b1 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cpi cIN * f0 c+ cNUMERAL c_0 b1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY ! ! c==> c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< cNUMERAL c_0 b0 c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c<= b0 b1 c< b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b0 b1 c= cazim cvec cNUMERAL c_0 * f0 c+ cNUMERAL c_0 b1 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cpi cIN * f0 c+ cNUMERAL c_0 b1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 part cEMPTY ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY
- |- (((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F) ==> ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F))
T c==> c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF
+ (A = T) |- ((A = T) /\ (((A ==> B) /\ A) ==> B))
T c==> c= f0 cT c/\ c= f0 cT c==> c/\ c==> f0 f1 f0 f1
- (x = (v (NUMERAL (BIT1 _0)))) |- ((~ (x = (v (NUMERAL _0)))) = (~ ((v (NUMERAL (BIT1 _0))) = (v (NUMERAL _0)))))
T c==> c= f0 * f1 cNUMERAL cBIT1 c_0 c= c~ c= f0 * f1 cNUMERAL c_0 c~ c= * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0
- (((((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) ==> B) /\ ((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) ==> B) |- ((((((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) ==> B) /\ ((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) ==> B) /\ (((((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) ==> B) /\ ((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) ==> B))
T c==> c==> c/\ c==> c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c/\ c==> c/\ c==> c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c/\ c==> c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1
- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- (((((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT1 _0)))) ==> F) = F)
T c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT1 c_0 cF cF
+ (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), (x = (v (NUMERAL (BIT0 (BIT1 _0))))), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) /\ F)
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c= f1 * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= f1 * f0 cNUMERAL cBIT0 cBIT1 c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F), (((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F) ==> ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F)) |- (((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F) /\ ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F))
T c==> c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c==> c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c/\ c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF
+ |- (((!y. (!z. (!u. ((real_le (real_of_num (NUMERAL _0))) ((((azim x) y) z) u))))) ==> ((\y. (!z. (!u. ((real_le (real_of_num (NUMERAL _0))) ((((azim x) y) z) u))))) y)) = ((\y. (!z. (!u. ((real_le (real_of_num (NUMERAL _0))) ((((azim x) y) z) u))))) y))
T c= c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 cazim f0 b0 b1 b2 * / ! ! creal_le creal_of_num cNUMERAL c_0 cazim f0 b0 b1 b2 f1 * / ! ! creal_le creal_of_num cNUMERAL c_0 cazim f0 b0 b1 b2 f1
+ ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT1 _0))))
T c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT1 c_0
- (_9889161 = _9889164), (_9889162 = _9889165), (_9889163 = _9889166) |- ((((((hull _9889161) _9889162) _9889163) = (((hull _9889164) _9889165) _9889166)) ==> ((((hull _9889164) _9889165) _9889166) \/ (~ (((hull _9889161) _9889162) _9889163)))) = ((((hull _9889164) _9889165) _9889166) \/ (~ (((hull _9889161) _9889162) _9889163))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c= c==> c= chull f0 f2 f4 chull f1 f3 f5 c\/ chull f1 f3 f5 c~ chull f0 f2 f4 c\/ chull f1 f3 f5 c~ chull f0 f2 f4
- (~ F), (x = (v (NUMERAL (BIT1 _0)))), ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ cF cF
+ |- (((NUMERAL _0) + (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))
T c= c+ cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) |- ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) ==> ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))
T c==> cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c==> cSUBSET * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY
+ ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) |- (~ (x = (v (NUMERAL _0))))
T c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c~ c= f0 * f1 cNUMERAL c_0
- ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F) |- (((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F) /\ ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F))
T c==> c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c/\ c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF
- ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0
+ ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) /\ F)
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 cF
+ ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- (x = (vec (NUMERAL _0))) |- (((~ (_9889049 = (v (NUMERAL (BIT1 _0))))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889049)) = ((~ (_9889049 = (v (NUMERAL (BIT1 _0))))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889049)))
T c==> c= f0 cvec cNUMERAL c_0 c= c\/ c~ c= f1 * f2 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f2 cNUMERAL c_0 * * part cINSERT * f2 cNUMERAL cBIT1 c_0 part cEMPTY f1 c\/ c~ c= f1 * f2 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f2 cNUMERAL c_0 * * part cINSERT * f2 cNUMERAL cBIT1 c_0 part cEMPTY f1
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- (((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F) ==> ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F)) |- ((((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F) ==> ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F)) /\ (((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F) ==> ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F)))
T c==> c==> c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c/\ c==> c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_gt ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- (((NUMERAL _0) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ (x = (v (NUMERAL _0))) |- ((~ (x = (v (NUMERAL _0)))) = (~ ((v (NUMERAL _0)) = (v (NUMERAL _0)))))
T c==> c= f0 * f1 cNUMERAL c_0 c= c~ c= f0 * f1 cNUMERAL c_0 c~ c= * f1 cNUMERAL c_0 * f1 cNUMERAL c_0
- (!i. (!j. (((i < j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((real_le ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + i)))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + j))))))) |- ((\j. (((i < j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((real_le ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + i)))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + j)))))) j)
T c==> ! ! c==> c/\ c< b0 b1 c< b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_le cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b1 * / c==> c/\ c< f1 b0 c< b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_le cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 f1 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 f2
+ |- ((((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL _0))) ==> ((((((azim (vec (NUMERAL _0))) (v (NUMERAL (BIT0 (BIT1 _0))))) (v (NUMERAL (BIT1 (BIT1 _0))))) (v (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = pi) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) ==> (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))))) = ((((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + (NUMERAL (BIT1 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ (((NUMERAL _0) < (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ==> ((((NUMERAL (BIT0 (BIT1 _0))) < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((azim (vec (NUMERAL _0))) (v ((NUMERAL _0) + (NUMERAL (BIT0 (BIT1 _0)))))) (v ((NUMERAL _0) + ((NUMERAL (BIT0 (BIT1 _0))) + (NUMERAL (BIT1 _0)))))) (v ((NUMERAL _0) + ((NUMERAL (BIT0 (BIT1 _0))) + (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = pi)) /\ ((v ((NUMERAL _0) + (NUMERAL (BIT0 (BIT1 _0))))) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) ==> (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))))))
T c= c==> c==> c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cpi cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY c==> c==> c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c< cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c= cazim cvec cNUMERAL c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 * f0 c+ cNUMERAL c_0 c+ cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 c+ cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cpi cIN * f0 c+ cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY
+ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ ((((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) ==> F), (((a = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 cF
- |- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ (((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL _0))) |- ((((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (v ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_le ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (v ((NUMERAL _0) + ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))))) pi) /\ ((!i. (!j. (((i < j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((real_le ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (v ((NUMERAL _0) + i)))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (v ((NUMERAL _0) + j))))))) /\ ((!q. (!j. (((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (v ((NUMERAL _0) + q))) = (real_of_num (NUMERAL _0))) /\ (((NUMERAL _0) < j) /\ ((j <= q) /\ (q < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ==> (((j < q) ==> (((((azim (vec (NUMERAL _0))) (v ((NUMERAL _0) + j))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT1 _0)))))) (v ((NUMERAL _0) + (j + ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))))) = pi)) /\ ((v ((NUMERAL _0) + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v ((NUMERAL _0) + (NUMERAL (BIT1 _0)))) INSERT EMPTY))))))) /\ (!q. (!j. (((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (v ((NUMERAL _0) + q))) = ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (v ((NUMERAL _0) + ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))))) /\ (((NUMERAL _0) < q) /\ ((q < ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0)))) /\ ((q <= j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) ==> (((q < j) ==> (((((azim (vec (NUMERAL _0))) (v ((NUMERAL _0) + j))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT1 _0)))))) (v ((NUMERAL _0) + (j + ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))))) = pi)) /\ ((v ((NUMERAL _0) + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v ((NUMERAL _0) + ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) INSERT EMPTY)))))))))))) ==> (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY))))))
T c==> c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c==> c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_le cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cpi c/\ ! ! c==> c/\ c< b0 b1 c< b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_le cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b1 c/\ ! ! c==> c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ c< cNUMERAL c_0 b1 c/\ c<= b1 b0 c< b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b1 b0 c= cazim cvec cNUMERAL c_0 * f0 c+ cNUMERAL c_0 b1 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 c+ b1 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cpi cIN * f0 c+ cNUMERAL c_0 b1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 part cEMPTY ! ! c==> c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c< cNUMERAL c_0 b0 c/\ c< b0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= b0 b1 c< b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b0 b1 c= cazim cvec cNUMERAL c_0 * f0 c+ cNUMERAL c_0 b1 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 c+ b1 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cpi cIN * f0 c+ cNUMERAL c_0 b1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 c+ cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 part cEMPTY ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY
- (x = (v (NUMERAL _0))), ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) |- (~ ((v (NUMERAL _0)) = (vec (NUMERAL _0))))
T c==> c= f0 * f1 cNUMERAL c_0 c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c~ c= * f1 cNUMERAL c_0 cvec cNUMERAL c_0
+ |- (((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) = ((((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) ==> (((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) /\ ((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))))
T c= c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c/\ c==> c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY
+ |- (((!s. (!t. (((aff_gt s) t) SUBSET ((hull affine) (s UNION t))))) ==> ((\s. (!t. (((aff_gt s) t) SUBSET ((hull affine) (s UNION t))))) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))) = ((\s. (!t. (((aff_gt s) t) SUBSET ((hull affine) (s UNION t))))) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))))
T c= c==> ! ! cSUBSET * * part caff_gt b0 b1 * * part chull part caffine * * part cUNION b0 b1 * / ! cSUBSET * * part caff_gt b0 b1 * * part chull part caffine * * part cUNION b0 b1 * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * / ! cSUBSET * * part caff_gt b0 b1 * * part chull part caffine * * part cUNION b0 b1 * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY
+ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) |- ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) SUBSET ((hull affine) (((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY)) UNION ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) ==> ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))
T c==> cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c==> cSUBSET * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cUNION * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY
- |- ((!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))))) = T)
T c= ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cT
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- (((((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0)))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((a = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) a) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) a) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
+ (A = F) |- ((((F ==> B) /\ F) ==> B) = (((A ==> B) /\ A) ==> B))
T c==> c= f0 cF c= c==> c/\ c==> cF f1 cF f1 c==> c/\ c==> f0 f1 f0 f1
+ (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) ==> F)
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c= f1 * f0 cNUMERAL cBIT0 cBIT1 c_0 cF
+ |- ((\s. (!k. (!v. (!p. ((LET (\bta. (LET_END (((is_scs_v39 s) /\ (((scs_k_v39 s) = k) /\ (((NUMERAL (BIT1 (BIT1 _0))) < k) /\ (((BBs_v39 s) v) /\ ((scs_basic_v39 s) /\ (scs_generic v)))))) ==> (((bta (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_le (bta (k - (NUMERAL (BIT1 _0))))) pi) /\ ((!i. (!j. (((i < j) /\ (j < k)) ==> ((real_le (bta i)) (bta j))))) /\ ((!q. (!j. ((((bta q) = (real_of_num (NUMERAL _0))) /\ (((NUMERAL _0) < j) /\ ((j <= q) /\ (q < k)))) ==> (((j < q) ==> (((((azim (vec (NUMERAL _0))) (v (p + j))) (v (p + (j + (NUMERAL (BIT1 _0)))))) (v (p + (j + (k - (NUMERAL (BIT1 _0))))))) = pi)) /\ ((v (p + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v p) INSERT EMPTY))) ((v (p + (NUMERAL (BIT1 _0)))) INSERT EMPTY))))))) /\ (!q. (!j. ((((bta q) = (bta (k - (NUMERAL (BIT1 _0))))) /\ (((NUMERAL _0) < q) /\ ((q < (k - (NUMERAL (BIT1 _0)))) /\ ((q <= j) /\ (j < k))))) ==> (((q < j) ==> (((((azim (vec (NUMERAL _0))) (v (p + j))) (v (p + (j + (NUMERAL (BIT1 _0)))))) (v (p + (j + (k - (NUMERAL (BIT1 _0))))))) = pi)) /\ ((v (p + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v p) INSERT EMPTY))) ((v (p + (k - (NUMERAL (BIT1 _0))))) INSERT EMPTY))))))))))))))) (\j. ((((azim (vec (NUMERAL _0))) (v p)) (v (p + (NUMERAL (BIT1 _0))))) (v (p + j))))))))) s)
T * / ! ! ! cLET / cLET_END c==> c/\ cis_scs_v39 b0 c/\ c= cscs_k_v39 b0 b1 c/\ c< cNUMERAL cBIT1 cBIT1 c_0 b1 c/\ cBBs_v39 b0 b2 c/\ cscs_basic_v39 b0 cscs_generic b2 c/\ c= * b4 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_le * b4 c- b1 cNUMERAL cBIT1 c_0 cpi c/\ ! ! c==> c/\ c< b5 b6 c< b6 b1 creal_le * b4 b5 * b4 b6 c/\ ! ! c==> c/\ c= * b4 b5 creal_of_num cNUMERAL c_0 c/\ c< cNUMERAL c_0 b6 c/\ c<= b6 b5 c< b5 b1 c/\ c==> c< b6 b5 c= cazim cvec cNUMERAL c_0 * b2 c+ b3 b6 * b2 c+ b3 c+ b6 cNUMERAL cBIT1 c_0 * b2 c+ b3 c+ b6 c- b1 cNUMERAL cBIT1 c_0 cpi cIN * b2 c+ b3 b6 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b2 b3 part cEMPTY * * part cINSERT * b2 c+ b3 cNUMERAL cBIT1 c_0 part cEMPTY ! ! c==> c/\ c= * b4 b5 * b4 c- b1 cNUMERAL cBIT1 c_0 c/\ c< cNUMERAL c_0 b5 c/\ c< b5 c- b1 cNUMERAL cBIT1 c_0 c/\ c<= b5 b6 c< b6 b1 c/\ c==> c< b5 b6 c= cazim cvec cNUMERAL c_0 * b2 c+ b3 b6 * b2 c+ b3 c+ b6 cNUMERAL cBIT1 c_0 * b2 c+ b3 c+ b6 c- b1 cNUMERAL cBIT1 c_0 cpi cIN * b2 c+ b3 b6 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b2 b3 part cEMPTY * * part cINSERT * b2 c+ b3 c- b1 cNUMERAL cBIT1 c_0 part cEMPTY / cazim cvec cNUMERAL c_0 * b2 b3 * b2 c+ b3 cNUMERAL cBIT1 c_0 * b2 c+ b3 b4 f0
+ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT1 _0))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT1 _0)))))
T c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT1 c_0
+ ((is_scs_v39 s) /\ (((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((scs_basic_v39 s) /\ ((scs_generic v) /\ (((BBs_v39 s) v) /\ ((((IMAGE v) UNIV) = V) /\ ((((IMAGE (\i. ((v i) INSERT ((v (SUC i)) INSERT EMPTY)))) UNIV) = E) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY))))))))))))) |- ((real_lt (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))))
T c==> c/\ cis_scs_v39 f0 c/\ c= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ cscs_basic_v39 f0 c/\ cscs_generic f1 c/\ cBBs_v39 f0 f1 c/\ c= * * part cIMAGE f1 part cUNIV f2 c/\ c= * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV f3 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 * * part cINSERT * f1 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f1 cNUMERAL c_0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f1 cNUMERAL c_0 * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL cBIT1 cBIT1 c_0
- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- |- (T = (((~ (_9889049 = (vec (NUMERAL _0)))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889049)) = ((((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889049) \/ (~ (_9889049 = (vec (NUMERAL _0)))))))
T c= cT c= c\/ c~ c= f0 cvec cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f0 c\/ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f0 c~ c= f0 cvec cNUMERAL c_0
+ (x = (vec (NUMERAL _0))), ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) |- (((vec (NUMERAL _0)) = (vec (NUMERAL _0))) ==> F)
T c==> c= f0 cvec cNUMERAL c_0 c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c= cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF
+ |- ((!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))))) = (!x. ((x IN (((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY)) UNION ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) = (x IN ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))))
T c= ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 ! c= cIN b0 * * part cUNION * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN b0 * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY
+ |- ((A = F) ==> (((A ==> B) /\ A) ==> B))
T c==> c= f0 cF c==> c/\ c==> f0 f1 f0 f1
+ ((a = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) a) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 f0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_le (real_of_num (NUMERAL _0))) ((((azim x) y) z) u)) = T)
T c= creal_le creal_of_num cNUMERAL c_0 cazim f0 f1 f2 f3 cT
+ (x = (vec (NUMERAL _0))), ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) |- ((x = (vec (NUMERAL _0))) /\ F)
T c==> c= f0 cvec cNUMERAL c_0 c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c= f0 cvec cNUMERAL c_0 cF
+ (x = (vec (NUMERAL _0))), ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- F
T c==> c= f0 cvec cNUMERAL c_0 c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 cF
+ ((a = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- (((real_gt a) (real_of_num (NUMERAL _0))) = ((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a) = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c= creal_gt f0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0
+ (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- (((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))) ==> F)
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c\/ c= f1 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= f1 * f0 cNUMERAL c_0 cF
- (x = (vec (NUMERAL _0))), ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- (~ ((vec (NUMERAL _0)) = (v (NUMERAL (BIT1 _0)))))
T c==> c= f0 cvec cNUMERAL c_0 c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c~ c= cvec cNUMERAL c_0 * f1 cNUMERAL cBIT1 c_0
+ ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((((a = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= c==> c/\ c= f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- (((~ (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))) ==> F) ==> ((~ (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 cF
- ((~ (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))) ==> F) |- (((~ (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))) ==> F) /\ ((~ (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 cF c/\ c==> c~ c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 cF
+ (x = (v (NUMERAL (BIT1 _0)))) |- ((~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)) = (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT1 _0))))))
T c==> c= f0 * f1 cNUMERAL cBIT1 c_0 c= c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f0 c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY * f1 cNUMERAL cBIT1 c_0
+ (~ ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))))), (((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) ==> F), (((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) ==> F) |- F
T c==> c~ c= c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 cF c==> c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 cF cF
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- ((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0)))))
T c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0
- |- ((!x. ((P x) \/ Q)) = ((!x. (P x)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ ((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY)) UNION ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) = ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) |- (((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) SUBSET ((hull affine) (((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY)) UNION ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) ==> ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) = ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) ==> ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))))
T c==> c= * * part cUNION * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c= c==> cSUBSET * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cUNION * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c==> cSUBSET * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY
- (x = (v (NUMERAL _0))) |- (((~ (_9889052 = (v (NUMERAL (BIT1 _0))))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889052)) = ((~ (_9889052 = (v (NUMERAL (BIT1 _0))))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889052)))
T c==> c= f0 * f1 cNUMERAL c_0 c= c\/ c~ c= f2 * f1 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f2 c\/ c~ c= f2 * f1 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f2
- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) /\ F)
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 cF
+ (!q. (!j. (((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + q))) = (real_of_num (NUMERAL _0))) /\ (((NUMERAL _0) < j) /\ ((j <= q) /\ (q < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ==> (((j < q) ==> (((((azim (vec (NUMERAL _0))) (v ((NUMERAL _0) + j))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT1 _0)))))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = pi)) /\ ((v ((NUMERAL _0) + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))), (((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL _0))) |- (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))))
T c==> ! ! c==> c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ c< cNUMERAL c_0 b1 c/\ c<= b1 b0 c< b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b1 b0 c= cazim cvec cNUMERAL c_0 * f0 c+ cNUMERAL c_0 b1 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cpi cIN * f0 c+ cNUMERAL c_0 b1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c==> c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY
- |- ((~ ((v (NUMERAL _0)) = (v (NUMERAL _0)))) ==> ((v (NUMERAL _0)) = (v (NUMERAL _0))))
T c==> c~ c= * f0 cNUMERAL c_0 * f0 cNUMERAL c_0 c= * f0 cNUMERAL c_0 * f0 cNUMERAL c_0
+ |- ((((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) ==> F)
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 cF
+ |- ((\v. (!p. ((LET (\bta. (LET_END (((is_scs_v39 s) /\ (((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((BBs_v39 s) v) /\ ((scs_basic_v39 s) /\ (scs_generic v)))))) ==> (((bta (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_le (bta ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) pi) /\ ((!i. (!j. (((i < j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((real_le (bta i)) (bta j))))) /\ ((!q. (!j. ((((bta q) = (real_of_num (NUMERAL _0))) /\ (((NUMERAL _0) < j) /\ ((j <= q) /\ (q < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ==> (((j < q) ==> (((((azim (vec (NUMERAL _0))) (v (p + j))) (v (p + (j + (NUMERAL (BIT1 _0)))))) (v (p + (j + ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))))) = pi)) /\ ((v (p + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v p) INSERT EMPTY))) ((v (p + (NUMERAL (BIT1 _0)))) INSERT EMPTY))))))) /\ (!q. (!j. ((((bta q) = (bta ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) /\ (((NUMERAL _0) < q) /\ ((q < ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0)))) /\ ((q <= j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) ==> (((q < j) ==> (((((azim (vec (NUMERAL _0))) (v (p + j))) (v (p + (j + (NUMERAL (BIT1 _0)))))) (v (p + (j + ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))))) = pi)) /\ ((v (p + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v p) INSERT EMPTY))) ((v (p + ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) INSERT EMPTY))))))))))))))) (\j. ((((azim (vec (NUMERAL _0))) (v p)) (v (p + (NUMERAL (BIT1 _0))))) (v (p + j))))))) v)
T * / ! cLET / cLET_END c==> c/\ cis_scs_v39 f0 c/\ c= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ cBBs_v39 f0 b0 c/\ cscs_basic_v39 f0 cscs_generic b0 c/\ c= * b2 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_le * b2 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cpi c/\ ! ! c==> c/\ c< b3 b4 c< b4 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_le * b2 b3 * b2 b4 c/\ ! ! c==> c/\ c= * b2 b3 creal_of_num cNUMERAL c_0 c/\ c< cNUMERAL c_0 b4 c/\ c<= b4 b3 c< b3 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b4 b3 c= cazim cvec cNUMERAL c_0 * b0 c+ b1 b4 * b0 c+ b1 c+ b4 cNUMERAL cBIT1 c_0 * b0 c+ b1 c+ b4 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cpi cIN * b0 c+ b1 b4 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 b1 part cEMPTY * * part cINSERT * b0 c+ b1 cNUMERAL cBIT1 c_0 part cEMPTY ! ! c==> c/\ c= * b2 b3 * b2 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c< cNUMERAL c_0 b3 c/\ c< b3 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= b3 b4 c< b4 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b3 b4 c= cazim cvec cNUMERAL c_0 * b0 c+ b1 b4 * b0 c+ b1 c+ b4 cNUMERAL cBIT1 c_0 * b0 c+ b1 c+ b4 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cpi cIN * b0 c+ b1 b4 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 b1 part cEMPTY * * part cINSERT * b0 c+ b1 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 part cEMPTY / cazim cvec cNUMERAL c_0 * b0 b1 * b0 c+ b1 cNUMERAL cBIT1 c_0 * b0 c+ b1 b2 f1
+ |- (((a = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 cF
- |- ((!v. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) = (!v. ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F)))
T c= ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 part cEMPTY * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY * b0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 part cEMPTY * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY b1 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY b1 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY * b0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 part cEMPTY * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY * b0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 part cEMPTY * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY b1 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY b1 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY * b0 cNUMERAL cBIT0 cBIT1 c_0 cF
+ (is_scs_v39 s), (scs_basic_v39 s), ((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((scs_basic_v39 s) /\ ((scs_generic v) /\ (((BBs_v39 s) v) /\ ((((IMAGE v) UNIV) = V) /\ ((((IMAGE (\i. ((v i) INSERT ((v (SUC i)) INSERT EMPTY)))) UNIV) = E) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY))))))))))) |- ((real_lt (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))))
T c==> cis_scs_v39 f0 c==> cscs_basic_v39 f0 c==> c= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c/\ cscs_basic_v39 f0 c/\ cscs_generic f1 c/\ cBBs_v39 f0 f1 c/\ c= * * part cIMAGE f1 part cUNIV f2 c/\ c= * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV f3 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 * * part cINSERT * f1 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f1 cNUMERAL c_0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f1 cNUMERAL c_0 * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL cBIT1 cBIT1 c_0
+ ((((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) ==> F), (((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0)))))) |- F
T c==> c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((_9889163 = _9889166) ==> ((~ (_9889162 = _9889165)) \/ ((~ (_9889161 = _9889164)) \/ ((((hull _9889164) _9889165) _9889166) \/ (~ (((hull _9889161) _9889162) _9889163))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ chull f5 f3 f1 c~ chull f4 f2 f0
+ ((((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0)))))) ==> F), ((((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))))) |- F
T c==> c==> c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 cF
+ |- ((\s. (!t. (((aff_gt s) t) SUBSET ((hull affine) (s UNION t))))) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))
T * / ! cSUBSET * * part caff_gt b0 b1 * * part chull part caffine * * part cUNION b0 b1 * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY
- (!i. (!j. (((i < j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((real_le ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + i)))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + j))))))) |- (!j. (((i < j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((real_le ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + i)))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + j))))))
T c==> ! ! c==> c/\ c< b0 b1 c< b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_le cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b1 ! c==> c/\ c< f1 b0 c< b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_le cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 f1 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))) ==> F) ==> ((~ (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))) ==> F)) ==> (((~ (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))) ==> F) ==> ((~ (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 cF c==> c==> c~ c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 cF
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ ((A = T) ==> (((A ==> B) /\ A) ==> B)), ((A = F) ==> (((A ==> B) /\ A) ==> B)) |- (((A ==> B) /\ A) ==> B)
T c==> c==> c= f0 cT c==> c/\ c==> f0 f1 f0 f1 c==> c==> c= f0 cF c==> c/\ c==> f0 f1 f0 f1 c==> c/\ c==> f0 f1 f0 f1
+ (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), (x = (v (NUMERAL (BIT0 (BIT1 _0))))) |- (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c= f1 * f0 cNUMERAL cBIT0 cBIT1 c_0 c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((real_lt (real_of_num (NUMERAL _0))) a) = ((~ (a = (real_of_num (NUMERAL _0)))) /\ ((real_le (real_of_num (NUMERAL _0))) a)))
T c= creal_lt creal_of_num cNUMERAL c_0 f0 c/\ c~ c= f0 creal_of_num cNUMERAL c_0 creal_le creal_of_num cNUMERAL c_0 f0
+ |- ((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY)) UNION ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) = ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))
T c= * * part cUNION * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY
+ |- (((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) ==> F)
T c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 cF
+ ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- (~ (x = (vec (NUMERAL _0))))
T c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c~ c= f0 cvec cNUMERAL c_0
+ |- ((\p. ((LET (\bta. (LET_END (((is_scs_v39 s) /\ (((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((BBs_v39 s) v) /\ ((scs_basic_v39 s) /\ (scs_generic v)))))) ==> (((bta (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_le (bta ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) pi) /\ ((!i. (!j. (((i < j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((real_le (bta i)) (bta j))))) /\ ((!q. (!j. ((((bta q) = (real_of_num (NUMERAL _0))) /\ (((NUMERAL _0) < j) /\ ((j <= q) /\ (q < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ==> (((j < q) ==> (((((azim (vec (NUMERAL _0))) (v (p + j))) (v (p + (j + (NUMERAL (BIT1 _0)))))) (v (p + (j + ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))))) = pi)) /\ ((v (p + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v p) INSERT EMPTY))) ((v (p + (NUMERAL (BIT1 _0)))) INSERT EMPTY))))))) /\ (!q. (!j. ((((bta q) = (bta ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) /\ (((NUMERAL _0) < q) /\ ((q < ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0)))) /\ ((q <= j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) ==> (((q < j) ==> (((((azim (vec (NUMERAL _0))) (v (p + j))) (v (p + (j + (NUMERAL (BIT1 _0)))))) (v (p + (j + ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))))) = pi)) /\ ((v (p + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v p) INSERT EMPTY))) ((v (p + ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) INSERT EMPTY))))))))))))))) (\j. ((((azim (vec (NUMERAL _0))) (v p)) (v (p + (NUMERAL (BIT1 _0))))) (v (p + j)))))) (NUMERAL _0))
T * / cLET / cLET_END c==> c/\ cis_scs_v39 f0 c/\ c= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ cBBs_v39 f0 f1 c/\ cscs_basic_v39 f0 cscs_generic f1 c/\ c= * b1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_le * b1 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cpi c/\ ! ! c==> c/\ c< b2 b3 c< b3 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_le * b1 b2 * b1 b3 c/\ ! ! c==> c/\ c= * b1 b2 creal_of_num cNUMERAL c_0 c/\ c< cNUMERAL c_0 b3 c/\ c<= b3 b2 c< b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b3 b2 c= cazim cvec cNUMERAL c_0 * f1 c+ b0 b3 * f1 c+ b0 c+ b3 cNUMERAL cBIT1 c_0 * f1 c+ b0 c+ b3 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cpi cIN * f1 c+ b0 b3 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 b0 part cEMPTY * * part cINSERT * f1 c+ b0 cNUMERAL cBIT1 c_0 part cEMPTY ! ! c==> c/\ c= * b1 b2 * b1 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c< cNUMERAL c_0 b2 c/\ c< b2 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= b2 b3 c< b3 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b2 b3 c= cazim cvec cNUMERAL c_0 * f1 c+ b0 b3 * f1 c+ b0 c+ b3 cNUMERAL cBIT1 c_0 * f1 c+ b0 c+ b3 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cpi cIN * f1 c+ b0 b3 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 b0 part cEMPTY * * part cINSERT * f1 c+ b0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 part cEMPTY / cazim cvec cNUMERAL c_0 * f1 b0 * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 c+ b0 b1 cNUMERAL c_0
- |- (T = (((~ (_9889052 = (v (NUMERAL _0)))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889052)) = ((((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889052) \/ (~ (_9889052 = (v (NUMERAL _0)))))))
T c= cT c= c\/ c~ c= f0 * f1 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f0 c\/ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f0 c~ c= f0 * f1 cNUMERAL c_0
- |- ((\v. ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F)) v)
T * / c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 part cEMPTY * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY * b0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 part cEMPTY * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY b1 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY b1 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY * b0 cNUMERAL cBIT0 cBIT1 c_0 cF f0
+ ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- (((((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL _0))) ==> F) = F)
T c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL c_0 cF cF
- ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F), (((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F) ==> ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F)) |- ((((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F) ==> ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F)) /\ ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F))
T c==> c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c==> c==> c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c/\ c==> c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF
- |- (((((((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) ==> B) /\ ((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) ==> B) ==> (((((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) ==> B) /\ ((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) ==> B)) = (((((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) ==> B) /\ ((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) ==> B))
T c= c==> c==> c/\ c==> c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c/\ c==> c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c/\ c==> c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1
+ |- (((!f. (!x. (((LET f) x) = (f x)))) ==> ((\f. (!x. (((LET f) x) = (f x)))) f)) = ((\f. (!x. (((LET f) x) = (f x)))) f))
T c= c==> ! ! c= cLET b0 b1 * b0 b1 * / ! c= cLET b0 b1 * b0 b1 f0 * / ! c= cLET b0 b1 * b0 b1 f0
+ |- (((!z. (!u. ((real_le (real_of_num (NUMERAL _0))) ((((azim x) y) z) u)))) ==> ((\z. (!u. ((real_le (real_of_num (NUMERAL _0))) ((((azim x) y) z) u)))) z)) = ((\z. (!u. ((real_le (real_of_num (NUMERAL _0))) ((((azim x) y) z) u)))) z))
T c= c==> ! ! creal_le creal_of_num cNUMERAL c_0 cazim f0 f1 b0 b1 * / ! creal_le creal_of_num cNUMERAL c_0 cazim f0 f1 b0 b1 f2 * / ! creal_le creal_of_num cNUMERAL c_0 cazim f0 f1 b0 b1 f2
+ |- (((~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)) ==> F) = (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))
T c= c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 cF chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1
+ |- ((!v. (((((IMAGE (\i. ((v i) , (v (SUC i))))) UNIV) = FF) /\ ((is_scs_v39 s) /\ (((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((scs_basic_v39 s) /\ ((scs_generic v) /\ (((BBs_v39 s) v) /\ ((((IMAGE v) UNIV) = V) /\ ((((IMAGE (\i. ((v i) INSERT ((v (SUC i)) INSERT EMPTY)))) UNIV) = E) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))))))))))))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0)))))))) = T)
T c= ! c==> c/\ c= * * part cIMAGE / c, * b0 b1 * b0 cSUC b1 part cUNIV f0 c/\ cis_scs_v39 f1 c/\ c= cscs_k_v39 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ cscs_basic_v39 f1 c/\ cscs_generic b0 c/\ cBBs_v39 f1 b0 c/\ c= * * part cIMAGE b0 part cUNIV f2 c/\ c= * * part cIMAGE / * * part cINSERT * b0 b1 * * part cINSERT * b0 cSUC b1 part cEMPTY part cUNIV f3 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 * * part cINSERT * b0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * b0 cNUMERAL c_0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 * b0 cNUMERAL c_0 * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 cT
+ ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((\x. (((real_mul x) a) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 f0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))) ==> F) = (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)))))
T c= c==> c~ c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 cF c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (x = (v (NUMERAL _0))) |- (F = F)
T c==> c= f0 * f1 cNUMERAL c_0 c= cF cF
+ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ |- (!V. (!E. (!FF. (!s. (!v. (((((IMAGE (\i. ((v i) , (v (SUC i))))) UNIV) = FF) /\ ((is_scs_v39 s) /\ (((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((scs_basic_v39 s) /\ ((scs_generic v) /\ (((BBs_v39 s) v) /\ ((((IMAGE v) UNIV) = V) /\ ((((IMAGE (\i. ((v i) INSERT ((v (SUC i)) INSERT EMPTY)))) UNIV) = E) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))))))))))))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))))))))))
T c==> c/\ c= * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV f1 c/\ cis_scs_v39 f2 c/\ c= cscs_k_v39 f2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ cscs_basic_v39 f2 c/\ cscs_generic f0 c/\ cBBs_v39 f2 f0 c/\ c= * * part cIMAGE f0 part cUNIV f3 c/\ c= * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV f4 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0
+ ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))), ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))) |- (((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ F)
T c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 cF
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (~ (~ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((a = (real_of_num (NUMERAL _0))) \/ (~ ((real_le (real_of_num (NUMERAL _0))) a)))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) \/ ((~ (a = (real_of_num (NUMERAL _0)))) /\ ((real_le (real_of_num (NUMERAL _0))) a)))))) |- (((((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) \/ (((a = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))))) \/ (((((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))))) \/ ((((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0)))))))))
T c==> c~ c~ c/\ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 f0 c\/ c= f0 creal_of_num cNUMERAL c_0 c~ creal_le creal_of_num cNUMERAL c_0 f0 c\/ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ c~ c= f0 creal_of_num cNUMERAL c_0 creal_le creal_of_num cNUMERAL c_0 f0 c\/ c\/ c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c\/ c\/ c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0
+ |- ((\s. ((coplanar s) = (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) s)
T * / c= ccoplanar b0 c? / c? / c? / cSUBSET b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
+ (~ ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))))) |- (((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) \/ ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))
T c==> c~ c= c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0
+ (x = (v (NUMERAL (BIT1 _0)))), ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) |- (~ ((v (NUMERAL (BIT1 _0))) = (v (NUMERAL (BIT1 _0)))))
T c==> c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c~ c= * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL cBIT1 c_0
+ (x = (v (NUMERAL _0))) |- ((~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)) = (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL _0)))))
T c==> c= f0 * f1 cNUMERAL c_0 c= c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f0 c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY * f1 cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. (!y. (!z. (!u. ((real_le (real_of_num (NUMERAL _0))) ((((azim x) y) z) u)))))) ==> ((\x. (!y. (!z. (!u. ((real_le (real_of_num (NUMERAL _0))) ((((azim x) y) z) u)))))) x)) = ((\x. (!y. (!z. (!u. ((real_le (real_of_num (NUMERAL _0))) ((((azim x) y) z) u)))))) x))
T c= c==> ! ! ! ! creal_le creal_of_num cNUMERAL c_0 cazim b0 b1 b2 b3 * / ! ! ! creal_le creal_of_num cNUMERAL c_0 cazim b0 b1 b2 b3 f0 * / ! ! ! creal_le creal_of_num cNUMERAL c_0 cazim b0 b1 b2 b3 f0
- (!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))), (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) |- (((((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> F) = F)
T c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF cF
+ (x = (v (NUMERAL (BIT1 _0)))), ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- ((x = (v (NUMERAL (BIT1 _0)))) /\ F)
T c==> c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c= f0 * f1 cNUMERAL cBIT1 c_0 cF
+ |- (!p. ((LET (\bta. (LET_END (((is_scs_v39 s) /\ (((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((BBs_v39 s) v) /\ ((scs_basic_v39 s) /\ (scs_generic v)))))) ==> (((bta (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_le (bta ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) pi) /\ ((!i. (!j. (((i < j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((real_le (bta i)) (bta j))))) /\ ((!q. (!j. ((((bta q) = (real_of_num (NUMERAL _0))) /\ (((NUMERAL _0) < j) /\ ((j <= q) /\ (q < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ==> (((j < q) ==> (((((azim (vec (NUMERAL _0))) (v (p + j))) (v (p + (j + (NUMERAL (BIT1 _0)))))) (v (p + (j + ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))))) = pi)) /\ ((v (p + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v p) INSERT EMPTY))) ((v (p + (NUMERAL (BIT1 _0)))) INSERT EMPTY))))))) /\ (!q. (!j. ((((bta q) = (bta ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) /\ (((NUMERAL _0) < q) /\ ((q < ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0)))) /\ ((q <= j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) ==> (((q < j) ==> (((((azim (vec (NUMERAL _0))) (v (p + j))) (v (p + (j + (NUMERAL (BIT1 _0)))))) (v (p + (j + ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))))) = pi)) /\ ((v (p + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v p) INSERT EMPTY))) ((v (p + ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) INSERT EMPTY))))))))))))))) (\j. ((((azim (vec (NUMERAL _0))) (v p)) (v (p + (NUMERAL (BIT1 _0))))) (v (p + j))))))
T cLET / cLET_END c==> c/\ cis_scs_v39 f0 c/\ c= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ cBBs_v39 f0 f1 c/\ cscs_basic_v39 f0 cscs_generic f1 c/\ c= * b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_le * b0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cpi c/\ ! ! c==> c/\ c< b1 b2 c< b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_le * b0 b1 * b0 b2 c/\ ! ! c==> c/\ c= * b0 b1 creal_of_num cNUMERAL c_0 c/\ c< cNUMERAL c_0 b2 c/\ c<= b2 b1 c< b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b2 b1 c= cazim cvec cNUMERAL c_0 * f1 c+ f2 b2 * f1 c+ f2 c+ b2 cNUMERAL cBIT1 c_0 * f1 c+ f2 c+ b2 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cpi cIN * f1 c+ f2 b2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 f2 part cEMPTY * * part cINSERT * f1 c+ f2 cNUMERAL cBIT1 c_0 part cEMPTY ! ! c==> c/\ c= * b0 b1 * b0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c< cNUMERAL c_0 b1 c/\ c< b1 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= b1 b2 c< b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b1 b2 c= cazim cvec cNUMERAL c_0 * f1 c+ f2 b2 * f1 c+ f2 c+ b2 cNUMERAL cBIT1 c_0 * f1 c+ f2 c+ b2 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cpi cIN * f1 c+ f2 b2 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 f2 part cEMPTY * * part cINSERT * f1 c+ f2 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 part cEMPTY / cazim cvec cNUMERAL c_0 * f1 f2 * f1 c+ f2 cNUMERAL cBIT1 c_0 * f1 c+ f2 b0
+ (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), (x = (v (NUMERAL (BIT1 _0)))) |- (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT1 _0)))))
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c= f1 * f0 cNUMERAL cBIT1 c_0 c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT1 c_0
- (_9889275 = _9889276) |- ((_9889275 = _9889276) /\ ((NUMERAL _9889275) = (NUMERAL _9889276)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) = (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ ((((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))))) |- (((((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))))) /\ F)
T c==> c\/ c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ c\/ c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 cF
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))))), (is_scs_v39 s), (scs_generic v), (scs_basic_v39 s), ((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((BBs_v39 s) v) |- ((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL _0))) ==> F)
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY c==> cis_scs_v39 f1 c==> cscs_generic f0 c==> cscs_basic_v39 f1 c==> c= cscs_k_v39 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> cBBs_v39 f1 f0 c==> c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ (is_scs_v39 s), (scs_generic v), (scs_basic_v39 s), ((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((scs_generic v) /\ (((BBs_v39 s) v) /\ ((((IMAGE v) UNIV) = V) /\ ((((IMAGE (\i. ((v i) INSERT ((v (SUC i)) INSERT EMPTY)))) UNIV) = E) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))))))))) |- ((real_lt (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))))
T c==> cis_scs_v39 f0 c==> cscs_generic f1 c==> cscs_basic_v39 f0 c==> c= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c/\ cscs_generic f1 c/\ cBBs_v39 f0 f1 c/\ c= * * part cIMAGE f1 part cUNIV f2 c/\ c= * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV f3 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 * * part cINSERT * f1 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f1 cNUMERAL c_0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f1 cNUMERAL c_0 * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL cBIT1 cBIT1 c_0
- (_9889277 = _9889278) |- ((_9889277 = _9889278) /\ ((v _9889277) = (v _9889278)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * f2 f0 * f2 f1
- ((a = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0
+ |- (T = (((T ==> B) /\ T) ==> B))
T c= cT c==> c/\ c==> cT f0 cT f0
- |- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- (~ (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))) |- F
T c==> c~ c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 cF
+ |- ((((v (NUMERAL (BIT1 _0))) = (v (NUMERAL (BIT1 _0)))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT1 _0))))) = (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT1 _0)))))
T c= c==> c= * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT1 c_0
- (_9889273 = _9889274) |- ((_9889273 = _9889274) /\ ((BIT1 _9889273) = (BIT1 _9889274)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT1 f0 cBIT1 f1
- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((real_ge a) (real_of_num (NUMERAL _0))) = (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0
+ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) a)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f0 creal_of_num cNUMERAL c_0
- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_ge a) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0
+ |- (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) SUBSET ((hull affine) (((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY)) UNION ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))
T cSUBSET * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cUNION * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY
+ (is_scs_v39 s), (scs_generic v), (scs_basic_v39 s), ((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), (((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL _0))), ((BBs_v39 s) v) |- (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))))
T c==> cis_scs_v39 f0 c==> cscs_generic f1 c==> cscs_basic_v39 f0 c==> c= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cazim cvec cNUMERAL c_0 * f1 cNUMERAL c_0 * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> cBBs_v39 f0 f1 ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 * * part cINSERT * f1 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f1 cNUMERAL c_0 part cEMPTY
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0
- |- ((~ (_9889275 = _9889276)) \/ ((NUMERAL _9889275) = (NUMERAL _9889276)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- (!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))), (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) |- ((~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> F)
T c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF
- |- ((_9889173 = _9889175) ==> ((~ (_9889174 = _9889176)) \/ ((_9889173 INSERT _9889174) = (_9889175 INSERT _9889176))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- (_9889174 = _9889176), (_9889173 = _9889175) |- ((_9889174 = _9889176) /\ ((_9889173 INSERT _9889174) = (_9889175 INSERT _9889176)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cINSERT f2 f0 * * part cINSERT f3 f1
- (x = (v (NUMERAL (BIT0 (BIT1 _0))))) |- (F = F)
T c==> c= f0 * f1 cNUMERAL cBIT0 cBIT1 c_0 c= cF cF
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ (x = (v (NUMERAL _0))), ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- ((x = (v (NUMERAL _0))) /\ F)
T c==> c= f0 * f1 cNUMERAL c_0 c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c= f0 * f1 cNUMERAL c_0 cF
+ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ |- (((((((azim (vec (NUMERAL _0))) (v (NUMERAL (BIT0 (BIT1 _0))))) (v (NUMERAL (BIT1 (BIT1 _0))))) (v (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = pi) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) ==> (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY))))))
T c==> c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cpi cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY
+ (!q. (!j. (((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + q))) = (real_of_num (NUMERAL _0))) /\ (((NUMERAL _0) < j) /\ ((j <= q) /\ (q < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ==> (((j < q) ==> (((((azim (vec (NUMERAL _0))) (v ((NUMERAL _0) + j))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT1 _0)))))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = pi)) /\ ((v ((NUMERAL _0) + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) |- ((\q. (!j. (((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + q))) = (real_of_num (NUMERAL _0))) /\ (((NUMERAL _0) < j) /\ ((j <= q) /\ (q < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ==> (((j < q) ==> (((((azim (vec (NUMERAL _0))) (v ((NUMERAL _0) + j))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT1 _0)))))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = pi)) /\ ((v ((NUMERAL _0) + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) (NUMERAL (BIT1 (BIT1 _0))))
T c==> ! ! c==> c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ c< cNUMERAL c_0 b1 c/\ c<= b1 b0 c< b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b1 b0 c= cazim cvec cNUMERAL c_0 * f0 c+ cNUMERAL c_0 b1 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cpi cIN * f0 c+ cNUMERAL c_0 b1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * / ! c==> c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ c< cNUMERAL c_0 b1 c/\ c<= b1 b0 c< b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b1 b0 c= cazim cvec cNUMERAL c_0 * f0 c+ cNUMERAL c_0 b1 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cpi cIN * f0 c+ cNUMERAL c_0 b1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cNUMERAL cBIT1 cBIT1 c_0
+ ((((IMAGE (\i. ((v i) , (v (SUC i))))) UNIV) = FF) /\ ((is_scs_v39 s) /\ (((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((scs_basic_v39 s) /\ ((scs_generic v) /\ (((BBs_v39 s) v) /\ ((((IMAGE v) UNIV) = V) /\ ((((IMAGE (\i. ((v i) INSERT ((v (SUC i)) INSERT EMPTY)))) UNIV) = E) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))))))))))))) |- (((((IMAGE (\i. ((v i) , (v (SUC i))))) UNIV) = FF) /\ ((is_scs_v39 s) /\ (((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((scs_basic_v39 s) /\ ((scs_generic v) /\ (((BBs_v39 s) v) /\ ((((IMAGE v) UNIV) = V) /\ ((((IMAGE (\i. ((v i) INSERT ((v (SUC i)) INSERT EMPTY)))) UNIV) = E) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))))))))))))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0)))))))
T c==> c/\ c= * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV f1 c/\ cis_scs_v39 f2 c/\ c= cscs_k_v39 f2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ cscs_basic_v39 f2 c/\ cscs_generic f0 c/\ cBBs_v39 f2 f0 c/\ c= * * part cIMAGE f0 part cUNIV f3 c/\ c= * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV f4 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY c/\ c/\ c= * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV f1 c/\ cis_scs_v39 f2 c/\ c= cscs_k_v39 f2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ cscs_basic_v39 f2 c/\ cscs_generic f0 c/\ cBBs_v39 f2 f0 c/\ c= * * part cIMAGE f0 part cUNIV f3 c/\ c= * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV f4 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0
+ (!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))), (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) |- (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))
T c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F) = ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0))))))))
T c= c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0
+ (!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) |- ((~ (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) _9889279)) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889279))
T c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 c\/ c~ caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1
+ (~ ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))))) |- ((~ ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))))) /\ F)
T c==> c~ c= c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 cF
+ |- (((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0))))))) = (((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) ==> ((!x. ((x IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) ==> (x IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) ==> ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))))
T c= c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c==> ! c==> cIN b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY
- (x = (v (NUMERAL (BIT0 (BIT1 _0))))) |- (((~ (_9889051 = (v (NUMERAL _0)))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889051)) = ((~ (_9889051 = (v (NUMERAL _0)))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889051)))
T c==> c= f0 * f1 cNUMERAL cBIT0 cBIT1 c_0 c= c\/ c~ c= f2 * f1 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f2 c\/ c~ c= f2 * f1 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f2
+ (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))), ((x = (v (NUMERAL _0))) ==> F), ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))) |- F
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c==> c= f1 * f0 cNUMERAL c_0 cF c==> c\/ c= f1 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= f1 * f0 cNUMERAL c_0 cF
+ ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((a = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ c= f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- |- (T = (((~ (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) _9889279)) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889279)) = ((((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889279) \/ (~ (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) _9889279)))))
T c= cT c= c\/ c~ caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c\/ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c~ caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1
+ (is_scs_v39 s), (scs_generic v), (scs_basic_v39 s), ((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), (((BBs_v39 s) v) /\ ((((IMAGE v) UNIV) = V) /\ ((((IMAGE (\i. ((v i) INSERT ((v (SUC i)) INSERT EMPTY)))) UNIV) = E) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY))))))))) |- ((real_lt (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))))
T c==> cis_scs_v39 f0 c==> cscs_generic f1 c==> cscs_basic_v39 f0 c==> c= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c/\ cBBs_v39 f0 f1 c/\ c= * * part cIMAGE f1 part cUNIV f2 c/\ c= * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV f3 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 * * part cINSERT * f1 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f1 cNUMERAL c_0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f1 cNUMERAL c_0 * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL cBIT1 cBIT1 c_0
- (x = (v (NUMERAL _0))) |- (((~ (_9889052 = (v (NUMERAL _0)))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889052)) = ((~ (_9889052 = (v (NUMERAL _0)))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889052)))
T c==> c= f0 * f1 cNUMERAL c_0 c= c\/ c~ c= f2 * f1 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f2 c\/ c~ c= f2 * f1 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f2
+ ((((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) ==> F), (((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0)))))) |- F
T c==> c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 cF
+ ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))), ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) |- (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))
T c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c\/ c= f1 cvec cNUMERAL c_0 c\/ c= f1 * f0 cNUMERAL cBIT1 c_0 c\/ c= f1 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= f1 * f0 cNUMERAL c_0 c/\ c\/ c= f1 cvec cNUMERAL c_0 c\/ c= f1 * f0 cNUMERAL cBIT1 c_0 c\/ c= f1 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= f1 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1
- (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), (x = (vec (NUMERAL _0))), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((~ F) ==> F)
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c= f1 cvec cNUMERAL c_0 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cF cF
+ ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL _0)))
T c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL c_0
- |- ((_9889275 = _9889276) ==> ((NUMERAL _9889275) = (NUMERAL _9889276)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ (!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) |- ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) _9889279) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889279))
T c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1
+ (((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL _0))) |- (((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL _0))) ==> ((((((azim (vec (NUMERAL _0))) (v (NUMERAL (BIT0 (BIT1 _0))))) (v (NUMERAL (BIT1 (BIT1 _0))))) (v (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = pi) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) ==> (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY))))))
T c==> c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c==> c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cpi cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY
+ ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))), ((x = (v (NUMERAL (BIT1 _0)))) ==> F) |- F
T c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c==> c= f0 * f1 cNUMERAL cBIT1 c_0 cF cF
+ |- ((((real_lt (real_of_num (NUMERAL _0))) a) /\ ((~ (a = (real_of_num (NUMERAL _0)))) /\ ((real_le (real_of_num (NUMERAL _0))) a))) \/ ((~ ((real_lt (real_of_num (NUMERAL _0))) a)) /\ ((a = (real_of_num (NUMERAL _0))) \/ (~ ((real_le (real_of_num (NUMERAL _0))) a)))))
T c\/ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ c~ c= f0 creal_of_num cNUMERAL c_0 creal_le creal_of_num cNUMERAL c_0 f0 c/\ c~ creal_lt creal_of_num cNUMERAL c_0 f0 c\/ c= f0 creal_of_num cNUMERAL c_0 c~ creal_le creal_of_num cNUMERAL c_0 f0
- (!i. (!j. (((i < j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((real_le ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + i)))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + j))))))) |- ((((i < j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((real_le ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + i)))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + j))))) = T)
T c==> ! ! c==> c/\ c< b0 b1 c< b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_le cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b1 c= c==> c/\ c< f1 f2 c< f2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_le cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 f1 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 f2 cT
- (~ F), (x = (v (NUMERAL _0))), ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 * f1 cNUMERAL c_0 c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ cF cF
+ ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) |- ((\w. (((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT (w INSERT EMPTY)))))) (v (NUMERAL (BIT1 _0))))
T c==> cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * / cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT b0 part cEMPTY * f0 cNUMERAL cBIT1 c_0
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ ((A = F) ==> (((A ==> B) /\ A) ==> B)) |- (((A ==> B) /\ A) ==> B)
T c==> c==> c= f0 cF c==> c/\ c==> f0 f1 f0 f1 c==> c/\ c==> f0 f1 f0 f1
- |- ((~ (_9889173 = _9889175)) \/ ((~ (_9889174 = _9889176)) \/ ((_9889173 INSERT _9889174) = (_9889175 INSERT _9889176))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_gt a) (real_of_num (NUMERAL _0)))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0
- |- ((~ (_9889163 = _9889166)) \/ ((~ (_9889162 = _9889165)) \/ ((~ (_9889161 = _9889164)) \/ ((((hull _9889164) _9889165) _9889166) \/ (~ (((hull _9889161) _9889162) _9889163))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ chull f5 f3 f1 c~ chull f4 f2 f0
+ ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((_9889049 = (vec (NUMERAL _0))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889049))
T c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c= f1 cvec cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1
+ ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)) = T)
T c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c\/ c= f1 cvec cNUMERAL c_0 c\/ c= f1 * f0 cNUMERAL cBIT1 c_0 c\/ c= f1 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= f1 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 cT
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_gt y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
+ ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- ((x = (v (NUMERAL (BIT1 _0)))) ==> F)
T c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c= f0 * f1 cNUMERAL cBIT1 c_0 cF
+ ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- (~ (x = (v (NUMERAL (BIT1 _0)))))
T c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0
+ ((a = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (x = (vec (NUMERAL _0))), ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- (((vec (NUMERAL _0)) = (vec (NUMERAL _0))) ==> F)
T c==> c= f0 cvec cNUMERAL c_0 c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c= cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF
- |- ((_9889277 = _9889278) ==> ((v _9889277) = (v _9889278)))
T c==> c= f0 f1 c= * f2 f0 * f2 f1
+ |- (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT1 (BIT1 _0)))) = T)
T c= c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cT
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) ==> ((!x. ((x IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) ==> (x IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) ==> ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))))
T c==> cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c==> ! c==> cIN b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY
+ |- (((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) = ((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))))
T c= cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY
+ |- (((NUMERAL _0) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c+ cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((((real_lt (real_of_num (NUMERAL _0))) a) /\ ((~ (a = (real_of_num (NUMERAL _0)))) /\ ((real_le (real_of_num (NUMERAL _0))) a))) \/ ((~ ((real_lt (real_of_num (NUMERAL _0))) a)) /\ ((a = (real_of_num (NUMERAL _0))) \/ (~ ((real_le (real_of_num (NUMERAL _0))) a))))) = (((real_lt (real_of_num (NUMERAL _0))) a) = ((~ (a = (real_of_num (NUMERAL _0)))) /\ ((real_le (real_of_num (NUMERAL _0))) a))))
T c= c\/ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ c~ c= f0 creal_of_num cNUMERAL c_0 creal_le creal_of_num cNUMERAL c_0 f0 c/\ c~ creal_lt creal_of_num cNUMERAL c_0 f0 c\/ c= f0 creal_of_num cNUMERAL c_0 c~ creal_le creal_of_num cNUMERAL c_0 f0 c= creal_lt creal_of_num cNUMERAL c_0 f0 c/\ c~ c= f0 creal_of_num cNUMERAL c_0 creal_le creal_of_num cNUMERAL c_0 f0
+ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (~ F), (x = (v (NUMERAL (BIT1 _0)))), ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ cF cF
- (x = (vec (NUMERAL _0))) |- (F = F)
T c==> c= f0 cvec cNUMERAL c_0 c= cF cF
- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ |- (((((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))))) ==> F)
T c==> c\/ c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 cF
+ ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) a)) (real_of_num (NUMERAL _0)))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f0 creal_of_num cNUMERAL c_0
+ ((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY)) UNION ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) = ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))), ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) |- ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) SUBSET ((hull affine) (((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY)) UNION ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) ==> ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))
T c==> c= * * part cUNION * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c==> cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c==> cSUBSET * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cUNION * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY
+ (is_scs_v39 s), (((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((scs_basic_v39 s) /\ ((scs_generic v) /\ (((BBs_v39 s) v) /\ ((((IMAGE v) UNIV) = V) /\ ((((IMAGE (\i. ((v i) INSERT ((v (SUC i)) INSERT EMPTY)))) UNIV) = E) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))))))))))) |- ((real_lt (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))))
T c==> cis_scs_v39 f0 c==> c/\ c= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ cscs_basic_v39 f0 c/\ cscs_generic f1 c/\ cBBs_v39 f0 f1 c/\ c= * * part cIMAGE f1 part cUNIV f2 c/\ c= * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV f3 c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 * * part cINSERT * f1 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f1 cNUMERAL c_0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f1 cNUMERAL c_0 * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL cBIT1 cBIT1 c_0
+ (((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL _0))), ((!i. (!j. (((i < j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((real_le ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + i)))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + j))))))) /\ ((!q. (!j. (((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + q))) = (real_of_num (NUMERAL _0))) /\ (((NUMERAL _0) < j) /\ ((j <= q) /\ (q < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ==> (((j < q) ==> (((((azim (vec (NUMERAL _0))) (v ((NUMERAL _0) + j))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT1 _0)))))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = pi)) /\ ((v ((NUMERAL _0) + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) /\ (!q. (!j. (((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + q))) = ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) /\ (((NUMERAL _0) < q) /\ ((q < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((q <= j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) ==> (((q < j) ==> (((((azim (vec (NUMERAL _0))) (v ((NUMERAL _0) + j))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT1 _0)))))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = pi)) /\ ((v ((NUMERAL _0) + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) INSERT EMPTY))))))))) |- (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))))
T c==> c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c/\ ! ! c==> c/\ c< b0 b1 c< b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_le cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b1 c/\ ! ! c==> c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ c< cNUMERAL c_0 b1 c/\ c<= b1 b0 c< b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b1 b0 c= cazim cvec cNUMERAL c_0 * f0 c+ cNUMERAL c_0 b1 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cpi cIN * f0 c+ cNUMERAL c_0 b1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY ! ! c==> c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< cNUMERAL c_0 b0 c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c<= b0 b1 c< b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b0 b1 c= cazim cvec cNUMERAL c_0 * f0 c+ cNUMERAL c_0 b1 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cpi cIN * f0 c+ cNUMERAL c_0 b1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 part cEMPTY ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY
+ ((((((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))))) \/ ((((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0)))))))) ==> F), (((((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) \/ (((a = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))))) \/ (((((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))))) \/ ((((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))))))) |- F
T c==> c==> c\/ c\/ c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 cF c==> c\/ c\/ c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c\/ c\/ c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 cF
+ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- ((((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 cF
+ (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), (x = (v (NUMERAL (BIT1 _0)))) |- ((((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT1 _0)))) ==> F)
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c= f1 * f0 cNUMERAL cBIT1 c_0 c==> chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT1 c_0 cF
- (~ F), (x = (vec (NUMERAL _0))), ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 cvec cNUMERAL c_0 c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ cF cF
+ ((a = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- ((~ (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))) ==> F) |- ((((~ (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))) ==> F) ==> ((~ (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))) ==> F)) ==> ((~ (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 cF c==> c==> c==> c~ c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 cF
- (!i. (!j. (((i < j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((real_le ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + i)))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + j))))))) |- (((i < j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((real_le ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + i)))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + j)))))
T c==> ! ! c==> c/\ c< b0 b1 c< b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_le cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b1 c==> c/\ c< f1 f2 c< f2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_le cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 f1 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 f2
- (x = (vec (NUMERAL _0))), ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- ((~ F) ==> F)
T c==> c= f0 cvec cNUMERAL c_0 c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c~ cF cF
- |- ((!x'. (((~ (x' = (vec (NUMERAL _0)))) /\ ((~ (x' = (v (NUMERAL _0)))) /\ (~ (x' = (v (NUMERAL (BIT1 _0))))))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) = ((!x. ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)))
T c= ! c\/ c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b0 * f0 cNUMERAL c_0 c~ c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c\/ ! c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b0 * f0 cNUMERAL c_0 c~ c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1
- (x = (v (NUMERAL (BIT0 (BIT1 _0))))) |- (((~ (_9889051 = (vec (NUMERAL _0)))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889051)) = ((~ (_9889051 = (vec (NUMERAL _0)))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889051)))
T c==> c= f0 * f1 cNUMERAL cBIT0 cBIT1 c_0 c= c\/ c~ c= f2 cvec cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f2 c\/ c~ c= f2 cvec cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f2
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))))), (is_scs_v39 s), (scs_generic v), (scs_basic_v39 s), ((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((BBs_v39 s) v) |- (~ (((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL _0))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY c==> cis_scs_v39 f1 c==> cscs_generic f0 c==> cscs_basic_v39 f1 c==> c= cscs_k_v39 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> cBBs_v39 f1 f0 c~ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (x = (vec (NUMERAL _0))), ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) |- ((~ F) ==> F)
T c==> c= f0 cvec cNUMERAL c_0 c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c~ cF cF
- (!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))), (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))), (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) |- ((~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)))) = (((!x. ((x IN ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) ==> (x IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) ==> (!x. ((x IN ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY))))) ==> (x IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))))))
T c= c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 c==> c/\ ! c==> cIN b0 * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY ! c==> cIN b0 * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY
- |- ((_9889273 = _9889274) ==> ((BIT1 _9889273) = (BIT1 _9889274)))
T c==> c= f0 f1 c= cBIT1 f0 cBIT1 f1
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
+ |- ((((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) ==> F)
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 cF
+ |- ((\z. (!u. ((real_le (real_of_num (NUMERAL _0))) ((((azim x) y) z) u)))) z)
T * / ! creal_le creal_of_num cNUMERAL c_0 cazim f0 f1 b0 b1 f2
+ ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- (((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) /\ F)
T c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 cF
+ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- |- ((x = y) = ((real_of_int x) = (real_of_int y)))
T c= c= f0 f1 c= creal_of_int f0 creal_of_int f1
- ((real_le ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) pi) |- (((real_le ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) pi) = T)
T c==> creal_le cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cpi c= creal_le cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cpi cT
+ (!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) |- (!x. ((~ (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x)) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)))
T c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 ! c\/ c~ caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0
+ (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- (((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0))))) ==> F)
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c\/ c= f1 * f0 cNUMERAL cBIT1 c_0 c\/ c= f1 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= f1 * f0 cNUMERAL c_0 cF
+ ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))), ((x = (v (NUMERAL (BIT1 _0)))) ==> F), (((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) ==> F) |- F
T c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c==> c= f0 * f1 cNUMERAL cBIT1 c_0 cF c==> c==> c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 cF cF
+ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) |- (?v. (?w. (((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT (v INSERT (w INSERT EMPTY)))))))
T c==> cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c? / c? / cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
+ (x = (v (NUMERAL (BIT1 _0)))), ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- (~ ((v (NUMERAL (BIT1 _0))) = (v (NUMERAL (BIT1 _0)))))
T c==> c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c~ c= * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL cBIT1 c_0
+ ((a = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- (((a = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) a) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) a) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c= c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
+ (x = (v (NUMERAL _0))), ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- (((v (NUMERAL _0)) = (v (NUMERAL _0))) ==> F)
T c==> c= f0 * f1 cNUMERAL c_0 c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c= * f1 cNUMERAL c_0 * f1 cNUMERAL c_0 cF
+ (x = (v (NUMERAL _0))), ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) |- (((v (NUMERAL _0)) = (v (NUMERAL _0))) ==> F)
T c==> c= f0 * f1 cNUMERAL c_0 c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c= * f1 cNUMERAL c_0 * f1 cNUMERAL c_0 cF
+ |- (((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) = T)
T c= c= c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 cT
+ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) |- ((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))
T c==> cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY
- (!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))), (~ F), (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))), (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) |- ((~ F) /\ F)
T c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 c==> c~ cF c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ cF cF
- (x = (v (NUMERAL _0))) |- (((~ (_9889052 = (vec (NUMERAL _0)))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889052)) = ((~ (_9889052 = (vec (NUMERAL _0)))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889052)))
T c==> c= f0 * f1 cNUMERAL c_0 c= c\/ c~ c= f2 cvec cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f2 c\/ c~ c= f2 cvec cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f2
- (x = (vec (NUMERAL _0))) |- (((~ (_9889049 = (v (NUMERAL _0)))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889049)) = ((~ (_9889049 = (v (NUMERAL _0)))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889049)))
T c==> c= f0 cvec cNUMERAL c_0 c= c\/ c~ c= f1 * f2 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f2 cNUMERAL c_0 * * part cINSERT * f2 cNUMERAL cBIT1 c_0 part cEMPTY f1 c\/ c~ c= f1 * f2 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f2 cNUMERAL c_0 * * part cINSERT * f2 cNUMERAL cBIT1 c_0 part cEMPTY f1
- (x = (v (NUMERAL _0))) |- ((((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0))))) = (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c= f0 * f1 cNUMERAL c_0 c= chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY * f1 cNUMERAL cBIT0 cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY * f1 cNUMERAL cBIT0 cBIT1 c_0
- (~ F), (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), (x = (v (NUMERAL (BIT1 _0)))), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c= f1 * f0 cNUMERAL cBIT1 c_0 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ cF cF
+ (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))), ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) |- ((~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)) /\ F)
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c\/ c= f1 cvec cNUMERAL c_0 c\/ c= f1 * f0 cNUMERAL cBIT1 c_0 c\/ c= f1 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= f1 * f0 cNUMERAL c_0 c/\ c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 cF
+ |- ((\y. (!z. (!u. ((real_le (real_of_num (NUMERAL _0))) ((((azim x) y) z) u))))) y)
T * / ! ! creal_le creal_of_num cNUMERAL c_0 cazim f0 b0 b1 b2 f1
- (_9889163 = _9889166) |- ((_9889162 = _9889165) ==> ((~ (_9889161 = _9889164)) \/ ((((hull _9889164) _9889165) _9889166) \/ (~ (((hull _9889161) _9889162) _9889163)))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ chull f5 f3 f1 c~ chull f4 f2 f0
- ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (!x. (((real_mul x) a) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
+ ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a) = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) a)) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) a)) (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f0 creal_of_num cNUMERAL c_0
+ (((a = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0))))) |- ((((a = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0))))) /\ F)
T c==> c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c/\ c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 cF
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))))), (is_scs_v39 s), (scs_generic v), (scs_basic_v39 s), ((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), (((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL _0))), ((BBs_v39 s) v) |- ((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ F)
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY c==> cis_scs_v39 f1 c==> cscs_generic f0 c==> cscs_basic_v39 f1 c==> c= cscs_k_v39 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> cBBs_v39 f1 f0 c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ (scs_generic v) |- ((scs_generic v) = T)
T c==> cscs_generic f0 c= cscs_generic f0 cT
+ |- (((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) ==> F)
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 cF
+ |- (((NUMERAL _0) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))
T c= c+ cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
+ (A = T) |- ((((T ==> B) /\ T) ==> B) = (((A ==> B) /\ A) ==> B))
T c==> c= f0 cT c= c==> c/\ c==> cT f1 cT f1 c==> c/\ c==> f0 f1 f0 f1
- (x = (v (NUMERAL (BIT1 _0)))), ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- ((~ F) ==> F)
T c==> c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c~ cF cF
+ ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- (((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))) ==> F)
T c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 cF
+ ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- (!x. (((~ (x = (vec (NUMERAL _0)))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)) /\ (((~ (x = (v (NUMERAL _0)))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)) /\ ((~ (x = (v (NUMERAL (BIT1 _0))))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)))))
T c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 ! c/\ c\/ c~ c= b0 cvec cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 c/\ c\/ c~ c= b0 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 c\/ c~ c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0
- (x = (v (NUMERAL (BIT1 _0)))), ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) |- (~ ((v (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0))))
T c==> c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c~ c= * f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) |- (((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) /\ F)
T c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 cF
+ |- ((~ (~ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((a = (real_of_num (NUMERAL _0))) \/ (~ ((real_le (real_of_num (NUMERAL _0))) a)))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) \/ ((~ (a = (real_of_num (NUMERAL _0)))) /\ ((real_le (real_of_num (NUMERAL _0))) a)))))) ==> F)
T c==> c~ c~ c/\ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 f0 c\/ c= f0 creal_of_num cNUMERAL c_0 c~ creal_le creal_of_num cNUMERAL c_0 f0 c\/ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ c~ c= f0 creal_of_num cNUMERAL c_0 creal_le creal_of_num cNUMERAL c_0 f0 cF
- |- ((_9889271 = _9889272) ==> ((vec _9889271) = (vec _9889272)))
T c==> c= f0 f1 c= cvec f0 cvec f1
- |- ((!x'. ((~ (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x')) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) = ((!x. (~ (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)))
T c= ! c\/ c~ caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c\/ ! c~ caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1
- (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) |- ((~ (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))))
T c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c~ caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0
+ (~ ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))))), (((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) ==> F) |- F
T c==> c~ c= c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 cF cF
- |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- ((!x'. (((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0))))))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x'))) = (((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0))))))) \/ (!x. (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))
T c= ! c\/ c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY b0 c\/ c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 ! chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY b0
+ (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((x = (vec (NUMERAL _0))) ==> F)
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c= f1 cvec cNUMERAL c_0 cF
- ((a = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- (x = (v (NUMERAL (BIT1 _0)))) |- (((~ (_9889050 = (v (NUMERAL (BIT1 _0))))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889050)) = ((~ (_9889050 = (v (NUMERAL (BIT1 _0))))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889050)))
T c==> c= f0 * f1 cNUMERAL cBIT1 c_0 c= c\/ c~ c= f2 * f1 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f2 c\/ c~ c= f2 * f1 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f2
- (_9889162 = _9889165), (_9889163 = _9889166) |- ((_9889161 = _9889164) ==> ((((hull _9889164) _9889165) _9889166) \/ (~ (((hull _9889161) _9889162) _9889163))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ chull f5 f1 f3 c~ chull f4 f0 f2
- (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), (x = (v (NUMERAL _0))), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((~ F) ==> F)
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c= f1 * f0 cNUMERAL c_0 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cF cF
- (_9889173 = _9889175) |- ((_9889174 = _9889176) ==> ((_9889173 INSERT _9889174) = (_9889175 INSERT _9889176)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- |- (((real_ge a) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0)))))
T c= creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0
+ |- ((!x. ((x IN (((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY)) UNION ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) = (x IN ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) = ((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY)) UNION ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) = ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))
T c= ! c= cIN b0 * * part cUNION * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN b0 * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c= * * part cUNION * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY
- ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_ge a) (real_of_num (NUMERAL _0)))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0
+ (is_scs_v39 s) |- ((is_scs_v39 s) = T)
T c==> cis_scs_v39 f0 c= cis_scs_v39 f0 cT
+ ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))
T c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0
+ (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))), ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))) |- (((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))) /\ F)
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c\/ c= f1 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= f1 * f0 cNUMERAL c_0 c/\ c\/ c= f1 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= f1 * f0 cNUMERAL c_0 cF
+ (x = (v (NUMERAL _0))), ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) |- ((x = (v (NUMERAL _0))) /\ F)
T c==> c= f0 * f1 cNUMERAL c_0 c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c= f0 * f1 cNUMERAL c_0 cF
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- ((x = (vec (NUMERAL _0))) ==> F)
T c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c= f0 cvec cNUMERAL c_0 cF
- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- |- ((!x. (P \/ (Q x))) = (P \/ (!x. (Q x))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
+ |- ((F ==> t) = T)
T c= c==> cF f0 cT
+ |- ((?w. (((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT (w INSERT EMPTY)))))) = ((\v. (?w. (((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT (v INSERT (w INSERT EMPTY))))))) (v (NUMERAL _0))))
T c= c? / cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT b0 part cEMPTY * / c? / cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * f0 cNUMERAL c_0
- (_9889161 = _9889164), (_9889162 = _9889165), (_9889163 = _9889166) |- ((((hull _9889164) _9889165) _9889166) \/ (~ (((hull _9889161) _9889162) _9889163)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ chull f1 f3 f5 c~ chull f0 f2 f4
+ ((((a = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0))))) ==> F), ((((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) \/ (((a = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))))) |- F
T c==> c==> c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c\/ c/\ c= f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 cF
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- (T = (((~ (_9889050 = (v (NUMERAL (BIT1 _0))))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889050)) = ((((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889050) \/ (~ (_9889050 = (v (NUMERAL (BIT1 _0))))))))
T c= cT c= c\/ c~ c= f0 * f1 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f0 c\/ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0
+ (!q. (!j. (((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + q))) = (real_of_num (NUMERAL _0))) /\ (((NUMERAL _0) < j) /\ ((j <= q) /\ (q < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ==> (((j < q) ==> (((((azim (vec (NUMERAL _0))) (v ((NUMERAL _0) + j))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT1 _0)))))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = pi)) /\ ((v ((NUMERAL _0) + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) |- (!j. (((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + (NUMERAL (BIT1 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ (((NUMERAL _0) < j) /\ ((j <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ==> (((j < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((azim (vec (NUMERAL _0))) (v ((NUMERAL _0) + j))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT1 _0)))))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = pi)) /\ ((v ((NUMERAL _0) + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))
T c==> ! ! c==> c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ c< cNUMERAL c_0 b1 c/\ c<= b1 b0 c< b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b1 b0 c= cazim cvec cNUMERAL c_0 * f0 c+ cNUMERAL c_0 b1 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cpi cIN * f0 c+ cNUMERAL c_0 b1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY ! c==> c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c< cNUMERAL c_0 b0 c/\ c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= cazim cvec cNUMERAL c_0 * f0 c+ cNUMERAL c_0 b0 * f0 c+ cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 c+ b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cpi cIN * f0 c+ cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY
- (x = (v (NUMERAL (BIT1 _0)))) |- (((~ (_9889050 = (vec (NUMERAL _0)))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889050)) = ((~ (_9889050 = (vec (NUMERAL _0)))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889050)))
T c==> c= f0 * f1 cNUMERAL cBIT1 c_0 c= c\/ c~ c= f2 cvec cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f2 c\/ c~ c= f2 cvec cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f2
- ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((\x. (((real_mul x) a) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))) |- ((~ (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))) /\ F)
T c==> c~ c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 c/\ c~ c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 cF
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
+ ((a = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- ((((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a) = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) a)) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) a)) (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f0 creal_of_num cNUMERAL c_0
+ |- ((\t. (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) t) SUBSET ((hull affine) (((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY)) UNION t)))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))
T * / cSUBSET * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY b0 * * part chull part caffine * * part cUNION * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY b0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY
+ ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))), ((x = (vec (NUMERAL _0))) ==> F), (((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))) ==> F) |- F
T c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c==> c= f0 cvec cNUMERAL c_0 cF c==> c==> c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 cF cF
+ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) a)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f0 creal_of_num cNUMERAL c_0
- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ |- ((((v (NUMERAL _0)) = (v (NUMERAL _0))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL _0)))) = (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL _0))))
T c= c==> c= * f0 cNUMERAL c_0 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL c_0
- (x = (v (NUMERAL (BIT1 _0)))), ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- (~ ((v (NUMERAL (BIT1 _0))) = (v (NUMERAL _0))))
T c==> c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c~ c= * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0
- (x = (v (NUMERAL (BIT1 _0)))) |- (((~ (_9889050 = (v (NUMERAL _0)))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889050)) = ((~ (_9889050 = (v (NUMERAL _0)))) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) _9889050)))
T c==> c= f0 * f1 cNUMERAL cBIT1 c_0 c= c\/ c~ c= f2 * f1 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f2 c\/ c~ c= f2 * f1 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY f2
+ |- ((real_neg ((real_sub a) (real_of_num (NUMERAL _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))
T c= creal_neg creal_sub f0 creal_of_num cNUMERAL c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- ((coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY))))) = ((~ (coplanar ((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))))) ==> F))
T c= ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY cF
- ((((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) ==> B) /\ ((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))), (((((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) ==> B) /\ ((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) ==> B) |- (((((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) ==> B) /\ ((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) /\ B)
T c==> c/\ c==> c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c==> c==> c/\ c==> c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c/\ c/\ c==> c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1
+ (!q. (!j. (((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + q))) = (real_of_num (NUMERAL _0))) /\ (((NUMERAL _0) < j) /\ ((j <= q) /\ (q < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ==> (((j < q) ==> (((((azim (vec (NUMERAL _0))) (v ((NUMERAL _0) + j))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT1 _0)))))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = pi)) /\ ((v ((NUMERAL _0) + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) |- (((!j. (((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + (NUMERAL (BIT1 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ (((NUMERAL _0) < j) /\ ((j <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ==> (((j < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((azim (vec (NUMERAL _0))) (v ((NUMERAL _0) + j))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT1 _0)))))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = pi)) /\ ((v ((NUMERAL _0) + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) ==> ((\j. (((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + (NUMERAL (BIT1 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ (((NUMERAL _0) < j) /\ ((j <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ==> (((j < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((azim (vec (NUMERAL _0))) (v ((NUMERAL _0) + j))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT1 _0)))))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = pi)) /\ ((v ((NUMERAL _0) + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((\j. (((((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + (NUMERAL (BIT1 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ (((NUMERAL _0) < j) /\ ((j <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ==> (((j < (NUMERAL (BIT1 (BIT1 _0)))) ==> (((((azim (vec (NUMERAL _0))) (v ((NUMERAL _0) + j))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT1 _0)))))) (v ((NUMERAL _0) + (j + (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = pi)) /\ ((v ((NUMERAL _0) + j)) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))))
T c==> ! ! c==> c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ c< cNUMERAL c_0 b1 c/\ c<= b1 b0 c< b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b1 b0 c= cazim cvec cNUMERAL c_0 * f0 c+ cNUMERAL c_0 b1 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 c+ b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cpi cIN * f0 c+ cNUMERAL c_0 b1 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c= c==> ! c==> c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c< cNUMERAL c_0 b0 c/\ c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= cazim cvec cNUMERAL c_0 * f0 c+ cNUMERAL c_0 b0 * f0 c+ cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 c+ b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cpi cIN * f0 c+ cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * / c==> c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c< cNUMERAL c_0 b0 c/\ c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= cazim cvec cNUMERAL c_0 * f0 c+ cNUMERAL c_0 b0 * f0 c+ cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 c+ b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cpi cIN * f0 c+ cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 * / c==> c/\ c= cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c< cNUMERAL c_0 b0 c/\ c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c==> c< b0 cNUMERAL cBIT1 cBIT1 c_0 c= cazim cvec cNUMERAL c_0 * f0 c+ cNUMERAL c_0 b0 * f0 c+ cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 c+ b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cpi cIN * f0 c+ cNUMERAL c_0 b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0
+ (x = (v (NUMERAL (BIT1 _0)))), ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- (((v (NUMERAL (BIT1 _0))) = (v (NUMERAL (BIT1 _0)))) ==> F)
T c==> c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c= * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL cBIT1 c_0 cF
- (!i. (!j. (((i < j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((real_le ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + i)))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + j))))))) |- ((\i. (!j. (((i < j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((real_le ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + i)))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + j))))))) i)
T c==> ! ! c==> c/\ c< b0 b1 c< b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_le cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b1 * / ! c==> c/\ c< b0 b1 c< b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_le cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b1 f1
+ (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))), (((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))) ==> F), ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0))))) |- F
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c==> c\/ c= f1 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= f1 * f0 cNUMERAL c_0 cF c==> c\/ c= f1 * f0 cNUMERAL cBIT1 c_0 c\/ c= f1 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= f1 * f0 cNUMERAL c_0 cF
- |- ((~ (_9889277 = _9889278)) \/ ((v _9889277) = (v _9889278)))
T c\/ c~ c= f0 f1 c= * f2 f0 * f2 f1
+ |- (~ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((a = (real_of_num (NUMERAL _0))) \/ (~ ((real_le (real_of_num (NUMERAL _0))) a)))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) \/ ((~ (a = (real_of_num (NUMERAL _0)))) /\ ((real_le (real_of_num (NUMERAL _0))) a)))))
T c~ c/\ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 f0 c\/ c= f0 creal_of_num cNUMERAL c_0 c~ creal_le creal_of_num cNUMERAL c_0 f0 c\/ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ c~ c= f0 creal_of_num cNUMERAL c_0 creal_le creal_of_num cNUMERAL c_0 f0
- |- (((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F) ==> ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F))
T c==> c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF
+ (x = (vec (NUMERAL _0))) |- ((~ (x = (vec (NUMERAL _0)))) = (~ ((vec (NUMERAL _0)) = (vec (NUMERAL _0)))))
T c==> c= f0 cvec cNUMERAL c_0 c= c~ c= f0 cvec cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvec cNUMERAL c_0
- (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL _0)))), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL _0)))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL _0))))
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL c_0 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL c_0
- (~ ((vec (NUMERAL _0)) = (vec (NUMERAL _0)))) |- ((~ ((vec (NUMERAL _0)) = (vec (NUMERAL _0)))) /\ ((vec (NUMERAL _0)) = (vec (NUMERAL _0))))
T c==> c~ c= cvec cNUMERAL c_0 cvec cNUMERAL c_0 c/\ c~ c= cvec cNUMERAL c_0 cvec cNUMERAL c_0 c= cvec cNUMERAL c_0 cvec cNUMERAL c_0
- |- (((((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F) ==> ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F)) ==> (((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F) ==> ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F))) = (((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F) ==> ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F)))
T c= c==> c==> c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c==> c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c==> c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (A = F) |- ((A = F) /\ (((A ==> B) /\ A) ==> B))
T c==> c= f0 cF c/\ c= f0 cF c==> c/\ c==> f0 f1 f0 f1
- (!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))), (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))), (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) |- F
T c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF
+ ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) |- ((x = (v (NUMERAL (BIT1 _0)))) ==> F)
T c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c= f0 * f1 cNUMERAL cBIT1 c_0 cF
+ ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) |- (~ (x = (v (NUMERAL (BIT1 _0)))))
T c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0
- (!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))), (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))), (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) |- ((~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) /\ F)
T c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF
+ ((a = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) a) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
- |- ((!v. (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))) = (!v. ((~ (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))) ==> F)))
T c= ! c==> c/\ ! c==> c\/ c= b1 cvec cNUMERAL c_0 c\/ c= b1 * b0 cNUMERAL c_0 c= b1 * b0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY b1 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY * b0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b1 cvec cNUMERAL c_0 c\/ c= b1 * b0 cNUMERAL cBIT1 c_0 c\/ c= b1 * b0 cNUMERAL cBIT0 cBIT1 c_0 c= b1 * b0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY b1 ! c==> c~ c==> c/\ ! c==> c\/ c= b1 cvec cNUMERAL c_0 c\/ c= b1 * b0 cNUMERAL c_0 c= b1 * b0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY b1 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY * b0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b1 cvec cNUMERAL c_0 c\/ c= b1 * b0 cNUMERAL cBIT1 c_0 c\/ c= b1 * b0 cNUMERAL cBIT0 cBIT1 c_0 c= b1 * b0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY b1 cF
+ |- (((NUMERAL (BIT1 (BIT1 _0))) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = T)
T c= c< cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cT
- (_9889271 = _9889272) |- ((_9889271 = _9889272) /\ ((vec _9889271) = (vec _9889272)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cvec f0 cvec f1
+ |- ((((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) ==> ((!x. ((x IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) ==> (x IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) ==> ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) = (((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) ==> ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) ==> ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))))
T c= c==> cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c==> ! c==> cIN b0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c==> cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c==> cSUBSET * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY
+ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) |- ((((((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) ==> (((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) /\ ((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) ==> (((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) = (((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))
T c==> cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c= c==> c/\ c==> c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY
+ (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))), ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0))))) |- (((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0))))) /\ F)
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c\/ c= f1 * f0 cNUMERAL cBIT1 c_0 c\/ c= f1 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= f1 * f0 cNUMERAL c_0 c/\ c\/ c= f1 * f0 cNUMERAL cBIT1 c_0 c\/ c= f1 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= f1 * f0 cNUMERAL c_0 cF
+ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) |- (?u. (?v. (?w. (((vec (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT ((v (NUMERAL (BIT0 (BIT1 _0)))) INSERT ((v (NUMERAL _0)) INSERT EMPTY)))) SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))
T c==> cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c? / c? / c? / cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 * * part cINSERT * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ |- (((!P. (!s. (s SUBSET ((hull P) s)))) ==> ((\P. (!s. (s SUBSET ((hull P) s)))) P)) = ((\P. (!s. (s SUBSET ((hull P) s)))) P))
T c= c==> ! ! cSUBSET b1 * * part chull b0 b1 * / ! cSUBSET b1 * * part chull b0 b1 f0 * / ! cSUBSET b1 * * part chull b0 b1 f0
- (~ F), (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), (x = (v (NUMERAL _0))), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c= f1 * f0 cNUMERAL c_0 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ cF cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- |- ((!x'. ((~ (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x)) \/ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x'))) = ((~ (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x)) \/ (!x. (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))
T c= ! c\/ c~ caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 c\/ c~ caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 ! chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0
- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- |- ((((~ (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))) ==> F) ==> ((~ (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))) ==> F)) = ((~ (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))) ==> F))
T c= c==> c==> c~ c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 cF
- ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((a = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) a) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) a) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- (!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))), (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) |- ((~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL _0)))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL _0))))
T c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL c_0
- (x = (v (NUMERAL _0))) |- ((~ (x = (vec (NUMERAL _0)))) = (~ ((v (NUMERAL _0)) = (vec (NUMERAL _0)))))
T c==> c= f0 * f1 cNUMERAL c_0 c= c~ c= f0 cvec cNUMERAL c_0 c~ c= * f1 cNUMERAL c_0 cvec cNUMERAL c_0
- (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> F)
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF
- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0
- |- (((((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F) ==> ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F)) ==> (((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F) ==> ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F))) = (((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F) ==> ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F)))
T c= c==> c==> c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- main_nonlinear_terminal_v11 |- (main_nonlinear_terminal_v11 = T)
T c==> cmain_nonlinear_terminal_v11 c= cmain_nonlinear_terminal_v11 cT
- |- ((!x. (P x)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- ((~ ((vec (NUMERAL _0)) = (vec (NUMERAL _0)))) ==> ((vec (NUMERAL _0)) = (vec (NUMERAL _0))))
T c==> c~ c= cvec cNUMERAL c_0 cvec cNUMERAL c_0 c= cvec cNUMERAL c_0 cvec cNUMERAL c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F) |- ((((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F) ==> ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F)) ==> ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F))
T c==> c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c==> c==> c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF
- |- ((\v. ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F)) v)
T * / c==> c~ ! c= c\/ c\/ c= b1 cvec cNUMERAL c_0 c= b1 * b0 cNUMERAL c_0 c= b1 * b0 cNUMERAL cBIT1 c_0 c\/ c= b1 cvec cNUMERAL c_0 c\/ c= b1 * b0 cNUMERAL c_0 c= b1 * b0 cNUMERAL cBIT1 c_0 cF f0
- (x = (v (NUMERAL (BIT1 _0)))), ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) |- (~ ((v (NUMERAL (BIT1 _0))) = (v (NUMERAL _0))))
T c==> c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c~ c= * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0
- ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_ge a) (real_of_num (NUMERAL _0)))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (_9889167 = _9889168) |- ((_9889167 = _9889168) /\ ((BIT0 _9889167) = (BIT0 _9889168)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- |- (((!v. ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F)) ==> ((\v. ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F)) v)) = ((\v. ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F)) v))
T c= c==> ! c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 part cEMPTY * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY * b0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 part cEMPTY * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY b1 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY b1 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY * b0 cNUMERAL cBIT0 cBIT1 c_0 cF * / c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 part cEMPTY * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY * b0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 part cEMPTY * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY b1 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY b1 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY * b0 cNUMERAL cBIT0 cBIT1 c_0 cF f0 * / c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 part cEMPTY * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY * b0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 part cEMPTY * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY b1 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY b1 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY * b0 cNUMERAL cBIT0 cBIT1 c_0 cF f0
- (_9889173 = _9889175) |- ((_9889173 = _9889175) /\ ((~ (_9889174 = _9889176)) \/ ((_9889173 INSERT _9889174) = (_9889175 INSERT _9889176))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- |- (((real_gt a) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))))
T c= creal_gt f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0
- (x = (v (NUMERAL _0))), ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- (~ ((v (NUMERAL _0)) = (vec (NUMERAL _0))))
T c==> c= f0 * f1 cNUMERAL c_0 c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c~ c= * f1 cNUMERAL c_0 cvec cNUMERAL c_0
- (x = (vec (NUMERAL _0))) |- ((~ (x = (v (NUMERAL (BIT1 _0))))) = (~ ((vec (NUMERAL _0)) = (v (NUMERAL (BIT1 _0))))))
T c==> c= f0 cvec cNUMERAL c_0 c= c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c~ c= cvec cNUMERAL c_0 * f1 cNUMERAL cBIT1 c_0
- (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0
- (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), (x = (v (NUMERAL (BIT0 (BIT1 _0))))), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((~ F) ==> F)
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c= f1 * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cF cF
- (x = (v (NUMERAL (BIT1 _0)))), ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- (~ ((v (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0))))
T c==> c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c~ c= * f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((real_ge a) (real_of_num (NUMERAL _0))) = (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- |- ((~ (_9889167 = _9889168)) \/ ((BIT0 _9889167) = (BIT0 _9889168)))
T c\/ c~ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- (~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) |- F
T c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF
- (x = (v (NUMERAL _0))), ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- (~ ((v (NUMERAL _0)) = (v (NUMERAL (BIT1 _0)))))
T c==> c= f0 * f1 cNUMERAL c_0 c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c~ c= * f1 cNUMERAL c_0 * f1 cNUMERAL cBIT1 c_0
- (x = (v (NUMERAL (BIT0 (BIT1 _0))))) |- ((((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0))))) = (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c= f0 * f1 cNUMERAL cBIT0 cBIT1 c_0 c= chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY * f1 cNUMERAL cBIT0 cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL c_0 * * part cINSERT * f1 cNUMERAL cBIT1 c_0 part cEMPTY * f1 cNUMERAL cBIT0 cBIT1 c_0
- |- ((((((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) ==> B) /\ ((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) ==> B) ==> (((((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) ==> B) /\ ((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) ==> B))
T c==> c==> c/\ c==> c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c/\ c==> c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1
- |- (((\j. (f j)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (((!v. ((~ (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))) ==> F)) ==> ((\v. ((~ (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))) ==> F)) v)) = ((\v. ((~ (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))) ==> F)) v))
T c= c==> ! c==> c~ c==> c/\ ! c==> c\/ c= b1 cvec cNUMERAL c_0 c\/ c= b1 * b0 cNUMERAL c_0 c= b1 * b0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY b1 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY * b0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b1 cvec cNUMERAL c_0 c\/ c= b1 * b0 cNUMERAL cBIT1 c_0 c\/ c= b1 * b0 cNUMERAL cBIT0 cBIT1 c_0 c= b1 * b0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY b1 cF * / c==> c~ c==> c/\ ! c==> c\/ c= b1 cvec cNUMERAL c_0 c\/ c= b1 * b0 cNUMERAL c_0 c= b1 * b0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY b1 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY * b0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b1 cvec cNUMERAL c_0 c\/ c= b1 * b0 cNUMERAL cBIT1 c_0 c\/ c= b1 * b0 cNUMERAL cBIT0 cBIT1 c_0 c= b1 * b0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY b1 cF f0 * / c==> c~ c==> c/\ ! c==> c\/ c= b1 cvec cNUMERAL c_0 c\/ c= b1 * b0 cNUMERAL c_0 c= b1 * b0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY b1 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY * b0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b1 cvec cNUMERAL c_0 c\/ c= b1 * b0 cNUMERAL cBIT1 c_0 c\/ c= b1 * b0 cNUMERAL cBIT0 cBIT1 c_0 c= b1 * b0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY b1 cF f0
- ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0
- (x = (v (NUMERAL (BIT1 _0)))) |- (F = F)
T c==> c= f0 * f1 cNUMERAL cBIT1 c_0 c= cF cF
- |- ((((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)))) = T)
T c= c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 * f0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 cT
- (~ F), (x = (vec (NUMERAL _0))), ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 cvec cNUMERAL c_0 c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ cF cF
- (~ ((v (NUMERAL _0)) = (v (NUMERAL _0)))) |- ((~ ((v (NUMERAL _0)) = (v (NUMERAL _0)))) /\ ((v (NUMERAL _0)) = (v (NUMERAL _0))))
T c==> c~ c= * f0 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c~ c= * f0 cNUMERAL c_0 * f0 cNUMERAL c_0 c= * f0 cNUMERAL c_0 * f0 cNUMERAL c_0
- (((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F) ==> ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F)) |- ((((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F) ==> ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F)) /\ (((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F) ==> ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F)))
T c==> c==> c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c/\ c==> c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c==> c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- (((real_gt a) (real_of_num (NUMERAL _0))) = (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c= creal_gt f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0
- |- ((~ (_9889271 = _9889272)) \/ ((vec _9889271) = (vec _9889272)))
T c\/ c~ c= f0 f1 c= cvec f0 cvec f1
- (x = (vec (NUMERAL _0))) |- ((~ (x = (v (NUMERAL _0)))) = (~ ((vec (NUMERAL _0)) = (v (NUMERAL _0)))))
T c==> c= f0 cvec cNUMERAL c_0 c= c~ c= f0 * f1 cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 * f1 cNUMERAL c_0
- |- ((\v. ((~ (((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL (BIT1 _0)))) \/ ((x = (v (NUMERAL (BIT0 (BIT1 _0))))) \/ (x = (v (NUMERAL _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))))) ==> F)) v)
T * / c==> c~ c==> c/\ ! c==> c\/ c= b1 cvec cNUMERAL c_0 c\/ c= b1 * b0 cNUMERAL c_0 c= b1 * b0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY b1 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY * b0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ c= b1 cvec cNUMERAL c_0 c\/ c= b1 * b0 cNUMERAL cBIT1 c_0 c\/ c= b1 * b0 cNUMERAL cBIT0 cBIT1 c_0 c= b1 * b0 cNUMERAL c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL c_0 * * part cINSERT * b0 cNUMERAL cBIT1 c_0 part cEMPTY b1 cF f0
- (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), (x = (v (NUMERAL (BIT1 _0)))), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((~ F) ==> F)
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c= f1 * f0 cNUMERAL cBIT1 c_0 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cF cF
- (!i. (!j. (((i < j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((real_le ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + i)))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + j))))))) |- (((!j. (((i < j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((real_le ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + i)))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + j)))))) ==> ((\j. (((i < j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((real_le ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + i)))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + j)))))) j)) = ((\j. (((i < j) /\ (j < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((real_le ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + i)))) ((((azim (vec (NUMERAL _0))) (v (NUMERAL _0))) (v (NUMERAL (BIT1 _0)))) (v ((NUMERAL _0) + j)))))) j))
T c==> ! ! c==> c/\ c< b0 b1 c< b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_le cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b1 c= c==> ! c==> c/\ c< f1 b0 c< b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_le cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 f1 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 * / c==> c/\ c< f1 b0 c< b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_le cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 f1 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 f2 * / c==> c/\ c< f1 b0 c< b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_le cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 f1 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 b0 f2
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- (~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) |- ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) /\ F)
T c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (_9889163 = _9889166) |- ((_9889163 = _9889166) /\ ((~ (_9889162 = _9889165)) \/ ((~ (_9889161 = _9889164)) \/ ((((hull _9889164) _9889165) _9889166) \/ (~ (((hull _9889161) _9889162) _9889163))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ chull f5 f3 f1 c~ chull f4 f2 f0
- (~ F), (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), (x = (v (NUMERAL (BIT0 (BIT1 _0))))), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c= f1 * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ cF cF
- |- ((!v. (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) = (!v. ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F)))
T c= ! ! c= c\/ c\/ c= b1 cvec cNUMERAL c_0 c= b1 * b0 cNUMERAL c_0 c= b1 * b0 cNUMERAL cBIT1 c_0 c\/ c= b1 cvec cNUMERAL c_0 c\/ c= b1 * b0 cNUMERAL c_0 c= b1 * b0 cNUMERAL cBIT1 c_0 ! c==> c~ ! c= c\/ c\/ c= b1 cvec cNUMERAL c_0 c= b1 * b0 cNUMERAL c_0 c= b1 * b0 cNUMERAL cBIT1 c_0 c\/ c= b1 cvec cNUMERAL c_0 c\/ c= b1 * b0 cNUMERAL c_0 c= b1 * b0 cNUMERAL cBIT1 c_0 cF
- ((((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) ==> B) /\ ((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))), (((((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) ==> B) /\ ((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) ==> B) |- ((((((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))))) ==> B) /\ ((((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))) /\ ((v (NUMERAL (BIT0 (BIT1 _0)))) IN ((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY))))))) ==> B) /\ B)
T c==> c/\ c==> c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY c==> c==> c/\ c==> c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c/\ c==> c/\ c==> c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY cIN * f0 cNUMERAL cBIT0 cBIT1 c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 f1
- (x = (vec (NUMERAL _0))), ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) |- (~ ((vec (NUMERAL _0)) = (v (NUMERAL (BIT1 _0)))))
T c==> c= f0 cvec cNUMERAL c_0 c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c~ c= cvec cNUMERAL c_0 * f1 cNUMERAL cBIT1 c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_9889161 = _9889164), (_9889162 = _9889165), (_9889163 = _9889166) |- ((_9889161 = _9889164) /\ ((((hull _9889164) _9889165) _9889166) \/ (~ (((hull _9889161) _9889162) _9889163))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f0 f1 c\/ chull f1 f3 f5 c~ chull f0 f2 f4
- (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT1 _0))))), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT1 _0))))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT1 _0)))))
T c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT1 c_0 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT1 c_0
- (x = (v (NUMERAL _0))), ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) /\ ((~ (x = (vec (NUMERAL _0)))) /\ ((~ (x = (v (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))))) |- (~ ((v (NUMERAL _0)) = (v (NUMERAL (BIT1 _0)))))
T c==> c= f0 * f1 cNUMERAL c_0 c==> c/\ c\/ c\/ c= f0 cvec cNUMERAL c_0 c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c~ c= * f1 cNUMERAL c_0 * f1 cNUMERAL cBIT1 c_0
- ((a = (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((!x. (((real_mul x) a) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) a) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\x. (((real_mul x) a) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0
- ((a = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0)))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- (~ F), (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x)), (x = (vec (NUMERAL _0))), ((!x. (((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0)))))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) /\ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY f1 c==> c= f1 cvec cNUMERAL c_0 c==> c/\ ! c==> c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ cF cF
- (x = (v (NUMERAL _0))), ((((~ (x = (vec (NUMERAL _0)))) /\ (~ (x = (v (NUMERAL _0))))) /\ (~ (x = (v (NUMERAL (BIT1 _0)))))) /\ ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))) |- ((~ F) ==> F)
T c==> c= f0 * f1 cNUMERAL c_0 c==> c/\ c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL c_0 c~ c= f0 * f1 cNUMERAL cBIT1 c_0 c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f0 * f1 cNUMERAL c_0 c= f0 * f1 cNUMERAL cBIT1 c_0 c==> c~ cF cF
- |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
- (!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))), (~ (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))), (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) |- ((~ F) ==> F)
T c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cF cF
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_9889162 = _9889165), (_9889163 = _9889166) |- ((~ (_9889161 = _9889164)) \/ ((((hull _9889164) _9889165) _9889166) \/ (~ (((hull _9889161) _9889162) _9889163))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ chull f5 f1 f3 c~ chull f4 f0 f2
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- (~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) |- ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) /\ F)
T c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c/\ c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF
- ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F) |- ((((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F) ==> ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F)) ==> ((~ ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) ==> ((!x. ((((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) x) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) x))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (v (NUMERAL (BIT0 (BIT1 _0)))))))) ==> F))
T c==> c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c==> c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c~ c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY b0 chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 cF
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL _0))) /\ (((real_gt a) (real_of_num (NUMERAL _0))) /\ ((real_ge a) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- |- ((((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F) ==> ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F)) = ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F))
T c= c==> c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF
- ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F), (((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F) ==> ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F)) |- (((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F) /\ ((~ (!x. ((((x = (vec (NUMERAL _0))) \/ (x = (v (NUMERAL _0)))) \/ (x = (v (NUMERAL (BIT1 _0))))) = ((x = (vec (NUMERAL _0))) \/ ((x = (v (NUMERAL _0))) \/ (x = (v (NUMERAL (BIT1 _0))))))))) ==> F))
T c==> c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c==> c==> c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c/\ c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF c==> c~ ! c= c\/ c\/ c= b0 cvec cNUMERAL c_0 c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b0 * f0 cNUMERAL c_0 c= b0 * f0 cNUMERAL cBIT1 c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0)))))), (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))) |- ((~ (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((aff_gt ((vec (NUMERAL _0)) INSERT ((v (NUMERAL _0)) INSERT EMPTY))) ((v (NUMERAL (BIT1 _0))) INSERT EMPTY)) (v (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c~ caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c==> caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0 caff_gt * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT * f0 cNUMERAL c_0 part cEMPTY * * part cINSERT * f0 cNUMERAL cBIT1 c_0 part cEMPTY * f0 cNUMERAL cBIT0 cBIT1 c_0
