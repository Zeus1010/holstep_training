N Auqtzyz.lemma_atom_tail
C |- (!H. (!x. (!y. ((y IN ((face H) x)) ==> (y = ((face_map H) ((inv_loop_map ((loop_of_face H) x)) y)))))))
T c==> cIN f0 * * part cface f1 f2 c= f0 cface_map f1 cinv_loop_map cloop_of_face f1 f2 f0
D TRUTH
A |- T
T cT
D Hypermap.lemma_inverse_on_loop
A |- (!L. (((loop_map L) = (inverse (inv_loop_map L))) /\ ((inv_loop_map L) = (inverse (loop_map L)))))
T c/\ c= * part cloop_map f0 * part cinverse * part cinv_loop_map f0 c= * part cinv_loop_map f0 * part cinverse * part cloop_map f0
D Hypermap.loop_of_face_rep
A |- (!H. (!x. (((dart_of_loop ((loop_of_face H) x)) = ((face H) x)) /\ ((loop_map ((loop_of_face H) x)) = ((res (face_map H)) ((face H) x))))))
T c/\ c= * part cdart_of_loop cloop_of_face f0 f1 * * part cface f0 f1 c= * part cloop_map cloop_of_face f0 f1 * * part cres * part cface_map f0 * * part cface f0 f1
D Hypermap.lemma_inverse_res
A |- (!H. (!x. (!y. ((y IN ((face H) x)) ==> (((inverse ((res (face_map H)) ((face H) x))) y) = ((inverse (face_map H)) y))))))
T c==> cIN f0 * * part cface f1 f2 c= cinverse * * part cres * part cface_map f1 * * part cface f1 f2 f0 cinverse * part cface_map f1 f0
D Lvducxu.HYP_MAPS_INVS
A |- ((((edge_map H) ((inverse (edge_map H)) x)) = x) /\ ((((inverse (edge_map H)) ((edge_map H) x)) = x) /\ ((((face_map H) ((inverse (face_map H)) x)) = x) /\ ((((inverse (face_map H)) ((face_map H) x)) = x) /\ ((((node_map H) ((inverse (node_map H)) x)) = x) /\ (((inverse (node_map H)) ((node_map H) x)) = x))))))
T c/\ c= cedge_map f0 cinverse * part cedge_map f0 f1 f1 c/\ c= cinverse * part cedge_map f0 cedge_map f0 f1 f1 c/\ c= cface_map f0 cinverse * part cface_map f0 f1 f1 c/\ c= cinverse * part cface_map f0 cface_map f0 f1 f1 c/\ c= cnode_map f0 cinverse * part cnode_map f0 f1 f1 c= cinverse * part cnode_map f0 cnode_map f0 f1 f1
+ (y IN ((face H) x)) |- (y = ((face_map H) ((inverse (loop_map ((loop_of_face H) x))) y)))
T c==> cIN f0 * * part cface f1 f2 c= f0 cface_map f1 cinverse * part cloop_map cloop_of_face f1 f2 f0
+ (y IN ((face H) x)) |- ((y IN ((face H) x)) /\ (y = ((face_map H) ((inv_loop_map ((loop_of_face H) x)) y))))
T c==> cIN f0 * * part cface f1 f2 c/\ cIN f0 * * part cface f1 f2 c= f0 cface_map f1 cinv_loop_map cloop_of_face f1 f2 f0
+ |- (((!H. (!x. (!y. ((y IN ((face H) x)) ==> (((inverse ((res (face_map H)) ((face H) x))) y) = ((inverse (face_map H)) y)))))) ==> ((\H. (!x. (!y. ((y IN ((face H) x)) ==> (((inverse ((res (face_map H)) ((face H) x))) y) = ((inverse (face_map H)) y)))))) H)) = ((\H. (!x. (!y. ((y IN ((face H) x)) ==> (((inverse ((res (face_map H)) ((face H) x))) y) = ((inverse (face_map H)) y)))))) H))
T c= c==> ! ! ! c==> cIN b2 * * part cface b0 b1 c= cinverse * * part cres * part cface_map b0 * * part cface b0 b1 b2 cinverse * part cface_map b0 b2 * / ! ! c==> cIN b2 * * part cface b0 b1 c= cinverse * * part cres * part cface_map b0 * * part cface b0 b1 b2 cinverse * part cface_map b0 b2 f0 * / ! ! c==> cIN b2 * * part cface b0 b1 c= cinverse * * part cres * part cface_map b0 * * part cface b0 b1 b2 cinverse * part cface_map b0 b2 f0
+ |- ((\H. (!x. (((dart_of_loop ((loop_of_face H) x)) = ((face H) x)) /\ ((loop_map ((loop_of_face H) x)) = ((res (face_map H)) ((face H) x)))))) H)
T * / ! c/\ c= * part cdart_of_loop cloop_of_face b0 b1 * * part cface b0 b1 c= * part cloop_map cloop_of_face b0 b1 * * part cres * part cface_map b0 * * part cface b0 b1 f0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((((inverse (edge_map H)) ((edge_map H) x)) = x) /\ ((((face_map H) ((inverse (face_map H)) x)) = x) /\ ((((inverse (face_map H)) ((face_map H) x)) = x) /\ ((((node_map H) ((inverse (node_map H)) x)) = x) /\ (((inverse (node_map H)) ((node_map H) x)) = x)))))
T c/\ c= cinverse * part cedge_map f0 cedge_map f0 f1 f1 c/\ c= cface_map f0 cinverse * part cface_map f0 f1 f1 c/\ c= cinverse * part cface_map f0 cface_map f0 f1 f1 c/\ c= cnode_map f0 cinverse * part cnode_map f0 f1 f1 c= cinverse * part cnode_map f0 cnode_map f0 f1 f1
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- |- ((!y. t) = t)
T c= ! f0 f0
- |- ((loop_map L) = (inverse (inv_loop_map L)))
T c= * part cloop_map f0 * part cinverse * part cinv_loop_map f0
+ |- ((((face_map H) ((inverse (face_map H)) x)) = x) /\ ((((inverse (face_map H)) ((face_map H) x)) = x) /\ ((((node_map H) ((inverse (node_map H)) x)) = x) /\ (((inverse (node_map H)) ((node_map H) x)) = x))))
T c/\ c= cface_map f0 cinverse * part cface_map f0 f1 f1 c/\ c= cinverse * part cface_map f0 cface_map f0 f1 f1 c/\ c= cnode_map f0 cinverse * part cnode_map f0 f1 f1 c= cinverse * part cnode_map f0 cnode_map f0 f1 f1
+ |- (y = ((face_map H) ((inverse (face_map H)) y)))
T c= f0 cface_map f1 cinverse * part cface_map f1 f0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (((inverse ((res (face_map H)) ((face H) x))) y) = ((inverse (face_map H)) y)) |- ((y = ((face_map H) ((inverse (face_map H)) y))) = (y = ((face_map H) ((inverse ((res (face_map H)) ((face H) x))) y))))
T c==> c= cinverse * * part cres * part cface_map f0 * * part cface f0 f1 f2 cinverse * part cface_map f0 f2 c= c= f2 cface_map f0 cinverse * part cface_map f0 f2 c= f2 cface_map f0 cinverse * * part cres * part cface_map f0 * * part cface f0 f1 f2
+ |- ((\x. (((dart_of_loop ((loop_of_face H) x)) = ((face H) x)) /\ ((loop_map ((loop_of_face H) x)) = ((res (face_map H)) ((face H) x))))) x)
T * / c/\ c= * part cdart_of_loop cloop_of_face f0 b0 * * part cface f0 b0 c= * part cloop_map cloop_of_face f0 b0 * * part cres * part cface_map f0 * * part cface f0 b0 f1
+ (y IN ((face H) x)) |- (((y IN ((face H) x)) ==> (((inverse ((res (face_map H)) ((face H) x))) y) = ((inverse (face_map H)) y))) ==> (y = ((face_map H) ((inverse ((res (face_map H)) ((face H) x))) y))))
T c==> cIN f0 * * part cface f1 f2 c==> c==> cIN f0 * * part cface f1 f2 c= cinverse * * part cres * part cface_map f1 * * part cface f1 f2 f0 cinverse * part cface_map f1 f0 c= f0 cface_map f1 cinverse * * part cres * part cface_map f1 * * part cface f1 f2 f0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((((inverse (face_map H)) ((face_map H) x)) = x) /\ ((((node_map H) ((inverse (node_map H)) x)) = x) /\ (((inverse (node_map H)) ((node_map H) x)) = x)))
T c/\ c= cinverse * part cface_map f0 cface_map f0 f1 f1 c/\ c= cnode_map f0 cinverse * part cnode_map f0 f1 f1 c= cinverse * part cnode_map f0 cnode_map f0 f1 f1
- |- (((node_map H) ((inverse (node_map H)) x)) = x)
T c= cnode_map f0 cinverse * part cnode_map f0 f1 f1
- |- (((inverse (face_map H)) ((face_map H) x)) = x)
T c= cinverse * part cface_map f0 cface_map f0 f1 f1
- |- (((inverse (edge_map H)) ((edge_map H) x)) = x)
T c= cinverse * part cedge_map f0 cedge_map f0 f1 f1
- |- ((dart_of_loop ((loop_of_face H) x)) = ((face H) x))
T c= * part cdart_of_loop cloop_of_face f0 f1 * * part cface f0 f1
- |- (((edge_map H) ((inverse (edge_map H)) x)) = x)
T c= cedge_map f0 cinverse * part cedge_map f0 f1 f1
- |- (((inverse (node_map H)) ((node_map H) x)) = x)
T c= cinverse * part cnode_map f0 cnode_map f0 f1 f1
- |- ((((node_map H) ((inverse (node_map H)) x)) = x) /\ (((inverse (node_map H)) ((node_map H) x)) = x))
T c/\ c= cnode_map f0 cinverse * part cnode_map f0 f1 f1 c= cinverse * part cnode_map f0 cnode_map f0 f1 f1
