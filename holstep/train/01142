N Reduction4.filter_issome_dest_triple_full
C |- (!L. (!N. (!r. (!x. (!k. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((transform_count L) N) r) x) = k) /\ ((?w. ((((prev_el ((core L) r)) w) , w) = x)) /\ (is_restricted (hypermap_of_list L)))))))) ==> (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cis_restricted chypermap_of_list f0 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f2 cSND f3 ccore_triple_v4 f0 f1 f2 f3 ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D o_THM
A |- (!f. (!g. (!x. (((f o g) x) = (f (g x))))))
T c= co f0 f1 f2 * f0 * f1 f2
D MAP
A |- ((!f. (((MAP f) NIL) = NIL)) /\ (!f. (!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))))))
T c/\ ! c= cMAP b0 cNIL cNIL ! ! ! c= cMAP b0 cCONS b1 b2 cCONS * b0 b1 cMAP b0 b2
D CONS_11
A |- (!h1. (!h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2)))))))
T c= c= cCONS f0 f1 cCONS f2 f3 c/\ c= f0 f2 c= f1 f3
D MAP_o
A |- (!f. (!g. (!l. (((MAP (g o f)) l) = ((MAP g) ((MAP f) l))))))
T c= cMAP * * part co f0 f1 f2 cMAP f0 cMAP f1 f2
D MAP_EQ
A |- (!f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l))))))
T c==> cALL / c= * f0 b0 * f1 b0 f2 c= cMAP f0 f2 cMAP f1 f2
D MAP_EQ_DEGEN
A |- (!l. (!f. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l))))
T c==> cALL / c= * f0 b0 b0 f1 c= cMAP f0 f1 f1
D Ssrbool.isSome
A |- (((isSome NONE) = F) /\ (!x. ((isSome (SOME x)) = T)))
T c/\ c= cisSome cNONE cF ! c= cisSome cSOME b0 cT
D Seq.cats0
A |- (!s. (((cat s) NIL) = s))
T c= ccat f0 cNIL f0
D Seq.cats1
A |- (!s. (!z. (((cat s) ((CONS z) NIL)) = ((rcons s) z))))
T c= ccat f0 cCONS f1 cNIL crcons f0 f1
D Seq.filter_nil
A |- (!a. (((filter a) NIL) = NIL))
T c= cfilter f0 cNIL cNIL
D Seq.filter_cons
A |- (!a. (!x. (!t. (((filter a) ((CONS x) t)) = (((COND (a x)) ((CONS x) ((filter a) t))) ((filter a) t))))))
T c= cfilter f0 cCONS f1 f2 cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2
D Seq.filter_cat
A |- (!a. (!s1. (!s2. (((filter a) ((cat s1) s2)) = ((cat ((filter a) s1)) ((filter a) s2))))))
T c= cfilter f0 ccat f1 f2 ccat cfilter f0 f1 cfilter f0 f2
D Seq.allP
A |- (!a. (!s. ((!x. (((MEM x) s) ==> (a x))) = ((all a) s))))
T c= ! c==> cMEM b0 f0 * f1 b0 call f1 f0
D Seq.map
A |- ((((map f) ((CONS x) s)) = ((CONS (f x)) ((map f) s))) /\ (((map f) NIL) = NIL))
T c/\ c= cmap f0 cCONS f1 f2 cCONS * f0 f1 cmap f0 f2 c= cmap f0 cNIL cNIL
D Seq.map_MAP
A |- (map = MAP)
T c= part cmap part cMAP
D Seq.map_cat
A |- (!f. (!s1. (!s2. (((map f) ((cat s1) s2)) = ((cat ((map f) s1)) ((map f) s2))))))
T c= cmap f0 ccat f1 f2 ccat cmap f0 f1 cmap f0 f2
D Seq2.ALL_all
A |- (ALL = all)
T c= part cALL part call
D Reduction4.ftrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ftrans L) N) r) x) i) = (((COND (i = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE i))))))))))
T c= cftrans f0 f1 f2 f3 f4 cCOND c= f4 cNUMERAL c_0 cSND f3 cFST cztrans f0 f1 f2 f3 cPRE f4
D Tame_list.the_some
A |- (!x. ((the (SOME x)) = x))
T c= cthe cSOME f0 f0
D Tame_list.MAP_flatten
A |- (!f. (!x. (((MAP f) (flatten x)) = (flatten ((MAP (MAP f)) x)))))
T c= cMAP f0 cflatten f1 cflatten cMAP * part cMAP f0 f1
D Tame_list.lower_case
A |- ((MAP = map) /\ ((LENGTH = sizel) /\ ((FILTER = filter) /\ ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all)))))))
T c/\ c= part cMAP part cmap c/\ c= part cLENGTH part csizel c/\ c= part cFILTER part cfilter c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
D Reduction2.cat_eq
A |- (!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d)))))))
T c==> c/\ c= f0 f1 c= f2 f3 c= ccat f0 f2 ccat f1 f3
D Reduction4.flatten_filter
A |- (!s. (!f. ((flatten ((MAP (filter f)) s)) = ((filter f) (flatten s)))))
T c= cflatten cMAP * part cfilter f0 f1 cfilter f0 cflatten f1
D Reduction4.filter_nseq
A |- (!n. (!f. (!x. (((filter f) ((nseq n) x)) = (((COND (f x)) ((nseq n) x)) NIL)))))
T c= cfilter f0 cnseq f1 f2 cCOND * f0 f2 cnseq f1 f2 cNIL
D Reduction4.dest_triple_full_explicit
A |- (!L. (!N. (!r. (!x. (!k. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((transform_count L) N) r) x) = k) /\ ((?w. ((((prev_el ((core L) r)) w) , w) = x)) /\ (is_restricted (hypermap_of_list L)))))))) ==> ((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cis_restricted chypermap_of_list f0 c= cdest_triple_full ccore f0 f2 cSND f3 ccore_triple_v4 f0 f1 f2 f3 ccat cflatten cMAP / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3
D Reduction4.COND_RAND2
A |- (!f. (!b. (!x. (!y. ((f (((COND b) x) y)) = (((COND b) (f x)) (f y)))))))
T c= * f0 cCOND f1 f2 f3 cCOND f1 * f0 f2 * f0 f3
D Reduction4.filter_isSome_map
A |- (!xs. (((filter isSome) ((MAP SOME) xs)) = ((MAP SOME) xs)))
T c= cfilter part cisSome cMAP part cSOME f0 cMAP part cSOME f0
- ((((prev_el ((core L) r)) w) , w) = x) |- ((((((transform_count L) N) r) x) = k) = (((((transform_count L) N) r) (((prev_el ((core L) r)) w) , w)) = k))
T c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c= c= ctransform_count f0 f4 f1 f3 f5 c= ctransform_count f0 f4 f1 c, cprev_el ccore f0 f1 f2 f2 f5
- |- (((!g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND b0 b1 b2 * / ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND b0 b1 b2 f5 * / ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND b0 b1 b2 f5
- |- ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))
T c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL
- (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) |- ((!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) /\ ((((MAP the) ((cat (flatten ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))))) = (((MAP the) ((cat (flatten ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))))))
T c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c/\ ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c= c= cMAP part cthe ccat cflatten cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL c= cMAP part cthe ccat cflatten cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL
- |- ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all))))
T c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
+ |- ((\t'. (!e'. (((isSome (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) = g') ==> ((g' ==> (((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) ((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))) = t')) ==> (((~ g') ==> (((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = e')) ==> ((((COND (isSome (SOME (FST (((((ztrans L) N) r) x) (PRE k)))))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) ((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))))) ((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cisSome cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 f5 c==> c==> f5 c= cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b0 c==> c==> c~ f5 c= cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b1 c= cCOND cisSome cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND f5 b0 b1 f6
+ |- ((\g'. (!t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b2 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND b0 b1 b2 f5
+ |- (((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) ==> (((filter isSome) NIL) = t')) ==> (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) ((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) t') e'))))) = ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) ==> (((filter isSome) NIL) = t')) ==> (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) ((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) t') e')))))
T c= c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c==> c==> c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cfilter part cisSome cNIL f5 c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f6 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 f6 c==> c==> c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cfilter part cisSome cNIL f5 c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f6 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 f6
+ |- ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((filter isSome) NIL)) ((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))))
T c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cfilter part cisSome cNIL cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL
+ |- ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) ((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))
T c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL
+ (!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) |- ((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) /\ ((((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ (((MAP the) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))) = (((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))))))
T c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c/\ ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c= c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cMAP part cthe cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL
+ |- ((((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))))) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((MAP the) NIL)) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))))) = ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((MAP the) NIL)) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))))))
T c= c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cMAP part cthe cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cMAP part cthe cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL
- |- ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (NIL = t')) ==> (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) t') e'))))
T c==> c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cNIL f5 c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL f6 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 f6
- |- ((b ==> (((filter isSome) x) = t')) ==> (((~ b) ==> (((filter isSome) y) = e')) ==> ((((COND b) ((filter isSome) x)) ((filter isSome) y)) = (((COND b) t') e'))))
T c==> c==> f0 c= cfilter part cisSome f1 f2 c==> c==> c~ f0 c= cfilter part cisSome f3 f4 c= cCOND f0 cfilter part cisSome f1 cfilter part cisSome f3 cCOND f0 f2 f4
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
- |- (((!t'. (!e'. ((b = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> (y = e')) ==> ((((COND b) x) y) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((b = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> (y = e')) ==> ((((COND b) x) y) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((b = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> (y = e')) ==> ((((COND b) x) y) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c==> c==> c~ f1 c= f3 b1 c= cCOND f0 f2 f3 cCOND f1 b0 b1 * / ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c==> c==> c~ f1 c= f3 b1 c= cCOND f0 f2 f3 cCOND f1 b0 b1 f4 * / ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c==> c==> c~ f1 c= f3 b1 c= cCOND f0 f2 f3 cCOND f1 b0 b1 f4
+ |- ((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) ==> ((((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ (((MAP the) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))) = (((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))))))
T c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c= c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cMAP part cthe cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL
+ |- ((!N. ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> (?w. ((((prev_el ((core L) r)) w) , w) = x)))))))))) = T)
T c= ! c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 b0 f1 f2 c==> c~ cfinal_list f0 f1 c==> c= ctransform_count f0 b0 f1 f2 f3 c==> c= c, cprev_el ccore f0 f1 f4 f4 f2 c==> cis_restricted chypermap_of_list f0 c? / c= c, cprev_el ccore f0 f1 b1 b1 f2 cT
- |- (((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) ==> (((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))))) = ((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) ==> (((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))))))
T c= c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL
+ |- (((all a) s) = (!x. (((MEM x) s) ==> (a x))))
T c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0
- (~ b) |- (b = F)
T c==> c~ f0 c= f0 cF
+ |- ((\L. (!N. (!r. (!x. (!i. ((((((ftrans L) N) r) x) i) = (((COND (i = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE i)))))))))) L)
T * / ! ! ! ! c= cftrans b0 b1 b2 b3 b4 cCOND c= b4 cNUMERAL c_0 cSND b3 cFST cztrans b0 b1 b2 b3 cPRE b4 f0
- |- (((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = NIL)) ==> (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) e')))) = (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) e'))))
T c= c==> c==> c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cNIL cNIL c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL f5 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL f5 c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL f5 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL f5
+ |- (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) e')))
T c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f5 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL f5
- |- ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)) = (((COND g') t') e')))))
T c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f7 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cCOND f5 f6 f7
- |- ((\g'. (!t'. (!e'. ((b = g') ==> ((g' ==> (((filter isSome) x) = t')) ==> (((~ g') ==> (((filter isSome) y) = e')) ==> ((((COND b) ((filter isSome) x)) ((filter isSome) y)) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= f0 b0 c==> c==> b0 c= cfilter part cisSome f1 b1 c==> c==> c~ b0 c= cfilter part cisSome f2 b2 c= cCOND f0 cfilter part cisSome f1 cfilter part cisSome f2 cCOND b0 b1 b2 f3
+ F |- (F /\ (((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) = ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))
T c==> cF c/\ cF c= cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL
+ |- ((\e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (((MAP the) NIL) = t')) ==> (((~ g') ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ((MAP the) NIL)) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND g') t') e')))))) e')
T * / c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cMAP part cthe cNIL f6 c==> c==> c~ f5 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b0 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cMAP part cthe cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 f6 b0 f7
+ |- ((\k. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((transform_count L) N) r) x) = k) /\ ((?w. ((((prev_el ((core L) r)) w) , w) = x)) /\ (is_restricted (hypermap_of_list L)))))))) ==> ((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))))))) k)
T * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= ctransform_count f0 f1 f2 f3 b0 c/\ c? / c= c, cprev_el ccore f0 f2 b1 b1 f3 cis_restricted chypermap_of_list f0 c= cdest_triple_full ccore f0 f2 cSND f3 ccore_triple_v4 f0 f1 f2 f3 ccat cflatten cMAP / cCONS cSOME cftrans f0 f1 f2 f3 b1 ccat cCOND c= cftrans f0 f1 f2 f3 b1 cFST cytrans f0 f1 f2 f3 b1 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b1 cFST cytrans f0 f1 f2 f3 b1 cCONS cSOME cFST cytrans f0 f1 f2 f3 b1 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b1 cztrans f0 f1 f2 f3 b1 cNONE ciota cNUMERAL c_0 b0 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE b0 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE b0 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE b0 cFST f3 cSOME cFST f3 f4
- ((((prev_el ((core L) r)) w) , w) = x) |- ((good_list_nodes L) = (good_list_nodes L))
T c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c= cgood_list_nodes f0 cgood_list_nodes f0
+ |- ((!x. (!k. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((transform_count L) N) r) x) = k) /\ ((?w. ((((prev_el ((core L) r)) w) , w) = x)) /\ (is_restricted (hypermap_of_list L)))))))) ==> (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))))))) = T)
T c= ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ c= ctransform_count f0 f1 f2 b0 b1 c/\ c? / c= c, cprev_el ccore f0 f2 b2 b2 b0 cis_restricted chypermap_of_list f0 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f2 cSND b0 ccore_triple_v4 f0 f1 f2 b0 ccat cflatten cMAP / cCONS cftrans f0 f1 f2 b0 b2 cCOND c= cftrans f0 f1 f2 b0 b2 cFST cytrans f0 f1 f2 b0 b2 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 b0 b2 cFST cytrans f0 f1 f2 b0 b2 cCONS cFST cytrans f0 f1 f2 b0 b2 cNIL ciota cNUMERAL c_0 b1 cCONS cFST cztrans f0 f1 f2 b0 cPRE b1 cCOND c= cFST cztrans f0 f1 f2 b0 cPRE b1 cFST b0 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 b0 cPRE b1 cFST b0 cFST b0 cT
- (!f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))) |- ((\f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))) f)
T c==> ! ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2 * / ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2 f0
- |- ((((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)) = ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))))) = ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))))
T c= c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL
+ (((all a) s) = (!x. (((MEM x) s) ==> (a x)))) |- ((!x. (((MEM x) s) ==> (a x))) = ((all a) s))
T c==> c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0 c= ! c==> cMEM b0 f1 * f0 b0 call f0 f1
- (!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))) |- ((\d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d)))) d)
T c==> ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3 * / c==> c/\ c= f0 f1 c= f2 b0 c= ccat f0 f2 ccat f1 b0 f3
- b |- (b = T)
T c==> f0 c= f0 cT
- |- ((FILTER = filter) /\ ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all)))))
T c/\ c= part cFILTER part cfilter c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ |- (((!e'. (((isSome (SOME (FST (((((ytrans L) N) r) x) x')))) = g') ==> ((g' ==> (((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) = t')) ==> (((~ g') ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND g') t') e')))))) ==> ((\e'. (((isSome (SOME (FST (((((ytrans L) N) r) x) x')))) = g') ==> ((g' ==> (((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) = t')) ==> (((~ g') ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND g') t') e')))))) e')) = ((\e'. (((isSome (SOME (FST (((((ytrans L) N) r) x) x')))) = g') ==> ((g' ==> (((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) = t')) ==> (((~ g') ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL f6 c==> c==> c~ f5 c= cfilter part cisSome cNIL b0 c= cCOND cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND f5 f6 b0 * / c==> c= cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL f6 c==> c==> c~ f5 c= cfilter part cisSome cNIL b0 c= cCOND cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND f5 f6 b0 f7 * / c==> c= cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL f6 c==> c==> c~ f5 c= cfilter part cisSome cNIL b0 c= cCOND cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND f5 f6 b0 f7
- (!f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))) |- ((!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))) = T)
T c==> ! ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2 c= ! c==> cALL / c= * f0 b1 * f1 b1 b0 c= cMAP f0 b0 cMAP f1 b0 cT
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
+ |- (((!f. (!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))))) ==> ((\f. (!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))))) f)) = ((\f. (!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))))) f))
T c= c==> ! ! ! c= cMAP b0 cCONS b1 b2 cCONS * b0 b1 cMAP b0 b2 * / ! ! c= cMAP b0 cCONS b1 b2 cCONS * b0 b1 cMAP b0 b2 f0 * / ! ! c= cMAP b0 cCONS b1 b2 cCONS * b0 b1 cMAP b0 b2 f0
+ |- ((\t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (((MAP the) NIL) = t')) ==> (((~ g') ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ((MAP the) NIL)) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cMAP part cthe cNIL b0 c==> c==> c~ f5 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b1 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cMAP part cthe cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 b0 b1 f6
- |- ((_11244043 = _11244044) ==> ((good_list _11244044) \/ (~ (good_list _11244043))))
T c==> c= f0 f1 c\/ cgood_list f1 c~ cgood_list f0
+ (good_list L), ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((transform_count L) N) r) x) = k) /\ ((?w. ((((prev_el ((core L) r)) w) , w) = x)) /\ (is_restricted (hypermap_of_list L)))))))) |- (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))))
T c==> cgood_list f0 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cis_restricted chypermap_of_list f0 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f2 cSND f3 ccore_triple_v4 f0 f1 f2 f3 ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3
+ |- (((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)))) = (((cat (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))) ((MAP the) ((filter isSome) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE)))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)))))
T c= c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL c= ccat cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe cfilter part cisSome cnseq csizel cbetwn cfind_face f2 f1 cytrans f2 f3 f4 f1 f0 cztrans f2 f3 f4 f1 f0 cNONE cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL
+ |- ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))
T c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f7 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 f6 f7
+ |- (((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) ==> (((MAP the) NIL) = NIL)) ==> (((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ((MAP the) NIL)) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) e')))) = (((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ((MAP the) NIL)) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) e'))))
T c= c==> c==> c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cMAP part cthe cNIL cNIL c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL f5 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cMAP part cthe cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL f5 c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL f5 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cMAP part cthe cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL f5
+ |- ((\t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (((filter isSome) NIL) = t')) ==> (((~ g') ==> (((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((filter isSome) NIL)) ((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cfilter part cisSome cNIL b0 c==> c==> c~ f5 c= cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cfilter part cisSome cNIL cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND f5 b0 b1 f6
- (~ (x' = (NUMERAL _0))) |- (((~ ((NUMERAL _0) = x')) ==> (((NUMERAL _0) = x') = F)) = (((NUMERAL _0) = x') = F))
T c==> c~ c= f0 cNUMERAL c_0 c= c==> c~ c= cNUMERAL c_0 f0 c= c= cNUMERAL c_0 f0 cF c= c= cNUMERAL c_0 f0 cF
- |- ((_11244055 = _11244057) ==> ((~ (_11244056 = _11244058)) \/ ((_11244055 , _11244056) = (_11244057 , _11244058))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) = T)
T c==> cis_restricted chypermap_of_list f0 c= cis_restricted chypermap_of_list f0 cT
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((prev_el ((core L) r)) w) , w) = x), (((((transform_count L) N) r) x) = k), ((((marked_list L) N) r) x) |- ((?w. ((((prev_el ((core L) r)) w) , w) = x)) /\ (((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))))) ==> (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c==> c= ctransform_count f0 f4 f1 f3 f5 c==> cmarked_list f0 f4 f1 f3 c/\ c? / c= c, cprev_el ccore f0 f1 b0 b0 f3 c==> c= cdest_triple_full ccore f0 f1 cSND f3 ccore_triple_v4 f0 f4 f1 f3 ccat cflatten cMAP / cCONS cSOME cftrans f0 f4 f1 f3 b0 ccat cCOND c= cftrans f0 f4 f1 f3 b0 cFST cytrans f0 f4 f1 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f4 f1 f3 b0 cFST cytrans f0 f4 f1 f3 b0 cCONS cSOME cFST cytrans f0 f4 f1 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f4 f1 f3 b0 cztrans f0 f4 f1 f3 b0 cNONE ciota cNUMERAL c_0 f5 cCONS cSOME cFST cztrans f0 f4 f1 f3 cPRE f5 cCOND c= cFST cztrans f0 f4 f1 f3 cPRE f5 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f4 f1 f3 cPRE f5 cFST f3 cSOME cFST f3 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f1 cSND f3 ccore_triple_v4 f0 f4 f1 f3 ccat cflatten cMAP / cCONS cftrans f0 f4 f1 f3 b0 cCOND c= cftrans f0 f4 f1 f3 b0 cFST cytrans f0 f4 f1 f3 b0 cNIL ccat cbetwn ccore f0 f1 cftrans f0 f4 f1 f3 b0 cFST cytrans f0 f4 f1 f3 b0 cCONS cFST cytrans f0 f4 f1 f3 b0 cNIL ciota cNUMERAL c_0 f5 cCONS cFST cztrans f0 f4 f1 f3 cPRE f5 cCOND c= cFST cztrans f0 f4 f1 f3 cPRE f5 cFST f3 cNIL crcons cbetwn ccore f0 f1 cFST cztrans f0 f4 f1 f3 cPRE f5 cFST f3 cFST f3
- (~ b) |- ((~ b) /\ (y = y))
T c==> c~ f0 c/\ c~ f0 c= f1 f1
+ |- (((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (((MAP the) NIL) = NIL)) ==> (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((MAP the) NIL)) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) e')))) = (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((MAP the) NIL)) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) e'))))
T c= c==> c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cMAP part cthe cNIL cNIL c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL f5 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cMAP part cthe cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f5 c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL f5 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cMAP part cthe cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f5
- |- ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (NIL = t')) ==> (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) t') e'))))
T c==> c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cNIL f5 c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL f6 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 f6
- |- ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))
T c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL
- |- ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all)))
T c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
+ ((((prev_el ((core L) r)) w) , w) = x) |- ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)
T c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c==> c~ c? / c= c, cprev_el ccore f0 f1 b0 b0 f3 cF
+ |- (((!i. ((((((ftrans L) N) r) x) i) = (((COND (i = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE i)))))) ==> ((\i. ((((((ftrans L) N) r) x) i) = (((COND (i = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE i)))))) i)) = ((\i. ((((((ftrans L) N) r) x) i) = (((COND (i = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE i)))))) i))
T c= c==> ! c= cftrans f0 f1 f2 f3 b0 cCOND c= b0 cNUMERAL c_0 cSND f3 cFST cztrans f0 f1 f2 f3 cPRE b0 * / c= cftrans f0 f1 f2 f3 b0 cCOND c= b0 cNUMERAL c_0 cSND f3 cFST cztrans f0 f1 f2 f3 cPRE b0 f4 * / c= cftrans f0 f1 f2 f3 b0 cCOND c= b0 cNUMERAL c_0 cSND f3 cFST cztrans f0 f1 f2 f3 cPRE b0 f4
+ |- ((isSome (SOME x)) = T)
T c= cisSome cSOME f0 cT
+ |- ((!x. (!r. (!L. (!w. (!k. (!N. ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> (?w. ((((prev_el ((core L) r)) w) , w) = x))))))))))))))) = (!x. (!r. (!L. (!w. (!k. (!N. ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))))))))))
T c= ! ! ! ! ! ! c==> cgood_list b2 c==> cgood_list_nodes b2 c==> cmarked_list b2 b5 b1 b0 c==> c~ cfinal_list b2 b1 c==> c= ctransform_count b2 b5 b1 b0 b4 c==> c= c, cprev_el ccore b2 b1 b3 b3 b0 c==> cis_restricted chypermap_of_list b2 c? / c= c, cprev_el ccore b2 b1 b6 b6 b0 ! ! ! ! ! ! c==> cgood_list b2 c==> cgood_list_nodes b2 c==> cmarked_list b2 b5 b1 b0 c==> c~ cfinal_list b2 b1 c==> c= ctransform_count b2 b5 b1 b0 b4 c==> c= c, cprev_el ccore b2 b1 b3 b3 b0 c==> cis_restricted chypermap_of_list b2 c==> c~ c? / c= c, cprev_el ccore b2 b1 b6 b6 b0 cF
+ |- (((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))))) ==> (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)))))))
T c==> c= cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f3 f1 f2 ccat cflatten cMAP / cCONS cSOME cftrans f0 f3 f1 f2 b0 ccat cCOND c= cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cCONS cSOME cFST cytrans f0 f3 f1 f2 b0 cNIL cnseq csizel cbetwn cfind_face f0 f2 cytrans f0 f3 f1 f2 b0 cztrans f0 f3 f1 f2 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cSOME cFST f2 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f3 f1 f2 ccat cflatten cMAP / cCONS cftrans f0 f3 f1 f2 b0 cCOND c= cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cNIL ccat cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cCONS cFST cytrans f0 f3 f1 f2 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cFST f2
- (_11244033 = _11244037), (_11244034 = _11244038) |- ((_11244034 = _11244038) /\ ((~ (_11244035 = _11244039)) \/ ((~ (_11244036 = _11244040)) \/ (((((marked_list _11244037) _11244038) _11244039) _11244040) \/ (~ ((((marked_list _11244033) _11244034) _11244035) _11244036))))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ cmarked_list f1 f3 f5 f7 c~ cmarked_list f0 f2 f4 f6
- |- (((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (NIL = t')) ==> (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) t') e'))))) = ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (NIL = t')) ==> (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) t') e')))))
T c= c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c==> c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cNIL f5 c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL f6 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 f6 c==> c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cNIL f5 c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL f6 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 f6
+ |- (((!t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b1 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 b0 b1 * / ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b1 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 b0 b1 f6 * / ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b1 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 b0 b1 f6
+ (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) |- ((!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) /\ ((((MAP the) ((filter isSome) ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)))))) = (((MAP the) ((cat (flatten ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))))))
T c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c/\ ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c= c= cMAP part cthe cfilter part cisSome ccat cflatten cMAP / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3 c= cMAP part cthe ccat cflatten cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL
+ (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) |- (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y))))
T c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 ! c= cfilter part cisSome cCOND f0 f1 b0 cCOND f0 cfilter part cisSome f1 cfilter part cisSome b0
+ |- (((!g'. (!t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL b2 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND b0 b1 b2 * / ! ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL b2 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND b0 b1 b2 f5 * / ! ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL b2 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND b0 b1 b2 f5
+ (~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) |- ((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) /\ (((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)) = ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))))
T c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c/\ c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= ccat cbetwn ccore f2 f4 cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL
+ |- ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))))
T c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL
- (~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) |- (((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = F)
T c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cF
- |- ((((COND b) ((MAP the) x)) ((MAP the) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))
T c= cCOND f0 cMAP part cthe f1 cMAP part cthe f2 cCOND f0 cMAP part cthe f1 cMAP part cthe f2
- ((((prev_el ((core L) r)) w) , w) = x), (((((transform_count L) N) r) x) = k) |- (((((marked_list L) N) r) (((prev_el ((core L) r)) w) , w)) = ((((marked_list L) N) r) (((prev_el ((core L) r)) w) , w)))
T c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c==> c= ctransform_count f0 f4 f1 f3 f5 c= cmarked_list f0 f4 f1 c, cprev_el ccore f0 f1 f2 f2 cmarked_list f0 f4 f1 c, cprev_el ccore f0 f1 f2 f2
+ (~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) |- ((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) /\ (((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)) = ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))
T c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c/\ c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL
+ |- (((~ T) ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST x)))) ((CONS (SOME (FST x))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND T) ((CONS (SOME (FST x))) NIL)) e')))
T c==> c==> c~ cT c= cfilter part cisSome cNIL f0 c= cCOND cisSome cSOME cFST f1 cCONS cSOME cFST f1 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND cT cCONS cSOME cFST f1 cNIL f0
- |- ((((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))) ==> ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F))))))))) = ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))))
T c= c==> c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF
+ |- (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> (?w. ((((prev_el ((core L) r)) w) , w) = x))))
T c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c==> cis_restricted chypermap_of_list f0 c? / c= c, cprev_el ccore f0 f1 b0 b0 f3
+ |- (((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (((MAP the) NIL) = NIL))
T c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cMAP part cthe cNIL cNIL
+ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) |- (((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) /\ (((filter isSome) NIL) = NIL))
T c==> c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c/\ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cfilter part cisSome cNIL cNIL
- (_11244033 = _11244037), (_11244034 = _11244038) |- ((_11244035 = _11244039) ==> ((~ (_11244036 = _11244040)) \/ (((((marked_list _11244037) _11244038) _11244039) _11244040) \/ (~ ((((marked_list _11244033) _11244034) _11244035) _11244036)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ cmarked_list f1 f3 f5 f7 c~ cmarked_list f0 f2 f4 f6
+ (!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) |- (((!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y))))) ==> ((\x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y))))) x)) = ((\x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y))))) x))
T c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c= c==> ! ! c= cMAP part cthe cCOND f0 b0 b1 cCOND f0 cMAP part cthe b0 cMAP part cthe b1 * / ! c= cMAP part cthe cCOND f0 b0 b1 cCOND f0 cMAP part cthe b0 cMAP part cthe b1 f1 * / ! c= cMAP part cthe cCOND f0 b0 b1 cCOND f0 cMAP part cthe b0 cMAP part cthe b1 f1
+ (~ T), (~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) |- ((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) /\ (((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)))
T c==> c~ cT c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c/\ c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL
+ |- (MAP = map)
T c= part cMAP part cmap
- |- (LENGTH = sizel)
T c= part cLENGTH part csizel
- (_11244036 = _11244040), (_11244035 = _11244039), (_11244033 = _11244037), (_11244034 = _11244038) |- (((((((marked_list _11244033) _11244034) _11244035) _11244036) = ((((marked_list _11244037) _11244038) _11244039) _11244040)) ==> (((((marked_list _11244037) _11244038) _11244039) _11244040) \/ (~ ((((marked_list _11244033) _11244034) _11244035) _11244036)))) = (((((marked_list _11244037) _11244038) _11244039) _11244040) \/ (~ ((((marked_list _11244033) _11244034) _11244035) _11244036))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c= c==> c= cmarked_list f4 f6 f2 f0 cmarked_list f5 f7 f3 f1 c\/ cmarked_list f5 f7 f3 f1 c~ cmarked_list f4 f6 f2 f0 c\/ cmarked_list f5 f7 f3 f1 c~ cmarked_list f4 f6 f2 f0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- ((\g'. (!t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (((MAP the) NIL) = t')) ==> (((~ g') ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ((MAP the) NIL)) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 b0 c==> c==> b0 c= cMAP part cthe cNIL b1 c==> c==> c~ b0 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b2 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cMAP part cthe cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND b0 b1 b2 f5
+ |- ((!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) ==> ((((MAP the) ((filter isSome) ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)))))) = (((MAP the) ((cat (flatten ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))))))
T c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c= c= cMAP part cthe cfilter part cisSome ccat cflatten cMAP / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3 c= cMAP part cthe ccat cflatten cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL
- ((FST x) = (FST (((((ztrans L) N) r) x) (PRE k)))) |- ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))
T c==> c= cFST f0 cFST cztrans f1 f2 f3 f0 cPRE f4 c= cFST cztrans f1 f2 f3 f0 cPRE f4 cFST f0
- |- (((b = b) ==> ((b ==> (((MAP the) x) = t')) ==> (((~ b) ==> (((MAP the) y) = e')) ==> ((((COND b) ((MAP the) x)) ((MAP the) y)) = (((COND b) t') e'))))) = ((b ==> (((MAP the) x) = t')) ==> (((~ b) ==> (((MAP the) y) = e')) ==> ((((COND b) ((MAP the) x)) ((MAP the) y)) = (((COND b) t') e')))))
T c= c==> c= f0 f0 c==> c==> f0 c= cMAP part cthe f1 f2 c==> c==> c~ f0 c= cMAP part cthe f3 f4 c= cCOND f0 cMAP part cthe f1 cMAP part cthe f3 cCOND f0 f2 f4 c==> c==> f0 c= cMAP part cthe f1 f2 c==> c==> c~ f0 c= cMAP part cthe f3 f4 c= cCOND f0 cMAP part cthe f1 cMAP part cthe f3 cCOND f0 f2 f4
- |- ((?w. (P w)) = ((P T) \/ (P F)))
T c= c? / * f0 b0 c\/ * f0 cT * f0 cF
- |- ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = t')) ==> (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) t') e'))))
T c==> c==> c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cNIL f5 c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL f6 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 f6
+ |- (((!h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2)))))) ==> ((\h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2)))))) h2)) = ((\h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2)))))) h2))
T c= c==> ! ! ! c= c= cCONS f0 b1 cCONS b0 b2 c/\ c= f0 b0 c= b1 b2 * / ! ! c= c= cCONS f0 b1 cCONS b0 b2 c/\ c= f0 b0 c= b1 b2 f1 * / ! ! c= c= cCONS f0 b1 cCONS b0 b2 c/\ c= f0 b0 c= b1 b2 f1
+ |- (((map f) ((CONS x) s)) = ((CONS (f x)) ((map f) s)))
T c= cmap f0 cCONS f1 f2 cCONS * f0 f1 cmap f0 f2
+ |- ((\f. (!l. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l)))) f)
T * / ! c==> cALL / c= * b0 b2 b2 b1 c= cMAP b0 b1 b1 f0
- |- (((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b) = ((\b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)) b))
T c= c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 f5 * / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0 f5
+ |- ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (((filter isSome) NIL) = t')) ==> (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((filter isSome) NIL)) ((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) t') e'))))
T c==> c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cfilter part cisSome cNIL f5 c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 f6 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cfilter part cisSome cNIL cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 f6
- (!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))) |- (((!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))) ==> ((\c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))) c)) = ((\c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))) c))
T c==> ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3 c= c==> ! ! c==> c/\ c= f0 b0 c= f1 b1 c= ccat f0 f1 ccat b0 b1 * / ! c==> c/\ c= f0 b0 c= f1 b1 c= ccat f0 f1 ccat b0 b1 f2 * / ! c==> c/\ c= f0 b0 c= f1 b1 c= ccat f0 f1 ccat b0 b1 f2
+ |- ((((cat ((MAP (the o SOME)) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (FST x)) NIL)) = ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))) = (((cat ((map the) ((map SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))))) ((CONS (FST x)) NIL)) = ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))
T c= c= ccat cMAP * * part co part cthe part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL ccat cbetwn ccore f0 f1 cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL c= ccat cmap part cthe cmap part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL ccat cbetwn ccore f0 f1 cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL
+ |- ((\i. ((((((ftrans L) N) r) x) i) = (((COND (i = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE i)))))) i)
T * / c= cftrans f0 f1 f2 f3 b0 cCOND c= b0 cNUMERAL c_0 cSND f3 cFST cztrans f0 f1 f2 f3 cPRE b0 f4
- (!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))) |- ((!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))) = T)
T c==> ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3 c= ! ! c==> c/\ c= f0 b0 c= f1 b1 c= ccat f0 f1 ccat b0 b1 cT
+ |- (((!s2. (((map f) ((cat s1) s2)) = ((cat ((map f) s1)) ((map f) s2)))) ==> ((\s2. (((map f) ((cat s1) s2)) = ((cat ((map f) s1)) ((map f) s2)))) s2)) = ((\s2. (((map f) ((cat s1) s2)) = ((cat ((map f) s1)) ((map f) s2)))) s2))
T c= c==> ! c= cmap f0 ccat f1 b0 ccat cmap f0 f1 cmap f0 b0 * / c= cmap f0 ccat f1 b0 ccat cmap f0 f1 cmap f0 b0 f2 * / c= cmap f0 ccat f1 b0 ccat cmap f0 f1 cmap f0 b0 f2
+ |- (((!h1. (!h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2))))))) ==> ((\h1. (!h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2))))))) h1)) = ((\h1. (!h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2))))))) h1))
T c= c==> ! ! ! ! c= c= cCONS b0 b2 cCONS b1 b3 c/\ c= b0 b1 c= b2 b3 * / ! ! ! c= c= cCONS b0 b2 cCONS b1 b3 c/\ c= b0 b1 c= b2 b3 f0 * / ! ! ! c= c= cCONS b0 b2 cCONS b1 b3 c/\ c= b0 b1 c= b2 b3 f0
- |- (((!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND g') t') e')))))) ==> ((\e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND g') t') e')))))) e')) = ((\e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b0 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND f5 f6 b0 * / c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b0 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND f5 f6 b0 f7 * / c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b0 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND f5 f6 b0 f7
+ |- (((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) ==> (((filter isSome) NIL) = NIL))
T c==> c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cfilter part cisSome cNIL cNIL
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((prev_el ((core L) r)) w) , w) = x), (((((transform_count L) N) r) x) = k), ((((marked_list L) N) r) x) |- ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c==> c= ctransform_count f0 f4 f1 f3 f5 c==> cmarked_list f0 f4 f1 f3 c==> c~ c? / c= c, cprev_el ccore f0 f1 b0 b0 f3 cF
+ |- ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (((filter isSome) NIL) = t')) ==> (((~ g') ==> (((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) ((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND g') t') e')))))
T c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cfilter part cisSome cNIL f6 c==> c==> c~ f5 c= cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f7 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 f6 f7
+ |- (((!f. (!b. (!x. (!y. ((f (((COND b) x) y)) = (((COND b) (f x)) (f y))))))) ==> ((\f. (!b. (!x. (!y. ((f (((COND b) x) y)) = (((COND b) (f x)) (f y))))))) (MAP the))) = ((\f. (!b. (!x. (!y. ((f (((COND b) x) y)) = (((COND b) (f x)) (f y))))))) (MAP the)))
T c= c==> ! ! ! ! c= * b0 cCOND b1 b2 b3 cCOND b1 * b0 b2 * b0 b3 * / ! ! ! c= * b0 cCOND b1 b2 b3 cCOND b1 * b0 b2 * b0 b3 * part cMAP part cthe * / ! ! ! c= * b0 cCOND b1 b2 b3 cCOND b1 * b0 b2 * b0 b3 * part cMAP part cthe
+ |- (((!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) ==> ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s)) = ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s))
T c= c==> ! c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1
+ |- (((!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l))))) ==> ((\g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l))))) g)) = ((\g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l))))) g))
T c= c==> ! ! c==> cALL / c= * f0 b2 * b0 b2 b1 c= cMAP f0 b1 cMAP b0 b1 * / ! c==> cALL / c= * f0 b2 * b0 b2 b1 c= cMAP f0 b1 cMAP b0 b1 f1 * / ! c==> cALL / c= * f0 b2 * b0 b2 b1 c= cMAP f0 b1 cMAP b0 b1 f1
- (~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) |- (((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = F)
T c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cF
- |- (((!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND f5 b0 b1 * / ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND f5 b0 b1 f6 * / ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND f5 b0 b1 f6
+ |- (((!a. (!s1. (!s2. (((filter a) ((cat s1) s2)) = ((cat ((filter a) s1)) ((filter a) s2)))))) ==> ((\a. (!s1. (!s2. (((filter a) ((cat s1) s2)) = ((cat ((filter a) s1)) ((filter a) s2)))))) a)) = ((\a. (!s1. (!s2. (((filter a) ((cat s1) s2)) = ((cat ((filter a) s1)) ((filter a) s2)))))) a))
T c= c==> ! ! ! c= cfilter b0 ccat b1 b2 ccat cfilter b0 b1 cfilter b0 b2 * / ! ! c= cfilter b0 ccat b1 b2 ccat cfilter b0 b1 cfilter b0 b2 f0 * / ! ! c= cfilter b0 ccat b1 b2 ccat cfilter b0 b1 cfilter b0 b2 f0
- (~ b) |- ((~ b) /\ (((filter isSome) y) = ((filter isSome) y)))
T c==> c~ f0 c/\ c~ f0 c= cfilter part cisSome f1 cfilter part cisSome f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) |- ((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) /\ (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))
T c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c/\ c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL
- |- ((\q'. (((?w. ((((prev_el ((core L) r)) w) , w) = x)) = p') ==> ((p' ==> (((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))))) = q')) ==> (((?w. ((((prev_el ((core L) r)) w) , w) = x)) ==> ((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))) = (p' ==> q'))))) q')
T * / c==> c= c? / c= c, cprev_el ccore f0 f1 b1 b1 f2 f3 c==> c==> f3 c= c= cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f4 f1 f2 ccat cflatten cMAP / cCONS cSOME cftrans f0 f4 f1 f2 b1 ccat cCOND c= cftrans f0 f4 f1 f2 b1 cFST cytrans f0 f4 f1 f2 b1 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f4 f1 f2 b1 cFST cytrans f0 f4 f1 f2 b1 cCONS cSOME cFST cytrans f0 f4 f1 f2 b1 cNIL cnseq csizel cbetwn cfind_face f0 f2 cytrans f0 f4 f1 f2 b1 cztrans f0 f4 f1 f2 b1 cNONE ciota cNUMERAL c_0 f5 cCONS cSOME cFST cztrans f0 f4 f1 f2 cPRE f5 cCOND c= cFST cztrans f0 f4 f1 f2 cPRE f5 cFST f2 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f4 f1 f2 cPRE f5 cFST f2 cSOME cFST f2 b0 c= c==> c? / c= c, cprev_el ccore f0 f1 b1 b1 f2 c= cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f4 f1 f2 ccat cflatten cMAP / cCONS cSOME cftrans f0 f4 f1 f2 b1 ccat cCOND c= cftrans f0 f4 f1 f2 b1 cFST cytrans f0 f4 f1 f2 b1 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f4 f1 f2 b1 cFST cytrans f0 f4 f1 f2 b1 cCONS cSOME cFST cytrans f0 f4 f1 f2 b1 cNIL cnseq csizel cbetwn cfind_face f0 f2 cytrans f0 f4 f1 f2 b1 cztrans f0 f4 f1 f2 b1 cNONE ciota cNUMERAL c_0 f5 cCONS cSOME cFST cztrans f0 f4 f1 f2 cPRE f5 cCOND c= cFST cztrans f0 f4 f1 f2 cPRE f5 cFST f2 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f4 f1 f2 cPRE f5 cFST f2 cSOME cFST f2 c==> f3 b0 f6
- |- ((\g'. (!t'. (!e'. (((x' = (NUMERAL _0)) = g') ==> ((g' ==> ((SND x) = t')) ==> (((~ g') ==> ((FST (((((ztrans L) N) r) x) (PRE x'))) = e')) ==> ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= f0 cNUMERAL c_0 b0 c==> c==> b0 c= cSND f1 b1 c==> c==> c~ b0 c= cFST cztrans f2 f3 f4 f1 cPRE f0 b2 c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cCOND b0 b1 b2 f5
- |- ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0)
T * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1
- |- ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))
T c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL
+ |- (!b. (((\b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)) b) ==> (((map the) ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) = (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))))))
T c==> * / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0 f5 c= cmap part cthe cfilter part cisSome cmap part cSOME cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2
- (_11244055 = _11244057), (_11244056 = _11244058) |- ((_11244056 = _11244058) /\ ((_11244055 , _11244056) = (_11244057 , _11244058)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= c, f0 f2 c, f1 f3
- b |- (b /\ (((MAP the) x) = ((MAP the) x)))
T c==> f0 c/\ f0 c= cMAP part cthe f1 cMAP part cthe f1
- (~ (NIL = s)) |- ((LAST s) = ((last x0) s))
T c==> c~ c= cNIL f0 c= cLAST f0 clast f1 f0
- ((((prev_el ((core L) r)) w) , w) = x) |- ((good_list L) = (good_list L))
T c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c= cgood_list f0 cgood_list f0
- |- (((~ b) ==> (((filter isSome) y) = e')) ==> ((((COND b) ((filter isSome) x)) ((filter isSome) y)) = (((COND b) ((filter isSome) x)) e')))
T c==> c==> c~ f0 c= cfilter part cisSome f1 f2 c= cCOND f0 cfilter part cisSome f3 cfilter part cisSome f1 cCOND f0 cfilter part cisSome f3 f2
- |- ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = (((COND g') t') e')))))
T c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 f7 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND f5 f6 f7
- (x' = (NUMERAL _0)) |- ((x' = (NUMERAL _0)) /\ ((SND x) = (SND x)))
T c==> c= f0 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= cSND f1 cSND f1
+ (!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) |- (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))
T c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c= cMAP part cthe cCOND f0 f1 f2 cCOND f0 cMAP part cthe f1 cMAP part cthe f2
- |- (((!e'. (((x' = (NUMERAL _0)) = g') ==> ((g' ==> ((SND x) = t')) ==> (((~ g') ==> ((FST (((((ztrans L) N) r) x) (PRE x'))) = e')) ==> ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (((COND g') t') e')))))) ==> ((\e'. (((x' = (NUMERAL _0)) = g') ==> ((g' ==> ((SND x) = t')) ==> (((~ g') ==> ((FST (((((ztrans L) N) r) x) (PRE x'))) = e')) ==> ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (((COND g') t') e')))))) e')) = ((\e'. (((x' = (NUMERAL _0)) = g') ==> ((g' ==> ((SND x) = t')) ==> (((~ g') ==> ((FST (((((ztrans L) N) r) x) (PRE x'))) = e')) ==> ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cSND f2 f3 c==> c==> c~ f1 c= cFST cztrans f4 f5 f6 f2 cPRE f0 b0 c= cCOND c= f0 cNUMERAL c_0 cSND f2 cFST cztrans f4 f5 f6 f2 cPRE f0 cCOND f1 f3 b0 * / c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cSND f2 f3 c==> c==> c~ f1 c= cFST cztrans f4 f5 f6 f2 cPRE f0 b0 c= cCOND c= f0 cNUMERAL c_0 cSND f2 cFST cztrans f4 f5 f6 f2 cPRE f0 cCOND f1 f3 b0 f7 * / c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cSND f2 f3 c==> c==> c~ f1 c= cFST cztrans f4 f5 f6 f2 cPRE f0 b0 c= cCOND c= f0 cNUMERAL c_0 cSND f2 cFST cztrans f4 f5 f6 f2 cPRE f0 cCOND f1 f3 b0 f7
+ (good_list L), ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((transform_count L) N) r) x) = k) /\ ((?w. ((((prev_el ((core L) r)) w) , w) = x)) /\ (is_restricted (hypermap_of_list L))))))) |- (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))))
T c==> cgood_list f0 c==> c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cis_restricted chypermap_of_list f0 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f2 cSND f3 ccore_triple_v4 f0 f1 f2 f3 ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3
+ (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) |- ((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) ==> (((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ (((MAP the) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))))
T c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cMAP part cthe cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL
+ |- (((!g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (((MAP the) NIL) = t')) ==> (((~ g') ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((MAP the) NIL)) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (((MAP the) NIL) = t')) ==> (((~ g') ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((MAP the) NIL)) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (((MAP the) NIL) = t')) ==> (((~ g') ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((MAP the) NIL)) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cMAP part cthe cNIL b1 c==> c==> c~ b0 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cMAP part cthe cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND b0 b1 b2 * / ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cMAP part cthe cNIL b1 c==> c==> c~ b0 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cMAP part cthe cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND b0 b1 b2 f5 * / ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cMAP part cthe cNIL b1 c==> c==> c~ b0 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cMAP part cthe cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND b0 b1 b2 f5
- |- (b ==> (((filter isSome) x) = ((filter isSome) x)))
T c==> f0 c= cfilter part cisSome f1 cfilter part cisSome f1
- ((MEM x') ((iota (NUMERAL _0)) k)) |- (((MEM x') ((iota (NUMERAL _0)) k)) = T)
T c==> cMEM f0 ciota cNUMERAL c_0 f1 c= cMEM f0 ciota cNUMERAL c_0 f1 cT
+ |- (((!t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL b1 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 b0 b1 * / ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL b1 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 b0 b1 f6 * / ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL b1 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 b0 b1 f6
+ |- (!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y))))))
T c= cMAP part cthe cCOND f0 f1 f2 cCOND f0 cMAP part cthe f1 cMAP part cthe f2
+ |- (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((filter isSome) NIL)) ((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) e')))
T c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 f5 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cfilter part cisSome cNIL cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f5
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> (?w. ((((prev_el ((core L) r)) w) , w) = x)))))))
T c==> cmarked_list f0 f1 f2 f3 c/\ cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c? / c= c, cprev_el ccore f0 f2 b0 b0 f3
- |- (((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (NIL = NIL)) ==> (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) e')))) = (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) e'))))
T c= c==> c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cNIL cNIL c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 f5 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f5 c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 f5 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f5
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) |- ((~ T) ==> (((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL))))
T c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c==> c~ cT c= cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL
+ (~ ((final_list L) r)) |- ((~ ((final_list L) r)) /\ ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> (?w. ((((prev_el ((core L) r)) w) , w) = x))))))
T c==> c~ cfinal_list f0 f1 c/\ c~ cfinal_list f0 f1 c==> c= ctransform_count f0 f2 f1 f3 f4 c==> c= c, cprev_el ccore f0 f1 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c? / c= c, cprev_el ccore f0 f1 b0 b0 f3
+ |- ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (((MAP the) NIL) = t')) ==> (((~ g') ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ((MAP the) NIL)) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND g') t') e')))))
T c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cMAP part cthe cNIL f6 c==> c==> c~ f5 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL f7 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cMAP part cthe cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 f6 f7
+ |- ((((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)) = ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))) = ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))))
T c= c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL
+ |- ((\g. (!l. (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l)))) g)
T * / ! c= cMAP b0 cMAP f0 b1 cMAP * * part co b0 f0 b1 f1
+ |- ((\e'. (((isSome (SOME (FST (((((ytrans L) N) r) x) x')))) = g') ==> ((g' ==> (((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) = t')) ==> (((~ g') ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND g') t') e')))))) e')
T * / c==> c= cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL f6 c==> c==> c~ f5 c= cfilter part cisSome cNIL b0 c= cCOND cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND f5 f6 b0 f7
+ |- (((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) ==> (((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ (((MAP the) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))))) = (((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ (((MAP the) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))))
T c= c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cMAP part cthe cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cMAP part cthe cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL
- ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) |- ((FST x) = (FST (((((ztrans L) N) r) x) (PRE k))))
T c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cFST f3 cFST cztrans f0 f1 f2 f3 cPRE f4
+ |- (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y))))))
T c= cfilter part cisSome cCOND f0 f1 f2 cCOND f0 cfilter part cisSome f1 cfilter part cisSome f2
- |- ((((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))) = ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))) = ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))))
T c= c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3
+ |- ((\c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))) c)
T * / ! c==> c/\ c= f0 b0 c= f1 b1 c= ccat f0 f1 ccat b0 b1 f2
+ |- ((((ALL (\x. (((the o SOME) x) = x))) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ==> (((MAP (the o SOME)) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) = (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) = (((MAP (the o SOME)) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) = (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))))
T c= c==> cALL / c= co part cthe part cSOME b0 b0 cbetwn ccore f0 f1 cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3 c= cMAP * * part co part cthe part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3 cbetwn ccore f0 f1 cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3 c= cMAP * * part co part cthe part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3 cbetwn ccore f0 f1 cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3
+ |- (((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) e')))
T c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL f5 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL f5
+ (~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) |- ((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) /\ (((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)) = ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))))
T c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c/\ c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL
+ |- (((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) e')))
T c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= ccat cbetwn ccore f2 f4 cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL f5 c= cCOND c= cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL f5
+ ((\b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)) b) |- (((\b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)) b) /\ (((map the) ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) = (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))
T c==> * / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0 f5 c/\ * / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0 f5 c= cmap part cthe cfilter part cisSome cmap part cSOME cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2
- |- (((!f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))) ==> (!f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l))))))) = (!f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))))
T c= c==> ! ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2 ! ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2 ! ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2
- |- ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))))
T c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ |- (((!L. (!w. (!k. (!N. ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))))))) ==> ((\L. (!w. (!k. (!N. ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))))))) L)) = ((\L. (!w. (!k. (!N. ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))))))) L))
T c= c==> ! ! ! ! c==> cgood_list b0 c==> cgood_list_nodes b0 c==> cmarked_list b0 b3 f0 f1 c==> c~ cfinal_list b0 f0 c==> c= ctransform_count b0 b3 f0 f1 b2 c==> c= c, cprev_el ccore b0 f0 b1 b1 f1 c==> cis_restricted chypermap_of_list b0 c==> c~ c? / c= c, cprev_el ccore b0 f0 b4 b4 f1 cF * / ! ! ! c==> cgood_list b0 c==> cgood_list_nodes b0 c==> cmarked_list b0 b3 f0 f1 c==> c~ cfinal_list b0 f0 c==> c= ctransform_count b0 b3 f0 f1 b2 c==> c= c, cprev_el ccore b0 f0 b1 b1 f1 c==> cis_restricted chypermap_of_list b0 c==> c~ c? / c= c, cprev_el ccore b0 f0 b4 b4 f1 cF f2 * / ! ! ! c==> cgood_list b0 c==> cgood_list_nodes b0 c==> cmarked_list b0 b3 f0 f1 c==> c~ cfinal_list b0 f0 c==> c= ctransform_count b0 b3 f0 f1 b2 c==> c= c, cprev_el ccore b0 f0 b1 b1 f1 c==> cis_restricted chypermap_of_list b0 c==> c~ c? / c= c, cprev_el ccore b0 f0 b4 b4 f1 cF f2
+ |- ((\N. (!r. (!x. (!i. ((((((ftrans L) N) r) x) i) = (((COND (i = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE i))))))))) N)
T * / ! ! ! c= cftrans f0 b0 b1 b2 b3 cCOND c= b3 cNUMERAL c_0 cSND b2 cFST cztrans f0 b0 b1 b2 cPRE b3 f1
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- (!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))) |- (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))
T c==> ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3 ! c==> c/\ c= f0 f1 c= f2 b0 c= ccat f0 f2 ccat f1 b0
+ (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) |- ((\x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y))))) x)
T c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 * / ! c= cfilter part cisSome cCOND f0 b0 b1 cCOND f0 cfilter part cisSome b0 cfilter part cisSome b1 f1
- |- ((~ b) ==> (((filter isSome) y) = ((filter isSome) y)))
T c==> c~ f0 c= cfilter part cisSome f1 cfilter part cisSome f1
- (_11244052 = _11244054) |- ((_11244051 = _11244053) ==> (((prev_el _11244051) _11244052) = ((prev_el _11244053) _11244054)))
T c==> c= f0 f1 c==> c= f2 f3 c= cprev_el f2 f0 cprev_el f3 f1
+ |- (!x. (!r. (!L. (!w. (!k. (!N. ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> (?w. ((((prev_el ((core L) r)) w) , w) = x)))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c? / c= c, cprev_el ccore f0 f2 b0 b0 f3
+ (!l. (!f. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l)))) |- (!f. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l)))
T c==> ! ! c==> cALL / c= * b1 b2 b2 b0 c= cMAP b1 b0 b0 ! c==> cALL / c= * b0 b1 b1 f0 c= cMAP b0 f0 f0
- |- (((b = b) ==> ((b ==> (x = t')) ==> (((~ b) ==> (y = e')) ==> ((((COND b) x) y) = (((COND b) t') e'))))) = ((b ==> (x = t')) ==> (((~ b) ==> (y = e')) ==> ((((COND b) x) y) = (((COND b) t') e')))))
T c= c==> c= f0 f0 c==> c==> f0 c= f1 f2 c==> c==> c~ f0 c= f3 f4 c= cCOND f0 f1 f3 cCOND f0 f2 f4 c==> c==> f0 c= f1 f2 c==> c==> c~ f0 c= f3 f4 c= cCOND f0 f1 f3 cCOND f0 f2 f4
+ |- ((\l. (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l))) l)
T * / c= cMAP f0 cMAP f1 b0 cMAP * * part co f0 f1 b0 f2
+ |- (((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (((filter isSome) NIL) = NIL))
T c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cfilter part cisSome cNIL cNIL
- (!f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))) |- ((\g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l))))) g)
T c==> ! ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2 * / ! c==> cALL / c= * f0 b2 * b0 b2 b1 c= cMAP f0 b1 cMAP b0 b1 f1
+ |- (((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b) ==> (((map the) ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) = (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))
T c==> c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 f5 c= cmap part cthe cfilter part cisSome cmap part cSOME cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2
+ ((((prev_el ((core L) r)) w) , w) = x) |- (((((prev_el ((core L) r)) w) , w) = x) /\ ((is_restricted (hypermap_of_list L)) ==> (?w. ((((prev_el ((core L) r)) w) , w) = x))))
T c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c/\ c= c, cprev_el ccore f0 f1 f2 f2 f3 c==> cis_restricted chypermap_of_list f0 c? / c= c, cprev_el ccore f0 f1 b0 b0 f3
- |- (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) e')))
T c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL f5 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f5
- ((((prev_el ((core L) r)) w) , w) = x), (((((transform_count L) N) r) x) = k) |- (F = F)
T c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c==> c= ctransform_count f0 f4 f1 f3 f5 c= cF cF
- (!f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))) |- ((!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l))))) = T)
T c==> ! ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2 c= ! ! c==> cALL / c= * f0 b2 * b0 b2 b1 c= cMAP f0 b1 cMAP b0 b1 cT
+ (((MAP (g o f)) l) = ((MAP g) ((MAP f) l))) |- (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l))
T c==> c= cMAP * * part co f0 f1 f2 cMAP f0 cMAP f1 f2 c= cMAP f0 cMAP f1 f2 cMAP * * part co f0 f1 f2
- (!f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))) |- ((\l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))) l)
T c==> ! ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2 * / c==> cALL / c= * f0 b1 * f1 b1 b0 c= cMAP f0 b0 cMAP f1 b0 f2
- |- (((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = NIL)) ==> (((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) e')))) = (((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) e'))))
T c= c==> c==> c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cNIL cNIL c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL f5 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL f5 c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL f5 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL f5
- (~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) |- (~ ((FST (((((ytrans L) N) r) x) x')) = (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))))
T c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c~ c= cFST cytrans f2 f3 f4 f1 f0 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0
- |- ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))
T c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f7 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 f6 f7
+ |- ((\s. (((cat s) NIL) = s)) s)
T * / c= ccat b0 cNIL b0 f0
+ (~ T) |- ((F ==> (((CONS (SOME (FST x))) ((filter isSome) NIL)) = t')) ==> (((~ F) ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST x)))) ((CONS (SOME (FST x))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND F) t') e'))))
T c==> c~ cT c==> c==> cF c= cCONS cSOME cFST f0 cfilter part cisSome cNIL f1 c==> c==> c~ cF c= cfilter part cisSome cNIL f2 c= cCOND cisSome cSOME cFST f0 cCONS cSOME cFST f0 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND cF f1 f2
+ |- (((!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2))))) ==> ((\t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2))))) t1)) = ((\t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2))))) t1))
T c= c==> ! ! c= c= cCONS f0 b0 cCONS f1 b1 c/\ c= f0 f1 c= b0 b1 * / ! c= c= cCONS f0 b0 cCONS f1 b1 c/\ c= f0 f1 c= b0 b1 f2 * / ! c= c= cCONS f0 b0 cCONS f1 b1 c/\ c= f0 f1 c= b0 b1 f2
- (~ b) |- ((~ b) /\ (((MAP the) y) = ((MAP the) y)))
T c==> c~ f0 c/\ c~ f0 c= cMAP part cthe f1 cMAP part cthe f1
- |- ((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)) = ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))
T c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3 crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3
+ |- ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))) = (((COND g') t') e')))))
T c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL f7 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 f6 f7
- ((((prev_el ((core L) r)) w) , w) = x), (((((transform_count L) N) r) x) = k) |- ((~ ((final_list L) r)) = (~ ((final_list L) r)))
T c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c==> c= ctransform_count f0 f4 f1 f3 f5 c= c~ cfinal_list f0 f1 c~ cfinal_list f0 f1
- |- (((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = t')) ==> (((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) t') e'))))) = ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = t')) ==> (((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) t') e')))))
T c= c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c==> c==> c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cNIL f5 c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL f6 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 f6 c==> c==> c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cNIL f5 c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL f6 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 f6
+ |- ((\g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL cCOND b0 b1 b2 f5
+ |- (((!g'. (!t'. (!e'. (((isSome (SOME (FST (((((ytrans L) N) r) x) x')))) = g') ==> ((g' ==> (((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) = t')) ==> (((~ g') ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((isSome (SOME (FST (((((ytrans L) N) r) x) x')))) = g') ==> ((g' ==> (((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) = t')) ==> (((~ g') ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((isSome (SOME (FST (((((ytrans L) N) r) x) x')))) = g') ==> ((g' ==> (((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) = t')) ==> (((~ g') ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 b0 c==> c==> b0 c= cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL b1 c==> c==> c~ b0 c= cfilter part cisSome cNIL b2 c= cCOND cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND b0 b1 b2 * / ! ! c==> c= cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 b0 c==> c==> b0 c= cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL b1 c==> c==> c~ b0 c= cfilter part cisSome cNIL b2 c= cCOND cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND b0 b1 b2 f5 * / ! ! c==> c= cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 b0 c==> c==> b0 c= cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL b1 c==> c==> c~ b0 c= cfilter part cisSome cNIL b2 c= cCOND cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND b0 b1 b2 f5
+ |- ((\f. (((filter f) (flatten s)) = (flatten ((MAP (filter f)) s)))) f)
T * / c= cfilter b0 cflatten f0 cflatten cMAP * part cfilter b0 f0 f1
+ |- (((~ T) ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND T) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) e')))
T c==> c==> c~ cT c= cfilter part cisSome cNIL f0 c= cCOND cisSome cSOME cFST cytrans f1 f2 f3 f4 f5 cCONS cSOME cFST cytrans f1 f2 f3 f4 f5 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND cT cCONS cSOME cFST cytrans f1 f2 f3 f4 f5 cNIL f0
+ |- (((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (((filter isSome) NIL) = NIL)) ==> (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((filter isSome) NIL)) ((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) e')))) = (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((filter isSome) NIL)) ((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) e'))))
T c= c==> c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cfilter part cisSome cNIL cNIL c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 f5 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cfilter part cisSome cNIL cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f5 c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 f5 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cfilter part cisSome cNIL cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f5
- (_11244041 = _11244042) |- ((((good_list_nodes _11244041) = (good_list_nodes _11244042)) ==> ((good_list_nodes _11244042) \/ (~ (good_list_nodes _11244041)))) = ((good_list_nodes _11244042) \/ (~ (good_list_nodes _11244041))))
T c==> c= f0 f1 c= c==> c= cgood_list_nodes f0 cgood_list_nodes f1 c\/ cgood_list_nodes f1 c~ cgood_list_nodes f0 c\/ cgood_list_nodes f1 c~ cgood_list_nodes f0
- |- ((b = g') ==> ((g' ==> (((filter isSome) x) = t')) ==> (((~ g') ==> (((filter isSome) y) = e')) ==> ((((COND b) ((filter isSome) x)) ((filter isSome) y)) = (((COND g') t') e')))))
T c==> c= f0 f1 c==> c==> f1 c= cfilter part cisSome f2 f3 c==> c==> c~ f1 c= cfilter part cisSome f4 f5 c= cCOND f0 cfilter part cisSome f2 cfilter part cisSome f4 cCOND f1 f3 f5
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- (!f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))) |- ((!f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))) /\ (!f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))))
T c==> ! ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2 c/\ ! ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2 ! ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2
+ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) |- (((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) /\ (NIL = NIL))
T c==> c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c/\ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cNIL cNIL
+ |- (((!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))) ==> ((\e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))) e')) = ((\e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b0 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 f6 b0 * / c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b0 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 f6 b0 f7 * / c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b0 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 f6 b0 f7
+ |- (((!x. (!t. (((filter a) ((CONS x) t)) = (((COND (a x)) ((CONS x) ((filter a) t))) ((filter a) t))))) ==> ((\x. (!t. (((filter a) ((CONS x) t)) = (((COND (a x)) ((CONS x) ((filter a) t))) ((filter a) t))))) x)) = ((\x. (!t. (((filter a) ((CONS x) t)) = (((COND (a x)) ((CONS x) ((filter a) t))) ((filter a) t))))) x))
T c= c==> ! ! c= cfilter f0 cCONS b0 b1 cCOND * f0 b0 cCONS b0 cfilter f0 b1 cfilter f0 b1 * / ! c= cfilter f0 cCONS b0 b1 cCOND * f0 b0 cCONS b0 cfilter f0 b1 cfilter f0 b1 f1 * / ! c= cfilter f0 cCONS b0 b1 cCOND * f0 b0 cCONS b0 cfilter f0 b1 cfilter f0 b1 f1
- ((((prev_el ((core L) r)) w) , w) = x) |- ((~ ((final_list L) r)) = (~ ((final_list L) r)))
T c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c= c~ cfinal_list f0 f1 c~ cfinal_list f0 f1
+ (!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))), (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) |- (((MEM x') ((iota (NUMERAL _0)) k)) ==> ((((MAP the) o ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) x') = ((CONS (((((ftrans L) N) r) x) x')) (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))))))
T c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c==> cMEM f0 ciota cNUMERAL c_0 f1 c= co * part cMAP part cthe * * part co * part cfilter part cisSome / cCONS cSOME cftrans f2 f3 f4 f5 b0 ccat cCOND c= cftrans f2 f3 f4 f5 b0 cFST cytrans f2 f3 f4 f5 b0 cNIL ccat cMAP part cSOME cbetwn ccore f2 f4 cftrans f2 f3 f4 f5 b0 cFST cytrans f2 f3 f4 f5 b0 cCONS cSOME cFST cytrans f2 f3 f4 f5 b0 cNIL cnseq csizel cbetwn cfind_face f2 f5 cytrans f2 f3 f4 f5 b0 cztrans f2 f3 f4 f5 b0 cNONE f0 cCONS cftrans f2 f3 f4 f5 f0 cCOND c= cftrans f2 f3 f4 f5 f0 cFST cytrans f2 f3 f4 f5 f0 cNIL ccat cbetwn ccore f2 f4 cftrans f2 f3 f4 f5 f0 cFST cytrans f2 f3 f4 f5 f0 cCONS cFST cytrans f2 f3 f4 f5 f0 cNIL
- (!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))), ((a = c) /\ (b = d)) |- (((a = c) /\ (b = d)) /\ (((cat a) b) = ((cat c) d)))
T c==> ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3 c==> c/\ c= f0 f1 c= f2 f3 c/\ c/\ c= f0 f1 c= f2 f3 c= ccat f0 f2 ccat f1 f3
+ (!l. (!f. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l)))) |- (!l. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l)))
T c==> ! ! c==> cALL / c= * b1 b2 b2 b0 c= cMAP b1 b0 b0 ! c==> cALL / c= * f0 b1 b1 b0 c= cMAP f0 b0 b0
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((prev_el ((core L) r)) w) , w) = x), (((((transform_count L) N) r) x) = k), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((transform_count L) N) r) x) = k) /\ ((?w. ((((prev_el ((core L) r)) w) , w) = x)) /\ (is_restricted (hypermap_of_list L)))))))) ==> ((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))) ==> (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c==> c= ctransform_count f0 f4 f1 f3 f5 c==> cmarked_list f0 f4 f1 f3 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f4 f1 f3 c/\ c~ cfinal_list f0 f1 c/\ c= ctransform_count f0 f4 f1 f3 f5 c/\ c? / c= c, cprev_el ccore f0 f1 b0 b0 f3 cis_restricted chypermap_of_list f0 c= cdest_triple_full ccore f0 f1 cSND f3 ccore_triple_v4 f0 f4 f1 f3 ccat cflatten cMAP / cCONS cSOME cftrans f0 f4 f1 f3 b0 ccat cCOND c= cftrans f0 f4 f1 f3 b0 cFST cytrans f0 f4 f1 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f4 f1 f3 b0 cFST cytrans f0 f4 f1 f3 b0 cCONS cSOME cFST cytrans f0 f4 f1 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f4 f1 f3 b0 cztrans f0 f4 f1 f3 b0 cNONE ciota cNUMERAL c_0 f5 cCONS cSOME cFST cztrans f0 f4 f1 f3 cPRE f5 cCOND c= cFST cztrans f0 f4 f1 f3 cPRE f5 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f4 f1 f3 cPRE f5 cFST f3 cSOME cFST f3 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f1 cSND f3 ccore_triple_v4 f0 f4 f1 f3 ccat cflatten cMAP / cCONS cftrans f0 f4 f1 f3 b0 cCOND c= cftrans f0 f4 f1 f3 b0 cFST cytrans f0 f4 f1 f3 b0 cNIL ccat cbetwn ccore f0 f1 cftrans f0 f4 f1 f3 b0 cFST cytrans f0 f4 f1 f3 b0 cCONS cFST cytrans f0 f4 f1 f3 b0 cNIL ciota cNUMERAL c_0 f5 cCONS cFST cztrans f0 f4 f1 f3 cPRE f5 cCOND c= cFST cztrans f0 f4 f1 f3 cPRE f5 cFST f3 cNIL crcons cbetwn ccore f0 f1 cFST cztrans f0 f4 f1 f3 cPRE f5 cFST f3 cFST f3
+ |- ((\xs. (((filter isSome) ((MAP SOME) xs)) = ((MAP SOME) xs))) xs)
T * / c= cfilter part cisSome cMAP part cSOME b0 cMAP part cSOME b0 f0
+ (good_list L), (good_list_nodes L), (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((transform_count L) N) r) x) = k) /\ ((?w. ((((prev_el ((core L) r)) w) , w) = x)) /\ (is_restricted (hypermap_of_list L)))))), ((((marked_list L) N) r) x) |- (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cis_restricted chypermap_of_list f0 c==> cmarked_list f0 f1 f2 f3 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f2 cSND f3 ccore_triple_v4 f0 f1 f2 f3 ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3
- |- (((?w. ((((prev_el ((core L) r)) w) , w) = x)) = p') ==> ((p' ==> (((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))))) = q')) ==> (((?w. ((((prev_el ((core L) r)) w) , w) = x)) ==> ((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))) = (p' ==> q'))))
T c==> c= c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 f3 c==> c==> f3 c= c= cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f4 f1 f2 ccat cflatten cMAP / cCONS cSOME cftrans f0 f4 f1 f2 b0 ccat cCOND c= cftrans f0 f4 f1 f2 b0 cFST cytrans f0 f4 f1 f2 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f4 f1 f2 b0 cFST cytrans f0 f4 f1 f2 b0 cCONS cSOME cFST cytrans f0 f4 f1 f2 b0 cNIL cnseq csizel cbetwn cfind_face f0 f2 cytrans f0 f4 f1 f2 b0 cztrans f0 f4 f1 f2 b0 cNONE ciota cNUMERAL c_0 f5 cCONS cSOME cFST cztrans f0 f4 f1 f2 cPRE f5 cCOND c= cFST cztrans f0 f4 f1 f2 cPRE f5 cFST f2 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f4 f1 f2 cPRE f5 cFST f2 cSOME cFST f2 f6 c= c==> c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 c= cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f4 f1 f2 ccat cflatten cMAP / cCONS cSOME cftrans f0 f4 f1 f2 b0 ccat cCOND c= cftrans f0 f4 f1 f2 b0 cFST cytrans f0 f4 f1 f2 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f4 f1 f2 b0 cFST cytrans f0 f4 f1 f2 b0 cCONS cSOME cFST cytrans f0 f4 f1 f2 b0 cNIL cnseq csizel cbetwn cfind_face f0 f2 cytrans f0 f4 f1 f2 b0 cztrans f0 f4 f1 f2 b0 cNONE ciota cNUMERAL c_0 f5 cCONS cSOME cFST cztrans f0 f4 f1 f2 cPRE f5 cCOND c= cFST cztrans f0 f4 f1 f2 cPRE f5 cFST f2 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f4 f1 f2 cPRE f5 cFST f2 cSOME cFST f2 c==> f3 f6
- |- ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = t')) ==> (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) t') e'))))
T c==> c==> c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cNIL f5 c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f6 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 f6
+ |- ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) ==> (((filter isSome) NIL) = t')) ==> (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) ((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) t') e'))))
T c==> c==> c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cfilter part cisSome cNIL f5 c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f6 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 f6
+ |- ((\t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2))))) t1)
T * / ! c= c= cCONS f0 b0 cCONS f1 b1 c/\ c= f0 f1 c= b0 b1 f2
+ |- (((!f. (((filter f) (flatten s)) = (flatten ((MAP (filter f)) s)))) ==> ((\f. (((filter f) (flatten s)) = (flatten ((MAP (filter f)) s)))) f)) = ((\f. (((filter f) (flatten s)) = (flatten ((MAP (filter f)) s)))) f))
T c= c==> ! c= cfilter b0 cflatten f0 cflatten cMAP * part cfilter b0 f0 * / c= cfilter b0 cflatten f0 cflatten cMAP * part cfilter b0 f0 f1 * / c= cfilter b0 cflatten f0 cflatten cMAP * part cfilter b0 f0 f1
- |- ((~ (_11244041 = _11244042)) \/ ((good_list_nodes _11244042) \/ (~ (good_list_nodes _11244041))))
T c\/ c~ c= f0 f1 c\/ cgood_list_nodes f1 c~ cgood_list_nodes f0
- |- ((\e'. ((b = g') ==> ((g' ==> (((filter isSome) x) = t')) ==> (((~ g') ==> (((filter isSome) y) = e')) ==> ((((COND b) ((filter isSome) x)) ((filter isSome) y)) = (((COND g') t') e')))))) e')
T * / c==> c= f0 f1 c==> c==> f1 c= cfilter part cisSome f2 f3 c==> c==> c~ f1 c= cfilter part cisSome f4 b0 c= cCOND f0 cfilter part cisSome f2 cfilter part cisSome f4 cCOND f1 f3 b0 f5
+ (!l. (!f. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l)))) |- ((((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l)) = T)
T c==> ! ! c==> cALL / c= * b1 b2 b2 b0 c= cMAP b1 b0 b0 c= c==> cALL / c= * f0 b0 b0 f1 c= cMAP f0 f1 f1 cT
+ (!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))), (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) |- ((((MEM x') ((iota (NUMERAL _0)) k)) ==> ((((MAP the) o ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) x') = ((CONS (((((ftrans L) N) r) x) x')) (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)))))) = T)
T c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c= c==> cMEM f0 ciota cNUMERAL c_0 f1 c= co * part cMAP part cthe * * part co * part cfilter part cisSome / cCONS cSOME cftrans f2 f3 f4 f5 b0 ccat cCOND c= cftrans f2 f3 f4 f5 b0 cFST cytrans f2 f3 f4 f5 b0 cNIL ccat cMAP part cSOME cbetwn ccore f2 f4 cftrans f2 f3 f4 f5 b0 cFST cytrans f2 f3 f4 f5 b0 cCONS cSOME cFST cytrans f2 f3 f4 f5 b0 cNIL cnseq csizel cbetwn cfind_face f2 f5 cytrans f2 f3 f4 f5 b0 cztrans f2 f3 f4 f5 b0 cNONE f0 cCONS cftrans f2 f3 f4 f5 f0 cCOND c= cftrans f2 f3 f4 f5 f0 cFST cytrans f2 f3 f4 f5 f0 cNIL ccat cbetwn ccore f2 f4 cftrans f2 f3 f4 f5 f0 cFST cytrans f2 f3 f4 f5 f0 cCONS cFST cytrans f2 f3 f4 f5 f0 cNIL cT
+ (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) |- (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))
T c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 ! ! c= cfilter part cisSome cCOND f0 b0 b1 cCOND f0 cfilter part cisSome b0 cfilter part cisSome b1
- (~ ((((prev_el ((core L) r)) w) , w) = (((prev_el ((core L) r)) w) , w))) |- ((~ ((((prev_el ((core L) r)) w) , w) = (((prev_el ((core L) r)) w) , w))) /\ ((((prev_el ((core L) r)) w) , w) = (((prev_el ((core L) r)) w) , w)))
T c==> c~ c= c, cprev_el ccore f0 f1 f2 f2 c, cprev_el ccore f0 f1 f2 f2 c/\ c~ c= c, cprev_el ccore f0 f1 f2 f2 c, cprev_el ccore f0 f1 f2 f2 c= c, cprev_el ccore f0 f1 f2 f2 c, cprev_el ccore f0 f1 f2 f2
+ |- (((!g. (!x. (((f o g) x) = (f (g x))))) ==> ((\g. (!x. (((f o g) x) = (f (g x))))) g)) = ((\g. (!x. (((f o g) x) = (f (g x))))) g))
T c= c==> ! ! c= co f0 b0 b1 * f0 * b0 b1 * / ! c= co f0 b0 b1 * f0 * b0 b1 f1 * / ! c= co f0 b0 b1 * f0 * b0 b1 f1
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?w. t) = t)
T c= c? / f0 f0
- (!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))) |- ((((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))) = T)
T c==> ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3 c= c==> c/\ c= f0 f1 c= f2 f3 c= ccat f0 f2 ccat f1 f3 cT
+ T |- (T /\ (((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) = ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))
T c==> cT c/\ cT c= cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL
- (_11244033 = _11244037) |- ((_11244034 = _11244038) ==> ((~ (_11244035 = _11244039)) \/ ((~ (_11244036 = _11244040)) \/ (((((marked_list _11244037) _11244038) _11244039) _11244040) \/ (~ ((((marked_list _11244033) _11244034) _11244035) _11244036))))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ cmarked_list f1 f3 f5 f7 c~ cmarked_list f0 f2 f4 f6
- |- ((\g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND b0 b1 b2 f5
- |- ((((~ b) ==> (((MAP the) y) = ((MAP the) y))) ==> ((((COND b) ((MAP the) x)) ((MAP the) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))) = ((((COND b) ((MAP the) x)) ((MAP the) y)) = (((COND b) ((MAP the) x)) ((MAP the) y))))
T c= c==> c==> c~ f0 c= cMAP part cthe f1 cMAP part cthe f1 c= cCOND f0 cMAP part cthe f2 cMAP part cthe f1 cCOND f0 cMAP part cthe f2 cMAP part cthe f1 c= cCOND f0 cMAP part cthe f2 cMAP part cthe f1 cCOND f0 cMAP part cthe f2 cMAP part cthe f1
- |- ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))))
T c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL
- |- ((_11244045 = _11244046) ==> ((hypermap_of_list _11244045) = (hypermap_of_list _11244046)))
T c==> c= f0 f1 c= chypermap_of_list f0 chypermap_of_list f1
+ |- ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s)
T * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1
- |- ((\e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = (((COND g') t') e')))))) e')
T * / c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b0 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND f5 f6 b0 f7
+ |- (((map the) ((filter isSome) ((map SOME) b))) = b)
T c= cmap part cthe cfilter part cisSome cmap part cSOME f0 f0
+ |- ((\t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b1 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 b0 b1 f6
- (~ (x' = (NUMERAL _0))) |- (~ ((NUMERAL _0) = x'))
T c==> c~ c= f0 cNUMERAL c_0 c~ c= cNUMERAL c_0 f0
- |- ((\e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = (((COND g') t') e')))))) e')
T * / c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b0 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND f5 f6 b0 f7
+ (is_restricted (hypermap_of_list L)), ((((prev_el ((core L) r)) w) , w) = x) |- ((is_restricted (hypermap_of_list L)) /\ (?w. ((((prev_el ((core L) r)) w) , w) = x)))
T c==> cis_restricted chypermap_of_list f0 c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c/\ cis_restricted chypermap_of_list f0 c? / c= c, cprev_el ccore f0 f1 b0 b0 f3
- |- ((_11244027 = _11244028) ==> ((is_restricted _11244028) \/ (~ (is_restricted _11244027))))
T c==> c= f0 f1 c\/ cis_restricted f1 c~ cis_restricted f0
+ (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) |- ((~ T) ==> (((filter isSome) ((cat (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE))) = ((cat (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL))) ((filter isSome) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE)))))
T c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c==> c~ cT c= cfilter part cisSome ccat cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 f4 cztrans f0 f1 f2 f3 f4 cNONE ccat cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL cfilter part cisSome cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 f4 cztrans f0 f1 f2 f3 f4 cNONE
- |- ((\e'. ((b = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> (y = e')) ==> ((((COND b) x) y) = (((COND g') t') e')))))) e')
T * / c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 f5
+ |- ((\x. (!k. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((transform_count L) N) r) x) = k) /\ ((?w. ((((prev_el ((core L) r)) w) , w) = x)) /\ (is_restricted (hypermap_of_list L)))))))) ==> ((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))))) x)
T * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ c= ctransform_count f0 f1 f2 b0 b1 c/\ c? / c= c, cprev_el ccore f0 f2 b2 b2 b0 cis_restricted chypermap_of_list f0 c= cdest_triple_full ccore f0 f2 cSND b0 ccore_triple_v4 f0 f1 f2 b0 ccat cflatten cMAP / cCONS cSOME cftrans f0 f1 f2 b0 b2 ccat cCOND c= cftrans f0 f1 f2 b0 b2 cFST cytrans f0 f1 f2 b0 b2 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 b0 b2 cFST cytrans f0 f1 f2 b0 b2 cCONS cSOME cFST cytrans f0 f1 f2 b0 b2 cNIL cnseq csizel cbetwn cfind_face f0 b0 cytrans f0 f1 f2 b0 b2 cztrans f0 f1 f2 b0 b2 cNONE ciota cNUMERAL c_0 b1 cCONS cSOME cFST cztrans f0 f1 f2 b0 cPRE b1 cCOND c= cFST cztrans f0 f1 f2 b0 cPRE b1 cFST b0 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 b0 cPRE b1 cFST b0 cSOME cFST b0 f3
+ |- (((MAP the) ((filter isSome) ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))))
T c= cMAP part cthe cfilter part cisSome ccat cflatten cMAP / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3
+ |- (((!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t))))) ==> ((\h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t))))) h)) = ((\h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t))))) h))
T c= c==> ! ! c= cMAP f0 cCONS b0 b1 cCONS * f0 b0 cMAP f0 b1 * / ! c= cMAP f0 cCONS b0 b1 cCONS * f0 b0 cMAP f0 b1 f1 * / ! c= cMAP f0 cCONS b0 b1 cCONS * f0 b0 cMAP f0 b1 f1
+ |- ((!k. (!N. ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> (?w. ((((prev_el ((core L) r)) w) , w) = x))))))))))) = T)
T c= ! ! c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 b1 f1 f2 c==> c~ cfinal_list f0 f1 c==> c= ctransform_count f0 b1 f1 f2 b0 c==> c= c, cprev_el ccore f0 f1 f3 f3 f2 c==> cis_restricted chypermap_of_list f0 c? / c= c, cprev_el ccore f0 f1 b2 b2 f2 cT
- |- ((((x' = (NUMERAL _0)) = (x' = (NUMERAL _0))) ==> (((x' = (NUMERAL _0)) ==> ((SND x) = t')) ==> (((~ (x' = (NUMERAL _0))) ==> ((FST (((((ztrans L) N) r) x) (PRE x'))) = e')) ==> ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (((COND (x' = (NUMERAL _0))) t') e'))))) = (((x' = (NUMERAL _0)) ==> ((SND x) = t')) ==> (((~ (x' = (NUMERAL _0))) ==> ((FST (((((ztrans L) N) r) x) (PRE x'))) = e')) ==> ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (((COND (x' = (NUMERAL _0))) t') e')))))
T c= c==> c= c= f0 cNUMERAL c_0 c= f0 cNUMERAL c_0 c==> c==> c= f0 cNUMERAL c_0 c= cSND f1 f2 c==> c==> c~ c= f0 cNUMERAL c_0 c= cFST cztrans f3 f4 f5 f1 cPRE f0 f6 c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f3 f4 f5 f1 cPRE f0 cCOND c= f0 cNUMERAL c_0 f2 f6 c==> c==> c= f0 cNUMERAL c_0 c= cSND f1 f2 c==> c==> c~ c= f0 cNUMERAL c_0 c= cFST cztrans f3 f4 f5 f1 cPRE f0 f6 c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f3 f4 f5 f1 cPRE f0 cCOND c= f0 cNUMERAL c_0 f2 f6
+ |- (((!k. (!N. ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))))) ==> ((\k. (!N. ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))))) k)) = ((\k. (!N. ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))))) k))
T c= c==> ! ! c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 b1 f1 f2 c==> c~ cfinal_list f0 f1 c==> c= ctransform_count f0 b1 f1 f2 b0 c==> c= c, cprev_el ccore f0 f1 f3 f3 f2 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f1 b2 b2 f2 cF * / ! c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 b1 f1 f2 c==> c~ cfinal_list f0 f1 c==> c= ctransform_count f0 b1 f1 f2 b0 c==> c= c, cprev_el ccore f0 f1 f3 f3 f2 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f1 b2 b2 f2 cF f4 * / ! c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 b1 f1 f2 c==> c~ cfinal_list f0 f1 c==> c= ctransform_count f0 b1 f1 f2 b0 c==> c= c, cprev_el ccore f0 f1 f3 f3 f2 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f1 b2 b2 f2 cF f4
- |- ((b ==> (x = t')) ==> (((~ b) ==> (y = e')) ==> ((((COND b) x) y) = (((COND b) t') e'))))
T c==> c==> f0 c= f1 f2 c==> c==> c~ f0 c= f3 f4 c= cCOND f0 f1 f3 cCOND f0 f2 f4
+ |- (((!f. (!g. (!x. (((f o g) x) = (f (g x)))))) ==> ((\f. (!g. (!x. (((f o g) x) = (f (g x)))))) f)) = ((\f. (!g. (!x. (((f o g) x) = (f (g x)))))) f))
T c= c==> ! ! ! c= co b0 b1 b2 * b0 * b1 b2 * / ! ! c= co b0 b1 b2 * b0 * b1 b2 f0 * / ! ! c= co b0 b1 b2 * b0 * b1 b2 f0
+ |- (((!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (((MAP the) NIL) = t')) ==> (((~ g') ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((MAP the) NIL)) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND g') t') e')))))) ==> ((\e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (((MAP the) NIL) = t')) ==> (((~ g') ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((MAP the) NIL)) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND g') t') e')))))) e')) = ((\e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (((MAP the) NIL) = t')) ==> (((~ g') ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((MAP the) NIL)) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cMAP part cthe cNIL f6 c==> c==> c~ f5 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b0 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cMAP part cthe cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND f5 f6 b0 * / c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cMAP part cthe cNIL f6 c==> c==> c~ f5 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b0 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cMAP part cthe cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND f5 f6 b0 f7 * / c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cMAP part cthe cNIL f6 c==> c==> c~ f5 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b0 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cMAP part cthe cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND f5 f6 b0 f7
+ |- ((\t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2)))) t2)
T * / c= c= cCONS f0 f1 cCONS f2 b0 c/\ c= f0 f2 c= f1 b0 f3
- |- ((\e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND g') t') e')))))) e')
T * / c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b0 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND f5 f6 b0 f7
- |- ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = t')) ==> (((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) t') e'))))
T c==> c==> c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cNIL f5 c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL f6 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 f6
- |- (((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = t')) ==> (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) t') e'))))) = ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = t')) ==> (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) t') e')))))
T c= c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c==> c==> c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cNIL f5 c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL f6 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 f6 c==> c==> c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cNIL f5 c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL f6 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 f6
+ (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) |- (T ==> (((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) ((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))) = ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))))))
T c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c==> cT c= cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL
+ |- (((!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (((filter isSome) NIL) = t')) ==> (((~ g') ==> (((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((filter isSome) NIL)) ((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (((filter isSome) NIL) = t')) ==> (((~ g') ==> (((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((filter isSome) NIL)) ((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (((filter isSome) NIL) = t')) ==> (((~ g') ==> (((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((filter isSome) NIL)) ((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cfilter part cisSome cNIL b0 c==> c==> c~ f5 c= cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cfilter part cisSome cNIL cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND f5 b0 b1 * / ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cfilter part cisSome cNIL b0 c==> c==> c~ f5 c= cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cfilter part cisSome cNIL cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND f5 b0 b1 f6 * / ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cfilter part cisSome cNIL b0 c==> c==> c~ f5 c= cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cfilter part cisSome cNIL cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND f5 b0 b1 f6
- (_11244043 = _11244044) |- ((((good_list _11244043) = (good_list _11244044)) ==> ((good_list _11244044) \/ (~ (good_list _11244043)))) = ((good_list _11244044) \/ (~ (good_list _11244043))))
T c==> c= f0 f1 c= c==> c= cgood_list f0 cgood_list f1 c\/ cgood_list f1 c~ cgood_list f0 c\/ cgood_list f1 c~ cgood_list f0
+ |- (((!x. (((MAP f) (flatten x)) = (flatten ((MAP (MAP f)) x)))) ==> ((\x. (((MAP f) (flatten x)) = (flatten ((MAP (MAP f)) x)))) x)) = ((\x. (((MAP f) (flatten x)) = (flatten ((MAP (MAP f)) x)))) x))
T c= c==> ! c= cMAP f0 cflatten b0 cflatten cMAP * part cMAP f0 b0 * / c= cMAP f0 cflatten b0 cflatten cMAP * part cMAP f0 b0 f1 * / c= cMAP f0 cflatten b0 cflatten cMAP * part cMAP f0 b0 f1
- |- (((x' = (NUMERAL _0)) ==> ((SND x) = t')) ==> (((~ (x' = (NUMERAL _0))) ==> ((FST (((((ztrans L) N) r) x) (PRE x'))) = e')) ==> ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (((COND (x' = (NUMERAL _0))) t') e'))))
T c==> c==> c= f0 cNUMERAL c_0 c= cSND f1 f2 c==> c==> c~ c= f0 cNUMERAL c_0 c= cFST cztrans f3 f4 f5 f1 cPRE f0 f6 c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f3 f4 f5 f1 cPRE f0 cCOND c= f0 cNUMERAL c_0 f2 f6
- |- ((~ (_11244055 = _11244057)) \/ ((~ (_11244056 = _11244058)) \/ ((_11244055 , _11244056) = (_11244057 , _11244058))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- |- ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)))
T c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL
+ (~ T) |- ((((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL))) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) ((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)))) = ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) ((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL))))
T c==> c~ cT c= c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL
- |- (((!g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND b0 b1 b2 * / ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND b0 b1 b2 f5 * / ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND b0 b1 b2 f5
+ |- (T = (!x. (((MEM x) b) ==> (((the o SOME) x) = x))))
T c= cT ! c==> cMEM b0 f0 c= co part cthe part cSOME b0 b0
+ |- (((!N. (!r. (!x. (!i. ((((((ftrans L) N) r) x) i) = (((COND (i = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE i))))))))) ==> ((\N. (!r. (!x. (!i. ((((((ftrans L) N) r) x) i) = (((COND (i = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE i))))))))) N)) = ((\N. (!r. (!x. (!i. ((((((ftrans L) N) r) x) i) = (((COND (i = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE i))))))))) N))
T c= c==> ! ! ! ! c= cftrans f0 b0 b1 b2 b3 cCOND c= b3 cNUMERAL c_0 cSND b2 cFST cztrans f0 b0 b1 b2 cPRE b3 * / ! ! ! c= cftrans f0 b0 b1 b2 b3 cCOND c= b3 cNUMERAL c_0 cSND b2 cFST cztrans f0 b0 b1 b2 cPRE b3 f1 * / ! ! ! c= cftrans f0 b0 b1 b2 b3 cCOND c= b3 cNUMERAL c_0 cSND b2 cFST cztrans f0 b0 b1 b2 cPRE b3 f1
+ |- (((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) ==> (((MAP the) NIL) = NIL))
T c==> c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cMAP part cthe cNIL cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> c= ctransform_count f0 f2 f1 f3 f4 c==> c= c, cprev_el ccore f0 f1 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f1 b0 b0 f3 cF
- ((ALL (\x. ((f x) = (g x)))) l) |- ((!f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))) ==> (((MAP f) l) = ((MAP g) l)))
T c==> cALL / c= * f0 b0 * f1 b0 f2 c==> ! ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2 c= cMAP f0 f2 cMAP f1 f2
+ |- (((!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))) ==> ((\e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))) e')) = ((\e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b0 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 f6 b0 * / c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b0 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 f6 b0 f7 * / c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b0 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 f6 b0 f7
- |- (((!g'. (!t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b2 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND b0 b1 b2 * / ! ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b2 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND b0 b1 b2 f5 * / ! ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b2 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND b0 b1 b2 f5
- (!l. (!f. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l)))), ((ALL (\x. ((f x) = x))) l) |- (((ALL (\x. ((f x) = x))) l) /\ (((MAP f) l) = l))
T c==> ! ! c==> cALL / c= * b1 b2 b2 b0 c= cMAP b1 b0 b0 c==> cALL / c= * f0 b0 b0 f1 c/\ cALL / c= * f0 b0 b0 f1 c= cMAP f0 f1 f1
- ((((prev_el ((core L) r)) w) , w) = x), (((((transform_count L) N) r) x) = k) |- ((good_list_nodes L) = (good_list_nodes L))
T c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c==> c= ctransform_count f0 f4 f1 f3 f5 c= cgood_list_nodes f0 cgood_list_nodes f0
+ |- ((\q'. ((((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))))) = p') ==> ((p' ==> ((((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)))))) = q')) ==> ((((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))))) ==> (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))))) = (p' ==> q'))))) q')
T * / c==> c= c= cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f3 f1 f2 ccat cflatten cMAP / cCONS cSOME cftrans f0 f3 f1 f2 b1 ccat cCOND c= cftrans f0 f3 f1 f2 b1 cFST cytrans f0 f3 f1 f2 b1 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b1 cFST cytrans f0 f3 f1 f2 b1 cCONS cSOME cFST cytrans f0 f3 f1 f2 b1 cNIL cnseq csizel cbetwn cfind_face f0 f2 cytrans f0 f3 f1 f2 b1 cztrans f0 f3 f1 f2 b1 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cSOME cFST f2 f5 c==> c==> f5 c= c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f3 f1 f2 ccat cflatten cMAP / cCONS cftrans f0 f3 f1 f2 b1 cCOND c= cftrans f0 f3 f1 f2 b1 cFST cytrans f0 f3 f1 f2 b1 cNIL ccat cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b1 cFST cytrans f0 f3 f1 f2 b1 cCONS cFST cytrans f0 f3 f1 f2 b1 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cFST f2 b0 c= c==> c= cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f3 f1 f2 ccat cflatten cMAP / cCONS cSOME cftrans f0 f3 f1 f2 b1 ccat cCOND c= cftrans f0 f3 f1 f2 b1 cFST cytrans f0 f3 f1 f2 b1 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b1 cFST cytrans f0 f3 f1 f2 b1 cCONS cSOME cFST cytrans f0 f3 f1 f2 b1 cNIL cnseq csizel cbetwn cfind_face f0 f2 cytrans f0 f3 f1 f2 b1 cztrans f0 f3 f1 f2 b1 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cSOME cFST f2 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f3 f1 f2 ccat cflatten cMAP / cCONS cftrans f0 f3 f1 f2 b1 cCOND c= cftrans f0 f3 f1 f2 b1 cFST cytrans f0 f3 f1 f2 b1 cNIL ccat cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b1 cFST cytrans f0 f3 f1 f2 b1 cCONS cFST cytrans f0 f3 f1 f2 b1 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cFST f2 c==> f5 b0 f6
- |- ((_11244052 = _11244054) ==> ((~ (_11244051 = _11244053)) \/ (((prev_el _11244051) _11244052) = ((prev_el _11244053) _11244054))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cprev_el f2 f0 cprev_el f3 f1
+ (!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) |- (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y))))
T c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 ! c= cMAP part cthe cCOND f0 f1 b0 cCOND f0 cMAP part cthe f1 cMAP part cthe b0
- |- (((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) ==> ((((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))) = q')) ==> (((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) ==> (((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))))) = ((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) ==> q')))
T c==> c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c= c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL f5 c= c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 f5
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- ((\p'. (!q'. (((!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) = p') ==> ((p' ==> ((((MAP the) ((filter isSome) ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)))))) = q')) ==> (((!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) ==> (((MAP the) ((filter isSome) ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))))) = (p' ==> q')))))) p')
T * / ! c==> c= ! ! ! c= cfilter part cisSome cCOND b2 b3 b4 cCOND b2 cfilter part cisSome b3 cfilter part cisSome b4 b0 c==> c==> b0 c= c= cMAP part cthe cfilter part cisSome ccat cflatten cMAP / cCONS cSOME cftrans f0 f1 f2 f3 b2 ccat cCOND c= cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cCONS cSOME cFST cytrans f0 f1 f2 f3 b2 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b2 cztrans f0 f1 f2 f3 b2 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b2 cCOND c= cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cCONS cFST cytrans f0 f1 f2 f3 b2 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3 b1 c= c==> ! ! ! c= cfilter part cisSome cCOND b2 b3 b4 cCOND b2 cfilter part cisSome b3 cfilter part cisSome b4 c= cMAP part cthe cfilter part cisSome ccat cflatten cMAP / cCONS cSOME cftrans f0 f1 f2 f3 b2 ccat cCOND c= cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cCONS cSOME cFST cytrans f0 f1 f2 f3 b2 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b2 cztrans f0 f1 f2 f3 b2 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b2 cCOND c= cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cCONS cFST cytrans f0 f1 f2 f3 b2 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3 c==> b0 b1 f5
- (!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))) |- (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))
T c==> ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3 ! ! ! c==> c/\ c= f0 b1 c= b0 b2 c= ccat f0 b0 ccat b1 b2
- |- (((!g'. (!t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b2 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND b0 b1 b2 * / ! ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b2 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND b0 b1 b2 f5 * / ! ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b2 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND b0 b1 b2 f5
+ |- ((\x. (!t. (((filter a) ((CONS x) t)) = (((COND (a x)) ((CONS x) ((filter a) t))) ((filter a) t))))) x)
T * / ! c= cfilter f0 cCONS b0 b1 cCOND * f0 b0 cCONS b0 cfilter f0 b1 cfilter f0 b1 f1
- |- (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) e')))
T c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL f5 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f5
- T |- (T = T)
T c==> cT c= cT cT
+ (((((transform_count L) N) r) x) = k) |- ((((((transform_count L) N) r) x) = k) /\ (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> (?w. ((((prev_el ((core L) r)) w) , w) = x)))))
T c==> c= ctransform_count f0 f1 f2 f3 f4 c/\ c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c? / c= c, cprev_el ccore f0 f2 b0 b0 f3
+ |- ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = t')) ==> (((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) t') e'))))
T c==> c==> c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cNIL f5 c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= ccat cbetwn ccore f2 f4 cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL f6 c= cCOND c= cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 f6
+ (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) |- (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))
T c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c= cfilter part cisSome cCOND f0 f1 f2 cCOND f0 cfilter part cisSome f1 cfilter part cisSome f2
+ |- (((!g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL cCOND b0 b1 b2 * / ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL cCOND b0 b1 b2 f5 * / ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL cCOND b0 b1 b2 f5
- |- ((\t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b1 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 b0 b1 f6
- |- (((!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND g') t') e')))))) ==> ((\e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND g') t') e')))))) e')) = ((\e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b0 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 f6 b0 * / c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b0 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 f6 b0 f7 * / c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b0 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 f6 b0 f7
- |- (((!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND f5 b0 b1 * / ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND f5 b0 b1 f6 * / ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND f5 b0 b1 f6
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((transform_count L) N) r) x) = k), ((((marked_list L) N) r) x) |- (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= ctransform_count f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c==> c= c, cprev_el ccore f0 f1 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f1 b0 b0 f3 cF
+ |- ((\g'. (!t'. (!e'. (((isSome (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) = g') ==> ((g' ==> (((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) ((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))) = t')) ==> (((~ g') ==> (((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = e')) ==> ((((COND (isSome (SOME (FST (((((ztrans L) N) r) x) (PRE k)))))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) ((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))))) ((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= cisSome cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 b0 c==> c==> b0 c= cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b1 c==> c==> c~ b0 c= cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b2 c= cCOND cisSome cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND b0 b1 b2 f5
- |- ((_11244041 = _11244042) ==> ((good_list_nodes _11244042) \/ (~ (good_list_nodes _11244041))))
T c==> c= f0 f1 c\/ cgood_list_nodes f1 c~ cgood_list_nodes f0
- |- ((\t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND f5 b0 b1 f6
+ |- ((((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)) = ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)))) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))))) = ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)))))
T c= c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL
+ |- ((\s. (!f. (((filter f) (flatten s)) = (flatten ((MAP (filter f)) s))))) s)
T * / ! c= cfilter b1 cflatten b0 cflatten cMAP * part cfilter b1 b0 f0
+ |- ((\s2. (((map f) ((cat s1) s2)) = ((cat ((map f) s1)) ((map f) s2)))) s2)
T * / c= cmap f0 ccat f1 b0 ccat cmap f0 f1 cmap f0 b0 f2
- |- (((!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))) ==> ((\e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))) e')) = ((\e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b0 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 f6 b0 * / c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b0 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 f6 b0 f7 * / c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b0 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 f6 b0 f7
- |- (((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (NIL = t')) ==> (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) t') e'))))) = ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (NIL = t')) ==> (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) t') e')))))
T c= c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c==> c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cNIL f5 c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f6 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 f6 c==> c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cNIL f5 c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f6 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 f6
+ ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b) |- (((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b) /\ (((map the) ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) = (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))
T c==> c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 f5 c/\ c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 f5 c= cmap part cthe cfilter part cisSome cmap part cSOME cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2
+ (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))), (~ T) |- ((~ T) /\ (((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL))))
T c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c==> c~ cT c/\ c~ cT c= cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL
+ |- (((!g'. (!t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b2 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND b0 b1 b2 * / ! ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b2 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND b0 b1 b2 f5 * / ! ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b2 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND b0 b1 b2 f5
+ |- (((!t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b1 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 b0 b1 * / ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b1 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 b0 b1 f6 * / ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b1 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 b0 b1 f6
+ |- ((\e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))) e')
T * / c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b0 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 f6 b0 f7
+ |- (((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) = p') ==> ((p' ==> ((((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ (((MAP the) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))) = q')) ==> (((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) ==> (((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ (((MAP the) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))))) = (p' ==> q'))))
T c==> c= ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 f0 c==> c==> f0 c= c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f1 f2 f3 f4 b0 ccat cCOND c= cftrans f1 f2 f3 f4 b0 cFST cytrans f1 f2 f3 f4 b0 cNIL ccat cMAP part cSOME cbetwn ccore f1 f3 cftrans f1 f2 f3 f4 b0 cFST cytrans f1 f2 f3 f4 b0 cCONS cSOME cFST cytrans f1 f2 f3 f4 b0 cNIL cnseq csizel cbetwn cfind_face f1 f4 cytrans f1 f2 f3 f4 b0 cztrans f1 f2 f3 f4 b0 cNONE ciota cNUMERAL c_0 f5 cflatten cMAP / cCONS cftrans f1 f2 f3 f4 b0 cCOND c= cftrans f1 f2 f3 f4 b0 cFST cytrans f1 f2 f3 f4 b0 cNIL ccat cbetwn ccore f1 f3 cftrans f1 f2 f3 f4 b0 cFST cytrans f1 f2 f3 f4 b0 cCONS cFST cytrans f1 f2 f3 f4 b0 cNIL ciota cNUMERAL c_0 f5 c= cMAP part cthe cCOND c= cFST cztrans f1 f2 f3 f4 cPRE f5 cFST f4 cNIL ccat cMAP part cSOME cbetwn ccore f1 f3 cFST cztrans f1 f2 f3 f4 cPRE f5 cFST f4 cCONS cSOME cFST f4 cNIL cCOND c= cFST cztrans f1 f2 f3 f4 cPRE f5 cFST f4 cNIL ccat cbetwn ccore f1 f3 cFST cztrans f1 f2 f3 f4 cPRE f5 cFST f4 cCONS cFST f4 cNIL f6 c= c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f1 f2 f3 f4 b0 ccat cCOND c= cftrans f1 f2 f3 f4 b0 cFST cytrans f1 f2 f3 f4 b0 cNIL ccat cMAP part cSOME cbetwn ccore f1 f3 cftrans f1 f2 f3 f4 b0 cFST cytrans f1 f2 f3 f4 b0 cCONS cSOME cFST cytrans f1 f2 f3 f4 b0 cNIL cnseq csizel cbetwn cfind_face f1 f4 cytrans f1 f2 f3 f4 b0 cztrans f1 f2 f3 f4 b0 cNONE ciota cNUMERAL c_0 f5 cflatten cMAP / cCONS cftrans f1 f2 f3 f4 b0 cCOND c= cftrans f1 f2 f3 f4 b0 cFST cytrans f1 f2 f3 f4 b0 cNIL ccat cbetwn ccore f1 f3 cftrans f1 f2 f3 f4 b0 cFST cytrans f1 f2 f3 f4 b0 cCONS cFST cytrans f1 f2 f3 f4 b0 cNIL ciota cNUMERAL c_0 f5 c= cMAP part cthe cCOND c= cFST cztrans f1 f2 f3 f4 cPRE f5 cFST f4 cNIL ccat cMAP part cSOME cbetwn ccore f1 f3 cFST cztrans f1 f2 f3 f4 cPRE f5 cFST f4 cCONS cSOME cFST f4 cNIL cCOND c= cFST cztrans f1 f2 f3 f4 cPRE f5 cFST f4 cNIL ccat cbetwn ccore f1 f3 cFST cztrans f1 f2 f3 f4 cPRE f5 cFST f4 cCONS cFST f4 cNIL c==> f0 f6
+ |- ((((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))) = ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))))
T c= c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL
- |- (((!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)) = (((COND g') t') e')))))) ==> ((\e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)) = (((COND g') t') e')))))) e')) = ((\e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL b0 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cCOND f5 f6 b0 * / c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL b0 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cCOND f5 f6 b0 f7 * / c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL b0 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cCOND f5 f6 b0 f7
- |- ((\g'. (!t'. (!e'. ((b = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> (y = e')) ==> ((((COND b) x) y) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= f0 b0 c==> c==> b0 c= f1 b1 c==> c==> c~ b0 c= f2 b2 c= cCOND f0 f1 f2 cCOND b0 b1 b2 f3
+ |- ((\p'. (!q'. (((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) = p') ==> ((p' ==> ((((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ (((MAP the) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))) = q')) ==> (((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) ==> (((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ (((MAP the) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))))) = (p' ==> q')))))) p')
T * / ! c==> c= ! ! ! c= cMAP part cthe cCOND b2 b3 b4 cCOND b2 cMAP part cthe b3 cMAP part cthe b4 b0 c==> c==> b0 c= c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b2 ccat cCOND c= cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cCONS cSOME cFST cytrans f0 f1 f2 f3 b2 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b2 cztrans f0 f1 f2 f3 b2 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b2 cCOND c= cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cCONS cFST cytrans f0 f1 f2 f3 b2 cNIL ciota cNUMERAL c_0 f4 c= cMAP part cthe cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL b1 c= c==> ! ! ! c= cMAP part cthe cCOND b2 b3 b4 cCOND b2 cMAP part cthe b3 cMAP part cthe b4 c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b2 ccat cCOND c= cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cCONS cSOME cFST cytrans f0 f1 f2 f3 b2 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b2 cztrans f0 f1 f2 f3 b2 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b2 cCOND c= cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cCONS cFST cytrans f0 f1 f2 f3 b2 cNIL ciota cNUMERAL c_0 f4 c= cMAP part cthe cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL c==> b0 b1 f5
+ ((((prev_el ((core L) r)) w) , w) = x) |- (?w. ((((prev_el ((core L) r)) w) , w) = x))
T c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c? / c= c, cprev_el ccore f0 f1 b0 b0 f3
- |- (((!t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL b1 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 b0 b1 * / ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL b1 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 b0 b1 f6 * / ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL b1 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 b0 b1 f6
- |- (((!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = (((COND g') t') e')))))) ==> ((\e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = (((COND g') t') e')))))) e')) = ((\e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b0 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND f5 f6 b0 * / c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b0 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND f5 f6 b0 f7 * / c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b0 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND f5 f6 b0 f7
+ |- ((\t'. (!e'. (((isSome (SOME (((((ftrans L) N) r) x) x'))) = g') ==> ((g' ==> (((CONS (SOME (((((ftrans L) N) r) x) x'))) ((filter isSome) ((cat (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE)))) = t')) ==> (((~ g') ==> (((filter isSome) ((cat (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE))) = e')) ==> ((((COND (isSome (SOME (((((ftrans L) N) r) x) x')))) ((CONS (SOME (((((ftrans L) N) r) x) x'))) ((filter isSome) ((cat (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE))))) ((filter isSome) ((cat (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE)))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cisSome cSOME cftrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cCONS cSOME cftrans f0 f1 f2 f3 f4 cfilter part cisSome ccat cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 f4 cztrans f0 f1 f2 f3 f4 cNONE b0 c==> c==> c~ f5 c= cfilter part cisSome ccat cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 f4 cztrans f0 f1 f2 f3 f4 cNONE b1 c= cCOND cisSome cSOME cftrans f0 f1 f2 f3 f4 cCONS cSOME cftrans f0 f1 f2 f3 f4 cfilter part cisSome ccat cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 f4 cztrans f0 f1 f2 f3 f4 cNONE cfilter part cisSome ccat cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 f4 cztrans f0 f1 f2 f3 f4 cNONE cCOND f5 b0 b1 f6
- (_11244027 = _11244028) |- ((((is_restricted _11244027) = (is_restricted _11244028)) ==> ((is_restricted _11244028) \/ (~ (is_restricted _11244027)))) = ((is_restricted _11244028) \/ (~ (is_restricted _11244027))))
T c==> c= f0 f1 c= c==> c= cis_restricted f0 cis_restricted f1 c\/ cis_restricted f1 c~ cis_restricted f0 c\/ cis_restricted f1 c~ cis_restricted f0
+ |- (((!s. (((cat s) NIL) = s)) ==> ((\s. (((cat s) NIL) = s)) s)) = ((\s. (((cat s) NIL) = s)) s))
T c= c==> ! c= ccat b0 cNIL b0 * / c= ccat b0 cNIL b0 f0 * / c= ccat b0 cNIL b0 f0
+ ((!x. (((MEM x) s) ==> (a x))) = ((all a) s)) |- (((all a) s) = (!x. (((MEM x) s) ==> (a x))))
T c==> c= ! c==> cMEM b0 f0 * f1 b0 call f1 f0 c= call f1 f0 ! c==> cMEM b0 f0 * f1 b0
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- ((\s. (!z. (((rcons s) z) = ((cat s) ((CONS z) NIL))))) s)
T * / ! c= crcons b0 b1 ccat b0 cCONS b1 cNIL f0
+ |- ((\g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3 b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3 cCOND b0 b1 b2 f5
+ |- ((((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))) = ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))))
T c= c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= ccat cfilter part cisSome cmap part cSOME cbetwn ccore f2 f4 cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL c= cCOND c= cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f2 f4 cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL c= cCOND c= cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f2 f4 cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL
+ |- ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = t')) ==> (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) t') e'))))
T c==> c==> c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cNIL f5 c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f6 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 f6
- |- ((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))) = ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))
T c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3
+ T, (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) |- (T /\ (((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) ((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))) = ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))))))
T c==> cT c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c/\ cT c= cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL
+ |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((transform_count L) N) r) x) = k) /\ ((?w. ((((prev_el ((core L) r)) w) , w) = x)) /\ (is_restricted (hypermap_of_list L)))))))) ==> (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))))) = T)
T c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cis_restricted chypermap_of_list f0 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f2 cSND f3 ccore_triple_v4 f0 f1 f2 f3 ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3 cT
- |- ((~ ((((prev_el ((core L) r)) w) , w) = (((prev_el ((core L) r)) w) , w))) ==> ((((prev_el ((core L) r)) w) , w) = (((prev_el ((core L) r)) w) , w)))
T c==> c~ c= c, cprev_el ccore f0 f1 f2 f2 c, cprev_el ccore f0 f1 f2 f2 c= c, cprev_el ccore f0 f1 f2 f2 c, cprev_el ccore f0 f1 f2 f2
- |- ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))))
T c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0
+ |- (((!x. ((the (SOME x)) = x)) ==> ((\x. ((the (SOME x)) = x)) x)) = ((\x. ((the (SOME x)) = x)) x))
T c= c==> ! c= cthe cSOME b0 b0 * / c= cthe cSOME b0 b0 f0 * / c= cthe cSOME b0 b0 f0
- |- ((\e'. ((b = g') ==> ((g' ==> (((MAP the) x) = t')) ==> (((~ g') ==> (((MAP the) y) = e')) ==> ((((COND b) ((MAP the) x)) ((MAP the) y)) = (((COND g') t') e')))))) e')
T * / c==> c= f0 f1 c==> c==> f1 c= cMAP part cthe f2 f3 c==> c==> c~ f1 c= cMAP part cthe f4 b0 c= cCOND f0 cMAP part cthe f2 cMAP part cthe f4 cCOND f1 f3 b0 f5
+ |- ((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))
T c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= ccat cfilter part cisSome cmap part cSOME cbetwn ccore f2 f4 cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((((transform_count L) N) r) x) = k), ((((marked_list L) N) r) x) |- ((?w. ((((prev_el ((core L) r)) w) , w) = x)) ==> (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= ctransform_count f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c==> c? / c= c, cprev_el ccore f0 f1 b0 b0 f3 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f1 cSND f3 ccore_triple_v4 f0 f2 f1 f3 ccat cflatten cMAP / cCONS cftrans f0 f2 f1 f3 b0 cCOND c= cftrans f0 f2 f1 f3 b0 cFST cytrans f0 f2 f1 f3 b0 cNIL ccat cbetwn ccore f0 f1 cftrans f0 f2 f1 f3 b0 cFST cytrans f0 f2 f1 f3 b0 cCONS cFST cytrans f0 f2 f1 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f2 f1 f3 cPRE f4 cCOND c= cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f1 cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3 cFST f3
+ |- ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> (?w. ((((prev_el ((core L) r)) w) , w) = x)))))
T c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c? / c= c, cprev_el ccore f0 f2 b0 b0 f3
+ |- (((!s. (!f. (((filter f) (flatten s)) = (flatten ((MAP (filter f)) s))))) ==> ((\s. (!f. (((filter f) (flatten s)) = (flatten ((MAP (filter f)) s))))) s)) = ((\s. (!f. (((filter f) (flatten s)) = (flatten ((MAP (filter f)) s))))) s))
T c= c==> ! ! c= cfilter b1 cflatten b0 cflatten cMAP * part cfilter b1 b0 * / ! c= cfilter b1 cflatten b0 cflatten cMAP * part cfilter b1 b0 f0 * / ! c= cfilter b1 cflatten b0 cflatten cMAP * part cfilter b1 b0 f0
+ |- ((ALL (\x. (((the o SOME) x) = x))) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))
T cALL / c= co part cthe part cSOME b0 b0 cbetwn ccore f0 f1 cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3
+ |- ((\f. (!x. (((MAP f) (flatten x)) = (flatten ((MAP (MAP f)) x))))) f)
T * / ! c= cMAP b0 cflatten b1 cflatten cMAP * part cMAP b0 b1 f0
- |- (((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b) ==> (?b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)))
T c==> c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 f5 c? / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0
+ |- (((?b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)) ==> (((map the) ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) = (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))))) = (((map the) ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) = (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))
T c= c==> c? / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0 c= cmap part cthe cfilter part cisSome cmap part cSOME cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 c= cmap part cthe cfilter part cisSome cmap part cSOME cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2
- (_11244030 = _11244032), (_11244029 = _11244031) |- (((final_list _11244031) _11244032) \/ (~ ((final_list _11244029) _11244030)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cfinal_list f3 f1 c~ cfinal_list f2 f0
+ |- ((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))
T c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL
- (~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) |- ((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) /\ (((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))
T c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c/\ c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL
+ |- ((\x. (!r. (!L. (!w. (!k. (!N. ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))))))))) x)
T * / ! ! ! ! ! c==> cgood_list b2 c==> cgood_list_nodes b2 c==> cmarked_list b2 b5 b1 b0 c==> c~ cfinal_list b2 b1 c==> c= ctransform_count b2 b5 b1 b0 b4 c==> c= c, cprev_el ccore b2 b1 b3 b3 b0 c==> cis_restricted chypermap_of_list b2 c==> c~ c? / c= c, cprev_el ccore b2 b1 b6 b6 b0 cF f0
+ (good_list L), (good_list_nodes L), ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((transform_count L) N) r) x) = k) /\ ((?w. ((((prev_el ((core L) r)) w) , w) = x)) /\ (is_restricted (hypermap_of_list L))))))) |- (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cis_restricted chypermap_of_list f0 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f2 cSND f3 ccore_triple_v4 f0 f1 f2 f3 ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3
+ (~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) |- ((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) /\ (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))))
T c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c/\ c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL
+ |- (((isSome (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) = g') ==> ((g' ==> (((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) ((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))) = t')) ==> (((~ g') ==> (((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = e')) ==> ((((COND (isSome (SOME (FST (((((ztrans L) N) r) x) (PRE k)))))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) ((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))))) ((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))) = (((COND g') t') e')))))
T c==> c= cisSome cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 f5 c==> c==> f5 c= cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 f6 c==> c==> c~ f5 c= cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 f7 c= cCOND cisSome cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND f5 f6 f7
+ |- ((\e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (((filter isSome) NIL) = t')) ==> (((~ g') ==> (((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((filter isSome) NIL)) ((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = (((COND g') t') e')))))) e')
T * / c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cfilter part cisSome cNIL f6 c==> c==> c~ f5 c= cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b0 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cfilter part cisSome cNIL cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND f5 f6 b0 f7
+ ((\b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)) b) |- ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)
T c==> * / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0 f5 c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 f5
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
+ (~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) |- ((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) /\ (((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))
T c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c/\ c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL
+ |- ((((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ (((MAP the) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))) = (((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ (((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) ((MAP the) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))))) = ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))))))
T c= c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cMAP part cthe cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cMAP part cthe cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL
+ ((\b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)) b) |- ((((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b) ==> (((map the) ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) = (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))))) = (((map the) ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) = (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))
T c==> * / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0 f5 c= c==> c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 f5 c= cmap part cthe cfilter part cisSome cmap part cSOME cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 c= cmap part cthe cfilter part cisSome cmap part cSOME cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2
- (~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) |- ((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) /\ (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))
T c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c/\ c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL
- (?w. ((((prev_el ((core L) r)) w) , w) = x)), ((?w. ((((prev_el ((core L) r)) w) , w) = x)) ==> ((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))) |- ((?w. ((((prev_el ((core L) r)) w) , w) = x)) /\ ((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))))))
T c==> c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 c==> c==> c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 c= cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f3 f1 f2 ccat cflatten cMAP / cCONS cSOME cftrans f0 f3 f1 f2 b0 ccat cCOND c= cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cCONS cSOME cFST cytrans f0 f3 f1 f2 b0 cNIL cnseq csizel cbetwn cfind_face f0 f2 cytrans f0 f3 f1 f2 b0 cztrans f0 f3 f1 f2 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cSOME cFST f2 c/\ c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 c= cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f3 f1 f2 ccat cflatten cMAP / cCONS cSOME cftrans f0 f3 f1 f2 b0 ccat cCOND c= cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cCONS cSOME cFST cytrans f0 f3 f1 f2 b0 cNIL cnseq csizel cbetwn cfind_face f0 f2 cytrans f0 f3 f1 f2 b0 cztrans f0 f3 f1 f2 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cSOME cFST f2
+ |- (((?w. ((((prev_el ((core L) r)) w) , w) = x)) ==> ((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))) ==> ((((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)))))) = (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))))))
T c==> c==> c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 c= cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f3 f1 f2 ccat cflatten cMAP / cCONS cSOME cftrans f0 f3 f1 f2 b0 ccat cCOND c= cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cCONS cSOME cFST cytrans f0 f3 f1 f2 b0 cNIL cnseq csizel cbetwn cfind_face f0 f2 cytrans f0 f3 f1 f2 b0 cztrans f0 f3 f1 f2 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cSOME cFST f2 c= c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f3 f1 f2 ccat cflatten cMAP / cCONS cftrans f0 f3 f1 f2 b0 cCOND c= cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cNIL ccat cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cCONS cFST cytrans f0 f3 f1 f2 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cFST f2 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f3 f1 f2 ccat cflatten cMAP / cCONS cftrans f0 f3 f1 f2 b0 cCOND c= cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cNIL ccat cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cCONS cFST cytrans f0 f3 f1 f2 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cFST f2
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) |- (((MAP the) ((cat (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ((filter isSome) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE)))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))))
T c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c= cMAP part cthe ccat cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cfilter part cisSome cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 f4 cztrans f0 f1 f2 f3 f4 cNONE cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cFST cytrans f0 f1 f2 f3 f4 cNIL
- |- ((b ==> (((MAP the) x) = t')) ==> (((~ b) ==> (((MAP the) y) = e')) ==> ((((COND b) ((MAP the) x)) ((MAP the) y)) = (((COND b) t') e'))))
T c==> c==> f0 c= cMAP part cthe f1 f2 c==> c==> c~ f0 c= cMAP part cthe f3 f4 c= cCOND f0 cMAP part cthe f1 cMAP part cthe f3 cCOND f0 f2 f4
+ (~ T) |- ((((COND (isSome (SOME (FST x)))) ((CONS (SOME (FST x))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND F) ((CONS (SOME (FST x))) NIL)) NIL))
T c==> c~ cT c= cCOND cisSome cSOME cFST f0 cCONS cSOME cFST f0 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND cF cCONS cSOME cFST f0 cNIL cNIL
- b |- (b /\ (x = x))
T c==> f0 c/\ f0 c= f1 f1
+ |- (((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) ==> (((MAP the) NIL) = t')) ==> (((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ((MAP the) NIL)) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) t') e'))))) = ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) ==> (((MAP the) NIL) = t')) ==> (((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ((MAP the) NIL)) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) t') e')))))
T c= c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c==> c==> c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cMAP part cthe cNIL f5 c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL f6 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cMAP part cthe cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 f6 c==> c==> c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cMAP part cthe cNIL f5 c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL f6 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cMAP part cthe cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 f6
+ |- (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) e')))
T c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL f5 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f5
- |- ((((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))) = ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))))
T c= c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL
+ |- ((\a. (((filter a) NIL) = NIL)) a)
T * / c= cfilter b0 cNIL cNIL f0
+ |- (((!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) ==> (((MAP the) ((filter isSome) ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))))) = (((MAP the) ((filter isSome) ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)))))))
T c= c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c= cMAP part cthe cfilter part cisSome ccat cflatten cMAP / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3 c= cMAP part cthe cfilter part cisSome ccat cflatten cMAP / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3
- |- ((\g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cCOND b0 b1 b2 f5
+ |- (((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))))) ==> ((((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)))))) = (((MAP the) ((filter isSome) ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))))))
T c==> c= cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f3 f1 f2 ccat cflatten cMAP / cCONS cSOME cftrans f0 f3 f1 f2 b0 ccat cCOND c= cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cCONS cSOME cFST cytrans f0 f3 f1 f2 b0 cNIL cnseq csizel cbetwn cfind_face f0 f2 cytrans f0 f3 f1 f2 b0 cztrans f0 f3 f1 f2 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cSOME cFST f2 c= c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f3 f1 f2 ccat cflatten cMAP / cCONS cftrans f0 f3 f1 f2 b0 cCOND c= cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cNIL ccat cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cCONS cFST cytrans f0 f3 f1 f2 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cFST f2 c= cMAP part cthe cfilter part cisSome ccat cflatten cMAP / cCONS cSOME cftrans f0 f3 f1 f2 b0 ccat cCOND c= cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cCONS cSOME cFST cytrans f0 f3 f1 f2 b0 cNIL cnseq csizel cbetwn cfind_face f0 f2 cytrans f0 f3 f1 f2 b0 cztrans f0 f3 f1 f2 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cSOME cFST f2 ccat cflatten cMAP / cCONS cftrans f0 f3 f1 f2 b0 cCOND c= cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cNIL ccat cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cCONS cFST cytrans f0 f3 f1 f2 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cFST f2
+ |- ((\g'. (!t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (((filter isSome) NIL) = t')) ==> (((~ g') ==> (((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) ((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 b0 c==> c==> b0 c= cfilter part cisSome cNIL b1 c==> c==> c~ b0 c= cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b2 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND b0 b1 b2 f5
+ (~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) |- (~ ((((prev_el ((core L) r)) _11243996) , _11243996) = x))
T c==> c~ c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 c~ c= c, cprev_el ccore f0 f1 f3 f3 f2
+ (!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) |- ((\b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) b)
T c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 * / ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 f0
+ |- (((!x. (!i. ((((((ftrans L) N) r) x) i) = (((COND (i = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE i))))))) ==> ((\x. (!i. ((((((ftrans L) N) r) x) i) = (((COND (i = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE i))))))) x)) = ((\x. (!i. ((((((ftrans L) N) r) x) i) = (((COND (i = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE i))))))) x))
T c= c==> ! ! c= cftrans f0 f1 f2 b0 b1 cCOND c= b1 cNUMERAL c_0 cSND b0 cFST cztrans f0 f1 f2 b0 cPRE b1 * / ! c= cftrans f0 f1 f2 b0 b1 cCOND c= b1 cNUMERAL c_0 cSND b0 cFST cztrans f0 f1 f2 b0 cPRE b1 f3 * / ! c= cftrans f0 f1 f2 b0 b1 cCOND c= b1 cNUMERAL c_0 cSND b0 cFST cztrans f0 f1 f2 b0 cPRE b1 f3
+ |- (((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) ==> (((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ (((MAP the) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))))) = ((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) ==> (((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))))))
T c= c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cMAP part cthe cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL
- |- ((\g'. (!t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b2 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND b0 b1 b2 f5
+ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) |- (((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) /\ (((filter isSome) NIL) = NIL))
T c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c/\ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cfilter part cisSome cNIL cNIL
- (~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) |- (~ ((FST (((((ytrans L) N) r) x) x')) = (((((ftrans L) N) r) x) x')))
T c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c~ c= cFST cytrans f0 f1 f2 f3 f4 cftrans f0 f1 f2 f3 f4
+ |- (((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = t')) ==> (((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) t') e'))))) = ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = t')) ==> (((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) t') e')))))
T c= c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cCOND c= f4 cNUMERAL c_0 cSND f3 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST cytrans f0 f1 f2 f3 f4 c==> c==> c= cCOND c= f4 cNUMERAL c_0 cSND f3 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST cytrans f0 f1 f2 f3 f4 c= cNIL f5 c==> c==> c~ c= cCOND c= f4 cNUMERAL c_0 cSND f3 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cFST cytrans f0 f1 f2 f3 f4 cNIL f6 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cCOND c= f4 cNUMERAL c_0 cSND f3 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST cytrans f0 f1 f2 f3 f4 f5 f6 c==> c==> c= cCOND c= f4 cNUMERAL c_0 cSND f3 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST cytrans f0 f1 f2 f3 f4 c= cNIL f5 c==> c==> c~ c= cCOND c= f4 cNUMERAL c_0 cSND f3 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cFST cytrans f0 f1 f2 f3 f4 cNIL f6 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cCOND c= f4 cNUMERAL c_0 cSND f3 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST cytrans f0 f1 f2 f3 f4 f5 f6
+ |- ((\s2. (((filter a) ((cat s1) s2)) = ((cat ((filter a) s1)) ((filter a) s2)))) s2)
T * / c= cfilter f0 ccat f1 b0 ccat cfilter f0 f1 cfilter f0 b0 f2
+ (~ (?w. ((((prev_el ((core L) r)) w) , w) = x))), ((((prev_el ((core L) r)) w) , w) = x) |- (~ ((((prev_el ((core L) r)) _11243996) , _11243996) = (((prev_el ((core L) r)) w) , w)))
T c==> c~ c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 c==> c= c, cprev_el ccore f0 f1 f3 f3 f2 c~ c= c, cprev_el ccore f0 f1 f4 f4 c, cprev_el ccore f0 f1 f3 f3
+ (good_list L), (good_list_nodes L), (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((transform_count L) N) r) x) = k) /\ ((?w. ((((prev_el ((core L) r)) w) , w) = x)) /\ (is_restricted (hypermap_of_list L)))))) |- (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cis_restricted chypermap_of_list f0 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f2 cSND f3 ccore_triple_v4 f0 f1 f2 f3 ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3
+ |- (((!s. (!z. (((rcons s) z) = ((cat s) ((CONS z) NIL))))) ==> ((\s. (!z. (((rcons s) z) = ((cat s) ((CONS z) NIL))))) s)) = ((\s. (!z. (((rcons s) z) = ((cat s) ((CONS z) NIL))))) s))
T c= c==> ! ! c= crcons b0 b1 ccat b0 cCONS b1 cNIL * / ! c= crcons b0 b1 ccat b0 cCONS b1 cNIL f0 * / ! c= crcons b0 b1 ccat b0 cCONS b1 cNIL f0
- |- (((!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND f5 b0 b1 * / ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND f5 b0 b1 f6 * / ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND f5 b0 b1 f6
- ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))) |- (((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))) /\ ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))))
T c==> c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c/\ c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF
+ (((cat s) ((CONS z) NIL)) = ((rcons s) z)) |- (((rcons s) z) = ((cat s) ((CONS z) NIL)))
T c==> c= ccat f0 cCONS f1 cNIL crcons f0 f1 c= crcons f0 f1 ccat f0 cCONS f1 cNIL
- (x' = (NUMERAL _0)) |- ((NUMERAL _0) = x')
T c==> c= f0 cNUMERAL c_0 c= cNUMERAL c_0 f0
+ |- (((!x. (((filter f) ((nseq n) x)) = (((COND (f x)) ((nseq n) x)) NIL))) ==> ((\x. (((filter f) ((nseq n) x)) = (((COND (f x)) ((nseq n) x)) NIL))) x)) = ((\x. (((filter f) ((nseq n) x)) = (((COND (f x)) ((nseq n) x)) NIL))) x))
T c= c==> ! c= cfilter f0 cnseq f1 b0 cCOND * f0 b0 cnseq f1 b0 cNIL * / c= cfilter f0 cnseq f1 b0 cCOND * f0 b0 cnseq f1 b0 cNIL f2 * / c= cfilter f0 cnseq f1 b0 cCOND * f0 b0 cnseq f1 b0 cNIL f2
- |- ((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)) = ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))))
T c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL
- (!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))) |- ((!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d)))) = T)
T c==> ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3 c= ! c==> c/\ c= f0 f1 c= f2 b0 c= ccat f0 f2 ccat f1 b0 cT
- |- ((((COND b) x) y) = (((COND b) x) y))
T c= cCOND f0 f1 f2 cCOND f0 f1 f2
- (~ (x' = (NUMERAL _0))) |- ((x' = (NUMERAL _0)) = F)
T c==> c~ c= f0 cNUMERAL c_0 c= c= f0 cNUMERAL c_0 cF
+ |- (((!f. (!l. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l)))) ==> ((\f. (!l. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l)))) f)) = ((\f. (!l. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l)))) f))
T c= c==> ! ! c==> cALL / c= * b0 b2 b2 b1 c= cMAP b0 b1 b1 * / ! c==> cALL / c= * b0 b2 b2 b1 c= cMAP b0 b1 b1 f0 * / ! c==> cALL / c= * b0 b2 b2 b1 c= cMAP b0 b1 b1 f0
+ |- ((\l. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l))) l)
T * / c==> cALL / c= * f0 b1 b1 b0 c= cMAP f0 b0 b0 f1
+ |- ((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))
T c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL
- |- (((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) e')))
T c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL f5 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL f5
+ (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) |- (((~ T) ==> (((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = e')) ==> ((((COND (isSome (SOME (FST (((((ztrans L) N) r) x) (PRE k)))))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) ((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))))) ((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))) = (((COND T) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))))) e')))
T c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c==> c==> c~ cT c= cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 f5 c= cCOND cisSome cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND cT cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL f5
+ |- ((\w. (!k. (!N. ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F))))))))))) w)
T * / ! ! c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 b2 f1 f2 c==> c~ cfinal_list f0 f1 c==> c= ctransform_count f0 b2 f1 f2 b1 c==> c= c, cprev_el ccore f0 f1 b0 b0 f2 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f1 b3 b3 f2 cF f3
- (_11244030 = _11244032), (_11244029 = _11244031) |- (((((final_list _11244029) _11244030) = ((final_list _11244031) _11244032)) ==> (((final_list _11244031) _11244032) \/ (~ ((final_list _11244029) _11244030)))) = (((final_list _11244031) _11244032) \/ (~ ((final_list _11244029) _11244030))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cfinal_list f2 f0 cfinal_list f3 f1 c\/ cfinal_list f3 f1 c~ cfinal_list f2 f0 c\/ cfinal_list f3 f1 c~ cfinal_list f2 f0
+ |- ((\g'. (!t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b2 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND b0 b1 b2 f5
+ |- ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((MAP the) NIL)) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))))
T c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cMAP part cthe cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL
- (~ (?w. ((((prev_el ((core L) r)) w) , w) = x))), ((((prev_el ((core L) r)) w) , w) = x) |- ((~ F) ==> F)
T c==> c~ c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 c==> c= c, cprev_el ccore f0 f1 f3 f3 f2 c==> c~ cF cF
- |- (((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (NIL = t')) ==> (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) t') e'))))) = ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (NIL = t')) ==> (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) t') e')))))
T c= c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c==> c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cNIL f5 c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 f6 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 f6 c==> c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cNIL f5 c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 f6 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 f6
+ |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((transform_count L) N) r) x) = k) /\ ((?w. ((((prev_el ((core L) r)) w) , w) = x)) /\ (is_restricted (hypermap_of_list L)))))))) = p') ==> ((p' ==> (((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))))) = q')) ==> ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((transform_count L) N) r) x) = k) /\ ((?w. ((((prev_el ((core L) r)) w) , w) = x)) /\ (is_restricted (hypermap_of_list L)))))))) ==> ((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))) = (p' ==> q'))))
T c==> c= c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cis_restricted chypermap_of_list f0 f5 c==> c==> f5 c= c= cdest_triple_full ccore f0 f2 cSND f3 ccore_triple_v4 f0 f1 f2 f3 ccat cflatten cMAP / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 f6 c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cis_restricted chypermap_of_list f0 c= cdest_triple_full ccore f0 f2 cSND f3 ccore_triple_v4 f0 f1 f2 f3 ccat cflatten cMAP / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 c==> f5 f6
+ |- (T ==> (((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) = ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))
T c==> cT c= cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL
+ (~ T) |- ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((filter isSome) NIL)) ((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)))
T c==> c~ cT c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cfilter part cisSome cNIL cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL
+ |- (((!e'. (((isSome (SOME (FST x))) = g') ==> ((g' ==> (((CONS (SOME (FST x))) ((filter isSome) NIL)) = t')) ==> (((~ g') ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST x)))) ((CONS (SOME (FST x))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND g') t') e')))))) ==> ((\e'. (((isSome (SOME (FST x))) = g') ==> ((g' ==> (((CONS (SOME (FST x))) ((filter isSome) NIL)) = t')) ==> (((~ g') ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST x)))) ((CONS (SOME (FST x))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND g') t') e')))))) e')) = ((\e'. (((isSome (SOME (FST x))) = g') ==> ((g' ==> (((CONS (SOME (FST x))) ((filter isSome) NIL)) = t')) ==> (((~ g') ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST x)))) ((CONS (SOME (FST x))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= cisSome cSOME cFST f0 f1 c==> c==> f1 c= cCONS cSOME cFST f0 cfilter part cisSome cNIL f2 c==> c==> c~ f1 c= cfilter part cisSome cNIL b0 c= cCOND cisSome cSOME cFST f0 cCONS cSOME cFST f0 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND f1 f2 b0 * / c==> c= cisSome cSOME cFST f0 f1 c==> c==> f1 c= cCONS cSOME cFST f0 cfilter part cisSome cNIL f2 c==> c==> c~ f1 c= cfilter part cisSome cNIL b0 c= cCOND cisSome cSOME cFST f0 cCONS cSOME cFST f0 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND f1 f2 b0 f3 * / c==> c= cisSome cSOME cFST f0 f1 c==> c==> f1 c= cCONS cSOME cFST f0 cfilter part cisSome cNIL f2 c==> c==> c~ f1 c= cfilter part cisSome cNIL b0 c= cCOND cisSome cSOME cFST f0 cCONS cSOME cFST f0 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND f1 f2 b0 f3
+ |- ((\a. (!x. (!t. (((filter a) ((CONS x) t)) = (((COND (a x)) ((CONS x) ((filter a) t))) ((filter a) t)))))) a)
T * / ! ! c= cfilter b0 cCONS b1 b2 cCOND * b0 b1 cCONS b1 cfilter b0 b2 cfilter b0 b2 f0
- |- ((\g'. (!t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b2 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND b0 b1 b2 f5
- |- ((\t'. (!e'. (((x' = (NUMERAL _0)) = g') ==> ((g' ==> ((SND x) = t')) ==> (((~ g') ==> ((FST (((((ztrans L) N) r) x) (PRE x'))) = e')) ==> ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cSND f2 b0 c==> c==> c~ f1 c= cFST cztrans f3 f4 f5 f2 cPRE f0 b1 c= cCOND c= f0 cNUMERAL c_0 cSND f2 cFST cztrans f3 f4 f5 f2 cPRE f0 cCOND f1 b0 b1 f6
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) |- (((!w. (~ ((((prev_el ((core L) r)) w) , w) = x))) ==> ((\w. (~ ((((prev_el ((core L) r)) w) , w) = x))) _11243996)) = ((\w. (~ ((((prev_el ((core L) r)) w) , w) = x))) _11243996))
T c==> c~ c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 c= c==> ! c~ c= c, cprev_el ccore f0 f1 b0 b0 f2 * / c~ c= c, cprev_el ccore f0 f1 b0 b0 f2 f3 * / c~ c= c, cprev_el ccore f0 f1 b0 b0 f2 f3
+ (!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) |- ((((cat (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))) ((MAP the) ((filter isSome) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE)))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)))) = (((cat ((map the) (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))) ((map the) ((filter isSome) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE)))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)))))
T c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c= c= ccat cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe cfilter part cisSome cnseq csizel cbetwn cfind_face f2 f1 cytrans f2 f3 f4 f1 f0 cztrans f2 f3 f4 f1 f0 cNONE cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL c= ccat cmap part cthe cCOND c= cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f2 f4 cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cmap part cthe cfilter part cisSome cnseq csizel cbetwn cfind_face f2 f1 cytrans f2 f3 f4 f1 f0 cztrans f2 f3 f4 f1 f0 cNONE cCOND c= cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL
+ |- ((T ==> (((CONS (SOME (FST x))) ((filter isSome) NIL)) = t')) ==> (((~ T) ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST x)))) ((CONS (SOME (FST x))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND T) t') e'))))
T c==> c==> cT c= cCONS cSOME cFST f0 cfilter part cisSome cNIL f1 c==> c==> c~ cT c= cfilter part cisSome cNIL f2 c= cCOND cisSome cSOME cFST f0 cCONS cSOME cFST f0 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND cT f1 f2
+ |- (((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) ==> (((filter isSome) NIL) = NIL)) ==> (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) ((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) e')))) = (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) ((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) e'))))
T c= c==> c==> c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cfilter part cisSome cNIL cNIL c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f5 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL f5 c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f5 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL f5
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((((transform_count L) N) r) x) = k), ((((marked_list L) N) r) x) |- (!w. (((\w. ((((prev_el ((core L) r)) w) , w) = x)) w) ==> (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= ctransform_count f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 ! c==> * / c= c, cprev_el ccore f0 f1 b1 b1 f3 b0 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f1 cSND f3 ccore_triple_v4 f0 f2 f1 f3 ccat cflatten cMAP / cCONS cftrans f0 f2 f1 f3 b1 cCOND c= cftrans f0 f2 f1 f3 b1 cFST cytrans f0 f2 f1 f3 b1 cNIL ccat cbetwn ccore f0 f1 cftrans f0 f2 f1 f3 b1 cFST cytrans f0 f2 f1 f3 b1 cCONS cFST cytrans f0 f2 f1 f3 b1 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f2 f1 f3 cPRE f4 cCOND c= cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f1 cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3 cFST f3
- |- (((!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))) ==> (!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d)))))))) = (!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))))
T c= c==> ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3 ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3 ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3
+ (!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) |- (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))
T c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 ! ! c= cMAP part cthe cCOND f0 b0 b1 cCOND f0 cMAP part cthe b0 cMAP part cthe b1
+ |- (((!a. (!x. (!t. (((filter a) ((CONS x) t)) = (((COND (a x)) ((CONS x) ((filter a) t))) ((filter a) t)))))) ==> ((\a. (!x. (!t. (((filter a) ((CONS x) t)) = (((COND (a x)) ((CONS x) ((filter a) t))) ((filter a) t)))))) a)) = ((\a. (!x. (!t. (((filter a) ((CONS x) t)) = (((COND (a x)) ((CONS x) ((filter a) t))) ((filter a) t)))))) a))
T c= c==> ! ! ! c= cfilter b0 cCONS b1 b2 cCOND * b0 b1 cCONS b1 cfilter b0 b2 cfilter b0 b2 * / ! ! c= cfilter b0 cCONS b1 b2 cCOND * b0 b1 cCONS b1 cfilter b0 b2 cfilter b0 b2 f0 * / ! ! c= cfilter b0 cCONS b1 b2 cCOND * b0 b1 cCONS b1 cfilter b0 b2 cfilter b0 b2 f0
- (_11244036 = _11244040), (_11244035 = _11244039), (_11244033 = _11244037), (_11244034 = _11244038) |- ((_11244036 = _11244040) /\ (((((marked_list _11244037) _11244038) _11244039) _11244040) \/ (~ ((((marked_list _11244033) _11244034) _11244035) _11244036))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c/\ c= f0 f1 c\/ cmarked_list f5 f7 f3 f1 c~ cmarked_list f4 f6 f2 f0
+ (!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))), (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) |- ((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) /\ (((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))))
T c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c/\ ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL
+ |- (((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = t')) ==> (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) t') e'))))) = ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = t')) ==> (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) t') e')))))
T c= c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c==> c==> c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cNIL f5 c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f6 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 f6 c==> c==> c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cNIL f5 c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f6 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 f6
+ |- ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ((MAP the) NIL)) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))))
T c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cMAP part cthe cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL
+ |- ((\x. (((MAP f) (flatten x)) = (flatten ((MAP (MAP f)) x)))) x)
T * / c= cMAP f0 cflatten b0 cflatten cMAP * part cMAP f0 b0 f1
+ |- ((((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ((MAP the) NIL)) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))))) = ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ((MAP the) NIL)) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))))
T c= c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cMAP part cthe cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cMAP part cthe cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL
+ |- (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) e')))
T c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3 f5 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f5
+ (~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) |- ((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) /\ (((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))))
T c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c/\ c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
+ |- ((\x. (((filter f) ((nseq n) x)) = (((COND (f x)) ((nseq n) x)) NIL))) x)
T * / c= cfilter f0 cnseq f1 b0 cCOND * f0 b0 cnseq f1 b0 cNIL f2
- (~ F) |- ((F = F) = T)
T c==> c~ cF c= c= cF cF cT
+ |- ((\t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL b1 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 b0 b1 f6
+ (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) |- (((!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y))))) ==> ((\x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y))))) x)) = ((\x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y))))) x))
T c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c= c==> ! ! c= cfilter part cisSome cCOND f0 b0 b1 cCOND f0 cfilter part cisSome b0 cfilter part cisSome b1 * / ! c= cfilter part cisSome cCOND f0 b0 b1 cCOND f0 cfilter part cisSome b0 cfilter part cisSome b1 f1 * / ! c= cfilter part cisSome cCOND f0 b0 b1 cCOND f0 cfilter part cisSome b0 cfilter part cisSome b1 f1
+ |- ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (((MAP the) NIL) = t')) ==> (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((MAP the) NIL)) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) t') e'))))
T c==> c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cMAP part cthe cNIL f5 c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL f6 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cMAP part cthe cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 f6
- |- ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = t')) ==> (((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) t') e'))))
T c==> c==> c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cNIL f5 c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL f6 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 f6
- (~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) |- ((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) /\ (((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))) = ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))
T c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c/\ c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3
+ |- (((!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))) = (((COND g') t') e')))))) ==> ((\e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))) = (((COND g') t') e')))))) e')) = ((\e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL b0 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 f6 b0 * / c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL b0 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 f6 b0 f7 * / c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL b0 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 f6 b0 f7
+ |- (((!a. (!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x)))))) ==> ((\a. (!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x)))))) a)) = ((\a. (!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x)))))) a))
T c= c==> ! ! c= call b0 b1 ! c==> cMEM b2 b1 * b0 b2 * / ! c= call b0 b1 ! c==> cMEM b2 b1 * b0 b2 f0 * / ! c= call b0 b1 ! c==> cMEM b2 b1 * b0 b2 f0
+ |- ((((~ T) ==> (((filter isSome) NIL) = NIL)) ==> ((((COND (isSome (SOME (FST x)))) ((CONS (SOME (FST x))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND T) ((CONS (SOME (FST x))) NIL)) NIL))) = ((((COND (isSome (SOME (FST x)))) ((CONS (SOME (FST x))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND T) ((CONS (SOME (FST x))) NIL)) NIL)))
T c= c==> c==> c~ cT c= cfilter part cisSome cNIL cNIL c= cCOND cisSome cSOME cFST f0 cCONS cSOME cFST f0 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND cT cCONS cSOME cFST f0 cNIL cNIL c= cCOND cisSome cSOME cFST f0 cCONS cSOME cFST f0 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND cT cCONS cSOME cFST f0 cNIL cNIL
+ (good_list_nodes L) |- ((good_list_nodes L) = T)
T c==> cgood_list_nodes f0 c= cgood_list_nodes f0 cT
- |- (((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))) ==> ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))))
T c==> c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF
+ |- ((\s1. (!s2. (((filter a) ((cat s1) s2)) = ((cat ((filter a) s1)) ((filter a) s2))))) s1)
T * / ! c= cfilter f0 ccat b0 b1 ccat cfilter f0 b0 cfilter f0 b1 f1
+ |- ((~ F) ==> (((filter isSome) NIL) = NIL))
T c==> c~ cF c= cfilter part cisSome cNIL cNIL
+ |- (((!r. (!x. (!i. ((((((ftrans L) N) r) x) i) = (((COND (i = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE i)))))))) ==> ((\r. (!x. (!i. ((((((ftrans L) N) r) x) i) = (((COND (i = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE i)))))))) r)) = ((\r. (!x. (!i. ((((((ftrans L) N) r) x) i) = (((COND (i = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE i)))))))) r))
T c= c==> ! ! ! c= cftrans f0 f1 b0 b1 b2 cCOND c= b2 cNUMERAL c_0 cSND b1 cFST cztrans f0 f1 b0 b1 cPRE b2 * / ! ! c= cftrans f0 f1 b0 b1 b2 cCOND c= b2 cNUMERAL c_0 cSND b1 cFST cztrans f0 f1 b0 b1 cPRE b2 f2 * / ! ! c= cftrans f0 f1 b0 b1 b2 cCOND c= b2 cNUMERAL c_0 cSND b1 cFST cztrans f0 f1 b0 b1 cPRE b2 f2
+ |- (((cat ((map the) ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))))))) ((map the) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)))
T c= ccat cmap part cthe cfilter part cisSome cmap part cSOME cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 cmap part cthe cCONS cSOME cFST cytrans f0 f4 f1 f3 f2 cNIL ccat cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 cCONS cFST cytrans f0 f4 f1 f3 f2 cNIL
+ (~ T) |- ((((COND (isSome (SOME (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND F) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) NIL))
T c==> c~ cT c= cCOND cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND cF cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cNIL
+ |- ((!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) ==> (((MAP the) ((filter isSome) ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)))))))
T c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c= cMAP part cthe cfilter part cisSome ccat cflatten cMAP / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3
- |- ((((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)) = ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)))) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))) = ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)))))
T c= c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3 crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3
- |- ((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) ==> ((((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))) = (((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))))))
T c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c= c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) ((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) e')))
T c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f5 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL f5
- (?w. ((((prev_el ((core L) r)) w) , w) = x)) |- ((?w. ((((prev_el ((core L) r)) w) , w) = x)) = T)
T c==> c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 c= c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 cT
+ |- ((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))))
T c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL
+ |- (((!f. (!b. (!x. (!y. ((f (((COND b) x) y)) = (((COND b) (f x)) (f y))))))) ==> ((\f. (!b. (!x. (!y. ((f (((COND b) x) y)) = (((COND b) (f x)) (f y))))))) (filter isSome))) = ((\f. (!b. (!x. (!y. ((f (((COND b) x) y)) = (((COND b) (f x)) (f y))))))) (filter isSome)))
T c= c==> ! ! ! ! c= * b0 cCOND b1 b2 b3 cCOND b1 * b0 b2 * b0 b3 * / ! ! ! c= * b0 cCOND b1 b2 b3 cCOND b1 * b0 b2 * b0 b3 * part cfilter part cisSome * / ! ! ! c= * b0 cCOND b1 b2 b3 cCOND b1 * b0 b2 * b0 b3 * part cfilter part cisSome
+ (~ T) |- ((((isSome (SOME (FST x))) = F) ==> ((F ==> (((CONS (SOME (FST x))) ((filter isSome) NIL)) = t')) ==> (((~ F) ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST x)))) ((CONS (SOME (FST x))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND F) t') e'))))) = ((F ==> (((CONS (SOME (FST x))) ((filter isSome) NIL)) = t')) ==> (((~ F) ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST x)))) ((CONS (SOME (FST x))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND F) t') e')))))
T c==> c~ cT c= c==> c= cisSome cSOME cFST f0 cF c==> c==> cF c= cCONS cSOME cFST f0 cfilter part cisSome cNIL f1 c==> c==> c~ cF c= cfilter part cisSome cNIL f2 c= cCOND cisSome cSOME cFST f0 cCONS cSOME cFST f0 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND cF f1 f2 c==> c==> cF c= cCONS cSOME cFST f0 cfilter part cisSome cNIL f1 c==> c==> c~ cF c= cfilter part cisSome cNIL f2 c= cCOND cisSome cSOME cFST f0 cCONS cSOME cFST f0 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND cF f1 f2
+ |- ((\l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))) l)
T * / c==> cALL / c= * f0 b1 * f1 b1 b0 c= cMAP f0 b0 cMAP f1 b0 f2
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((((transform_count L) N) r) x) = k), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((transform_count L) N) r) x) = k) /\ ((?w. ((((prev_el ((core L) r)) w) , w) = x)) /\ (is_restricted (hypermap_of_list L)))))))) ==> ((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))) = ((?w. ((((prev_el ((core L) r)) w) , w) = x)) ==> ((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= ctransform_count f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 f1 c/\ c= ctransform_count f0 f2 f1 f3 f4 c/\ c? / c= c, cprev_el ccore f0 f1 b0 b0 f3 cis_restricted chypermap_of_list f0 c= cdest_triple_full ccore f0 f1 cSND f3 ccore_triple_v4 f0 f2 f1 f3 ccat cflatten cMAP / cCONS cSOME cftrans f0 f2 f1 f3 b0 ccat cCOND c= cftrans f0 f2 f1 f3 b0 cFST cytrans f0 f2 f1 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f2 f1 f3 b0 cFST cytrans f0 f2 f1 f3 b0 cCONS cSOME cFST cytrans f0 f2 f1 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f2 f1 f3 b0 cztrans f0 f2 f1 f3 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f2 f1 f3 cPRE f4 cCOND c= cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3 cSOME cFST f3 c==> c? / c= c, cprev_el ccore f0 f1 b0 b0 f3 c= cdest_triple_full ccore f0 f1 cSND f3 ccore_triple_v4 f0 f2 f1 f3 ccat cflatten cMAP / cCONS cSOME cftrans f0 f2 f1 f3 b0 ccat cCOND c= cftrans f0 f2 f1 f3 b0 cFST cytrans f0 f2 f1 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f2 f1 f3 b0 cFST cytrans f0 f2 f1 f3 b0 cCONS cSOME cFST cytrans f0 f2 f1 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f2 f1 f3 b0 cztrans f0 f2 f1 f3 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f2 f1 f3 cPRE f4 cCOND c= cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3 cSOME cFST f3
+ |- ((\L. (!N. (!r. (!x. (!k. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((transform_count L) N) r) x) = k) /\ ((?w. ((((prev_el ((core L) r)) w) , w) = x)) /\ (is_restricted (hypermap_of_list L)))))))) ==> ((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))))))))))) L)
T * / ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= ctransform_count b0 b1 b2 b3 b4 c/\ c? / c= c, cprev_el ccore b0 b2 b5 b5 b3 cis_restricted chypermap_of_list b0 c= cdest_triple_full ccore b0 b2 cSND b3 ccore_triple_v4 b0 b1 b2 b3 ccat cflatten cMAP / cCONS cSOME cftrans b0 b1 b2 b3 b5 ccat cCOND c= cftrans b0 b1 b2 b3 b5 cFST cytrans b0 b1 b2 b3 b5 cNIL ccat cMAP part cSOME cbetwn ccore b0 b2 cftrans b0 b1 b2 b3 b5 cFST cytrans b0 b1 b2 b3 b5 cCONS cSOME cFST cytrans b0 b1 b2 b3 b5 cNIL cnseq csizel cbetwn cfind_face b0 b3 cytrans b0 b1 b2 b3 b5 cztrans b0 b1 b2 b3 b5 cNONE ciota cNUMERAL c_0 b4 cCONS cSOME cFST cztrans b0 b1 b2 b3 cPRE b4 cCOND c= cFST cztrans b0 b1 b2 b3 cPRE b4 cFST b3 cNIL crcons cMAP part cSOME cbetwn ccore b0 b2 cFST cztrans b0 b1 b2 b3 cPRE b4 cFST b3 cSOME cFST b3 f0
+ |- ((\p'. (!q'. ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((transform_count L) N) r) x) = k) /\ ((?w. ((((prev_el ((core L) r)) w) , w) = x)) /\ (is_restricted (hypermap_of_list L)))))))) = p') ==> ((p' ==> (((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))))) = q')) ==> ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((transform_count L) N) r) x) = k) /\ ((?w. ((((prev_el ((core L) r)) w) , w) = x)) /\ (is_restricted (hypermap_of_list L)))))))) ==> ((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c? / c= c, cprev_el ccore f0 f2 b2 b2 f3 cis_restricted chypermap_of_list f0 b0 c==> c==> b0 c= c= cdest_triple_full ccore f0 f2 cSND f3 ccore_triple_v4 f0 f1 f2 f3 ccat cflatten cMAP / cCONS cSOME cftrans f0 f1 f2 f3 b2 ccat cCOND c= cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cCONS cSOME cFST cytrans f0 f1 f2 f3 b2 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b2 cztrans f0 f1 f2 f3 b2 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b1 c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c? / c= c, cprev_el ccore f0 f2 b2 b2 f3 cis_restricted chypermap_of_list f0 c= cdest_triple_full ccore f0 f2 cSND f3 ccore_triple_v4 f0 f1 f2 f3 ccat cflatten cMAP / cCONS cSOME cftrans f0 f1 f2 f3 b2 ccat cCOND c= cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cCONS cSOME cFST cytrans f0 f1 f2 f3 b2 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b2 cztrans f0 f1 f2 f3 b2 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 c==> b0 b1 f5
- |- ((\e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))) e')
T * / c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b0 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 f6 b0 f7
+ (~ T) |- (((~ F) ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST x)))) ((CONS (SOME (FST x))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND F) ((CONS (SOME (FST x))) NIL)) e')))
T c==> c~ cT c==> c==> c~ cF c= cfilter part cisSome cNIL f0 c= cCOND cisSome cSOME cFST f1 cCONS cSOME cFST f1 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND cF cCONS cSOME cFST f1 cNIL f0
+ |- ((\h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t))))) h)
T * / ! c= cMAP f0 cCONS b0 b1 cCONS * f0 b0 cMAP f0 b1 f1
- |- ((((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))) ==> ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F))))))))) ==> (((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))) ==> ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F))))))))))
T c==> c==> c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c==> c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF
+ |- (((!g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (((filter isSome) NIL) = t')) ==> (((~ g') ==> (((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((filter isSome) NIL)) ((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (((filter isSome) NIL) = t')) ==> (((~ g') ==> (((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((filter isSome) NIL)) ((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (((filter isSome) NIL) = t')) ==> (((~ g') ==> (((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((filter isSome) NIL)) ((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cfilter part cisSome cNIL b1 c==> c==> c~ b0 c= cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cfilter part cisSome cNIL cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND b0 b1 b2 * / ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cfilter part cisSome cNIL b1 c==> c==> c~ b0 c= cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cfilter part cisSome cNIL cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND b0 b1 b2 f5 * / ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cfilter part cisSome cNIL b1 c==> c==> c~ b0 c= cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cfilter part cisSome cNIL cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND b0 b1 b2 f5
- (!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))) |- (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d)))))
T c==> ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3 ! ! c==> c/\ c= f0 b0 c= f1 b1 c= ccat f0 f1 ccat b0 b1
- (!f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))) |- (((!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))) ==> ((\l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))) l)) = ((\l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))) l))
T c==> ! ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2 c= c==> ! c==> cALL / c= * f0 b1 * f1 b1 b0 c= cMAP f0 b0 cMAP f1 b0 * / c==> cALL / c= * f0 b1 * f1 b1 b0 c= cMAP f0 b0 cMAP f1 b0 f2 * / c==> cALL / c= * f0 b1 * f1 b1 b0 c= cMAP f0 b0 cMAP f1 b0 f2
+ |- ((((isSome (SOME (FST (((((ytrans L) N) r) x) x')))) = T) ==> ((T ==> (((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) = t')) ==> (((~ T) ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND T) t') e'))))) = ((T ==> (((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) = t')) ==> (((~ T) ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND T) t') e')))))
T c= c==> c= cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 cT c==> c==> cT c= cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL f5 c==> c==> c~ cT c= cfilter part cisSome cNIL f6 c= cCOND cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND cT f5 f6 c==> c==> cT c= cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL f5 c==> c==> c~ cT c= cfilter part cisSome cNIL f6 c= cCOND cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND cT f5 f6
- |- ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)))
T c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL
+ |- ((\g'. (!t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL b2 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND b0 b1 b2 f5
+ |- (((!l. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l))) ==> ((\l. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l))) l)) = ((\l. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l))) l))
T c= c==> ! c==> cALL / c= * f0 b1 b1 b0 c= cMAP f0 b0 b0 * / c==> cALL / c= * f0 b1 b1 b0 c= cMAP f0 b0 b0 f1 * / c==> cALL / c= * f0 b1 b1 b0 c= cMAP f0 b0 b0 f1
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- |- (((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = t')) ==> (((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) t') e'))))) = ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = t')) ==> (((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) t') e')))))
T c= c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c==> c==> c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cNIL f5 c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL f6 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 f6 c==> c==> c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cNIL f5 c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL f6 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 f6
- |- ((\q'. (((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) = p') ==> ((p' ==> ((((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))) = q')) ==> (((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) ==> (((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))))) = (p' ==> q'))))) q')
T * / c==> c= ! ! ! c= cMAP part cthe cCOND b1 b2 b3 cCOND b1 cMAP part cthe b2 cMAP part cthe b3 f0 c==> c==> f0 c= c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f1 f2 f3 f4 b1 ccat cCOND c= cftrans f1 f2 f3 f4 b1 cFST cytrans f1 f2 f3 f4 b1 cNIL ccat cMAP part cSOME cbetwn ccore f1 f3 cftrans f1 f2 f3 f4 b1 cFST cytrans f1 f2 f3 f4 b1 cCONS cSOME cFST cytrans f1 f2 f3 f4 b1 cNIL cnseq csizel cbetwn cfind_face f1 f4 cytrans f1 f2 f3 f4 b1 cztrans f1 f2 f3 f4 b1 cNONE ciota cNUMERAL c_0 f5 cflatten cMAP / cCONS cftrans f1 f2 f3 f4 b1 cCOND c= cftrans f1 f2 f3 f4 b1 cFST cytrans f1 f2 f3 f4 b1 cNIL ccat cbetwn ccore f1 f3 cftrans f1 f2 f3 f4 b1 cFST cytrans f1 f2 f3 f4 b1 cCONS cFST cytrans f1 f2 f3 f4 b1 cNIL ciota cNUMERAL c_0 f5 c= cCOND c= cFST cztrans f1 f2 f3 f4 cPRE f5 cFST f4 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f1 f3 cFST cztrans f1 f2 f3 f4 cPRE f5 cFST f4 cCONS cSOME cFST f4 cNIL cCOND c= cFST cztrans f1 f2 f3 f4 cPRE f5 cFST f4 cNIL ccat cbetwn ccore f1 f3 cFST cztrans f1 f2 f3 f4 cPRE f5 cFST f4 cCONS cFST f4 cNIL b0 c= c==> ! ! ! c= cMAP part cthe cCOND b1 b2 b3 cCOND b1 cMAP part cthe b2 cMAP part cthe b3 c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f1 f2 f3 f4 b1 ccat cCOND c= cftrans f1 f2 f3 f4 b1 cFST cytrans f1 f2 f3 f4 b1 cNIL ccat cMAP part cSOME cbetwn ccore f1 f3 cftrans f1 f2 f3 f4 b1 cFST cytrans f1 f2 f3 f4 b1 cCONS cSOME cFST cytrans f1 f2 f3 f4 b1 cNIL cnseq csizel cbetwn cfind_face f1 f4 cytrans f1 f2 f3 f4 b1 cztrans f1 f2 f3 f4 b1 cNONE ciota cNUMERAL c_0 f5 cflatten cMAP / cCONS cftrans f1 f2 f3 f4 b1 cCOND c= cftrans f1 f2 f3 f4 b1 cFST cytrans f1 f2 f3 f4 b1 cNIL ccat cbetwn ccore f1 f3 cftrans f1 f2 f3 f4 b1 cFST cytrans f1 f2 f3 f4 b1 cCONS cFST cytrans f1 f2 f3 f4 b1 cNIL ciota cNUMERAL c_0 f5 c= cCOND c= cFST cztrans f1 f2 f3 f4 cPRE f5 cFST f4 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f1 f3 cFST cztrans f1 f2 f3 f4 cPRE f5 cFST f4 cCONS cSOME cFST f4 cNIL cCOND c= cFST cztrans f1 f2 f3 f4 cPRE f5 cFST f4 cNIL ccat cbetwn ccore f1 f3 cFST cztrans f1 f2 f3 f4 cPRE f5 cFST f4 cCONS cFST f4 cNIL c==> f0 b0 f6
- |- (((b ==> (((MAP the) x) = ((MAP the) x))) ==> (((~ b) ==> (((MAP the) y) = e')) ==> ((((COND b) ((MAP the) x)) ((MAP the) y)) = (((COND b) ((MAP the) x)) e')))) = (((~ b) ==> (((MAP the) y) = e')) ==> ((((COND b) ((MAP the) x)) ((MAP the) y)) = (((COND b) ((MAP the) x)) e'))))
T c= c==> c==> f0 c= cMAP part cthe f1 cMAP part cthe f1 c==> c==> c~ f0 c= cMAP part cthe f2 f3 c= cCOND f0 cMAP part cthe f1 cMAP part cthe f2 cCOND f0 cMAP part cthe f1 f3 c==> c==> c~ f0 c= cMAP part cthe f2 f3 c= cCOND f0 cMAP part cthe f1 cMAP part cthe f2 cCOND f0 cMAP part cthe f1 f3
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((((transform_count L) N) r) x) = k), ((((marked_list L) N) r) x) |- (((\w. ((((prev_el ((core L) r)) w) , w) = x)) w) ==> (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= ctransform_count f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c==> * / c= c, cprev_el ccore f0 f1 b0 b0 f3 f5 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f1 cSND f3 ccore_triple_v4 f0 f2 f1 f3 ccat cflatten cMAP / cCONS cftrans f0 f2 f1 f3 b0 cCOND c= cftrans f0 f2 f1 f3 b0 cFST cytrans f0 f2 f1 f3 b0 cNIL ccat cbetwn ccore f0 f1 cftrans f0 f2 f1 f3 b0 cFST cytrans f0 f2 f1 f3 b0 cCONS cFST cytrans f0 f2 f1 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f2 f1 f3 cPRE f4 cCOND c= cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f1 cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3 cFST f3
- F |- (F = T)
T c==> cF c= cF cT
- (~ (NIL = s)) |- ((~ (NIL = s)) /\ ((LAST s) = ((last x0) s)))
T c==> c~ c= cNIL f0 c/\ c~ c= cNIL f0 c= cLAST f0 clast f1 f0
- |- (((!t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b1 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 b0 b1 * / ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b1 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 b0 b1 f6 * / ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b1 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 b0 b1 f6
- |- ((((~ b) ==> (y = y)) ==> ((((COND b) x) y) = (((COND b) x) y))) = ((((COND b) x) y) = (((COND b) x) y)))
T c= c==> c==> c~ f0 c= f1 f1 c= cCOND f0 f2 f1 cCOND f0 f2 f1 c= cCOND f0 f2 f1 cCOND f0 f2 f1
- (_11244033 = _11244037) |- ((_11244033 = _11244037) /\ ((~ (_11244034 = _11244038)) \/ ((~ (_11244035 = _11244039)) \/ ((~ (_11244036 = _11244040)) \/ (((((marked_list _11244037) _11244038) _11244039) _11244040) \/ (~ ((((marked_list _11244033) _11244034) _11244035) _11244036)))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ cmarked_list f1 f3 f5 f7 c~ cmarked_list f0 f2 f4 f6
- |- ((\g'. (!t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b2 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND b0 b1 b2 f5
+ |- (((!x. ((isSome (SOME x)) = T)) ==> ((\x. ((isSome (SOME x)) = T)) x)) = ((\x. ((isSome (SOME x)) = T)) x))
T c= c==> ! c= cisSome cSOME b0 cT * / c= cisSome cSOME b0 cT f0 * / c= cisSome cSOME b0 cT f0
- |- ((((COND b) ((filter isSome) x)) ((filter isSome) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))
T c= cCOND f0 cfilter part cisSome f1 cfilter part cisSome f2 cCOND f0 cfilter part cisSome f1 cfilter part cisSome f2
+ ((\w. ((((prev_el ((core L) r)) w) , w) = x)) w) |- ((((prev_el ((core L) r)) w) , w) = x)
T c==> * / c= c, cprev_el ccore f0 f1 b0 b0 f2 f3 c= c, cprev_el ccore f0 f1 f3 f3 f2
- |- ((_11244029 = _11244031) ==> ((~ (_11244030 = _11244032)) \/ (((final_list _11244031) _11244032) \/ (~ ((final_list _11244029) _11244030)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cfinal_list f1 f3 c~ cfinal_list f0 f2
- (!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))) |- ((\b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d)))))) b)
T c==> ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3 * / ! ! c==> c/\ c= f0 b1 c= b0 b2 c= ccat f0 b0 ccat b1 b2 f1
+ |- (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> (?w. ((((prev_el ((core L) r)) w) , w) = x)))))))
T c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c? / c= c, cprev_el ccore f0 f2 b0 b0 f3
- (!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) |- ((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) /\ ((((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))) = (((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))))))
T c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c/\ ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c= c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL
+ |- (((!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) ==> (((MAP the) ((cat (flatten ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))))) = ((!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) ==> (((MAP the) ((filter isSome) ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))))))
T c= c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c= cMAP part cthe ccat cflatten cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c= cMAP part cthe cfilter part cisSome ccat cflatten cMAP / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3
+ (~ T) |- ((((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL))) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((filter isSome) NIL)) ((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)))) = ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((filter isSome) NIL)) ((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL))))
T c==> c~ cT c= c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cfilter part cisSome cNIL cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cfilter part cisSome cNIL cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL
+ |- ((((cat (flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k))))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) ((MAP the) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))))) = (((cat ((map the) (flatten ((map ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k))))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) ((map the) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((map SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))))) = ((cat (flatten ((map (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))))))
T c= c= ccat cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cMAP part cthe cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL c= ccat cmap part cthe cflatten cmap * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cmap part cthe cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cmap part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL ccat cflatten cmap / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL
+ |- (((!l. (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l))) ==> ((\l. (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l))) l)) = ((\l. (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l))) l))
T c= c==> ! c= cMAP f0 cMAP f1 b0 cMAP * * part co f0 f1 b0 * / c= cMAP f0 cMAP f1 b0 cMAP * * part co f0 f1 b0 f2 * / c= cMAP f0 cMAP f1 b0 cMAP * * part co f0 f1 b0 f2
- (!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))), ((a = c) /\ (b = d)) |- ((!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))) /\ (((cat a) b) = ((cat c) d)))
T c==> ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3 c==> c/\ c= f0 f1 c= f2 f3 c/\ ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3 c= ccat f0 f2 ccat f1 f3
+ (good_list L) |- ((good_list L) /\ ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> (?w. ((((prev_el ((core L) r)) w) , w) = x)))))))))
T c==> cgood_list f0 c/\ cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c? / c= c, cprev_el ccore f0 f2 b0 b0 f3
+ (!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))), (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))), ((MEM x') ((iota (NUMERAL _0)) k)) |- (((MEM x') ((iota (NUMERAL _0)) k)) /\ ((((MAP the) o ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) x') = ((CONS (((((ftrans L) N) r) x) x')) (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))))))
T c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c==> cMEM f0 ciota cNUMERAL c_0 f1 c/\ cMEM f0 ciota cNUMERAL c_0 f1 c= co * part cMAP part cthe * * part co * part cfilter part cisSome / cCONS cSOME cftrans f2 f3 f4 f5 b0 ccat cCOND c= cftrans f2 f3 f4 f5 b0 cFST cytrans f2 f3 f4 f5 b0 cNIL ccat cMAP part cSOME cbetwn ccore f2 f4 cftrans f2 f3 f4 f5 b0 cFST cytrans f2 f3 f4 f5 b0 cCONS cSOME cFST cytrans f2 f3 f4 f5 b0 cNIL cnseq csizel cbetwn cfind_face f2 f5 cytrans f2 f3 f4 f5 b0 cztrans f2 f3 f4 f5 b0 cNONE f0 cCONS cftrans f2 f3 f4 f5 f0 cCOND c= cftrans f2 f3 f4 f5 f0 cFST cytrans f2 f3 f4 f5 f0 cNIL ccat cbetwn ccore f2 f4 cftrans f2 f3 f4 f5 f0 cFST cytrans f2 f3 f4 f5 f0 cCONS cFST cytrans f2 f3 f4 f5 f0 cNIL
+ |- (((!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL cCOND f5 b0 b1 * / ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL cCOND f5 b0 b1 f6 * / ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL cCOND f5 b0 b1 f6
- |- (((!e'. ((b = g') ==> ((g' ==> (((filter isSome) x) = t')) ==> (((~ g') ==> (((filter isSome) y) = e')) ==> ((((COND b) ((filter isSome) x)) ((filter isSome) y)) = (((COND g') t') e')))))) ==> ((\e'. ((b = g') ==> ((g' ==> (((filter isSome) x) = t')) ==> (((~ g') ==> (((filter isSome) y) = e')) ==> ((((COND b) ((filter isSome) x)) ((filter isSome) y)) = (((COND g') t') e')))))) e')) = ((\e'. ((b = g') ==> ((g' ==> (((filter isSome) x) = t')) ==> (((~ g') ==> (((filter isSome) y) = e')) ==> ((((COND b) ((filter isSome) x)) ((filter isSome) y)) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= f0 f1 c==> c==> f1 c= cfilter part cisSome f2 f3 c==> c==> c~ f1 c= cfilter part cisSome f4 b0 c= cCOND f0 cfilter part cisSome f2 cfilter part cisSome f4 cCOND f1 f3 b0 * / c==> c= f0 f1 c==> c==> f1 c= cfilter part cisSome f2 f3 c==> c==> c~ f1 c= cfilter part cisSome f4 b0 c= cCOND f0 cfilter part cisSome f2 cfilter part cisSome f4 cCOND f1 f3 b0 f5 * / c==> c= f0 f1 c==> c==> f1 c= cfilter part cisSome f2 f3 c==> c==> c~ f1 c= cfilter part cisSome f4 b0 c= cCOND f0 cfilter part cisSome f2 cfilter part cisSome f4 cCOND f1 f3 b0 f5
- |- (b ==> (((MAP the) x) = ((MAP the) x)))
T c==> f0 c= cMAP part cthe f1 cMAP part cthe f1
+ |- (((MAP (the o SOME)) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) = (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))
T c= cMAP * * part co part cthe part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3 cbetwn ccore f0 f1 cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3
+ (!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) |- ((\x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y))))) x)
T c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 * / ! c= cMAP part cthe cCOND f0 b0 b1 cCOND f0 cMAP part cthe b0 cMAP part cthe b1 f1
+ (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) |- (((!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))) ==> ((\y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))) y)) = ((\y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))) y))
T c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c= c==> ! c= cfilter part cisSome cCOND f0 f1 b0 cCOND f0 cfilter part cisSome f1 cfilter part cisSome b0 * / c= cfilter part cisSome cCOND f0 f1 b0 cCOND f0 cfilter part cisSome f1 cfilter part cisSome b0 f2 * / c= cfilter part cisSome cCOND f0 f1 b0 cCOND f0 cfilter part cisSome f1 cfilter part cisSome b0 f2
+ |- ((T ==> (((CONS (SOME (((((ftrans L) N) r) x) x'))) ((filter isSome) ((cat (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE)))) = t')) ==> (((~ T) ==> (((filter isSome) ((cat (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE))) = e')) ==> ((((COND (isSome (SOME (((((ftrans L) N) r) x) x')))) ((CONS (SOME (((((ftrans L) N) r) x) x'))) ((filter isSome) ((cat (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE))))) ((filter isSome) ((cat (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE)))) = (((COND T) t') e'))))
T c==> c==> cT c= cCONS cSOME cftrans f0 f1 f2 f3 f4 cfilter part cisSome ccat cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 f4 cztrans f0 f1 f2 f3 f4 cNONE f5 c==> c==> c~ cT c= cfilter part cisSome ccat cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 f4 cztrans f0 f1 f2 f3 f4 cNONE f6 c= cCOND cisSome cSOME cftrans f0 f1 f2 f3 f4 cCONS cSOME cftrans f0 f1 f2 f3 f4 cfilter part cisSome ccat cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 f4 cztrans f0 f1 f2 f3 f4 cNONE cfilter part cisSome ccat cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 f4 cztrans f0 f1 f2 f3 f4 cNONE cCOND cT f5 f6
+ |- (((!x. (((f o g) x) = (f (g x)))) ==> ((\x. (((f o g) x) = (f (g x)))) x)) = ((\x. (((f o g) x) = (f (g x)))) x))
T c= c==> ! c= co f0 f1 b0 * f0 * f1 b0 * / c= co f0 f1 b0 * f0 * f1 b0 f2 * / c= co f0 f1 b0 * f0 * f1 b0 f2
+ |- ((((~ T) ==> (((filter isSome) NIL) = NIL)) ==> ((((COND (isSome (SOME (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND T) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) NIL))) = ((((COND (isSome (SOME (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND T) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) NIL)))
T c= c==> c==> c~ cT c= cfilter part cisSome cNIL cNIL c= cCOND cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND cT cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cNIL c= cCOND cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND cT cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cNIL
- |- (((!g'. (!t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b2 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND b0 b1 b2 * / ! ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b2 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND b0 b1 b2 f5 * / ! ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b2 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND b0 b1 b2 f5
+ |- ((\h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2)))))) h2)
T * / ! ! c= c= cCONS f0 b1 cCONS b0 b2 c/\ c= f0 b0 c= b1 b2 f1
+ |- (((!z. (((rcons s) z) = ((cat s) ((CONS z) NIL)))) ==> ((\z. (((rcons s) z) = ((cat s) ((CONS z) NIL)))) z)) = ((\z. (((rcons s) z) = ((cat s) ((CONS z) NIL)))) z))
T c= c==> ! c= crcons f0 b0 ccat f0 cCONS b0 cNIL * / c= crcons f0 b0 ccat f0 cCONS b0 cNIL f1 * / c= crcons f0 b0 ccat f0 cCONS b0 cNIL f1
+ |- ((\g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l))))) g)
T * / ! c==> cALL / c= * f0 b2 * b0 b2 b1 c= cMAP f0 b1 cMAP b0 b1 f1
+ |- (F ==> (((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) = ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))
T c==> cF c= cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL
- (!f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))), ((ALL (\x. ((f x) = (g x)))) l) |- ((!f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))) /\ (((MAP f) l) = ((MAP g) l)))
T c==> ! ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2 c==> cALL / c= * f0 b0 * f1 b0 f2 c/\ ! ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2 c= cMAP f0 f2 cMAP f1 f2
- |- (((!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) ==> ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0)) = ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0))
T c= c==> ! c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1 * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1
+ (~ T) |- ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) ((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)))
T c==> c~ cT c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL
- ((((prev_el ((core L) r)) w) , w) = x), (((((transform_count L) N) r) x) = k) |- ((is_restricted (hypermap_of_list L)) = (is_restricted (hypermap_of_list L)))
T c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c==> c= ctransform_count f0 f4 f1 f3 f5 c= cis_restricted chypermap_of_list f0 cis_restricted chypermap_of_list f0
+ |- (((T ==> (((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) = ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) ==> (((~ T) ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND T) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) e')))) = (((~ T) ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND T) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) e'))))
T c= c==> c==> cT c= cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL c==> c==> c~ cT c= cfilter part cisSome cNIL f5 c= cCOND cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND cT cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f5 c==> c==> c~ cT c= cfilter part cisSome cNIL f5 c= cCOND cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND cT cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f5
- (~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) |- ((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) /\ (((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)) = ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))
T c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c/\ c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3 crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3
+ |- (((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (NIL = NIL)) ==> (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) e')))) = (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) e'))))
T c= c==> c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cNIL cNIL c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL f5 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f5 c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL f5 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f5
+ |- ((\f. (!b. (!x. (!y. ((f (((COND b) x) y)) = (((COND b) (f x)) (f y))))))) (filter isSome))
T * / ! ! ! c= * b0 cCOND b1 b2 b3 cCOND b1 * b0 b2 * b0 b3 * part cfilter part cisSome
- |- ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))
T c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3
- |- (((!t'. (!e'. ((b = g') ==> ((g' ==> (((MAP the) x) = t')) ==> (((~ g') ==> (((MAP the) y) = e')) ==> ((((COND b) ((MAP the) x)) ((MAP the) y)) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((b = g') ==> ((g' ==> (((MAP the) x) = t')) ==> (((~ g') ==> (((MAP the) y) = e')) ==> ((((COND b) ((MAP the) x)) ((MAP the) y)) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((b = g') ==> ((g' ==> (((MAP the) x) = t')) ==> (((~ g') ==> (((MAP the) y) = e')) ==> ((((COND b) ((MAP the) x)) ((MAP the) y)) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= f0 f1 c==> c==> f1 c= cMAP part cthe f2 b0 c==> c==> c~ f1 c= cMAP part cthe f3 b1 c= cCOND f0 cMAP part cthe f2 cMAP part cthe f3 cCOND f1 b0 b1 * / ! c==> c= f0 f1 c==> c==> f1 c= cMAP part cthe f2 b0 c==> c==> c~ f1 c= cMAP part cthe f3 b1 c= cCOND f0 cMAP part cthe f2 cMAP part cthe f3 cCOND f1 b0 b1 f4 * / ! c==> c= f0 f1 c==> c==> f1 c= cMAP part cthe f2 b0 c==> c==> c~ f1 c= cMAP part cthe f3 b1 c= cCOND f0 cMAP part cthe f2 cMAP part cthe f3 cCOND f1 b0 b1 f4
+ |- (((MAP f) NIL) = NIL)
T c= cMAP f0 cNIL cNIL
+ |- (((map the) ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) = (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))))
T c= cmap part cthe cfilter part cisSome cmap part cSOME cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2
+ (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF
+ |- (((!f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))) ==> ((\f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))) f)) = ((\f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))) f))
T c= c==> ! ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2 * / ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2 f0 * / ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2 f0
- |- ((~ (_11244045 = _11244046)) \/ ((hypermap_of_list _11244045) = (hypermap_of_list _11244046)))
T c\/ c~ c= f0 f1 c= chypermap_of_list f0 chypermap_of_list f1
- |- (((b ==> (x = x)) ==> (((~ b) ==> (y = e')) ==> ((((COND b) x) y) = (((COND b) x) e')))) = (((~ b) ==> (y = e')) ==> ((((COND b) x) y) = (((COND b) x) e'))))
T c= c==> c==> f0 c= f1 f1 c==> c==> c~ f0 c= f2 f3 c= cCOND f0 f1 f2 cCOND f0 f1 f3 c==> c==> c~ f0 c= f2 f3 c= cCOND f0 f1 f2 cCOND f0 f1 f3
- (!f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))) |- (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))
T c==> ! ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2 ! ! c==> cALL / c= * f0 b2 * b0 b2 b1 c= cMAP f0 b1 cMAP b0 b1
- |- ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))
T c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3
+ |- (((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) = (((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))) /\ ((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k))))))
T c= c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c/\ c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4
- |- ((\g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND b0 b1 b2 f5
- |- (((!x. (((\b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)) x) ==> (?b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)))) ==> ((?b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)) ==> (?b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)))) = ((?b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)) ==> (?b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b))))
T c= c==> ! c==> * / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b1 b0 c? / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b1 c==> c? / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0 c? / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0 c==> c? / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0 c? / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0
- (!f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))) |- ((((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l))) = T)
T c==> ! ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2 c= c==> cALL / c= * f0 b0 * f1 b0 f2 c= cMAP f0 f2 cMAP f1 f2 cT
- |- (((!g'. (!t'. (!e'. ((b = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> (y = e')) ==> ((((COND b) x) y) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((b = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> (y = e')) ==> ((((COND b) x) y) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((b = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> (y = e')) ==> ((((COND b) x) y) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= f0 b0 c==> c==> b0 c= f1 b1 c==> c==> c~ b0 c= f2 b2 c= cCOND f0 f1 f2 cCOND b0 b1 b2 * / ! ! c==> c= f0 b0 c==> c==> b0 c= f1 b1 c==> c==> c~ b0 c= f2 b2 c= cCOND f0 f1 f2 cCOND b0 b1 b2 f3 * / ! ! c==> c= f0 b0 c==> c==> b0 c= f1 b1 c==> c==> c~ b0 c= f2 b2 c= cCOND f0 f1 f2 cCOND b0 b1 b2 f3
- |- (((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) = p') ==> ((p' ==> ((((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))) = q')) ==> (((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) ==> (((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))))) = (p' ==> q'))))
T c==> c= ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 f0 c==> c==> f0 c= c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f1 f2 f3 f4 b0 ccat cCOND c= cftrans f1 f2 f3 f4 b0 cFST cytrans f1 f2 f3 f4 b0 cNIL ccat cMAP part cSOME cbetwn ccore f1 f3 cftrans f1 f2 f3 f4 b0 cFST cytrans f1 f2 f3 f4 b0 cCONS cSOME cFST cytrans f1 f2 f3 f4 b0 cNIL cnseq csizel cbetwn cfind_face f1 f4 cytrans f1 f2 f3 f4 b0 cztrans f1 f2 f3 f4 b0 cNONE ciota cNUMERAL c_0 f5 cflatten cMAP / cCONS cftrans f1 f2 f3 f4 b0 cCOND c= cftrans f1 f2 f3 f4 b0 cFST cytrans f1 f2 f3 f4 b0 cNIL ccat cbetwn ccore f1 f3 cftrans f1 f2 f3 f4 b0 cFST cytrans f1 f2 f3 f4 b0 cCONS cFST cytrans f1 f2 f3 f4 b0 cNIL ciota cNUMERAL c_0 f5 c= cCOND c= cFST cztrans f1 f2 f3 f4 cPRE f5 cFST f4 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f1 f3 cFST cztrans f1 f2 f3 f4 cPRE f5 cFST f4 cCONS cSOME cFST f4 cNIL cCOND c= cFST cztrans f1 f2 f3 f4 cPRE f5 cFST f4 cNIL ccat cbetwn ccore f1 f3 cFST cztrans f1 f2 f3 f4 cPRE f5 cFST f4 cCONS cFST f4 cNIL f6 c= c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f1 f2 f3 f4 b0 ccat cCOND c= cftrans f1 f2 f3 f4 b0 cFST cytrans f1 f2 f3 f4 b0 cNIL ccat cMAP part cSOME cbetwn ccore f1 f3 cftrans f1 f2 f3 f4 b0 cFST cytrans f1 f2 f3 f4 b0 cCONS cSOME cFST cytrans f1 f2 f3 f4 b0 cNIL cnseq csizel cbetwn cfind_face f1 f4 cytrans f1 f2 f3 f4 b0 cztrans f1 f2 f3 f4 b0 cNONE ciota cNUMERAL c_0 f5 cflatten cMAP / cCONS cftrans f1 f2 f3 f4 b0 cCOND c= cftrans f1 f2 f3 f4 b0 cFST cytrans f1 f2 f3 f4 b0 cNIL ccat cbetwn ccore f1 f3 cftrans f1 f2 f3 f4 b0 cFST cytrans f1 f2 f3 f4 b0 cCONS cFST cytrans f1 f2 f3 f4 b0 cNIL ciota cNUMERAL c_0 f5 c= cCOND c= cFST cztrans f1 f2 f3 f4 cPRE f5 cFST f4 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f1 f3 cFST cztrans f1 f2 f3 f4 cPRE f5 cFST f4 cCONS cSOME cFST f4 cNIL cCOND c= cFST cztrans f1 f2 f3 f4 cPRE f5 cFST f4 cNIL ccat cbetwn ccore f1 f3 cFST cztrans f1 f2 f3 f4 cPRE f5 cFST f4 cCONS cFST f4 cNIL c==> f0 f6
+ |- ((((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)) = ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)))) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))))) = ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)))))
T c= c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= ccat cbetwn ccore f2 f4 cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL c= cCOND c= cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL c= cCOND c= cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL
+ |- (((!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d)))))) ==> ((\b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d)))))) b)) = ((\b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d)))))) b))
T c= c==> ! ! ! c==> c/\ c= f0 b1 c= b0 b2 c= ccat f0 b0 ccat b1 b2 * / ! ! c==> c/\ c= f0 b1 c= b0 b2 c= ccat f0 b0 ccat b1 b2 f1 * / ! ! c==> c/\ c= f0 b1 c= b0 b2 c= ccat f0 b0 ccat b1 b2 f1
- |- ((((~ (x' = (NUMERAL _0))) ==> ((FST (((((ztrans L) N) r) x) (PRE x'))) = (FST (((((ztrans L) N) r) x) (PRE x'))))) ==> ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))))) = ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))))
T c= c==> c==> c~ c= f0 cNUMERAL c_0 c= cFST cztrans f1 f2 f3 f4 cPRE f0 cFST cztrans f1 f2 f3 f4 cPRE f0 c= cCOND c= f0 cNUMERAL c_0 cSND f4 cFST cztrans f1 f2 f3 f4 cPRE f0 cCOND c= f0 cNUMERAL c_0 cSND f4 cFST cztrans f1 f2 f3 f4 cPRE f0 c= cCOND c= f0 cNUMERAL c_0 cSND f4 cFST cztrans f1 f2 f3 f4 cPRE f0 cCOND c= f0 cNUMERAL c_0 cSND f4 cFST cztrans f1 f2 f3 f4 cPRE f0
- |- (((!g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cCOND b0 b1 b2 * / ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cCOND b0 b1 b2 f5 * / ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cCOND b0 b1 b2 f5
+ |- ((\t. (((filter a) ((CONS x) t)) = (((COND (a x)) ((CONS x) ((filter a) t))) ((filter a) t)))) t)
T * / c= cfilter f0 cCONS f1 b0 cCOND * f0 f1 cCONS f1 cfilter f0 b0 cfilter f0 b0 f2
- ((((prev_el ((core L) r)) w) , w) = x), (((((transform_count L) N) r) x) = k) |- (((((transform_count L) N) r) (((prev_el ((core L) r)) w) , w)) = k)
T c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c==> c= ctransform_count f0 f4 f1 f3 f5 c= ctransform_count f0 f4 f1 c, cprev_el ccore f0 f1 f2 f2 f5
+ |- ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = t')) ==> (((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) t') e'))))
T c==> c==> c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cNIL f5 c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= ccat cfilter part cisSome cmap part cSOME cbetwn ccore f2 f4 cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL f6 c= cCOND c= cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f2 f4 cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 f6
- |- (((!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cCOND f5 b0 b1 * / ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cCOND f5 b0 b1 f6 * / ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cCOND f5 b0 b1 f6
+ |- ((((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) ((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))) = ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) ((filter isSome) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))))
T c= c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL
+ (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) |- (((T ==> (((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) ((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))) = ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))))) ==> (((~ T) ==> (((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = e')) ==> ((((COND (isSome (SOME (FST (((((ztrans L) N) r) x) (PRE k)))))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) ((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))))) ((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))) = (((COND T) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))))) e')))) = (((~ T) ==> (((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = e')) ==> ((((COND (isSome (SOME (FST (((((ztrans L) N) r) x) (PRE k)))))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) ((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))))) ((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))) = (((COND T) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))))) e'))))
T c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c= c==> c==> cT c= cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL c==> c==> c~ cT c= cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 f5 c= cCOND cisSome cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND cT cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL f5 c==> c==> c~ cT c= cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 f5 c= cCOND cisSome cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND cT cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL f5
+ (?w. ((((prev_el ((core L) r)) w) , w) = x)), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((transform_count L) N) r) x) = k), ((?w. ((((prev_el ((core L) r)) w) , w) = x)) /\ (is_restricted (hypermap_of_list L))), ((((marked_list L) N) r) x) |- (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))))
T c==> c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= ctransform_count f0 f3 f1 f2 f4 c==> c/\ c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 cis_restricted chypermap_of_list f0 c==> cmarked_list f0 f3 f1 f2 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f3 f1 f2 ccat cflatten cMAP / cCONS cftrans f0 f3 f1 f2 b0 cCOND c= cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cNIL ccat cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cCONS cFST cytrans f0 f3 f1 f2 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cFST f2
- |- ((((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))))) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))))) = ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))))))
T c= c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL
- (?w. ((((prev_el ((core L) r)) w) , w) = x)), ((?w. ((((prev_el ((core L) r)) w) , w) = x)) ==> ((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))) |- ((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))
T c==> c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 c==> c==> c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 c= cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f3 f1 f2 ccat cflatten cMAP / cCONS cSOME cftrans f0 f3 f1 f2 b0 ccat cCOND c= cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cCONS cSOME cFST cytrans f0 f3 f1 f2 b0 cNIL cnseq csizel cbetwn cfind_face f0 f2 cytrans f0 f3 f1 f2 b0 cztrans f0 f3 f1 f2 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cSOME cFST f2 c= cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f3 f1 f2 ccat cflatten cMAP / cCONS cSOME cftrans f0 f3 f1 f2 b0 ccat cCOND c= cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cCONS cSOME cFST cytrans f0 f3 f1 f2 b0 cNIL cnseq csizel cbetwn cfind_face f0 f2 cytrans f0 f3 f1 f2 b0 cztrans f0 f3 f1 f2 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cSOME cFST f2
+ |- ((\f. (!s1. (!s2. (((map f) ((cat s1) s2)) = ((cat ((map f) s1)) ((map f) s2)))))) f)
T * / ! ! c= cmap b0 ccat b1 b2 ccat cmap b0 b1 cmap b0 b2 f0
+ (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l)) |- (((MAP (g o f)) l) = ((MAP g) ((MAP f) l)))
T c==> c= cMAP f0 cMAP f1 f2 cMAP * * part co f0 f1 f2 c= cMAP * * part co f0 f1 f2 cMAP f0 cMAP f1 f2
+ |- ((((cat ((map the) ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))))))) ((map the) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))) = (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))))
T c= c= ccat cmap part cthe cfilter part cisSome cmap part cSOME cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 cmap part cthe cCONS cSOME cFST cytrans f0 f4 f1 f3 f2 cNIL ccat cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 cCONS cFST cytrans f0 f4 f1 f3 f2 cNIL c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 cCONS cSOME cFST cytrans f0 f4 f1 f3 f2 cNIL ccat cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 cCONS cFST cytrans f0 f4 f1 f3 f2 cNIL
+ |- (((!xs. (((filter isSome) ((MAP SOME) xs)) = ((MAP SOME) xs))) ==> ((\xs. (((filter isSome) ((MAP SOME) xs)) = ((MAP SOME) xs))) xs)) = ((\xs. (((filter isSome) ((MAP SOME) xs)) = ((MAP SOME) xs))) xs))
T c= c==> ! c= cfilter part cisSome cMAP part cSOME b0 cMAP part cSOME b0 * / c= cfilter part cisSome cMAP part cSOME b0 cMAP part cSOME b0 f0 * / c= cfilter part cisSome cMAP part cSOME b0 cMAP part cSOME b0 f0
+ |- ((((isSome (SOME (FST x))) = T) ==> ((T ==> (((CONS (SOME (FST x))) ((filter isSome) NIL)) = t')) ==> (((~ T) ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST x)))) ((CONS (SOME (FST x))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND T) t') e'))))) = ((T ==> (((CONS (SOME (FST x))) ((filter isSome) NIL)) = t')) ==> (((~ T) ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST x)))) ((CONS (SOME (FST x))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND T) t') e')))))
T c= c==> c= cisSome cSOME cFST f0 cT c==> c==> cT c= cCONS cSOME cFST f0 cfilter part cisSome cNIL f1 c==> c==> c~ cT c= cfilter part cisSome cNIL f2 c= cCOND cisSome cSOME cFST f0 cCONS cSOME cFST f0 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND cT f1 f2 c==> c==> cT c= cCONS cSOME cFST f0 cfilter part cisSome cNIL f1 c==> c==> c~ cT c= cfilter part cisSome cNIL f2 c= cCOND cisSome cSOME cFST f0 cCONS cSOME cFST f0 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND cT f1 f2
- |- (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) e')))
T c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f5 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f5
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
+ |- (((!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (((MAP the) NIL) = t')) ==> (((~ g') ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((MAP the) NIL)) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (((MAP the) NIL) = t')) ==> (((~ g') ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((MAP the) NIL)) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (((MAP the) NIL) = t')) ==> (((~ g') ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((MAP the) NIL)) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cMAP part cthe cNIL b0 c==> c==> c~ f5 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cMAP part cthe cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND f5 b0 b1 * / ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cMAP part cthe cNIL b0 c==> c==> c~ f5 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cMAP part cthe cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND f5 b0 b1 f6 * / ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cMAP part cthe cNIL b0 c==> c==> c~ f5 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cMAP part cthe cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND f5 b0 b1 f6
+ |- ((\e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))) = (((COND g') t') e')))))) e')
T * / c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL b0 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 f6 b0 f7
- |- ((\g'. (!t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL b2 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND b0 b1 b2 f5
+ |- ((((\b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)) b) ==> (((map the) ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) = (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))))) = T)
T c= c==> * / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0 f5 c= cmap part cthe cfilter part cisSome cmap part cSOME cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 cT
- |- ((((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))))) = ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))))
T c= c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL
- |- ((\t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND f5 b0 b1 f6
+ |- (((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) ==> ((((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ (((MAP the) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))) = q')) ==> (((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) ==> (((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ (((MAP the) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))))) = ((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) ==> q')))
T c==> c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c= c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cMAP part cthe cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL f5 c= c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cMAP part cthe cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 f5
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((prev_el ((core L) r)) w) , w) = x), (((((transform_count L) N) r) x) = k), ((((marked_list L) N) r) x) |- (((?w. ((((prev_el ((core L) r)) w) , w) = x)) ==> ((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))) ==> (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c==> c= ctransform_count f0 f4 f1 f3 f5 c==> cmarked_list f0 f4 f1 f3 c==> c==> c? / c= c, cprev_el ccore f0 f1 b0 b0 f3 c= cdest_triple_full ccore f0 f1 cSND f3 ccore_triple_v4 f0 f4 f1 f3 ccat cflatten cMAP / cCONS cSOME cftrans f0 f4 f1 f3 b0 ccat cCOND c= cftrans f0 f4 f1 f3 b0 cFST cytrans f0 f4 f1 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f4 f1 f3 b0 cFST cytrans f0 f4 f1 f3 b0 cCONS cSOME cFST cytrans f0 f4 f1 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f4 f1 f3 b0 cztrans f0 f4 f1 f3 b0 cNONE ciota cNUMERAL c_0 f5 cCONS cSOME cFST cztrans f0 f4 f1 f3 cPRE f5 cCOND c= cFST cztrans f0 f4 f1 f3 cPRE f5 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f4 f1 f3 cPRE f5 cFST f3 cSOME cFST f3 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f1 cSND f3 ccore_triple_v4 f0 f4 f1 f3 ccat cflatten cMAP / cCONS cftrans f0 f4 f1 f3 b0 cCOND c= cftrans f0 f4 f1 f3 b0 cFST cytrans f0 f4 f1 f3 b0 cNIL ccat cbetwn ccore f0 f1 cftrans f0 f4 f1 f3 b0 cFST cytrans f0 f4 f1 f3 b0 cCONS cFST cytrans f0 f4 f1 f3 b0 cNIL ciota cNUMERAL c_0 f5 cCONS cFST cztrans f0 f4 f1 f3 cPRE f5 cCOND c= cFST cztrans f0 f4 f1 f3 cPRE f5 cFST f3 cNIL crcons cbetwn ccore f0 f1 cFST cztrans f0 f4 f1 f3 cPRE f5 cFST f3 cFST f3
- |- ((\t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b1 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 b0 b1 f6
+ |- ((\g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (((filter isSome) NIL) = t')) ==> (((~ g') ==> (((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((filter isSome) NIL)) ((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cfilter part cisSome cNIL b1 c==> c==> c~ b0 c= cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cfilter part cisSome cNIL cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND b0 b1 b2 f5
+ |- ((((ALL (\x. (((the o SOME) x) = x))) b) ==> (((MAP (the o SOME)) b) = b)) = (((MAP (the o SOME)) b) = b))
T c= c==> cALL / c= co part cthe part cSOME b0 b0 f0 c= cMAP * * part co part cthe part cSOME f0 f0 c= cMAP * * part co part cthe part cSOME f0 f0
+ |- ((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))))
T c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL
+ |- (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))
T c= cMAP f0 cCONS f1 f2 cCONS * f0 f1 cMAP f0 f2
+ |- (T ==> (((CONS (SOME (FST x))) ((filter isSome) NIL)) = ((CONS (SOME (FST x))) NIL)))
T c==> cT c= cCONS cSOME cFST f0 cfilter part cisSome cNIL cCONS cSOME cFST f0 cNIL
+ |- (((!g. (!l. (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l)))) ==> ((\g. (!l. (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l)))) g)) = ((\g. (!l. (((MAP g) ((MAP f) l)) = ((MAP (g o f)) l)))) g))
T c= c==> ! ! c= cMAP b0 cMAP f0 b1 cMAP * * part co b0 f0 b1 * / ! c= cMAP b0 cMAP f0 b1 cMAP * * part co b0 f0 b1 f1 * / ! c= cMAP b0 cMAP f0 b1 cMAP * * part co b0 f0 b1 f1
+ |- ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = t')) ==> (((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) t') e'))))
T c==> c==> c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cNIL f5 c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL f6 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 f6
+ |- (((!s1. (!s2. (((filter a) ((cat s1) s2)) = ((cat ((filter a) s1)) ((filter a) s2))))) ==> ((\s1. (!s2. (((filter a) ((cat s1) s2)) = ((cat ((filter a) s1)) ((filter a) s2))))) s1)) = ((\s1. (!s2. (((filter a) ((cat s1) s2)) = ((cat ((filter a) s1)) ((filter a) s2))))) s1))
T c= c==> ! ! c= cfilter f0 ccat b0 b1 ccat cfilter f0 b0 cfilter f0 b1 * / ! c= cfilter f0 ccat b0 b1 ccat cfilter f0 b0 cfilter f0 b1 f1 * / ! c= cfilter f0 ccat b0 b1 ccat cfilter f0 b0 cfilter f0 b1 f1
+ |- (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((MAP the) NIL)) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) e')))
T c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL f5 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cMAP part cthe cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f5
- |- (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) e')))
T c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL f5 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL f5
- |- (((!g'. (!t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL b2 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND b0 b1 b2 * / ! ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL b2 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND b0 b1 b2 f5 * / ! ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL b2 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND b0 b1 b2 f5
+ |- (((!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3 b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3 cCOND f5 b0 b1 * / ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3 b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3 cCOND f5 b0 b1 f6 * / ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3 b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3 cCOND f5 b0 b1 f6
+ |- ((!N. (!r. (!x. (!k. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((transform_count L) N) r) x) = k) /\ ((?w. ((((prev_el ((core L) r)) w) , w) = x)) /\ (is_restricted (hypermap_of_list L)))))))) ==> (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))))))))) = T)
T c= ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= ctransform_count f0 b0 b1 b2 b3 c/\ c? / c= c, cprev_el ccore f0 b1 b4 b4 b2 cis_restricted chypermap_of_list f0 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 b1 cSND b2 ccore_triple_v4 f0 b0 b1 b2 ccat cflatten cMAP / cCONS cftrans f0 b0 b1 b2 b4 cCOND c= cftrans f0 b0 b1 b2 b4 cFST cytrans f0 b0 b1 b2 b4 cNIL ccat cbetwn ccore f0 b1 cftrans f0 b0 b1 b2 b4 cFST cytrans f0 b0 b1 b2 b4 cCONS cFST cytrans f0 b0 b1 b2 b4 cNIL ciota cNUMERAL c_0 b3 cCONS cFST cztrans f0 b0 b1 b2 cPRE b3 cCOND c= cFST cztrans f0 b0 b1 b2 cPRE b3 cFST b2 cNIL crcons cbetwn ccore f0 b1 cFST cztrans f0 b0 b1 b2 cPRE b3 cFST b2 cFST b2 cT
- |- ((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL) = ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)))
T c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL
- |- (((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = NIL)) ==> (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) e')))) = (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) e'))))
T c= c==> c==> c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cNIL cNIL c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f5 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL f5 c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f5 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL f5
+ |- ((\x. (!i. ((((((ftrans L) N) r) x) i) = (((COND (i = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE i))))))) x)
T * / ! c= cftrans f0 f1 f2 b0 b1 cCOND c= b1 cNUMERAL c_0 cSND b0 cFST cztrans f0 f1 f2 b0 cPRE b1 f3
+ |- (((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (NIL = t')) ==> (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) t') e'))))) = ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (NIL = t')) ==> (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) t') e')))))
T c= c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c==> c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cNIL f5 c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL f6 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 f6 c==> c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cNIL f5 c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL f6 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 f6
+ (~ ((final_list L) r)) |- (((final_list L) r) = F)
T c==> c~ cfinal_list f0 f1 c= cfinal_list f0 f1 cF
+ (!l. (!f. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l)))) |- ((!l. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l))) = T)
T c==> ! ! c==> cALL / c= * b1 b2 b2 b0 c= cMAP b1 b0 b0 c= ! c==> cALL / c= * f0 b1 b1 b0 c= cMAP f0 b0 b0 cT
+ |- ((\e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (((MAP the) NIL) = t')) ==> (((~ g') ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((MAP the) NIL)) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND g') t') e')))))) e')
T * / c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cMAP part cthe cNIL f6 c==> c==> c~ f5 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b0 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cMAP part cthe cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND f5 f6 b0 f7
- (_11244029 = _11244031) |- ((_11244029 = _11244031) /\ ((~ (_11244030 = _11244032)) \/ (((final_list _11244031) _11244032) \/ (~ ((final_list _11244029) _11244030)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cfinal_list f1 f3 c~ cfinal_list f0 f2
- |- ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)) = (((COND g') t') e')))))
T c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL f7 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 f6 f7
+ |- ((!r. (!x. (!k. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((transform_count L) N) r) x) = k) /\ ((?w. ((((prev_el ((core L) r)) w) , w) = x)) /\ (is_restricted (hypermap_of_list L)))))))) ==> (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)))))))))) = T)
T c= ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 b0 c/\ c= ctransform_count f0 f1 b0 b1 b2 c/\ c? / c= c, cprev_el ccore f0 b0 b3 b3 b1 cis_restricted chypermap_of_list f0 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 b0 cSND b1 ccore_triple_v4 f0 f1 b0 b1 ccat cflatten cMAP / cCONS cftrans f0 f1 b0 b1 b3 cCOND c= cftrans f0 f1 b0 b1 b3 cFST cytrans f0 f1 b0 b1 b3 cNIL ccat cbetwn ccore f0 b0 cftrans f0 f1 b0 b1 b3 cFST cytrans f0 f1 b0 b1 b3 cCONS cFST cytrans f0 f1 b0 b1 b3 cNIL ciota cNUMERAL c_0 b2 cCONS cFST cztrans f0 f1 b0 b1 cPRE b2 cCOND c= cFST cztrans f0 f1 b0 b1 cPRE b2 cFST b1 cNIL crcons cbetwn ccore f0 b0 cFST cztrans f0 f1 b0 b1 cPRE b2 cFST b1 cFST b1 cT
- |- (((!e'. ((b = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> (y = e')) ==> ((((COND b) x) y) = (((COND g') t') e')))))) ==> ((\e'. ((b = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> (y = e')) ==> ((((COND b) x) y) = (((COND g') t') e')))))) e')) = ((\e'. ((b = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> (y = e')) ==> ((((COND b) x) y) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 * / c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 f5 * / c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 f5
+ |- (((!t. (((filter a) ((CONS x) t)) = (((COND (a x)) ((CONS x) ((filter a) t))) ((filter a) t)))) ==> ((\t. (((filter a) ((CONS x) t)) = (((COND (a x)) ((CONS x) ((filter a) t))) ((filter a) t)))) t)) = ((\t. (((filter a) ((CONS x) t)) = (((COND (a x)) ((CONS x) ((filter a) t))) ((filter a) t)))) t))
T c= c==> ! c= cfilter f0 cCONS f1 b0 cCOND * f0 f1 cCONS f1 cfilter f0 b0 cfilter f0 b0 * / c= cfilter f0 cCONS f1 b0 cCOND * f0 f1 cCONS f1 cfilter f0 b0 cfilter f0 b0 f2 * / c= cfilter f0 cCONS f1 b0 cCOND * f0 f1 cCONS f1 cfilter f0 b0 cfilter f0 b0 f2
+ |- ((\t'. (!e'. (((isSome (SOME (FST x))) = g') ==> ((g' ==> (((CONS (SOME (FST x))) ((filter isSome) NIL)) = t')) ==> (((~ g') ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST x)))) ((CONS (SOME (FST x))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cisSome cSOME cFST f0 f1 c==> c==> f1 c= cCONS cSOME cFST f0 cfilter part cisSome cNIL b0 c==> c==> c~ f1 c= cfilter part cisSome cNIL b1 c= cCOND cisSome cSOME cFST f0 cCONS cSOME cFST f0 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND f1 b0 b1 f2
+ |- ((p /\ (q ==> r)) ==> ((p ==> q) ==> r))
T c==> c/\ f0 c==> f1 f2 c==> c==> f0 f1 f2
+ |- ((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))))
T c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL
- |- (((((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))) ==> ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F))))))))) ==> (((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))) ==> ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))))) = (((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))) ==> ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F))))))))))
T c= c==> c==> c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c==> c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c==> c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF
+ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) |- (((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) /\ (((MAP the) NIL) = NIL))
T c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c/\ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cMAP part cthe cNIL cNIL
- |- ((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))
T c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL
- |- (((?w. ((((prev_el ((core L) r)) w) , w) = x)) ==> ((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))) = ((?w. ((((prev_el ((core L) r)) w) , w) = x)) ==> ((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))))
T c= c==> c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 c= cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f3 f1 f2 ccat cflatten cMAP / cCONS cSOME cftrans f0 f3 f1 f2 b0 ccat cCOND c= cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cCONS cSOME cFST cytrans f0 f3 f1 f2 b0 cNIL cnseq csizel cbetwn cfind_face f0 f2 cytrans f0 f3 f1 f2 b0 cztrans f0 f3 f1 f2 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cSOME cFST f2 c==> c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 c= cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f3 f1 f2 ccat cflatten cMAP / cCONS cSOME cftrans f0 f3 f1 f2 b0 ccat cCOND c= cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cCONS cSOME cFST cytrans f0 f3 f1 f2 b0 cNIL cnseq csizel cbetwn cfind_face f0 f2 cytrans f0 f3 f1 f2 b0 cztrans f0 f3 f1 f2 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cSOME cFST f2
+ |- ((\a. (!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x)))))) a)
T * / ! c= call b0 b1 ! c==> cMEM b2 b1 * b0 b2 f0
+ |- ((((cat ((map the) (flatten ((map ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k))))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) ((map the) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((map SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))))) = ((cat (flatten ((map (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))))) = (((MAP the) ((cat (flatten ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))))))
T c= c= ccat cmap part cthe cflatten cmap * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cmap part cthe cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cmap part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL ccat cflatten cmap / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL c= cMAP part cthe ccat cflatten cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL
+ |- ((!r. (!L. (!w. (!k. (!N. ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> (?w. ((((prev_el ((core L) r)) w) , w) = x)))))))))))))) = T)
T c= ! ! ! ! ! c==> cgood_list b1 c==> cgood_list_nodes b1 c==> cmarked_list b1 b4 b0 f0 c==> c~ cfinal_list b1 b0 c==> c= ctransform_count b1 b4 b0 f0 b3 c==> c= c, cprev_el ccore b1 b0 b2 b2 f0 c==> cis_restricted chypermap_of_list b1 c? / c= c, cprev_el ccore b1 b0 b5 b5 f0 cT
- |- ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))
T c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL f7 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 f6 f7
+ ((((prev_el ((core L) r)) w) , w) = x) |- (x = (((prev_el ((core L) r)) w) , w))
T c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c= f3 c, cprev_el ccore f0 f1 f2 f2
+ |- ((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)) = ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))))
T c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL
+ (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) |- ((((COND (isSome (SOME (((((ftrans L) N) r) x) x')))) ((CONS (SOME (((((ftrans L) N) r) x) x'))) ((filter isSome) ((cat (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE))))) ((filter isSome) ((cat (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE)))) = (((COND T) ((CONS (SOME (((((ftrans L) N) r) x) x'))) ((cat (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ((filter isSome) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE))))) ((cat (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL))) ((filter isSome) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE)))))
T c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c= cCOND cisSome cSOME cftrans f0 f1 f2 f3 f4 cCONS cSOME cftrans f0 f1 f2 f3 f4 cfilter part cisSome ccat cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 f4 cztrans f0 f1 f2 f3 f4 cNONE cfilter part cisSome ccat cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 f4 cztrans f0 f1 f2 f3 f4 cNONE cCOND cT cCONS cSOME cftrans f0 f1 f2 f3 f4 ccat cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cfilter part cisSome cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 f4 cztrans f0 f1 f2 f3 f4 cNONE ccat cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL cfilter part cisSome cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 f4 cztrans f0 f1 f2 f3 f4 cNONE
+ |- ((T ==> (((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) ((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))) = t')) ==> (((~ T) ==> (((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = e')) ==> ((((COND (isSome (SOME (FST (((((ztrans L) N) r) x) (PRE k)))))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) ((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))))) ((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))) = (((COND T) t') e'))))
T c==> c==> cT c= cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 f5 c==> c==> c~ cT c= cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 f6 c= cCOND cisSome cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND cT f5 f6
- |- ((~ (_11244043 = _11244044)) \/ ((good_list _11244044) \/ (~ (good_list _11244043))))
T c\/ c~ c= f0 f1 c\/ cgood_list f1 c~ cgood_list f0
+ (~ T) |- ((~ T) /\ (((filter isSome) NIL) = NIL))
T c==> c~ cT c/\ c~ cT c= cfilter part cisSome cNIL cNIL
+ (~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) |- (!w. (~ ((((prev_el ((core L) r)) w) , w) = x)))
T c==> c~ c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 ! c~ c= c, cprev_el ccore f0 f1 b0 b0 f2
- |- ((((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))) = ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))))
T c= c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL
- |- (((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = t')) ==> (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) t') e'))))) = ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = t')) ==> (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) t') e')))))
T c= c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c==> c==> c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cNIL f5 c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f6 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 f6 c==> c==> c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cNIL f5 c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f6 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 f6
+ |- ((\t'. (!e'. (((isSome (SOME (FST (((((ytrans L) N) r) x) x')))) = g') ==> ((g' ==> (((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) = t')) ==> (((~ g') ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL b0 c==> c==> c~ f5 c= cfilter part cisSome cNIL b1 c= cCOND cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND f5 b0 b1 f6
- |- (((x' = (NUMERAL _0)) = g') ==> ((g' ==> ((SND x) = t')) ==> (((~ g') ==> ((FST (((((ztrans L) N) r) x) (PRE x'))) = e')) ==> ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (((COND g') t') e')))))
T c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cSND f2 f3 c==> c==> c~ f1 c= cFST cztrans f4 f5 f6 f2 cPRE f0 f7 c= cCOND c= f0 cNUMERAL c_0 cSND f2 cFST cztrans f4 f5 f6 f2 cPRE f0 cCOND f1 f3 f7
- |- ((\e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)) = (((COND g') t') e')))))) e')
T * / c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL b0 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cCOND f5 f6 b0 f7
- |- (((!t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b1 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 b0 b1 * / ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b1 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 b0 b1 f6 * / ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b1 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 b0 b1 f6
- ((ALL (\x. ((f x) = x))) l) |- ((!l. (!f. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l)))) ==> (((MAP f) l) = l))
T c==> cALL / c= * f0 b0 b0 f1 c==> ! ! c==> cALL / c= * b1 b2 b2 b0 c= cMAP b1 b0 b0 c= cMAP f0 f1 f1
- |- ((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))
T c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL
+ |- ((((COND F) t1) t2) = t2)
T c= cCOND cF f0 f1 f1
- |- ((((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))) = ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))))
T c= c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL
- |- ((\t'. (!e'. ((b = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> (y = e')) ==> ((((COND b) x) y) = (((COND g') t') e'))))))) t')
T * / ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c==> c==> c~ f1 c= f3 b1 c= cCOND f0 f2 f3 cCOND f1 b0 b1 f4
- (_11244052 = _11244054), (_11244051 = _11244053) |- ((_11244051 = _11244053) /\ (((prev_el _11244051) _11244052) = ((prev_el _11244053) _11244054)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= cprev_el f2 f0 cprev_el f3 f1
- |- (((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) ==> ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s)) = ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s))
T c= c==> ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0 * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0
- |- ((\g'. (!t'. (!e'. ((b = g') ==> ((g' ==> (((MAP the) x) = t')) ==> (((~ g') ==> (((MAP the) y) = e')) ==> ((((COND b) ((MAP the) x)) ((MAP the) y)) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= f0 b0 c==> c==> b0 c= cMAP part cthe f1 b1 c==> c==> c~ b0 c= cMAP part cthe f2 b2 c= cCOND f0 cMAP part cthe f1 cMAP part cthe f2 cCOND b0 b1 b2 f3
- (~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) |- ((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) /\ (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))
T c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c/\ c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL
- (~ F), (~ (?w. ((((prev_el ((core L) r)) w) , w) = x))), ((((prev_el ((core L) r)) w) , w) = x) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 c==> c= c, cprev_el ccore f0 f1 f3 f3 f2 c/\ c~ cF cF
- |- ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = t')) ==> (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) t') e'))))
T c==> c==> c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cNIL f5 c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f6 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 f6
- (~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) |- (((~ ((FST x) = (FST (((((ztrans L) N) r) x) (PRE k))))) ==> (((FST x) = (FST (((((ztrans L) N) r) x) (PRE k)))) = F)) = (((FST x) = (FST (((((ztrans L) N) r) x) (PRE k)))) = F))
T c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= c==> c~ c= cFST f3 cFST cztrans f0 f1 f2 f3 cPRE f4 c= c= cFST f3 cFST cztrans f0 f1 f2 f3 cPRE f4 cF c= c= cFST f3 cFST cztrans f0 f1 f2 f3 cPRE f4 cF
- ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))), (((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))) ==> ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F))))))))) |- (((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))) /\ ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))))
T c==> c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c==> c==> c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c/\ c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF
- |- ((\t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cCOND f5 b0 b1 f6
+ |- ((\f. (!g. (!x. (((f o g) x) = (f (g x)))))) f)
T * / ! ! c= co b0 b1 b2 * b0 * b1 b2 f0
- ((((prev_el ((core L) r)) w) , w) = x), (((((transform_count L) N) r) x) = k) |- ((~ ((((prev_el ((core L) r)) _11243996) , _11243996) = (((prev_el ((core L) r)) w) , w))) = (~ ((((prev_el ((core L) r)) _11243996) , _11243996) = (((prev_el ((core L) r)) w) , w))))
T c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c==> c= ctransform_count f0 f4 f1 f3 f5 c= c~ c= c, cprev_el ccore f0 f1 f6 f6 c, cprev_el ccore f0 f1 f2 f2 c~ c= c, cprev_el ccore f0 f1 f6 f6 c, cprev_el ccore f0 f1 f2 f2
- |- ((\p'. (!q'. (((?w. ((((prev_el ((core L) r)) w) , w) = x)) = p') ==> ((p' ==> (((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))))) = q')) ==> (((?w. ((((prev_el ((core L) r)) w) , w) = x)) ==> ((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c? / c= c, cprev_el ccore f0 f1 b2 b2 f2 b0 c==> c==> b0 c= c= cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f3 f1 f2 ccat cflatten cMAP / cCONS cSOME cftrans f0 f3 f1 f2 b2 ccat cCOND c= cftrans f0 f3 f1 f2 b2 cFST cytrans f0 f3 f1 f2 b2 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b2 cFST cytrans f0 f3 f1 f2 b2 cCONS cSOME cFST cytrans f0 f3 f1 f2 b2 cNIL cnseq csizel cbetwn cfind_face f0 f2 cytrans f0 f3 f1 f2 b2 cztrans f0 f3 f1 f2 b2 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cSOME cFST f2 b1 c= c==> c? / c= c, cprev_el ccore f0 f1 b2 b2 f2 c= cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f3 f1 f2 ccat cflatten cMAP / cCONS cSOME cftrans f0 f3 f1 f2 b2 ccat cCOND c= cftrans f0 f3 f1 f2 b2 cFST cytrans f0 f3 f1 f2 b2 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b2 cFST cytrans f0 f3 f1 f2 b2 cCONS cSOME cFST cytrans f0 f3 f1 f2 b2 cNIL cnseq csizel cbetwn cfind_face f0 f2 cytrans f0 f3 f1 f2 b2 cztrans f0 f3 f1 f2 b2 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cSOME cFST f2 c==> b0 b1 f5
- |- ((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))
T c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL
- |- ((\t'. (!e'. ((b = g') ==> ((g' ==> (((MAP the) x) = t')) ==> (((~ g') ==> (((MAP the) y) = e')) ==> ((((COND b) ((MAP the) x)) ((MAP the) y)) = (((COND g') t') e'))))))) t')
T * / ! c==> c= f0 f1 c==> c==> f1 c= cMAP part cthe f2 b0 c==> c==> c~ f1 c= cMAP part cthe f3 b1 c= cCOND f0 cMAP part cthe f2 cMAP part cthe f3 cCOND f1 b0 b1 f4
+ |- ((\b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))))
T * / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0 cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2
+ |- (((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) ==> (((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))))) = ((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) ==> (((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ (((MAP the) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))))))
T c= c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cMAP part cthe cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL
+ |- ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))) = (((COND g') t') e')))))
T c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3 f7 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cFST f3 cCOND f5 f6 f7
+ ((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))))) |- (((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))))) /\ (((MAP the) ((filter isSome) ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)))))))
T c==> c= cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f3 f1 f2 ccat cflatten cMAP / cCONS cSOME cftrans f0 f3 f1 f2 b0 ccat cCOND c= cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cCONS cSOME cFST cytrans f0 f3 f1 f2 b0 cNIL cnseq csizel cbetwn cfind_face f0 f2 cytrans f0 f3 f1 f2 b0 cztrans f0 f3 f1 f2 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cSOME cFST f2 c/\ c= cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f3 f1 f2 ccat cflatten cMAP / cCONS cSOME cftrans f0 f3 f1 f2 b0 ccat cCOND c= cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cCONS cSOME cFST cytrans f0 f3 f1 f2 b0 cNIL cnseq csizel cbetwn cfind_face f0 f2 cytrans f0 f3 f1 f2 b0 cztrans f0 f3 f1 f2 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cSOME cFST f2 c= cMAP part cthe cfilter part cisSome ccat cflatten cMAP / cCONS cSOME cftrans f0 f3 f1 f2 b0 ccat cCOND c= cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cCONS cSOME cFST cytrans f0 f3 f1 f2 b0 cNIL cnseq csizel cbetwn cfind_face f0 f2 cytrans f0 f3 f1 f2 b0 cztrans f0 f3 f1 f2 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cSOME cFST f2 ccat cflatten cMAP / cCONS cftrans f0 f3 f1 f2 b0 cCOND c= cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cNIL ccat cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cCONS cFST cytrans f0 f3 f1 f2 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cFST f2
+ (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) |- (((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ (((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) ((MAP the) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))))) = ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))))
T c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cMAP part cthe cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL
+ |- (((!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))) ==> ((\c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))) c)) = ((\c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))) c))
T c= c==> ! ! c==> c/\ c= f0 b0 c= f1 b1 c= ccat f0 f1 ccat b0 b1 * / ! c==> c/\ c= f0 b0 c= f1 b1 c= ccat f0 f1 ccat b0 b1 f2 * / ! c==> c/\ c= f0 b0 c= f1 b1 c= ccat f0 f1 ccat b0 b1 f2
+ |- (((cat (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))) ((MAP the) ((filter isSome) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE)))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))))
T c= ccat cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe cfilter part cisSome cnseq csizel cbetwn cfind_face f2 f1 cytrans f2 f3 f4 f1 f0 cztrans f2 f3 f4 f1 f0 cNONE cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cFST cytrans f2 f3 f4 f1 f0 cNIL
- ((NUMERAL _0) = x') |- (x' = (NUMERAL _0))
T c==> c= cNUMERAL c_0 f0 c= f0 cNUMERAL c_0
+ (~ (?w. ((((prev_el ((core L) r)) w) , w) = x))), ((((prev_el ((core L) r)) w) , w) = x) |- (((((prev_el ((core L) r)) _11243996) , _11243996) = (((prev_el ((core L) r)) w) , w)) ==> F)
T c==> c~ c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 c==> c= c, cprev_el ccore f0 f1 f3 f3 f2 c==> c= c, cprev_el ccore f0 f1 f4 f4 c, cprev_el ccore f0 f1 f3 f3 cF
- |- ((!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))) ==> (!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))))
T c==> ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3 ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3
+ |- (((!t'. (!e'. (((isSome (SOME (FST (((((ytrans L) N) r) x) x')))) = g') ==> ((g' ==> (((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) = t')) ==> (((~ g') ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((isSome (SOME (FST (((((ytrans L) N) r) x) x')))) = g') ==> ((g' ==> (((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) = t')) ==> (((~ g') ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((isSome (SOME (FST (((((ytrans L) N) r) x) x')))) = g') ==> ((g' ==> (((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) = t')) ==> (((~ g') ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL b0 c==> c==> c~ f5 c= cfilter part cisSome cNIL b1 c= cCOND cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND f5 b0 b1 * / ! c==> c= cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL b0 c==> c==> c~ f5 c= cfilter part cisSome cNIL b1 c= cCOND cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND f5 b0 b1 f6 * / ! c==> c= cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL b0 c==> c==> c~ f5 c= cfilter part cisSome cNIL b1 c= cCOND cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND f5 b0 b1 f6
- ((\b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)) b) |- (((\b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)) b) /\ (?b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)))
T c==> * / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0 f5 c/\ * / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0 f5 c? / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0
+ |- ((?b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)) ==> (((map the) ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) = (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))
T c==> c? / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0 c= cmap part cthe cfilter part cisSome cmap part cSOME cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2
+ |- (!x. (((MEM x) b) ==> (((the o SOME) x) = x)))
T c==> cMEM f0 f1 c= co part cthe part cSOME f0 f0
+ |- (((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = NIL)) ==> (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) e')))) = (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) e'))))
T c= c==> c==> c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cNIL cNIL c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f5 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL f5 c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f5 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL f5
- (!f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))), ((ALL (\x. ((f x) = (g x)))) l) |- (((ALL (\x. ((f x) = (g x)))) l) /\ (((MAP f) l) = ((MAP g) l)))
T c==> ! ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2 c==> cALL / c= * f0 b0 * f1 b0 f2 c/\ cALL / c= * f0 b0 * f1 b0 f2 c= cMAP f0 f2 cMAP f1 f2
+ |- (((filter f) (flatten s)) = (flatten ((MAP (filter f)) s)))
T c= cfilter f0 cflatten f1 cflatten cMAP * part cfilter f0 f1
- |- (((~ b) ==> (y = e')) ==> ((((COND b) x) y) = (((COND b) x) e')))
T c==> c==> c~ f0 c= f1 f2 c= cCOND f0 f3 f1 cCOND f0 f3 f2
+ (!l. (!f. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l)))) |- (((!f. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l))) ==> ((\f. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l))) f)) = ((\f. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l))) f))
T c==> ! ! c==> cALL / c= * b1 b2 b2 b0 c= cMAP b1 b0 b0 c= c==> ! c==> cALL / c= * b0 b1 b1 f0 c= cMAP b0 f0 f0 * / c==> cALL / c= * b0 b1 b1 f0 c= cMAP b0 f0 f0 f1 * / c==> cALL / c= * b0 b1 b1 f0 c= cMAP b0 f0 f0 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((prev_el ((core L) r)) w) , w) = x), (((((transform_count L) N) r) x) = k), ((((marked_list L) N) r) x) |- (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c==> c= ctransform_count f0 f4 f1 f3 f5 c==> cmarked_list f0 f4 f1 f3 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f1 cSND f3 ccore_triple_v4 f0 f4 f1 f3 ccat cflatten cMAP / cCONS cftrans f0 f4 f1 f3 b0 cCOND c= cftrans f0 f4 f1 f3 b0 cFST cytrans f0 f4 f1 f3 b0 cNIL ccat cbetwn ccore f0 f1 cftrans f0 f4 f1 f3 b0 cFST cytrans f0 f4 f1 f3 b0 cCONS cFST cytrans f0 f4 f1 f3 b0 cNIL ciota cNUMERAL c_0 f5 cCONS cFST cztrans f0 f4 f1 f3 cPRE f5 cCOND c= cFST cztrans f0 f4 f1 f3 cPRE f5 cFST f3 cNIL crcons cbetwn ccore f0 f1 cFST cztrans f0 f4 f1 f3 cPRE f5 cFST f3 cFST f3
+ |- (((!a. (((filter a) NIL) = NIL)) ==> ((\a. (((filter a) NIL) = NIL)) a)) = ((\a. (((filter a) NIL) = NIL)) a))
T c= c==> ! c= cfilter b0 cNIL cNIL * / c= cfilter b0 cNIL cNIL f0 * / c= cfilter b0 cNIL cNIL f0
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- (((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (((MAP the) NIL) = t')) ==> (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((MAP the) NIL)) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) t') e'))))) = ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (((MAP the) NIL) = t')) ==> (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((MAP the) NIL)) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) t') e')))))
T c= c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c==> c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cMAP part cthe cNIL f5 c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL f6 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cMAP part cthe cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 f6 c==> c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cMAP part cthe cNIL f5 c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL f6 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cMAP part cthe cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 f6
+ (~ (?w. ((((prev_el ((core L) r)) w) , w) = x))), ((((prev_el ((core L) r)) w) , w) = x) |- ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) /\ F)
T c==> c~ c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 c==> c= c, cprev_el ccore f0 f1 f3 f3 f2 c/\ c~ c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 cF
+ (!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))), (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) |- ((ALL (\x. ((((MAP the) o ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) x) = ((\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL))))) x)))) ((iota (NUMERAL _0)) k))
T c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 cALL / c= co * part cMAP part cthe * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b1 ccat cCOND c= cftrans f0 f1 f2 f3 b1 cFST cytrans f0 f1 f2 f3 b1 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b1 cFST cytrans f0 f1 f2 f3 b1 cCONS cSOME cFST cytrans f0 f1 f2 f3 b1 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b1 cztrans f0 f1 f2 f3 b1 cNONE b0 * / cCONS cftrans f0 f1 f2 f3 b1 cCOND c= cftrans f0 f1 f2 f3 b1 cFST cytrans f0 f1 f2 f3 b1 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b1 cFST cytrans f0 f1 f2 f3 b1 cCONS cFST cytrans f0 f1 f2 f3 b1 cNIL b0 ciota cNUMERAL c_0 f4
- |- ((\g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND b0 b1 b2 f5
+ |- (((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F) = (?w. ((((prev_el ((core L) r)) w) , w) = x)))
T c= c==> c~ c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 cF c? / c= c, cprev_el ccore f0 f1 b0 b0 f2
+ (~ T) |- ((F ==> (((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL)) = t')) ==> (((~ F) ==> (((filter isSome) NIL) = e')) ==> ((((COND (isSome (SOME (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND F) t') e'))))
T c==> c~ cT c==> c==> cF c= cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL f5 c==> c==> c~ cF c= cfilter part cisSome cNIL f6 c= cCOND cisSome cSOME cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND cF f5 f6
+ |- ((((MAP (the o SOME)) b) = b) = (((map the) ((filter isSome) ((map SOME) b))) = b))
T c= c= cMAP * * part co part cthe part cSOME f0 f0 c= cmap part cthe cfilter part cisSome cmap part cSOME f0 f0
+ |- (((!x. (((\b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)) x) ==> (((map the) ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) = (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ==> ((?b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)) ==> (((map the) ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) = (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) = ((?b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)) ==> (((map the) ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) = (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))))))
T c= c==> ! c==> * / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b1 b0 c= cmap part cthe cfilter part cisSome cmap part cSOME cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 c==> c? / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0 c= cmap part cthe cfilter part cisSome cmap part cSOME cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 c==> c? / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0 c= cmap part cthe cfilter part cisSome cmap part cSOME cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2
- |- ((((x' = (NUMERAL _0)) ==> ((SND x) = (SND x))) ==> (((~ (x' = (NUMERAL _0))) ==> ((FST (((((ztrans L) N) r) x) (PRE x'))) = e')) ==> ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (((COND (x' = (NUMERAL _0))) (SND x)) e')))) = (((~ (x' = (NUMERAL _0))) ==> ((FST (((((ztrans L) N) r) x) (PRE x'))) = e')) ==> ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (((COND (x' = (NUMERAL _0))) (SND x)) e'))))
T c= c==> c==> c= f0 cNUMERAL c_0 c= cSND f1 cSND f1 c==> c==> c~ c= f0 cNUMERAL c_0 c= cFST cztrans f2 f3 f4 f1 cPRE f0 f5 c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cCOND c= f0 cNUMERAL c_0 cSND f1 f5 c==> c==> c~ c= f0 cNUMERAL c_0 c= cFST cztrans f2 f3 f4 f1 cPRE f0 f5 c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cCOND c= f0 cNUMERAL c_0 cSND f1 f5
+ (!l. (!f. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l)))) |- ((\f. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l))) f)
T c==> ! ! c==> cALL / c= * b1 b2 b2 b0 c= cMAP b1 b0 b0 * / c==> cALL / c= * b0 b1 b1 f0 c= cMAP b0 f0 f0 f1
+ |- ((\e'. (((isSome (SOME (((((ftrans L) N) r) x) x'))) = g') ==> ((g' ==> (((CONS (SOME (((((ftrans L) N) r) x) x'))) ((filter isSome) ((cat (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE)))) = t')) ==> (((~ g') ==> (((filter isSome) ((cat (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE))) = e')) ==> ((((COND (isSome (SOME (((((ftrans L) N) r) x) x')))) ((CONS (SOME (((((ftrans L) N) r) x) x'))) ((filter isSome) ((cat (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE))))) ((filter isSome) ((cat (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE)))) = (((COND g') t') e')))))) e')
T * / c==> c= cisSome cSOME cftrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cCONS cSOME cftrans f0 f1 f2 f3 f4 cfilter part cisSome ccat cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 f4 cztrans f0 f1 f2 f3 f4 cNONE f6 c==> c==> c~ f5 c= cfilter part cisSome ccat cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 f4 cztrans f0 f1 f2 f3 f4 cNONE b0 c= cCOND cisSome cSOME cftrans f0 f1 f2 f3 f4 cCONS cSOME cftrans f0 f1 f2 f3 f4 cfilter part cisSome ccat cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 f4 cztrans f0 f1 f2 f3 f4 cNONE cfilter part cisSome ccat cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 f4 cztrans f0 f1 f2 f3 f4 cNONE cCOND f5 f6 b0 f7
+ |- ((((MAP ((MAP the) o ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))))) ((iota (NUMERAL _0)) k)) = ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k))) = (((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k))) = ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k))))
T c= c= cMAP * * part co * part cMAP part cthe * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4
- (~ (?w. ((((prev_el ((core L) r)) w) , w) = x))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((prev_el ((core L) r)) w) , w) = x), (((((transform_count L) N) r) x) = k), ((((marked_list L) N) r) x) |- ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) /\ F)
T c==> c~ c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= c, cprev_el ccore f0 f1 f3 f3 f2 c==> c= ctransform_count f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 c/\ c~ c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 cF
- |- (((~ (x' = (NUMERAL _0))) ==> ((FST (((((ztrans L) N) r) x) (PRE x'))) = e')) ==> ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (((COND (x' = (NUMERAL _0))) (SND x)) e')))
T c==> c==> c~ c= f0 cNUMERAL c_0 c= cFST cztrans f1 f2 f3 f4 cPRE f0 f5 c= cCOND c= f0 cNUMERAL c_0 cSND f4 cFST cztrans f1 f2 f3 f4 cPRE f0 cCOND c= f0 cNUMERAL c_0 cSND f4 f5
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) e')))
T c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f5 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL f5
- ((((prev_el ((core L) r)) w) , w) = x) |- ((is_restricted (hypermap_of_list L)) = (is_restricted (hypermap_of_list L)))
T c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c= cis_restricted chypermap_of_list f0 cis_restricted chypermap_of_list f0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- |- ((\e'. (((x' = (NUMERAL _0)) = g') ==> ((g' ==> ((SND x) = t')) ==> (((~ g') ==> ((FST (((((ztrans L) N) r) x) (PRE x'))) = e')) ==> ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (((COND g') t') e')))))) e')
T * / c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cSND f2 f3 c==> c==> c~ f1 c= cFST cztrans f4 f5 f6 f2 cPRE f0 b0 c= cCOND c= f0 cNUMERAL c_0 cSND f2 cFST cztrans f4 f5 f6 f2 cPRE f0 cCOND f1 f3 b0 f7
- |- (((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))) = T)
T c= c==> c~ c= cNIL f0 c= cLAST f0 clast f1 f0 cT
+ (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))), (~ T) |- ((~ T) /\ (((filter isSome) ((cat (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE))) = ((cat (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL))) ((filter isSome) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE)))))
T c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c==> c~ cT c/\ c~ cT c= cfilter part cisSome ccat cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 f4 cztrans f0 f1 f2 f3 f4 cNONE ccat cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL cfilter part cisSome cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 f4 cztrans f0 f1 f2 f3 f4 cNONE
+ |- (((!t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (((MAP the) NIL) = t')) ==> (((~ g') ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ((MAP the) NIL)) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (((MAP the) NIL) = t')) ==> (((~ g') ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ((MAP the) NIL)) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (((MAP the) NIL) = t')) ==> (((~ g') ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ((MAP the) NIL)) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cMAP part cthe cNIL b0 c==> c==> c~ f5 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b1 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cMAP part cthe cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 b0 b1 * / ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cMAP part cthe cNIL b0 c==> c==> c~ f5 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b1 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cMAP part cthe cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 b0 b1 f6 * / ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cMAP part cthe cNIL b0 c==> c==> c~ f5 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b1 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cMAP part cthe cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 b0 b1 f6
+ (!l. (!f. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l)))) |- ((\l. (!f. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l)))) l)
T c==> ! ! c==> cALL / c= * b1 b2 b2 b0 c= cMAP b1 b0 b0 * / ! c==> cALL / c= * b1 b2 b2 b0 c= cMAP b1 b0 b0 f0
+ ((\w. ((((prev_el ((core L) r)) w) , w) = x)) w) |- ((((((prev_el ((core L) r)) w) , w) = x) ==> (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))))) = (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)))))))
T c==> * / c= c, cprev_el ccore f0 f1 b0 b0 f2 f3 c= c==> c= c, cprev_el ccore f0 f1 f3 f3 f2 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f4 f1 f2 ccat cflatten cMAP / cCONS cftrans f0 f4 f1 f2 b0 cCOND c= cftrans f0 f4 f1 f2 b0 cFST cytrans f0 f4 f1 f2 b0 cNIL ccat cbetwn ccore f0 f1 cftrans f0 f4 f1 f2 b0 cFST cytrans f0 f4 f1 f2 b0 cCONS cFST cytrans f0 f4 f1 f2 b0 cNIL ciota cNUMERAL c_0 f5 cCONS cFST cztrans f0 f4 f1 f2 cPRE f5 cCOND c= cFST cztrans f0 f4 f1 f2 cPRE f5 cFST f2 cNIL crcons cbetwn ccore f0 f1 cFST cztrans f0 f4 f1 f2 cPRE f5 cFST f2 cFST f2 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f4 f1 f2 ccat cflatten cMAP / cCONS cftrans f0 f4 f1 f2 b0 cCOND c= cftrans f0 f4 f1 f2 b0 cFST cytrans f0 f4 f1 f2 b0 cNIL ccat cbetwn ccore f0 f1 cftrans f0 f4 f1 f2 b0 cFST cytrans f0 f4 f1 f2 b0 cCONS cFST cytrans f0 f4 f1 f2 b0 cNIL ciota cNUMERAL c_0 f5 cCONS cFST cztrans f0 f4 f1 f2 cPRE f5 cCOND c= cFST cztrans f0 f4 f1 f2 cPRE f5 cFST f2 cNIL crcons cbetwn ccore f0 f1 cFST cztrans f0 f4 f1 f2 cPRE f5 cFST f2 cFST f2
- |- ((((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL) = ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL))) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)))) = ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL))))
T c= c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL
+ |- ((!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e')))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 cT
+ |- ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> (?w. ((((prev_el ((core L) r)) w) , w) = x))))))))
T c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c? / c= c, cprev_el ccore f0 f2 b0 b0 f3
- |- ((~ (_11244033 = _11244037)) \/ ((~ (_11244034 = _11244038)) \/ ((~ (_11244035 = _11244039)) \/ ((~ (_11244036 = _11244040)) \/ (((((marked_list _11244037) _11244038) _11244039) _11244040) \/ (~ ((((marked_list _11244033) _11244034) _11244035) _11244036)))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ cmarked_list f1 f3 f5 f7 c~ cmarked_list f0 f2 f4 f6
+ |- ((\d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d)))) d)
T * / c==> c/\ c= f0 f1 c= f2 b0 c= ccat f0 f2 ccat f1 b0 f3
+ |- (F ==> (((CONS (SOME (FST x))) ((filter isSome) NIL)) = ((CONS (SOME (FST x))) NIL)))
T c==> cF c= cCONS cSOME cFST f0 cfilter part cisSome cNIL cCONS cSOME cFST f0 cNIL
+ (?w. ((((prev_el ((core L) r)) w) , w) = x)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((((transform_count L) N) r) x) = k), ((((marked_list L) N) r) x) |- (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))))
T c==> c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= ctransform_count f0 f3 f1 f2 f4 c==> cmarked_list f0 f3 f1 f2 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f3 f1 f2 ccat cflatten cMAP / cCONS cftrans f0 f3 f1 f2 b0 cCOND c= cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cNIL ccat cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cCONS cFST cytrans f0 f3 f1 f2 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cFST f2
+ |- ((((cat ((map the) ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))))))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL)) = ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))) = (((cat ((map the) ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))))))) ((map the) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = ((cat (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))))
T c= c= ccat cmap part cthe cfilter part cisSome cmap part cSOME cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 cCONS cFST cytrans f0 f4 f1 f3 f2 cNIL ccat cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 cCONS cFST cytrans f0 f4 f1 f3 f2 cNIL c= ccat cmap part cthe cfilter part cisSome cmap part cSOME cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 cmap part cthe cCONS cSOME cFST cytrans f0 f4 f1 f3 f2 cNIL ccat cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 cCONS cFST cytrans f0 f4 f1 f3 f2 cNIL
+ |- ((\b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d)))))) b)
T * / ! ! c==> c/\ c= f0 b1 c= b0 b2 c= ccat f0 b0 ccat b1 b2 f1
+ (!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) |- (((cat ((map the) (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))) ((map the) ((filter isSome) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE)))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))) ((CONS (FST (((((ytrans L) N) r) x) x'))) NIL))))
T c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c= ccat cmap part cthe cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cmap part cthe cfilter part cisSome cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 f4 cztrans f0 f1 f2 f3 f4 cNONE cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cFST cytrans f0 f1 f2 f3 f4 cNIL
- |- ((LENGTH = sizel) /\ ((FILTER = filter) /\ ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all))))))
T c/\ c= part cLENGTH part csizel c/\ c= part cFILTER part cfilter c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
+ ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b) |- ((((map the) ((filter isSome) ((map SOME) b))) = b) = (((map the) ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) = (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))
T c==> c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 f5 c= c= cmap part cthe cfilter part cisSome cmap part cSOME f5 f5 c= cmap part cthe cfilter part cisSome cmap part cSOME cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2
+ |- ((\N. ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F))))))))) N)
T * / c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 b0 f1 f2 c==> c~ cfinal_list f0 f1 c==> c= ctransform_count f0 b0 f1 f2 f3 c==> c= c, cprev_el ccore f0 f1 f4 f4 f2 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f1 b1 b1 f2 cF f5
+ (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) |- ((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) ==> (((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))))
T c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c==> ! ! ! c= cMAP part cthe cCOND b0 b1 b2 cCOND b0 cMAP part cthe b1 cMAP part cthe b2 c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL
+ (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) |- (((~ T) ==> (((filter isSome) ((cat (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE))) = e')) ==> ((((COND (isSome (SOME (((((ftrans L) N) r) x) x')))) ((CONS (SOME (((((ftrans L) N) r) x) x'))) ((filter isSome) ((cat (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE))))) ((filter isSome) ((cat (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE)))) = (((COND T) ((CONS (SOME (((((ftrans L) N) r) x) x'))) ((cat (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ((filter isSome) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) x')) (((((ztrans L) N) r) x) x')))) NONE))))) e')))
T c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c==> c==> c~ cT c= cfilter part cisSome ccat cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 f4 cztrans f0 f1 f2 f3 f4 cNONE f5 c= cCOND cisSome cSOME cftrans f0 f1 f2 f3 f4 cCONS cSOME cftrans f0 f1 f2 f3 f4 cfilter part cisSome ccat cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 f4 cztrans f0 f1 f2 f3 f4 cNONE cfilter part cisSome ccat cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 f4 cztrans f0 f1 f2 f3 f4 cNONE cCOND cT cCONS cSOME cftrans f0 f1 f2 f3 f4 ccat cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cfilter part cisSome cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 f4 cztrans f0 f1 f2 f3 f4 cNONE f5
- ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b) |- (((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b) /\ (?b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)))
T c==> c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 f5 c/\ c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 f5 c? / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0
- |- (((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (NIL = NIL)) ==> (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) e')))) = (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) e'))))
T c= c==> c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cNIL cNIL c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL f5 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f5 c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL f5 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f5
+ (~ F) |- ((~ F) /\ (((filter isSome) NIL) = NIL))
T c==> c~ cF c/\ c~ cF c= cfilter part cisSome cNIL cNIL
+ |- ((!x. (((MEM x) b) ==> (((the o SOME) x) = x))) = ((ALL (\x. (((the o SOME) x) = x))) b))
T c= ! c==> cMEM b0 f0 c= co part cthe part cSOME b0 b0 cALL / c= co part cthe part cSOME b0 b0 f0
+ |- (((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = NIL)) ==> (((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) e')))) = (((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) e'))))
T c= c==> c==> c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cNIL cNIL c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= ccat cfilter part cisSome cmap part cSOME cbetwn ccore f2 f4 cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL f5 c= cCOND c= cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f2 f4 cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL f5 c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= ccat cfilter part cisSome cmap part cSOME cbetwn ccore f2 f4 cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL f5 c= cCOND c= cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f2 f4 cftrans f2 f3 f4 f1 f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL f5
- |- ((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL) = ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)))
T c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL
+ (!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) |- (((cat (flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k))))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) ((MAP the) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))))
T c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c= ccat cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cMAP part cthe cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL
- |- ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND g') t') e')))))
T c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL f7 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 f6 f7
+ |- (((!N. ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F))))))))) ==> ((\N. ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F))))))))) N)) = ((\N. ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F))))))))) N))
T c= c==> ! c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 b0 f1 f2 c==> c~ cfinal_list f0 f1 c==> c= ctransform_count f0 b0 f1 f2 f3 c==> c= c, cprev_el ccore f0 f1 f4 f4 f2 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f1 b1 b1 f2 cF * / c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 b0 f1 f2 c==> c~ cfinal_list f0 f1 c==> c= ctransform_count f0 b0 f1 f2 f3 c==> c= c, cprev_el ccore f0 f1 f4 f4 f2 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f1 b1 b1 f2 cF f5 * / c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 b0 f1 f2 c==> c~ cfinal_list f0 f1 c==> c= ctransform_count f0 b0 f1 f2 f3 c==> c= c, cprev_el ccore f0 f1 f4 f4 f2 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f1 b1 b1 f2 cF f5
- (~ (x' = (NUMERAL _0))) |- (((NUMERAL _0) = x') = F)
T c==> c~ c= f0 cNUMERAL c_0 c= c= cNUMERAL c_0 f0 cF
+ (good_list L) |- ((good_list L) = T)
T c==> cgood_list f0 c= cgood_list f0 cT
- |- (((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (NIL = t')) ==> (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) t') e'))))) = ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (NIL = t')) ==> (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) t') e')))))
T c= c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c==> c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cNIL f5 c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL f6 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 f6 c==> c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cNIL f5 c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL f6 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 f6
+ |- ((\f. (!b. (!x. (!y. ((f (((COND b) x) y)) = (((COND b) (f x)) (f y))))))) (MAP the))
T * / ! ! ! c= * b0 cCOND b1 b2 b3 cCOND b1 * b0 b2 * b0 b3 * part cMAP part cthe
- (_11244055 = _11244057) |- ((_11244055 = _11244057) /\ ((~ (_11244056 = _11244058)) \/ ((_11244055 , _11244056) = (_11244057 , _11244058))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ |- (((!f. (((MAP f) NIL) = NIL)) ==> ((\f. (((MAP f) NIL) = NIL)) f)) = ((\f. (((MAP f) NIL) = NIL)) f))
T c= c==> ! c= cMAP b0 cNIL cNIL * / c= cMAP b0 cNIL cNIL f0 * / c= cMAP b0 cNIL cNIL f0
- |- (((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) e')))
T c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL f5 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL f5
+ |- (((!f. (!x. (((filter f) ((nseq n) x)) = (((COND (f x)) ((nseq n) x)) NIL)))) ==> ((\f. (!x. (((filter f) ((nseq n) x)) = (((COND (f x)) ((nseq n) x)) NIL)))) f)) = ((\f. (!x. (((filter f) ((nseq n) x)) = (((COND (f x)) ((nseq n) x)) NIL)))) f))
T c= c==> ! ! c= cfilter b0 cnseq f0 b1 cCOND * b0 b1 cnseq f0 b1 cNIL * / ! c= cfilter b0 cnseq f0 b1 cCOND * b0 b1 cnseq f0 b1 cNIL f1 * / ! c= cfilter b0 cnseq f0 b1 cCOND * b0 b1 cnseq f0 b1 cNIL f1
+ |- ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (((filter isSome) NIL) = t')) ==> (((~ g') ==> (((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ((filter isSome) NIL)) ((filter isSome) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = (((COND g') t') e')))))
T c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cfilter part cisSome cNIL f6 c==> c==> c~ f5 c= cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 f7 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cfilter part cisSome cNIL cfilter part cisSome crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND f5 f6 f7
+ |- (((!g'. (!t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (((MAP the) NIL) = t')) ==> (((~ g') ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ((MAP the) NIL)) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (((MAP the) NIL) = t')) ==> (((~ g') ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ((MAP the) NIL)) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (((MAP the) NIL) = t')) ==> (((~ g') ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ((MAP the) NIL)) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 b0 c==> c==> b0 c= cMAP part cthe cNIL b1 c==> c==> c~ b0 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b2 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cMAP part cthe cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND b0 b1 b2 * / ! ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 b0 c==> c==> b0 c= cMAP part cthe cNIL b1 c==> c==> c~ b0 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b2 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cMAP part cthe cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND b0 b1 b2 f5 * / ! ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 b0 c==> c==> b0 c= cMAP part cthe cNIL b1 c==> c==> c~ b0 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b2 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cMAP part cthe cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND b0 b1 b2 f5
+ |- (((!x. (!r. (!L. (!w. (!k. (!N. ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))))))))) ==> ((\x. (!r. (!L. (!w. (!k. (!N. ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))))))))) x)) = ((\x. (!r. (!L. (!w. (!k. (!N. ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))))))))) x))
T c= c==> ! ! ! ! ! ! c==> cgood_list b2 c==> cgood_list_nodes b2 c==> cmarked_list b2 b5 b1 b0 c==> c~ cfinal_list b2 b1 c==> c= ctransform_count b2 b5 b1 b0 b4 c==> c= c, cprev_el ccore b2 b1 b3 b3 b0 c==> cis_restricted chypermap_of_list b2 c==> c~ c? / c= c, cprev_el ccore b2 b1 b6 b6 b0 cF * / ! ! ! ! ! c==> cgood_list b2 c==> cgood_list_nodes b2 c==> cmarked_list b2 b5 b1 b0 c==> c~ cfinal_list b2 b1 c==> c= ctransform_count b2 b5 b1 b0 b4 c==> c= c, cprev_el ccore b2 b1 b3 b3 b0 c==> cis_restricted chypermap_of_list b2 c==> c~ c? / c= c, cprev_el ccore b2 b1 b6 b6 b0 cF f0 * / ! ! ! ! ! c==> cgood_list b2 c==> cgood_list_nodes b2 c==> cmarked_list b2 b5 b1 b0 c==> c~ cfinal_list b2 b1 c==> c= ctransform_count b2 b5 b1 b0 b4 c==> c= c, cprev_el ccore b2 b1 b3 b3 b0 c==> cis_restricted chypermap_of_list b2 c==> c~ c? / c= c, cprev_el ccore b2 b1 b6 b6 b0 cF f0
- |- ((x' = (NUMERAL _0)) ==> ((SND x) = (SND x)))
T c==> c= f0 cNUMERAL c_0 c= cSND f1 cSND f1
+ |- ((((COND (isSome (SOME (FST x)))) ((CONS (SOME (FST x))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND T) ((CONS (SOME (FST x))) NIL)) NIL))
T c= cCOND cisSome cSOME cFST f0 cCONS cSOME cFST f0 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND cT cCONS cSOME cFST f0 cNIL cNIL
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((((transform_count L) N) r) x) = k), ((((marked_list L) N) r) x) |- (((!x. (((\w. ((((prev_el ((core L) r)) w) , w) = x)) x) ==> (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)))))))) ==> ((?w. ((((prev_el ((core L) r)) w) , w) = x)) ==> (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x)))))))) = ((?w. ((((prev_el ((core L) r)) w) , w) = x)) ==> (((MAP the) ((filter isSome) (((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) (FST x))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= ctransform_count f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c= c==> ! c==> * / c= c, cprev_el ccore f0 f1 b1 b1 f3 b0 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f1 cSND f3 ccore_triple_v4 f0 f2 f1 f3 ccat cflatten cMAP / cCONS cftrans f0 f2 f1 f3 b1 cCOND c= cftrans f0 f2 f1 f3 b1 cFST cytrans f0 f2 f1 f3 b1 cNIL ccat cbetwn ccore f0 f1 cftrans f0 f2 f1 f3 b1 cFST cytrans f0 f2 f1 f3 b1 cCONS cFST cytrans f0 f2 f1 f3 b1 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f2 f1 f3 cPRE f4 cCOND c= cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f1 cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3 cFST f3 c==> c? / c= c, cprev_el ccore f0 f1 b0 b0 f3 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f1 cSND f3 ccore_triple_v4 f0 f2 f1 f3 ccat cflatten cMAP / cCONS cftrans f0 f2 f1 f3 b0 cCOND c= cftrans f0 f2 f1 f3 b0 cFST cytrans f0 f2 f1 f3 b0 cNIL ccat cbetwn ccore f0 f1 cftrans f0 f2 f1 f3 b0 cFST cytrans f0 f2 f1 f3 b0 cCONS cFST cytrans f0 f2 f1 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f2 f1 f3 cPRE f4 cCOND c= cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f1 cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3 cFST f3 c==> c? / c= c, cprev_el ccore f0 f1 b0 b0 f3 c= cMAP part cthe cfilter part cisSome cdest_triple_full ccore f0 f1 cSND f3 ccore_triple_v4 f0 f2 f1 f3 ccat cflatten cMAP / cCONS cftrans f0 f2 f1 f3 b0 cCOND c= cftrans f0 f2 f1 f3 b0 cFST cytrans f0 f2 f1 f3 b0 cNIL ccat cbetwn ccore f0 f1 cftrans f0 f2 f1 f3 b0 cFST cytrans f0 f2 f1 f3 b0 cCONS cFST cytrans f0 f2 f1 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f2 f1 f3 cPRE f4 cCOND c= cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3 cNIL crcons cbetwn ccore f0 f1 cFST cztrans f0 f2 f1 f3 cPRE f4 cFST f3 cFST f3
+ |- (((!s2. (((filter a) ((cat s1) s2)) = ((cat ((filter a) s1)) ((filter a) s2)))) ==> ((\s2. (((filter a) ((cat s1) s2)) = ((cat ((filter a) s1)) ((filter a) s2)))) s2)) = ((\s2. (((filter a) ((cat s1) s2)) = ((cat ((filter a) s1)) ((filter a) s2)))) s2))
T c= c==> ! c= cfilter f0 ccat f1 b0 ccat cfilter f0 f1 cfilter f0 b0 * / c= cfilter f0 ccat f1 b0 ccat cfilter f0 f1 cfilter f0 b0 f2 * / c= cfilter f0 ccat f1 b0 ccat cfilter f0 f1 cfilter f0 b0 f2
+ |- ((((~ F) ==> (((filter isSome) NIL) = NIL)) ==> ((((COND (isSome (SOME (FST x)))) ((CONS (SOME (FST x))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND F) ((CONS (SOME (FST x))) NIL)) NIL))) = ((((COND (isSome (SOME (FST x)))) ((CONS (SOME (FST x))) ((filter isSome) NIL))) ((filter isSome) NIL)) = (((COND F) ((CONS (SOME (FST x))) NIL)) NIL)))
T c= c==> c==> c~ cF c= cfilter part cisSome cNIL cNIL c= cCOND cisSome cSOME cFST f0 cCONS cSOME cFST f0 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND cF cCONS cSOME cFST f0 cNIL cNIL c= cCOND cisSome cSOME cFST f0 cCONS cSOME cFST f0 cfilter part cisSome cNIL cfilter part cisSome cNIL cCOND cF cCONS cSOME cFST f0 cNIL cNIL
- (~ F) |- (F = F)
T c==> c~ cF c= cF cF
- ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))) |- ((((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))) ==> ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F))))))))) ==> ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))))
T c==> c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c==> c==> c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF
+ |- ((\e'. (((isSome (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) = g') ==> ((g' ==> (((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) ((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))) = t')) ==> (((~ g') ==> (((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))) = e')) ==> ((((COND (isSome (SOME (FST (((((ztrans L) N) r) x) (PRE k)))))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) ((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))))) ((filter isSome) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))) = (((COND g') t') e')))))) e')
T * / c==> c= cisSome cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 f5 c==> c==> f5 c= cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 f6 c==> c==> c~ f5 c= cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b0 c= cCOND cisSome cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cfilter part cisSome cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND f5 f6 b0 f7
- |- ((!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) ==> ((((MAP the) ((cat (flatten ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))))) = (((MAP the) ((cat (flatten ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))))))
T c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c= c= cMAP part cthe ccat cflatten cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL c= cMAP part cthe ccat cflatten cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL
- (_11244047 = _11244049) |- ((_11244047 = _11244049) /\ ((~ (_11244048 = _11244050)) \/ (((core _11244047) _11244048) = ((core _11244049) _11244050))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= ccore f0 f2 ccore f1 f3
- |- ((((~ b) ==> (((filter isSome) y) = ((filter isSome) y))) ==> ((((COND b) ((filter isSome) x)) ((filter isSome) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))) = ((((COND b) ((filter isSome) x)) ((filter isSome) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y))))
T c= c==> c==> c~ f0 c= cfilter part cisSome f1 cfilter part cisSome f1 c= cCOND f0 cfilter part cisSome f2 cfilter part cisSome f1 cCOND f0 cfilter part cisSome f2 cfilter part cisSome f1 c= cCOND f0 cfilter part cisSome f2 cfilter part cisSome f1 cCOND f0 cfilter part cisSome f2 cfilter part cisSome f1
- |- ((?b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)) ==> (?b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)))
T c==> c? / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0 c? / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0
- |- (((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (NIL = NIL)) ==> (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) e')))) = (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) e'))))
T c= c==> c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cNIL cNIL c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f5 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f5 c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f5 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f5
- |- ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))))
T c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL
- |- (((b ==> (((filter isSome) x) = ((filter isSome) x))) ==> (((~ b) ==> (((filter isSome) y) = e')) ==> ((((COND b) ((filter isSome) x)) ((filter isSome) y)) = (((COND b) ((filter isSome) x)) e')))) = (((~ b) ==> (((filter isSome) y) = e')) ==> ((((COND b) ((filter isSome) x)) ((filter isSome) y)) = (((COND b) ((filter isSome) x)) e'))))
T c= c==> c==> f0 c= cfilter part cisSome f1 cfilter part cisSome f1 c==> c==> c~ f0 c= cfilter part cisSome f2 f3 c= cCOND f0 cfilter part cisSome f1 cfilter part cisSome f2 cCOND f0 cfilter part cisSome f1 f3 c==> c==> c~ f0 c= cfilter part cisSome f2 f3 c= cCOND f0 cfilter part cisSome f1 cfilter part cisSome f2 cCOND f0 cfilter part cisSome f1 f3
- ((a = c) /\ (b = d)) |- ((!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))) ==> (((cat a) b) = ((cat c) d)))
T c==> c/\ c= f0 f1 c= f2 f3 c==> ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3 c= ccat f0 f2 ccat f1 f3
- (_11244047 = _11244049) |- ((_11244048 = _11244050) ==> (((core _11244047) _11244048) = ((core _11244049) _11244050)))
T c==> c= f0 f1 c==> c= f2 f3 c= ccore f0 f2 ccore f1 f3
- |- (((~ b) ==> (((MAP the) y) = e')) ==> ((((COND b) ((MAP the) x)) ((MAP the) y)) = (((COND b) ((MAP the) x)) e')))
T c==> c==> c~ f0 c= cMAP part cthe f1 f2 c= cCOND f0 cMAP part cthe f3 cMAP part cthe f1 cCOND f0 cMAP part cthe f3 f2
- |- (((!g'. (!t'. (!e'. (((x' = (NUMERAL _0)) = g') ==> ((g' ==> ((SND x) = t')) ==> (((~ g') ==> ((FST (((((ztrans L) N) r) x) (PRE x'))) = e')) ==> ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((x' = (NUMERAL _0)) = g') ==> ((g' ==> ((SND x) = t')) ==> (((~ g') ==> ((FST (((((ztrans L) N) r) x) (PRE x'))) = e')) ==> ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((x' = (NUMERAL _0)) = g') ==> ((g' ==> ((SND x) = t')) ==> (((~ g') ==> ((FST (((((ztrans L) N) r) x) (PRE x'))) = e')) ==> ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= f0 cNUMERAL c_0 b0 c==> c==> b0 c= cSND f1 b1 c==> c==> c~ b0 c= cFST cztrans f2 f3 f4 f1 cPRE f0 b2 c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cCOND b0 b1 b2 * / ! ! c==> c= c= f0 cNUMERAL c_0 b0 c==> c==> b0 c= cSND f1 b1 c==> c==> c~ b0 c= cFST cztrans f2 f3 f4 f1 cPRE f0 b2 c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cCOND b0 b1 b2 f5 * / ! ! c==> c= c= f0 cNUMERAL c_0 b0 c==> c==> b0 c= cSND f1 b1 c==> c==> c~ b0 c= cFST cztrans f2 f3 f4 f1 cPRE f0 b2 c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cCOND b0 b1 b2 f5
- (_11244029 = _11244031) |- ((_11244030 = _11244032) ==> (((final_list _11244031) _11244032) \/ (~ ((final_list _11244029) _11244030))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cfinal_list f1 f3 c~ cfinal_list f0 f2
- (~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) |- (((~ ((FST (((((ytrans L) N) r) x) x')) = (((((ftrans L) N) r) x) x'))) ==> (((FST (((((ytrans L) N) r) x) x')) = (((((ftrans L) N) r) x) x')) = F)) = (((FST (((((ytrans L) N) r) x) x')) = (((((ftrans L) N) r) x) x')) = F))
T c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= c==> c~ c= cFST cytrans f0 f1 f2 f3 f4 cftrans f0 f1 f2 f3 f4 c= c= cFST cytrans f0 f1 f2 f3 f4 cftrans f0 f1 f2 f3 f4 cF c= c= cFST cytrans f0 f1 f2 f3 f4 cftrans f0 f1 f2 f3 f4 cF
- (~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) |- (((~ ((FST (((((ytrans L) N) r) x) x')) = (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))))) ==> (((FST (((((ytrans L) N) r) x) x')) = (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) = F)) = (((FST (((((ytrans L) N) r) x) x')) = (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) = F))
T c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= c==> c~ c= cFST cytrans f2 f3 f4 f1 f0 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 c= c= cFST cytrans f2 f3 f4 f1 f0 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cF c= c= cFST cytrans f2 f3 f4 f1 f0 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cF
- ((((prev_el ((core L) r)) w) , w) = x) |- (((((marked_list L) N) r) x) = ((((marked_list L) N) r) (((prev_el ((core L) r)) w) , w)))
T c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c= cmarked_list f0 f4 f1 f3 cmarked_list f0 f4 f1 c, cprev_el ccore f0 f1 f2 f2
- (_11244030 = _11244032), (_11244029 = _11244031) |- ((_11244030 = _11244032) /\ (((final_list _11244031) _11244032) \/ (~ ((final_list _11244029) _11244030))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ cfinal_list f3 f1 c~ cfinal_list f2 f0
- |- (!b. (((\b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)) b) ==> (?b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b))))
T c==> * / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0 f5 c? / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0
- |- (((!g'. (!t'. (!e'. ((b = g') ==> ((g' ==> (((filter isSome) x) = t')) ==> (((~ g') ==> (((filter isSome) y) = e')) ==> ((((COND b) ((filter isSome) x)) ((filter isSome) y)) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((b = g') ==> ((g' ==> (((filter isSome) x) = t')) ==> (((~ g') ==> (((filter isSome) y) = e')) ==> ((((COND b) ((filter isSome) x)) ((filter isSome) y)) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((b = g') ==> ((g' ==> (((filter isSome) x) = t')) ==> (((~ g') ==> (((filter isSome) y) = e')) ==> ((((COND b) ((filter isSome) x)) ((filter isSome) y)) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= f0 b0 c==> c==> b0 c= cfilter part cisSome f1 b1 c==> c==> c~ b0 c= cfilter part cisSome f2 b2 c= cCOND f0 cfilter part cisSome f1 cfilter part cisSome f2 cCOND b0 b1 b2 * / ! ! c==> c= f0 b0 c==> c==> b0 c= cfilter part cisSome f1 b1 c==> c==> c~ b0 c= cfilter part cisSome f2 b2 c= cCOND f0 cfilter part cisSome f1 cfilter part cisSome f2 cCOND b0 b1 b2 f3 * / ! ! c==> c= f0 b0 c==> c==> b0 c= cfilter part cisSome f1 b1 c==> c==> c~ b0 c= cfilter part cisSome f2 b2 c= cCOND f0 cfilter part cisSome f1 cfilter part cisSome f2 cCOND b0 b1 b2 f3
- (~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) |- ((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) /\ (((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))
T c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c/\ c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL
- (!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))) |- (((!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d)))) ==> ((\d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d)))) d)) = ((\d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d)))) d))
T c==> ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3 c= c==> ! c==> c/\ c= f0 f1 c= f2 b0 c= ccat f0 f2 ccat f1 b0 * / c==> c/\ c= f0 f1 c= f2 b0 c= ccat f0 f2 ccat f1 b0 f3 * / c==> c/\ c= f0 f1 c= f2 b0 c= ccat f0 f2 ccat f1 b0 f3
- |- ((_11244033 = _11244037) ==> ((~ (_11244034 = _11244038)) \/ ((~ (_11244035 = _11244039)) \/ ((~ (_11244036 = _11244040)) \/ (((((marked_list _11244037) _11244038) _11244039) _11244040) \/ (~ ((((marked_list _11244033) _11244034) _11244035) _11244036)))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ cmarked_list f1 f3 f5 f7 c~ cmarked_list f0 f2 f4 f6
- |- ((\t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b1 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 b0 b1 f6
- |- ((((\b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)) b) ==> (?b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b))) = T)
T c= c==> * / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0 f5 c? / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0 cT
- |- ((~ b) ==> (((MAP the) y) = ((MAP the) y)))
T c==> c~ f0 c= cMAP part cthe f1 cMAP part cthe f1
- (!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))), ((a = c) /\ (b = d)) |- (((cat a) b) = ((cat c) d))
T c==> ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3 c==> c/\ c= f0 f1 c= f2 f3 c= ccat f0 f2 ccat f1 f3
- |- ((\e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND g') t') e')))))) e')
T * / c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b0 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 f6 b0 f7
- ((\b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)) b) |- ((((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b) ==> (?b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b))) = (?b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)))
T c==> * / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0 f5 c= c==> c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 f5 c? / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0 c? / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0
- |- ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (NIL = t')) ==> (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) t') e'))))
T c==> c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cNIL f5 c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f6 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 f6
- |- (((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = NIL)) ==> (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) e')))) = (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) e'))))
T c= c==> c==> c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cNIL cNIL c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f5 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL f5 c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f5 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL f5
- (!f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))) |- (((!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l))))) ==> ((\g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l))))) g)) = ((\g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l))))) g))
T c==> ! ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2 c= c==> ! ! c==> cALL / c= * f0 b2 * b0 b2 b1 c= cMAP f0 b1 cMAP b0 b1 * / ! c==> cALL / c= * f0 b2 * b0 b2 b1 c= cMAP f0 b1 cMAP b0 b1 f1 * / ! c==> cALL / c= * f0 b2 * b0 b2 b1 c= cMAP f0 b1 cMAP b0 b1 f1
- |- (((!t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b1 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 b0 b1 * / ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b1 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 b0 b1 f6 * / ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL b1 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 b0 b1 f6
- (!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))) |- ((\a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))) a)
T c==> ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3 * / ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3 f0
- |- ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND g') t') e')))))
T c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL f7 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND f5 f6 f7
- |- (((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = NIL)) ==> (((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) e')))) = (((~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) ==> (((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((MAP the) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) = (((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) e'))))
T c= c==> c==> c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cNIL cNIL c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL f5 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL f5 c==> c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL f5 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL cMAP part cthe ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL f5
- |- ((!N. (P N)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- ((\t'. (!e'. ((b = g') ==> ((g' ==> (((filter isSome) x) = t')) ==> (((~ g') ==> (((filter isSome) y) = e')) ==> ((((COND b) ((filter isSome) x)) ((filter isSome) y)) = (((COND g') t') e'))))))) t')
T * / ! c==> c= f0 f1 c==> c==> f1 c= cfilter part cisSome f2 b0 c==> c==> c~ f1 c= cfilter part cisSome f3 b1 c= cCOND f0 cfilter part cisSome f2 cfilter part cisSome f3 cCOND f1 b0 b1 f4
- (!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))) |- (((!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d)))))) ==> ((\b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d)))))) b)) = ((\b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d)))))) b))
T c==> ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3 c= c==> ! ! ! c==> c/\ c= f0 b1 c= b0 b2 c= ccat f0 b0 ccat b1 b2 * / ! ! c==> c/\ c= f0 b1 c= b0 b2 c= ccat f0 b0 ccat b1 b2 f1 * / ! ! c==> c/\ c= f0 b1 c= b0 b2 c= ccat f0 b0 ccat b1 b2 f1
- (_11244036 = _11244040), (_11244035 = _11244039), (_11244033 = _11244037), (_11244034 = _11244038) |- (((((marked_list _11244037) _11244038) _11244039) _11244040) \/ (~ ((((marked_list _11244033) _11244034) _11244035) _11244036)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ cmarked_list f5 f7 f3 f1 c~ cmarked_list f4 f6 f2 f0
- |- (((!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)) = (((COND g') t') e')))))) ==> ((\e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)) = (((COND g') t') e')))))) e')) = ((\e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL b0 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 f6 b0 * / c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL b0 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 f6 b0 f7 * / c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL b0 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 f6 b0 f7
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (_11244041 = _11244042) |- ((_11244041 = _11244042) /\ ((good_list_nodes _11244042) \/ (~ (good_list_nodes _11244041))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ cgood_list_nodes f1 c~ cgood_list_nodes f0
- ((((prev_el ((core L) r)) w) , w) = x) |- (F = F)
T c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c= cF cF
- (~ ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) |- (((FST (((((ytrans L) N) r) x) x')) = (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) = F)
T c==> c~ c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= c= cFST cytrans f2 f3 f4 f1 f0 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cF
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- |- (((!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = (((COND g') t') e')))))) ==> ((\e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = (((COND g') t') e')))))) e')) = ((\e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b0 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND f5 f6 b0 * / c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b0 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND f5 f6 b0 f7 * / c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 b0 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND f5 f6 b0 f7
- ((FST (((((ytrans L) N) r) x) x')) = (((((ftrans L) N) r) x) x')) |- ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))
T c==> c= cFST cytrans f0 f1 f2 f3 f4 cftrans f0 f1 f2 f3 f4 c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4
- |- ((APPEND = cat) /\ (ALL = all))
T c/\ c= part cAPPEND part ccat c= part cALL part call
- |- (FILTER = filter)
T c= part cFILTER part cfilter
- (!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))) |- ((\c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))) c)
T c==> ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3 * / ! c==> c/\ c= f0 b0 c= f1 b1 c= ccat f0 f1 ccat b0 b1 f2
- |- (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x'))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) e')))
T c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f5 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL f5
- ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) |- ((FST (((((ytrans L) N) r) x) x')) = (((((ftrans L) N) r) x) x'))
T c==> c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cFST cytrans f0 f1 f2 f3 f4 cftrans f0 f1 f2 f3 f4
- |- ((\e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))) e')
T * / c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b0 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 f6 b0 f7
- (~ (x' = (NUMERAL _0))) |- ((~ (x' = (NUMERAL _0))) /\ ((FST (((((ztrans L) N) r) x) (PRE x'))) = (FST (((((ztrans L) N) r) x) (PRE x')))))
T c==> c~ c= f0 cNUMERAL c_0 c/\ c~ c= f0 cNUMERAL c_0 c= cFST cztrans f1 f2 f3 f4 cPRE f0 cFST cztrans f1 f2 f3 f4 cPRE f0
- |- ((_11244047 = _11244049) ==> ((~ (_11244048 = _11244050)) \/ (((core _11244047) _11244048) = ((core _11244049) _11244050))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= ccore f0 f2 ccore f1 f3
- (((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))) ==> ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F))))))))) |- ((((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))) ==> ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F))))))))) /\ (((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))) ==> ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F))))))))))
T c==> c==> c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c/\ c==> c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c==> c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF
- |- ((~ (x' = (NUMERAL _0))) ==> ((FST (((((ztrans L) N) r) x) (PRE x'))) = (FST (((((ztrans L) N) r) x) (PRE x')))))
T c==> c~ c= f0 cNUMERAL c_0 c= cFST cztrans f1 f2 f3 f4 cPRE f0 cFST cztrans f1 f2 f3 f4 cPRE f0
- ((((prev_el ((core L) r)) w) , w) = x), (((((transform_count L) N) r) x) = k) |- ((good_list L) = (good_list L))
T c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c==> c= ctransform_count f0 f4 f1 f3 f5 c= cgood_list f0 cgood_list f0
- ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b) |- ((\b. ((((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x'))) = b)) b)
T c==> c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 f5 * / c= cbetwn ccore f0 f1 cCOND c= f2 cNUMERAL c_0 cSND f3 cFST cztrans f0 f4 f1 f3 cPRE f2 cFST cytrans f0 f4 f1 f3 f2 b0 f5
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- (_11244035 = _11244039), (_11244033 = _11244037), (_11244034 = _11244038) |- ((~ (_11244036 = _11244040)) \/ (((((marked_list _11244037) _11244038) _11244039) _11244040) \/ (~ ((((marked_list _11244033) _11244034) _11244035) _11244036))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ cmarked_list f3 f5 f1 f7 c~ cmarked_list f2 f4 f0 f6
- (~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) |- ((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) /\ (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL) = ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)))
T c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c/\ c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL
- |- (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) e')))
T c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 f5 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f5
- |- (b ==> (x = x))
T c==> f0 c= f1 f1
- |- ((((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL) = ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL))) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)))) = ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL))))
T c= c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL
- |- (((\i. (f i)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- (_11244035 = _11244039), (_11244033 = _11244037), (_11244034 = _11244038) |- ((_11244036 = _11244040) ==> (((((marked_list _11244037) _11244038) _11244039) _11244040) \/ (~ ((((marked_list _11244033) _11244034) _11244035) _11244036))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ cmarked_list f3 f5 f1 f7 c~ cmarked_list f2 f4 f0 f6
- (~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) |- ((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) /\ (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)) = ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))))
T c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c/\ c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL
- (!l. (!f. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l)))), ((ALL (\x. ((f x) = x))) l) |- ((!l. (!f. (((ALL (\x. ((f x) = x))) l) ==> (((MAP f) l) = l)))) /\ (((MAP f) l) = l))
T c==> ! ! c==> cALL / c= * b1 b2 b2 b0 c= cMAP b1 b0 b0 c==> cALL / c= * f0 b0 b0 f1 c/\ ! ! c==> cALL / c= * b1 b2 b2 b0 c= cMAP b1 b0 b0 c= cMAP f0 f1 f1
- ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))), (((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))) ==> ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F))))))))) |- ((((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))) ==> ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F))))))))) /\ ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((transform_count L) N) r) x) = k) ==> (((((prev_el ((core L) r)) w) , w) = x) ==> ((is_restricted (hypermap_of_list L)) ==> ((~ (?w. ((((prev_el ((core L) r)) w) , w) = x))) ==> F)))))))))
T c==> c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c==> c==> c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c/\ c==> c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= c, cprev_el ccore f0 f2 f5 f5 f3 c==> cis_restricted chypermap_of_list f0 c==> c~ c? / c= c, cprev_el ccore f0 f2 b0 b0 f3 cF
- |- ((\e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)) = (((COND g') t') e')))))) e')
T * / c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL b0 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 f6 b0 f7
- |- ((~ (_11244052 = _11244054)) \/ ((~ (_11244051 = _11244053)) \/ (((prev_el _11244051) _11244052) = ((prev_el _11244053) _11244054))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cprev_el f2 f0 cprev_el f3 f1
- |- (((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = t')) ==> (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) t') e'))))) = ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) ==> (NIL = t')) ==> (((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) t') e')))))
T c= c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c==> c==> c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cNIL f5 c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f6 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 f6 c==> c==> c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= cNIL f5 c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL f6 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 f6
- |- ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))
T c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL
- |- (((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (NIL = NIL)) ==> (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) e')))) = (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) e'))))
T c= c==> c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cNIL cNIL c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL f5 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f5 c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL f5 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL f5
- |- (((!e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))) ==> ((\e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))) e')) = ((\e'. ((((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = e')) ==> ((((COND ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b0 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 f6 b0 * / c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b0 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 f6 b0 f7 * / c==> c= c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL b0 c= cCOND c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f2 f4 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 cCONS cSOME cFST cytrans f2 f3 f4 f1 f0 cNIL cCOND f5 f6 b0 f7
- |- ((~ b) ==> (y = y))
T c==> c~ f0 c= f1 f1
- |- ((~ (_11244029 = _11244031)) \/ ((~ (_11244030 = _11244032)) \/ (((final_list _11244031) _11244032) \/ (~ ((final_list _11244029) _11244030)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cfinal_list f1 f3 c~ cfinal_list f0 f2
- |- (((!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) ==> (((MAP the) ((cat (flatten ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))))) = ((!b. (!x. (!y. (((filter isSome) (((COND b) x) y)) = (((COND b) ((filter isSome) x)) ((filter isSome) y)))))) ==> (((MAP the) ((cat (flatten ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))))) = ((cat (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) ((CONS (FST (((((ztrans L) N) r) x) (PRE k)))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))))))
T c= c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c= cMAP part cthe ccat cflatten cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL c==> ! ! ! c= cfilter part cisSome cCOND b0 b1 b2 cCOND b0 cfilter part cisSome b1 cfilter part cisSome b2 c= cMAP part cthe ccat cflatten cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b0 ccat cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cSOME cFST cytrans f0 f1 f2 f3 b0 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b0 cztrans f0 f1 f2 f3 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL ccat cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b0 cCOND c= cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b0 cFST cytrans f0 f1 f2 f3 b0 cCONS cFST cytrans f0 f1 f2 f3 b0 cNIL ciota cNUMERAL c_0 f4 cCONS cFST cztrans f0 f1 f2 f3 cPRE f4 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL
- (!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))) |- ((!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d)))))) = T)
T c==> ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3 c= ! ! ! c==> c/\ c= f0 b1 c= b0 b2 c= ccat f0 b0 ccat b1 b2 cT
- (~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) |- (~ ((FST x) = (FST (((((ztrans L) N) r) x) (PRE k)))))
T c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c~ c= cFST f3 cFST cztrans f0 f1 f2 f3 cPRE f4
- (_11244027 = _11244028) |- ((_11244027 = _11244028) /\ ((is_restricted _11244028) \/ (~ (is_restricted _11244027))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ cis_restricted f1 c~ cis_restricted f0
- |- ((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = ((cat ((filter isSome) ((map SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))
T c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cmap part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL
- |- ((!f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))) ==> (!f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))))
T c==> ! ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2 ! ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2
- |- (((!g'. (!t'. (!e'. ((b = g') ==> ((g' ==> (((MAP the) x) = t')) ==> (((~ g') ==> (((MAP the) y) = e')) ==> ((((COND b) ((MAP the) x)) ((MAP the) y)) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((b = g') ==> ((g' ==> (((MAP the) x) = t')) ==> (((~ g') ==> (((MAP the) y) = e')) ==> ((((COND b) ((MAP the) x)) ((MAP the) y)) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((b = g') ==> ((g' ==> (((MAP the) x) = t')) ==> (((~ g') ==> (((MAP the) y) = e')) ==> ((((COND b) ((MAP the) x)) ((MAP the) y)) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= f0 b0 c==> c==> b0 c= cMAP part cthe f1 b1 c==> c==> c~ b0 c= cMAP part cthe f2 b2 c= cCOND f0 cMAP part cthe f1 cMAP part cthe f2 cCOND b0 b1 b2 * / ! ! c==> c= f0 b0 c==> c==> b0 c= cMAP part cthe f1 b1 c==> c==> c~ b0 c= cMAP part cthe f2 b2 c= cCOND f0 cMAP part cthe f1 cMAP part cthe f2 cCOND b0 b1 b2 f3 * / ! ! c==> c= f0 b0 c==> c==> b0 c= cMAP part cthe f1 b1 c==> c==> c~ b0 c= cMAP part cthe f2 b2 c= cCOND f0 cMAP part cthe f1 cMAP part cthe f2 cCOND b0 b1 b2 f3
- ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x'))) |- ((FST (((((ytrans L) N) r) x) x')) = (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))))
T c==> c= cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0 cFST cytrans f2 f3 f4 f1 f0 c= cFST cytrans f2 f3 f4 f1 f0 cCOND c= f0 cNUMERAL c_0 cSND f1 cFST cztrans f2 f3 f4 f1 cPRE f0
- (~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) |- ((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) /\ (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL) = ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) NIL)))
T c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c/\ c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL
- |- ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = (((COND g') t') e')))))
T c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL f6 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL f7 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND f5 f6 f7
- |- (((!g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND b0 b1 b2 * / ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND b0 b1 b2 f5 * / ! ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 b0 c==> c==> b0 c= cNIL b1 c==> c==> c~ b0 c= cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b2 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND b0 b1 b2 f5
- |- ((((~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)) = ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))))) = ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL))) = (((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) x')))) NIL)))))
T c= c==> c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cCONS cSOME cFST cytrans f0 f1 f2 f3 f4 cNIL
- (!f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))), ((ALL (\x. ((f x) = (g x)))) l) |- (((MAP f) l) = ((MAP g) l))
T c==> ! ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2 c==> cALL / c= * f0 b0 * f1 b0 f2 c= cMAP f0 f2 cMAP f1 f2
- (_11244055 = _11244057) |- ((_11244056 = _11244058) ==> ((_11244055 , _11244056) = (_11244057 , _11244058)))
T c==> c= f0 f1 c==> c= f2 f3 c= c, f0 f2 c, f1 f3
- b |- (b /\ (((filter isSome) x) = ((filter isSome) x)))
T c==> f0 c/\ f0 c= cfilter part cisSome f1 cfilter part cisSome f1
- (_11244052 = _11244054) |- ((_11244052 = _11244054) /\ ((~ (_11244051 = _11244053)) \/ (((prev_el _11244051) _11244052) = ((prev_el _11244053) _11244054))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cprev_el f2 f0 cprev_el f3 f1
- ((((prev_el ((core L) r)) w) , w) = x), (((((transform_count L) N) r) x) = k) |- (k = ((((transform_count L) N) r) (((prev_el ((core L) r)) w) , w)))
T c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c==> c= ctransform_count f0 f4 f1 f3 f5 c= f5 ctransform_count f0 f4 f1 c, cprev_el ccore f0 f1 f2 f2
- |- (((!t'. (!e'. (((x' = (NUMERAL _0)) = g') ==> ((g' ==> ((SND x) = t')) ==> (((~ g') ==> ((FST (((((ztrans L) N) r) x) (PRE x'))) = e')) ==> ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((x' = (NUMERAL _0)) = g') ==> ((g' ==> ((SND x) = t')) ==> (((~ g') ==> ((FST (((((ztrans L) N) r) x) (PRE x'))) = e')) ==> ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((x' = (NUMERAL _0)) = g') ==> ((g' ==> ((SND x) = t')) ==> (((~ g') ==> ((FST (((((ztrans L) N) r) x) (PRE x'))) = e')) ==> ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cSND f2 b0 c==> c==> c~ f1 c= cFST cztrans f3 f4 f5 f2 cPRE f0 b1 c= cCOND c= f0 cNUMERAL c_0 cSND f2 cFST cztrans f3 f4 f5 f2 cPRE f0 cCOND f1 b0 b1 * / ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cSND f2 b0 c==> c==> c~ f1 c= cFST cztrans f3 f4 f5 f2 cPRE f0 b1 c= cCOND c= f0 cNUMERAL c_0 cSND f2 cFST cztrans f3 f4 f5 f2 cPRE f0 cCOND f1 b0 b1 f6 * / ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cSND f2 b0 c==> c==> c~ f1 c= cFST cztrans f3 f4 f5 f2 cPRE f0 b1 c= cCOND c= f0 cNUMERAL c_0 cSND f2 cFST cztrans f3 f4 f5 f2 cPRE f0 cCOND f1 b0 b1 f6
- |- (((?w. ((((prev_el ((core L) r)) w) , w) = x)) ==> (((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))))))) = q')) ==> (((?w. ((((prev_el ((core L) r)) w) , w) = x)) ==> ((((dest_triple_full ((core L) r)) (SND x)) ((((core_triple_v4 L) N) r) x)) = ((cat (flatten ((MAP (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE))))) ((iota (NUMERAL _0)) k)))) ((CONS (SOME (FST (((((ztrans L) N) r) x) (PRE k))))) (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))))))) = ((?w. ((((prev_el ((core L) r)) w) , w) = x)) ==> q')))
T c==> c==> c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 c= c= cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f3 f1 f2 ccat cflatten cMAP / cCONS cSOME cftrans f0 f3 f1 f2 b0 ccat cCOND c= cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cCONS cSOME cFST cytrans f0 f3 f1 f2 b0 cNIL cnseq csizel cbetwn cfind_face f0 f2 cytrans f0 f3 f1 f2 b0 cztrans f0 f3 f1 f2 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cSOME cFST f2 f5 c= c==> c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 c= cdest_triple_full ccore f0 f1 cSND f2 ccore_triple_v4 f0 f3 f1 f2 ccat cflatten cMAP / cCONS cSOME cftrans f0 f3 f1 f2 b0 ccat cCOND c= cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cNIL ccat cMAP part cSOME cbetwn ccore f0 f1 cftrans f0 f3 f1 f2 b0 cFST cytrans f0 f3 f1 f2 b0 cCONS cSOME cFST cytrans f0 f3 f1 f2 b0 cNIL cnseq csizel cbetwn cfind_face f0 f2 cytrans f0 f3 f1 f2 b0 cztrans f0 f3 f1 f2 b0 cNONE ciota cNUMERAL c_0 f4 cCONS cSOME cFST cztrans f0 f3 f1 f2 cPRE f4 cCOND c= cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cNIL crcons cMAP part cSOME cbetwn ccore f0 f1 cFST cztrans f0 f3 f1 f2 cPRE f4 cFST f2 cSOME cFST f2 c==> c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 f5
- |- ((~ (_11244047 = _11244049)) \/ ((~ (_11244048 = _11244050)) \/ (((core _11244047) _11244048) = ((core _11244049) _11244050))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= ccore f0 f2 ccore f1 f3
- (_11244048 = _11244050), (_11244047 = _11244049) |- ((_11244048 = _11244050) /\ (((core _11244047) _11244048) = ((core _11244049) _11244050)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= ccore f2 f0 ccore f3 f1
- ((((prev_el ((core L) r)) w) , w) = x), ((((marked_list L) N) r) x) |- ((((marked_list L) N) r) (((prev_el ((core L) r)) w) , w))
T c==> c= c, cprev_el ccore f0 f1 f2 f2 f3 c==> cmarked_list f0 f4 f1 f3 cmarked_list f0 f4 f1 c, cprev_el ccore f0 f1 f2 f2
- |- ((b = g') ==> ((g' ==> (((MAP the) x) = t')) ==> (((~ g') ==> (((MAP the) y) = e')) ==> ((((COND b) ((MAP the) x)) ((MAP the) y)) = (((COND g') t') e')))))
T c==> c= f0 f1 c==> c==> f1 c= cMAP part cthe f2 f3 c==> c==> c~ f1 c= cMAP part cthe f4 f5 c= cCOND f0 cMAP part cthe f2 cMAP part cthe f4 cCOND f1 f3 f5
- |- ((\p'. (!q'. (((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) = p') ==> ((p' ==> ((((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL))))) = q')) ==> (((!b. (!x. (!y. (((MAP the) (((COND b) x) y)) = (((COND b) ((MAP the) x)) ((MAP the) y)))))) ==> (((flatten ((MAP (MAP the)) ((MAP ((filter isSome) o (\i. ((CONS (SOME (((((ftrans L) N) r) x) i))) ((cat (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i))))) ((CONS (SOME (FST (((((ytrans L) N) r) x) i)))) NIL)))) ((nseq (sizel (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))) NONE)))))) ((iota (NUMERAL _0)) k)))) = (flatten ((MAP (\i. ((CONS (((((ftrans L) N) r) x) i)) (((COND ((((((ftrans L) N) r) x) i) = (FST (((((ytrans L) N) r) x) i)))) NIL) ((cat (((betwn ((core L) r)) (((((ftrans L) N) r) x) i)) (FST (((((ytrans L) N) r) x) i)))) ((CONS (FST (((((ytrans L) N) r) x) i))) NIL)))))) ((iota (NUMERAL _0)) k)))) /\ ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((MAP the) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x))) ((CONS (FST x)) NIL)))))) = (p' ==> q')))))) p')
T * / ! c==> c= ! ! ! c= cMAP part cthe cCOND b2 b3 b4 cCOND b2 cMAP part cthe b3 cMAP part cthe b4 b0 c==> c==> b0 c= c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b2 ccat cCOND c= cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cCONS cSOME cFST cytrans f0 f1 f2 f3 b2 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b2 cztrans f0 f1 f2 f3 b2 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b2 cCOND c= cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cCONS cFST cytrans f0 f1 f2 f3 b2 cNIL ciota cNUMERAL c_0 f4 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL b1 c= c==> ! ! ! c= cMAP part cthe cCOND b2 b3 b4 cCOND b2 cMAP part cthe b3 cMAP part cthe b4 c/\ c= cflatten cMAP * part cMAP part cthe cMAP * * part co * part cfilter part cisSome / cCONS cSOME cftrans f0 f1 f2 f3 b2 ccat cCOND c= cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cCONS cSOME cFST cytrans f0 f1 f2 f3 b2 cNIL cnseq csizel cbetwn cfind_face f0 f3 cytrans f0 f1 f2 f3 b2 cztrans f0 f1 f2 f3 b2 cNONE ciota cNUMERAL c_0 f4 cflatten cMAP / cCONS cftrans f0 f1 f2 f3 b2 cCOND c= cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cNIL ccat cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 b2 cFST cytrans f0 f1 f2 f3 b2 cCONS cFST cytrans f0 f1 f2 f3 b2 cNIL ciota cNUMERAL c_0 f4 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL cMAP part cthe ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cFST f3 cNIL c==> b0 b1 f5
- (_11244043 = _11244044) |- ((_11244043 = _11244044) /\ ((good_list _11244044) \/ (~ (good_list _11244043))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ cgood_list f1 c~ cgood_list f0
- |- (((b = b) ==> ((b ==> (((filter isSome) x) = t')) ==> (((~ b) ==> (((filter isSome) y) = e')) ==> ((((COND b) ((filter isSome) x)) ((filter isSome) y)) = (((COND b) t') e'))))) = ((b ==> (((filter isSome) x) = t')) ==> (((~ b) ==> (((filter isSome) y) = e')) ==> ((((COND b) ((filter isSome) x)) ((filter isSome) y)) = (((COND b) t') e')))))
T c= c==> c= f0 f0 c==> c==> f0 c= cfilter part cisSome f1 f2 c==> c==> c~ f0 c= cfilter part cisSome f3 f4 c= cCOND f0 cfilter part cisSome f1 cfilter part cisSome f3 cCOND f0 f2 f4 c==> c==> f0 c= cfilter part cisSome f1 f2 c==> c==> c~ f0 c= cfilter part cisSome f3 f4 c= cCOND f0 cfilter part cisSome f1 cfilter part cisSome f3 cCOND f0 f2 f4
- (~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) |- (((FST x) = (FST (((((ztrans L) N) r) x) (PRE k)))) = F)
T c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= c= cFST f3 cFST cztrans f0 f1 f2 f3 cPRE f4 cF
- (~ (?w. ((((prev_el ((core L) r)) w) , w) = x))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((prev_el ((core L) r)) w) , w) = x), (((((transform_count L) N) r) x) = k), ((((marked_list L) N) r) x) |- F
T c==> c~ c? / c= c, cprev_el ccore f0 f1 b0 b0 f2 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= c, cprev_el ccore f0 f1 f3 f3 f2 c==> c= ctransform_count f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 cF
- |- ((\t'. (!e'. ((((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x'))) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL) = e')) ==> ((((COND ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) NIL) ((cat ((filter isSome) ((MAP SOME) (((betwn ((core L) r)) (((((ftrans L) N) r) x) x')) (FST (((((ytrans L) N) r) x) x')))))) NIL)) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL b1 c= cCOND c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL ccat cfilter part cisSome cMAP part cSOME cbetwn ccore f0 f2 cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 cNIL cCOND f5 b0 b1 f6
- |- ((~ (_11244027 = _11244028)) \/ ((is_restricted _11244028) \/ (~ (is_restricted _11244027))))
T c\/ c~ c= f0 f1 c\/ cis_restricted f1 c~ cis_restricted f0
- (~ ((((((ftrans L) N) r) x) x') = (FST (((((ytrans L) N) r) x) x')))) |- (((FST (((((ytrans L) N) r) x) x')) = (((((ftrans L) N) r) x) x')) = F)
T c==> c~ c= cftrans f0 f1 f2 f3 f4 cFST cytrans f0 f1 f2 f3 f4 c= c= cFST cytrans f0 f1 f2 f3 f4 cftrans f0 f1 f2 f3 f4 cF
- (_11244035 = _11244039), (_11244033 = _11244037), (_11244034 = _11244038) |- ((_11244035 = _11244039) /\ ((~ (_11244036 = _11244040)) \/ (((((marked_list _11244037) _11244038) _11244039) _11244040) \/ (~ ((((marked_list _11244033) _11244034) _11244035) _11244036)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f0 f1 c\/ c~ c= f6 f7 c\/ cmarked_list f3 f5 f1 f7 c~ cmarked_list f2 f4 f0 f6
- (!f. (!g. (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l)))))) |- (!l. (((ALL (\x. ((f x) = (g x)))) l) ==> (((MAP f) l) = ((MAP g) l))))
T c==> ! ! ! c==> cALL / c= * b0 b3 * b1 b3 b2 c= cMAP b0 b2 cMAP b1 b2 ! c==> cALL / c= * f0 b1 * f1 b1 b0 c= cMAP f0 b0 cMAP f1 b0
- (_11244045 = _11244046) |- ((_11244045 = _11244046) /\ ((hypermap_of_list _11244045) = (hypermap_of_list _11244046)))
T c==> c= f0 f1 c/\ c= f0 f1 c= chypermap_of_list f0 chypermap_of_list f1
- (~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) |- (((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = F)
T c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cF
- |- (((!e'. ((b = g') ==> ((g' ==> (((MAP the) x) = t')) ==> (((~ g') ==> (((MAP the) y) = e')) ==> ((((COND b) ((MAP the) x)) ((MAP the) y)) = (((COND g') t') e')))))) ==> ((\e'. ((b = g') ==> ((g' ==> (((MAP the) x) = t')) ==> (((~ g') ==> (((MAP the) y) = e')) ==> ((((COND b) ((MAP the) x)) ((MAP the) y)) = (((COND g') t') e')))))) e')) = ((\e'. ((b = g') ==> ((g' ==> (((MAP the) x) = t')) ==> (((~ g') ==> (((MAP the) y) = e')) ==> ((((COND b) ((MAP the) x)) ((MAP the) y)) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= f0 f1 c==> c==> f1 c= cMAP part cthe f2 f3 c==> c==> c~ f1 c= cMAP part cthe f4 b0 c= cCOND f0 cMAP part cthe f2 cMAP part cthe f4 cCOND f1 f3 b0 * / c==> c= f0 f1 c==> c==> f1 c= cMAP part cthe f2 f3 c==> c==> c~ f1 c= cMAP part cthe f4 b0 c= cCOND f0 cMAP part cthe f2 cMAP part cthe f4 cCOND f1 f3 b0 f5 * / c==> c= f0 f1 c==> c==> f1 c= cMAP part cthe f2 f3 c==> c==> c~ f1 c= cMAP part cthe f4 b0 c= cCOND f0 cMAP part cthe f2 cMAP part cthe f4 cCOND f1 f3 b0 f5
- |- (((!t'. (!e'. ((b = g') ==> ((g' ==> (((filter isSome) x) = t')) ==> (((~ g') ==> (((filter isSome) y) = e')) ==> ((((COND b) ((filter isSome) x)) ((filter isSome) y)) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((b = g') ==> ((g' ==> (((filter isSome) x) = t')) ==> (((~ g') ==> (((filter isSome) y) = e')) ==> ((((COND b) ((filter isSome) x)) ((filter isSome) y)) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((b = g') ==> ((g' ==> (((filter isSome) x) = t')) ==> (((~ g') ==> (((filter isSome) y) = e')) ==> ((((COND b) ((filter isSome) x)) ((filter isSome) y)) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= f0 f1 c==> c==> f1 c= cfilter part cisSome f2 b0 c==> c==> c~ f1 c= cfilter part cisSome f3 b1 c= cCOND f0 cfilter part cisSome f2 cfilter part cisSome f3 cCOND f1 b0 b1 * / ! c==> c= f0 f1 c==> c==> f1 c= cfilter part cisSome f2 b0 c==> c==> c~ f1 c= cfilter part cisSome f3 b1 c= cCOND f0 cfilter part cisSome f2 cfilter part cisSome f3 cCOND f1 b0 b1 f4 * / ! c==> c= f0 f1 c==> c==> f1 c= cfilter part cisSome f2 b0 c==> c==> c~ f1 c= cfilter part cisSome f3 b1 c= cCOND f0 cfilter part cisSome f2 cfilter part cisSome f3 cCOND f1 b0 b1 f4
- |- ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) ==> (NIL = t')) ==> (((~ ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) ==> (((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x))) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((rcons ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) (SOME (FST x)))) = (((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) t') e'))))
T c==> c==> c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= cNIL f5 c==> c==> c~ c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 c= crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 f6 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL crcons cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cSOME cFST f3 cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 f6
- ((FST (((((ytrans L) N) r) x) x')) = (((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x'))))) |- ((((COND (x' = (NUMERAL _0))) (SND x)) (FST (((((ztrans L) N) r) x) (PRE x')))) = (FST (((((ytrans L) N) r) x) x')))
T c==> c= cFST cytrans f0 f1 f2 f3 f4 cCOND c= f4 cNUMERAL c_0 cSND f3 cFST cztrans f0 f1 f2 f3 cPRE f4 c= cCOND c= f4 cNUMERAL c_0 cSND f3 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST cytrans f0 f1 f2 f3 f4
- |- ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s)
T * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0
- |- ((\t'. (!e'. ((((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x)) = g') ==> ((g' ==> (NIL = t')) ==> (((~ g') ==> (((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL)) = e')) ==> ((((COND ((FST (((((ztrans L) N) r) x) (PRE k))) = (FST x))) NIL) ((cat ((MAP SOME) (((betwn ((core L) r)) (FST (((((ztrans L) N) r) x) (PRE k)))) (FST x)))) ((CONS (SOME (FST x))) NIL))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 f5 c==> c==> f5 c= cNIL b0 c==> c==> c~ f5 c= ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL b1 c= cCOND c= cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cNIL ccat cMAP part cSOME cbetwn ccore f0 f2 cFST cztrans f0 f1 f2 f3 cPRE f4 cFST f3 cCONS cSOME cFST f3 cNIL cCOND f5 b0 b1 f6
- (!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))) |- ((!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))) /\ (!a. (!b. (!c. (!d. (((a = c) /\ (b = d)) ==> (((cat a) b) = ((cat c) d))))))))
T c==> ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3 c/\ ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3 ! ! ! ! c==> c/\ c= b0 b2 c= b1 b3 c= ccat b0 b1 ccat b2 b3
