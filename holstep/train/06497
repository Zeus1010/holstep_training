N Auqtzyz.complement_cycle
C |- (((is_restricted H) /\ ((x IN (dart H)) /\ ((PRE (((complement_index H) x) (CARD ((face H) x)))) = n))) ==> ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0))))
T c==> c/\ cis_restricted f0 c/\ cIN f1 * part cdart f0 c= cPRE ccomplement_index f0 f1 cCARD * * part cface f0 f1 f2 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0
D TRUTH
A |- T
T cT
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D I_DEF
A |- (I = (\x. x))
T c= part cI / b0
D Fan.POWER_0
A |- (!f. (((POWER f) (NUMERAL _0)) = I))
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
D Hypermap.LE_SUC_PRE
A |- (!n. (((NUMERAL (BIT1 _0)) <= n) ==> ((SUC (PRE n)) = n)))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= cSUC cPRE f0 f0
D Hypermap.complement_index
A |- ((!H. (!x. ((((complement_index H) x) (NUMERAL _0)) = (NUMERAL _0)))) /\ (!H. (!x. (!n. ((((complement_index H) x) (SUC n)) = ((((complement_index H) x) n) + (PRE (CARD ((node H) (((POWER (inverse (face_map H))) (SUC n)) x))))))))))
T c/\ ! ! c= ccomplement_index b0 b1 cNUMERAL c_0 cNUMERAL c_0 ! ! ! c= ccomplement_index b0 b1 cSUC b2 c+ ccomplement_index b0 b1 b2 cPRE cCARD * * part cnode b0 cPOWER * part cinverse * part cface_map b0 cSUC b2 b1
D Hypermap.lemma_complement_path
A |- (!H. (!x. (((plain_hypermap H) /\ ((is_node_nondegenerate H) /\ (x IN (dart H)))) ==> ((!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) /\ ((!i. ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))) /\ ((!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))) /\ ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) /\ (!n. (((is_contour H) ((complement H) x)) n)))))))))
T c==> c/\ cplain_hypermap f0 c/\ cis_node_nondegenerate f0 cIN f1 * part cdart f0 c/\ ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c/\ ! c= ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 cinverse * part cnode_map f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c/\ ! c= cface_map f0 ccomplement f0 f1 ccomplement_index f0 f1 b0 ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 c/\ ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 ! cis_contour f0 * * part ccomplement f0 f1 b0
D Hypermap.is_restricted
A |- (!H. ((is_restricted H) = ((~ ((dart H) = EMPTY)) /\ ((planar_hypermap H) /\ ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x)))))))))))))))
T c= cis_restricted f0 c/\ c~ c= * part cdart f0 part cEMPTY c/\ cplanar_hypermap f0 c/\ cplain_hypermap f0 c/\ cconnected_hypermap f0 c/\ csimple_hypermap f0 c/\ cis_no_double_joins f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0
D Lvducxu.INVERSE_FACE_CYCLE
A |- (!x. (!H. ((((POWER (inverse (face_map H))) (CARD ((face H) x))) x) = x)))
T c= cPOWER * part cinverse * part cface_map f0 cCARD * * part cface f0 f1 f1 f1
D Auqtzyz.complement_index_face_le1
A |- (((is_node_nondegenerate H) /\ (x IN (dart H))) ==> ((NUMERAL (BIT1 _0)) <= (((complement_index H) x) (CARD ((face H) x)))))
T c==> c/\ cis_node_nondegenerate f0 cIN f1 * part cdart f0 c<= cNUMERAL cBIT1 c_0 ccomplement_index f0 f1 cCARD * * part cface f0 f1
- |- ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)
T * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
+ |- ((!x. (((is_node_nondegenerate H) /\ (x IN (dart H))) ==> ((NUMERAL (BIT1 _0)) <= (((complement_index H) x) (CARD ((face H) x)))))) = T)
T c= ! c==> c/\ cis_node_nondegenerate f0 cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 c_0 ccomplement_index f0 b0 cCARD * * part cface f0 b0 cT
+ (plain_hypermap H) |- ((plain_hypermap H) = T)
T c==> cplain_hypermap f0 c= cplain_hypermap f0 cT
- |- ((((~ ((x = y) ==> ((f x) = (f y)))) ==> F) ==> ((~ ((x = y) ==> ((f x) = (f y)))) ==> F)) = ((~ ((x = y) ==> ((f x) = (f y)))) ==> F))
T c= c==> c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF
- (!n. (((is_contour H) ((complement H) x)) n)) |- ((\n. (((is_contour H) ((complement H) x)) n)) n)
T c==> ! cis_contour f0 * * part ccomplement f0 f1 b0 * / cis_contour f0 * * part ccomplement f0 f1 b0 f2
- (!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))) |- (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))
T c==> ! c= cface_map f0 ccomplement f0 f1 ccomplement_index f0 f1 b0 ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 c= cface_map f0 ccomplement f0 f1 ccomplement_index f0 f1 f2 ccomplement f0 f1 cSUC ccomplement_index f0 f1 f2
+ (plain_hypermap H), ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x)))))))))), ((x IN (dart H)) /\ ((PRE (((complement_index H) x) (CARD ((face H) x)))) = n)) |- ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0)))
T c==> cplain_hypermap f0 c==> c/\ cconnected_hypermap f0 c/\ csimple_hypermap f0 c/\ cis_no_double_joins f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0 c==> c/\ cIN f1 * part cdart f0 c= cPRE ccomplement_index f0 f1 cCARD * * part cface f0 f1 f2 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ (is_node_nondegenerate H), (x IN (dart H)) |- ((((NUMERAL (BIT1 _0)) <= (((complement_index H) x) (CARD ((face H) x)))) ==> ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0)))) = ((((is_node_nondegenerate H) /\ (x IN (dart H))) ==> ((NUMERAL (BIT1 _0)) <= (((complement_index H) x) (CARD ((face H) x))))) ==> ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0)))))
T c==> cis_node_nondegenerate f0 c==> cIN f1 * part cdart f0 c= c==> c<= cNUMERAL cBIT1 c_0 ccomplement_index f0 f1 cCARD * * part cface f0 f1 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0 c==> c==> c/\ cis_node_nondegenerate f0 cIN f1 * part cdart f0 c<= cNUMERAL cBIT1 c_0 ccomplement_index f0 f1 cCARD * * part cface f0 f1 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0
+ (~ ((f x) = (f y))), (x = y) |- F
T c==> c~ c= * f0 f1 * f0 f2 c==> c= f1 f2 cF
- (!n. (((is_contour H) ((complement H) x)) n)) |- (((is_contour H) ((complement H) x)) n)
T c==> ! cis_contour f0 * * part ccomplement f0 f1 b0 cis_contour f0 * * part ccomplement f0 f1 f2
- (!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) |- (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))
T c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c< b0 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f2 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 f2 b0 cPOWER * part cinverse * part cnode_map f0 b0 cPOWER * part cinverse * part cface_map f0 cSUC f2 f1
+ (~ ((f x) = (f y))), (x = y) |- (((f y) = (f y)) ==> F)
T c==> c~ c= * f0 f1 * f0 f2 c==> c= f1 f2 c==> c= * f0 f2 * f0 f2 cF
- |- ((\H. (!x. (!n. ((((complement_index H) x) (SUC n)) = ((((complement_index H) x) n) + (PRE (CARD ((node H) (((POWER (inverse (face_map H))) (SUC n)) x))))))))) H)
T * / ! ! c= ccomplement_index b0 b1 cSUC b2 c+ ccomplement_index b0 b1 b2 cPRE cCARD * * part cnode b0 cPOWER * part cinverse * part cface_map b0 cSUC b2 b1 f0
+ |- (((((~ ((dart H) = EMPTY)) /\ ((planar_hypermap H) /\ ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))))))))))) /\ ((x IN (dart H)) /\ ((PRE (((complement_index H) x) (CARD ((face H) x)))) = n))) ==> ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0)))) = (((is_restricted H) /\ ((x IN (dart H)) /\ ((PRE (((complement_index H) x) (CARD ((face H) x)))) = n))) ==> ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0)))))
T c= c==> c/\ c/\ c~ c= * part cdart f0 part cEMPTY c/\ cplanar_hypermap f0 c/\ cplain_hypermap f0 c/\ cconnected_hypermap f0 c/\ csimple_hypermap f0 c/\ cis_no_double_joins f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0 c/\ cIN f1 * part cdart f0 c= cPRE ccomplement_index f0 f1 cCARD * * part cface f0 f1 f2 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0 c==> c/\ cis_restricted f0 c/\ cIN f1 * part cdart f0 c= cPRE ccomplement_index f0 f1 cCARD * * part cface f0 f1 f2 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0
+ |- ((((POWER (inverse (face_map H))) (CARD ((face H) x))) x) = (((POWER (inverse (face_map H))) (NUMERAL _0)) x))
T c= cPOWER * part cinverse * part cface_map f0 cCARD * * part cface f0 f1 f1 cPOWER * part cinverse * part cface_map f0 cNUMERAL c_0 f1
+ (!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) |- ((((node_map H) (((POWER (inverse (face_map H))) (CARD ((face H) x))) x)) = (((complement H) x) (NUMERAL _0))) = ((((complement H) x) (((complement_index H) x) (CARD ((face H) x)))) = (((complement H) x) (NUMERAL _0))))
T c==> ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c= c= cnode_map f0 cPOWER * part cinverse * part cface_map f0 cCARD * * part cface f0 f1 f1 ccomplement f0 f1 cNUMERAL c_0 c= ccomplement f0 f1 ccomplement_index f0 f1 cCARD * * part cface f0 f1 ccomplement f0 f1 cNUMERAL c_0
+ (((~ ((dart H) = EMPTY)) /\ ((planar_hypermap H) /\ ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))))))))))) /\ ((x IN (dart H)) /\ ((PRE (((complement_index H) x) (CARD ((face H) x)))) = n))) |- ((((~ ((dart H) = EMPTY)) /\ ((planar_hypermap H) /\ ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))))))))))) /\ ((x IN (dart H)) /\ ((PRE (((complement_index H) x) (CARD ((face H) x)))) = n))) /\ ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0))))
T c==> c/\ c/\ c~ c= * part cdart f0 part cEMPTY c/\ cplanar_hypermap f0 c/\ cplain_hypermap f0 c/\ cconnected_hypermap f0 c/\ csimple_hypermap f0 c/\ cis_no_double_joins f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0 c/\ cIN f1 * part cdart f0 c= cPRE ccomplement_index f0 f1 cCARD * * part cface f0 f1 f2 c/\ c/\ c/\ c~ c= * part cdart f0 part cEMPTY c/\ cplanar_hypermap f0 c/\ cplain_hypermap f0 c/\ cconnected_hypermap f0 c/\ csimple_hypermap f0 c/\ cis_no_double_joins f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0 c/\ cIN f1 * part cdart f0 c= cPRE ccomplement_index f0 f1 cCARD * * part cface f0 f1 f2 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0
+ (!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))), (!i. ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))), (!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))), ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) /\ (!n. (((is_contour H) ((complement H) x)) n))) |- ((((complement H) x) (((complement_index H) x) (CARD ((face H) x)))) = (((complement H) x) (NUMERAL _0)))
T c==> ! c= cface_map f0 ccomplement f0 f1 ccomplement_index f0 f1 b0 ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 c==> ! c= ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 cinverse * part cnode_map f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c==> ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c==> c/\ ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 ! cis_contour f0 * * part ccomplement f0 f1 b0 c= ccomplement f0 f1 ccomplement_index f0 f1 cCARD * * part cface f0 f1 ccomplement f0 f1 cNUMERAL c_0
- (~ ((f x) = (f y))), (x = y) |- ((~ F) ==> F)
T c==> c~ c= * f0 f1 * f0 f2 c==> c= f1 f2 c==> c~ cF cF
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (plain_hypermap H), (is_node_nondegenerate H), (x IN (dart H)) |- ((((complement H) x) (((complement_index H) x) (CARD ((face H) x)))) = (((complement H) x) (NUMERAL _0)))
T c==> cplain_hypermap f0 c==> cis_node_nondegenerate f0 c==> cIN f1 * part cdart f0 c= ccomplement f0 f1 ccomplement_index f0 f1 cCARD * * part cface f0 f1 ccomplement f0 f1 cNUMERAL c_0
- (!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) |- ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x))))
T c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c==> c/\ c<= cNUMERAL cBIT1 c_0 f2 c< f2 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f3 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 f3 f2 cPOWER * part cinverse * part cnode_map f0 f2 cPOWER * part cinverse * part cface_map f0 cSUC f3 f1
- |- ((((~ ((x = y) ==> ((f x) = (f y)))) ==> F) ==> ((~ ((x = y) ==> ((f x) = (f y)))) ==> F)) ==> (((~ ((x = y) ==> ((f x) = (f y)))) ==> F) ==> ((~ ((x = y) ==> ((f x) = (f y)))) ==> F)))
T c==> c==> c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF
+ |- (((~ ((f x) = (f y))) ==> F) = ((f x) = (f y)))
T c= c==> c~ c= * f0 f1 * f0 f2 cF c= * f0 f1 * f0 f2
- |- (((!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) ==> ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)) = ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f))
T c= c==> ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
- |- ((((x = y) ==> ((f x) = (f y))) ==> ((x = y) ==> ((f x) = (f y)))) = ((x = y) ==> ((f x) = (f y))))
T c= c==> c==> c= f0 f1 c= * f2 f0 * f2 f1 c==> c= f0 f1 c= * f2 f0 * f2 f1 c==> c= f0 f1 c= * f2 f0 * f2 f1
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((!f. (!x. ((x = y) ==> ((f x) = (f y))))) = T)
T c= ! ! c==> c= b1 f0 c= * b0 b1 * b0 f0 cT
- |- ((((complement_index H) x) (SUC n)) = ((((complement_index H) x) n) + (PRE (CARD ((node H) (((POWER (inverse (face_map H))) (SUC n)) x))))))
T c= ccomplement_index f0 f1 cSUC f2 c+ ccomplement_index f0 f1 f2 cPRE cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f2 f1
+ (plain_hypermap H), (is_node_nondegenerate H), ((PRE (((complement_index H) x) (CARD ((face H) x)))) = n), (x IN (dart H)) |- ((((is_node_nondegenerate H) /\ (x IN (dart H))) ==> ((NUMERAL (BIT1 _0)) <= (((complement_index H) x) (CARD ((face H) x))))) ==> ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0))))
T c==> cplain_hypermap f0 c==> cis_node_nondegenerate f0 c==> c= cPRE ccomplement_index f0 f1 cCARD * * part cface f0 f1 f2 c==> cIN f1 * part cdart f0 c==> c==> c/\ cis_node_nondegenerate f0 cIN f1 * part cdart f0 c<= cNUMERAL cBIT1 c_0 ccomplement_index f0 f1 cCARD * * part cface f0 f1 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- |- ((!n. t) = t)
T c= ! f0 f0
+ (!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) |- ((!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))) ==> ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) ==> ((!n. (((is_contour H) ((complement H) x)) n)) ==> (((node_map H) (((POWER (inverse (face_map H))) (CARD ((face H) x))) x)) = (((complement H) x) (NUMERAL _0))))))
T c==> ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c==> ! c= cface_map f0 ccomplement f0 f1 ccomplement_index f0 f1 b0 ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c==> ! cis_contour f0 * * part ccomplement f0 f1 b0 c= cnode_map f0 cPOWER * part cinverse * part cface_map f0 cCARD * * part cface f0 f1 f1 ccomplement f0 f1 cNUMERAL c_0
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ (!i. ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))), (!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))), ((!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))) /\ ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) /\ (!n. (((is_contour H) ((complement H) x)) n)))) |- ((((complement H) x) (((complement_index H) x) (CARD ((face H) x)))) = (((complement H) x) (NUMERAL _0)))
T c==> ! c= ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 cinverse * part cnode_map f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c==> ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c==> c/\ ! c= cface_map f0 ccomplement f0 f1 ccomplement_index f0 f1 b0 ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 c/\ ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 ! cis_contour f0 * * part ccomplement f0 f1 b0 c= ccomplement f0 f1 ccomplement_index f0 f1 cCARD * * part cface f0 f1 ccomplement f0 f1 cNUMERAL c_0
+ (!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))), ((!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) /\ ((!i. ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))) /\ ((!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))) /\ ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) /\ (!n. (((is_contour H) ((complement H) x)) n)))))) |- ((((complement H) x) (((complement_index H) x) (CARD ((face H) x)))) = (((complement H) x) (NUMERAL _0)))
T c==> ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c==> c/\ ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c/\ ! c= ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 cinverse * part cnode_map f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c/\ ! c= cface_map f0 ccomplement f0 f1 ccomplement_index f0 f1 b0 ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 c/\ ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 ! cis_contour f0 * * part ccomplement f0 f1 b0 c= ccomplement f0 f1 ccomplement_index f0 f1 cCARD * * part cface f0 f1 ccomplement f0 f1 cNUMERAL c_0
+ (!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))), ((!i. ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))) /\ ((!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))) /\ ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) /\ (!n. (((is_contour H) ((complement H) x)) n))))) |- ((((complement H) x) (((complement_index H) x) (CARD ((face H) x)))) = (((complement H) x) (NUMERAL _0)))
T c==> ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c==> c/\ ! c= ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 cinverse * part cnode_map f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c/\ ! c= cface_map f0 ccomplement f0 f1 ccomplement_index f0 f1 b0 ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 c/\ ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 ! cis_contour f0 * * part ccomplement f0 f1 b0 c= ccomplement f0 f1 ccomplement_index f0 f1 cCARD * * part cface f0 f1 ccomplement f0 f1 cNUMERAL c_0
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ |- (((NUMERAL (BIT1 _0)) <= (((complement_index H) x) (CARD ((face H) x)))) ==> ((SUC (PRE (((complement_index H) x) (CARD ((face H) x))))) = (((complement_index H) x) (CARD ((face H) x)))))
T c==> c<= cNUMERAL cBIT1 c_0 ccomplement_index f0 f1 cCARD * * part cface f0 f1 c= cSUC cPRE ccomplement_index f0 f1 cCARD * * part cface f0 f1 ccomplement_index f0 f1 cCARD * * part cface f0 f1
+ (plain_hypermap H), (is_node_nondegenerate H), ((PRE (((complement_index H) x) (CARD ((face H) x)))) = n), (x IN (dart H)) |- ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0)))
T c==> cplain_hypermap f0 c==> cis_node_nondegenerate f0 c==> c= cPRE ccomplement_index f0 f1 cCARD * * part cface f0 f1 f2 c==> cIN f1 * part cdart f0 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0
- (connected_hypermap H) |- ((connected_hypermap H) = T)
T c==> cconnected_hypermap f0 c= cconnected_hypermap f0 cT
- (x = y), ((x = y) ==> ((f x) = (f y))) |- ((x = y) /\ ((f x) = (f y)))
T c==> c= f0 f1 c==> c==> c= f0 f1 c= * f2 f0 * f2 f1 c/\ c= f0 f1 c= * f2 f0 * f2 f1
+ |- (((!H. (!x. (((is_node_nondegenerate H) /\ (x IN (dart H))) ==> ((NUMERAL (BIT1 _0)) <= (((complement_index H) x) (CARD ((face H) x))))))) ==> ((\H. (!x. (((is_node_nondegenerate H) /\ (x IN (dart H))) ==> ((NUMERAL (BIT1 _0)) <= (((complement_index H) x) (CARD ((face H) x))))))) H)) = ((\H. (!x. (((is_node_nondegenerate H) /\ (x IN (dart H))) ==> ((NUMERAL (BIT1 _0)) <= (((complement_index H) x) (CARD ((face H) x))))))) H))
T c= c==> ! ! c==> c/\ cis_node_nondegenerate b0 cIN b1 * part cdart b0 c<= cNUMERAL cBIT1 c_0 ccomplement_index b0 b1 cCARD * * part cface b0 b1 * / ! c==> c/\ cis_node_nondegenerate b0 cIN b1 * part cdart b0 c<= cNUMERAL cBIT1 c_0 ccomplement_index b0 b1 cCARD * * part cface b0 b1 f0 * / ! c==> c/\ cis_node_nondegenerate b0 cIN b1 * part cdart b0 c<= cNUMERAL cBIT1 c_0 ccomplement_index b0 b1 cCARD * * part cface b0 b1 f0
- |- ((\n. ((((complement_index H) x) (SUC n)) = ((((complement_index H) x) n) + (PRE (CARD ((node H) (((POWER (inverse (face_map H))) (SUC n)) x))))))) n)
T * / c= ccomplement_index f0 f1 cSUC b0 c+ ccomplement_index f0 f1 b0 cPRE cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 f2
+ (!i. ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))), (!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) |- ((!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))) ==> ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) ==> ((!n. (((is_contour H) ((complement H) x)) n)) ==> (((node_map H) (((POWER (inverse (face_map H))) (CARD ((face H) x))) x)) = (((complement H) x) (NUMERAL _0))))))
T c==> ! c= ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 cinverse * part cnode_map f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c==> ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c==> ! c= cface_map f0 ccomplement f0 f1 ccomplement_index f0 f1 b0 ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c==> ! cis_contour f0 * * part ccomplement f0 f1 b0 c= cnode_map f0 cPOWER * part cinverse * part cface_map f0 cCARD * * part cface f0 f1 f1 ccomplement f0 f1 cNUMERAL c_0
+ |- (((((complement H) x) (((complement_index H) x) (NUMERAL _0))) = ((node_map H) (((POWER (inverse (face_map H))) (NUMERAL _0)) x))) ==> (((node_map H) (((POWER (inverse (face_map H))) (CARD ((face H) x))) x)) = (((complement H) x) (NUMERAL _0))))
T c==> c= ccomplement f0 f1 ccomplement_index f0 f1 cNUMERAL c_0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 cNUMERAL c_0 f1 c= cnode_map f0 cPOWER * part cinverse * part cface_map f0 cCARD * * part cface f0 f1 f1 ccomplement f0 f1 cNUMERAL c_0
+ (plain_hypermap H), (is_node_nondegenerate H), (x IN (dart H)) |- ((((plain_hypermap H) /\ ((is_node_nondegenerate H) /\ (x IN (dart H)))) ==> ((!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) /\ ((!i. ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))) /\ ((!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))) /\ ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) /\ (!n. (((is_contour H) ((complement H) x)) n))))))) ==> ((((complement H) x) (((complement_index H) x) (CARD ((face H) x)))) = (((complement H) x) (NUMERAL _0))))
T c==> cplain_hypermap f0 c==> cis_node_nondegenerate f0 c==> cIN f1 * part cdart f0 c==> c==> c/\ cplain_hypermap f0 c/\ cis_node_nondegenerate f0 cIN f1 * part cdart f0 c/\ ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c/\ ! c= ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 cinverse * part cnode_map f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c/\ ! c= cface_map f0 ccomplement f0 f1 ccomplement_index f0 f1 b0 ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 c/\ ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 ! cis_contour f0 * * part ccomplement f0 f1 b0 c= ccomplement f0 f1 ccomplement_index f0 f1 cCARD * * part cface f0 f1 ccomplement f0 f1 cNUMERAL c_0
+ |- ((((((complement H) x) (NUMERAL _0)) = ((node_map H) (((POWER (inverse (face_map H))) (NUMERAL _0)) x))) ==> (((node_map H) (((POWER (inverse (face_map H))) (CARD ((face H) x))) x)) = (((complement H) x) (NUMERAL _0)))) = (((((complement H) x) (((complement_index H) x) (NUMERAL _0))) = ((node_map H) (((POWER (inverse (face_map H))) (NUMERAL _0)) x))) ==> (((node_map H) (((POWER (inverse (face_map H))) (CARD ((face H) x))) x)) = (((complement H) x) (NUMERAL _0)))))
T c= c==> c= ccomplement f0 f1 cNUMERAL c_0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 cNUMERAL c_0 f1 c= cnode_map f0 cPOWER * part cinverse * part cface_map f0 cCARD * * part cface f0 f1 f1 ccomplement f0 f1 cNUMERAL c_0 c==> c= ccomplement f0 f1 ccomplement_index f0 f1 cNUMERAL c_0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 cNUMERAL c_0 f1 c= cnode_map f0 cPOWER * part cinverse * part cface_map f0 cCARD * * part cface f0 f1 f1 ccomplement f0 f1 cNUMERAL c_0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- (((!x. (((is_node_nondegenerate H) /\ (x IN (dart H))) ==> ((NUMERAL (BIT1 _0)) <= (((complement_index H) x) (CARD ((face H) x)))))) ==> ((\x. (((is_node_nondegenerate H) /\ (x IN (dart H))) ==> ((NUMERAL (BIT1 _0)) <= (((complement_index H) x) (CARD ((face H) x)))))) x)) = ((\x. (((is_node_nondegenerate H) /\ (x IN (dart H))) ==> ((NUMERAL (BIT1 _0)) <= (((complement_index H) x) (CARD ((face H) x)))))) x))
T c= c==> ! c==> c/\ cis_node_nondegenerate f0 cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 c_0 ccomplement_index f0 b0 cCARD * * part cface f0 b0 * / c==> c/\ cis_node_nondegenerate f0 cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 c_0 ccomplement_index f0 b0 cCARD * * part cface f0 b0 f1 * / c==> c/\ cis_node_nondegenerate f0 cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 c_0 ccomplement_index f0 b0 cCARD * * part cface f0 b0 f1
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- (EMPTY = (dart H)) |- ((dart H) = EMPTY)
T c==> c= part cEMPTY * part cdart f0 c= * part cdart f0 part cEMPTY
+ (plain_hypermap H), ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))))))), ((x IN (dart H)) /\ ((PRE (((complement_index H) x) (CARD ((face H) x)))) = n)) |- ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0)))
T c==> cplain_hypermap f0 c==> c/\ csimple_hypermap f0 c/\ cis_no_double_joins f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0 c==> c/\ cIN f1 * part cdart f0 c= cPRE ccomplement_index f0 f1 cCARD * * part cface f0 f1 f2 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0
- (planar_hypermap H) |- ((planar_hypermap H) = T)
T c==> cplanar_hypermap f0 c= cplanar_hypermap f0 cT
+ (plain_hypermap H), (is_node_nondegenerate H), ((x IN (dart H)) /\ ((PRE (((complement_index H) x) (CARD ((face H) x)))) = n)) |- ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0)))
T c==> cplain_hypermap f0 c==> cis_node_nondegenerate f0 c==> c/\ cIN f1 * part cdart f0 c= cPRE ccomplement_index f0 f1 cCARD * * part cface f0 f1 f2 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0
+ (plain_hypermap H), ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))))), ((x IN (dart H)) /\ ((PRE (((complement_index H) x) (CARD ((face H) x)))) = n)) |- ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0)))
T c==> cplain_hypermap f0 c==> c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0 c==> c/\ cIN f1 * part cdart f0 c= cPRE ccomplement_index f0 f1 cCARD * * part cface f0 f1 f2 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0
+ |- (((((is_node_nondegenerate H) /\ (x IN (dart H))) ==> ((NUMERAL (BIT1 _0)) <= (((complement_index H) x) (CARD ((face H) x))))) ==> ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0)))) = ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0))))
T c= c==> c==> c/\ cis_node_nondegenerate f0 cIN f1 * part cdart f0 c<= cNUMERAL cBIT1 c_0 ccomplement_index f0 f1 cCARD * * part cface f0 f1 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0
+ |- (((((NUMERAL (BIT1 _0)) <= (((complement_index H) x) (CARD ((face H) x)))) ==> ((SUC (PRE (((complement_index H) x) (CARD ((face H) x))))) = (((complement_index H) x) (CARD ((face H) x))))) ==> ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0)))) = ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0))))
T c= c==> c==> c<= cNUMERAL cBIT1 c_0 ccomplement_index f0 f1 cCARD * * part cface f0 f1 c= cSUC cPRE ccomplement_index f0 f1 cCARD * * part cface f0 f1 ccomplement_index f0 f1 cCARD * * part cface f0 f1 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0
+ ((NUMERAL (BIT1 _0)) <= (((complement_index H) x) (CARD ((face H) x)))) |- (((NUMERAL (BIT1 _0)) <= (((complement_index H) x) (CARD ((face H) x)))) = T)
T c==> c<= cNUMERAL cBIT1 c_0 ccomplement_index f0 f1 cCARD * * part cface f0 f1 c= c<= cNUMERAL cBIT1 c_0 ccomplement_index f0 f1 cCARD * * part cface f0 f1 cT
+ |- ((\H. ((is_restricted H) = ((~ ((dart H) = EMPTY)) /\ ((planar_hypermap H) /\ ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))))))))))))) H)
T * / c= cis_restricted b0 c/\ c~ c= * part cdart b0 part cEMPTY c/\ cplanar_hypermap b0 c/\ cplain_hypermap b0 c/\ cconnected_hypermap b0 c/\ csimple_hypermap b0 c/\ cis_no_double_joins b0 c/\ cis_edge_nondegenerate b0 c/\ cis_node_nondegenerate b0 ! c==> cIN b1 * part cdart b0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface b0 b1 f0
+ |- ((\x. ((((complement_index H) x) (NUMERAL _0)) = (NUMERAL _0))) x)
T * / c= ccomplement_index f0 b0 cNUMERAL c_0 cNUMERAL c_0 f1
- |- ((!x. ((x = y) ==> ((f x) = (f y)))) = T)
T c= ! c==> c= b0 f0 c= * f1 b0 * f1 f0 cT
- ((x = y) ==> ((f x) = (f y))) |- (((x = y) ==> ((f x) = (f y))) /\ ((x = y) ==> ((f x) = (f y))))
T c==> c==> c= f0 f1 c= * f2 f0 * f2 f1 c/\ c==> c= f0 f1 c= * f2 f0 * f2 f1 c==> c= f0 f1 c= * f2 f0 * f2 f1
+ ((~ ((dart H) = EMPTY)) /\ ((planar_hypermap H) /\ ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))))))))))), (((~ ((dart H) = EMPTY)) /\ ((planar_hypermap H) /\ ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))))))))))) /\ ((x IN (dart H)) /\ ((PRE (((complement_index H) x) (CARD ((face H) x)))) = n))) |- ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0)))
T c==> c/\ c~ c= * part cdart f0 part cEMPTY c/\ cplanar_hypermap f0 c/\ cplain_hypermap f0 c/\ cconnected_hypermap f0 c/\ csimple_hypermap f0 c/\ cis_no_double_joins f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0 c==> c/\ c/\ c~ c= * part cdart f0 part cEMPTY c/\ cplanar_hypermap f0 c/\ cplain_hypermap f0 c/\ cconnected_hypermap f0 c/\ csimple_hypermap f0 c/\ cis_no_double_joins f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0 c/\ cIN f1 * part cdart f0 c= cPRE ccomplement_index f0 f1 cCARD * * part cface f0 f1 f2 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0
+ |- (((!f. (((POWER f) (NUMERAL _0)) = I)) ==> ((\f. (((POWER f) (NUMERAL _0)) = I)) f)) = ((\f. (((POWER f) (NUMERAL _0)) = I)) f))
T c= c==> ! c= * * part cPOWER b0 cNUMERAL c_0 part cI * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0 * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0
- ((~ ((x = y) ==> ((f x) = (f y)))) ==> F), (((~ ((x = y) ==> ((f x) = (f y)))) ==> F) ==> ((~ ((x = y) ==> ((f x) = (f y)))) ==> F)) |- (((~ ((x = y) ==> ((f x) = (f y)))) ==> F) /\ ((~ ((x = y) ==> ((f x) = (f y)))) ==> F))
T c==> c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c==> c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c/\ c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF
+ ((((complement H) x) (NUMERAL _0)) = ((node_map H) (((POWER (inverse (face_map H))) (NUMERAL _0)) x))) |- (((((complement H) x) (NUMERAL _0)) = ((node_map H) (((POWER (inverse (face_map H))) (NUMERAL _0)) x))) /\ (((node_map H) (((POWER (inverse (face_map H))) (CARD ((face H) x))) x)) = (((complement H) x) (NUMERAL _0))))
T c==> c= ccomplement f0 f1 cNUMERAL c_0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 cNUMERAL c_0 f1 c/\ c= ccomplement f0 f1 cNUMERAL c_0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 cNUMERAL c_0 f1 c= cnode_map f0 cPOWER * part cinverse * part cface_map f0 cCARD * * part cface f0 f1 f1 ccomplement f0 f1 cNUMERAL c_0
+ (!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))), (!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))), (!i. ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))), (!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))), (!n. (((is_contour H) ((complement H) x)) n)) |- (((node_map H) (((POWER (inverse (face_map H))) (CARD ((face H) x))) x)) = (((complement H) x) (NUMERAL _0)))
T c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c==> ! c= cface_map f0 ccomplement f0 f1 ccomplement_index f0 f1 b0 ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 c==> ! c= ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 cinverse * part cnode_map f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c==> ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c==> ! cis_contour f0 * * part ccomplement f0 f1 b0 c= cnode_map f0 cPOWER * part cinverse * part cface_map f0 cCARD * * part cface f0 f1 f1 ccomplement f0 f1 cNUMERAL c_0
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- ((((~ ((dart H) = EMPTY)) /\ ((planar_hypermap H) /\ ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))))))))))) /\ ((x IN (dart H)) /\ ((PRE (((complement_index H) x) (CARD ((face H) x)))) = n))) ==> ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0))))
T c==> c/\ c/\ c~ c= * part cdart f0 part cEMPTY c/\ cplanar_hypermap f0 c/\ cplain_hypermap f0 c/\ cconnected_hypermap f0 c/\ csimple_hypermap f0 c/\ cis_no_double_joins f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0 c/\ cIN f1 * part cdart f0 c= cPRE ccomplement_index f0 f1 cCARD * * part cface f0 f1 f2 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0
+ |- (((((complement H) x) (NUMERAL _0)) = ((node_map H) (((POWER (inverse (face_map H))) (NUMERAL _0)) x))) ==> (((node_map H) (((POWER (inverse (face_map H))) (CARD ((face H) x))) x)) = (((complement H) x) (NUMERAL _0))))
T c==> c= ccomplement f0 f1 cNUMERAL c_0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 cNUMERAL c_0 f1 c= cnode_map f0 cPOWER * part cinverse * part cface_map f0 cCARD * * part cface f0 f1 f1 ccomplement f0 f1 cNUMERAL c_0
- |- ((\f. (!x. ((~ ((x = y) ==> ((f x) = (f y)))) ==> F))) f)
T * / ! c==> c~ c==> c= b1 f0 c= * b0 b1 * b0 f0 cF f1
- |- ((\x. ((~ ((x = y) ==> ((f x) = (f y)))) ==> F)) x)
T * / c==> c~ c==> c= b0 f0 c= * f1 b0 * f1 f0 cF f2
+ |- ((((f y) = (f y)) ==> F) = F)
T c= c==> c= * f0 f1 * f0 f1 cF cF
+ (plain_hypermap H), (is_node_nondegenerate H), ((SUC n) = (((complement_index H) x) (CARD ((face H) x)))), (x IN (dart H)) |- (((SUC n) = (((complement_index H) x) (CARD ((face H) x)))) /\ ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0))))
T c==> cplain_hypermap f0 c==> cis_node_nondegenerate f0 c==> c= cSUC f1 ccomplement_index f0 f2 cCARD * * part cface f0 f2 c==> cIN f2 * part cdart f0 c/\ c= cSUC f1 ccomplement_index f0 f2 cCARD * * part cface f0 f2 c= ccomplement f0 f2 cSUC f1 ccomplement f0 f2 cNUMERAL c_0
- ((~ ((x = y) ==> ((f x) = (f y)))) ==> F), (((~ ((x = y) ==> ((f x) = (f y)))) ==> F) ==> ((~ ((x = y) ==> ((f x) = (f y)))) ==> F)) |- ((((~ ((x = y) ==> ((f x) = (f y)))) ==> F) ==> ((~ ((x = y) ==> ((f x) = (f y)))) ==> F)) /\ ((~ ((x = y) ==> ((f x) = (f y)))) ==> F))
T c==> c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c==> c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c/\ c==> c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF
+ |- ((\H. (!x. ((((complement_index H) x) (NUMERAL _0)) = (NUMERAL _0)))) H)
T * / ! c= ccomplement_index b0 b1 cNUMERAL c_0 cNUMERAL c_0 f0
+ (plain_hypermap H), (is_node_nondegenerate H), ((SUC n) = (((complement_index H) x) (CARD ((face H) x)))), (x IN (dart H)) |- ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0)))
T c==> cplain_hypermap f0 c==> cis_node_nondegenerate f0 c==> c= cSUC f1 ccomplement_index f0 f2 cCARD * * part cface f0 f2 c==> cIN f2 * part cdart f0 c= ccomplement f0 f2 cSUC f1 ccomplement f0 f2 cNUMERAL c_0
+ (plain_hypermap H), ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x)))))))), ((x IN (dart H)) /\ ((PRE (((complement_index H) x) (CARD ((face H) x)))) = n)) |- ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0)))
T c==> cplain_hypermap f0 c==> c/\ cis_no_double_joins f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0 c==> c/\ cIN f1 * part cdart f0 c= cPRE ccomplement_index f0 f1 cCARD * * part cface f0 f1 f2 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (plain_hypermap H), (is_node_nondegenerate H), ((PRE (((complement_index H) x) (CARD ((face H) x)))) = n), (x IN (dart H)) |- (((NUMERAL (BIT1 _0)) <= (((complement_index H) x) (CARD ((face H) x)))) ==> ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0))))
T c==> cplain_hypermap f0 c==> cis_node_nondegenerate f0 c==> c= cPRE ccomplement_index f0 f1 cCARD * * part cface f0 f1 f2 c==> cIN f1 * part cdart f0 c==> c<= cNUMERAL cBIT1 c_0 ccomplement_index f0 f1 cCARD * * part cface f0 f1 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ (!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))), (!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) |- ((!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))) /\ ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) ==> ((!n. (((is_contour H) ((complement H) x)) n)) ==> (((node_map H) (((POWER (inverse (face_map H))) (CARD ((face H) x))) x)) = (((complement H) x) (NUMERAL _0))))))
T c==> ! c= cface_map f0 ccomplement f0 f1 ccomplement_index f0 f1 b0 ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 c==> ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c/\ ! c= cface_map f0 ccomplement f0 f1 ccomplement_index f0 f1 b0 ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c==> ! cis_contour f0 * * part ccomplement f0 f1 b0 c= cnode_map f0 cPOWER * part cinverse * part cface_map f0 cCARD * * part cface f0 f1 f1 ccomplement f0 f1 cNUMERAL c_0
+ (plain_hypermap H), (is_node_nondegenerate H), ((PRE (((complement_index H) x) (CARD ((face H) x)))) = n), ((NUMERAL (BIT1 _0)) <= (((complement_index H) x) (CARD ((face H) x)))), (x IN (dart H)) |- (((NUMERAL (BIT1 _0)) <= (((complement_index H) x) (CARD ((face H) x)))) /\ ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0))))
T c==> cplain_hypermap f0 c==> cis_node_nondegenerate f0 c==> c= cPRE ccomplement_index f0 f1 cCARD * * part cface f0 f1 f2 c==> c<= cNUMERAL cBIT1 c_0 ccomplement_index f0 f1 cCARD * * part cface f0 f1 c==> cIN f1 * part cdart f0 c/\ c<= cNUMERAL cBIT1 c_0 ccomplement_index f0 f1 cCARD * * part cface f0 f1 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0
- (x = y), ((x = y) ==> ((f x) = (f y))) |- (((x = y) ==> ((f x) = (f y))) /\ ((f x) = (f y)))
T c==> c= f0 f1 c==> c==> c= f0 f1 c= * f2 f0 * f2 f1 c/\ c==> c= f0 f1 c= * f2 f0 * f2 f1 c= * f2 f0 * f2 f1
+ (!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) |- ((((complement H) x) (((complement_index H) x) (NUMERAL _0))) = ((node_map H) (((POWER (inverse (face_map H))) (NUMERAL _0)) x)))
T c==> ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c= ccomplement f0 f1 ccomplement_index f0 f1 cNUMERAL c_0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 cNUMERAL c_0 f1
+ |- (((!H. (!x. (((plain_hypermap H) /\ ((is_node_nondegenerate H) /\ (x IN (dart H)))) ==> ((!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) /\ ((!i. ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))) /\ ((!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))) /\ ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) /\ (!n. (((is_contour H) ((complement H) x)) n))))))))) ==> ((\H. (!x. (((plain_hypermap H) /\ ((is_node_nondegenerate H) /\ (x IN (dart H)))) ==> ((!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) /\ ((!i. ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))) /\ ((!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))) /\ ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) /\ (!n. (((is_contour H) ((complement H) x)) n))))))))) H)) = ((\H. (!x. (((plain_hypermap H) /\ ((is_node_nondegenerate H) /\ (x IN (dart H)))) ==> ((!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) /\ ((!i. ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))) /\ ((!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))) /\ ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) /\ (!n. (((is_contour H) ((complement H) x)) n))))))))) H))
T c= c==> ! ! c==> c/\ cplain_hypermap b0 c/\ cis_node_nondegenerate b0 cIN b1 * part cdart b0 c/\ ! c= ccomplement b0 b1 ccomplement_index b0 b1 b2 cnode_map b0 cPOWER * part cinverse * part cface_map b0 b2 b1 c/\ ! c= ccomplement b0 b1 cSUC ccomplement_index b0 b1 b2 cinverse * part cnode_map b0 cPOWER * part cinverse * part cface_map b0 cSUC b2 b1 c/\ ! c= cface_map b0 ccomplement b0 b1 ccomplement_index b0 b1 b2 ccomplement b0 b1 cSUC ccomplement_index b0 b1 b2 c/\ ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c< b3 cCARD * * part cnode b0 cPOWER * part cinverse * part cface_map b0 cSUC b2 b1 c= ccomplement b0 b1 c+ ccomplement_index b0 b1 b2 b3 cPOWER * part cinverse * part cnode_map b0 b3 cPOWER * part cinverse * part cface_map b0 cSUC b2 b1 ! cis_contour b0 * * part ccomplement b0 b1 b2 * / ! c==> c/\ cplain_hypermap b0 c/\ cis_node_nondegenerate b0 cIN b1 * part cdart b0 c/\ ! c= ccomplement b0 b1 ccomplement_index b0 b1 b2 cnode_map b0 cPOWER * part cinverse * part cface_map b0 b2 b1 c/\ ! c= ccomplement b0 b1 cSUC ccomplement_index b0 b1 b2 cinverse * part cnode_map b0 cPOWER * part cinverse * part cface_map b0 cSUC b2 b1 c/\ ! c= cface_map b0 ccomplement b0 b1 ccomplement_index b0 b1 b2 ccomplement b0 b1 cSUC ccomplement_index b0 b1 b2 c/\ ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c< b3 cCARD * * part cnode b0 cPOWER * part cinverse * part cface_map b0 cSUC b2 b1 c= ccomplement b0 b1 c+ ccomplement_index b0 b1 b2 b3 cPOWER * part cinverse * part cnode_map b0 b3 cPOWER * part cinverse * part cface_map b0 cSUC b2 b1 ! cis_contour b0 * * part ccomplement b0 b1 b2 f0 * / ! c==> c/\ cplain_hypermap b0 c/\ cis_node_nondegenerate b0 cIN b1 * part cdart b0 c/\ ! c= ccomplement b0 b1 ccomplement_index b0 b1 b2 cnode_map b0 cPOWER * part cinverse * part cface_map b0 b2 b1 c/\ ! c= ccomplement b0 b1 cSUC ccomplement_index b0 b1 b2 cinverse * part cnode_map b0 cPOWER * part cinverse * part cface_map b0 cSUC b2 b1 c/\ ! c= cface_map b0 ccomplement b0 b1 ccomplement_index b0 b1 b2 ccomplement b0 b1 cSUC ccomplement_index b0 b1 b2 c/\ ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c< b3 cCARD * * part cnode b0 cPOWER * part cinverse * part cface_map b0 cSUC b2 b1 c= ccomplement b0 b1 c+ ccomplement_index b0 b1 b2 b3 cPOWER * part cinverse * part cnode_map b0 b3 cPOWER * part cinverse * part cface_map b0 cSUC b2 b1 ! cis_contour b0 * * part ccomplement b0 b1 b2 f0
+ |- ((\n. (((NUMERAL (BIT1 _0)) <= n) ==> ((SUC (PRE n)) = n))) (((complement_index H) x) (CARD ((face H) x))))
T * / c==> c<= cNUMERAL cBIT1 c_0 b0 c= cSUC cPRE b0 b0 ccomplement_index f0 f1 cCARD * * part cface f0 f1
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- (~ ((dart H) = EMPTY)) |- (((dart H) = EMPTY) = F)
T c==> c~ c= * part cdart f0 part cEMPTY c= c= * part cdart f0 part cEMPTY cF
+ (!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))), (!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) |- ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) /\ ((!n. (((is_contour H) ((complement H) x)) n)) ==> (((node_map H) (((POWER (inverse (face_map H))) (CARD ((face H) x))) x)) = (((complement H) x) (NUMERAL _0)))))
T c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c==> ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c/\ ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c==> ! cis_contour f0 * * part ccomplement f0 f1 b0 c= cnode_map f0 cPOWER * part cinverse * part cface_map f0 cCARD * * part cface f0 f1 f1 ccomplement f0 f1 cNUMERAL c_0
+ ((~ ((dart H) = EMPTY)) /\ ((planar_hypermap H) /\ ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))))))))))), ((x IN (dart H)) /\ ((PRE (((complement_index H) x) (CARD ((face H) x)))) = n)) |- ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0)))
T c==> c/\ c~ c= * part cdart f0 part cEMPTY c/\ cplanar_hypermap f0 c/\ cplain_hypermap f0 c/\ cconnected_hypermap f0 c/\ csimple_hypermap f0 c/\ cis_no_double_joins f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0 c==> c/\ cIN f1 * part cdart f0 c= cPRE ccomplement_index f0 f1 cCARD * * part cface f0 f1 f2 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0
+ (!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) |- ((\i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) i)
T c==> ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 * / c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 f2
+ (!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) |- ((!n. (((is_contour H) ((complement H) x)) n)) ==> (((node_map H) (((POWER (inverse (face_map H))) (CARD ((face H) x))) x)) = (((complement H) x) (NUMERAL _0))))
T c==> ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c==> ! cis_contour f0 * * part ccomplement f0 f1 b0 c= cnode_map f0 cPOWER * part cinverse * part cface_map f0 cCARD * * part cface f0 f1 f1 ccomplement f0 f1 cNUMERAL c_0
- |- (((!x. ((~ ((x = y) ==> ((f x) = (f y)))) ==> F)) ==> ((\x. ((~ ((x = y) ==> ((f x) = (f y)))) ==> F)) x)) = ((\x. ((~ ((x = y) ==> ((f x) = (f y)))) ==> F)) x))
T c= c==> ! c==> c~ c==> c= b0 f0 c= * f1 b0 * f1 f0 cF * / c==> c~ c==> c= b0 f0 c= * f1 b0 * f1 f0 cF f2 * / c==> c~ c==> c= b0 f0 c= * f1 b0 * f1 f0 cF f2
+ (plain_hypermap H), (is_node_nondegenerate H), ((PRE (((complement_index H) x) (CARD ((face H) x)))) = n), ((NUMERAL (BIT1 _0)) <= (((complement_index H) x) (CARD ((face H) x)))), (x IN (dart H)) |- ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0)))
T c==> cplain_hypermap f0 c==> cis_node_nondegenerate f0 c==> c= cPRE ccomplement_index f0 f1 cCARD * * part cface f0 f1 f2 c==> c<= cNUMERAL cBIT1 c_0 ccomplement_index f0 f1 cCARD * * part cface f0 f1 c==> cIN f1 * part cdart f0 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0
+ |- ((\H. (!x. (((is_node_nondegenerate H) /\ (x IN (dart H))) ==> ((NUMERAL (BIT1 _0)) <= (((complement_index H) x) (CARD ((face H) x))))))) H)
T * / ! c==> c/\ cis_node_nondegenerate b0 cIN b1 * part cdart b0 c<= cNUMERAL cBIT1 c_0 ccomplement_index b0 b1 cCARD * * part cface b0 b1 f0
+ |- ((((complement_index H) x) (NUMERAL _0)) = (NUMERAL _0))
T c= ccomplement_index f0 f1 cNUMERAL c_0 cNUMERAL c_0
+ (!i. ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))), (!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) |- ((!i. ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))) /\ ((!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))) ==> ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) ==> ((!n. (((is_contour H) ((complement H) x)) n)) ==> (((node_map H) (((POWER (inverse (face_map H))) (CARD ((face H) x))) x)) = (((complement H) x) (NUMERAL _0)))))))
T c==> ! c= ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 cinverse * part cnode_map f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c==> ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c/\ ! c= ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 cinverse * part cnode_map f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c==> ! c= cface_map f0 ccomplement f0 f1 ccomplement_index f0 f1 b0 ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c==> ! cis_contour f0 * * part ccomplement f0 f1 b0 c= cnode_map f0 cPOWER * part cinverse * part cface_map f0 cCARD * * part cface f0 f1 f1 ccomplement f0 f1 cNUMERAL c_0
- |- (((POWER f) (SUC n)) = (((POWER f) n) o f))
T c= * * part cPOWER f0 cSUC f1 * * part co * * part cPOWER f0 f1 f0
- (!i. ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))) |- ((\i. ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))) i)
T c==> ! c= ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 cinverse * part cnode_map f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 * / c= ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 cinverse * part cnode_map f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 f2
+ (~ ((f x) = (f y))), (x = y) |- ((~ ((f x) = (f y))) /\ F)
T c==> c~ c= * f0 f1 * f0 f2 c==> c= f1 f2 c/\ c~ c= * f0 f1 * f0 f2 cF
- |- (((!n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) ==> ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n)) = ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n))
T c= c==> ! c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1 * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1
+ (!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) |- ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) ==> ((!n. (((is_contour H) ((complement H) x)) n)) ==> (((node_map H) (((POWER (inverse (face_map H))) (CARD ((face H) x))) x)) = (((complement H) x) (NUMERAL _0)))))
T c==> ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c==> ! cis_contour f0 * * part ccomplement f0 f1 b0 c= cnode_map f0 cPOWER * part cinverse * part cface_map f0 cCARD * * part cface f0 f1 f1 ccomplement f0 f1 cNUMERAL c_0
+ (!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) |- ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))
T c==> ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c= ccomplement f0 f1 ccomplement_index f0 f1 f2 cnode_map f0 cPOWER * part cinverse * part cface_map f0 f2 f1
+ ((SUC n) = (((complement_index H) x) (CARD ((face H) x)))) |- (((((complement H) x) (((complement_index H) x) (CARD ((face H) x)))) = (((complement H) x) (NUMERAL _0))) = ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0))))
T c==> c= cSUC f0 ccomplement_index f1 f2 cCARD * * part cface f1 f2 c= c= ccomplement f1 f2 ccomplement_index f1 f2 cCARD * * part cface f1 f2 ccomplement f1 f2 cNUMERAL c_0 c= ccomplement f1 f2 cSUC f0 ccomplement f1 f2 cNUMERAL c_0
+ |- ((\x. (((plain_hypermap H) /\ ((is_node_nondegenerate H) /\ (x IN (dart H)))) ==> ((!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) /\ ((!i. ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))) /\ ((!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))) /\ ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) /\ (!n. (((is_contour H) ((complement H) x)) n)))))))) x)
T * / c==> c/\ cplain_hypermap f0 c/\ cis_node_nondegenerate f0 cIN b0 * part cdart f0 c/\ ! c= ccomplement f0 b0 ccomplement_index f0 b0 b1 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b1 b0 c/\ ! c= ccomplement f0 b0 cSUC ccomplement_index f0 b0 b1 cinverse * part cnode_map f0 cPOWER * part cinverse * part cface_map f0 cSUC b1 b0 c/\ ! c= cface_map f0 ccomplement f0 b0 ccomplement_index f0 b0 b1 ccomplement f0 b0 cSUC ccomplement_index f0 b0 b1 c/\ ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c< b2 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b1 b0 c= ccomplement f0 b0 c+ ccomplement_index f0 b0 b1 b2 cPOWER * part cinverse * part cnode_map f0 b2 cPOWER * part cinverse * part cface_map f0 cSUC b1 b0 ! cis_contour f0 * * part ccomplement f0 b0 b1 f1
- (x = y) |- (F = F)
T c==> c= f0 f1 c= cF cF
- (~ ((f y) = (f y))) |- ((~ ((f y) = (f y))) /\ ((f y) = (f y)))
T c==> c~ c= * f0 f1 * f0 f1 c/\ c~ c= * f0 f1 * f0 f1 c= * f0 f1 * f0 f1
- (~ ((x = y) ==> ((f x) = (f y)))) |- ((~ ((x = y) ==> ((f x) = (f y)))) /\ F)
T c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 c/\ c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF
+ ((!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) /\ ((!i. ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))) /\ ((!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))) /\ ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) /\ (!n. (((is_contour H) ((complement H) x)) n)))))) |- (((!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) /\ ((!i. ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))) /\ ((!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))) /\ ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) /\ (!n. (((is_contour H) ((complement H) x)) n)))))) /\ ((((complement H) x) (((complement_index H) x) (CARD ((face H) x)))) = (((complement H) x) (NUMERAL _0))))
T c==> c/\ ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c/\ ! c= ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 cinverse * part cnode_map f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c/\ ! c= cface_map f0 ccomplement f0 f1 ccomplement_index f0 f1 b0 ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 c/\ ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 ! cis_contour f0 * * part ccomplement f0 f1 b0 c/\ c/\ ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c/\ ! c= ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 cinverse * part cnode_map f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c/\ ! c= cface_map f0 ccomplement f0 f1 ccomplement_index f0 f1 b0 ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 c/\ ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 ! cis_contour f0 * * part ccomplement f0 f1 b0 c= ccomplement f0 f1 ccomplement_index f0 f1 cCARD * * part cface f0 f1 ccomplement f0 f1 cNUMERAL c_0
+ (!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) |- ((((((complement H) x) (((complement_index H) x) (NUMERAL _0))) = ((node_map H) (((POWER (inverse (face_map H))) (NUMERAL _0)) x))) ==> (((node_map H) (((POWER (inverse (face_map H))) (CARD ((face H) x))) x)) = (((complement H) x) (NUMERAL _0)))) = (((node_map H) (((POWER (inverse (face_map H))) (CARD ((face H) x))) x)) = (((complement H) x) (NUMERAL _0))))
T c==> ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c= c==> c= ccomplement f0 f1 ccomplement_index f0 f1 cNUMERAL c_0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 cNUMERAL c_0 f1 c= cnode_map f0 cPOWER * part cinverse * part cface_map f0 cCARD * * part cface f0 f1 f1 ccomplement f0 f1 cNUMERAL c_0 c= cnode_map f0 cPOWER * part cinverse * part cface_map f0 cCARD * * part cface f0 f1 f1 ccomplement f0 f1 cNUMERAL c_0
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- (~ ((dart H) = EMPTY)) |- ((EMPTY = (dart H)) = F)
T c==> c~ c= * part cdart f0 part cEMPTY c= c= part cEMPTY * part cdart f0 cF
+ |- (((node_map H) (((POWER (inverse (face_map H))) (CARD ((face H) x))) x)) = ((node_map H) (((POWER (inverse (face_map H))) (NUMERAL _0)) x)))
T c= cnode_map f0 cPOWER * part cinverse * part cface_map f0 cCARD * * part cface f0 f1 f1 cnode_map f0 cPOWER * part cinverse * part cface_map f0 cNUMERAL c_0 f1
+ |- ((\x. (((is_node_nondegenerate H) /\ (x IN (dart H))) ==> ((NUMERAL (BIT1 _0)) <= (((complement_index H) x) (CARD ((face H) x)))))) x)
T * / c==> c/\ cis_node_nondegenerate f0 cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 c_0 ccomplement_index f0 b0 cCARD * * part cface f0 b0 f1
+ (!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) |- ((\i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) (NUMERAL _0))
T c==> ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 * / c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 cNUMERAL c_0
- (simple_hypermap H) |- ((simple_hypermap H) = T)
T c==> csimple_hypermap f0 c= csimple_hypermap f0 cT
+ |- (((!n. (((NUMERAL (BIT1 _0)) <= n) ==> ((SUC (PRE n)) = n))) ==> ((\n. (((NUMERAL (BIT1 _0)) <= n) ==> ((SUC (PRE n)) = n))) (((complement_index H) x) (CARD ((face H) x))))) = ((\n. (((NUMERAL (BIT1 _0)) <= n) ==> ((SUC (PRE n)) = n))) (((complement_index H) x) (CARD ((face H) x)))))
T c= c==> ! c==> c<= cNUMERAL cBIT1 c_0 b0 c= cSUC cPRE b0 b0 * / c==> c<= cNUMERAL cBIT1 c_0 b0 c= cSUC cPRE b0 b0 ccomplement_index f0 f1 cCARD * * part cface f0 f1 * / c==> c<= cNUMERAL cBIT1 c_0 b0 c= cSUC cPRE b0 b0 ccomplement_index f0 f1 cCARD * * part cface f0 f1
- ((~ ((x = y) ==> ((f x) = (f y)))) ==> F) |- ((((~ ((x = y) ==> ((f x) = (f y)))) ==> F) ==> ((~ ((x = y) ==> ((f x) = (f y)))) ==> F)) ==> ((~ ((x = y) ==> ((f x) = (f y)))) ==> F))
T c==> c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c==> c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF
- (!i. ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))) |- ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))
T c==> ! c= ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 cinverse * part cnode_map f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 cSUC ccomplement_index f0 f1 f2 cinverse * part cnode_map f0 cPOWER * part cinverse * part cface_map f0 cSUC f2 f1
- |- ((~ ((f y) = (f y))) ==> ((f y) = (f y)))
T c==> c~ c= * f0 f1 * f0 f1 c= * f0 f1 * f0 f1
+ (plain_hypermap H), (is_node_nondegenerate H), ((x IN (dart H)) /\ ((PRE (((complement_index H) x) (CARD ((face H) x)))) = n)), (x IN (dart H)) |- ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0)))
T c==> cplain_hypermap f0 c==> cis_node_nondegenerate f0 c==> c/\ cIN f1 * part cdart f0 c= cPRE ccomplement_index f0 f1 cCARD * * part cface f0 f1 f2 c==> cIN f1 * part cdart f0 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0
+ |- ((\H. (!x. (((plain_hypermap H) /\ ((is_node_nondegenerate H) /\ (x IN (dart H)))) ==> ((!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) /\ ((!i. ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))) /\ ((!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))) /\ ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) /\ (!n. (((is_contour H) ((complement H) x)) n))))))))) H)
T * / ! c==> c/\ cplain_hypermap b0 c/\ cis_node_nondegenerate b0 cIN b1 * part cdart b0 c/\ ! c= ccomplement b0 b1 ccomplement_index b0 b1 b2 cnode_map b0 cPOWER * part cinverse * part cface_map b0 b2 b1 c/\ ! c= ccomplement b0 b1 cSUC ccomplement_index b0 b1 b2 cinverse * part cnode_map b0 cPOWER * part cinverse * part cface_map b0 cSUC b2 b1 c/\ ! c= cface_map b0 ccomplement b0 b1 ccomplement_index b0 b1 b2 ccomplement b0 b1 cSUC ccomplement_index b0 b1 b2 c/\ ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c< b3 cCARD * * part cnode b0 cPOWER * part cinverse * part cface_map b0 cSUC b2 b1 c= ccomplement b0 b1 c+ ccomplement_index b0 b1 b2 b3 cPOWER * part cinverse * part cnode_map b0 b3 cPOWER * part cinverse * part cface_map b0 cSUC b2 b1 ! cis_contour b0 * * part ccomplement b0 b1 b2 f0
+ |- ((\x. (!H. ((((POWER (inverse (face_map H))) (CARD ((face H) x))) x) = x))) x)
T * / ! c= cPOWER * part cinverse * part cface_map b1 cCARD * * part cface b1 b0 b0 b0 f0
- |- (((((~ ((x = y) ==> ((f x) = (f y)))) ==> F) ==> ((~ ((x = y) ==> ((f x) = (f y)))) ==> F)) ==> (((~ ((x = y) ==> ((f x) = (f y)))) ==> F) ==> ((~ ((x = y) ==> ((f x) = (f y)))) ==> F))) = (((~ ((x = y) ==> ((f x) = (f y)))) ==> F) ==> ((~ ((x = y) ==> ((f x) = (f y)))) ==> F)))
T c= c==> c==> c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF
- (!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) |- ((\j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x))))) j)
T c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c< b0 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f2 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 f2 b0 cPOWER * part cinverse * part cnode_map f0 b0 cPOWER * part cinverse * part cface_map f0 cSUC f2 f1 f3
- |- (((x = y) ==> ((f x) = (f y))) ==> ((x = y) ==> ((f x) = (f y))))
T c==> c==> c= f0 f1 c= * f2 f0 * f2 f1 c==> c= f0 f1 c= * f2 f0 * f2 f1
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (plain_hypermap H), (is_node_nondegenerate H), (x IN (dart H)) |- ((((!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) /\ ((!i. ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))) /\ ((!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))) /\ ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) /\ (!n. (((is_contour H) ((complement H) x)) n)))))) ==> ((((complement H) x) (((complement_index H) x) (CARD ((face H) x)))) = (((complement H) x) (NUMERAL _0)))) = ((((plain_hypermap H) /\ ((is_node_nondegenerate H) /\ (x IN (dart H)))) ==> ((!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) /\ ((!i. ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))) /\ ((!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))) /\ ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) /\ (!n. (((is_contour H) ((complement H) x)) n))))))) ==> ((((complement H) x) (((complement_index H) x) (CARD ((face H) x)))) = (((complement H) x) (NUMERAL _0)))))
T c==> cplain_hypermap f0 c==> cis_node_nondegenerate f0 c==> cIN f1 * part cdart f0 c= c==> c/\ ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c/\ ! c= ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 cinverse * part cnode_map f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c/\ ! c= cface_map f0 ccomplement f0 f1 ccomplement_index f0 f1 b0 ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 c/\ ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 ! cis_contour f0 * * part ccomplement f0 f1 b0 c= ccomplement f0 f1 ccomplement_index f0 f1 cCARD * * part cface f0 f1 ccomplement f0 f1 cNUMERAL c_0 c==> c==> c/\ cplain_hypermap f0 c/\ cis_node_nondegenerate f0 cIN f1 * part cdart f0 c/\ ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c/\ ! c= ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 cinverse * part cnode_map f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c/\ ! c= cface_map f0 ccomplement f0 f1 ccomplement_index f0 f1 b0 ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 c/\ ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 ! cis_contour f0 * * part ccomplement f0 f1 b0 c= ccomplement f0 f1 ccomplement_index f0 f1 cCARD * * part cface f0 f1 ccomplement f0 f1 cNUMERAL c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((!y. (!f. (!x. ((~ ((x = y) ==> ((f x) = (f y)))) ==> F)))) ==> ((\y. (!f. (!x. ((~ ((x = y) ==> ((f x) = (f y)))) ==> F)))) y)) = ((\y. (!f. (!x. ((~ ((x = y) ==> ((f x) = (f y)))) ==> F)))) y))
T c= c==> ! ! ! c==> c~ c==> c= b2 b0 c= * b1 b2 * b1 b0 cF * / ! ! c==> c~ c==> c= b2 b0 c= * b1 b2 * b1 b0 cF f0 * / ! ! c==> c~ c==> c= b2 b0 c= * b1 b2 * b1 b0 cF f0
- |- (((!f. (!x. ((~ ((x = y) ==> ((f x) = (f y)))) ==> F))) ==> ((\f. (!x. ((~ ((x = y) ==> ((f x) = (f y)))) ==> F))) f)) = ((\f. (!x. ((~ ((x = y) ==> ((f x) = (f y)))) ==> F))) f))
T c= c==> ! ! c==> c~ c==> c= b1 f0 c= * b0 b1 * b0 f0 cF * / ! c==> c~ c==> c= b1 f0 c= * b0 b1 * b0 f0 cF f1 * / ! c==> c~ c==> c= b1 f0 c= * b0 b1 * b0 f0 cF f1
+ |- (((((plain_hypermap H) /\ ((is_node_nondegenerate H) /\ (x IN (dart H)))) ==> ((!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) /\ ((!i. ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))) /\ ((!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))) /\ ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) /\ (!n. (((is_contour H) ((complement H) x)) n))))))) ==> ((((complement H) x) (((complement_index H) x) (CARD ((face H) x)))) = (((complement H) x) (NUMERAL _0)))) = ((((complement H) x) (((complement_index H) x) (CARD ((face H) x)))) = (((complement H) x) (NUMERAL _0))))
T c= c==> c==> c/\ cplain_hypermap f0 c/\ cis_node_nondegenerate f0 cIN f1 * part cdart f0 c/\ ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c/\ ! c= ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 cinverse * part cnode_map f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c/\ ! c= cface_map f0 ccomplement f0 f1 ccomplement_index f0 f1 b0 ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 c/\ ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 ! cis_contour f0 * * part ccomplement f0 f1 b0 c= ccomplement f0 f1 ccomplement_index f0 f1 cCARD * * part cface f0 f1 ccomplement f0 f1 cNUMERAL c_0 c= ccomplement f0 f1 ccomplement_index f0 f1 cCARD * * part cface f0 f1 ccomplement f0 f1 cNUMERAL c_0
- |- ((~ (_10289950 = _10289951)) \/ ((f _10289950) = (f _10289951)))
T c\/ c~ c= f0 f1 c= * f2 f0 * f2 f1
+ (!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))), (!n. (((is_contour H) ((complement H) x)) n)) |- ((!n. (((is_contour H) ((complement H) x)) n)) /\ (((node_map H) (((POWER (inverse (face_map H))) (CARD ((face H) x))) x)) = (((complement H) x) (NUMERAL _0))))
T c==> ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c==> ! cis_contour f0 * * part ccomplement f0 f1 b0 c/\ ! cis_contour f0 * * part ccomplement f0 f1 b0 c= cnode_map f0 cPOWER * part cinverse * part cface_map f0 cCARD * * part cface f0 f1 f1 ccomplement f0 f1 cNUMERAL c_0
+ ((planar_hypermap H) /\ ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x)))))))))))), ((x IN (dart H)) /\ ((PRE (((complement_index H) x) (CARD ((face H) x)))) = n)) |- ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0)))
T c==> c/\ cplanar_hypermap f0 c/\ cplain_hypermap f0 c/\ cconnected_hypermap f0 c/\ csimple_hypermap f0 c/\ cis_no_double_joins f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0 c==> c/\ cIN f1 * part cdart f0 c= cPRE ccomplement_index f0 f1 cCARD * * part cface f0 f1 f2 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0
- |- ((s = t) = (!x. ((x IN s) = (x IN t))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
- (!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) |- (((!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((\j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x))))) j)) = ((\j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x))))) j))
T c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c< b0 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f2 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 f2 b0 cPOWER * part cinverse * part cnode_map f0 b0 cPOWER * part cinverse * part cface_map f0 cSUC f2 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c< b0 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f2 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 f2 b0 cPOWER * part cinverse * part cnode_map f0 b0 cPOWER * part cinverse * part cface_map f0 cSUC f2 f1 f3 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c< b0 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f2 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 f2 b0 cPOWER * part cinverse * part cnode_map f0 b0 cPOWER * part cinverse * part cface_map f0 cSUC f2 f1 f3
+ (!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) |- (((node_map H) (((POWER (inverse (face_map H))) (CARD ((face H) x))) x)) = (((complement H) x) (NUMERAL _0)))
T c==> ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c= cnode_map f0 cPOWER * part cinverse * part cface_map f0 cCARD * * part cface f0 f1 f1 ccomplement f0 f1 cNUMERAL c_0
- |- (((!H. (!x. (!n. ((((complement_index H) x) (SUC n)) = ((((complement_index H) x) n) + (PRE (CARD ((node H) (((POWER (inverse (face_map H))) (SUC n)) x))))))))) ==> ((\H. (!x. (!n. ((((complement_index H) x) (SUC n)) = ((((complement_index H) x) n) + (PRE (CARD ((node H) (((POWER (inverse (face_map H))) (SUC n)) x))))))))) H)) = ((\H. (!x. (!n. ((((complement_index H) x) (SUC n)) = ((((complement_index H) x) n) + (PRE (CARD ((node H) (((POWER (inverse (face_map H))) (SUC n)) x))))))))) H))
T c= c==> ! ! ! c= ccomplement_index b0 b1 cSUC b2 c+ ccomplement_index b0 b1 b2 cPRE cCARD * * part cnode b0 cPOWER * part cinverse * part cface_map b0 cSUC b2 b1 * / ! ! c= ccomplement_index b0 b1 cSUC b2 c+ ccomplement_index b0 b1 b2 cPRE cCARD * * part cnode b0 cPOWER * part cinverse * part cface_map b0 cSUC b2 b1 f0 * / ! ! c= ccomplement_index b0 b1 cSUC b2 c+ ccomplement_index b0 b1 b2 cPRE cCARD * * part cnode b0 cPOWER * part cinverse * part cface_map b0 cSUC b2 b1 f0
- |- (((~ ((x = y) ==> ((f x) = (f y)))) ==> F) ==> ((~ ((x = y) ==> ((f x) = (f y)))) ==> F))
T c==> c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF
- |- (((~ ((x = y) ==> ((f x) = (f y)))) ==> F) = ((x = y) ==> ((f x) = (f y))))
T c= c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c= f0 f1 c= * f2 f0 * f2 f1
- (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))) |- (((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x)))) = T)
T c==> ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0 c= c==> cIN f1 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 f1 cT
- |- (((!n. ((((complement_index H) x) (SUC n)) = ((((complement_index H) x) n) + (PRE (CARD ((node H) (((POWER (inverse (face_map H))) (SUC n)) x))))))) ==> ((\n. ((((complement_index H) x) (SUC n)) = ((((complement_index H) x) n) + (PRE (CARD ((node H) (((POWER (inverse (face_map H))) (SUC n)) x))))))) n)) = ((\n. ((((complement_index H) x) (SUC n)) = ((((complement_index H) x) n) + (PRE (CARD ((node H) (((POWER (inverse (face_map H))) (SUC n)) x))))))) n))
T c= c==> ! c= ccomplement_index f0 f1 cSUC b0 c+ ccomplement_index f0 f1 b0 cPRE cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 * / c= ccomplement_index f0 f1 cSUC b0 c+ ccomplement_index f0 f1 b0 cPRE cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 f2 * / c= ccomplement_index f0 f1 cSUC b0 c+ ccomplement_index f0 f1 b0 cPRE cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 f2
- (is_edge_nondegenerate H) |- ((is_edge_nondegenerate H) = T)
T c==> cis_edge_nondegenerate f0 c= cis_edge_nondegenerate f0 cT
- (!n. (((is_contour H) ((complement H) x)) n)) |- ((((is_contour H) ((complement H) x)) n) = T)
T c==> ! cis_contour f0 * * part ccomplement f0 f1 b0 c= cis_contour f0 * * part ccomplement f0 f1 f2 cT
+ (plain_hypermap H), (is_node_nondegenerate H), (x IN (dart H)) |- (((SUC n) = (((complement_index H) x) (CARD ((face H) x)))) ==> ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0))))
T c==> cplain_hypermap f0 c==> cis_node_nondegenerate f0 c==> cIN f1 * part cdart f0 c==> c= cSUC f2 ccomplement_index f0 f1 cCARD * * part cface f0 f1 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0
+ ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))))))))), ((x IN (dart H)) /\ ((PRE (((complement_index H) x) (CARD ((face H) x)))) = n)) |- ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0)))
T c==> c/\ cplain_hypermap f0 c/\ cconnected_hypermap f0 c/\ csimple_hypermap f0 c/\ cis_no_double_joins f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0 c==> c/\ cIN f1 * part cdart f0 c= cPRE ccomplement_index f0 f1 cCARD * * part cface f0 f1 f2 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0
- (~ ((x = y) ==> ((f x) = (f y)))) |- F
T c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF
- (!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))) |- ((\i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))) i)
T c==> ! c= cface_map f0 ccomplement f0 f1 ccomplement_index f0 f1 b0 ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 * / c= cface_map f0 ccomplement f0 f1 ccomplement_index f0 f1 b0 ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 f2
- (!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) |- (((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))) = T)
T c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f2 c< f2 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f3 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 f3 f2 cPOWER * part cinverse * part cnode_map f0 f2 cPOWER * part cinverse * part cface_map f0 cSUC f3 f1 cT
+ (plain_hypermap H), (is_node_nondegenerate H), ((PRE (((complement_index H) x) (CARD ((face H) x)))) = n), ((NUMERAL (BIT1 _0)) <= (((complement_index H) x) (CARD ((face H) x)))), (x IN (dart H)) |- ((((NUMERAL (BIT1 _0)) <= (((complement_index H) x) (CARD ((face H) x)))) ==> ((SUC (PRE (((complement_index H) x) (CARD ((face H) x))))) = (((complement_index H) x) (CARD ((face H) x))))) ==> ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0))))
T c==> cplain_hypermap f0 c==> cis_node_nondegenerate f0 c==> c= cPRE ccomplement_index f0 f1 cCARD * * part cface f0 f1 f2 c==> c<= cNUMERAL cBIT1 c_0 ccomplement_index f0 f1 cCARD * * part cface f0 f1 c==> cIN f1 * part cdart f0 c==> c==> c<= cNUMERAL cBIT1 c_0 ccomplement_index f0 f1 cCARD * * part cface f0 f1 c= cSUC cPRE ccomplement_index f0 f1 cCARD * * part cface f0 f1 ccomplement_index f0 f1 cCARD * * part cface f0 f1 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0
- (x = y) |- (((x = y) ==> ((f x) = (f y))) ==> ((f x) = (f y)))
T c==> c= f0 f1 c==> c==> c= f0 f1 c= * f2 f0 * f2 f1 c= * f2 f0 * f2 f1
+ |- (((!H. ((((POWER (inverse (face_map H))) (CARD ((face H) x))) x) = x)) ==> ((\H. ((((POWER (inverse (face_map H))) (CARD ((face H) x))) x) = x)) H)) = ((\H. ((((POWER (inverse (face_map H))) (CARD ((face H) x))) x) = x)) H))
T c= c==> ! c= cPOWER * part cinverse * part cface_map b0 cCARD * * part cface b0 f0 f0 f0 * / c= cPOWER * part cinverse * part cface_map b0 cCARD * * part cface b0 f0 f0 f0 f1 * / c= cPOWER * part cinverse * part cface_map b0 cCARD * * part cface b0 f0 f0 f0 f1
+ |- (((!x. ((((complement_index H) x) (NUMERAL _0)) = (NUMERAL _0))) ==> ((\x. ((((complement_index H) x) (NUMERAL _0)) = (NUMERAL _0))) x)) = ((\x. ((((complement_index H) x) (NUMERAL _0)) = (NUMERAL _0))) x))
T c= c==> ! c= ccomplement_index f0 b0 cNUMERAL c_0 cNUMERAL c_0 * / c= ccomplement_index f0 b0 cNUMERAL c_0 cNUMERAL c_0 f1 * / c= ccomplement_index f0 b0 cNUMERAL c_0 cNUMERAL c_0 f1
- |- ((!x. (P x)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- (~ ((dart H) = EMPTY)) |- (((~ (EMPTY = (dart H))) ==> ((EMPTY = (dart H)) = F)) = ((EMPTY = (dart H)) = F))
T c==> c~ c= * part cdart f0 part cEMPTY c= c==> c~ c= part cEMPTY * part cdart f0 c= c= part cEMPTY * part cdart f0 cF c= c= part cEMPTY * part cdart f0 cF
+ |- (T = ((((POWER (inverse (face_map H))) (CARD ((face H) x))) x) = (((POWER (inverse (face_map H))) (NUMERAL _0)) x)))
T c= cT c= cPOWER * part cinverse * part cface_map f0 cCARD * * part cface f0 f1 f1 cPOWER * part cinverse * part cface_map f0 cNUMERAL c_0 f1
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ (!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))), (!i. ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))), (!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))), ((!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))) /\ ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) /\ (!n. (((is_contour H) ((complement H) x)) n)))) |- ((((complement H) x) (((complement_index H) x) (CARD ((face H) x)))) = (((complement H) x) (NUMERAL _0)))
T c==> ! c= cface_map f0 ccomplement f0 f1 ccomplement_index f0 f1 b0 ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 c==> ! c= ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 cinverse * part cnode_map f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c==> ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c==> c/\ ! c= cface_map f0 ccomplement f0 f1 ccomplement_index f0 f1 b0 ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 c/\ ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 ! cis_contour f0 * * part ccomplement f0 f1 b0 c= ccomplement f0 f1 ccomplement_index f0 f1 cCARD * * part cface f0 f1 ccomplement f0 f1 cNUMERAL c_0
+ (plain_hypermap H), ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x)))))), ((x IN (dart H)) /\ ((PRE (((complement_index H) x) (CARD ((face H) x)))) = n)) |- ((((complement H) x) (SUC n)) = (((complement H) x) (NUMERAL _0)))
T c==> cplain_hypermap f0 c==> c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0 c==> c/\ cIN f1 * part cdart f0 c= cPRE ccomplement_index f0 f1 cCARD * * part cface f0 f1 f2 c= ccomplement f0 f1 cSUC f2 ccomplement f0 f1 cNUMERAL c_0
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- |- (((x = y) ==> ((f x) = (f y))) = T)
T c= c==> c= f0 f1 c= * f2 f0 * f2 f1 cT
- (~ F), (~ ((f x) = (f y))), (x = y) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c= * f0 f1 * f0 f2 c==> c= f1 f2 c/\ c~ cF cF
+ (is_node_nondegenerate H) |- ((is_node_nondegenerate H) = T)
T c==> cis_node_nondegenerate f0 c= cis_node_nondegenerate f0 cT
+ |- (((!H. (!x. ((((complement_index H) x) (NUMERAL _0)) = (NUMERAL _0)))) ==> ((\H. (!x. ((((complement_index H) x) (NUMERAL _0)) = (NUMERAL _0)))) H)) = ((\H. (!x. ((((complement_index H) x) (NUMERAL _0)) = (NUMERAL _0)))) H))
T c= c==> ! ! c= ccomplement_index b0 b1 cNUMERAL c_0 cNUMERAL c_0 * / ! c= ccomplement_index b0 b1 cNUMERAL c_0 cNUMERAL c_0 f0 * / ! c= ccomplement_index b0 b1 cNUMERAL c_0 cNUMERAL c_0 f0
- |- (((!x. (!n. ((((complement_index H) x) (SUC n)) = ((((complement_index H) x) n) + (PRE (CARD ((node H) (((POWER (inverse (face_map H))) (SUC n)) x)))))))) ==> ((\x. (!n. ((((complement_index H) x) (SUC n)) = ((((complement_index H) x) n) + (PRE (CARD ((node H) (((POWER (inverse (face_map H))) (SUC n)) x)))))))) x)) = ((\x. (!n. ((((complement_index H) x) (SUC n)) = ((((complement_index H) x) n) + (PRE (CARD ((node H) (((POWER (inverse (face_map H))) (SUC n)) x)))))))) x))
T c= c==> ! ! c= ccomplement_index f0 b0 cSUC b1 c+ ccomplement_index f0 b0 b1 cPRE cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b1 b0 * / ! c= ccomplement_index f0 b0 cSUC b1 c+ ccomplement_index f0 b0 b1 cPRE cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b1 b0 f1 * / ! c= ccomplement_index f0 b0 cSUC b1 c+ ccomplement_index f0 b0 b1 cPRE cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b1 b0 f1
- (!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) |- ((\i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) i)
T c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 * / ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 f2
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
+ (x = y) |- ((~ ((f x) = (f y))) ==> F)
T c==> c= f0 f1 c==> c~ c= * f2 f0 * f2 f1 cF
- (is_no_double_joins H) |- ((is_no_double_joins H) = T)
T c==> cis_no_double_joins f0 c= cis_no_double_joins f0 cT
- (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))) |- ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))
T c==> ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0 c==> cIN f1 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 f1
- (~ ((dart H) = EMPTY)) |- (~ (EMPTY = (dart H)))
T c==> c~ c= * part cdart f0 part cEMPTY c~ c= part cEMPTY * part cdart f0
- (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))) |- ((\x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))) x)
T c==> ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0 * / c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0 f1
- |- ((\x. (!n. ((((complement_index H) x) (SUC n)) = ((((complement_index H) x) n) + (PRE (CARD ((node H) (((POWER (inverse (face_map H))) (SUC n)) x)))))))) x)
T * / ! c= ccomplement_index f0 b0 cSUC b1 c+ ccomplement_index f0 b0 b1 cPRE cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b1 b0 f1
- ((~ ((x = y) ==> ((f x) = (f y)))) ==> F) |- (((~ ((x = y) ==> ((f x) = (f y)))) ==> F) /\ ((~ ((x = y) ==> ((f x) = (f y)))) ==> F))
T c==> c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c/\ c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF
- |- ((!y. (!f. (!x. ((x = y) ==> ((f x) = (f y)))))) = (!y. (!f. (!x. ((~ ((x = y) ==> ((f x) = (f y)))) ==> F)))))
T c= ! ! ! c==> c= b2 b0 c= * b1 b2 * b1 b0 ! ! ! c==> c~ c==> c= b2 b0 c= * b1 b2 * b1 b0 cF
- |- ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n)
T * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1
- |- ((\y. (!f. (!x. ((~ ((x = y) ==> ((f x) = (f y)))) ==> F)))) y)
T * / ! ! c==> c~ c==> c= b2 b0 c= * b1 b2 * b1 b0 cF f0
- (((~ ((x = y) ==> ((f x) = (f y)))) ==> F) ==> ((~ ((x = y) ==> ((f x) = (f y)))) ==> F)) |- ((((~ ((x = y) ==> ((f x) = (f y)))) ==> F) ==> ((~ ((x = y) ==> ((f x) = (f y)))) ==> F)) /\ (((~ ((x = y) ==> ((f x) = (f y)))) ==> F) ==> ((~ ((x = y) ==> ((f x) = (f y)))) ==> F)))
T c==> c==> c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c/\ c==> c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF c==> c~ c==> c= f0 f1 c= * f2 f0 * f2 f1 cF
- ((dart H) = EMPTY) |- (EMPTY = (dart H))
T c==> c= * part cdart f0 part cEMPTY c= part cEMPTY * part cdart f0
