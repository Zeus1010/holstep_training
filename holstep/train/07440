N Oxlzlez.MCELL4_CONVEX_HULL
C |- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((mcell4 V) ul)))))) ==> (((mcell4 V) ul) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part cmcell4 f0 f1 c= * * part cmcell4 f0 f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D COND_ELIM_THM
A |- ((P (((COND c) x) y)) = ((c ==> (P x)) /\ ((~ c) ==> (P y))))
T c= * f0 cCOND f1 f2 f3 c/\ c==> f1 * f0 f2 c==> c~ f1 * f0 f3
D NEGLIGIBLE_EMPTY
A |- (negligible EMPTY)
T cnegligible part cEMPTY
D Pack_defs.mcell4
A |- (!V. (!ul. (((mcell4 V) ul) = (((COND ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((hull convex) (set_of_list ul))) EMPTY))))
T c= * * part cmcell4 f0 f1 * * * part cCOND creal_lt chl f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * * part chull part cconvex * part cset_of_list f1 part cEMPTY
D Oxlzlez.BARV3_SET_OF_LIST4
A |- (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))))
T c==> c/\ cpacking f0 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= * part cset_of_list f1 * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY
- |- ((_7224610 = _7224611) ==> ((negligible _7224611) \/ (~ (negligible _7224610))))
T c==> c= f0 f1 c\/ cnegligible f1 c~ cnegligible f0
+ |- ((\V. (!ul. (((mcell4 V) ul) = (((COND ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((hull convex) (set_of_list ul))) EMPTY)))) V)
T * / ! c= * * part cmcell4 b0 b1 * * * part cCOND creal_lt chl b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * * part chull part cconvex * part cset_of_list b1 part cEMPTY f0
+ |- ((~ (_7224623 = _7224625)) \/ ((~ (_7224622 = _7224624)) \/ (((hull _7224622) _7224623) = ((hull _7224624) _7224625))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
+ (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- ((\V. (!ul. (((~ (packing V)) \/ (~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul))) \/ ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) _7224608)
T c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY * / ! c\/ c\/ c~ cpacking b0 c~ cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY f0
+ (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))), (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))
T c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c= * part cset_of_list f1 * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY
+ |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (_7224630 = _7224631)) \/ ((BIT1 _7224630) = (BIT1 _7224631)))
T c\/ c~ c= f0 f1 c= cBIT1 f0 cBIT1 f1
- (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- ((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) /\ (~ (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))))))
T c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c/\ c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c~ ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ |- ((((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) /\ ((~ ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible EMPTY))))) ==> (EMPTY = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))))
T c/\ c==> creal_lt chl f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cpacking f1 c/\ csaturated f1 c/\ cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f0 c~ cnegligible * * part chull part cconvex * part cset_of_list f0 c= * * part chull part cconvex * part cset_of_list f0 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY c==> c~ creal_lt chl f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cpacking f1 c/\ csaturated f1 c/\ cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f0 c~ cnegligible part cEMPTY c= part cEMPTY * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY
+ |- (T = (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible EMPTY))))) ==> (EMPTY = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))))
T c= cT c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible part cEMPTY c= part cEMPTY * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY
- (_7224616 = _7224619) |- ((_7224618 = _7224621) ==> ((~ (_7224617 = _7224620)) \/ ((((barV _7224619) _7224620) _7224621) \/ (~ (((barV _7224616) _7224617) _7224618)))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ cbarV f1 f5 f3 c~ cbarV f0 f4 f2
+ |- (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible EMPTY))))) ==> (EMPTY = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible part cEMPTY c= part cEMPTY * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY
- (_7224612 = _7224613) |- ((((saturated _7224612) = (saturated _7224613)) ==> ((saturated _7224613) \/ (~ (saturated _7224612)))) = ((saturated _7224613) \/ (~ (saturated _7224612))))
T c==> c= f0 f1 c= c==> c= csaturated f0 csaturated f1 c\/ csaturated f1 c~ csaturated f0 c\/ csaturated f1 c~ csaturated f0
- |- ((~ (_7224626 = _7224627)) \/ ((set_of_list _7224626) = (set_of_list _7224627)))
T c\/ c~ c= f0 f1 c= * part cset_of_list f0 * part cset_of_list f1
+ (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- ((\ul. (((~ (packing _7224608)) \/ (~ (((barV _7224608) (NUMERAL (BIT1 (BIT1 _0)))) ul))) \/ ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))) _7224609)
T c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY * / c\/ c\/ c~ cpacking f0 c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c= * part cset_of_list b0 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b0 part cEMPTY f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- (((~ ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible EMPTY))))) ==> (EMPTY = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) = ((((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) /\ ((~ ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible EMPTY))))) ==> (EMPTY = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))))))
T c= c==> c~ creal_lt chl f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cpacking f1 c/\ csaturated f1 c/\ cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f0 c~ cnegligible part cEMPTY c= part cEMPTY * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY c/\ c==> creal_lt chl f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cpacking f1 c/\ csaturated f1 c/\ cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f0 c~ cnegligible * * part chull part cconvex * part cset_of_list f0 c= * * part chull part cconvex * part cset_of_list f0 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY c==> c~ creal_lt chl f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cpacking f1 c/\ csaturated f1 c/\ cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f0 c~ cnegligible part cEMPTY c= part cEMPTY * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
- (~ (packing V)), (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- ((~ (packing V)) /\ (packing V))
T c==> c~ cpacking f0 c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c/\ c~ cpacking f0 cpacking f0
- |- (((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F)) ==> ((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F)))
T c==> c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF
+ |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- (((!ul. (((~ (packing _7224608)) \/ (~ (((barV _7224608) (NUMERAL (BIT1 (BIT1 _0)))) ul))) \/ ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))) ==> ((\ul. (((~ (packing _7224608)) \/ (~ (((barV _7224608) (NUMERAL (BIT1 (BIT1 _0)))) ul))) \/ ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))) _7224609)) = ((\ul. (((~ (packing _7224608)) \/ (~ (((barV _7224608) (NUMERAL (BIT1 (BIT1 _0)))) ul))) \/ ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))) _7224609))
T c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY c= c==> ! c\/ c\/ c~ cpacking f0 c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c= * part cset_of_list b0 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b0 part cEMPTY * / c\/ c\/ c~ cpacking f0 c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c= * part cset_of_list b0 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b0 part cEMPTY f1 * / c\/ c\/ c~ cpacking f0 c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c= * part cset_of_list b0 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b0 part cEMPTY f1
- |- ((!ul. t) = t)
T c= ! f0 f0
- |- ((_7224628 = _7224629) ==> ((BIT0 _7224628) = (BIT0 _7224629)))
T c==> c= f0 f1 c= cBIT0 f0 cBIT0 f1
- |- ((_7224614 = _7224615) ==> ((packing _7224615) \/ (~ (packing _7224614))))
T c==> c= f0 f1 c\/ cpacking f1 c~ cpacking f0
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- |- ((~ (_7224610 = _7224611)) \/ ((negligible _7224611) \/ (~ (negligible _7224610))))
T c\/ c~ c= f0 f1 c\/ cnegligible f1 c~ cnegligible f0
+ |- ((~ ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible EMPTY))))) ==> (EMPTY = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))))
T c==> c~ creal_lt chl f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cpacking f1 c/\ csaturated f1 c/\ cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f0 c~ cnegligible part cEMPTY c= part cEMPTY * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY
+ (_7224622 = _7224624), (_7224623 = _7224625) |- ((_7224622 = _7224624) /\ (((hull _7224622) _7224623) = ((hull _7224624) _7224625)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part chull f0 f2 * * part chull f1 f3
+ (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))), (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- (((((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))) ==> F) = F)
T c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c= c==> c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY cF cF
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ |- (((!ul. (((mcell4 V) ul) = (((COND ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((hull convex) (set_of_list ul))) EMPTY))) ==> ((\ul. (((mcell4 V) ul) = (((COND ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((hull convex) (set_of_list ul))) EMPTY))) ul)) = ((\ul. (((mcell4 V) ul) = (((COND ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((hull convex) (set_of_list ul))) EMPTY))) ul))
T c= c==> ! c= * * part cmcell4 f0 b0 * * * part cCOND creal_lt chl b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * * part chull part cconvex * part cset_of_list b0 part cEMPTY * / c= * * part cmcell4 f0 b0 * * * part cCOND creal_lt chl b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * * part chull part cconvex * part cset_of_list b0 part cEMPTY f1 * / c= * * part cmcell4 f0 b0 * * * part cCOND creal_lt chl b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * * part chull part cconvex * part cset_of_list b0 part cEMPTY f1
- (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))), (~ ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))), (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- ((~ ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))) /\ ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))
T c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY c==> c~ c= * part cset_of_list f0 * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY c==> c~ c==> c/\ cpacking f1 c/\ csaturated f1 c/\ cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f0 c~ cnegligible * * part chull part cconvex * part cset_of_list f0 c= * * part chull part cconvex * part cset_of_list f0 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY c/\ c~ c= * part cset_of_list f0 * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY c= * part cset_of_list f0 * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY
- (_7224616 = _7224619), (_7224617 = _7224620), (_7224618 = _7224621) |- ((((((barV _7224616) _7224617) _7224618) = (((barV _7224619) _7224620) _7224621)) ==> ((((barV _7224619) _7224620) _7224621) \/ (~ (((barV _7224616) _7224617) _7224618)))) = ((((barV _7224619) _7224620) _7224621) \/ (~ (((barV _7224616) _7224617) _7224618))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c= c==> c= cbarV f0 f2 f4 cbarV f1 f3 f5 c\/ cbarV f1 f3 f5 c~ cbarV f0 f2 f4 c\/ cbarV f1 f3 f5 c~ cbarV f0 f2 f4
- ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) |- (((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = T)
T c==> creal_lt chl f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_lt chl f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
- ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) |- ((((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))) = (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))))
T c==> creal_lt chl f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= c==> c/\ cpacking f1 c/\ csaturated f1 c/\ cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f0 c~ cnegligible * * part chull part cconvex * part cset_of_list f0 c= * * part chull part cconvex * part cset_of_list f0 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY c==> c/\ cpacking f1 c/\ csaturated f1 c/\ cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f0 c~ cnegligible * * part chull part cconvex * part cset_of_list f0 c= * * part chull part cconvex * part cset_of_list f0 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY
- |- ((~ (_7224635 = _7224637)) \/ ((~ (_7224634 = _7224636)) \/ (((EL _7224634) _7224635) = ((EL _7224636) _7224637))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cEL f2 f0 cEL f3 f1
+ (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))), (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) /\ F)
T c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c/\ ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF
+ (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- (((set_of_list _7224609) = (((EL (NUMERAL _0)) _7224609) INSERT (((EL (NUMERAL (BIT1 _0))) _7224609) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) _7224609) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) _7224609) INSERT EMPTY))))) \/ ((~ (packing _7224608)) \/ (~ (((barV _7224608) (NUMERAL (BIT1 (BIT1 _0)))) _7224609))))
T c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY c\/ c= * part cset_of_list f0 * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY c\/ c~ cpacking f1 c~ cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f0
+ (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- (((packing _7224608) /\ (((barV _7224608) (NUMERAL (BIT1 (BIT1 _0)))) _7224609)) ==> ((set_of_list _7224609) = (((EL (NUMERAL _0)) _7224609) INSERT (((EL (NUMERAL (BIT1 _0))) _7224609) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) _7224609) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) _7224609) INSERT EMPTY))))))
T c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY c==> c/\ cpacking f0 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= * part cset_of_list f1 * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY
+ (_7224623 = _7224625) |- ((_7224622 = _7224624) ==> (((hull _7224622) _7224623) = ((hull _7224624) _7224625)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
+ |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- (((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F) = F)
T c= c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF cF
+ (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))), (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))
T c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY
- |- ((_7224616 = _7224619) ==> ((~ (_7224618 = _7224621)) \/ ((~ (_7224617 = _7224620)) \/ ((((barV _7224619) _7224620) _7224621) \/ (~ (((barV _7224616) _7224617) _7224618))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ cbarV f1 f5 f3 c~ cbarV f0 f4 f2
+ ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) |- (((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))))
T c==> creal_lt chl f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt chl f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cpacking f1 c/\ csaturated f1 c/\ cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f0 c~ cnegligible * * part chull part cconvex * part cset_of_list f0 c= * * part chull part cconvex * part cset_of_list f0 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY
+ |- ((_7224623 = _7224625) ==> ((~ (_7224622 = _7224624)) \/ (((hull _7224622) _7224623) = ((hull _7224624) _7224625))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
- ((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F)) |- (((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F)) /\ ((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F)))
T c==> c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF c/\ c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF
+ |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!ul. ((P ul) \/ Q)) = ((!ul. (P ul)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
- (~ (convex = convex)) |- ((~ (convex = convex)) /\ (convex = convex))
T c==> c~ c= part cconvex part cconvex c/\ c~ c= part cconvex part cconvex c= part cconvex part cconvex
+ |- ((((hull _7224622) _7224623) = ((hull _7224624) _7224625)) \/ ((~ (_7224623 = _7224625)) \/ (~ (_7224622 = _7224624))))
T c\/ c= * * part chull f0 f1 * * part chull f2 f3 c\/ c~ c= f1 f3 c~ c= f0 f2
- |- ((((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F)) ==> ((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F))) = ((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F)))
T c= c==> c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF
- (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))), (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- ((~ F) ==> F)
T c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> c~ cF cF
- |- ((~ (_7224612 = _7224613)) \/ ((saturated _7224613) \/ (~ (saturated _7224612))))
T c\/ c~ c= f0 f1 c\/ csaturated f1 c~ csaturated f0
+ |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- (_7224616 = _7224619), (_7224618 = _7224621) |- ((_7224617 = _7224620) ==> ((((barV _7224619) _7224620) _7224621) \/ (~ (((barV _7224616) _7224617) _7224618))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ cbarV f1 f5 f3 c~ cbarV f0 f4 f2
- (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))), (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- ((~ ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))
T c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> c~ c= * part cset_of_list f1 * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c= * part cset_of_list f1 * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY
+ (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))), (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- (((((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))) /\ (convex = convex)) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))) = (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))
T c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c= c==> c/\ c= * part cset_of_list f1 * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c= part cconvex part cconvex c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY
- (_7224632 = _7224633) |- ((_7224632 = _7224633) /\ ((NUMERAL _7224632) = (NUMERAL _7224633)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- (~ (negligible ((hull convex) (set_of_list ul))))
T c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c~ cnegligible * * part chull part cconvex * part cset_of_list f1
- |- ((~ (convex = convex)) ==> (convex = convex))
T c==> c~ c= part cconvex part cconvex c= part cconvex part cconvex
+ (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))), (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- (((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))) /\ (convex = convex))
T c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c/\ c= * part cset_of_list f1 * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c= part cconvex part cconvex
- |- ((~ (_7224616 = _7224619)) \/ ((~ (_7224618 = _7224621)) \/ ((~ (_7224617 = _7224620)) \/ ((((barV _7224619) _7224620) _7224621) \/ (~ (((barV _7224616) _7224617) _7224618))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ cbarV f1 f5 f3 c~ cbarV f0 f4 f2
- (_7224630 = _7224631) |- ((_7224630 = _7224631) /\ ((BIT1 _7224630) = (BIT1 _7224631)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT1 f0 cBIT1 f1
- (_7224616 = _7224619), (_7224618 = _7224621) |- ((_7224618 = _7224621) /\ ((~ (_7224617 = _7224620)) \/ ((((barV _7224619) _7224620) _7224621) \/ (~ (((barV _7224616) _7224617) _7224618)))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ c~ c= f4 f5 c\/ cbarV f1 f5 f3 c~ cbarV f0 f4 f2
- ((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F)) |- ((((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F)) ==> ((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F))) ==> ((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F)))
T c==> c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF c==> c==> c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF
- (_7224610 = _7224611) |- ((((negligible _7224610) = (negligible _7224611)) ==> ((negligible _7224611) \/ (~ (negligible _7224610)))) = ((negligible _7224611) \/ (~ (negligible _7224610))))
T c==> c= f0 f1 c= c==> c= cnegligible f0 cnegligible f1 c\/ cnegligible f1 c~ cnegligible f0 c\/ cnegligible f1 c~ cnegligible f0
- (_7224635 = _7224637) |- ((_7224634 = _7224636) ==> (((EL _7224634) _7224635) = ((EL _7224636) _7224637)))
T c==> c= f0 f1 c==> c= f2 f3 c= cEL f2 f0 cEL f3 f1
- |- ((~ (_7224632 = _7224633)) \/ ((NUMERAL _7224632) = (NUMERAL _7224633)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- (_7224612 = _7224613) |- ((_7224612 = _7224613) /\ ((saturated _7224613) \/ (~ (saturated _7224612))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ csaturated f1 c~ csaturated f0
- |- ((_7224638 = _7224640) ==> ((~ (_7224639 = _7224641)) \/ ((_7224638 INSERT _7224639) = (_7224640 INSERT _7224641))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- (_7224635 = _7224637) |- ((_7224635 = _7224637) /\ ((~ (_7224634 = _7224636)) \/ (((EL _7224634) _7224635) = ((EL _7224636) _7224637))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cEL f2 f0 cEL f3 f1
- (_7224639 = _7224641), (_7224638 = _7224640) |- ((_7224639 = _7224641) /\ ((_7224638 INSERT _7224639) = (_7224640 INSERT _7224641)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cINSERT f2 f0 * * part cINSERT f3 f1
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F)) ==> ((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F))) ==> (((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F)) ==> ((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F))))
T c==> c==> c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF c==> c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF
+ |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
- |- ((_7224635 = _7224637) ==> ((~ (_7224634 = _7224636)) \/ (((EL _7224634) _7224635) = ((EL _7224636) _7224637))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cEL f2 f0 cEL f3 f1
+ (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul)))))
T c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1
+ |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- (_7224614 = _7224615) |- ((_7224614 = _7224615) /\ ((packing _7224615) \/ (~ (packing _7224614))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ cpacking f1 c~ cpacking f0
- |- ((_7224632 = _7224633) ==> ((NUMERAL _7224632) = (NUMERAL _7224633)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- ((((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))) = ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))
T c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c= c==> c/\ cpacking f0 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= * part cset_of_list f1 * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c= * part cset_of_list f1 * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY
+ (~ ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) |- ((~ ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible EMPTY))))) ==> (EMPTY = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))))
T c==> c~ creal_lt chl f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ creal_lt chl f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cpacking f1 c/\ csaturated f1 c/\ cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f0 c~ cnegligible part cEMPTY c= part cEMPTY * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY
- |- ((~ (_7224638 = _7224640)) \/ ((~ (_7224639 = _7224641)) \/ ((_7224638 INSERT _7224639) = (_7224640 INSERT _7224641))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
+ (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- ((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul)))))))
T c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
- |- ((!V. ((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> (~ (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))))))) = T)
T c= ! c==> c~ c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 f0 c~ cnegligible * * part chull part cconvex * part cset_of_list f0 c= * * part chull part cconvex * part cset_of_list f0 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY c~ ! ! c==> c/\ cpacking b1 cbarV b1 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cT
- |- ((!ul'. (((~ (packing V)) \/ (~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul))) \/ ((set_of_list ul') = (((EL (NUMERAL _0)) ul') INSERT (((EL (NUMERAL (BIT1 _0))) ul') INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul') INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul') INSERT EMPTY))))))) = (((~ (packing V)) \/ (~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul))) \/ (!ul. ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))))
T c= ! c\/ c\/ c~ cpacking f0 c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= * part cset_of_list b0 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b0 part cEMPTY c\/ c\/ c~ cpacking f0 c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 ! c= * part cset_of_list b0 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b0 part cEMPTY
+ |- ((!ul. (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible (((COND ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((hull convex) (set_of_list ul))) EMPTY)))))) ==> ((((COND ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((hull convex) (set_of_list ul))) EMPTY) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) = T)
T c= ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c~ cnegligible * * * part cCOND creal_lt chl b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * * part chull part cconvex * part cset_of_list b0 part cEMPTY c= * * * part cCOND creal_lt chl b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * * part chull part cconvex * part cset_of_list b0 part cEMPTY * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b0 part cEMPTY cT
- (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- ((~ (packing V)) ==> (packing V))
T c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> c~ cpacking f0 cpacking f0
+ (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- (packing V)
T c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY cpacking f0
- |- ((_7224626 = _7224627) ==> ((set_of_list _7224626) = (set_of_list _7224627)))
T c==> c= f0 f1 c= * part cset_of_list f0 * part cset_of_list f1
+ |- (((((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) /\ ((~ ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible EMPTY))))) ==> (EMPTY = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))))) = (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible (((COND ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((hull convex) (set_of_list ul))) EMPTY)))))) ==> ((((COND ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((hull convex) (set_of_list ul))) EMPTY) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))))
T c= c/\ c==> creal_lt chl f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cpacking f1 c/\ csaturated f1 c/\ cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f0 c~ cnegligible * * part chull part cconvex * part cset_of_list f0 c= * * part chull part cconvex * part cset_of_list f0 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY c==> c~ creal_lt chl f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cpacking f1 c/\ csaturated f1 c/\ cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f0 c~ cnegligible part cEMPTY c= part cEMPTY * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY c==> c/\ cpacking f1 c/\ csaturated f1 c/\ cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f0 c~ cnegligible * * * part cCOND creal_lt chl f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * * part chull part cconvex * part cset_of_list f0 part cEMPTY c= * * * part cCOND creal_lt chl f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * * part chull part cconvex * part cset_of_list f0 part cEMPTY * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY
+ |- (((!V. (!ul. (((mcell4 V) ul) = (((COND ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((hull convex) (set_of_list ul))) EMPTY)))) ==> ((\V. (!ul. (((mcell4 V) ul) = (((COND ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((hull convex) (set_of_list ul))) EMPTY)))) V)) = ((\V. (!ul. (((mcell4 V) ul) = (((COND ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((hull convex) (set_of_list ul))) EMPTY)))) V))
T c= c==> ! ! c= * * part cmcell4 b0 b1 * * * part cCOND creal_lt chl b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * * part chull part cconvex * part cset_of_list b1 part cEMPTY * / ! c= * * part cmcell4 b0 b1 * * * part cCOND creal_lt chl b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * * part chull part cconvex * part cset_of_list b1 part cEMPTY f0 * / ! c= * * part cmcell4 b0 b1 * * * part cCOND creal_lt chl b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * * part chull part cconvex * part cset_of_list b1 part cEMPTY f0
- (_7224616 = _7224619), (_7224617 = _7224620), (_7224618 = _7224621) |- ((_7224617 = _7224620) /\ ((((barV _7224619) _7224620) _7224621) \/ (~ (((barV _7224616) _7224617) _7224618))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f2 f3 c\/ cbarV f1 f3 f5 c~ cbarV f0 f2 f4
- |- ((_7224630 = _7224631) ==> ((BIT1 _7224630) = (BIT1 _7224631)))
T c==> c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
+ |- ((~ (a \/ b)) = ((~ a) /\ (~ b)))
T c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
+ |- ((((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible (((COND ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((hull convex) (set_of_list ul))) EMPTY)))))) ==> ((((COND ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((hull convex) (set_of_list ul))) EMPTY) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))) = ((((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) /\ ((~ ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible EMPTY))))) ==> (EMPTY = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))))))
T c= c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * * part cCOND creal_lt chl f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * * part chull part cconvex * part cset_of_list f1 part cEMPTY c= * * * part cCOND creal_lt chl f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * * part chull part cconvex * part cset_of_list f1 part cEMPTY * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c/\ c==> creal_lt chl f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> c~ creal_lt chl f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible part cEMPTY c= part cEMPTY * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY
- (_7224610 = _7224611) |- ((_7224610 = _7224611) /\ ((negligible _7224611) \/ (~ (negligible _7224610))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ cnegligible f1 c~ cnegligible f0
+ (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- (~ (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))
T c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c~ c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY
- |- (((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> (~ (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))))) = T)
T c= c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c~ ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cT
- (~ ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) |- (((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = F)
T c==> c~ creal_lt chl f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_lt chl f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cF
+ |- (((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))))
T c==> creal_lt chl f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cpacking f1 c/\ csaturated f1 c/\ cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f0 c~ cnegligible * * part chull part cconvex * part cset_of_list f0 c= * * part chull part cconvex * part cset_of_list f0 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY
+ |- ((\ul. (((mcell4 V) ul) = (((COND ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((hull convex) (set_of_list ul))) EMPTY))) ul)
T * / c= * * part cmcell4 f0 b0 * * * part cCOND creal_lt chl b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * * part chull part cconvex * part cset_of_list b0 part cEMPTY f1
- (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- (saturated V)
T c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY csaturated f0
+ (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)
T c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1
- |- (((!ul. (!V. ((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F)))) ==> ((\ul. (!V. ((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F)))) ul)) = ((\ul. (!V. ((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F)))) ul))
T c= c==> ! ! c==> c~ c==> c/\ cpacking b1 c/\ csaturated b1 c/\ cbarV b1 cNUMERAL cBIT1 cBIT1 c_0 b0 c~ cnegligible * * part chull part cconvex * part cset_of_list b0 c= * * part chull part cconvex * part cset_of_list b0 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b0 part cEMPTY c==> ! ! c==> c/\ cpacking b2 cbarV b2 cNUMERAL cBIT1 cBIT1 c_0 b2 c= * part cset_of_list b2 * * part cINSERT cEL cNUMERAL c_0 b2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b2 part cEMPTY cF * / ! c==> c~ c==> c/\ cpacking b1 c/\ csaturated b1 c/\ cbarV b1 cNUMERAL cBIT1 cBIT1 c_0 b0 c~ cnegligible * * part chull part cconvex * part cset_of_list b0 c= * * part chull part cconvex * part cset_of_list b0 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b0 part cEMPTY c==> ! ! c==> c/\ cpacking b2 cbarV b2 cNUMERAL cBIT1 cBIT1 c_0 b2 c= * part cset_of_list b2 * * part cINSERT cEL cNUMERAL c_0 b2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b2 part cEMPTY cF f0 * / ! c==> c~ c==> c/\ cpacking b1 c/\ csaturated b1 c/\ cbarV b1 cNUMERAL cBIT1 cBIT1 c_0 b0 c~ cnegligible * * part chull part cconvex * part cset_of_list b0 c= * * part chull part cconvex * part cset_of_list b0 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b0 part cEMPTY c==> ! ! c==> c/\ cpacking b2 cbarV b2 cNUMERAL cBIT1 cBIT1 c_0 b2 c= * part cset_of_list b2 * * part cINSERT cEL cNUMERAL c_0 b2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b2 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b2 part cEMPTY cF f0
+ |- ((((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible (((COND ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((hull convex) (set_of_list ul))) EMPTY)))))) ==> ((((COND ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((hull convex) (set_of_list ul))) EMPTY) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))) = T)
T c= c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * * part cCOND creal_lt chl f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * * part chull part cconvex * part cset_of_list f1 part cEMPTY c= * * * part cCOND creal_lt chl f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * * part chull part cconvex * part cset_of_list f1 part cEMPTY * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY cT
- (_7224638 = _7224640) |- ((_7224639 = _7224641) ==> ((_7224638 INSERT _7224639) = (_7224640 INSERT _7224641)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- |- ((!ul. (P \/ (Q ul))) = (P \/ (!ul. (Q ul))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
+ |- ((F ==> t) = T)
T c= c==> cF f0 cT
+ |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) = ((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)))
T c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c= cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ cpacking f0 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1
- (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul))
T c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1
+ |- ((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F)
T c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY cF
+ |- ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible (((COND ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((hull convex) (set_of_list ul))) EMPTY)))))) ==> ((((COND ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((hull convex) (set_of_list ul))) EMPTY) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))))) = (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((mcell4 V) ul)))))) ==> (((mcell4 V) ul) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))))))
T c= ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c~ cnegligible * * * part cCOND creal_lt chl b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * * part chull part cconvex * part cset_of_list b1 part cEMPTY c= * * * part cCOND creal_lt chl b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * * part chull part cconvex * part cset_of_list b1 part cEMPTY * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c~ cnegligible * * part cmcell4 b0 b1 c= * * part cmcell4 b0 b1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- |- ((\V. ((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F))) V)
T * / c==> c~ c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 f0 c~ cnegligible * * part chull part cconvex * part cset_of_list f0 c= * * part chull part cconvex * part cset_of_list f0 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY c==> ! ! c==> c/\ cpacking b1 cbarV b1 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF f1
- (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))), (~ F), (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- ((~ F) /\ F)
T c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY c==> c~ cF c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c/\ c~ cF cF
- (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))), (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- ((~ (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))
T c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> c~ c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY
+ |- ((~ T) = F)
T c= c~ cT cF
- |- (T = (((~ (_7224623 = _7224625)) \/ ((~ (_7224622 = _7224624)) \/ (((hull _7224622) _7224623) = ((hull _7224624) _7224625)))) = ((((hull _7224622) _7224623) = ((hull _7224624) _7224625)) \/ ((~ (_7224623 = _7224625)) \/ (~ (_7224622 = _7224624))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1 c\/ c= * * part chull f2 f0 * * part chull f3 f1 c\/ c~ c= f0 f1 c~ c= f2 f3
+ (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- (((~ (packing _7224608)) \/ (~ (((barV _7224608) (NUMERAL (BIT1 (BIT1 _0)))) _7224609))) \/ ((set_of_list _7224609) = (((EL (NUMERAL _0)) _7224609) INSERT (((EL (NUMERAL (BIT1 _0))) _7224609) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) _7224609) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) _7224609) INSERT EMPTY))))))
T c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY c\/ c\/ c~ cpacking f0 c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= * part cset_of_list f1 * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY
+ |- (((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F) = (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))))
T c= c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY cF c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY
+ |- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible (((COND ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((hull convex) (set_of_list ul))) EMPTY)))))) ==> ((((COND ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((hull convex) (set_of_list ul))) EMPTY) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * * part cCOND creal_lt chl f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * * part chull part cconvex * part cset_of_list f1 part cEMPTY c= * * * part cCOND creal_lt chl f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * * part chull part cconvex * part cset_of_list f1 part cEMPTY * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY
- (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))), (~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) |- ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul))
T c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1
+ (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- (!ul. (((~ (packing _7224608)) \/ (~ (((barV _7224608) (NUMERAL (BIT1 (BIT1 _0)))) ul))) \/ ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))
T c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY ! c\/ c\/ c~ cpacking f0 c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c= * part cset_of_list b0 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b0 part cEMPTY
- (~ ((real_lt (hl ul)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) |- ((((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible EMPTY))))) ==> (EMPTY = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))) = (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible EMPTY))))) ==> (EMPTY = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))))
T c==> c~ creal_lt chl f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= c==> c/\ cpacking f1 c/\ csaturated f1 c/\ cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f0 c~ cnegligible part cEMPTY c= part cEMPTY * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY c==> c/\ cpacking f1 c/\ csaturated f1 c/\ cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f0 c~ cnegligible part cEMPTY c= part cEMPTY * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY
+ (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- (!V. (!ul. (((~ (packing V)) \/ (~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul))) \/ ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))))
T c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY ! ! c\/ c\/ c~ cpacking b0 c~ cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY
+ (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- (((!V. (!ul. (((~ (packing V)) \/ (~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul))) \/ ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((\V. (!ul. (((~ (packing V)) \/ (~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul))) \/ ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) _7224608)) = ((\V. (!ul. (((~ (packing V)) \/ (~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul))) \/ ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) _7224608))
T c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY c= c==> ! ! c\/ c\/ c~ cpacking b0 c~ cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY * / ! c\/ c\/ c~ cpacking b0 c~ cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY f0 * / ! c\/ c\/ c~ cpacking b0 c~ cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY f0
- (_7224626 = _7224627) |- ((_7224626 = _7224627) /\ ((set_of_list _7224626) = (set_of_list _7224627)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * part cset_of_list f0 * part cset_of_list f1
+ |- (((_7224623 = _7224625) /\ (_7224622 = _7224624)) ==> (((hull _7224622) _7224623) = ((hull _7224624) _7224625)))
T c==> c/\ c= f0 f1 c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
- |- ((!V. (P V)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- ((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F)), (((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F)) ==> ((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F))) |- (((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F)) /\ ((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F)))
T c==> c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF c==> c==> c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF c/\ c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF
+ |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ |- (((~ (packing _7224608)) \/ ((~ (((barV _7224608) (NUMERAL (BIT1 (BIT1 _0)))) _7224609)) \/ ((set_of_list _7224609) = (((EL (NUMERAL _0)) _7224609) INSERT (((EL (NUMERAL (BIT1 _0))) _7224609) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) _7224609) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) _7224609) INSERT EMPTY))))))) = (((set_of_list _7224609) = (((EL (NUMERAL _0)) _7224609) INSERT (((EL (NUMERAL (BIT1 _0))) _7224609) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) _7224609) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) _7224609) INSERT EMPTY))))) \/ ((~ (packing _7224608)) \/ (~ (((barV _7224608) (NUMERAL (BIT1 (BIT1 _0)))) _7224609)))))
T c= c\/ c~ cpacking f0 c\/ c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= * part cset_of_list f1 * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c\/ c= * part cset_of_list f1 * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c\/ c~ cpacking f0 c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1
+ |- (T = (((~ (packing _7224608)) \/ ((~ (((barV _7224608) (NUMERAL (BIT1 (BIT1 _0)))) _7224609)) \/ ((set_of_list _7224609) = (((EL (NUMERAL _0)) _7224609) INSERT (((EL (NUMERAL (BIT1 _0))) _7224609) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) _7224609) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) _7224609) INSERT EMPTY))))))) = (((set_of_list _7224609) = (((EL (NUMERAL _0)) _7224609) INSERT (((EL (NUMERAL (BIT1 _0))) _7224609) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) _7224609) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) _7224609) INSERT EMPTY))))) \/ ((~ (packing _7224608)) \/ (~ (((barV _7224608) (NUMERAL (BIT1 (BIT1 _0)))) _7224609))))))
T c= cT c= c\/ c~ cpacking f0 c\/ c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= * part cset_of_list f1 * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c\/ c= * part cset_of_list f1 * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c\/ c~ cpacking f0 c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1
- (_7224628 = _7224629) |- ((_7224628 = _7224629) /\ ((BIT0 _7224628) = (BIT0 _7224629)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- |- (((!V. ((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F))) ==> ((\V. ((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F))) V)) = ((\V. ((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> ((!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) ==> F))) V))
T c= c==> ! c==> c~ c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 f0 c~ cnegligible * * part chull part cconvex * part cset_of_list f0 c= * * part chull part cconvex * part cset_of_list f0 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY c==> ! ! c==> c/\ cpacking b1 cbarV b1 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF * / c==> c~ c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 f0 c~ cnegligible * * part chull part cconvex * part cset_of_list f0 c= * * part chull part cconvex * part cset_of_list f0 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY c==> ! ! c==> c/\ cpacking b1 cbarV b1 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF f1 * / c==> c~ c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 f0 c~ cnegligible * * part chull part cconvex * part cset_of_list f0 c= * * part chull part cconvex * part cset_of_list f0 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY c==> ! ! c==> c/\ cpacking b1 cbarV b1 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY cF f1
+ (_7224623 = _7224625) |- ((_7224623 = _7224625) /\ ((~ (_7224622 = _7224624)) \/ (((hull _7224622) _7224623) = ((hull _7224624) _7224625))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
- (_7224638 = _7224640) |- ((_7224638 = _7224640) /\ ((~ (_7224639 = _7224641)) \/ ((_7224638 INSERT _7224639) = (_7224640 INSERT _7224641))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ |- ((~ (~ a)) = a)
T c= c~ c~ f0 f0
- (_7224616 = _7224619), (_7224617 = _7224620), (_7224618 = _7224621) |- ((((barV _7224619) _7224620) _7224621) \/ (~ (((barV _7224616) _7224617) _7224618)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ cbarV f1 f3 f5 c~ cbarV f0 f2 f4
+ |- (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY
- (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))), (~ (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))), (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- ((~ (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))) /\ (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))
T c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY c==> c~ c= * * part chull part cconvex * part cset_of_list f0 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY c==> c~ c==> c/\ cpacking f1 c/\ csaturated f1 c/\ cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f0 c~ cnegligible * * part chull part cconvex * part cset_of_list f0 c= * * part chull part cconvex * part cset_of_list f0 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY c/\ c~ c= * * part chull part cconvex * part cset_of_list f0 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY c= * * part chull part cconvex * part cset_of_list f0 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f0 part cEMPTY
+ (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- ((~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) /\ F)
T c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c/\ c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY cF
+ |- ((t /\ F) = F)
T c= c/\ f0 cF cF
- |- ((~ (_7224628 = _7224629)) \/ ((BIT0 _7224628) = (BIT0 _7224629)))
T c\/ c~ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- |- ((~ (_7224614 = _7224615)) \/ ((packing _7224615) \/ (~ (packing _7224614))))
T c\/ c~ c= f0 f1 c\/ cpacking f1 c~ cpacking f0
+ (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))), (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- F
T c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY cF
+ (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) /\ (~ (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))))))
T c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c/\ c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c~ c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY
+ (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- ((~ (packing _7224608)) \/ ((~ (((barV _7224608) (NUMERAL (BIT1 (BIT1 _0)))) _7224609)) \/ ((set_of_list _7224609) = (((EL (NUMERAL _0)) _7224609) INSERT (((EL (NUMERAL (BIT1 _0))) _7224609) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) _7224609) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) _7224609) INSERT EMPTY)))))))
T c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY c\/ c~ cpacking f0 c\/ c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= * part cset_of_list f1 * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY
+ |- ((negligible EMPTY) = T)
T c= cnegligible part cEMPTY cT
+ |- ((~ p) = (p ==> F))
T c= c~ f0 c==> f0 cF
+ (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- ((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul))
T c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c/\ cpacking f0 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1
+ (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))
T c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1
+ (!V. (!ul. (((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))), (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- ((convex = convex) = (((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY))))) /\ (convex = convex)))
T c==> ! ! c==> c/\ cpacking b0 cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c= * part cset_of_list b1 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 b1 part cEMPTY c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c= c= part cconvex part cconvex c/\ c= * part cset_of_list f1 * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c= part cconvex part cconvex
+ (~ (((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ (~ (negligible ((hull convex) (set_of_list ul))))))) ==> (((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))))) |- ((((hull convex) (set_of_list ul)) = ((hull convex) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ul) INSERT EMPTY)))))) ==> F)
T c==> c~ c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c~ cnegligible * * part chull part cconvex * part cset_of_list f1 c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY c==> c= * * part chull part cconvex * part cset_of_list f1 * * part chull part cconvex * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 f1 part cEMPTY cF
