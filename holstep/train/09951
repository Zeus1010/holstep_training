N NEGLIGIBLE_AFFINE_HULL
C |- (!s. (((FINITE s) /\ ((CARD s) <= (dimindex UNIV))) ==> (negligible ((hull affine) s))))
T c==> c/\ cFINITE f0 c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D LEFT_FORALL_OR_THM
A |- (!P. (!Q. ((!x. ((P x) \/ Q)) = ((!x. (P x)) \/ Q))))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
D RIGHT_FORALL_OR_THM
A |- (!P. (!Q. ((!x. (P \/ (Q x))) = (P \/ (!x. (Q x))))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
D LEFT_OR_FORALL_THM
A |- (!P. (!Q. (((!x. (P x)) \/ Q) = (!x. ((P x) \/ Q)))))
T c= c\/ ! * f0 b0 f1 ! c\/ * f0 b0 f1
D RIGHT_OR_FORALL_THM
A |- (!P. (!Q. ((P \/ (!x. (Q x))) = (!x. (P \/ (Q x))))))
T c= c\/ f0 ! * f1 b0 ! c\/ f0 * f1 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D SKOLEM_THM
A |- (!P. ((!x. (?y. ((P x) y))) = (?y. (!x. ((P x) (y x))))))
T c= ! c? / * * f0 b0 b1 c? / ! * * f0 b1 * b0 b1
D o_THM
A |- (!f. (!g. (!x. (((f o g) x) = (f (g x))))))
T c= co f0 f1 f2 * f0 * f1 f2
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D BIT0
A |- (!n. ((BIT0 n) = (n + n)))
T c= cBIT0 f0 c+ f0 f0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D ADD1
A |- (!m. ((SUC m) = (m + (NUMERAL (BIT1 _0)))))
T c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D MULT_ASSOC
A |- (!m. (!n. (!p. ((m * (n * p)) = ((m * n) * p)))))
T c= c* f0 c* f1 f2 c* c* f0 f1 f2
D MULT_AC
A |- (((m * n) = (n * m)) /\ ((((m * n) * p) = (m * (n * p))) /\ ((m * (n * p)) = (n * (m * p)))))
T c/\ c= c* f0 f1 c* f1 f0 c/\ c= c* c* f0 f1 f2 c* f0 c* f1 f2 c= c* f0 c* f1 f2 c* f1 c* f0 f2
D EQ_MULT_LCANCEL
A |- (!m. (!n. (!p. (((m * n) = (m * p)) = ((m = (NUMERAL _0)) \/ (n = p))))))
T c= c= c* f0 f1 c* f0 f2 c\/ c= f0 cNUMERAL c_0 c= f1 f2
D MULT_2
A |- (!n. (((NUMERAL (BIT0 (BIT1 _0))) * n) = (n + n)))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 f0 c+ f0 f0
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D LET_TRANS
A |- (!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p)))))
T c==> c/\ c<= f0 f1 c< f1 f2 c< f0 f2
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D ARITH_EQ
A |- ((!m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) /\ (((_0 = _0) = T) /\ ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))))))
T c/\ ! ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 c/\ c= c= c_0 c_0 cT c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
D MAP
A |- ((!f. (((MAP f) NIL) = NIL)) /\ (!f. (!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))))))
T c/\ ! c= cMAP b0 cNIL cNIL ! ! ! c= cMAP b0 cCONS b1 b2 cCONS * b0 b1 cMAP b0 b2
D MAP_APPEND
A |- (!f. (!l1. (!l2. (((MAP f) ((APPEND l1) l2)) = ((APPEND ((MAP f) l1)) ((MAP f) l2))))))
T c= cMAP f0 cAPPEND f1 f2 cAPPEND cMAP f0 f1 cMAP f0 f2
D LENGTH_MAP
A |- (!l. (!f. ((LENGTH ((MAP f) l)) = (LENGTH l))))
T c= cLENGTH cMAP f0 f1 cLENGTH f1
D MAP_REVERSE
A |- (!f. (!l. ((REVERSE ((MAP f) l)) = ((MAP f) (REVERSE l)))))
T c= cREVERSE cMAP f0 f1 cMAP f0 cREVERSE f1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D REAL_MUL_LINV
A |- (!x. ((~ (x = (real_of_num (NUMERAL _0)))) ==> (((real_mul (real_inv x)) x) = (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c~ c= f0 creal_of_num cNUMERAL c_0 c= creal_mul creal_inv f0 f0 creal_of_num cNUMERAL cBIT1 c_0
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D real_div
A |- (!x. (!y. (((real_div x) y) = ((real_mul x) (real_inv y)))))
T c= creal_div f0 f1 creal_mul f0 creal_inv f1
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D Real_ext.REAL_SV_LMUL_0
A |- (!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0))))
T c= creal_mul creal_of_num cNUMERAL c_0 f0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_MUL_RID
A |- (!x. (((real_mul x) (real_of_num (NUMERAL (BIT1 _0)))) = x))
T c= creal_mul f0 creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_NEG_MINUS1
A |- (!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)))
T c= creal_neg f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_MUL_AC
A |- ((((real_mul m) n) = ((real_mul n) m)) /\ ((((real_mul ((real_mul m) n)) p) = ((real_mul m) ((real_mul n) p))) /\ (((real_mul m) ((real_mul n) p)) = ((real_mul n) ((real_mul m) p)))))
T c/\ c= creal_mul f0 f1 creal_mul f1 f0 c/\ c= creal_mul creal_mul f0 f1 f2 creal_mul f0 creal_mul f1 f2 c= creal_mul f0 creal_mul f1 f2 creal_mul f1 creal_mul f0 f2
D Real_ext.REAL_PROP_POS_MUL2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_mul x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_mul f0 f1
D REAL_LT_01
A |- ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))
T creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
D REAL_LE_ADD2
A |- (!w. (!x. (!y. (!z. ((((real_le w) x) /\ ((real_le y) z)) ==> ((real_le ((real_add w) y)) ((real_add x) z)))))))
T c==> c/\ creal_le f0 f1 creal_le f2 f3 creal_le creal_add f0 f2 creal_add f1 f3
D REAL_ABS_1
A |- ((real_abs (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0))))
T c= creal_abs creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
D REAL_ABS_POS
A |- (!x. ((real_le (real_of_num (NUMERAL _0))) (real_abs x)))
T creal_le creal_of_num cNUMERAL c_0 creal_abs f0
D Real_ext.REAL_LE_LMUL_IMP
A |- (!x. (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le y) z)) ==> ((real_le ((real_mul x) y)) ((real_mul x) z))))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le f1 f2 creal_le creal_mul f0 f1 creal_mul f0 f2
D REAL_INV_INV
A |- (!x. ((real_inv (real_inv x)) = x))
T c= creal_inv creal_inv f0 f0
D REAL_INV_NEG
A |- (!x. ((real_inv (real_neg x)) = (real_neg (real_inv x))))
T c= creal_inv creal_neg f0 creal_neg creal_inv f0
D REAL_DIV_1
A |- (!x. (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x))
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_INV_MUL
A |- (!x. (!y. ((real_inv ((real_mul x) y)) = ((real_mul (real_inv x)) (real_inv y)))))
T c= creal_inv creal_mul f0 f1 creal_mul creal_inv f0 creal_inv f1
D REAL_INV_DIV
A |- (!x. (!y. ((real_inv ((real_div x) y)) = ((real_div y) x))))
T c= creal_inv creal_div f0 f1 creal_div f1 f0
D DECIMAL
A |- (!x. (!y. (((DECIMAL x) y) = ((real_div (real_of_num x)) (real_of_num y)))))
T c= cDECIMAL f0 f1 creal_div creal_of_num f0 creal_of_num f1
D RAT_LEMMA2
A |- ((((real_lt (real_of_num (NUMERAL _0))) y1) /\ ((real_lt (real_of_num (NUMERAL _0))) y2)) ==> (((real_add ((real_div x1) y1)) ((real_div x2) y2)) = ((real_mul ((real_add ((real_mul x1) y2)) ((real_mul x2) y1))) ((real_mul (real_inv y1)) (real_inv y2)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 c= creal_add creal_div f2 f0 creal_div f3 f1 creal_mul creal_add creal_mul f2 f1 creal_mul f3 f0 creal_mul creal_inv f0 creal_inv f1
D RAT_LEMMA5
A |- ((((real_lt (real_of_num (NUMERAL _0))) y1) /\ ((real_lt (real_of_num (NUMERAL _0))) y2)) ==> ((((real_div x1) y1) = ((real_div x2) y2)) = (((real_mul x1) y2) = ((real_mul x2) y1))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 c= c= creal_div f2 f0 creal_div f3 f1 c= creal_mul f2 f1 creal_mul f3 f0
D int_eq
A |- (!x. (!y. ((x = y) = ((real_of_int x) = (real_of_int y)))))
T c= c= f0 f1 c= creal_of_int f0 creal_of_int f1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_NOT_LT
A |- (!x. (!y. ((~ ((int_lt x) y)) = ((int_le y) x))))
T c= c~ cint_lt f0 f1 cint_le f1 f0
D INT_OF_NUM_ADD
A |- (!m. (!n. (((int_add (int_of_num m)) (int_of_num n)) = (int_of_num (m + n)))))
T c= cint_add cint_of_num f0 cint_of_num f1 cint_of_num c+ f0 f1
D INT_OF_NUM_EQ
A |- (!m. (!n. (((int_of_num m) = (int_of_num n)) = (m = n))))
T c= c= cint_of_num f0 cint_of_num f1 c= f0 f1
D INT_OF_NUM_LE
A |- (!m. (!n. (((int_le (int_of_num m)) (int_of_num n)) = (m <= n))))
T c= cint_le cint_of_num f0 cint_of_num f1 c<= f0 f1
D INT_OF_NUM_LT
A |- (!m. (!n. (((int_lt (int_of_num m)) (int_of_num n)) = (m < n))))
T c= cint_lt cint_of_num f0 cint_of_num f1 c< f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D PSUBSET
A |- (!s. (!t. ((s PSUBSET t) = ((s SUBSET t) /\ (~ (s = t))))))
T c= cPSUBSET f0 f1 c/\ cSUBSET f0 f1 c~ c= f0 f1
D DISJOINT
A |- (!s. (!t. (((DISJOINT s) t) = ((s INTER t) = EMPTY))))
T c= cDISJOINT f0 f1 c= * * part cINTER f0 f1 part cEMPTY
D INFINITE
A |- (!s. ((INFINITE s) = (~ (FINITE s))))
T c= cINFINITE f0 c~ cFINITE f0
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_UNIV
A |- (!x. (x IN UNIV))
T cIN f0 part cUNIV
D IN_UNION
A |- (!s. (!t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t))))))
T c= cIN f0 * * part cUNION f1 f2 c\/ cIN f0 f1 cIN f0 f2
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D IN_INTERS
A |- (!s. (!x. ((x IN (INTERS s)) = (!t. ((t IN s) ==> (x IN t))))))
T c= cIN f0 * part cINTERS f1 ! c==> cIN b0 f1 cIN f0 b0
D IN_DIFF
A |- (!s. (!t. (!x. ((x IN (s DIFF t)) = ((x IN s) /\ (~ (x IN t)))))))
T c= cIN f0 * * part cDIFF f1 f2 c/\ cIN f0 f1 c~ cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D IN_DELETE
A |- (!s. (!x. (!y. ((x IN (s DELETE y)) = ((x IN s) /\ (~ (x = y)))))))
T c= cIN f0 * * part cDELETE f1 f2 c/\ cIN f0 f1 c~ c= f0 f2
D IN_IMAGE
A |- (!y. (!s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s)))))))
T c= cIN f0 * * part cIMAGE f1 f2 c? / c/\ c= f0 * f1 b0 cIN b0 f2
D IMAGE_CLAUSES
A |- ((((IMAGE f) EMPTY) = EMPTY) /\ (((IMAGE f) (x INSERT s)) = ((f x) INSERT ((IMAGE f) s))))
T c/\ c= * * part cIMAGE f0 part cEMPTY part cEMPTY c= * * part cIMAGE f0 * * part cINSERT f1 f2 * * part cINSERT * f0 f1 * * part cIMAGE f0 f2
D IMAGE_o
A |- (!f. (!g. (!s. (((IMAGE (f o g)) s) = ((IMAGE f) ((IMAGE g) s))))))
T c= * * part cIMAGE * * part co f0 f1 f2 * * part cIMAGE f0 * * part cIMAGE f1 f2
D IMAGE_UNIONS
A |- (!f. (!s. (((IMAGE f) (UNIONS s)) = (UNIONS ((IMAGE (IMAGE f)) s)))))
T c= * * part cIMAGE f0 * part cUNIONS f1 * part cUNIONS * * part cIMAGE * part cIMAGE f0 f1
D INTERS_IMAGE
A |- (!f. (!s. ((INTERS ((IMAGE f) s)) = (GSPEC (\GEN%PVAR%30. (?y. (((SETSPEC GEN%PVAR%30) (!x. ((x IN s) ==> (y IN (f x))))) y)))))))
T c= * part cINTERS * * part cIMAGE f0 f1 * part cGSPEC / c? / cSETSPEC b0 ! c==> cIN b2 f1 cIN b1 * f0 b2 b1
D FINITE_INDUCT_STRONG
A |- (!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s)))))
T c==> c/\ * f0 part cEMPTY ! ! c==> c/\ * f0 b1 c/\ c~ cIN b0 b1 cFINITE b1 * f0 * * part cINSERT b0 b1 ! c==> cFINITE b0 * f0 b0
D FINITE_INSERT
A |- (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s))))
T c= cFINITE * * part cINSERT f0 f1 cFINITE f1
D FINITE_IMAGE_INJ_EQ
A |- (!f. (!s. ((!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f x) = (f y)))) ==> (x = y)))) ==> ((FINITE ((IMAGE f) s)) = (FINITE s)))))
T c==> ! ! c==> c/\ cIN b0 f0 c/\ cIN b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c= cFINITE * * part cIMAGE f1 f0 cFINITE f0
D Oxl_2012.CARD_INSERT
A |- (!x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))))
T c==> cFINITE f0 c= cCARD * * part cINSERT f1 f0 cCOND cIN f1 f0 cCARD f0 cSUC cCARD f0
D HAS_SIZE
A |- (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))))
T c= cHAS_SIZE f0 f1 c/\ cFINITE f0 c= cCARD f0 f1
D CARD_IMAGE_INJ
A |- (!f. (!s. (((!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f x) = (f y)))) ==> (x = y)))) /\ (FINITE s)) ==> ((CARD ((IMAGE f) s)) = (CARD s)))))
T c==> c/\ ! ! c==> c/\ cIN b0 f0 c/\ cIN b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 cFINITE f0 c= cCARD * * part cIMAGE f1 f0 cCARD f0
D INJECTIVE_IMAGE
A |- (!f. ((!s. (!t. ((((IMAGE f) s) = ((IMAGE f) t)) ==> (s = t)))) = (!x. (!y. (((f x) = (f y)) ==> (x = y))))))
T c= ! ! c==> c= * * part cIMAGE f0 b0 * * part cIMAGE f0 b1 c= b0 b1 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1
D SURJECTIVE_IMAGE
A |- (!f. ((!t. (?s. (((IMAGE f) s) = t))) = (!y. (?x. ((f x) = y)))))
T c= ! c? / c= * * part cIMAGE f0 b1 b0 ! c? / c= * f0 b1 b0
D ge_c
A |- (!t. (!s. ((s >=_c t) = (t <=_c s))))
T c= c>=_c f0 f1 c<=_c f1 f0
D gt_c
A |- (!t. (!s. ((s >_c t) = (t <_c s))))
T c= c>_c f0 f1 c<_c f1 f0
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D CARD_EQ_REFL
A |- (!s. (s =_c s))
T c=_c f0 f0
D CARD_LE_CONG
A |- (!s. (!s'. (!t. (!t'. (((s =_c s') /\ (t =_c t')) ==> ((s <=_c t) = (s' <=_c t')))))))
T c==> c/\ c=_c f0 f1 c=_c f2 f3 c= c<=_c f0 f2 c<=_c f1 f3
D CARD_LT_CONG
A |- (!s. (!s'. (!t. (!t'. (((s =_c s') /\ (t =_c t')) ==> ((s <_c t) = (s' <_c t')))))))
T c==> c/\ c=_c f0 f1 c=_c f2 f3 c= c<_c f0 f2 c<_c f1 f3
D CARD_EQ_CONG
A |- (!s. (!s'. (!t. (!t'. (((s =_c s') /\ (t =_c t')) ==> ((s =_c t) = (s' =_c t')))))))
T c==> c/\ c=_c f0 f1 c=_c f2 f3 c= c=_c f0 f2 c=_c f1 f3
D CARD_EQ_IMAGE
A |- (!f. (!s. ((!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f x) = (f y)))) ==> (x = y)))) ==> (((IMAGE f) s) =_c s))))
T c==> ! ! c==> c/\ cIN b0 f0 c/\ cIN b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c=_c * * part cIMAGE f1 f0 f0
D COUNTABLE_IMAGE_INJ_EQ
A |- (!f. (!s. ((!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f x) = (f y)))) ==> (x = y)))) ==> ((COUNTABLE ((IMAGE f) s)) = (COUNTABLE s)))))
T c==> ! ! c==> c/\ cIN b0 f0 c/\ cIN b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c= cCOUNTABLE * * part cIMAGE f1 f0 cCOUNTABLE f0
D HULL_INC
A |- (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s))))))
T c==> cIN f0 f1 cIN f0 * * part chull f2 f1
D vector_add
A |- (!x. (!y. (((vector_add x) y) = (lambdai. ((real_add (x $ i)) (y $ i))))))
T c= cvector_add f0 f1 clambda / creal_add c$ f0 b0 c$ f1 b0
D vector_sub
A |- (!x. (!y. (((vector_sub x) y) = (lambdai. ((real_sub (x $ i)) (y $ i))))))
T c= cvector_sub f0 f1 clambda / creal_sub c$ f0 b0 c$ f1 b0
D vector_neg
A |- (!x. ((vector_neg x) = (lambdai. (real_neg (x $ i)))))
T c= cvector_neg f0 clambda / creal_neg c$ f0 b0
D vector_mul
A |- (!c. (!x. (((% c) x) = (lambdai. ((real_mul c) (x $ i))))))
T c= c% f0 f1 clambda / creal_mul f0 c$ f1 b0
D vec
A |- (!n. ((vec n) = (lambdai. (real_of_num n))))
T c= cvec f0 clambda / creal_of_num f0
D VECTOR_ADD_RID
A |- (!x. (((vector_add x) (vec (NUMERAL _0))) = x))
T c= cvector_add f0 cvec cNUMERAL c_0 f0
D VECTOR_SUB_EQ
A |- (!x. (!y. ((((vector_sub x) y) = (vec (NUMERAL _0))) = (x = y))))
T c= c= cvector_sub f0 f1 cvec cNUMERAL c_0 c= f0 f1
D VECTOR_SUB
A |- (((vector_sub x) y) = ((vector_add x) (vector_neg y)))
T c= cvector_sub f0 f1 cvector_add f0 cvector_neg f1
D dist
A |- (!x. (!y. ((distance (x , y)) = (vector_norm ((vector_sub x) y)))))
T c= cdistance c, f0 f1 cvector_norm cvector_sub f0 f1
D NORM_0
A |- ((vector_norm (vec (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= cvector_norm cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0
D NORM_POS_LE
A |- (!x. ((real_le (real_of_num (NUMERAL _0))) (vector_norm x)))
T creal_le creal_of_num cNUMERAL c_0 cvector_norm f0
D NORM_MUL
A |- (!a. (!x. ((vector_norm ((% a) x)) = ((real_mul (real_abs a)) (vector_norm x)))))
T c= cvector_norm c% f0 f1 creal_mul creal_abs f0 cvector_norm f1
D NORM_LE_0
A |- (!x. (((real_le (vector_norm x)) (real_of_num (NUMERAL _0))) = (x = (vec (NUMERAL _0)))))
T c= creal_le cvector_norm f0 creal_of_num cNUMERAL c_0 c= f0 cvec cNUMERAL c_0
D NORM_TRIANGLE_LE
A |- (!x. (!y. (((real_le ((real_add (vector_norm x)) (vector_norm y))) e) ==> ((real_le (vector_norm ((vector_add x) y))) e))))
T c==> creal_le creal_add cvector_norm f0 cvector_norm f1 f2 creal_le cvector_norm cvector_add f0 f1 f2
D SPAN_INSERT_0
A |- (!s. ((span ((vec (NUMERAL _0)) INSERT s)) = (span s)))
T c= * part cspan * * part cINSERT cvec cNUMERAL c_0 f0 * part cspan f0
D DIM_LE_CARD
A |- (!s. ((FINITE s) ==> ((dim s) <= (CARD s))))
T c==> cFINITE f0 c<= cdim f0 cCARD f0
D DIM_SPAN
A |- (!s. ((dim (span s)) = (dim s)))
T c= cdim * part cspan f0 cdim f0
D between
A |- (!a. (!x. (!b. (((between x) (a , b)) = ((distance (a , b)) = ((real_add (distance (a , x))) (distance (x , b))))))))
T c= cbetween f0 c, f1 f2 c= cdistance c, f1 f2 creal_add cdistance c, f1 f0 cdistance c, f0 f2
D midpoint
A |- (!a. (!b. ((midpoint (a , b)) = ((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add a) b)))))
T c= cmidpoint c, f0 f1 c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f0 f1
D MEM_TRANSLATION
A |- (!a. (!x. (!l. (((MEM ((vector_add a) x)) ((MAP (\x. ((vector_add a) x))) l)) = ((MEM x) l)))))
T c= cMEM cvector_add f0 f1 cMAP / cvector_add f0 b0 f2 cMEM f1 f2
D QUANTIFY_SURJECTION_HIGHER_THM
A |- (!f. ((!y. (?x. ((f x) = y))) ==> (((!P. ((!x. (P x)) = (!x. (P (f x))))) /\ ((!P. ((?x. (P x)) = (?x. (P (f x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE f) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE f) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE f)) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE f)) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P (f o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P (f o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P (f o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P (f o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP f) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP f) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%238. (?x. (((SETSPEC GEN%PVAR%238) (P x)) x)))) = ((IMAGE f) (GSPEC (\GEN%PVAR%239. (?x. (((SETSPEC GEN%PVAR%239) (P (f x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%240. (?s. (((SETSPEC GEN%PVAR%240) (Q s)) s)))) = ((IMAGE (IMAGE f)) (GSPEC (\GEN%PVAR%241. (?s. (((SETSPEC GEN%PVAR%241) (Q ((IMAGE f) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%242. (?l. (((SETSPEC GEN%PVAR%242) (R l)) l)))) = ((IMAGE (MAP f)) (GSPEC (\GEN%PVAR%243. (?l. (((SETSPEC GEN%PVAR%243) (R ((MAP f) l))) l))))))))))))
T c==> ! c? / c= * f0 b1 b0 c/\ c/\ ! c= ! * b0 b1 ! * b0 * f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co f0 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP f0 b1 ! c= c? / * b0 b1 c? / * b0 cMAP f0 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE f0 * part cGSPEC / c? / cSETSPEC b1 * b0 * f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE f0 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE f0 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP f0 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP f0 b2 b2
D COLLINEAR_TRANSLATION_EQ
A |- (!a. (!s. ((collinear ((IMAGE (\x. ((vector_add a) x))) s)) = (collinear s))))
T c= ccollinear * * part cIMAGE / cvector_add f0 b0 f1 ccollinear f1
D BALL_TRANSLATION
A |- (!a. (!x. (!r. ((ball (((vector_add a) x) , r)) = ((IMAGE (\y. ((vector_add a) y))) (ball (x , r)))))))
T c= * part cball c, cvector_add f0 f1 f2 * * part cIMAGE / cvector_add f0 b0 * part cball c, f1 f2
D CBALL_TRANSLATION
A |- (!a. (!x. (!r. ((cball (((vector_add a) x) , r)) = ((IMAGE (\y. ((vector_add a) y))) (cball (x , r)))))))
T c= * part ccball c, cvector_add f0 f1 f2 * * part cIMAGE / cvector_add f0 b0 * part ccball c, f1 f2
D SPHERE_TRANSLATION
A |- (!a. (!x. (!r. ((sphere (((vector_add a) x) , r)) = ((IMAGE (\y. ((vector_add a) y))) (sphere (x , r)))))))
T c= * part csphere c, cvector_add f0 f1 f2 * * part cIMAGE / cvector_add f0 b0 * part csphere c, f1 f2
D OPEN_IN_TRANSLATION_EQ
A |- (!a. (!s. (!t. (((open_in ((subtopology euclidean) ((IMAGE (\x. ((vector_add a) x))) t))) ((IMAGE (\x. ((vector_add a) x))) s)) = ((open_in ((subtopology euclidean) t)) s)))))
T c= copen_in csubtopology ceuclidean * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 copen_in csubtopology ceuclidean f1 f2
D CLOSED_IN_TRANSLATION_EQ
A |- (!a. (!s. (!t. (((closed_in ((subtopology euclidean) ((IMAGE (\x. ((vector_add a) x))) t))) ((IMAGE (\x. ((vector_add a) x))) s)) = ((closed_in ((subtopology euclidean) t)) s)))))
T c= cclosed_in csubtopology ceuclidean * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 cclosed_in csubtopology ceuclidean f1 f2
D SEGMENT_TRANSLATION
A |- ((!c. (!a. (!b. ((closed_segment ((CONS (((vector_add c) a) , ((vector_add c) b))) NIL)) = ((IMAGE (\x. ((vector_add c) x))) (closed_segment ((CONS (a , b)) NIL))))))) /\ (!c. (!a. (!b. ((open_segment (((vector_add c) a) , ((vector_add c) b))) = ((IMAGE (\x. ((vector_add c) x))) (open_segment (a , b))))))))
T c/\ ! ! ! c= * part cclosed_segment cCONS c, cvector_add b0 b1 cvector_add b0 b2 cNIL * * part cIMAGE / cvector_add b0 b3 * part cclosed_segment cCONS c, b1 b2 cNIL ! ! ! c= * part copen_segment c, cvector_add b0 b1 cvector_add b0 b2 * * part cIMAGE / cvector_add b0 b3 * part copen_segment c, b1 b2
D BOUNDED_TRANSLATION_EQ
A |- (!a. (!s. ((bounded ((IMAGE (\x. ((vector_add a) x))) s)) = (bounded s))))
T c= cbounded * * part cIMAGE / cvector_add f0 b0 f1 cbounded f1
D COMPACT_TRANSLATION_EQ
A |- (!a. (!s. ((compact ((IMAGE (\x. ((vector_add a) x))) s)) = (compact s))))
T c= ccompact * * part cIMAGE / cvector_add f0 b0 f1 ccompact f1
D CONNECTED_TRANSLATION_EQ
A |- (!a. (!s. ((connected ((IMAGE (\x. ((vector_add a) x))) s)) = (connected s))))
T c= cconnected * * part cIMAGE / cvector_add f0 b0 f1 cconnected f1
D CONTINUOUS_AT_TRANSLATION
A |- (!a. (!z. (!f. (((continuous f) (at ((vector_add a) z))) = ((continuous (\x. (f ((vector_add a) x)))) (at z))))))
T c= ccontinuous f0 cat cvector_add f1 f2 ccontinuous / * f0 cvector_add f1 b0 cat f2
D OPEN_TRANSLATION_EQ
A |- (!a. (!s. ((open ((IMAGE (\x. ((vector_add a) x))) s)) = (open s))))
T c= copen * * part cIMAGE / cvector_add f0 b0 f1 copen f1
D INTERIOR_TRANSLATION
A |- (!a. (!s. ((interior ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (interior s)))))
T c= * part cinterior * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 * part cinterior f1
D CONNECTED_COMPONENT_TRANSLATION
A |- (!a. (!s. (!x. (((connected_component ((IMAGE (\x. ((vector_add a) x))) s)) ((vector_add a) x)) = ((IMAGE (\x. ((vector_add a) x))) ((connected_component s) x))))))
T c= * * part cconnected_component * * part cIMAGE / cvector_add f0 b0 f1 cvector_add f0 f2 * * part cIMAGE / cvector_add f0 b0 * * part cconnected_component f1 f2
D COMPONENTS_TRANSLATION
A |- (!a. (!s. ((components ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (components s)))))
T c= * part ccomponents * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 * part ccomponents f1
D DIAMETER_TRANSLATION
A |- (!a. (!s. ((diameter ((IMAGE (\x. ((vector_add a) x))) s)) = (diameter s))))
T c= cdiameter * * part cIMAGE / cvector_add f0 b0 f1 cdiameter f1
D CLOSED_TRANSLATION_EQ
A |- (!a. (!s. ((closed ((IMAGE (\x. ((vector_add a) x))) s)) = (closed s))))
T c= cclosed * * part cIMAGE / cvector_add f0 b0 f1 cclosed f1
D COMPLETE_TRANSLATION_EQ
A |- (!a. (!s. ((complete ((IMAGE (\x. ((vector_add a) x))) s)) = (complete s))))
T c= ccomplete * * part cIMAGE / cvector_add f0 b0 f1 ccomplete f1
D CLOSURE_TRANSLATION
A |- (!a. (!s. ((closure ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (closure s)))))
T c= * part cclosure * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 * part cclosure f1
D FRONTIER_TRANSLATION
A |- (!a. (!s. ((frontier ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (frontier s)))))
T c= * part cfrontier * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 * part cfrontier f1
D INTERVAL_TRANSLATION
A |- ((!c. (!a. (!b. ((closed_interval ((CONS (((vector_add c) a) , ((vector_add c) b))) NIL)) = ((IMAGE (\x. ((vector_add c) x))) (closed_interval ((CONS (a , b)) NIL))))))) /\ (!c. (!a. (!b. ((open_interval (((vector_add c) a) , ((vector_add c) b))) = ((IMAGE (\x. ((vector_add c) x))) (open_interval (a , b))))))))
T c/\ ! ! ! c= * part cclosed_interval cCONS c, cvector_add b0 b1 cvector_add b0 b2 cNIL * * part cIMAGE / cvector_add b0 b3 * part cclosed_interval cCONS c, b1 b2 cNIL ! ! ! c= * part copen_interval c, cvector_add b0 b1 cvector_add b0 b2 * * part cIMAGE / cvector_add b0 b3 * part copen_interval c, b1 b2
D IS_INTERVAL_TRANSLATION_EQ
A |- (!a. (!s. ((is_interval ((IMAGE (\x. ((vector_add a) x))) s)) = (is_interval s))))
T c= cis_interval * * part cIMAGE / cvector_add f0 b0 f1 cis_interval f1
D HOMEOMORPHIC_TRANSLATION_LEFT_EQ
A |- (!a. (!s. (!t. (((homeomorphic ((IMAGE (\x. ((vector_add a) x))) s)) t) = ((homeomorphic s) t)))))
T c= chomeomorphic * * part cIMAGE / cvector_add f0 b0 f1 f2 chomeomorphic f1 f2
D HOMEOMORPHIC_TRANSLATION_RIGHT_EQ
A |- (!a. (!s. (!t. (((homeomorphic s) ((IMAGE (\x. ((vector_add a) x))) t)) = ((homeomorphic s) t)))))
T c= chomeomorphic f0 * * part cIMAGE / cvector_add f1 b0 f2 chomeomorphic f0 f2
D LIMPT_TRANSLATION_EQ
A |- (!a. (!s. (!x. (((limit_point_of ((vector_add a) x)) ((IMAGE (\y. ((vector_add a) y))) s)) = ((limit_point_of x) s)))))
T c= climit_point_of cvector_add f0 f1 * * part cIMAGE / cvector_add f0 b0 f2 climit_point_of f1 f2
D SETDIST_TRANSLATION
A |- (!a. (!s. (!t. ((setdist (((IMAGE (\x. ((vector_add a) x))) s) , ((IMAGE (\x. ((vector_add a) x))) t))) = (setdist (s , t))))))
T c= csetdist c, * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 csetdist c, f1 f2
D HAUSDIST_TRANSLATION
A |- (!a. (!s. (!t. ((hausdist (((IMAGE (\x. ((vector_add a) x))) s) , ((IMAGE (\x. ((vector_add a) x))) t))) = (hausdist (s , t))))))
T c= chausdist c, * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 chausdist c, f1 f2
D LOCALLY_COMPACT_TRANSLATION_EQ
A |- (!a. (!s. (((locally compact) ((IMAGE (\x. ((vector_add a) x))) s)) = ((locally compact) s))))
T c= clocally part ccompact * * part cIMAGE / cvector_add f0 b0 f1 clocally part ccompact f1
D GDELTA_TRANSLATION
A |- (!a. (!s. ((gdelta ((IMAGE (\x. ((vector_add a) x))) s)) = (gdelta s))))
T c= cgdelta * * part cIMAGE / cvector_add f0 b0 f1 cgdelta f1
D FSIGMA_TRANSLATION
A |- (!a. (!s. ((fsigma ((IMAGE (\x. ((vector_add a) x))) s)) = (fsigma s))))
T c= cfsigma * * part cIMAGE / cvector_add f0 b0 f1 cfsigma f1
D BOREL_TRANSLATION
A |- (!a. (!s. ((borel ((IMAGE (\x. ((vector_add a) x))) s)) = (borel s))))
T c= cborel * * part cIMAGE / cvector_add f0 b0 f1 cborel f1
D AFFINE_TRANSLATION_EQ
A |- (!a. (!s. ((affine ((IMAGE (\x. ((vector_add a) x))) s)) = (affine s))))
T c= caffine * * part cIMAGE / cvector_add f0 b0 f1 caffine f1
D AFFINE_HULL_TRANSLATION
A |- (!a. (!s. (((hull affine) ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) ((hull affine) s)))))
T c= * * part chull part caffine * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 * * part chull part caffine f1
D AFFINE_HULL_EMPTY
A |- (((hull affine) EMPTY) = EMPTY)
T c= * * part chull part caffine part cEMPTY part cEMPTY
D CONVEX_TRANSLATION_EQ
A |- (!a. (!s. ((convex ((IMAGE (\x. ((vector_add a) x))) s)) = (convex s))))
T c= cconvex * * part cIMAGE / cvector_add f0 b0 f1 cconvex f1
D AFFINE_DEPENDENT_TRANSLATION_EQ
A |- (!a. (!s. ((affine_dependent ((IMAGE (\x. ((vector_add a) x))) s)) = (affine_dependent s))))
T c= caffine_dependent * * part cIMAGE / cvector_add f0 b0 f1 caffine_dependent f1
D COPLANAR_TRANSLATION_EQ
A |- (!a. (!s. ((coplanar ((IMAGE (\x. ((vector_add a) x))) s)) = (coplanar s))))
T c= ccoplanar * * part cIMAGE / cvector_add f0 b0 f1 ccoplanar f1
D AFFINE_HULL_EQ_SPAN
A |- (!s. (((vec (NUMERAL _0)) IN ((hull affine) s)) ==> (((hull affine) s) = (span s))))
T c==> cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c= * * part chull part caffine f0 * part cspan f0
D AFF_DIM_TRANSLATION_EQ
A |- (!a. (!s. ((aff_dim ((IMAGE (\x. ((vector_add a) x))) s)) = (aff_dim s))))
T c= caff_dim * * part cIMAGE / cvector_add f0 b0 f1 caff_dim f1
D CONVEX_HULL_TRANSLATION
A |- (!a. (!s. (((hull convex) ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) ((hull convex) s)))))
T c= * * part chull part cconvex * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 * * part chull part cconvex f1
D STARLIKE_TRANSLATION_EQ
A |- (!a. (!s. ((starlike ((IMAGE (\x. ((vector_add a) x))) s)) = (starlike s))))
T c= cstarlike * * part cIMAGE / cvector_add f0 b0 f1 cstarlike f1
D RELATIVE_INTERIOR_TRANSLATION
A |- (!a. (!s. ((relative_interior ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (relative_interior s)))))
T c= * part crelative_interior * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 * part crelative_interior f1
D RELATIVE_FRONTIER_TRANSLATION
A |- (!a. (!s. ((relative_frontier ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (relative_frontier s)))))
T c= * part crelative_frontier * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 * part crelative_frontier f1
D BARYCENTRE_TRANSLATION
A |- (!a. (!s. ((barycentre ((IMAGE (\x. ((vector_add a) x))) s)) = ((vector_add (((COND ((FINITE s) /\ (~ (s = EMPTY)))) a) (vec (NUMERAL _0)))) (barycentre s)))))
T c= cbarycentre * * part cIMAGE / cvector_add f0 b0 f1 cvector_add cCOND c/\ cFINITE f1 c~ c= f1 part cEMPTY f0 cvec cNUMERAL c_0 cbarycentre f1
D PATH_TRANSLATION_EQ
A |- (!a. (!g. ((path ((\x. ((vector_add a) x)) o g)) = (path g))))
T c= cpath * * part co / cvector_add f0 b0 f1 cpath f1
D PATHSTART_TRANSLATION
A |- (!a. (!g. ((pathstart ((\x. ((vector_add a) x)) o g)) = ((vector_add a) (pathstart g)))))
T c= cpathstart * * part co / cvector_add f0 b0 f1 cvector_add f0 cpathstart f1
D PATHFINISH_TRANSLATION
A |- (!a. (!g. ((pathfinish ((\x. ((vector_add a) x)) o g)) = ((vector_add a) (pathfinish g)))))
T c= cpathfinish * * part co / cvector_add f0 b0 f1 cvector_add f0 cpathfinish f1
D PATH_IMAGE_TRANSLATION
A |- (!a. (!g. ((path_image ((\x. ((vector_add a) x)) o g)) = ((IMAGE (\x. ((vector_add a) x))) (path_image g)))))
T c= * part cpath_image * * part co / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 * part cpath_image f1
D REVERSEPATH_TRANSLATION
A |- (!a. (!g. ((reversepath ((\x. ((vector_add a) x)) o g)) = ((\x. ((vector_add a) x)) o (reversepath g)))))
T c= * part creversepath * * part co / cvector_add f0 b0 f1 * * part co / cvector_add f0 b0 * part creversepath f1
D JOINPATHS_TRANSLATION
A |- (!a. (!g1. (!g2. (((++ ((\x. ((vector_add a) x)) o g1)) ((\x. ((vector_add a) x)) o g2)) = ((\x. ((vector_add a) x)) o ((++ g1) g2))))))
T c= * * part c++ * * part co / cvector_add f0 b0 f1 * * part co / cvector_add f0 b0 f2 * * part co / cvector_add f0 b0 * * part c++ f1 f2
D SIMPLE_PATH_TRANSLATION_EQ
A |- (!a. (!g. ((simple_path ((\x. ((vector_add a) x)) o g)) = (simple_path g))))
T c= csimple_path * * part co / cvector_add f0 b0 f1 csimple_path f1
D ARC_TRANSLATION_EQ
A |- (!a. (!g. ((arc ((\x. ((vector_add a) x)) o g)) = (arc g))))
T c= carc * * part co / cvector_add f0 b0 f1 carc f1
D SHIFTPATH_TRANSLATION
A |- (!a. (!t. (!g. (((shiftpath t) ((\x. ((vector_add a) x)) o g)) = ((\x. ((vector_add a) x)) o ((shiftpath t) g))))))
T c= * * part cshiftpath f0 * * part co / cvector_add f1 b0 f2 * * part co / cvector_add f1 b0 * * part cshiftpath f0 f2
D SUBPATH_TRANSLATION
A |- (!a. (!g. (!u. (!v. ((((subpath u) v) ((\x. ((vector_add a) x)) o g)) = ((\x. ((vector_add a) x)) o (((subpath u) v) g)))))))
T c= * * * part csubpath f0 f1 * * part co / cvector_add f2 b0 f3 * * part co / cvector_add f2 b0 * * * part csubpath f0 f1 f3
D LINEPATH_TRANSLATION
A |- (!a. (!b. (!c. ((linepath (((vector_add a) b) , ((vector_add a) c))) = ((\x. ((vector_add a) x)) o (linepath (b , c)))))))
T c= * part clinepath c, cvector_add f0 f1 cvector_add f0 f2 * * part co / cvector_add f0 b0 * part clinepath c, f1 f2
D PATH_COMPONENT_TRANSLATION
A |- (!a. (!s. (!x. (((path_component ((IMAGE (\x. ((vector_add a) x))) s)) ((vector_add a) x)) = ((IMAGE (\x. ((vector_add a) x))) ((path_component s) x))))))
T c= * * part cpath_component * * part cIMAGE / cvector_add f0 b0 f1 cvector_add f0 f2 * * part cIMAGE / cvector_add f0 b0 * * part cpath_component f1 f2
D PATH_CONNECTED_TRANSLATION_EQ
A |- (!a. (!s. ((path_connected ((IMAGE (\x. ((vector_add a) x))) s)) = (path_connected s))))
T c= cpath_connected * * part cIMAGE / cvector_add f0 b0 f1 cpath_connected f1
D LOCALLY_PATH_CONNECTED_TRANSLATION_EQ
A |- (!a. (!s. (((locally path_connected) ((IMAGE (\x. ((vector_add a) x))) s)) = ((locally path_connected) s))))
T c= clocally part cpath_connected * * part cIMAGE / cvector_add f0 b0 f1 clocally part cpath_connected f1
D LOCALLY_CONNECTED_TRANSLATION_EQ
A |- (!a. (!s. (((locally connected) ((IMAGE (\x. ((vector_add a) x))) s)) = ((locally connected) s))))
T c= clocally part cconnected * * part cIMAGE / cvector_add f0 b0 f1 clocally part cconnected f1
D INSIDE_TRANSLATION
A |- (!a. (!s. ((inside ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (inside s)))))
T c= * part cinside * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 * part cinside f1
D OUTSIDE_TRANSLATION
A |- (!a. (!s. ((outside ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (outside s)))))
T c= * part coutside * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 * part coutside f1
D SIMPLY_CONNECTED_TRANSLATION
A |- (!a. (!s. ((simply_connected ((IMAGE (\x. ((vector_add a) x))) s)) = (simply_connected s))))
T c= csimply_connected * * part cIMAGE / cvector_add f0 b0 f1 csimply_connected f1
D HOMOTOPY_EQUIVALENT_TRANSLATION_LEFT_EQ
A |- (!a. (!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add a) x))) s)) t) = ((homotopy_equivalent s) t)))))
T c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b0 f1 f2 chomotopy_equivalent f1 f2
D HOMOTOPY_EQUIVALENT_TRANSLATION_RIGHT_EQ
A |- (!a. (!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add a) x))) t)) = ((homotopy_equivalent s) t)))))
T c= chomotopy_equivalent f0 * * part cIMAGE / cvector_add f1 b0 f2 chomotopy_equivalent f0 f2
D CONTRACTIBLE_TRANSLATION
A |- (!a. (!s. ((contractible ((IMAGE (\x. ((vector_add a) x))) s)) = (contractible s))))
T c= ccontractible * * part cIMAGE / cvector_add f0 b0 f1 ccontractible f1
D FACE_OF_TRANSLATION_EQ
A |- (!a. (!f. (!s. (((face_of ((IMAGE (\x. ((vector_add a) x))) f)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((face_of f) s)))))
T c= cface_of * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 cface_of f1 f2
D EXPOSED_FACE_OF_TRANSLATION_EQ
A |- (!a. (!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add a) x))) f)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((exposed_face_of f) s)))))
T c= cexposed_face_of * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 cexposed_face_of f1 f2
D EXTREME_POINT_OF_TRANSLATION_EQ
A |- (!a. (!x. (!s. (((extreme_point_of ((vector_add a) x)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((extreme_point_of x) s)))))
T c= cextreme_point_of cvector_add f0 f1 * * part cIMAGE / cvector_add f0 b0 f2 cextreme_point_of f1 f2
D FACET_OF_TRANSLATION_EQ
A |- (!a. (!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add a) x))) f)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((facet_of f) s)))))
T c= cfacet_of * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 cfacet_of f1 f2
D EDGE_OF_TRANSLATION_EQ
A |- (!a. (!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add a) x))) f)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((edge_of f) s)))))
T c= cedge_of * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 cedge_of f1 f2
D POLYTOPE_TRANSLATION_EQ
A |- (!a. (!s. ((polytope ((IMAGE (\x. ((vector_add a) x))) s)) = (polytope s))))
T c= cpolytope * * part cIMAGE / cvector_add f0 b0 f1 cpolytope f1
D POLYHEDRON_TRANSLATION_EQ
A |- (!a. (!s. ((polyhedron ((IMAGE (\x. ((vector_add a) x))) s)) = (polyhedron s))))
T c= cpolyhedron * * part cIMAGE / cvector_add f0 b0 f1 cpolyhedron f1
D SIMPLEX_TRANSLATION_EQ
A |- (!a. (!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add a) x))) s)) = ((simplex n) s)))))
T c= csimplex f0 * * part cIMAGE / cvector_add f1 b0 f2 csimplex f0 f2
D SIMPLICIAL_COMPLEX_TRANSLATION
A |- (!a. (!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add a) x)))) tr)) = (simplicial_complex tr))))
T c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 csimplicial_complex f1
D TRIANGULATION_TRANSLATION
A |- (!a. (!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add a) x)))) tr)) = (triangulation tr))))
T c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 ctriangulation f1
D RETRACT_OF_TRANSLATION_EQ
A |- (!a. (!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add a) x))) t)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((retract_of t) s)))))
T c= cretract_of * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 cretract_of f1 f2
D AR_TRANSLATION
A |- (!a. (!s. ((AR ((IMAGE (\x. ((vector_add a) x))) s)) = (AR s))))
T c= cAR * * part cIMAGE / cvector_add f0 b0 f1 cAR f1
D ANR_TRANSLATION
A |- (!a. (!s. ((ANR ((IMAGE (\x. ((vector_add a) x))) s)) = (ANR s))))
T c= cANR * * part cIMAGE / cvector_add f0 b0 f1 cANR f1
D ENR_TRANSLATION
A |- (!a. (!s. ((ENR ((IMAGE (\x. ((vector_add a) x))) s)) = (ENR s))))
T c= cENR * * part cIMAGE / cvector_add f0 b0 f1 cENR f1
D NEGLIGIBLE_EMPTY
A |- (negligible EMPTY)
T cnegligible part cEMPTY
D RECTIFIABLE_PATH_TRANSLATION_EQ
A |- (!a. (!g. ((rectifiable_path ((\x. ((vector_add a) x)) o g)) = (rectifiable_path g))))
T c= crectifiable_path * * part co / cvector_add f0 b0 f1 crectifiable_path f1
D PATH_LENGTH_TRANSLATION
A |- (!a. (!g. ((path_length ((\x. ((vector_add a) x)) o g)) = (path_length g))))
T c= cpath_length * * part co / cvector_add f0 b0 f1 cpath_length f1
D HAS_MEASURE_TRANSLATION_EQ
A |- (!a. (!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add a) x))) s)) m) = ((has_measure s) m)))))
T c= chas_measure * * part cIMAGE / cvector_add f0 b0 f1 f2 chas_measure f1 f2
D MEASURE_TRANSLATION
A |- (!a. (!s. ((measure ((IMAGE (\x. ((vector_add a) x))) s)) = (measure s))))
T c= cmeasure * * part cIMAGE / cvector_add f0 b0 f1 cmeasure f1
D NEGLIGIBLE_TRANSLATION_EQ
A |- (!a. (!s. ((negligible ((IMAGE (\x. ((vector_add a) x))) s)) = (negligible s))))
T c= cnegligible * * part cIMAGE / cvector_add f0 b0 f1 cnegligible f1
D MEASURABLE_TRANSLATION_EQ
A |- (!a. (!s. ((measurable ((IMAGE (\x. ((vector_add a) x))) s)) = (measurable s))))
T c= cmeasurable * * part cIMAGE / cvector_add f0 b0 f1 cmeasurable f1
D NEGLIGIBLE_LOWDIM
A |- (!s. (((dim s) < (dimindex UNIV)) ==> (negligible s)))
T c==> c< cdim f0 cdimindex part cUNIV cnegligible f0
- (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) |- (((!s. (!x. ((~ (FINITE (x INSERT s))) \/ (FINITE s)))) ==> ((\s. (!x. ((~ (FINITE (x INSERT s))) \/ (FINITE s)))) _1772464)) = ((\s. (!x. ((~ (FINITE (x INSERT s))) \/ (FINITE s)))) _1772464))
T c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c= c==> ! ! c\/ c~ cFINITE * * part cINSERT b1 b0 cFINITE b0 * / ! c\/ c~ cFINITE * * part cINSERT b1 b0 cFINITE b0 f0 * / ! c\/ c~ cFINITE * * part cINSERT b1 b0 cFINITE b0 f0
+ |- (((!a. (!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add a) x)))) tr)) = (triangulation tr)))) ==> ((\a. (!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add a) x)))) tr)) = (triangulation tr)))) orig)) = ((\a. (!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add a) x)))) tr)) = (triangulation tr)))) orig))
T c= c==> ! ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 ctriangulation b1 * / ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 ctriangulation b1 f0 * / ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 ctriangulation b1 f0
- (orig = orig) |- (((!t. (((open_in ((subtopology euclidean) ((IMAGE (\x. ((vector_add orig) x))) t))) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((open_in ((subtopology euclidean) t)) s))) ==> ((\t. (((open_in ((subtopology euclidean) ((IMAGE (\x. ((vector_add orig) x))) t))) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((open_in ((subtopology euclidean) t)) s))) t)) = ((\t. (((open_in ((subtopology euclidean) ((IMAGE (\x. ((vector_add orig) x))) t))) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((open_in ((subtopology euclidean) t)) s))) t))
T c==> c= f0 f0 c= c==> ! c= copen_in csubtopology ceuclidean * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 f1 copen_in csubtopology ceuclidean b0 f1 * / c= copen_in csubtopology ceuclidean * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 f1 copen_in csubtopology ceuclidean b0 f1 f2 * / c= copen_in csubtopology ceuclidean * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 f1 copen_in csubtopology ceuclidean b0 f1 f2
- (orig = orig) |- (((!u. ((UNIONS ((IMAGE (IMAGE (\y. ((vector_add orig) y)))) u)) = ((IMAGE (\y. ((vector_add orig) y))) (UNIONS u)))) ==> ((\u. ((UNIONS ((IMAGE (IMAGE (\y. ((vector_add orig) y)))) u)) = ((IMAGE (\y. ((vector_add orig) y))) (UNIONS u)))) u)) = ((\u. ((UNIONS ((IMAGE (IMAGE (\y. ((vector_add orig) y)))) u)) = ((IMAGE (\y. ((vector_add orig) y))) (UNIONS u)))) u))
T c==> c= f0 f0 c= c==> ! c= * part cUNIONS * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cUNIONS b0 * / c= * part cUNIONS * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cUNIONS b0 f1 * / c= * part cUNIONS * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cUNIONS b0 f1
- (orig = orig) |- ((s <_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s <_c t))
T c==> c= f0 f0 c= c<_c f1 * * part cIMAGE / cvector_add f0 b0 f2 c<_c f1 f2
- (orig = orig) |- ((simple_path ((\x. ((vector_add orig) x)) o g)) = (simple_path g))
T c==> c= f0 f0 c= csimple_path * * part co / cvector_add f0 b0 f1 csimple_path f1
- (orig = orig) |- ((cball (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (cball (x , r))))
T c==> c= f0 f0 c= * part ccball c, cvector_add f0 f1 f2 * * part cIMAGE / cvector_add f0 b0 * part ccball c, f1 f2
- (orig = orig) |- (((!y. (!z. (((between ((vector_add orig) x)) (((vector_add orig) y) , ((vector_add orig) z))) = ((between x) (y , z))))) ==> ((\y. (!z. (((between ((vector_add orig) x)) (((vector_add orig) y) , ((vector_add orig) z))) = ((between x) (y , z))))) y)) = ((\y. (!z. (((between ((vector_add orig) x)) (((vector_add orig) y) , ((vector_add orig) z))) = ((between x) (y , z))))) y))
T c==> c= f0 f0 c= c==> ! ! c= cbetween cvector_add f0 f1 c, cvector_add f0 b0 cvector_add f0 b1 cbetween f1 c, b0 b1 * / ! c= cbetween cvector_add f0 f1 c, cvector_add f0 b0 cvector_add f0 b1 cbetween f1 c, b0 b1 f2 * / ! c= cbetween cvector_add f0 f1 c, cvector_add f0 b0 cvector_add f0 b1 cbetween f1 c, b0 b1 f2
+ |- (!s. ((COUNTABLE ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (COUNTABLE s)))
T c= cCOUNTABLE * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 cCOUNTABLE f1
- (orig = orig) |- (((!t. ((((IMAGE (\x. ((vector_add orig) x))) s) >=_c t) = (s >=_c t))) ==> ((\t. ((((IMAGE (\x. ((vector_add orig) x))) s) >=_c t) = (s >=_c t))) t)) = ((\t. ((((IMAGE (\x. ((vector_add orig) x))) s) >=_c t) = (s >=_c t))) t))
T c==> c= f0 f0 c= c==> ! c= c>=_c * * part cIMAGE / cvector_add f0 b1 f1 b0 c>=_c f1 b0 * / c= c>=_c * * part cIMAGE / cvector_add f0 b1 f1 b0 c>=_c f1 b0 f2 * / c= c>=_c * * part cIMAGE / cvector_add f0 b1 f1 b0 c>=_c f1 b0 f2
- (orig = orig) |- (((!t. ((hausdist (((IMAGE (\x. ((vector_add orig) x))) s) , ((IMAGE (\x. ((vector_add orig) x))) t))) = (hausdist (s , t)))) ==> ((\t. ((hausdist (((IMAGE (\x. ((vector_add orig) x))) s) , ((IMAGE (\x. ((vector_add orig) x))) t))) = (hausdist (s , t)))) t)) = ((\t. ((hausdist (((IMAGE (\x. ((vector_add orig) x))) s) , ((IMAGE (\x. ((vector_add orig) x))) t))) = (hausdist (s , t)))) t))
T c==> c= f0 f0 c= c==> ! c= chausdist c, * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 chausdist c, f1 b0 * / c= chausdist c, * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 chausdist c, f1 b0 f2 * / c= chausdist c, * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 chausdist c, f1 b0 f2
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((\P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) P)
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 * / c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 f1
- (FINITE s) |- ((FINITE s) = T)
T c==> cFINITE f0 c= cFINITE f0 cT
- |- ((_1772508 = _1772509) ==> ((negligible _1772509) \/ (~ (negligible _1772508))))
T c==> c= f0 f1 c\/ cnegligible f1 c~ cnegligible f0
+ |- ((\a. (!s. (!t. ((((IMAGE (\y. ((vector_add a) y))) s) = ((IMAGE (\y. ((vector_add a) y))) t)) = (s = t))))) orig)
T * / ! ! c= c= * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 c= b1 b2 f0
+ (orig = orig) |- ((!s. (!x. (((path_component ((IMAGE (\x. ((vector_add orig) x))) s)) ((vector_add orig) x)) = ((IMAGE (\x. ((vector_add orig) x))) ((path_component s) x))))) /\ ((!s. ((path_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (path_connected s))) /\ ((!s. (((locally path_connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally path_connected) s))) /\ ((!s. (((locally connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally connected) s))) /\ ((!s. ((inside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (inside s)))) /\ ((!s. ((outside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (outside s)))) /\ ((!s. ((simply_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (simply_connected s))) /\ ((!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homotopy_equivalent s) t)))) /\ ((!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) /\ ((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) /\ ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))))))))))))))))))))
T c==> c= f0 f0 c/\ ! ! c= * * part cpath_component * * part cIMAGE / cvector_add f0 b2 b0 cvector_add f0 b1 * * part cIMAGE / cvector_add f0 b2 * * part cpath_component b0 b1 c/\ ! c= cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 cpath_connected b0 c/\ ! c= clocally part cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cpath_connected b0 c/\ ! c= clocally part cconnected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cconnected b0 c/\ ! c= * part cinside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cinside b0 c/\ ! c= * part coutside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part coutside b0 c/\ ! c= csimply_connected * * part cIMAGE / cvector_add f0 b1 b0 csimply_connected b0 c/\ ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b2 b0 b1 chomotopy_equivalent b0 b1 c/\ ! ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 c/\ ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- (((!a. (!s. ((barycentre ((IMAGE (\x. ((vector_add a) x))) s)) = ((vector_add (((COND ((FINITE s) /\ (~ (s = EMPTY)))) a) (vec (NUMERAL _0)))) (barycentre s))))) ==> ((\a. (!s. ((barycentre ((IMAGE (\x. ((vector_add a) x))) s)) = ((vector_add (((COND ((FINITE s) /\ (~ (s = EMPTY)))) a) (vec (NUMERAL _0)))) (barycentre s))))) orig)) = ((\a. (!s. ((barycentre ((IMAGE (\x. ((vector_add a) x))) s)) = ((vector_add (((COND ((FINITE s) /\ (~ (s = EMPTY)))) a) (vec (NUMERAL _0)))) (barycentre s))))) orig))
T c= c==> ! ! c= cbarycentre * * part cIMAGE / cvector_add b0 b2 b1 cvector_add cCOND c/\ cFINITE b1 c~ c= b1 part cEMPTY b0 cvec cNUMERAL c_0 cbarycentre b1 * / ! c= cbarycentre * * part cIMAGE / cvector_add b0 b2 b1 cvector_add cCOND c/\ cFINITE b1 c~ c= b1 part cEMPTY b0 cvec cNUMERAL c_0 cbarycentre b1 f0 * / ! c= cbarycentre * * part cIMAGE / cvector_add b0 b2 b1 cvector_add cCOND c/\ cFINITE b1 c~ c= b1 part cEMPTY b0 cvec cNUMERAL c_0 cbarycentre b1 f0
- (orig = orig) |- ((distance (((vector_add orig) x) , ((vector_add orig) y))) = (distance (x , y)))
T c==> c= f0 f0 c= cdistance c, cvector_add f0 f1 cvector_add f0 f2 cdistance c, f1 f2
+ |- (((~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) ==> F) = (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s))))))))
T c= c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1
- (orig = orig) |- ((\s. (!t. ((s >=_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s >=_c t)))) s)
T c==> c= f0 f0 * / ! c= c>=_c b0 * * part cIMAGE / cvector_add f0 b2 b1 c>=_c b0 b1 f1
- (orig = orig) |- (!p. (!x. (!y. ((((COND p) ((vector_add orig) x)) ((vector_add orig) y)) = ((vector_add orig) (((COND p) x) y))))))
T c==> c= f0 f0 ! ! ! c= cCOND b0 cvector_add f0 b1 cvector_add f0 b2 cvector_add f0 cCOND b0 b1 b2
- (orig = orig) |- ((\s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) s)
T c==> c= f0 f0 * / c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 f1
- (orig = orig) |- (((!g. ((arc ((\x. ((vector_add orig) x)) o g)) = (arc g))) ==> ((\g. ((arc ((\x. ((vector_add orig) x)) o g)) = (arc g))) g)) = ((\g. ((arc ((\x. ((vector_add orig) x)) o g)) = (arc g))) g))
T c==> c= f0 f0 c= c==> ! c= carc * * part co / cvector_add f0 b1 b0 carc b0 * / c= carc * * part co / cvector_add f0 b1 b0 carc b0 f1 * / c= carc * * part co / cvector_add f0 b1 b0 carc b0 f1
- (orig = orig) |- ((\g. ((path_image ((\x. ((vector_add orig) x)) o g)) = ((IMAGE (\x. ((vector_add orig) x))) (path_image g)))) g)
T c==> c= f0 f0 * / c= * part cpath_image * * part co / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cpath_image b0 f1
+ |- ((\a. (!g. ((reversepath ((\x. ((vector_add a) x)) o g)) = ((\x. ((vector_add a) x)) o (reversepath g))))) orig)
T * / ! c= * part creversepath * * part co / cvector_add b0 b2 b1 * * part co / cvector_add b0 b2 * part creversepath b1 f0
+ (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- (((real_add (real_of_int _1772535)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772536))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c= creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (orig = orig) |- (!s. (!t. (((open_in ((subtopology euclidean) ((IMAGE (\x. ((vector_add orig) x))) t))) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((open_in ((subtopology euclidean) t)) s))))
T c==> c= f0 f0 ! ! c= copen_in csubtopology ceuclidean * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE / cvector_add f0 b2 b0 copen_in csubtopology ceuclidean b1 b0
- |- ((~ (_1772500 = _1772502)) \/ ((~ (_1772501 = _1772503)) \/ ((_1772502 HAS_SIZE _1772503) \/ (~ (_1772500 HAS_SIZE _1772501)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cHAS_SIZE f1 f3 c~ cHAS_SIZE f0 f2
+ |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
+ |- ((\x. ((x IN s) ==> (x IN ((hull P) s)))) x)
T * / c==> cIN b0 f0 cIN b0 * * part chull f1 f0 f2
- (orig = orig) |- ((pathfinish ((\x. ((vector_add orig) x)) o g)) = ((vector_add orig) (pathfinish g)))
T c==> c= f0 f0 c= cpathfinish * * part co / cvector_add f0 b0 f1 cvector_add f0 cpathfinish f1
+ |- (((!a. (!g. ((path_length ((\x. ((vector_add a) x)) o g)) = (path_length g)))) ==> ((\a. (!g. ((path_length ((\x. ((vector_add a) x)) o g)) = (path_length g)))) orig)) = ((\a. (!g. ((path_length ((\x. ((vector_add a) x)) o g)) = (path_length g)))) orig))
T c= c==> ! ! c= cpath_length * * part co / cvector_add b0 b2 b1 cpath_length b1 * / ! c= cpath_length * * part co / cvector_add b0 b2 b1 cpath_length b1 f0 * / ! c= cpath_length * * part co / cvector_add b0 b2 b1 cpath_length b1 f0
- |- ((((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))
T c= c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
+ |- (((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))) = ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))
T c= c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
- (_1772500 = _1772502), (_1772501 = _1772503) |- ((((_1772500 HAS_SIZE _1772501) = (_1772502 HAS_SIZE _1772503)) ==> ((_1772502 HAS_SIZE _1772503) \/ (~ (_1772500 HAS_SIZE _1772501)))) = ((_1772502 HAS_SIZE _1772503) \/ (~ (_1772500 HAS_SIZE _1772501))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cHAS_SIZE f0 f2 cHAS_SIZE f1 f3 c\/ cHAS_SIZE f1 f3 c~ cHAS_SIZE f0 f2 c\/ cHAS_SIZE f1 f3 c~ cHAS_SIZE f0 f2
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2
+ |- ((!orig. (!s. (!n. (((~ (orig IN s)) /\ (((orig INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (orig INSERT s))))))) = (!s. (!n. (((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s)))))))
T c= ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 ! ! c==> c/\ c~ cIN cvec cNUMERAL c_0 b0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 b0 b1 c<= b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 b0
- (orig = orig) |- (!s. (!t. (((homeomorphic s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homeomorphic s) t))))
T c==> c= f0 f0 ! ! c= chomeomorphic b0 * * part cIMAGE / cvector_add f0 b2 b1 chomeomorphic b0 b1
- ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- (~ (negligible ((hull affine) (x INSERT s))))
T c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0
+ |- (!s. (!n. (((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s))))))
T c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0
- (orig = orig) |- ((\s. ((((IMAGE (\x. ((vector_add orig) x))) x) IN ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (x IN s))) s)
T c==> c= f0 f0 * / c= cIN * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 cIN f1 b0 f2
- (orig = orig) |- (((!s. (!t. (((open_in ((subtopology euclidean) ((IMAGE (\x. ((vector_add orig) x))) t))) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((open_in ((subtopology euclidean) t)) s)))) ==> ((\s. (!t. (((open_in ((subtopology euclidean) ((IMAGE (\x. ((vector_add orig) x))) t))) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((open_in ((subtopology euclidean) t)) s)))) s)) = ((\s. (!t. (((open_in ((subtopology euclidean) ((IMAGE (\x. ((vector_add orig) x))) t))) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((open_in ((subtopology euclidean) t)) s)))) s))
T c==> c= f0 f0 c= c==> ! ! c= copen_in csubtopology ceuclidean * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE / cvector_add f0 b2 b0 copen_in csubtopology ceuclidean b1 b0 * / ! c= copen_in csubtopology ceuclidean * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE / cvector_add f0 b2 b0 copen_in csubtopology ceuclidean b1 b0 f1 * / ! c= copen_in csubtopology ceuclidean * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE / cvector_add f0 b2 b0 copen_in csubtopology ceuclidean b1 b0 f1
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((\Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) Q)
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 * / c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 f1
- (orig = orig) |- (((!s. ((((IMAGE (\x. ((vector_add orig) x))) x) IN ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (x IN s))) ==> ((\s. ((((IMAGE (\x. ((vector_add orig) x))) x) IN ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (x IN s))) s)) = ((\s. ((((IMAGE (\x. ((vector_add orig) x))) x) IN ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (x IN s))) s))
T c==> c= f0 f0 c= c==> ! c= cIN * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 cIN f1 b0 * / c= cIN * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 cIN f1 b0 f2 * / c= cIN * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 cIN f1 b0 f2
- (orig = orig) |- (!y. (((vector_sub ((vector_add orig) x)) ((vector_add orig) y)) = ((vector_sub x) y)))
T c==> c= f0 f0 ! c= cvector_sub cvector_add f0 f1 cvector_add f0 b0 cvector_sub f1 b0
- (orig = orig) |- (!s. ((connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (connected s)))
T c==> c= f0 f0 ! c= cconnected * * part cIMAGE / cvector_add f0 b1 b0 cconnected b0
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- (((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) ==> ((\P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) P)) = ((\P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) P))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c= c==> ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 * / c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 f1 * / c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 f1
+ |- ((\c. (!a. (!b. ((closed_segment ((CONS (((vector_add c) a) , ((vector_add c) b))) NIL)) = ((IMAGE (\x. ((vector_add c) x))) (closed_segment ((CONS (a , b)) NIL))))))) orig)
T * / ! ! c= * part cclosed_segment cCONS c, cvector_add b0 b1 cvector_add b0 b2 cNIL * * part cIMAGE / cvector_add b0 b3 * part cclosed_segment cCONS c, b1 b2 cNIL f0
- ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- ((~ (FINITE s)) ==> (FINITE s))
T c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c==> c~ cFINITE f0 cFINITE f0
+ |- (((!x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) ==> ((\x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) x)) = ((\x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) x))
T c= c==> ! ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 * / ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 f0 * / ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 f0
- (orig = orig) |- (((!s. ((collinear ((IMAGE (\x. ((vector_add orig) x))) s)) = (collinear s))) ==> ((\s. ((collinear ((IMAGE (\x. ((vector_add orig) x))) s)) = (collinear s))) s)) = ((\s. ((collinear ((IMAGE (\x. ((vector_add orig) x))) s)) = (collinear s))) s))
T c==> c= f0 f0 c= c==> ! c= ccollinear * * part cIMAGE / cvector_add f0 b1 b0 ccollinear b0 * / c= ccollinear * * part cIMAGE / cvector_add f0 b1 b0 ccollinear b0 f1 * / c= ccollinear * * part cIMAGE / cvector_add f0 b1 b0 ccollinear b0 f1
+ |- ((\a. (!s. ((inside ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (inside s))))) orig)
T * / ! c= * part cinside * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cinside b1 f0
- (orig = orig) |- (((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) ==> ((\g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) g)) = ((\g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) g))
T c==> c= f0 f0 c= c==> ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 * / c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 f1 * / c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 f1
- (orig = orig) |- (((!y. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add orig) x)) ((vector_add orig) y))) = ((vector_add orig) ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y))))) ==> ((\y. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add orig) x)) ((vector_add orig) y))) = ((vector_add orig) ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y))))) y)) = ((\y. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add orig) x)) ((vector_add orig) y))) = ((vector_add orig) ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y))))) y))
T c==> c= f0 f0 c= c==> ! c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add f0 f1 cvector_add f0 b0 cvector_add f0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f1 b0 * / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add f0 f1 cvector_add f0 b0 cvector_add f0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f1 b0 f2 * / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add f0 f1 cvector_add f0 b0 cvector_add f0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f1 b0 f2
- |- ((!s'. ((!x. (FINITE (x INSERT s'))) \/ (~ (FINITE s)))) = ((!s. (!x. (FINITE (x INSERT s)))) \/ (~ (FINITE s))))
T c= ! c\/ ! cFINITE * * part cINSERT b1 b0 c~ cFINITE f0 c\/ ! ! cFINITE * * part cINSERT b1 b0 c~ cFINITE f0
- (orig = orig) |- (!x. (!y. ((((vector_add orig) x) = ((vector_add orig) y)) = (x = y))))
T c==> c= f0 f0 ! ! c= c= cvector_add f0 b0 cvector_add f0 b1 c= b0 b1
- |- ((~ (_1772510 = _1772511)) \/ ((CARD _1772510) = (CARD _1772511)))
T c\/ c~ c= f0 f1 c= cCARD f0 cCARD f1
- (orig = orig) |- (((!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) ==> ((\s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) s)) = ((\s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) s))
T c==> c= f0 f0 c= c==> ! ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 * / ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 f1 * / ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 f1
- (orig = orig) |- ((\s. (((locally path_connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally path_connected) s))) s)
T c==> c= f0 f0 * / c= clocally part cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cpath_connected b0 f1
- (orig = orig) |- (!b. ((open_segment (((vector_add orig) a) , ((vector_add orig) b))) = ((IMAGE (\x. ((vector_add orig) x))) (open_segment (a , b)))))
T c==> c= f0 f0 ! c= * part copen_segment c, cvector_add f0 f1 cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b1 * part copen_segment c, f1 b0
- |- ((~ (_1772519 = _1772521)) \/ ((~ (_1772518 = _1772520)) \/ (((hull _1772518) _1772519) = ((hull _1772520) _1772521))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
+ |- ((\q'. (((FINITE s) = p') ==> ((p' ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = q')) ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = (p' ==> q'))))) q')
T * / c==> c= cFINITE f0 f1 c==> c==> f1 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 b0 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 c==> f1 b0 f3
- (orig = orig) |- ((\b. ((closed_segment ((CONS (((vector_add orig) a) , ((vector_add orig) b))) NIL)) = ((IMAGE (\x. ((vector_add orig) x))) (closed_segment ((CONS (a , b)) NIL))))) b)
T c==> c= f0 f0 * / c= * part cclosed_segment cCONS c, cvector_add f0 f1 cvector_add f0 b0 cNIL * * part cIMAGE / cvector_add f0 b1 * part cclosed_segment cCONS c, f1 b0 cNIL f2
+ |- (((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))) = ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))
T c= c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
- (orig = orig) |- ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))
T c==> c= f0 f0 c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 csimplicial_complex f1
- (orig = orig) |- (!s. (!t. ((hausdist (((IMAGE (\x. ((vector_add orig) x))) s) , ((IMAGE (\x. ((vector_add orig) x))) t))) = (hausdist (s , t)))))
T c==> c= f0 f0 ! ! c= chausdist c, * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 chausdist c, b0 b1
- (orig = orig) |- ((relative_frontier ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (relative_frontier s)))
T c==> c= f0 f0 c= * part crelative_frontier * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 * part crelative_frontier f1
- (orig = orig) |- (((!n. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) HAS_SIZE n) = (s HAS_SIZE n))) ==> ((\n. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) HAS_SIZE n) = (s HAS_SIZE n))) n)) = ((\n. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) HAS_SIZE n) = (s HAS_SIZE n))) n))
T c==> c= f0 f0 c= c==> ! c= cHAS_SIZE * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 b0 cHAS_SIZE f1 b0 * / c= cHAS_SIZE * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 b0 cHAS_SIZE f1 b0 f2 * / c= cHAS_SIZE * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 b0 cHAS_SIZE f1 b0 f2
- (orig = orig) |- ((\t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t))) t)
T c==> c= f0 f0 * / c= chomotopy_equivalent f1 * * part cIMAGE / cvector_add f0 b1 b0 chomotopy_equivalent f1 b0 f2
- (orig = orig) |- ((open_interval (((vector_add orig) a) , ((vector_add orig) b))) = ((IMAGE (\x. ((vector_add orig) x))) (open_interval (a , b))))
T c==> c= f0 f0 c= * part copen_interval c, cvector_add f0 f1 cvector_add f0 f2 * * part cIMAGE / cvector_add f0 b0 * part copen_interval c, f1 f2
- (orig = orig) |- (!t. ((hausdist (((IMAGE (\x. ((vector_add orig) x))) s) , ((IMAGE (\x. ((vector_add orig) x))) t))) = (hausdist (s , t))))
T c==> c= f0 f0 ! c= chausdist c, * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 chausdist c, f1 b0
+ |- ((!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) /\ ((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) /\ ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))))))))))))
T c/\ ! ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 c/\ ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ (~ F) |- ((~ F) /\ ((SUC (CARD s)) = (SUC (CARD s))))
T c==> c~ cF c/\ c~ cF c= cSUC cCARD f0 cSUC cCARD f0
+ |- ((\a. (!p. (!s. (!t. ((((COND p) ((IMAGE (\y. ((vector_add a) y))) s)) ((IMAGE (\y. ((vector_add a) y))) t)) = ((IMAGE (\y. ((vector_add a) y))) (((COND p) s) t))))))) orig)
T * / ! ! ! c= * * * part cCOND b1 * * part cIMAGE / cvector_add b0 b4 b2 * * part cIMAGE / cvector_add b0 b4 b3 * * part cIMAGE / cvector_add b0 b4 * * * part cCOND b1 b2 b3 f0
- (orig = orig) |- ((INFINITE ((IMAGE (\y. ((vector_add orig) y))) s)) = (INFINITE s))
T c==> c= f0 f0 c= cINFINITE * * part cIMAGE / cvector_add f0 b0 f1 cINFINITE f1
- (orig = orig) |- (!t. (((homeomorphic s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homeomorphic s) t)))
T c==> c= f0 f0 ! c= chomeomorphic f1 * * part cIMAGE / cvector_add f0 b1 b0 chomeomorphic f1 b0
+ |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ |- ((\a. (!s. ((coplanar ((IMAGE (\x. ((vector_add a) x))) s)) = (coplanar s)))) orig)
T * / ! c= ccoplanar * * part cIMAGE / cvector_add b0 b2 b1 ccoplanar b1 f0
- |- (((!q'. (((~ ((vec (NUMERAL _0)) IN s)) = p') ==> ((p' ==> (((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = q')) ==> (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = (p' ==> q'))))) ==> ((\q'. (((~ ((vec (NUMERAL _0)) IN s)) = p') ==> ((p' ==> (((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = q')) ==> (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = (p' ==> q'))))) q')) = ((\q'. (((~ ((vec (NUMERAL _0)) IN s)) = p') ==> ((p' ==> (((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = q')) ==> (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c~ cIN cvec cNUMERAL c_0 f0 f1 c==> c==> f1 c= c==> cFINITE f0 c==> c= cSUC cCARD f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 b0 c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 c==> f1 b0 * / c==> c= c~ cIN cvec cNUMERAL c_0 f0 f1 c==> c==> f1 c= c==> cFINITE f0 c==> c= cSUC cCARD f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 b0 c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 c==> f1 b0 f3 * / c==> c= c~ cIN cvec cNUMERAL c_0 f0 f1 c==> c==> f1 c= c==> cFINITE f0 c==> c= cSUC cCARD f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 b0 c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 c==> f1 b0 f3
- ((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) |- ((n <= (dimindex UNIV)) = T)
T c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV c= c<= f1 cdimindex part cUNIV cT
- (orig = orig) |- (((!t. ((((IMAGE (\x. ((vector_add orig) x))) s) =_c t) = (s =_c t))) ==> ((\t. ((((IMAGE (\x. ((vector_add orig) x))) s) =_c t) = (s =_c t))) t)) = ((\t. ((((IMAGE (\x. ((vector_add orig) x))) s) =_c t) = (s =_c t))) t))
T c==> c= f0 f0 c= c==> ! c= c=_c * * part cIMAGE / cvector_add f0 b1 f1 b0 c=_c f1 b0 * / c= c=_c * * part cIMAGE / cvector_add f0 b1 f1 b0 c=_c f1 b0 f2 * / c= c=_c * * part cIMAGE / cvector_add f0 b1 f1 b0 c=_c f1 b0 f2
+ (orig = orig) |- ((\s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) s)
T c==> c= f0 f0 * / c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 f1
- (orig = orig) |- (((!a. (!b. ((closed_interval ((CONS (((vector_add orig) a) , ((vector_add orig) b))) NIL)) = ((IMAGE (\x. ((vector_add orig) x))) (closed_interval ((CONS (a , b)) NIL)))))) ==> ((\a. (!b. ((closed_interval ((CONS (((vector_add orig) a) , ((vector_add orig) b))) NIL)) = ((IMAGE (\x. ((vector_add orig) x))) (closed_interval ((CONS (a , b)) NIL)))))) a)) = ((\a. (!b. ((closed_interval ((CONS (((vector_add orig) a) , ((vector_add orig) b))) NIL)) = ((IMAGE (\x. ((vector_add orig) x))) (closed_interval ((CONS (a , b)) NIL)))))) a))
T c==> c= f0 f0 c= c==> ! ! c= * part cclosed_interval cCONS c, cvector_add f0 b0 cvector_add f0 b1 cNIL * * part cIMAGE / cvector_add f0 b2 * part cclosed_interval cCONS c, b0 b1 cNIL * / ! c= * part cclosed_interval cCONS c, cvector_add f0 b0 cvector_add f0 b1 cNIL * * part cIMAGE / cvector_add f0 b2 * part cclosed_interval cCONS c, b0 b1 cNIL f1 * / ! c= * part cclosed_interval cCONS c, cvector_add f0 b0 cvector_add f0 b1 cNIL * * part cIMAGE / cvector_add f0 b2 * part cclosed_interval cCONS c, b0 b1 cNIL f1
+ ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- ((x IN s) ==> F)
T c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c==> cIN f1 f0 cF
- |- (((!p'. (!q'. ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) = p') ==> ((p' ==> ((negligible (span s)) = q')) ==> ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible (span s))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) = p') ==> ((p' ==> ((negligible (span s)) = q')) ==> ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible (span s))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) = p') ==> ((p' ==> ((negligible (span s)) = q')) ==> ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible (span s))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV b0 c==> c==> b0 c= cnegligible * part cspan f0 b1 c= c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> b0 b1 * / ! c==> c= c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV b0 c==> c==> b0 c= cnegligible * part cspan f0 b1 c= c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> b0 b1 f2 * / ! c==> c= c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV b0 c==> c==> b0 c= cnegligible * part cspan f0 b1 c= c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> b0 b1 f2
+ |- (((!a. (!s. ((polytope ((IMAGE (\x. ((vector_add a) x))) s)) = (polytope s)))) ==> ((\a. (!s. ((polytope ((IMAGE (\x. ((vector_add a) x))) s)) = (polytope s)))) orig)) = ((\a. (!s. ((polytope ((IMAGE (\x. ((vector_add a) x))) s)) = (polytope s)))) orig))
T c= c==> ! ! c= cpolytope * * part cIMAGE / cvector_add b0 b2 b1 cpolytope b1 * / ! c= cpolytope * * part cIMAGE / cvector_add b0 b2 b1 cpolytope b1 f0 * / ! c= cpolytope * * part cIMAGE / cvector_add b0 b2 b1 cpolytope b1 f0
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- (!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g)))))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1
- |- ((\q'. ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) = p') ==> ((p' ==> ((negligible (span s)) = q')) ==> ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible (span s))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV f2 c==> c==> f2 c= cnegligible * part cspan f0 b0 c= c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> f2 b0 f3
- (orig = orig) |- (!s. ((inside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (inside s))))
T c==> c= f0 f0 ! c= * part cinside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cinside b0
+ |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772535)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772536)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772537)) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_int _1772535)) /\ (((real_le (real_of_int _1772535)) (real_of_int _1772537)) /\ ((real_le (real_of_int _1772537)) (real_of_int _1772536))))))))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772535)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772536)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772537)) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_int _1772535)) /\ (((real_le (real_of_int _1772535)) (real_of_int _1772537)) /\ ((real_le (real_of_int _1772537)) (real_of_int _1772536))))))))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772535)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772536)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772537)) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_int _1772535)) /\ (((real_le (real_of_int _1772535)) (real_of_int _1772537)) /\ ((real_le (real_of_int _1772537)) (real_of_int _1772536)))))))))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f2 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ creal_le creal_of_int f0 creal_of_int f2 creal_le creal_of_int f2 creal_of_int f1 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f2 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ creal_le creal_of_int f0 creal_of_int f2 creal_le creal_of_int f2 creal_of_int f1 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f2 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ creal_le creal_of_int f0 creal_of_int f2 creal_le creal_of_int f2 creal_of_int f1
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
- (orig = orig) |- (((!s. (!t. (((DISJOINT ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((DISJOINT s) t)))) ==> ((\s. (!t. (((DISJOINT ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((DISJOINT s) t)))) s)) = ((\s. (!t. (((DISJOINT ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((DISJOINT s) t)))) s))
T c==> c= f0 f0 c= c==> ! ! c= cDISJOINT * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 cDISJOINT b0 b1 * / ! c= cDISJOINT * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 cDISJOINT b0 b1 f1 * / ! c= cDISJOINT * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 cDISJOINT b0 b1 f1
- (!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))), ((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) |- (!s. ((FINITE s) ==> (P s)))
T c==> ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 c==> c/\ * f0 part cEMPTY ! ! c==> c/\ * f0 b1 c/\ c~ cIN b0 b1 cFINITE b1 * f0 * * part cINSERT b0 b1 ! c==> cFINITE b0 * f0 b0
- (orig = orig) |- (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))
T c==> c= f0 f0 ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cexposed_face_of f1 b0
- (orig = orig) |- (!s. ((closed ((IMAGE (\x. ((vector_add orig) x))) s)) = (closed s)))
T c==> c= f0 f0 ! c= cclosed * * part cIMAGE / cvector_add f0 b1 b0 cclosed b0
- (orig = orig) |- (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) >_c t) = (s >_c t)))
T c==> c= f0 f0 ! c= c>_c * * part cIMAGE / cvector_add f0 b1 f1 b0 c>_c f1 b0
+ |- ((!s. (!n. (((~ (orig IN ((IMAGE (\x. ((vector_add _1772522) x))) s))) /\ (((orig INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s)) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (orig INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s))))))) = (!s. (!n. (((~ (((vector_add orig) (vec (NUMERAL _0))) IN ((IMAGE (\x. ((vector_add _1772522) x))) s))) /\ (((((vector_add orig) (vec (NUMERAL _0))) INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s)) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (((vector_add orig) (vec (NUMERAL _0))) INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s))))))))
T c= ! ! c==> c/\ c~ cIN f0 * * part cIMAGE / cvector_add f1 b2 b0 c/\ cHAS_SIZE * * part cINSERT f0 * * part cIMAGE / cvector_add f1 b2 b0 b1 c<= b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 * * part cIMAGE / cvector_add f1 b2 b0 ! ! c==> c/\ c~ cIN cvector_add f0 cvec cNUMERAL c_0 * * part cIMAGE / cvector_add f1 b2 b0 c/\ cHAS_SIZE * * part cINSERT cvector_add f0 cvec cNUMERAL c_0 * * part cIMAGE / cvector_add f1 b2 b0 b1 c<= b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvector_add f0 cvec cNUMERAL c_0 * * part cIMAGE / cvector_add f1 b2 b0
- (orig = orig) |- (!s. ((closure ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (closure s))))
T c==> c= f0 f0 ! c= * part cclosure * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cclosure b0
- (orig = orig) |- ((open_segment (((vector_add orig) a) , ((vector_add orig) b))) = ((IMAGE (\x. ((vector_add orig) x))) (open_segment (a , b))))
T c==> c= f0 f0 c= * part copen_segment c, cvector_add f0 f1 cvector_add f0 f2 * * part cIMAGE / cvector_add f0 b0 * part copen_segment c, f1 f2
+ |- (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))
T c==> c/\ c==> c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c==> c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f1 f0
- (orig = orig) |- (!y. ((midpoint (((vector_add orig) x) , ((vector_add orig) y))) = ((vector_add orig) (midpoint (x , y)))))
T c==> c= f0 f0 ! c= cmidpoint c, cvector_add f0 f1 cvector_add f0 b0 cvector_add f0 cmidpoint c, f1 b0
- (orig = orig) |- (!s. (!t. (((closed_in ((subtopology euclidean) ((IMAGE (\x. ((vector_add orig) x))) t))) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((closed_in ((subtopology euclidean) t)) s))))
T c==> c= f0 f0 ! ! c= cclosed_in csubtopology ceuclidean * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE / cvector_add f0 b2 b0 cclosed_in csubtopology ceuclidean b1 b0
+ |- ((((~ ((vec (NUMERAL _0)) IN s)) = (~ ((vec (NUMERAL _0)) IN s))) ==> (((~ ((vec (NUMERAL _0)) IN s)) ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = q')) ==> (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = ((~ ((vec (NUMERAL _0)) IN s)) ==> q')))) = (((~ ((vec (NUMERAL _0)) IN s)) ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = q')) ==> (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = ((~ ((vec (NUMERAL _0)) IN s)) ==> q'))))
T c= c==> c= c~ cIN cvec cNUMERAL c_0 f0 c~ cIN cvec cNUMERAL c_0 f0 c==> c==> c~ cIN cvec cNUMERAL c_0 f0 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 f2 c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c~ cIN cvec cNUMERAL c_0 f0 f2 c==> c==> c~ cIN cvec cNUMERAL c_0 f0 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 f2 c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c~ cIN cvec cNUMERAL c_0 f0 f2
+ |- ((!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))) = ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))
T c= ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
- (orig = orig) |- (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) INTER ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s INTER t))))
T c==> c= f0 f0 ! c= * * part cINTER * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part cINTER f1 b0
+ |- ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))
T c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- (((!x. (((\n. ((m <= n) /\ (n < p))) x) ==> ((!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) ==> (m < p)))) ==> ((?n. ((m <= n) /\ (n < p))) ==> ((!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) ==> (m < p)))) = ((?n. ((m <= n) /\ (n < p))) ==> ((!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) ==> (m < p))))
T c= c==> ! c==> * / c/\ c<= f0 b1 c< b1 f1 b0 c==> ! ! ! c==> c/\ c<= b1 b2 c< b2 b3 c< b1 b3 c< f0 f1 c==> c? / c/\ c<= f0 b0 c< b0 f1 c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 c< f0 f1 c==> c? / c/\ c<= f0 b0 c< b0 f1 c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 c< f0 f1
- (orig = orig) |- (!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr)))
T c==> c= f0 f0 ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ |- (((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))) = ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))
T c= c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
- (orig = orig) |- ((INTERS ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (INTERS s)))
T c==> c= f0 f0 c= * part cINTERS * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 * part cINTERS f1
- (~ ((CARD (x INSERT s)) <= (dimindex UNIV))), ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- ((~ ((CARD (x INSERT s)) <= (dimindex UNIV))) /\ ((CARD (x INSERT s)) <= (dimindex UNIV)))
T c==> c~ c<= cCARD * * part cINSERT f0 f1 cdimindex part cUNIV c==> c/\ c/\ c\/ c~ c<= cCARD f1 cdimindex part cUNIV cnegligible * * part chull part caffine f1 c/\ c~ cIN f0 f1 cFINITE f1 c/\ c<= cCARD * * part cINSERT f0 f1 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f0 f1 c/\ c~ c<= cCARD * * part cINSERT f0 f1 cdimindex part cUNIV c<= cCARD * * part cINSERT f0 f1 cdimindex part cUNIV
- (orig = orig) |- (((!s. (!t. ((s =_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s =_c t)))) ==> ((\s. (!t. ((s =_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s =_c t)))) s)) = ((\s. (!t. ((s =_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s =_c t)))) s))
T c==> c= f0 f0 c= c==> ! ! c= c=_c b0 * * part cIMAGE / cvector_add f0 b2 b1 c=_c b0 b1 * / ! c= c=_c b0 * * part cIMAGE / cvector_add f0 b2 b1 c=_c b0 b1 f1 * / ! c= c=_c b0 * * part cIMAGE / cvector_add f0 b2 b1 c=_c b0 b1 f1
+ |- (((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> ((\P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) P)) = ((\P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) P))
T c= c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 * / ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 f0 * / ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 f0
- (orig = orig) |- (((locally connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally connected) s))
T c==> c= f0 f0 c= clocally part cconnected * * part cIMAGE / cvector_add f0 b0 f1 clocally part cconnected f1
- (orig = orig) |- (!s. (!t. ((((COND p) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (((COND p) s) t)))))
T c==> c= f0 f0 ! ! c= * * * part cCOND f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 * * * part cCOND f1 b0 b1
+ |- ((m < n) = ((int_lt (int_of_num m)) (int_of_num n)))
T c= c< f0 f1 cint_lt cint_of_num f0 cint_of_num f1
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
- (orig = orig) |- (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s))
T c==> c= f0 f0 c= cface_of * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 cface_of f1 f2
+ |- ((\a. (!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add a) x))) s)) m) = ((has_measure s) m))))) orig)
T * / ! ! c= chas_measure * * part cIMAGE / cvector_add b0 b3 b1 b2 chas_measure b1 b2 f0
+ |- ((\a. (!x. (!s. ((((vector_add a) x) IN ((IMAGE (\y. ((vector_add a) y))) s)) = (x IN s))))) orig)
T * / ! ! c= cIN cvector_add b0 b1 * * part cIMAGE / cvector_add b0 b3 b2 cIN b1 b2 f0
- (orig = orig) |- ((\s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) <_c t) = (s <_c t)))) s)
T c==> c= f0 f0 * / ! c= c<_c * * part cIMAGE / cvector_add f0 b2 b0 b1 c<_c b0 b1 f1
+ |- ((!x. (((FINITE (x INSERT s)) \/ (~ (FINITE s))) /\ ((~ (FINITE (x INSERT s))) \/ (FINITE s)))) = ((!x. ((FINITE (x INSERT s)) \/ (~ (FINITE s)))) /\ (!x. ((~ (FINITE (x INSERT s))) \/ (FINITE s)))))
T c= ! c/\ c\/ cFINITE * * part cINSERT b0 f0 c~ cFINITE f0 c\/ c~ cFINITE * * part cINSERT b0 f0 cFINITE f0 c/\ ! c\/ cFINITE * * part cINSERT b0 f0 c~ cFINITE f0 ! c\/ c~ cFINITE * * part cINSERT b0 f0 cFINITE f0
- (orig = orig) |- ((\s. (!n. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) HAS_SIZE n) = (s HAS_SIZE n)))) s)
T c==> c= f0 f0 * / ! c= cHAS_SIZE * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 b1 cHAS_SIZE b0 b1 f1
- (orig = orig) |- (!s. ((frontier ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (frontier s))))
T c==> c= f0 f0 ! c= * part cfrontier * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cfrontier b0
- (orig = orig) |- (!g. ((path ((\x. ((vector_add orig) x)) o g)) = (path g)))
T c==> c= f0 f0 ! c= cpath * * part co / cvector_add f0 b1 b0 cpath b0
- (orig = orig) |- ((sphere (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (sphere (x , r))))
T c==> c= f0 f0 c= * part csphere c, cvector_add f0 f1 f2 * * part cIMAGE / cvector_add f0 b0 * part csphere c, f1 f2
- (orig = orig) |- ((\s. ((interior ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (interior s)))) s)
T c==> c= f0 f0 * / c= * part cinterior * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cinterior b0 f1
+ |- ((\s. ((FINITE s) ==> ((dim s) <= (CARD s)))) s)
T * / c==> cFINITE b0 c<= cdim b0 cCARD b0 f0
+ |- ((!s. ((simply_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (simply_connected s))) /\ ((!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homotopy_equivalent s) t)))) /\ ((!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) /\ ((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) /\ ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))))))))))))))
T c/\ ! c= csimply_connected * * part cIMAGE / cvector_add f0 b1 b0 csimply_connected b0 c/\ ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b2 b0 b1 chomotopy_equivalent b0 b1 c/\ ! ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 c/\ ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ (!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) |- (!p. ((?n. ((m <= n) /\ (n < p))) ==> (m < p)))
T c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 ! c==> c? / c/\ c<= f0 b1 c< b1 b0 c< f0 b0
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))))))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1
- ((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) |- (((vec (NUMERAL _0)) INSERT s) HAS_SIZE n)
T c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1
+ |- (((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) ==> ((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) ==> F))) = ((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) ==> F)))
T c= c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF
- (orig = orig) |- ((\x. (!y. ((((vector_add orig) x) = ((vector_add orig) y)) = (x = y)))) x)
T c==> c= f0 f0 * / ! c= c= cvector_add f0 b0 cvector_add f0 b1 c= b0 b1 f1
- (orig = orig) |- (!b. (!c. ((((vector_add ((vector_add orig) b)) c) IN ((IMAGE (\x. ((vector_add orig) x))) s)) = (((vector_add b) c) IN s))))
T c==> c= f0 f0 ! ! c= cIN cvector_add cvector_add f0 b0 b1 * * part cIMAGE / cvector_add f0 b2 f1 cIN cvector_add b0 b1 f1
+ (~ ((vec (NUMERAL _0)) IN s)) |- (((~ F) ==> ((SUC (CARD s)) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN s)) (CARD s)) (SUC (CARD s))) = (((COND F) (CARD s)) e')))
T c==> c~ cIN cvec cNUMERAL c_0 f0 c==> c==> c~ cF c= cSUC cCARD f0 f1 c= cCOND cIN cvec cNUMERAL c_0 f0 cCARD f0 cSUC cCARD f0 cCOND cF cCARD f0 f1
+ |- ((int_le (int_of_num (NUMERAL _0))) (int_of_num (dimindex UNIV)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num cdimindex part cUNIV
- (orig = orig) |- (!s. ((FINITE ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (FINITE s)))
T c==> c= f0 f0 ! c= cFINITE * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 cFINITE b0
- (orig = orig) |- ((\s. (!x. (((limit_point_of ((vector_add orig) x)) ((IMAGE (\y. ((vector_add orig) y))) s)) = ((limit_point_of x) s)))) s)
T c==> c= f0 f0 * / ! c= climit_point_of cvector_add f0 b1 * * part cIMAGE / cvector_add f0 b2 b0 climit_point_of b1 b0 f1
+ |- (((!a. (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) DIFF ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (s DIFF t)))))) ==> ((\a. (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) DIFF ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (s DIFF t)))))) orig)) = ((\a. (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) DIFF ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (s DIFF t)))))) orig))
T c= c==> ! ! ! c= * * part cDIFF * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 * * part cDIFF b1 b2 * / ! ! c= * * part cDIFF * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 * * part cDIFF b1 b2 f0 * / ! ! c= * * part cDIFF * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 * * part cDIFF b1 b2 f0
- |- ((\n. (((~ (orig IN s)) /\ (((orig INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (orig INSERT s))))) n)
T * / c==> c/\ c~ cIN f0 f1 c/\ cHAS_SIZE * * part cINSERT f0 f1 b0 c<= b0 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 f1 f2
+ |- (!n. (((\n. ((m <= n) /\ (n < p))) n) ==> ((!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) ==> (m < p))))
T c==> * / c/\ c<= f0 b0 c< b0 f1 f2 c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 c< f0 f1
- (orig = orig) |- (((!s. ((starlike ((IMAGE (\x. ((vector_add orig) x))) s)) = (starlike s))) ==> ((\s. ((starlike ((IMAGE (\x. ((vector_add orig) x))) s)) = (starlike s))) s)) = ((\s. ((starlike ((IMAGE (\x. ((vector_add orig) x))) s)) = (starlike s))) s))
T c==> c= f0 f0 c= c==> ! c= cstarlike * * part cIMAGE / cvector_add f0 b1 b0 cstarlike b0 * / c= cstarlike * * part cIMAGE / cvector_add f0 b1 b0 cstarlike b0 f1 * / c= cstarlike * * part cIMAGE / cvector_add f0 b1 b0 cstarlike b0 f1
+ |- (!s. ((COUNTABLE ((IMAGE (\y. ((vector_add orig) y))) s)) = (COUNTABLE s)))
T c= cCOUNTABLE * * part cIMAGE / cvector_add f0 b0 f1 cCOUNTABLE f1
- (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))), (?s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s))))))) |- ((?s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s))))))) /\ F)
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> c? / c/\ c/\ c\/ c~ c<= cCARD b0 cdimindex part cUNIV cnegligible * * part chull part caffine b0 c/\ c~ cIN f0 b0 cFINITE b0 c/\ c<= cCARD * * part cINSERT f0 b0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f0 b0 c/\ c? / c/\ c/\ c\/ c~ c<= cCARD b0 cdimindex part cUNIV cnegligible * * part chull part caffine b0 c/\ c~ cIN f0 b0 cFINITE b0 c/\ c<= cCARD * * part cINSERT f0 b0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f0 b0 cF
+ |- ((\a. (!s. (!x. (((path_component ((IMAGE (\x. ((vector_add a) x))) s)) ((vector_add a) x)) = ((IMAGE (\x. ((vector_add a) x))) ((path_component s) x)))))) orig)
T * / ! ! c= * * part cpath_component * * part cIMAGE / cvector_add b0 b3 b1 cvector_add b0 b2 * * part cIMAGE / cvector_add b0 b3 * * part cpath_component b1 b2 f0
+ |- (!a. (!b. ((closed_segment ((CONS (((vector_add orig) a) , ((vector_add orig) b))) NIL)) = ((IMAGE (\x. ((vector_add orig) x))) (closed_segment ((CONS (a , b)) NIL))))))
T c= * part cclosed_segment cCONS c, cvector_add f0 f1 cvector_add f0 f2 cNIL * * part cIMAGE / cvector_add f0 b0 * part cclosed_segment cCONS c, f1 f2 cNIL
+ |- (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = T)
T c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 cT
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c= c? / * f1 b0 c? / * f1 * * part cIMAGE / cvector_add f0 b1 b0
- |- ((_1772510 = _1772511) ==> ((CARD _1772510) = (CARD _1772511)))
T c==> c= f0 f1 c= cCARD f0 cCARD f1
- (_1772500 = _1772502) |- ((_1772501 = _1772503) ==> ((_1772502 HAS_SIZE _1772503) \/ (~ (_1772500 HAS_SIZE _1772501))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cHAS_SIZE f1 f3 c~ cHAS_SIZE f0 f2
- ((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) |- ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) = T)
T c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV c= cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 cT
+ |- (!x. (!s. ((((IMAGE (\x. ((vector_add orig) x))) x) IN ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (x IN s))))
T c= cIN * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f2 cIN f1 f2
- (orig = orig) |- (((!s. ((diameter ((IMAGE (\x. ((vector_add orig) x))) s)) = (diameter s))) ==> ((\s. ((diameter ((IMAGE (\x. ((vector_add orig) x))) s)) = (diameter s))) s)) = ((\s. ((diameter ((IMAGE (\x. ((vector_add orig) x))) s)) = (diameter s))) s))
T c==> c= f0 f0 c= c==> ! c= cdiameter * * part cIMAGE / cvector_add f0 b1 b0 cdiameter b0 * / c= cdiameter * * part cIMAGE / cvector_add f0 b1 b0 cdiameter b0 f1 * / c= cdiameter * * part cIMAGE / cvector_add f0 b1 b0 cdiameter b0 f1
+ |- (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = (s = t))))
T c= c= * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f2 c= f1 f2
+ |- (UNIV = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) UNIV))
T c= part cUNIV * * part cIMAGE * part cIMAGE / cvector_add f0 b0 part cUNIV
- (orig = orig) |- ((UNIONS ((IMAGE (IMAGE (\y. ((vector_add orig) y)))) u)) = ((IMAGE (\y. ((vector_add orig) y))) (UNIONS u)))
T c==> c= f0 f0 c= * part cUNIONS * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 * part cUNIONS f1
- (~ ((vec (NUMERAL _0)) IN s)) |- ((~ ((vec (NUMERAL _0)) IN s)) /\ (((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))))
T c==> c~ cIN cvec cNUMERAL c_0 f0 c/\ c~ cIN cvec cNUMERAL c_0 f0 c= c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
- (orig = orig) |- ((\s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s))) s)
T c==> c= f0 f0 * / c= cextreme_point_of cvector_add f0 f1 * * part cIMAGE / cvector_add f0 b1 b0 cextreme_point_of f1 b0 f2
- (orig = orig) |- ((\s. ((relative_interior ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (relative_interior s)))) s)
T c==> c= f0 f0 * / c= * part crelative_interior * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part crelative_interior b0 f1
- (orig = orig) |- ((((IMAGE (\x. ((vector_add orig) x))) o xs) n) = ((IMAGE (\x. ((vector_add orig) x))) (xs n)))
T c==> c= f0 f0 c= * * * part co * part cIMAGE / cvector_add f0 b0 f1 f2 * * part cIMAGE / cvector_add f0 b0 * f1 f2
- (orig = orig) |- ((\s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) >=_c t) = (s >=_c t)))) s)
T c==> c= f0 f0 * / ! c= c>=_c * * part cIMAGE / cvector_add f0 b2 b0 b1 c>=_c b0 b1 f1
+ |- ((\a. (!x. (!r. ((sphere (((vector_add a) x) , r)) = ((IMAGE (\y. ((vector_add a) y))) (sphere (x , r))))))) orig)
T * / ! ! c= * part csphere c, cvector_add b0 b1 b2 * * part cIMAGE / cvector_add b0 b3 * part csphere c, b1 b2 f0
+ |- (((x IN s) \/ (!n. ((~ ((x INSERT s) HAS_SIZE n)) \/ (~ (n <= (dimindex UNIV)))))) = (!n. ((x IN s) \/ ((~ ((x INSERT s) HAS_SIZE n)) \/ (~ (n <= (dimindex UNIV)))))))
T c= c\/ cIN f0 f1 ! c\/ c~ cHAS_SIZE * * part cINSERT f0 f1 b0 c~ c<= b0 cdimindex part cUNIV ! c\/ cIN f0 f1 c\/ c~ cHAS_SIZE * * part cINSERT f0 f1 b0 c~ c<= b0 cdimindex part cUNIV
- (orig = orig) |- (!s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) <=_c t) = (s <=_c t))))
T c==> c= f0 f0 ! ! c= c<=_c * * part cIMAGE / cvector_add f0 b2 b0 b1 c<=_c b0 b1
+ |- ((\m. (!p. ((?n. ((m <= n) /\ (n < p))) ==> (m < p)))) m)
T * / ! c==> c? / c/\ c<= b0 b2 c< b2 b1 c< b0 b1 f0
+ (!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) |- ((\n. (!p. (((m <= n) /\ (n < p)) ==> (m < p)))) n)
T c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 * / ! c==> c/\ c<= f0 b0 c< b0 b1 c< f0 b1 f1
+ |- (((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((\s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) s)) = ((\s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) s))
T c= c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 * / ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 f0 * / ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 f0
- (orig = orig) |- ((\s. ((INTERS ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (INTERS s)))) s)
T c==> c= f0 f0 * / c= * part cINTERS * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cINTERS b0 f1
- (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772535)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))), ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- ((~ (x IN s)) ==> (x IN s))
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c==> c~ cIN f1 f0 cIN f1 f0
+ (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!s. (((dim s) < (dimindex UNIV)) ==> (negligible s))), ((dim s) < (dimindex UNIV)) |- ((!s. (((dim s) < (dimindex UNIV)) ==> (negligible s))) /\ (negligible s))
T c==> ! c==> c< cdim b0 cdimindex part cUNIV cnegligible b0 c==> c< cdim f0 cdimindex part cUNIV c/\ ! c==> c< cdim b0 cdimindex part cUNIV cnegligible b0 cnegligible f0
+ (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((~ F) ==> ((SUC (CARD s)) = (SUC (CARD s))))
T c==> c~ cF c= cSUC cCARD f0 cSUC cCARD f0
+ |- ((\a. (!s. ((starlike ((IMAGE (\x. ((vector_add a) x))) s)) = (starlike s)))) orig)
T * / ! c= cstarlike * * part cIMAGE / cvector_add b0 b2 b1 cstarlike b1 f0
- (orig = orig) |- ((\s. (!t. ((s >_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s >_c t)))) s)
T c==> c= f0 f0 * / ! c= c>_c b0 * * part cIMAGE / cvector_add f0 b2 b1 c>_c b0 b1 f1
+ |- (!l. ((REVERSE ((MAP (\x. ((vector_add orig) x))) l)) = ((MAP (\x. ((vector_add orig) x))) (REVERSE l))))
T c= cREVERSE cMAP / cvector_add f0 b0 f1 cMAP / cvector_add f0 b0 cREVERSE f1
+ (~ ((vec (NUMERAL _0)) IN s)), (FINITE s), ((SUC (CARD s)) = n), (n <= (dimindex UNIV)) |- (?n. (((dim (span s)) <= n) /\ (n < (dimindex UNIV))))
T c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV c? / c/\ c<= cdim * part cspan f0 b0 c< b0 cdimindex part cUNIV
+ |- ((\a. (!l. ((REVERSE ((MAP (\x. ((vector_add a) x))) l)) = ((MAP (\x. ((vector_add a) x))) (REVERSE l))))) orig)
T * / ! c= cREVERSE cMAP / cvector_add b0 b2 b1 cMAP / cvector_add b0 b2 cREVERSE b1 f0
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))))))))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1
+ |- ((\a. (!s. ((INFINITE ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) = (INFINITE s)))) orig)
T * / ! c= cINFINITE * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 cINFINITE b1 f0
- (orig = orig) |- (((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) ==> ((\g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) g)) = ((\g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) g))
T c==> c= f0 f0 c= c==> ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 * / c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 f1 * / c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 f1
- |- ((!n'. ((~ (s HAS_SIZE n')) \/ ((FINITE s) /\ ((CARD s) = n)))) = ((!n. (~ (s HAS_SIZE n))) \/ ((FINITE s) /\ ((CARD s) = n))))
T c= ! c\/ c~ cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 f1 c\/ ! c~ cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 f1
+ |- (((!a. (!g. ((reversepath ((\x. ((vector_add a) x)) o g)) = ((\x. ((vector_add a) x)) o (reversepath g))))) ==> ((\a. (!g. ((reversepath ((\x. ((vector_add a) x)) o g)) = ((\x. ((vector_add a) x)) o (reversepath g))))) orig)) = ((\a. (!g. ((reversepath ((\x. ((vector_add a) x)) o g)) = ((\x. ((vector_add a) x)) o (reversepath g))))) orig))
T c= c==> ! ! c= * part creversepath * * part co / cvector_add b0 b2 b1 * * part co / cvector_add b0 b2 * part creversepath b1 * / ! c= * part creversepath * * part co / cvector_add b0 b2 b1 * * part co / cvector_add b0 b2 * part creversepath b1 f0 * / ! c= * part creversepath * * part co / cvector_add b0 b2 b1 * * part co / cvector_add b0 b2 * part creversepath b1 f0
+ (!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) |- (!p. (((m <= n) /\ (n < p)) ==> (m < p)))
T c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 ! c==> c/\ c<= f0 f1 c< f1 b0 c< f0 b0
- (orig = orig) |- ((\s. (!t. ((setdist (((IMAGE (\x. ((vector_add orig) x))) s) , ((IMAGE (\x. ((vector_add orig) x))) t))) = (setdist (s , t))))) s)
T c==> c= f0 f0 * / ! c= csetdist c, * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 csetdist c, b0 b1 f1
+ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) |- (T = ((vec (NUMERAL _0)) IN ((hull affine) ((vec (NUMERAL _0)) INSERT s))))
T c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV c= cT cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))
T c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- ((((\n. ((m <= n) /\ (n < p))) n) ==> ((!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) ==> (m < p))) = T)
T c= c==> * / c/\ c<= f0 b0 c< b0 f1 f2 c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 c< f0 f1 cT
+ |- ((\a. ((a = ((vector_add a) (vec (NUMERAL _0)))) /\ ((EMPTY = ((IMAGE (\x. ((vector_add a) x))) EMPTY)) /\ ((EMPTY = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) EMPTY)) /\ ((UNIV = ((IMAGE (\x. ((vector_add a) x))) UNIV)) /\ ((UNIV = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) UNIV)) /\ (NIL = ((MAP (\x. ((vector_add a) x))) NIL)))))))) orig)
T * / c/\ c= b0 cvector_add b0 cvec cNUMERAL c_0 c/\ c= part cEMPTY * * part cIMAGE / cvector_add b0 b1 part cEMPTY c/\ c= part cEMPTY * * part cIMAGE * part cIMAGE / cvector_add b0 b1 part cEMPTY c/\ c= part cUNIV * * part cIMAGE / cvector_add b0 b1 part cUNIV c/\ c= part cUNIV * * part cIMAGE * part cIMAGE / cvector_add b0 b1 part cUNIV c= cNIL cMAP / cvector_add b0 b1 cNIL f0
- (orig = orig) |- ((\s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s))) s)
T c==> c= f0 f0 * / c= cedge_of * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cedge_of f1 b0 f2
- (orig = orig) |- ((\s. (!t. (((open_in ((subtopology euclidean) ((IMAGE (\x. ((vector_add orig) x))) t))) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((open_in ((subtopology euclidean) t)) s)))) s)
T c==> c= f0 f0 * / ! c= copen_in csubtopology ceuclidean * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE / cvector_add f0 b2 b0 copen_in csubtopology ceuclidean b1 b0 f1
- (orig = orig) |- (!s. ((COUNTABLE ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (COUNTABLE s)))
T c==> c= f0 f0 ! c= cCOUNTABLE * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 cCOUNTABLE b0
+ (!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) |- ((\m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) m)
T c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 * / ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 f0
+ |- (((!a. (!x. (!s. ((((vector_add a) x) INSERT ((IMAGE (\y. ((vector_add a) y))) s)) = ((IMAGE (\y. ((vector_add a) y))) (x INSERT s)))))) ==> ((\a. (!x. (!s. ((((vector_add a) x) INSERT ((IMAGE (\y. ((vector_add a) y))) s)) = ((IMAGE (\y. ((vector_add a) y))) (x INSERT s)))))) orig)) = ((\a. (!x. (!s. ((((vector_add a) x) INSERT ((IMAGE (\y. ((vector_add a) y))) s)) = ((IMAGE (\y. ((vector_add a) y))) (x INSERT s)))))) orig))
T c= c==> ! ! ! c= * * part cINSERT cvector_add b0 b1 * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE / cvector_add b0 b3 * * part cINSERT b1 b2 * / ! ! c= * * part cINSERT cvector_add b0 b1 * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE / cvector_add b0 b3 * * part cINSERT b1 b2 f0 * / ! ! c= * * part cINSERT cvector_add b0 b1 * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE / cvector_add b0 b3 * * part cINSERT b1 b2 f0
- (orig = orig) |- ((\s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) s)
T c==> c= f0 f0 * / c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 f1
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ (orig = orig) |- ((\x. (!s. ((((vector_add orig) x) INSERT ((IMAGE (\y. ((vector_add orig) y))) s)) = ((IMAGE (\y. ((vector_add orig) y))) (x INSERT s))))) x)
T c==> c= f0 f0 * / ! c= * * part cINSERT cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE / cvector_add f0 b2 * * part cINSERT b0 b1 f1
- (orig = orig) |- ((\x. (!s. ((((IMAGE (\x. ((vector_add orig) x))) x) INSERT ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (x INSERT s))))) x)
T c==> c= f0 f0 * / ! c= * * part cINSERT * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 * * part cINSERT b0 b1 f1
- (orig = orig) |- ((\t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homotopy_equivalent s) t))) t)
T c==> c= f0 f0 * / c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b1 f1 b0 chomotopy_equivalent f1 b0 f2
- (orig = orig) |- (!t. ((((COND p) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (((COND p) s) t))))
T c==> c= f0 f0 ! c= * * * part cCOND f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * * * part cCOND f1 f2 b0
- (orig = orig) |- (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) PSUBSET ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = (s PSUBSET t)))
T c==> c= f0 f0 ! c= cPSUBSET * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 cPSUBSET f1 b0
- |- (((!q'. (((n <= (dimindex UNIV)) = p') ==> ((p' ==> ((negligible (span s)) = q')) ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = (p' ==> q'))))) ==> ((\q'. (((n <= (dimindex UNIV)) = p') ==> ((p' ==> ((negligible (span s)) = q')) ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = (p' ==> q'))))) q')) = ((\q'. (((n <= (dimindex UNIV)) = p') ==> ((p' ==> ((negligible (span s)) = q')) ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= cnegligible * part cspan f2 b0 c= c==> c<= f0 cdimindex part cUNIV cnegligible * part cspan f2 c==> f1 b0 * / c==> c= c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= cnegligible * part cspan f2 b0 c= c==> c<= f0 cdimindex part cUNIV cnegligible * part cspan f2 c==> f1 b0 f3 * / c==> c= c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= cnegligible * part cspan f2 b0 c= c==> c<= f0 cdimindex part cUNIV cnegligible * part cspan f2 c==> f1 b0 f3
+ |- ((\x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) x)
T * / ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 f0
- |- ((((FINITE s) ==> ((((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) ==> (((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))))) = (((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))))
T c= c==> c==> cFINITE f0 c= c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c= c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c= c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c= * part cGSPEC / c? / cSETSPEC b0 * f1 b1 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 * part cGSPEC / c? / cSETSPEC b0 * f1 * * part cIMAGE / cvector_add f0 b2 b1 b1
- (orig = orig) |- ((starlike ((IMAGE (\x. ((vector_add orig) x))) s)) = (starlike s))
T c==> c= f0 f0 c= cstarlike * * part cIMAGE / cvector_add f0 b0 f1 cstarlike f1
- (orig = orig) |- (((!s. ((COUNTABLE ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (COUNTABLE s))) ==> ((\s. ((COUNTABLE ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (COUNTABLE s))) s)) = ((\s. ((COUNTABLE ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (COUNTABLE s))) s))
T c==> c= f0 f0 c= c==> ! c= cCOUNTABLE * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 cCOUNTABLE b0 * / c= cCOUNTABLE * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 cCOUNTABLE b0 f1 * / c= cCOUNTABLE * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 cCOUNTABLE b0 f1
+ |- ((y = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) y) = (real_of_num (NUMERAL _0)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
- (orig = orig) |- (!x. (!r. ((sphere (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (sphere (x , r))))))
T c==> c= f0 f0 ! ! c= * part csphere c, cvector_add f0 b0 b1 * * part cIMAGE / cvector_add f0 b2 * part csphere c, b0 b1
+ (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) |- (!s. (((\s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s))))))) s) ==> F))
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 ! c==> * / c/\ c/\ c\/ c~ c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN f0 b1 cFINITE b1 c/\ c<= cCARD * * part cINSERT f0 b1 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f0 b1 b0 cF
+ |- (((int_le (int_of_num (NUMERAL _0))) (int_of_num (dimindex UNIV))) ==> (((vec (NUMERAL _0)) IN s) \/ ((~ (FINITE s)) \/ ((~ (((int_add (int_of_num (CARD s))) (int_of_num (NUMERAL (BIT1 _0)))) = (int_of_num n))) \/ ((~ ((int_le (int_of_num n)) (int_of_num (dimindex UNIV)))) \/ ((int_lt (int_of_num (CARD s))) (int_of_num (dimindex UNIV))))))))
T c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num cdimindex part cUNIV c\/ cIN cvec cNUMERAL c_0 f0 c\/ c~ cFINITE f0 c\/ c~ c= cint_add cint_of_num cCARD f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f1 c\/ c~ cint_le cint_of_num f1 cint_of_num cdimindex part cUNIV cint_lt cint_of_num cCARD f0 cint_of_num cdimindex part cUNIV
- (orig = orig) |- ((closure ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (closure s)))
T c==> c= f0 f0 c= * part cclosure * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 * part cclosure f1
- (orig = orig) |- ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))
T c==> c= f0 f0 c= cAR * * part cIMAGE / cvector_add f0 b0 f1 cAR f1
- (orig = orig) |- ((\tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) tr)
T c==> c= f0 f0 * / c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 f1
- (orig = orig) |- (!s. (!t. (((DISJOINT ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((DISJOINT s) t))))
T c==> c= f0 f0 ! ! c= cDISJOINT * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 cDISJOINT b0 b1
- (orig = orig) |- (((!s. ((FINITE ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (FINITE s))) ==> ((\s. ((FINITE ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (FINITE s))) s)) = ((\s. ((FINITE ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (FINITE s))) s))
T c==> c= f0 f0 c= c==> ! c= cFINITE * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 cFINITE b0 * / c= cFINITE * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 cFINITE b0 f1 * / c= cFINITE * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 cFINITE b0 f1
- (orig = orig) |- (!s. ((outside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (outside s))))
T c==> c= f0 f0 ! c= * part coutside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part coutside b0
- (orig = orig) |- (((!t. ((((IMAGE (\x. ((vector_add orig) x))) s) <=_c t) = (s <=_c t))) ==> ((\t. ((((IMAGE (\x. ((vector_add orig) x))) s) <=_c t) = (s <=_c t))) t)) = ((\t. ((((IMAGE (\x. ((vector_add orig) x))) s) <=_c t) = (s <=_c t))) t))
T c==> c= f0 f0 c= c==> ! c= c<=_c * * part cIMAGE / cvector_add f0 b1 f1 b0 c<=_c f1 b0 * / c= c<=_c * * part cIMAGE / cvector_add f0 b1 f1 b0 c<=_c f1 b0 f2 * / c= c<=_c * * part cIMAGE / cvector_add f0 b1 f1 b0 c<=_c f1 b0 f2
- (orig = orig) |- ((s >_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s >_c t))
T c==> c= f0 f0 c= c>_c f1 * * part cIMAGE / cvector_add f0 b0 f2 c>_c f1 f2
- (orig = orig) |- ((\x. (!r. ((cball (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (cball (x , r)))))) x)
T c==> c= f0 f0 * / ! c= * part ccball c, cvector_add f0 b0 b1 * * part cIMAGE / cvector_add f0 b2 * part ccball c, b0 b1 f1
- (orig = orig) |- ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))
T c==> c= f0 f0 c= cmeasure * * part cIMAGE / cvector_add f0 b0 f1 cmeasure f1
- (orig = orig) |- ((aff_dim ((IMAGE (\x. ((vector_add orig) x))) s)) = (aff_dim s))
T c==> c= f0 f0 c= caff_dim * * part cIMAGE / cvector_add f0 b0 f1 caff_dim f1
- (orig = orig) |- (((!p. (!x. (!y. ((((COND p) ((vector_add orig) x)) ((vector_add orig) y)) = ((vector_add orig) (((COND p) x) y)))))) ==> ((\p. (!x. (!y. ((((COND p) ((vector_add orig) x)) ((vector_add orig) y)) = ((vector_add orig) (((COND p) x) y)))))) p)) = ((\p. (!x. (!y. ((((COND p) ((vector_add orig) x)) ((vector_add orig) y)) = ((vector_add orig) (((COND p) x) y)))))) p))
T c==> c= f0 f0 c= c==> ! ! ! c= cCOND b0 cvector_add f0 b1 cvector_add f0 b2 cvector_add f0 cCOND b0 b1 b2 * / ! ! c= cCOND b0 cvector_add f0 b1 cvector_add f0 b2 cvector_add f0 cCOND b0 b1 b2 f1 * / ! ! c= cCOND b0 cvector_add f0 b1 cvector_add f0 b2 cvector_add f0 cCOND b0 b1 b2 f1
- (orig = orig) |- (((!t. ((((COND p) ((IMAGE (\y. ((vector_add orig) y))) s)) ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (((COND p) s) t)))) ==> ((\t. ((((COND p) ((IMAGE (\y. ((vector_add orig) y))) s)) ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (((COND p) s) t)))) t)) = ((\t. ((((COND p) ((IMAGE (\y. ((vector_add orig) y))) s)) ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (((COND p) s) t)))) t))
T c==> c= f0 f0 c= c==> ! c= * * * part cCOND f1 * * part cIMAGE / cvector_add f0 b1 f2 * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * * part cCOND f1 f2 b0 * / c= * * * part cCOND f1 * * part cIMAGE / cvector_add f0 b1 f2 * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * * part cCOND f1 f2 b0 f3 * / c= * * * part cCOND f1 * * part cIMAGE / cvector_add f0 b1 f2 * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * * part cCOND f1 f2 b0 f3
- (orig = orig) |- (!x. ((((IMAGE (\y. ((vector_add orig) y))) s) DELETE ((vector_add orig) x)) = ((IMAGE (\y. ((vector_add orig) y))) (s DELETE x))))
T c==> c= f0 f0 ! c= * * part cDELETE * * part cIMAGE / cvector_add f0 b1 f1 cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b1 * * part cDELETE f1 b0
- (orig = orig) |- ((UNIONS ((IMAGE (IMAGE (IMAGE (\x. ((vector_add orig) x))))) u)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (UNIONS u)))
T c==> c= f0 f0 c= * part cUNIONS * * part cIMAGE * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 * part cUNIONS f1
+ |- ((!n. (((s HAS_SIZE n) \/ ((~ (FINITE s)) \/ (~ ((CARD s) = n)))) /\ ((~ (s HAS_SIZE n)) \/ ((FINITE s) /\ ((CARD s) = n))))) = ((!n. ((s HAS_SIZE n) \/ ((~ (FINITE s)) \/ (~ ((CARD s) = n))))) /\ (!n. ((~ (s HAS_SIZE n)) \/ ((FINITE s) /\ ((CARD s) = n))))))
T c= ! c/\ c\/ cHAS_SIZE f0 b0 c\/ c~ cFINITE f0 c~ c= cCARD f0 b0 c\/ c~ cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 c/\ ! c\/ cHAS_SIZE f0 b0 c\/ c~ cFINITE f0 c~ c= cCARD f0 b0 ! c\/ c~ cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0
- (orig = orig) |- ((\y. (!z. (((between ((vector_add orig) x)) (((vector_add orig) y) , ((vector_add orig) z))) = ((between x) (y , z))))) y)
T c==> c= f0 f0 * / ! c= cbetween cvector_add f0 f1 c, cvector_add f0 b0 cvector_add f0 b1 cbetween f1 c, b0 b1 f2
+ (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (_1772497 = _1772499), (_1772496 = _1772498) |- ((((_1772496 IN _1772497) = (_1772498 IN _1772499)) ==> ((_1772498 IN _1772499) \/ (~ (_1772496 IN _1772497)))) = ((_1772498 IN _1772499) \/ (~ (_1772496 IN _1772497))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cIN f2 f0 cIN f3 f1 c\/ cIN f3 f1 c~ cIN f2 f0 c\/ cIN f3 f1 c~ cIN f2 f0
- (orig = orig) |- ((\x. (!y. ((((COND p) ((vector_add orig) x)) ((vector_add orig) y)) = ((vector_add orig) (((COND p) x) y))))) x)
T c==> c= f0 f0 * / ! c= cCOND f1 cvector_add f0 b0 cvector_add f0 b1 cvector_add f0 cCOND f1 b0 b1 f2
+ (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))), ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- (((x IN s) ==> F) = F)
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c= c==> cIN f1 f0 cF cF
+ (orig = orig) |- ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))))
T c==> c= f0 f0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- ((\q'. (((~ ((vec (NUMERAL _0)) IN s)) = p') ==> ((p' ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = q')) ==> (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = (p' ==> q'))))) q')
T * / c==> c= c~ cIN cvec cNUMERAL c_0 f0 f1 c==> c==> f1 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 b0 c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 c==> f1 b0 f3
- (orig = orig) |- (!s. (!x. (((connected_component ((IMAGE (\x. ((vector_add orig) x))) s)) ((vector_add orig) x)) = ((IMAGE (\x. ((vector_add orig) x))) ((connected_component s) x)))))
T c==> c= f0 f0 ! ! c= * * part cconnected_component * * part cIMAGE / cvector_add f0 b2 b0 cvector_add f0 b1 * * part cIMAGE / cvector_add f0 b2 * * part cconnected_component b0 b1
+ |- (((!a. (!s. ((contractible ((IMAGE (\x. ((vector_add a) x))) s)) = (contractible s)))) ==> ((\a. (!s. ((contractible ((IMAGE (\x. ((vector_add a) x))) s)) = (contractible s)))) orig)) = ((\a. (!s. ((contractible ((IMAGE (\x. ((vector_add a) x))) s)) = (contractible s)))) orig))
T c= c==> ! ! c= ccontractible * * part cIMAGE / cvector_add b0 b2 b1 ccontractible b1 * / ! c= ccontractible * * part cIMAGE / cvector_add b0 b2 b1 ccontractible b1 f0 * / ! c= ccontractible * * part cIMAGE / cvector_add b0 b2 b1 ccontractible b1 f0
- (orig = orig) |- ((\k. (((IMAGE ((\y. ((vector_add orig) y)) o g)) k) = ((IMAGE (\y. ((vector_add orig) y))) ((IMAGE g) k)))) k)
T c==> c= f0 f0 * / c= * * part cIMAGE * * part co / cvector_add f0 b1 f1 b0 * * part cIMAGE / cvector_add f0 b1 * * part cIMAGE f1 b0 f2
- (orig = orig) |- (((!k. (((IMAGE ((\y. ((vector_add orig) y)) o g)) k) = ((IMAGE (\y. ((vector_add orig) y))) ((IMAGE g) k)))) ==> ((\k. (((IMAGE ((\y. ((vector_add orig) y)) o g)) k) = ((IMAGE (\y. ((vector_add orig) y))) ((IMAGE g) k)))) k)) = ((\k. (((IMAGE ((\y. ((vector_add orig) y)) o g)) k) = ((IMAGE (\y. ((vector_add orig) y))) ((IMAGE g) k)))) k))
T c==> c= f0 f0 c= c==> ! c= * * part cIMAGE * * part co / cvector_add f0 b1 f1 b0 * * part cIMAGE / cvector_add f0 b1 * * part cIMAGE f1 b0 * / c= * * part cIMAGE * * part co / cvector_add f0 b1 f1 b0 * * part cIMAGE / cvector_add f0 b1 * * part cIMAGE f1 b0 f2 * / c= * * part cIMAGE * * part co / cvector_add f0 b1 f1 b0 * * part cIMAGE / cvector_add f0 b1 * * part cIMAGE f1 b0 f2
- (orig = orig) |- (((DISJOINT ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((DISJOINT s) t))
T c==> c= f0 f0 c= cDISJOINT * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f2 cDISJOINT f1 f2
- |- (((!n. (((~ (orig IN s)) /\ (((orig INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (orig INSERT s))))) ==> ((\n. (((~ (orig IN s)) /\ (((orig INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (orig INSERT s))))) n)) = ((\n. (((~ (orig IN s)) /\ (((orig INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (orig INSERT s))))) n))
T c= c==> ! c==> c/\ c~ cIN f0 f1 c/\ cHAS_SIZE * * part cINSERT f0 f1 b0 c<= b0 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 f1 * / c==> c/\ c~ cIN f0 f1 c/\ cHAS_SIZE * * part cINSERT f0 f1 b0 c<= b0 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 f1 f2 * / c==> c/\ c~ cIN f0 f1 c/\ cHAS_SIZE * * part cINSERT f0 f1 b0 c<= b0 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 f1 f2
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (orig = orig) |- (!g. ((pathstart ((\x. ((vector_add orig) x)) o g)) = ((vector_add orig) (pathstart g))))
T c==> c= f0 f0 ! c= cpathstart * * part co / cvector_add f0 b1 b0 cvector_add f0 cpathstart b0
+ |- (((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))) = ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))))
T c= c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- (!s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) =_c t) = (s =_c t))))
T c= c=_c * * part cIMAGE / cvector_add f0 b0 f1 f2 c=_c f1 f2
+ (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- (((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0))) = ((((real_add (real_of_int _1772535)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772536))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0
- (orig = orig) |- (((APPEND ((MAP (\x. ((vector_add orig) x))) l1)) ((MAP (\x. ((vector_add orig) x))) l2)) = ((MAP (\x. ((vector_add orig) x))) ((APPEND l1) l2)))
T c==> c= f0 f0 c= cAPPEND cMAP / cvector_add f0 b0 f1 cMAP / cvector_add f0 b0 f2 cMAP / cvector_add f0 b0 cAPPEND f1 f2
- (orig = orig) |- (!s. ((COUNTABLE ((IMAGE (\y. ((vector_add orig) y))) s)) = (COUNTABLE s)))
T c==> c= f0 f0 ! c= cCOUNTABLE * * part cIMAGE / cvector_add f0 b1 b0 cCOUNTABLE b0
+ |- ((\a. (!h. (!t. (((CONS ((\x. ((vector_add a) x)) h)) ((MAP (\x. ((vector_add a) x))) t)) = ((MAP (\x. ((vector_add a) x))) ((CONS h) t)))))) orig)
T * / ! ! c= cCONS * / cvector_add b0 b3 b1 cMAP / cvector_add b0 b3 b2 cMAP / cvector_add b0 b3 cCONS b1 b2 f0
- |- ((((~ ((vec (NUMERAL _0)) IN s)) = (~ ((vec (NUMERAL _0)) IN s))) ==> (((~ ((vec (NUMERAL _0)) IN s)) ==> (((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = q')) ==> (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = ((~ ((vec (NUMERAL _0)) IN s)) ==> q')))) = (((~ ((vec (NUMERAL _0)) IN s)) ==> (((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = q')) ==> (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = ((~ ((vec (NUMERAL _0)) IN s)) ==> q'))))
T c= c==> c= c~ cIN cvec cNUMERAL c_0 f0 c~ cIN cvec cNUMERAL c_0 f0 c==> c==> c~ cIN cvec cNUMERAL c_0 f0 c= c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 f2 c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c~ cIN cvec cNUMERAL c_0 f0 f2 c==> c==> c~ cIN cvec cNUMERAL c_0 f0 c= c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 f2 c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c~ cIN cvec cNUMERAL c_0 f0 f2
- |- ((~ (_1772494 = _1772495)) \/ ((FINITE _1772495) \/ (~ (FINITE _1772494))))
T c\/ c~ c= f0 f1 c\/ cFINITE f1 c~ cFINITE f0
+ (orig = orig) |- (((!x. (!s. ((((vector_add orig) x) IN ((IMAGE (\y. ((vector_add orig) y))) s)) = (x IN s)))) ==> ((\x. (!s. ((((vector_add orig) x) IN ((IMAGE (\y. ((vector_add orig) y))) s)) = (x IN s)))) x)) = ((\x. (!s. ((((vector_add orig) x) IN ((IMAGE (\y. ((vector_add orig) y))) s)) = (x IN s)))) x))
T c==> c= f0 f0 c= c==> ! ! c= cIN cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cIN b0 b1 * / ! c= cIN cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cIN b0 b1 f1 * / ! c= cIN cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cIN b0 b1 f1
- (orig = orig) |- (!r. ((sphere (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (sphere (x , r)))))
T c==> c= f0 f0 ! c= * part csphere c, cvector_add f0 f1 b0 * * part cIMAGE / cvector_add f0 b1 * part csphere c, f1 b0
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- (((real_ge ((real_add (real_of_int _1772535)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0
+ |- (((!a. (!s. ((relative_frontier ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (relative_frontier s))))) ==> ((\a. (!s. ((relative_frontier ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (relative_frontier s))))) orig)) = ((\a. (!s. ((relative_frontier ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (relative_frontier s))))) orig))
T c= c==> ! ! c= * part crelative_frontier * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part crelative_frontier b1 * / ! c= * part crelative_frontier * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part crelative_frontier b1 f0 * / ! c= * part crelative_frontier * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part crelative_frontier b1 f0
- (orig = orig) |- (((!b. ((open_segment (((vector_add orig) a) , ((vector_add orig) b))) = ((IMAGE (\x. ((vector_add orig) x))) (open_segment (a , b))))) ==> ((\b. ((open_segment (((vector_add orig) a) , ((vector_add orig) b))) = ((IMAGE (\x. ((vector_add orig) x))) (open_segment (a , b))))) b)) = ((\b. ((open_segment (((vector_add orig) a) , ((vector_add orig) b))) = ((IMAGE (\x. ((vector_add orig) x))) (open_segment (a , b))))) b))
T c==> c= f0 f0 c= c==> ! c= * part copen_segment c, cvector_add f0 f1 cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b1 * part copen_segment c, f1 b0 * / c= * part copen_segment c, cvector_add f0 f1 cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b1 * part copen_segment c, f1 b0 f2 * / c= * part copen_segment c, cvector_add f0 f1 cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b1 * part copen_segment c, f1 b0 f2
- (orig = orig) |- (!s. ((affine_dependent ((IMAGE (\x. ((vector_add orig) x))) s)) = (affine_dependent s)))
T c==> c= f0 f0 ! c= caffine_dependent * * part cIMAGE / cvector_add f0 b1 b0 caffine_dependent b0
+ |- (!s. (!n. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) HAS_SIZE n) = (s HAS_SIZE n))))
T c= cHAS_SIZE * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 f2 cHAS_SIZE f1 f2
+ (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) |- (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))
T c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1
+ |- ((!s. (((locally path_connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally path_connected) s))) /\ ((!s. (((locally connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally connected) s))) /\ ((!s. ((inside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (inside s)))) /\ ((!s. ((outside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (outside s)))) /\ ((!s. ((simply_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (simply_connected s))) /\ ((!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homotopy_equivalent s) t)))) /\ ((!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) /\ ((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) /\ ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))))))))))))))))))
T c/\ ! c= clocally part cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cpath_connected b0 c/\ ! c= clocally part cconnected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cconnected b0 c/\ ! c= * part cinside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cinside b0 c/\ ! c= * part coutside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part coutside b0 c/\ ! c= csimply_connected * * part cIMAGE / cvector_add f0 b1 b0 csimply_connected b0 c/\ ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b2 b0 b1 chomotopy_equivalent b0 b1 c/\ ! ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 c/\ ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- (((!a. (!s. ((simply_connected ((IMAGE (\x. ((vector_add a) x))) s)) = (simply_connected s)))) ==> ((\a. (!s. ((simply_connected ((IMAGE (\x. ((vector_add a) x))) s)) = (simply_connected s)))) orig)) = ((\a. (!s. ((simply_connected ((IMAGE (\x. ((vector_add a) x))) s)) = (simply_connected s)))) orig))
T c= c==> ! ! c= csimply_connected * * part cIMAGE / cvector_add b0 b2 b1 csimply_connected b1 * / ! c= csimply_connected * * part cIMAGE / cvector_add b0 b2 b1 csimply_connected b1 f0 * / ! c= csimply_connected * * part cIMAGE / cvector_add b0 b2 b1 csimply_connected b1 f0
- (orig = orig) |- ((\s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) UNION ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s UNION t))))) s)
T c==> c= f0 f0 * / ! c= * * part cUNION * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE / cvector_add f0 b2 * * part cUNION b0 b1 f1
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\_1772527. (\_1772528. (!s. (!n. (((~ (orig IN ((IMAGE (\x. ((vector_add _1772522) x))) s))) /\ (((orig INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s)) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (orig INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s))))))))) = (\_1772527. (\_1772528. (!s. (!n. (((~ (((vector_add orig) (vec (NUMERAL _0))) IN ((IMAGE (\x. ((vector_add _1772522) x))) s))) /\ (((((vector_add orig) (vec (NUMERAL _0))) INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s)) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (((vector_add orig) (vec (NUMERAL _0))) INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s))))))))))
T c= / / ! ! c==> c/\ c~ cIN f0 * * part cIMAGE / cvector_add f1 b4 b2 c/\ cHAS_SIZE * * part cINSERT f0 * * part cIMAGE / cvector_add f1 b4 b2 b3 c<= b3 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 * * part cIMAGE / cvector_add f1 b4 b2 / / ! ! c==> c/\ c~ cIN cvector_add f0 cvec cNUMERAL c_0 * * part cIMAGE / cvector_add f1 b4 b2 c/\ cHAS_SIZE * * part cINSERT cvector_add f0 cvec cNUMERAL c_0 * * part cIMAGE / cvector_add f1 b4 b2 b3 c<= b3 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvector_add f0 cvec cNUMERAL c_0 * * part cIMAGE / cvector_add f1 b4 b2
+ |- (((!a. (!s. (!x. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) DELETE ((IMAGE (\x. ((vector_add a) x))) x)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (s DELETE x)))))) ==> ((\a. (!s. (!x. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) DELETE ((IMAGE (\x. ((vector_add a) x))) x)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (s DELETE x)))))) orig)) = ((\a. (!s. (!x. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) DELETE ((IMAGE (\x. ((vector_add a) x))) x)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (s DELETE x)))))) orig))
T c= c==> ! ! ! c= * * part cDELETE * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 * * part cDELETE b1 b2 * / ! ! c= * * part cDELETE * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 * * part cDELETE b1 b2 f0 * / ! ! c= * * part cDELETE * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 * * part cDELETE b1 b2 f0
- (orig = orig) |- ((\y. (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add orig) x)) ((vector_add orig) y))) = ((vector_add orig) ((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y))))) y)
T c==> c= f0 f0 * / c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add f0 f1 cvector_add f0 b0 cvector_add f0 c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f1 b0 f2
+ |- ((!n. ((x IN s) \/ ((~ ((x INSERT s) HAS_SIZE n)) \/ (~ (n <= (dimindex UNIV)))))) = ((x IN s) \/ (!n. ((~ ((x INSERT s) HAS_SIZE n)) \/ (~ (n <= (dimindex UNIV)))))))
T c= ! c\/ cIN f0 f1 c\/ c~ cHAS_SIZE * * part cINSERT f0 f1 b0 c~ c<= b0 cdimindex part cUNIV c\/ cIN f0 f1 ! c\/ c~ cHAS_SIZE * * part cINSERT f0 f1 b0 c~ c<= b0 cdimindex part cUNIV
+ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) |- (((~ ((vec (NUMERAL _0)) IN s)) ==> (((vec (NUMERAL _0)) IN s) = F)) = (((vec (NUMERAL _0)) IN s) = F))
T c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV c= c==> c~ cIN cvec cNUMERAL c_0 f0 c= cIN cvec cNUMERAL c_0 f0 cF c= cIN cvec cNUMERAL c_0 f0 cF
+ (FINITE s) |- ((FINITE s) /\ (((dim s) <= (CARD s)) = T))
T c==> cFINITE f0 c/\ cFINITE f0 c= c<= cdim f0 cCARD f0 cT
- (orig = orig) |- ((\x. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) ((IMAGE (\x. ((vector_add orig) x))) x)) = (s x))) x)
T c==> c= f0 f0 * / c= cIMAGE * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 * f1 b0 f2
- (orig = orig) |- ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) DIFF ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s DIFF t)))
T c==> c= f0 f0 c= * * part cDIFF * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f2 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 * * part cDIFF f1 f2
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1
- (orig = orig) |- ((\g. (((shiftpath t) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o ((shiftpath t) g)))) g)
T c==> c= f0 f0 * / c= * * part cshiftpath f1 * * part co / cvector_add f0 b1 b0 * * part co / cvector_add f0 b1 * * part cshiftpath f1 b0 f2
- (orig = orig) |- ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))
T c==> c= f0 f0 c= cENR * * part cIMAGE / cvector_add f0 b0 f1 cENR f1
+ |- ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))
T c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
- (orig = orig) |- (((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) ==> ((\s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) s)) = ((\s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) s))
T c==> c= f0 f0 c= c==> ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 * / c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 f1 * / c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 f1
+ |- (((!a. (!g1. (!g2. (((++ ((\x. ((vector_add a) x)) o g1)) ((\x. ((vector_add a) x)) o g2)) = ((\x. ((vector_add a) x)) o ((++ g1) g2)))))) ==> ((\a. (!g1. (!g2. (((++ ((\x. ((vector_add a) x)) o g1)) ((\x. ((vector_add a) x)) o g2)) = ((\x. ((vector_add a) x)) o ((++ g1) g2)))))) orig)) = ((\a. (!g1. (!g2. (((++ ((\x. ((vector_add a) x)) o g1)) ((\x. ((vector_add a) x)) o g2)) = ((\x. ((vector_add a) x)) o ((++ g1) g2)))))) orig))
T c= c==> ! ! ! c= * * part c++ * * part co / cvector_add b0 b3 b1 * * part co / cvector_add b0 b3 b2 * * part co / cvector_add b0 b3 * * part c++ b1 b2 * / ! ! c= * * part c++ * * part co / cvector_add b0 b3 b1 * * part co / cvector_add b0 b3 b2 * * part co / cvector_add b0 b3 * * part c++ b1 b2 f0 * / ! ! c= * * part c++ * * part co / cvector_add b0 b3 b1 * * part co / cvector_add b0 b3 b2 * * part co / cvector_add b0 b3 * * part c++ b1 b2 f0
- (orig = orig) |- (!s. (!t. ((s <_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s <_c t))))
T c==> c= f0 f0 ! ! c= c<_c b0 * * part cIMAGE / cvector_add f0 b2 b1 c<_c b0 b1
- (orig = orig) |- ((FINITE ((IMAGE (\y. ((vector_add orig) y))) s)) = (FINITE s))
T c==> c= f0 f0 c= cFINITE * * part cIMAGE / cvector_add f0 b0 f1 cFINITE f1
+ (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- (!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s)))))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1
+ |- ((\a. (!s. (!t. (((open_in ((subtopology euclidean) ((IMAGE (\x. ((vector_add a) x))) t))) ((IMAGE (\x. ((vector_add a) x))) s)) = ((open_in ((subtopology euclidean) t)) s))))) orig)
T * / ! ! c= copen_in csubtopology ceuclidean * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE / cvector_add b0 b3 b1 copen_in csubtopology ceuclidean b2 b1 f0
+ (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) |- (!s. ((!x. (FINITE (x INSERT s))) \/ (~ (FINITE s))))
T c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 ! c\/ ! cFINITE * * part cINSERT b1 b0 c~ cFINITE b0
- (orig = orig) |- ((\s. ((bounded ((IMAGE (\x. ((vector_add orig) x))) s)) = (bounded s))) s)
T c==> c= f0 f0 * / c= cbounded * * part cIMAGE / cvector_add f0 b1 b0 cbounded b0 f1
+ |- ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))
T c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- ((\a. (!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add a) x))) f)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((exposed_face_of f) s))))) orig)
T * / ! ! c= cexposed_face_of * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cexposed_face_of b1 b2 f0
+ |- (((!a. (!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add a) x))) s)) t) = ((homotopy_equivalent s) t))))) ==> ((\a. (!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add a) x))) s)) t) = ((homotopy_equivalent s) t))))) orig)) = ((\a. (!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add a) x))) s)) t) = ((homotopy_equivalent s) t))))) orig))
T c= c==> ! ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add b0 b3 b1 b2 chomotopy_equivalent b1 b2 * / ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add b0 b3 b1 b2 chomotopy_equivalent b1 b2 f0 * / ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add b0 b3 b1 b2 chomotopy_equivalent b1 b2 f0
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772535)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772536)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772537)) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_int _1772535)) /\ (((real_le (real_of_int _1772535)) (real_of_int _1772537)) /\ ((real_le (real_of_int _1772537)) (real_of_int _1772536))))))))))) |- (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0))))))))))
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f2 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ creal_le creal_of_int f0 creal_of_int f2 creal_le creal_of_int f2 creal_of_int f1 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0
+ |- ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))
T c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
- (orig = orig) |- ((ball (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (ball (x , r))))
T c==> c= f0 f0 c= * part cball c, cvector_add f0 f1 f2 * * part cIMAGE / cvector_add f0 b0 * part cball c, f1 f2
- (orig = orig) |- (!s. (!x. ((((IMAGE (\y. ((vector_add orig) y))) s) ((vector_add orig) x)) = (s x))))
T c==> c= f0 f0 ! ! c= cIMAGE / cvector_add f0 b2 b0 cvector_add f0 b1 * b0 b1
+ |- (!s. (!t. ((s >=_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s >=_c t))))
T c= c>=_c f0 * * part cIMAGE / cvector_add f1 b0 f2 c>=_c f0 f2
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (orig = orig) |- (((!s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) INTER ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s INTER t))))) ==> ((\s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) INTER ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s INTER t))))) s)) = ((\s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) INTER ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s INTER t))))) s))
T c==> c= f0 f0 c= c==> ! ! c= * * part cINTER * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE / cvector_add f0 b2 * * part cINTER b0 b1 * / ! c= * * part cINTER * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE / cvector_add f0 b2 * * part cINTER b0 b1 f1 * / ! c= * * part cINTER * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE / cvector_add f0 b2 * * part cINTER b0 b1 f1
+ |- (((!a. (!x. (!s. ((((vector_add a) x) IN ((IMAGE (\y. ((vector_add a) y))) s)) = (x IN s))))) ==> ((\a. (!x. (!s. ((((vector_add a) x) IN ((IMAGE (\y. ((vector_add a) y))) s)) = (x IN s))))) orig)) = ((\a. (!x. (!s. ((((vector_add a) x) IN ((IMAGE (\y. ((vector_add a) y))) s)) = (x IN s))))) orig))
T c= c==> ! ! ! c= cIN cvector_add b0 b1 * * part cIMAGE / cvector_add b0 b3 b2 cIN b1 b2 * / ! ! c= cIN cvector_add b0 b1 * * part cIMAGE / cvector_add b0 b3 b2 cIN b1 b2 f0 * / ! ! c= cIN cvector_add b0 b1 * * part cIMAGE / cvector_add b0 b3 b2 cIN b1 b2 f0
- (orig = orig) |- ((\y. (((vector_sub ((vector_add orig) x)) ((vector_add orig) y)) = ((vector_sub x) y))) y)
T c==> c= f0 f0 * / c= cvector_sub cvector_add f0 f1 cvector_add f0 b0 cvector_sub f1 b0 f2
+ |- ((\a. (!g. ((rectifiable_path ((\x. ((vector_add a) x)) o g)) = (rectifiable_path g)))) orig)
T * / ! c= crectifiable_path * * part co / cvector_add b0 b2 b1 crectifiable_path b1 f0
+ |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- (orig = orig) |- ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) DELETE ((IMAGE (\x. ((vector_add orig) x))) x)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s DELETE x)))
T c==> c= f0 f0 c= * * part cDELETE * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 * * part cDELETE f1 f2
+ |- (((vec (NUMERAL _0)) IN s) \/ ((~ (FINITE s)) \/ ((~ (((int_add (int_of_num (CARD s))) (int_of_num (NUMERAL (BIT1 _0)))) = (int_of_num n))) \/ ((~ ((int_le (int_of_num n)) (int_of_num (dimindex UNIV)))) \/ ((int_lt (int_of_num (CARD s))) (int_of_num (dimindex UNIV)))))))
T c\/ cIN cvec cNUMERAL c_0 f0 c\/ c~ cFINITE f0 c\/ c~ c= cint_add cint_of_num cCARD f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f1 c\/ c~ cint_le cint_of_num f1 cint_of_num cdimindex part cUNIV cint_lt cint_of_num cCARD f0 cint_of_num cdimindex part cUNIV
+ |- ((!s. (((locally connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally connected) s))) /\ ((!s. ((inside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (inside s)))) /\ ((!s. ((outside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (outside s)))) /\ ((!s. ((simply_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (simply_connected s))) /\ ((!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homotopy_equivalent s) t)))) /\ ((!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) /\ ((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) /\ ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))))))))))))))))
T c/\ ! c= clocally part cconnected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cconnected b0 c/\ ! c= * part cinside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cinside b0 c/\ ! c= * part coutside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part coutside b0 c/\ ! c= csimply_connected * * part cIMAGE / cvector_add f0 b1 b0 csimply_connected b0 c/\ ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b2 b0 b1 chomotopy_equivalent b0 b1 c/\ ! ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 c/\ ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
- (orig = orig) |- ((\s. ((INFINITE ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (INFINITE s))) s)
T c==> c= f0 f0 * / c= cINFINITE * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 cINFINITE b0 f1
- (orig = orig) |- (((!s. ((affine ((IMAGE (\x. ((vector_add orig) x))) s)) = (affine s))) ==> ((\s. ((affine ((IMAGE (\x. ((vector_add orig) x))) s)) = (affine s))) s)) = ((\s. ((affine ((IMAGE (\x. ((vector_add orig) x))) s)) = (affine s))) s))
T c==> c= f0 f0 c= c==> ! c= caffine * * part cIMAGE / cvector_add f0 b1 b0 caffine b0 * / c= caffine * * part cIMAGE / cvector_add f0 b1 b0 caffine b0 f1 * / c= caffine * * part cIMAGE / cvector_add f0 b1 b0 caffine b0 f1
- (orig = orig) |- (((!g. ((pathfinish ((\x. ((vector_add orig) x)) o g)) = ((vector_add orig) (pathfinish g)))) ==> ((\g. ((pathfinish ((\x. ((vector_add orig) x)) o g)) = ((vector_add orig) (pathfinish g)))) g)) = ((\g. ((pathfinish ((\x. ((vector_add orig) x)) o g)) = ((vector_add orig) (pathfinish g)))) g))
T c==> c= f0 f0 c= c==> ! c= cpathfinish * * part co / cvector_add f0 b1 b0 cvector_add f0 cpathfinish b0 * / c= cpathfinish * * part co / cvector_add f0 b1 b0 cvector_add f0 cpathfinish b0 f1 * / c= cpathfinish * * part co / cvector_add f0 b1 b0 cvector_add f0 cpathfinish b0 f1
- (orig = orig) |- (((!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) SUBSET ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = (s SUBSET t))) ==> ((\t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) SUBSET ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = (s SUBSET t))) t)) = ((\t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) SUBSET ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = (s SUBSET t))) t))
T c==> c= f0 f0 c= c==> ! c= cSUBSET * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 cSUBSET f1 b0 * / c= cSUBSET * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 cSUBSET f1 b0 f2 * / c= cSUBSET * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 cSUBSET f1 b0 f2
+ (orig = orig) |- ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))
T c==> c= f0 f0 c= cnegligible * * part cIMAGE / cvector_add f0 b0 f1 cnegligible f1
- (orig = orig) |- (((connected_component ((IMAGE (\x. ((vector_add orig) x))) s)) ((vector_add orig) x)) = ((IMAGE (\x. ((vector_add orig) x))) ((connected_component s) x)))
T c==> c= f0 f0 c= * * part cconnected_component * * part cIMAGE / cvector_add f0 b0 f1 cvector_add f0 f2 * * part cIMAGE / cvector_add f0 b0 * * part cconnected_component f1 f2
- (orig = orig) |- (!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s))))
T c==> c= f0 f0 ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1
- (orig = orig) |- (((!xs. (!n. ((((\y. ((vector_add orig) y)) o xs) n) = ((vector_add orig) (xs n))))) ==> ((\xs. (!n. ((((\y. ((vector_add orig) y)) o xs) n) = ((vector_add orig) (xs n))))) xs)) = ((\xs. (!n. ((((\y. ((vector_add orig) y)) o xs) n) = ((vector_add orig) (xs n))))) xs))
T c==> c= f0 f0 c= c==> ! ! c= co / cvector_add f0 b2 b0 b1 cvector_add f0 * b0 b1 * / ! c= co / cvector_add f0 b2 b0 b1 cvector_add f0 * b0 b1 f1 * / ! c= co / cvector_add f0 b2 b0 b1 cvector_add f0 * b0 b1 f1
+ |- ((\a. (!s. ((convex ((IMAGE (\x. ((vector_add a) x))) s)) = (convex s)))) orig)
T * / ! c= cconvex * * part cIMAGE / cvector_add b0 b2 b1 cconvex b1 f0
- |- ((!s. (!n. (((~ (orig IN s)) /\ (((orig INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (orig INSERT s)))))) = T)
T c= ! ! c==> c/\ c~ cIN f0 b0 c/\ cHAS_SIZE * * part cINSERT f0 b0 b1 c<= b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 b0 cT
- (orig = orig) |- (!k. (((IMAGE ((IMAGE (\x. ((vector_add orig) x))) o g)) k) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) ((IMAGE g) k))))
T c==> c= f0 f0 ! c= * * part cIMAGE * * part co * part cIMAGE / cvector_add f0 b1 f1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * * part cIMAGE f1 b0
- (orig = orig) |- (((!l1. (!l2. (((APPEND ((MAP (\x. ((vector_add orig) x))) l1)) ((MAP (\x. ((vector_add orig) x))) l2)) = ((MAP (\x. ((vector_add orig) x))) ((APPEND l1) l2))))) ==> ((\l1. (!l2. (((APPEND ((MAP (\x. ((vector_add orig) x))) l1)) ((MAP (\x. ((vector_add orig) x))) l2)) = ((MAP (\x. ((vector_add orig) x))) ((APPEND l1) l2))))) l1)) = ((\l1. (!l2. (((APPEND ((MAP (\x. ((vector_add orig) x))) l1)) ((MAP (\x. ((vector_add orig) x))) l2)) = ((MAP (\x. ((vector_add orig) x))) ((APPEND l1) l2))))) l1))
T c==> c= f0 f0 c= c==> ! ! c= cAPPEND cMAP / cvector_add f0 b2 b0 cMAP / cvector_add f0 b2 b1 cMAP / cvector_add f0 b2 cAPPEND b0 b1 * / ! c= cAPPEND cMAP / cvector_add f0 b2 b0 cMAP / cvector_add f0 b2 b1 cMAP / cvector_add f0 b2 cAPPEND b0 b1 f1 * / ! c= cAPPEND cMAP / cvector_add f0 b2 b0 cMAP / cvector_add f0 b2 b1 cMAP / cvector_add f0 b2 cAPPEND b0 b1 f1
- |- (((!t. ((!x. t) = t)) ==> ((\t. ((!x. t) = t)) t)) = ((\t. ((!x. t) = t)) t))
T c= c==> ! c= ! b0 b0 * / c= ! b0 b0 f0 * / c= ! b0 b0 f0
- (orig = orig) |- ((COUNTABLE ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (COUNTABLE s))
T c==> c= f0 f0 c= cCOUNTABLE * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 cCOUNTABLE f1
- (orig = orig) |- ((\s. ((aff_dim ((IMAGE (\x. ((vector_add orig) x))) s)) = (aff_dim s))) s)
T c==> c= f0 f0 * / c= caff_dim * * part cIMAGE / cvector_add f0 b1 b0 caff_dim b0 f1
+ |- ((!s. (!n. ((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))))) = (!s. (!n. (((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible (span s))))))
T c= ! ! c==> c~ cIN cvec cNUMERAL c_0 b0 c==> cFINITE b0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 b0 b1 c==> c<= b1 cdimindex part cUNIV cnegligible * part cspan b0 ! ! c==> c/\ c~ cIN cvec cNUMERAL c_0 b0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 b0 b1 c<= b1 cdimindex part cUNIV cnegligible * part cspan b0
- |- (((((SUC (CARD s)) = n) ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = ((n <= (dimindex UNIV)) ==> (negligible (span s))))) ==> ((((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = ((((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))))
T c= c==> c==> c= cSUC cCARD f0 f1 c= c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c= c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c= c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
- |- ((_1772500 = _1772502) ==> ((~ (_1772501 = _1772503)) \/ ((_1772502 HAS_SIZE _1772503) \/ (~ (_1772500 HAS_SIZE _1772501)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cHAS_SIZE f1 f3 c~ cHAS_SIZE f0 f2
- (orig = orig) |- (((!s. ((affine_dependent ((IMAGE (\x. ((vector_add orig) x))) s)) = (affine_dependent s))) ==> ((\s. ((affine_dependent ((IMAGE (\x. ((vector_add orig) x))) s)) = (affine_dependent s))) s)) = ((\s. ((affine_dependent ((IMAGE (\x. ((vector_add orig) x))) s)) = (affine_dependent s))) s))
T c==> c= f0 f0 c= c==> ! c= caffine_dependent * * part cIMAGE / cvector_add f0 b1 b0 caffine_dependent b0 * / c= caffine_dependent * * part cIMAGE / cvector_add f0 b1 b0 caffine_dependent b0 f1 * / c= caffine_dependent * * part cIMAGE / cvector_add f0 b1 b0 caffine_dependent b0 f1
+ |- ((\a. (!s. (!t. (((DISJOINT ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = ((DISJOINT s) t))))) orig)
T * / ! ! c= cDISJOINT * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 cDISJOINT b1 b2 f0
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- (n <= (dimindex UNIV)) |- ((n <= (dimindex UNIV)) = T)
T c==> c<= f0 cdimindex part cUNIV c= c<= f0 cdimindex part cUNIV cT
- (orig = orig) |- (!t. (((CONS ((\x. ((vector_add orig) x)) h)) ((MAP (\x. ((vector_add orig) x))) t)) = ((MAP (\x. ((vector_add orig) x))) ((CONS h) t))))
T c==> c= f0 f0 ! c= cCONS * / cvector_add f0 b1 f1 cMAP / cvector_add f0 b1 b0 cMAP / cvector_add f0 b1 cCONS f1 b0
+ (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((\Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) Q)
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 * / c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 f1
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) |- ((\x. ((~ (FINITE (x INSERT _1772464))) \/ (FINITE _1772464))) _1772465)
T c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 * / c\/ c~ cFINITE * * part cINSERT b0 f0 cFINITE f0 f1
+ |- (!s. ((INTERS ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (INTERS s))))
T c= * part cINTERS * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 * part cINTERS f1
- (orig = orig) |- (!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s))))
T c==> c= f0 f0 ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0
+ |- ((\a. (!s. ((connected ((IMAGE (\x. ((vector_add a) x))) s)) = (connected s)))) orig)
T * / ! c= cconnected * * part cIMAGE / cvector_add b0 b2 b1 cconnected b1 f0
- |- (((!q'. (((FINITE s) = p') ==> ((p' ==> ((((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = q')) ==> (((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = (p' ==> q'))))) ==> ((\q'. (((FINITE s) = p') ==> ((p' ==> ((((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = q')) ==> (((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = (p' ==> q'))))) q')) = ((\q'. (((FINITE s) = p') ==> ((p' ==> ((((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = q')) ==> (((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cFINITE f0 f1 c==> c==> f1 c= c==> c= cSUC cCARD f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 b0 c= c==> cFINITE f0 c==> c= cSUC cCARD f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 c==> f1 b0 * / c==> c= cFINITE f0 f1 c==> c==> f1 c= c==> c= cSUC cCARD f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 b0 c= c==> cFINITE f0 c==> c= cSUC cCARD f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 c==> f1 b0 f3 * / c==> c= cFINITE f0 f1 c==> c==> f1 c= c==> c= cSUC cCARD f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 b0 c= c==> cFINITE f0 c==> c= cSUC cCARD f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 c==> f1 b0 f3
- (orig = orig) |- (((!s. (!t. ((s >=_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s >=_c t)))) ==> ((\s. (!t. ((s >=_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s >=_c t)))) s)) = ((\s. (!t. ((s >=_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s >=_c t)))) s))
T c==> c= f0 f0 c= c==> ! ! c= c>=_c b0 * * part cIMAGE / cvector_add f0 b2 b1 c>=_c b0 b1 * / ! c= c>=_c b0 * * part cIMAGE / cvector_add f0 b2 b1 c>=_c b0 b1 f1 * / ! c= c>=_c b0 * * part cIMAGE / cvector_add f0 b2 b1 c>=_c b0 b1 f1
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- (((!a. (!s. (!x. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) ((IMAGE (\x. ((vector_add a) x))) x)) = (s x))))) ==> ((\a. (!s. (!x. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) ((IMAGE (\x. ((vector_add a) x))) x)) = (s x))))) orig)) = ((\a. (!s. (!x. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) ((IMAGE (\x. ((vector_add a) x))) x)) = (s x))))) orig))
T c= c==> ! ! ! c= cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 * b1 b2 * / ! ! c= cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 * b1 b2 f0 * / ! ! c= cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 * b1 b2 f0
- (orig = orig) |- (((!xs. (!n. ((((IMAGE (\x. ((vector_add orig) x))) o xs) n) = ((IMAGE (\x. ((vector_add orig) x))) (xs n))))) ==> ((\xs. (!n. ((((IMAGE (\x. ((vector_add orig) x))) o xs) n) = ((IMAGE (\x. ((vector_add orig) x))) (xs n))))) xs)) = ((\xs. (!n. ((((IMAGE (\x. ((vector_add orig) x))) o xs) n) = ((IMAGE (\x. ((vector_add orig) x))) (xs n))))) xs))
T c==> c= f0 f0 c= c==> ! ! c= * * * part co * part cIMAGE / cvector_add f0 b2 b0 b1 * * part cIMAGE / cvector_add f0 b2 * b0 b1 * / ! c= * * * part co * part cIMAGE / cvector_add f0 b2 b0 b1 * * part cIMAGE / cvector_add f0 b2 * b0 b1 f1 * / ! c= * * * part co * part cIMAGE / cvector_add f0 b2 b0 b1 * * part cIMAGE / cvector_add f0 b2 * b0 b1 f1
+ |- ((\a. (!p. (!x. (!y. ((((COND p) ((vector_add a) x)) ((vector_add a) y)) = ((vector_add a) (((COND p) x) y))))))) orig)
T * / ! ! ! c= cCOND b1 cvector_add b0 b2 cvector_add b0 b3 cvector_add b0 cCOND b1 b2 b3 f0
+ |- (((!a. (!s. (!t. ((((IMAGE (\x. ((vector_add a) x))) s) >=_c t) = (s >=_c t))))) ==> ((\a. (!s. (!t. ((((IMAGE (\x. ((vector_add a) x))) s) >=_c t) = (s >=_c t))))) orig)) = ((\a. (!s. (!t. ((((IMAGE (\x. ((vector_add a) x))) s) >=_c t) = (s >=_c t))))) orig))
T c= c==> ! ! ! c= c>=_c * * part cIMAGE / cvector_add b0 b3 b1 b2 c>=_c b1 b2 * / ! ! c= c>=_c * * part cIMAGE / cvector_add b0 b3 b1 b2 c>=_c b1 b2 f0 * / ! ! c= c>=_c * * part cIMAGE / cvector_add b0 b3 b1 b2 c>=_c b1 b2 f0
- (orig = orig) |- ((relative_interior ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (relative_interior s)))
T c==> c= f0 f0 c= * part crelative_interior * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 * part crelative_interior f1
+ |- (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) PSUBSET ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = (s PSUBSET t))))
T c= cPSUBSET * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f2 cPSUBSET f1 f2
- (orig = orig) |- (((!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) DIFF ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s DIFF t)))) ==> ((\t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) DIFF ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s DIFF t)))) t)) = ((\t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) DIFF ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s DIFF t)))) t))
T c==> c= f0 f0 c= c==> ! c= * * part cDIFF * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * * part cDIFF f1 b0 * / c= * * part cDIFF * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * * part cDIFF f1 b0 f2 * / c= * * part cDIFF * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * * part cDIFF f1 b0 f2
+ |- (((!a. (!s. (!x. ((((IMAGE (\y. ((vector_add a) y))) s) DELETE ((vector_add a) x)) = ((IMAGE (\y. ((vector_add a) y))) (s DELETE x)))))) ==> ((\a. (!s. (!x. ((((IMAGE (\y. ((vector_add a) y))) s) DELETE ((vector_add a) x)) = ((IMAGE (\y. ((vector_add a) y))) (s DELETE x)))))) orig)) = ((\a. (!s. (!x. ((((IMAGE (\y. ((vector_add a) y))) s) DELETE ((vector_add a) x)) = ((IMAGE (\y. ((vector_add a) y))) (s DELETE x)))))) orig))
T c= c==> ! ! ! c= * * part cDELETE * * part cIMAGE / cvector_add b0 b3 b1 cvector_add b0 b2 * * part cIMAGE / cvector_add b0 b3 * * part cDELETE b1 b2 * / ! ! c= * * part cDELETE * * part cIMAGE / cvector_add b0 b3 b1 cvector_add b0 b2 * * part cIMAGE / cvector_add b0 b3 * * part cDELETE b1 b2 f0 * / ! ! c= * * part cDELETE * * part cIMAGE / cvector_add b0 b3 b1 cvector_add b0 b2 * * part cIMAGE / cvector_add b0 b3 * * part cDELETE b1 b2 f0
- (orig = orig) |- (!s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) >=_c t) = (s >=_c t))))
T c==> c= f0 f0 ! ! c= c>=_c * * part cIMAGE / cvector_add f0 b2 b0 b1 c>=_c b0 b1
+ |- (!x. (!y. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add orig) x)) ((vector_add orig) y))) = ((vector_add orig) ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y))))))
T c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add f0 f1 cvector_add f0 f2 cvector_add f0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f1 f2
+ (orig = orig) |- ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))
T c==> c= f0 f0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- (((!a. (!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add a) x))) t)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((retract_of t) s))))) ==> ((\a. (!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add a) x))) t)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((retract_of t) s))))) orig)) = ((\a. (!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add a) x))) t)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((retract_of t) s))))) orig))
T c= c==> ! ! ! c= cretract_of * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cretract_of b1 b2 * / ! ! c= cretract_of * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cretract_of b1 b2 f0 * / ! ! c= cretract_of * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cretract_of b1 b2 f0
+ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) |- ((vec (NUMERAL _0)) IN ((vec (NUMERAL _0)) INSERT s))
T c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cIN cvec cNUMERAL c_0 * * part cINSERT cvec cNUMERAL c_0 f0
+ |- ((!s. (!n. (((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible (span s))))) = (!s. (!n. (((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s)))))))
T c= ! ! c==> c/\ c~ cIN cvec cNUMERAL c_0 b0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 b0 b1 c<= b1 cdimindex part cUNIV cnegligible * part cspan b0 ! ! c==> c/\ c~ cIN cvec cNUMERAL c_0 b0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 b0 b1 c<= b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 b0
+ |- (((!a. (!s. ((closure ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (closure s))))) ==> ((\a. (!s. ((closure ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (closure s))))) orig)) = ((\a. (!s. ((closure ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (closure s))))) orig))
T c= c==> ! ! c= * part cclosure * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cclosure b1 * / ! c= * part cclosure * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cclosure b1 f0 * / ! c= * part cclosure * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cclosure b1 f0
+ (~ ((vec (NUMERAL _0)) IN s)), (FINITE s), ((SUC (CARD s)) = n), (n <= (dimindex UNIV)) |- ((CARD s) < (dimindex UNIV))
T c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV c< cCARD f0 cdimindex part cUNIV
- (orig = orig) |- (((!l. (((MEM ((vector_add orig) x)) ((MAP (\x. ((vector_add orig) x))) l)) = ((MEM x) l))) ==> ((\l. (((MEM ((vector_add orig) x)) ((MAP (\x. ((vector_add orig) x))) l)) = ((MEM x) l))) l)) = ((\l. (((MEM ((vector_add orig) x)) ((MAP (\x. ((vector_add orig) x))) l)) = ((MEM x) l))) l))
T c==> c= f0 f0 c= c==> ! c= cMEM cvector_add f0 f1 cMAP / cvector_add f0 b1 b0 cMEM f1 b0 * / c= cMEM cvector_add f0 f1 cMAP / cvector_add f0 b1 b0 cMEM f1 b0 f2 * / c= cMEM cvector_add f0 f1 cMAP / cvector_add f0 b1 b0 cMEM f1 b0 f2
- (orig = orig) |- (!x. (!y. ((((COND p) ((vector_add orig) x)) ((vector_add orig) y)) = ((vector_add orig) (((COND p) x) y)))))
T c==> c= f0 f0 ! ! c= cCOND f1 cvector_add f0 b0 cvector_add f0 b1 cvector_add f0 cCOND f1 b0 b1
- (orig = orig) |- ((\s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) <=_c t) = (s <=_c t)))) s)
T c==> c= f0 f0 * / ! c= c<=_c * * part cIMAGE / cvector_add f0 b2 b0 b1 c<=_c b0 b1 f1
- (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) |- (((~ (_1772460 HAS_SIZE _1772461)) \/ (FINITE _1772460)) /\ ((~ (_1772460 HAS_SIZE _1772461)) \/ ((CARD _1772460) = _1772461)))
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c/\ c\/ c~ cHAS_SIZE f0 f1 cFINITE f0 c\/ c~ cHAS_SIZE f0 f1 c= cCARD f0 f1
+ (~ ((vec (NUMERAL _0)) IN s)), (FINITE s) |- ((FINITE s) /\ (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))
T c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c/\ cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
+ |- (!s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) <=_c t) = (s <=_c t))))
T c= c<=_c * * part cIMAGE / cvector_add f0 b0 f1 f2 c<=_c f1 f2
+ |- ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))
T c= cint_of_num c+ f0 f1 cint_add cint_of_num f0 cint_of_num f1
- |- ((!s'. ((!x. (~ (FINITE (x INSERT s')))) \/ (FINITE s))) = ((!s. (!x. (~ (FINITE (x INSERT s))))) \/ (FINITE s)))
T c= ! c\/ ! c~ cFINITE * * part cINSERT b1 b0 cFINITE f0 c\/ ! ! c~ cFINITE * * part cINSERT b1 b0 cFINITE f0
+ |- ((\a. (!s. (!x. ((((IMAGE (\y. ((vector_add a) y))) s) ((vector_add a) x)) = (s x))))) orig)
T * / ! ! c= cIMAGE / cvector_add b0 b3 b1 cvector_add b0 b2 * b1 b2 f0
+ |- (((!c. (!a. (!b. ((open_segment (((vector_add c) a) , ((vector_add c) b))) = ((IMAGE (\x. ((vector_add c) x))) (open_segment (a , b))))))) ==> ((\c. (!a. (!b. ((open_segment (((vector_add c) a) , ((vector_add c) b))) = ((IMAGE (\x. ((vector_add c) x))) (open_segment (a , b))))))) orig)) = ((\c. (!a. (!b. ((open_segment (((vector_add c) a) , ((vector_add c) b))) = ((IMAGE (\x. ((vector_add c) x))) (open_segment (a , b))))))) orig))
T c= c==> ! ! ! c= * part copen_segment c, cvector_add b0 b1 cvector_add b0 b2 * * part cIMAGE / cvector_add b0 b3 * part copen_segment c, b1 b2 * / ! ! c= * part copen_segment c, cvector_add b0 b1 cvector_add b0 b2 * * part cIMAGE / cvector_add b0 b3 * part copen_segment c, b1 b2 f0 * / ! ! c= * part copen_segment c, cvector_add b0 b1 cvector_add b0 b2 * * part cIMAGE / cvector_add b0 b3 * part copen_segment c, b1 b2 f0
- (orig = orig) |- ((\r. ((sphere (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (sphere (x , r))))) r)
T c==> c= f0 f0 * / c= * part csphere c, cvector_add f0 f1 b0 * * part cIMAGE / cvector_add f0 b1 * part csphere c, f1 b0 f2
- (orig = orig) |- (!l. ((LENGTH ((MAP (\x. ((vector_add orig) x))) l)) = (LENGTH l)))
T c==> c= f0 f0 ! c= cLENGTH cMAP / cvector_add f0 b1 b0 cLENGTH b0
+ |- (((!a. (!s. ((COUNTABLE ((IMAGE (\y. ((vector_add a) y))) s)) = (COUNTABLE s)))) ==> ((\a. (!s. ((COUNTABLE ((IMAGE (\y. ((vector_add a) y))) s)) = (COUNTABLE s)))) orig)) = ((\a. (!s. ((COUNTABLE ((IMAGE (\y. ((vector_add a) y))) s)) = (COUNTABLE s)))) orig))
T c= c==> ! ! c= cCOUNTABLE * * part cIMAGE / cvector_add b0 b2 b1 cCOUNTABLE b1 * / ! c= cCOUNTABLE * * part cIMAGE / cvector_add b0 b2 b1 cCOUNTABLE b1 f0 * / ! c= cCOUNTABLE * * part cIMAGE / cvector_add b0 b2 b1 cCOUNTABLE b1 f0
- (orig = orig) |- (!n. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) HAS_SIZE n) = (s HAS_SIZE n)))
T c==> c= f0 f0 ! c= cHAS_SIZE * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 b0 cHAS_SIZE f1 b0
+ |- (((!a. (!x. (!r. ((ball (((vector_add a) x) , r)) = ((IMAGE (\y. ((vector_add a) y))) (ball (x , r))))))) ==> ((\a. (!x. (!r. ((ball (((vector_add a) x) , r)) = ((IMAGE (\y. ((vector_add a) y))) (ball (x , r))))))) orig)) = ((\a. (!x. (!r. ((ball (((vector_add a) x) , r)) = ((IMAGE (\y. ((vector_add a) y))) (ball (x , r))))))) orig))
T c= c==> ! ! ! c= * part cball c, cvector_add b0 b1 b2 * * part cIMAGE / cvector_add b0 b3 * part cball c, b1 b2 * / ! ! c= * part cball c, cvector_add b0 b1 b2 * * part cIMAGE / cvector_add b0 b3 * part cball c, b1 b2 f0 * / ! ! c= * part cball c, cvector_add b0 b1 b2 * * part cIMAGE / cvector_add b0 b3 * part cball c, b1 b2 f0
+ (orig = orig) |- ((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) /\ ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))))))))))
T c==> c= f0 f0 c/\ ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
- (orig = orig) |- ((\s. (((hull convex) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) ((hull convex) s)))) s)
T c==> c= f0 f0 * / c= * * part chull part cconvex * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part chull part cconvex b0 f1
- (orig = orig) |- ((((IMAGE (\x. ((vector_add orig) x))) x) IN ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (x IN s))
T c==> c= f0 f0 c= cIN * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f2 cIN f1 f2
+ |- (((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) = ((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV))))) ==> ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> ((negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s))) = q')) ==> ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s)))) = (((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> q')))) = ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> ((negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s))) = q')) ==> ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s)))) = (((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> q'))))
T c= c==> c= c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV c==> c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV c= cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 f2 c= c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV f2 c==> c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV c= cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 f2 c= c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV f2
- (orig = orig) |- ((\s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) s)
T c==> c= f0 f0 * / c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 f1
- (orig = orig) |- ((\s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) =_c t) = (s =_c t)))) s)
T c==> c= f0 f0 * / ! c= c=_c * * part cIMAGE / cvector_add f0 b2 b0 b1 c=_c b0 b1 f1
- |- ((\p'. (!q'. ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) = p') ==> ((p' ==> ((negligible (span s)) = q')) ==> ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible (span s))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV b0 c==> c==> b0 c= cnegligible * part cspan f0 b1 c= c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> b0 b1 f2
- (orig = orig) |- (!x. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) DELETE ((IMAGE (\x. ((vector_add orig) x))) x)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s DELETE x))))
T c==> c= f0 f0 ! c= * * part cDELETE * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * * part cDELETE f1 b0
+ |- ((\a. (!s. ((is_interval ((IMAGE (\x. ((vector_add a) x))) s)) = (is_interval s)))) orig)
T * / ! c= cis_interval * * part cIMAGE / cvector_add b0 b2 b1 cis_interval b1 f0
- (orig = orig) |- (((!g. (((shiftpath t) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o ((shiftpath t) g)))) ==> ((\g. (((shiftpath t) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o ((shiftpath t) g)))) g)) = ((\g. (((shiftpath t) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o ((shiftpath t) g)))) g))
T c==> c= f0 f0 c= c==> ! c= * * part cshiftpath f1 * * part co / cvector_add f0 b1 b0 * * part co / cvector_add f0 b1 * * part cshiftpath f1 b0 * / c= * * part cshiftpath f1 * * part co / cvector_add f0 b1 b0 * * part co / cvector_add f0 b1 * * part cshiftpath f1 b0 f2 * / c= * * part cshiftpath f1 * * part co / cvector_add f0 b1 b0 * * part co / cvector_add f0 b1 * * part cshiftpath f1 b0 f2
+ |- (((!a. (!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add a) x))) f)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((edge_of f) s))))) ==> ((\a. (!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add a) x))) f)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((edge_of f) s))))) orig)) = ((\a. (!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add a) x))) f)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((edge_of f) s))))) orig))
T c= c==> ! ! ! c= cedge_of * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cedge_of b1 b2 * / ! ! c= cedge_of * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cedge_of b1 b2 f0 * / ! ! c= cedge_of * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cedge_of b1 b2 f0
- (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) |- (!s. ((!x. (~ (FINITE (x INSERT s)))) \/ (FINITE s)))
T c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 ! c\/ ! c~ cFINITE * * part cINSERT b1 b0 cFINITE b0
- (orig = orig) |- (((++ ((\x. ((vector_add orig) x)) o g1)) ((\x. ((vector_add orig) x)) o g2)) = ((\x. ((vector_add orig) x)) o ((++ g1) g2)))
T c==> c= f0 f0 c= * * part c++ * * part co / cvector_add f0 b0 f1 * * part co / cvector_add f0 b0 f2 * * part co / cvector_add f0 b0 * * part c++ f1 f2
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l))))))))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2
- |- ((~ (_1772496 = _1772498)) \/ ((~ (_1772497 = _1772499)) \/ ((_1772498 IN _1772499) \/ (~ (_1772496 IN _1772497)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- ((\P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) P)
T * / ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 f0
+ |- ((\n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) n)
T * / c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 f1
- (orig = orig) |- (((!t. ((((IMAGE (\y. ((vector_add orig) y))) s) INTER ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s INTER t)))) ==> ((\t. ((((IMAGE (\y. ((vector_add orig) y))) s) INTER ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s INTER t)))) t)) = ((\t. ((((IMAGE (\y. ((vector_add orig) y))) s) INTER ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s INTER t)))) t))
T c==> c= f0 f0 c= c==> ! c= * * part cINTER * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part cINTER f1 b0 * / c= * * part cINTER * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part cINTER f1 b0 f2 * / c= * * part cINTER * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part cINTER f1 b0 f2
- (orig = orig) |- (!g. ((simple_path ((\x. ((vector_add orig) x)) o g)) = (simple_path g)))
T c==> c= f0 f0 ! c= csimple_path * * part co / cvector_add f0 b1 b0 csimple_path b0
- |- ((~ (_1772508 = _1772509)) \/ ((negligible _1772509) \/ (~ (negligible _1772508))))
T c\/ c~ c= f0 f1 c\/ cnegligible f1 c~ cnegligible f0
+ (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) |- (!s. (!x. ((FINITE (x INSERT s)) \/ (~ (FINITE s)))))
T c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 ! ! c\/ cFINITE * * part cINSERT b1 b0 c~ cFINITE b0
+ (orig = orig) |- (((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) ==> ((\s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) s)) = ((\s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) s))
T c==> c= f0 f0 c= c==> ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 * / c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 f1 * / c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 f1
+ |- (((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))))) = ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))))))))
T c= c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- (((!a. (!s. (((locally path_connected) ((IMAGE (\x. ((vector_add a) x))) s)) = ((locally path_connected) s)))) ==> ((\a. (!s. (((locally path_connected) ((IMAGE (\x. ((vector_add a) x))) s)) = ((locally path_connected) s)))) orig)) = ((\a. (!s. (((locally path_connected) ((IMAGE (\x. ((vector_add a) x))) s)) = ((locally path_connected) s)))) orig))
T c= c==> ! ! c= clocally part cpath_connected * * part cIMAGE / cvector_add b0 b2 b1 clocally part cpath_connected b1 * / ! c= clocally part cpath_connected * * part cIMAGE / cvector_add b0 b2 b1 clocally part cpath_connected b1 f0 * / ! c= clocally part cpath_connected * * part cIMAGE / cvector_add b0 b2 b1 clocally part cpath_connected b1 f0
- |- ((((FINITE s) = (FINITE s)) ==> (((FINITE s) ==> ((((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = q')) ==> (((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = ((FINITE s) ==> q')))) = (((FINITE s) ==> ((((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = q')) ==> (((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = ((FINITE s) ==> q'))))
T c= c==> c= cFINITE f0 cFINITE f0 c==> c==> cFINITE f0 c= c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 f2 c= c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> cFINITE f0 f2 c==> c==> cFINITE f0 c= c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 f2 c= c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> cFINITE f0 f2
- |- (((((SUC (CARD s)) = n) = ((SUC (CARD s)) = n)) ==> ((((SUC (CARD s)) = n) ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = q')) ==> ((((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (((SUC (CARD s)) = n) ==> q')))) = ((((SUC (CARD s)) = n) ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = q')) ==> ((((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (((SUC (CARD s)) = n) ==> q'))))
T c= c==> c= c= cSUC cCARD f0 f1 c= cSUC cCARD f0 f1 c==> c==> c= cSUC cCARD f0 f1 c= c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 f2 c= c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c= cSUC cCARD f0 f1 f2 c==> c==> c= cSUC cCARD f0 f1 c= c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 f2 c= c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c= cSUC cCARD f0 f1 f2
+ |- (((!a. (!s. ((polyhedron ((IMAGE (\x. ((vector_add a) x))) s)) = (polyhedron s)))) ==> ((\a. (!s. ((polyhedron ((IMAGE (\x. ((vector_add a) x))) s)) = (polyhedron s)))) orig)) = ((\a. (!s. ((polyhedron ((IMAGE (\x. ((vector_add a) x))) s)) = (polyhedron s)))) orig))
T c= c==> ! ! c= cpolyhedron * * part cIMAGE / cvector_add b0 b2 b1 cpolyhedron b1 * / ! c= cpolyhedron * * part cIMAGE / cvector_add b0 b2 b1 cpolyhedron b1 f0 * / ! c= cpolyhedron * * part cIMAGE / cvector_add b0 b2 b1 cpolyhedron b1 f0
- (orig = orig) |- ((\s. ((connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (connected s))) s)
T c==> c= f0 f0 * / c= cconnected * * part cIMAGE / cvector_add f0 b1 b0 cconnected b0 f1
+ (orig = orig) |- ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))
T c==> c= f0 f0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ (!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) |- (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))
T c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 ! ! c==> c/\ c<= f0 b0 c< b0 b1 c< f0 b1
- (orig = orig) |- (((!u. (!v. ((((subpath u) v) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o (((subpath u) v) g))))) ==> ((\u. (!v. ((((subpath u) v) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o (((subpath u) v) g))))) u)) = ((\u. (!v. ((((subpath u) v) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o (((subpath u) v) g))))) u))
T c==> c= f0 f0 c= c==> ! ! c= * * * part csubpath b0 b1 * * part co / cvector_add f0 b2 f1 * * part co / cvector_add f0 b2 * * * part csubpath b0 b1 f1 * / ! c= * * * part csubpath b0 b1 * * part co / cvector_add f0 b2 f1 * * part co / cvector_add f0 b2 * * * part csubpath b0 b1 f1 f2 * / ! c= * * * part csubpath b0 b1 * * part co / cvector_add f0 b2 f1 * * part co / cvector_add f0 b2 * * * part csubpath b0 b1 f1 f2
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l))))))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c= * part cGSPEC / c? / cSETSPEC b0 * f1 b1 b1 * * part cIMAGE * part cMAP / cvector_add f0 b0 * part cGSPEC / c? / cSETSPEC b0 * f1 cMAP / cvector_add f0 b2 b1 b1
- (_1772518 = _1772520), (_1772519 = _1772521) |- ((_1772518 = _1772520) /\ (((hull _1772518) _1772519) = ((hull _1772520) _1772521)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part chull f0 f2 * * part chull f1 f3
+ |- ((\a. (!u. ((UNIONS ((IMAGE (IMAGE (IMAGE (\x. ((vector_add a) x))))) u)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (UNIONS u))))) orig)
T * / ! c= * part cUNIONS * * part cIMAGE * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b2 * part cUNIONS b1 f0
+ |- (((!q'. (((FINITE s) = p') ==> ((p' ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = q')) ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = (p' ==> q'))))) ==> ((\q'. (((FINITE s) = p') ==> ((p' ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = q')) ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = (p' ==> q'))))) q')) = ((\q'. (((FINITE s) = p') ==> ((p' ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = q')) ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cFINITE f0 f1 c==> c==> f1 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 b0 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 c==> f1 b0 * / c==> c= cFINITE f0 f1 c==> c==> f1 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 b0 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 c==> f1 b0 f3 * / c==> c= cFINITE f0 f1 c==> c==> f1 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 b0 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 c==> f1 b0 f3
- (orig = orig) |- (!s. (((locally connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally connected) s)))
T c==> c= f0 f0 ! c= clocally part cconnected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cconnected b0
+ |- (((!c. (!a. (!b. ((closed_segment ((CONS (((vector_add c) a) , ((vector_add c) b))) NIL)) = ((IMAGE (\x. ((vector_add c) x))) (closed_segment ((CONS (a , b)) NIL))))))) ==> ((\c. (!a. (!b. ((closed_segment ((CONS (((vector_add c) a) , ((vector_add c) b))) NIL)) = ((IMAGE (\x. ((vector_add c) x))) (closed_segment ((CONS (a , b)) NIL))))))) orig)) = ((\c. (!a. (!b. ((closed_segment ((CONS (((vector_add c) a) , ((vector_add c) b))) NIL)) = ((IMAGE (\x. ((vector_add c) x))) (closed_segment ((CONS (a , b)) NIL))))))) orig))
T c= c==> ! ! ! c= * part cclosed_segment cCONS c, cvector_add b0 b1 cvector_add b0 b2 cNIL * * part cIMAGE / cvector_add b0 b3 * part cclosed_segment cCONS c, b1 b2 cNIL * / ! ! c= * part cclosed_segment cCONS c, cvector_add b0 b1 cvector_add b0 b2 cNIL * * part cIMAGE / cvector_add b0 b3 * part cclosed_segment cCONS c, b1 b2 cNIL f0 * / ! ! c= * part cclosed_segment cCONS c, cvector_add b0 b1 cvector_add b0 b2 cNIL * * part cIMAGE / cvector_add b0 b3 * part cclosed_segment cCONS c, b1 b2 cNIL f0
- (orig = orig) |- (!g. ((pathfinish ((\x. ((vector_add orig) x)) o g)) = ((vector_add orig) (pathfinish g))))
T c==> c= f0 f0 ! c= cpathfinish * * part co / cvector_add f0 b1 b0 cvector_add f0 cpathfinish b0
+ |- (((!q'. ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) = p') ==> ((p' ==> ((negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s))) = q')) ==> ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s)))) = (p' ==> q'))))) ==> ((\q'. ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) = p') ==> ((p' ==> ((negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s))) = q')) ==> ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s)))) = (p' ==> q'))))) q')) = ((\q'. ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) = p') ==> ((p' ==> ((negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s))) = q')) ==> ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV f2 c==> c==> f2 c= cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 b0 c= c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 c==> f2 b0 * / c==> c= c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV f2 c==> c==> f2 c= cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 b0 c= c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 c==> f2 b0 f3 * / c==> c= c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV f2 c==> c==> f2 c= cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 b0 c= c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 c==> f2 b0 f3
- (orig = orig) |- ((\s. ((inside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (inside s)))) s)
T c==> c= f0 f0 * / c= * part cinside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cinside b0 f1
- (orig = orig) |- (!t. (((homeomorphic ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homeomorphic s) t)))
T c==> c= f0 f0 ! c= chomeomorphic * * part cIMAGE / cvector_add f0 b1 f1 b0 chomeomorphic f1 b0
+ |- ((\p'. (!q'. (((FINITE s) = p') ==> ((p' ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = q')) ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = (p' ==> q')))))) p')
T * / ! c==> c= cFINITE f0 b0 c==> c==> b0 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b1 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> b0 b1 f2
+ |- (!s. ((INFINITE ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (INFINITE s)))
T c= cINFINITE * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 cINFINITE f1
+ |- ((\a. (!g. ((pathstart ((\x. ((vector_add a) x)) o g)) = ((vector_add a) (pathstart g))))) orig)
T * / ! c= cpathstart * * part co / cvector_add b0 b2 b1 cvector_add b0 cpathstart b1 f0
+ (~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) |- (?x. (?s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s))))))))
T c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c? / c? / c/\ c/\ c\/ c~ c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c/\ c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT b0 b1
- (orig = orig) |- (!s. ((barycentre ((IMAGE (\x. ((vector_add orig) x))) s)) = ((vector_add (((COND ((FINITE s) /\ (~ (s = EMPTY)))) orig) (vec (NUMERAL _0)))) (barycentre s))))
T c==> c= f0 f0 ! c= cbarycentre * * part cIMAGE / cvector_add f0 b1 b0 cvector_add cCOND c/\ cFINITE b0 c~ c= b0 part cEMPTY f0 cvec cNUMERAL c_0 cbarycentre b0
- (_1772497 = _1772499), (_1772496 = _1772498) |- ((_1772498 IN _1772499) \/ (~ (_1772496 IN _1772497)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cIN f3 f1 c~ cIN f2 f0
- (orig = orig) |- ((\x. ((((IMAGE (\y. ((vector_add orig) y))) s) DELETE ((vector_add orig) x)) = ((IMAGE (\y. ((vector_add orig) y))) (s DELETE x)))) x)
T c==> c= f0 f0 * / c= * * part cDELETE * * part cIMAGE / cvector_add f0 b1 f1 cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b1 * * part cDELETE f1 b0 f2
- (orig = orig) |- (((!t. ((s >=_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s >=_c t))) ==> ((\t. ((s >=_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s >=_c t))) t)) = ((\t. ((s >=_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s >=_c t))) t))
T c==> c= f0 f0 c= c==> ! c= c>=_c f1 * * part cIMAGE / cvector_add f0 b1 b0 c>=_c f1 b0 * / c= c>=_c f1 * * part cIMAGE / cvector_add f0 b1 b0 c>=_c f1 b0 f2 * / c= c>=_c f1 * * part cIMAGE / cvector_add f0 b1 b0 c>=_c f1 b0 f2
- (orig = orig) |- ((\b. ((closed_interval ((CONS (((vector_add orig) a) , ((vector_add orig) b))) NIL)) = ((IMAGE (\x. ((vector_add orig) x))) (closed_interval ((CONS (a , b)) NIL))))) b)
T c==> c= f0 f0 * / c= * part cclosed_interval cCONS c, cvector_add f0 f1 cvector_add f0 b0 cNIL * * part cIMAGE / cvector_add f0 b1 * part cclosed_interval cCONS c, f1 b0 cNIL f2
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- (orig = orig) |- ((\x. (!r. ((ball (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (ball (x , r)))))) x)
T c==> c= f0 f0 * / ! c= * part cball c, cvector_add f0 b0 b1 * * part cIMAGE / cvector_add f0 b2 * part cball c, b0 b1 f1
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((\P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) P)
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 * / c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 f1
- |- ((?s. t) = t)
T c= c? / f0 f0
+ |- (((!a. (!s. ((coplanar ((IMAGE (\x. ((vector_add a) x))) s)) = (coplanar s)))) ==> ((\a. (!s. ((coplanar ((IMAGE (\x. ((vector_add a) x))) s)) = (coplanar s)))) orig)) = ((\a. (!s. ((coplanar ((IMAGE (\x. ((vector_add a) x))) s)) = (coplanar s)))) orig))
T c= c==> ! ! c= ccoplanar * * part cIMAGE / cvector_add b0 b2 b1 ccoplanar b1 * / ! c= ccoplanar * * part cIMAGE / cvector_add b0 b2 b1 ccoplanar b1 f0 * / ! c= ccoplanar * * part cIMAGE / cvector_add b0 b2 b1 ccoplanar b1 f0
- (orig = orig) |- (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) PSUBSET ((IMAGE (\y. ((vector_add orig) y))) t)) = (s PSUBSET t)))
T c==> c= f0 f0 ! c= cPSUBSET * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cPSUBSET f1 b0
+ |- ((!g. (!u. (!v. ((((subpath u) v) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o (((subpath u) v) g)))))) /\ ((!b. (!c. ((linepath (((vector_add orig) b) , ((vector_add orig) c))) = ((\x. ((vector_add orig) x)) o (linepath (b , c)))))) /\ ((!s. (!x. (((path_component ((IMAGE (\x. ((vector_add orig) x))) s)) ((vector_add orig) x)) = ((IMAGE (\x. ((vector_add orig) x))) ((path_component s) x))))) /\ ((!s. ((path_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (path_connected s))) /\ ((!s. (((locally path_connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally path_connected) s))) /\ ((!s. (((locally connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally connected) s))) /\ ((!s. ((inside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (inside s)))) /\ ((!s. ((outside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (outside s)))) /\ ((!s. ((simply_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (simply_connected s))) /\ ((!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homotopy_equivalent s) t)))) /\ ((!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) /\ ((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) /\ ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))))))))))))))))))))))
T c/\ ! ! ! c= * * * part csubpath b1 b2 * * part co / cvector_add f0 b3 b0 * * part co / cvector_add f0 b3 * * * part csubpath b1 b2 b0 c/\ ! ! c= * part clinepath c, cvector_add f0 b0 cvector_add f0 b1 * * part co / cvector_add f0 b2 * part clinepath c, b0 b1 c/\ ! ! c= * * part cpath_component * * part cIMAGE / cvector_add f0 b2 b0 cvector_add f0 b1 * * part cIMAGE / cvector_add f0 b2 * * part cpath_component b0 b1 c/\ ! c= cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 cpath_connected b0 c/\ ! c= clocally part cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cpath_connected b0 c/\ ! c= clocally part cconnected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cconnected b0 c/\ ! c= * part cinside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cinside b0 c/\ ! c= * part coutside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part coutside b0 c/\ ! c= csimply_connected * * part cIMAGE / cvector_add f0 b1 b0 csimply_connected b0 c/\ ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b2 b0 b1 chomotopy_equivalent b0 b1 c/\ ! ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 c/\ ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
- |- (((!q'. ((((SUC (CARD s)) = n) = p') ==> ((p' ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = q')) ==> ((((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (p' ==> q'))))) ==> ((\q'. ((((SUC (CARD s)) = n) = p') ==> ((p' ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = q')) ==> ((((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (p' ==> q'))))) q')) = ((\q'. ((((SUC (CARD s)) = n) = p') ==> ((p' ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = q')) ==> ((((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c= cSUC cCARD f0 f1 f2 c==> c==> f2 c= c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b0 c= c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> f2 b0 * / c==> c= c= cSUC cCARD f0 f1 f2 c==> c==> f2 c= c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b0 c= c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> f2 b0 f3 * / c==> c= c= cSUC cCARD f0 f1 f2 c==> c==> f2 c= c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b0 c= c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> f2 b0 f3
+ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) |- ((((vec (NUMERAL _0)) IN ((vec (NUMERAL _0)) INSERT s)) ==> (((vec (NUMERAL _0)) IN ((hull affine) ((vec (NUMERAL _0)) INSERT s))) = T)) = (((vec (NUMERAL _0)) IN ((hull affine) ((vec (NUMERAL _0)) INSERT s))) = T))
T c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV c= c==> cIN cvec cNUMERAL c_0 * * part cINSERT cvec cNUMERAL c_0 f0 c= cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 cT c= cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 cT
+ |- (!s. (!b. (!c. ((((vector_add ((vector_add orig) b)) c) IN ((IMAGE (\x. ((vector_add orig) x))) s)) = (((vector_add b) c) IN s)))))
T c= cIN cvector_add cvector_add f0 f1 f2 * * part cIMAGE / cvector_add f0 b0 f3 cIN cvector_add f1 f2 f3
+ |- ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))
T c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
- ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- ((CARD (x INSERT s)) <= (dimindex UNIV))
T c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV
- (orig = orig) |- ((\s. (((locally compact) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally compact) s))) s)
T c==> c= f0 f0 * / c= clocally part ccompact * * part cIMAGE / cvector_add f0 b1 b0 clocally part ccompact b0 f1
+ |- ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))
T c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- ((?n. ((m <= n) /\ (n < p))) ==> (m < p))
T c==> c? / c/\ c<= f0 b0 c< b0 f1 c< f0 f1
+ |- (~ (~ (((int_le (int_of_num (NUMERAL _0))) _1772535) ==> (((int_le (int_of_num (NUMERAL _0))) _1772536) ==> (((int_le (int_of_num (NUMERAL _0))) _1772537) ==> (((vec (NUMERAL _0)) IN s) \/ ((~ (FINITE s)) \/ ((~ (((int_add _1772536) (int_of_num (NUMERAL (BIT1 _0)))) = _1772535)) \/ ((~ ((int_le _1772535) _1772537)) \/ ((int_lt _1772536) _1772537))))))))))
T c~ c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c==> cint_le cint_of_num cNUMERAL c_0 f2 c\/ cIN cvec cNUMERAL c_0 f3 c\/ c~ cFINITE f3 c\/ c~ c= cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0 c\/ c~ cint_le f0 f2 cint_lt f1 f2
- (orig = orig) |- (((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) ==> ((\x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) x)) = ((\x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) x))
T c==> c= f0 f0 c= c==> ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 * / ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 f1 * / ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 f1
- (orig = orig) |- (!g. (!k. (((IMAGE ((\y. ((vector_add orig) y)) o g)) k) = ((IMAGE (\y. ((vector_add orig) y))) ((IMAGE g) k)))))
T c==> c= f0 f0 ! ! c= * * part cIMAGE * * part co / cvector_add f0 b2 b0 b1 * * part cIMAGE / cvector_add f0 b2 * * part cIMAGE b0 b1
- |- (((n <= (dimindex UNIV)) = p') ==> ((p' ==> ((negligible (span s)) = q')) ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = (p' ==> q'))))
T c==> c= c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= cnegligible * part cspan f2 f3 c= c==> c<= f0 cdimindex part cUNIV cnegligible * part cspan f2 c==> f1 f3
+ |- (!x. (!y. ((midpoint (((vector_add orig) x) , ((vector_add orig) y))) = ((vector_add orig) (midpoint (x , y))))))
T c= cmidpoint c, cvector_add f0 f1 cvector_add f0 f2 cvector_add f0 cmidpoint c, f1 f2
+ |- (!s. (!n. ((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))))))
T c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
- (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((FINITE s) ==> ((((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = q')) ==> (((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = ((FINITE s) ==> q')))
T c==> c==> cFINITE f0 c= c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 f2 c= c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> cFINITE f0 f2
+ |- (!s. ((FINITE ((IMAGE (\y. ((vector_add orig) y))) s)) = (FINITE s)))
T c= cFINITE * * part cIMAGE / cvector_add f0 b0 f1 cFINITE f1
- (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- ((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
+ (!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) |- ((!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) /\ (!m. (!p. ((?n. ((m <= n) /\ (n < p))) ==> (m < p)))))
T c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 c/\ ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 ! ! c==> c? / c/\ c<= b0 b2 c< b2 b1 c< b0 b1
- (orig = orig) |- (!x. (((path_component ((IMAGE (\x. ((vector_add orig) x))) s)) ((vector_add orig) x)) = ((IMAGE (\x. ((vector_add orig) x))) ((path_component s) x))))
T c==> c= f0 f0 ! c= * * part cpath_component * * part cIMAGE / cvector_add f0 b1 f1 cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b1 * * part cpath_component f1 b0
- (orig = orig) |- (((!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s))) ==> ((\s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s))) s)) = ((\s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s))) s))
T c==> c= f0 f0 c= c==> ! c= cedge_of * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cedge_of f1 b0 * / c= cedge_of * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cedge_of f1 b0 f2 * / c= cedge_of * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cedge_of f1 b0 f2
- (orig = orig) |- (((!b. ((closed_segment ((CONS (((vector_add orig) a) , ((vector_add orig) b))) NIL)) = ((IMAGE (\x. ((vector_add orig) x))) (closed_segment ((CONS (a , b)) NIL))))) ==> ((\b. ((closed_segment ((CONS (((vector_add orig) a) , ((vector_add orig) b))) NIL)) = ((IMAGE (\x. ((vector_add orig) x))) (closed_segment ((CONS (a , b)) NIL))))) b)) = ((\b. ((closed_segment ((CONS (((vector_add orig) a) , ((vector_add orig) b))) NIL)) = ((IMAGE (\x. ((vector_add orig) x))) (closed_segment ((CONS (a , b)) NIL))))) b))
T c==> c= f0 f0 c= c==> ! c= * part cclosed_segment cCONS c, cvector_add f0 f1 cvector_add f0 b0 cNIL * * part cIMAGE / cvector_add f0 b1 * part cclosed_segment cCONS c, f1 b0 cNIL * / c= * part cclosed_segment cCONS c, cvector_add f0 f1 cvector_add f0 b0 cNIL * * part cIMAGE / cvector_add f0 b1 * part cclosed_segment cCONS c, f1 b0 cNIL f2 * / c= * part cclosed_segment cCONS c, cvector_add f0 f1 cvector_add f0 b0 cNIL * * part cIMAGE / cvector_add f0 b1 * part cclosed_segment cCONS c, f1 b0 cNIL f2
+ |- ((\a. (!g. (!k. (((IMAGE ((IMAGE (\x. ((vector_add a) x))) o g)) k) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) ((IMAGE g) k)))))) orig)
T * / ! ! c= * * part cIMAGE * * part co * part cIMAGE / cvector_add b0 b3 b1 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 * * part cIMAGE b1 b2 f0
- (orig = orig) |- (((!t. ((((IMAGE (\x. ((vector_add orig) x))) s) >_c t) = (s >_c t))) ==> ((\t. ((((IMAGE (\x. ((vector_add orig) x))) s) >_c t) = (s >_c t))) t)) = ((\t. ((((IMAGE (\x. ((vector_add orig) x))) s) >_c t) = (s >_c t))) t))
T c==> c= f0 f0 c= c==> ! c= c>_c * * part cIMAGE / cvector_add f0 b1 f1 b0 c>_c f1 b0 * / c= c>_c * * part cIMAGE / cvector_add f0 b1 f1 b0 c>_c f1 b0 f2 * / c= c>_c * * part cIMAGE / cvector_add f0 b1 f1 b0 c>_c f1 b0 f2
+ (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0
+ |- (((!a. (!s. (((locally connected) ((IMAGE (\x. ((vector_add a) x))) s)) = ((locally connected) s)))) ==> ((\a. (!s. (((locally connected) ((IMAGE (\x. ((vector_add a) x))) s)) = ((locally connected) s)))) orig)) = ((\a. (!s. (((locally connected) ((IMAGE (\x. ((vector_add a) x))) s)) = ((locally connected) s)))) orig))
T c= c==> ! ! c= clocally part cconnected * * part cIMAGE / cvector_add b0 b2 b1 clocally part cconnected b1 * / ! c= clocally part cconnected * * part cIMAGE / cvector_add b0 b2 b1 clocally part cconnected b1 f0 * / ! c= clocally part cconnected * * part cIMAGE / cvector_add b0 b2 b1 clocally part cconnected b1 f0
+ |- ((\a. (!s. ((contractible ((IMAGE (\x. ((vector_add a) x))) s)) = (contractible s)))) orig)
T * / ! c= ccontractible * * part cIMAGE / cvector_add b0 b2 b1 ccontractible b1 f0
- (orig = orig) |- (!c. ((((vector_add ((vector_add orig) b)) c) IN ((IMAGE (\x. ((vector_add orig) x))) s)) = (((vector_add b) c) IN s)))
T c==> c= f0 f0 ! c= cIN cvector_add cvector_add f0 f1 b0 * * part cIMAGE / cvector_add f0 b1 f2 cIN cvector_add f1 b0 f2
- (orig = orig) |- (((!s. (!x. ((((IMAGE (\y. ((vector_add orig) y))) s) ((vector_add orig) x)) = (s x)))) ==> ((\s. (!x. ((((IMAGE (\y. ((vector_add orig) y))) s) ((vector_add orig) x)) = (s x)))) s)) = ((\s. (!x. ((((IMAGE (\y. ((vector_add orig) y))) s) ((vector_add orig) x)) = (s x)))) s))
T c==> c= f0 f0 c= c==> ! ! c= cIMAGE / cvector_add f0 b2 b0 cvector_add f0 b1 * b0 b1 * / ! c= cIMAGE / cvector_add f0 b2 b0 cvector_add f0 b1 * b0 b1 f1 * / ! c= cIMAGE / cvector_add f0 b2 b0 cvector_add f0 b1 * b0 b1 f1
+ |- (!s. (!t. ((s =_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s =_c t))))
T c= c=_c f0 * * part cIMAGE / cvector_add f1 b0 f2 c=_c f0 f2
- (orig = orig) |- (((!x. (!y. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add orig) x)) ((vector_add orig) y))) = ((vector_add orig) ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y)))))) ==> ((\x. (!y. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add orig) x)) ((vector_add orig) y))) = ((vector_add orig) ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y)))))) x)) = ((\x. (!y. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add orig) x)) ((vector_add orig) y))) = ((vector_add orig) ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y)))))) x))
T c==> c= f0 f0 c= c==> ! ! c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add f0 b0 cvector_add f0 b1 cvector_add f0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b0 b1 * / ! c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add f0 b0 cvector_add f0 b1 cvector_add f0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b0 b1 f1 * / ! c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add f0 b0 cvector_add f0 b1 cvector_add f0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b0 b1 f1
- (orig = orig) |- (((!b. (!c. ((((vector_add ((vector_add orig) b)) c) IN ((IMAGE (\x. ((vector_add orig) x))) s)) = (((vector_add b) c) IN s)))) ==> ((\b. (!c. ((((vector_add ((vector_add orig) b)) c) IN ((IMAGE (\x. ((vector_add orig) x))) s)) = (((vector_add b) c) IN s)))) b)) = ((\b. (!c. ((((vector_add ((vector_add orig) b)) c) IN ((IMAGE (\x. ((vector_add orig) x))) s)) = (((vector_add b) c) IN s)))) b))
T c==> c= f0 f0 c= c==> ! ! c= cIN cvector_add cvector_add f0 b0 b1 * * part cIMAGE / cvector_add f0 b2 f1 cIN cvector_add b0 b1 f1 * / ! c= cIN cvector_add cvector_add f0 b0 b1 * * part cIMAGE / cvector_add f0 b2 f1 cIN cvector_add b0 b1 f1 f2 * / ! c= cIN cvector_add cvector_add f0 b0 b1 * * part cIMAGE / cvector_add f0 b2 f1 cIN cvector_add b0 b1 f1 f2
- (orig = orig) |- ((\u. ((UNIONS ((IMAGE (IMAGE (\y. ((vector_add orig) y)))) u)) = ((IMAGE (\y. ((vector_add orig) y))) (UNIONS u)))) u)
T c==> c= f0 f0 * / c= * part cUNIONS * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cUNIONS b0 f1
- (orig = orig) |- (!s. ((components ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (components s))))
T c==> c= f0 f0 ! c= * part ccomponents * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part ccomponents b0
- (orig = orig) |- (!s. (!b. (!c. ((((vector_add ((vector_add orig) b)) c) IN ((IMAGE (\x. ((vector_add orig) x))) s)) = (((vector_add b) c) IN s)))))
T c==> c= f0 f0 ! ! ! c= cIN cvector_add cvector_add f0 b1 b2 * * part cIMAGE / cvector_add f0 b3 b0 cIN cvector_add b1 b2 b0
+ (orig = orig) |- ((\x. (!s. ((((vector_add orig) x) IN ((IMAGE (\y. ((vector_add orig) y))) s)) = (x IN s)))) x)
T c==> c= f0 f0 * / ! c= cIN cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cIN b0 b1 f1
+ |- ((!s. ((!n. ((s HAS_SIZE n) \/ ((~ (FINITE s)) \/ (~ ((CARD s) = n))))) /\ (!n. ((~ (s HAS_SIZE n)) \/ ((FINITE s) /\ ((CARD s) = n)))))) = ((!s. (!n. ((s HAS_SIZE n) \/ ((~ (FINITE s)) \/ (~ ((CARD s) = n)))))) /\ (!s. (!n. ((~ (s HAS_SIZE n)) \/ ((FINITE s) /\ ((CARD s) = n)))))))
T c= ! c/\ ! c\/ cHAS_SIZE b0 b1 c\/ c~ cFINITE b0 c~ c= cCARD b0 b1 ! c\/ c~ cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c/\ ! ! c\/ cHAS_SIZE b0 b1 c\/ c~ cFINITE b0 c~ c= cCARD b0 b1 ! ! c\/ c~ cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1
+ (orig = orig) |- ((\s. ((((vector_add orig) x) INSERT ((IMAGE (\y. ((vector_add orig) y))) s)) = ((IMAGE (\y. ((vector_add orig) y))) (x INSERT s)))) s)
T c==> c= f0 f0 * / c= * * part cINSERT cvector_add f0 f1 * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part cINSERT f1 b0 f2
- |- ((_1772494 = _1772495) ==> ((FINITE _1772495) \/ (~ (FINITE _1772494))))
T c==> c= f0 f1 c\/ cFINITE f1 c~ cFINITE f0
+ |- ((\a. (!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add a) x))) t)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((retract_of t) s))))) orig)
T * / ! ! c= cretract_of * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cretract_of b1 b2 f0
- (orig = orig) |- (((!s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) <=_c t) = (s <=_c t)))) ==> ((\s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) <=_c t) = (s <=_c t)))) s)) = ((\s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) <=_c t) = (s <=_c t)))) s))
T c==> c= f0 f0 c= c==> ! ! c= c<=_c * * part cIMAGE / cvector_add f0 b2 b0 b1 c<=_c b0 b1 * / ! c= c<=_c * * part cIMAGE / cvector_add f0 b2 b0 b1 c<=_c b0 b1 f1 * / ! c= c<=_c * * part cIMAGE / cvector_add f0 b2 b0 b1 c<=_c b0 b1 f1
+ (orig = orig) |- ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))))))
T c==> c= f0 f0 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- (((!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) ==> ((\Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) Q)) = ((\Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) Q))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c= c==> ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 * / c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 f1 * / c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 f1
- (orig = orig) |- ((\s. ((relative_frontier ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (relative_frontier s)))) s)
T c==> c= f0 f0 * / c= * part crelative_frontier * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part crelative_frontier b0 f1
- (orig = orig) |- ((\x. (((path_component ((IMAGE (\x. ((vector_add orig) x))) s)) ((vector_add orig) x)) = ((IMAGE (\x. ((vector_add orig) x))) ((path_component s) x)))) x)
T c==> c= f0 f0 * / c= * * part cpath_component * * part cIMAGE / cvector_add f0 b1 f1 cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b1 * * part cpath_component f1 b0 f2
- (orig = orig) |- ((\s. ((compact ((IMAGE (\x. ((vector_add orig) x))) s)) = (compact s))) s)
T c==> c= f0 f0 * / c= ccompact * * part cIMAGE / cvector_add f0 b1 b0 ccompact b0 f1
- (orig = orig) |- (!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m))))
T c==> c= f0 f0 ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1
+ |- ((\a. (!s. (((locally connected) ((IMAGE (\x. ((vector_add a) x))) s)) = ((locally connected) s)))) orig)
T * / ! c= clocally part cconnected * * part cIMAGE / cvector_add b0 b2 b1 clocally part cconnected b1 f0
- (orig = orig) |- ((\t. (((closed_in ((subtopology euclidean) ((IMAGE (\x. ((vector_add orig) x))) t))) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((closed_in ((subtopology euclidean) t)) s))) t)
T c==> c= f0 f0 * / c= cclosed_in csubtopology ceuclidean * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 f1 cclosed_in csubtopology ceuclidean b0 f1 f2
- ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- ((~ (negligible ((hull affine) (x INSERT s)))) = (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s))))))
T c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c= c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0
- (orig = orig) |- (((!s. ((components ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (components s)))) ==> ((\s. ((components ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (components s)))) s)) = ((\s. ((components ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (components s)))) s))
T c==> c= f0 f0 c= c==> ! c= * part ccomponents * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part ccomponents b0 * / c= * part ccomponents * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part ccomponents b0 f1 * / c= * part ccomponents * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part ccomponents b0 f1
- (orig = orig) |- (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) INTER ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s INTER t)))))
T c==> c= f0 f0 ! ! c= * * part cINTER * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 * * part cINTER b0 b1
- |- ((((~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) ==> ((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) ==> ((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) ==> F)))) ==> ((~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) ==> ((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) ==> ((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) ==> F))))) = ((~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) ==> ((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) ==> ((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) ==> F)))))
T c= c==> c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (orig = orig) |- (!s. ((path_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (path_connected s)))
T c==> c= f0 f0 ! c= cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 cpath_connected b0
+ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) |- ((((vec (NUMERAL _0)) IN ((hull affine) ((vec (NUMERAL _0)) INSERT s))) ==> (((hull affine) ((vec (NUMERAL _0)) INSERT s)) = (span ((vec (NUMERAL _0)) INSERT s)))) = (((hull affine) ((vec (NUMERAL _0)) INSERT s)) = (span ((vec (NUMERAL _0)) INSERT s))))
T c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV c= c==> cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 c= * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 * part cspan * * part cINSERT cvec cNUMERAL c_0 f0 c= * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 * part cspan * * part cINSERT cvec cNUMERAL c_0 f0
+ |- ((\a. (!s. ((measurable ((IMAGE (\x. ((vector_add a) x))) s)) = (measurable s)))) orig)
T * / ! c= cmeasurable * * part cIMAGE / cvector_add b0 b2 b1 cmeasurable b1 f0
- (orig = orig) |- (((!s. (((locally path_connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally path_connected) s))) ==> ((\s. (((locally path_connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally path_connected) s))) s)) = ((\s. (((locally path_connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally path_connected) s))) s))
T c==> c= f0 f0 c= c==> ! c= clocally part cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cpath_connected b0 * / c= clocally part cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cpath_connected b0 f1 * / c= clocally part cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cpath_connected b0 f1
+ |- (!s. (!x. ((((IMAGE (\y. ((vector_add orig) y))) s) ((vector_add orig) x)) = (s x))))
T c= cIMAGE / cvector_add f0 b0 f1 cvector_add f0 f2 * f1 f2
- (orig = orig) |- (((!r. ((ball (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (ball (x , r))))) ==> ((\r. ((ball (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (ball (x , r))))) r)) = ((\r. ((ball (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (ball (x , r))))) r))
T c==> c= f0 f0 c= c==> ! c= * part cball c, cvector_add f0 f1 b0 * * part cIMAGE / cvector_add f0 b1 * part cball c, f1 b0 * / c= * part cball c, cvector_add f0 f1 b0 * * part cIMAGE / cvector_add f0 b1 * part cball c, f1 b0 f2 * / c= * part cball c, cvector_add f0 f1 b0 * * part cIMAGE / cvector_add f0 b1 * part cball c, f1 b0 f2
- (orig = orig) |- ((\s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) DIFF ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s DIFF t))))) s)
T c==> c= f0 f0 * / ! c= * * part cDIFF * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 * * part cDIFF b0 b1 f1
- (orig = orig) |- (!s. ((((IMAGE (\x. ((vector_add orig) x))) x) IN ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (x IN s)))
T c==> c= f0 f0 ! c= cIN * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 cIN f1 b0
- (orig = orig) |- (!x. (!y. ((midpoint (((vector_add orig) x) , ((vector_add orig) y))) = ((vector_add orig) (midpoint (x , y))))))
T c==> c= f0 f0 ! ! c= cmidpoint c, cvector_add f0 b0 cvector_add f0 b1 cvector_add f0 cmidpoint c, b0 b1
- (orig = orig) |- (!t. ((setdist (((IMAGE (\x. ((vector_add orig) x))) s) , ((IMAGE (\x. ((vector_add orig) x))) t))) = (setdist (s , t))))
T c==> c= f0 f0 ! c= csetdist c, * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 csetdist c, f1 b0
- (orig = orig) |- ((\s. ((components ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (components s)))) s)
T c==> c= f0 f0 * / c= * part ccomponents * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part ccomponents b0 f1
- (orig = orig) |- (((homotopy_equivalent ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homotopy_equivalent s) t))
T c==> c= f0 f0 c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b0 f1 f2 chomotopy_equivalent f1 f2
+ (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) = (((real_ge ((real_add (real_of_int _1772535)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0
+ (orig = orig) |- ((!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) /\ ((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) /\ ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))))))))))))
T c==> c= f0 f0 c/\ ! ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 c/\ ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- (((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> ((negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s))) = (negligible (span s)))) ==> ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s)))) = (((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible (span s))))) = ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s)))) = (((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible (span s)))))
T c= c==> c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV c= cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 cnegligible * part cspan f0 c= c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c= c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
+ |- ((!s. (!n. (((~ (orig IN s)) /\ (((orig INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (orig INSERT s)))))) = (!s. (!n. (((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s)))))))
T c= ! ! c==> c/\ c~ cIN f0 b0 c/\ cHAS_SIZE * * part cINSERT f0 b0 b1 c<= b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 b0 ! ! c==> c/\ c~ cIN cvec cNUMERAL c_0 b0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 b0 b1 c<= b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 b0
- (orig = orig) |- ((\u. (!v. ((((subpath u) v) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o (((subpath u) v) g))))) u)
T c==> c= f0 f0 * / ! c= * * * part csubpath b0 b1 * * part co / cvector_add f0 b2 f1 * * part co / cvector_add f0 b2 * * * part csubpath b0 b1 f1 f2
- (orig = orig) |- (((!s. ((is_interval ((IMAGE (\x. ((vector_add orig) x))) s)) = (is_interval s))) ==> ((\s. ((is_interval ((IMAGE (\x. ((vector_add orig) x))) s)) = (is_interval s))) s)) = ((\s. ((is_interval ((IMAGE (\x. ((vector_add orig) x))) s)) = (is_interval s))) s))
T c==> c= f0 f0 c= c==> ! c= cis_interval * * part cIMAGE / cvector_add f0 b1 b0 cis_interval b0 * / c= cis_interval * * part cIMAGE / cvector_add f0 b1 b0 cis_interval b0 f1 * / c= cis_interval * * part cIMAGE / cvector_add f0 b1 b0 cis_interval b0 f1
+ |- ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> ((negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s))) = q')) ==> ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s)))) = (((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> q')))
T c==> c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV c= cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 f2 c= c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV f2
- (orig = orig) |- (((!t. ((((IMAGE (\y. ((vector_add orig) y))) s) UNION ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s UNION t)))) ==> ((\t. ((((IMAGE (\y. ((vector_add orig) y))) s) UNION ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s UNION t)))) t)) = ((\t. ((((IMAGE (\y. ((vector_add orig) y))) s) UNION ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s UNION t)))) t))
T c==> c= f0 f0 c= c==> ! c= * * part cUNION * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part cUNION f1 b0 * / c= * * part cUNION * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part cUNION f1 b0 f2 * / c= * * part cUNION * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part cUNION f1 b0 f2
- (orig = orig) |- (!s. ((collinear ((IMAGE (\x. ((vector_add orig) x))) s)) = (collinear s)))
T c==> c= f0 f0 ! c= ccollinear * * part cIMAGE / cvector_add f0 b1 b0 ccollinear b0
+ |- ((\a. (((!P. ((!x. (P x)) = (!x. (P ((vector_add a) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add a) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add a) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add a) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add a) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add a) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add a) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add a) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add a) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add a) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add a) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add a) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add a) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add a) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add a) x))) l))) l))))))))))) _1772522)
T * / c/\ c/\ ! c= ! * b1 b2 ! * b1 cvector_add b0 b2 c/\ ! c= c? / * b1 b2 c? / * b1 cvector_add b0 b2 c/\ ! c= ! * b1 b2 ! * b1 * * part cIMAGE / cvector_add b0 b3 b2 c/\ ! c= c? / * b1 b2 c? / * b1 * * part cIMAGE / cvector_add b0 b3 b2 c/\ ! c= ! * b1 b2 ! * b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 c/\ ! c= c? / * b1 b2 c? / * b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 c/\ ! c= ! * b1 b2 ! * b1 * * part co / cvector_add b0 b3 b2 c/\ ! c= c? / * b1 b2 c? / * b1 * * part co / cvector_add b0 b3 b2 c/\ ! c= ! * b1 b2 ! * b1 * * part co / cvector_add b0 b3 b2 c/\ ! c= c? / * b1 b2 c? / * b1 * * part co / cvector_add b0 b3 b2 c/\ ! c= ! * b1 b2 ! * b1 cMAP / cvector_add b0 b3 b2 ! c= c? / * b1 b2 c? / * b1 cMAP / cvector_add b0 b3 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b2 * b1 b3 b3 * * part cIMAGE / cvector_add b0 b2 * part cGSPEC / c? / cSETSPEC b2 * b1 cvector_add b0 b3 b3 c/\ ! c= * part cGSPEC / c? / cSETSPEC b2 * b1 b3 b3 * * part cIMAGE * part cIMAGE / cvector_add b0 b2 * part cGSPEC / c? / cSETSPEC b2 * b1 * * part cIMAGE / cvector_add b0 b4 b3 b3 ! c= * part cGSPEC / c? / cSETSPEC b2 * b1 b3 b3 * * part cIMAGE * part cMAP / cvector_add b0 b2 * part cGSPEC / c? / cSETSPEC b2 * b1 cMAP / cvector_add b0 b4 b3 b3 f0
+ |- ((\a. (!s. ((ANR ((IMAGE (\x. ((vector_add a) x))) s)) = (ANR s)))) orig)
T * / ! c= cANR * * part cIMAGE / cvector_add b0 b2 b1 cANR b1 f0
+ |- (((!s. ((dim (span s)) = (dim s))) ==> ((\s. ((dim (span s)) = (dim s))) s)) = ((\s. ((dim (span s)) = (dim s))) s))
T c= c==> ! c= cdim * part cspan b0 cdim b0 * / c= cdim * part cspan b0 cdim b0 f0 * / c= cdim * part cspan b0 cdim b0 f0
+ |- (!p. (!s. (!t. ((((COND p) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (((COND p) s) t))))))
T c= * * * part cCOND f0 * * part cIMAGE * part cIMAGE / cvector_add f1 b0 f2 * * part cIMAGE * part cIMAGE / cvector_add f1 b0 f3 * * part cIMAGE * part cIMAGE / cvector_add f1 b0 * * * part cCOND f0 f2 f3
+ |- (((int_le (int_of_num (NUMERAL _0))) (int_of_num (CARD s))) ==> (((int_le (int_of_num (NUMERAL _0))) (int_of_num (dimindex UNIV))) ==> (((vec (NUMERAL _0)) IN s) \/ ((~ (FINITE s)) \/ ((~ (((int_add (int_of_num (CARD s))) (int_of_num (NUMERAL (BIT1 _0)))) = (int_of_num n))) \/ ((~ ((int_le (int_of_num n)) (int_of_num (dimindex UNIV)))) \/ ((int_lt (int_of_num (CARD s))) (int_of_num (dimindex UNIV)))))))))
T c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num cCARD f0 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num cdimindex part cUNIV c\/ cIN cvec cNUMERAL c_0 f0 c\/ c~ cFINITE f0 c\/ c~ c= cint_add cint_of_num cCARD f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f1 c\/ c~ cint_le cint_of_num f1 cint_of_num cdimindex part cUNIV cint_lt cint_of_num cCARD f0 cint_of_num cdimindex part cUNIV
- |- ((\p'. (!q'. (((n <= (dimindex UNIV)) = p') ==> ((p' ==> ((negligible (span s)) = q')) ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = (p' ==> q')))))) p')
T * / ! c==> c= c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= cnegligible * part cspan f1 b1 c= c==> c<= f0 cdimindex part cUNIV cnegligible * part cspan f1 c==> b0 b1 f2
+ |- (((FINITE s) ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = q')) ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = ((FINITE s) ==> q')))
T c==> c==> cFINITE f0 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 f2 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> cFINITE f0 f2
- (orig = orig) |- (((!y. (((vector_sub ((vector_add orig) x)) ((vector_add orig) y)) = ((vector_sub x) y))) ==> ((\y. (((vector_sub ((vector_add orig) x)) ((vector_add orig) y)) = ((vector_sub x) y))) y)) = ((\y. (((vector_sub ((vector_add orig) x)) ((vector_add orig) y)) = ((vector_sub x) y))) y))
T c==> c= f0 f0 c= c==> ! c= cvector_sub cvector_add f0 f1 cvector_add f0 b0 cvector_sub f1 b0 * / c= cvector_sub cvector_add f0 f1 cvector_add f0 b0 cvector_sub f1 b0 f2 * / c= cvector_sub cvector_add f0 f1 cvector_add f0 b0 cvector_sub f1 b0 f2
+ |- ((!s. (!n. (((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s)))))) = (!orig. (!s. (!n. (((~ (orig IN s)) /\ (((orig INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (orig INSERT s))))))))
T c= ! ! c==> c/\ c~ cIN cvec cNUMERAL c_0 b0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 b0 b1 c<= b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 b0 ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1
- (orig = orig) |- (((!b. ((open_interval (((vector_add orig) a) , ((vector_add orig) b))) = ((IMAGE (\x. ((vector_add orig) x))) (open_interval (a , b))))) ==> ((\b. ((open_interval (((vector_add orig) a) , ((vector_add orig) b))) = ((IMAGE (\x. ((vector_add orig) x))) (open_interval (a , b))))) b)) = ((\b. ((open_interval (((vector_add orig) a) , ((vector_add orig) b))) = ((IMAGE (\x. ((vector_add orig) x))) (open_interval (a , b))))) b))
T c==> c= f0 f0 c= c==> ! c= * part copen_interval c, cvector_add f0 f1 cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b1 * part copen_interval c, f1 b0 * / c= * part copen_interval c, cvector_add f0 f1 cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b1 * part copen_interval c, f1 b0 f2 * / c= * part copen_interval c, cvector_add f0 f1 cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b1 * part copen_interval c, f1 b0 f2
- (orig = orig) |- (!z. (((between ((vector_add orig) x)) (((vector_add orig) y) , ((vector_add orig) z))) = ((between x) (y , z))))
T c==> c= f0 f0 ! c= cbetween cvector_add f0 f1 c, cvector_add f0 f2 cvector_add f0 b0 cbetween f1 c, f2 b0
+ |- ((\a. (!b. (!c. ((linepath (((vector_add a) b) , ((vector_add a) c))) = ((\x. ((vector_add a) x)) o (linepath (b , c))))))) orig)
T * / ! ! c= * part clinepath c, cvector_add b0 b1 cvector_add b0 b2 * * part co / cvector_add b0 b3 * part clinepath c, b1 b2 f0
- (orig = orig) |- (((!s. (!t. (((homeomorphic s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homeomorphic s) t)))) ==> ((\s. (!t. (((homeomorphic s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homeomorphic s) t)))) s)) = ((\s. (!t. (((homeomorphic s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homeomorphic s) t)))) s))
T c==> c= f0 f0 c= c==> ! ! c= chomeomorphic b0 * * part cIMAGE / cvector_add f0 b2 b1 chomeomorphic b0 b1 * / ! c= chomeomorphic b0 * * part cIMAGE / cvector_add f0 b2 b1 chomeomorphic b0 b1 f1 * / ! c= chomeomorphic b0 * * part cIMAGE / cvector_add f0 b2 b1 chomeomorphic b0 b1 f1
- (orig = orig) |- (((CONS ((\x. ((vector_add orig) x)) h)) ((MAP (\x. ((vector_add orig) x))) t)) = ((MAP (\x. ((vector_add orig) x))) ((CONS h) t)))
T c==> c= f0 f0 c= cCONS * / cvector_add f0 b0 f1 cMAP / cvector_add f0 b0 f2 cMAP / cvector_add f0 b0 cCONS f1 f2
- (orig = orig) |- (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s))
T c==> c= f0 f0 c= cextreme_point_of cvector_add f0 f1 * * part cIMAGE / cvector_add f0 b0 f2 cextreme_point_of f1 f2
- |- ((!n'. ((s HAS_SIZE n') \/ ((~ (FINITE s)) \/ (~ ((CARD s) = n))))) = ((!n. (s HAS_SIZE n)) \/ ((~ (FINITE s)) \/ (~ ((CARD s) = n)))))
T c= ! c\/ cHAS_SIZE f0 b0 c\/ c~ cFINITE f0 c~ c= cCARD f0 f1 c\/ ! cHAS_SIZE f0 b0 c\/ c~ cFINITE f0 c~ c= cCARD f0 f1
- (_1772519 = _1772521) |- ((_1772518 = _1772520) ==> (((hull _1772518) _1772519) = ((hull _1772520) _1772521)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
- (orig = orig) |- (!t. ((s >=_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s >=_c t)))
T c==> c= f0 f0 ! c= c>=_c f1 * * part cIMAGE / cvector_add f0 b1 b0 c>=_c f1 b0
+ |- (((!a. (!s. (!t. ((hausdist (((IMAGE (\x. ((vector_add a) x))) s) , ((IMAGE (\x. ((vector_add a) x))) t))) = (hausdist (s , t)))))) ==> ((\a. (!s. (!t. ((hausdist (((IMAGE (\x. ((vector_add a) x))) s) , ((IMAGE (\x. ((vector_add a) x))) t))) = (hausdist (s , t)))))) orig)) = ((\a. (!s. (!t. ((hausdist (((IMAGE (\x. ((vector_add a) x))) s) , ((IMAGE (\x. ((vector_add a) x))) t))) = (hausdist (s , t)))))) orig))
T c= c==> ! ! ! c= chausdist c, * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 chausdist c, b1 b2 * / ! ! c= chausdist c, * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 chausdist c, b1 b2 f0 * / ! ! c= chausdist c, * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 chausdist c, b1 b2 f0
- (orig = orig) |- ((\t. ((((IMAGE (\y. ((vector_add orig) y))) s) DIFF ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s DIFF t)))) t)
T c==> c= f0 f0 * / c= * * part cDIFF * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part cDIFF f1 b0 f2
- (orig = orig) |- ((interior ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (interior s)))
T c==> c= f0 f0 c= * part cinterior * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 * part cinterior f1
+ |- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l))))))))))
T c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2
+ |- (((!a. (!s. (!t. (((homeomorphic ((IMAGE (\x. ((vector_add a) x))) s)) t) = ((homeomorphic s) t))))) ==> ((\a. (!s. (!t. (((homeomorphic ((IMAGE (\x. ((vector_add a) x))) s)) t) = ((homeomorphic s) t))))) orig)) = ((\a. (!s. (!t. (((homeomorphic ((IMAGE (\x. ((vector_add a) x))) s)) t) = ((homeomorphic s) t))))) orig))
T c= c==> ! ! ! c= chomeomorphic * * part cIMAGE / cvector_add b0 b3 b1 b2 chomeomorphic b1 b2 * / ! ! c= chomeomorphic * * part cIMAGE / cvector_add b0 b3 b1 b2 chomeomorphic b1 b2 f0 * / ! ! c= chomeomorphic * * part cIMAGE / cvector_add b0 b3 b1 b2 chomeomorphic b1 b2 f0
+ |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0
+ (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) |- (((\x. (?s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))))) x) ==> F)
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> * / c? / c/\ c/\ c\/ c~ c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c/\ c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT b0 b1 f0 cF
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
- (orig = orig) |- (!s. ((((IMAGE (\x. ((vector_add orig) x))) x) INSERT ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (x INSERT s))))
T c==> c= f0 f0 ! c= * * part cINSERT * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * * part cINSERT f1 b0
+ |- (!s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) = ((IMAGE (\y. ((vector_add orig) y))) t)) = (s = t))))
T c= c= * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 c= f1 f2
- (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- (FINITE s)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 cFINITE f3
- (orig = orig) |- (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) SUBSET ((IMAGE (\y. ((vector_add orig) y))) t)) = (s SUBSET t)))
T c==> c= f0 f0 ! c= cSUBSET * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cSUBSET f1 b0
- (orig = orig) |- (((!x. (!y. ((((vector_add orig) x) = ((vector_add orig) y)) = (x = y)))) ==> ((\x. (!y. ((((vector_add orig) x) = ((vector_add orig) y)) = (x = y)))) x)) = ((\x. (!y. ((((vector_add orig) x) = ((vector_add orig) y)) = (x = y)))) x))
T c==> c= f0 f0 c= c==> ! ! c= c= cvector_add f0 b0 cvector_add f0 b1 c= b0 b1 * / ! c= c= cvector_add f0 b0 cvector_add f0 b1 c= b0 b1 f1 * / ! c= c= cvector_add f0 b0 cvector_add f0 b1 c= b0 b1 f1
- (orig = orig) |- (((!b. ((closed_interval ((CONS (((vector_add orig) a) , ((vector_add orig) b))) NIL)) = ((IMAGE (\x. ((vector_add orig) x))) (closed_interval ((CONS (a , b)) NIL))))) ==> ((\b. ((closed_interval ((CONS (((vector_add orig) a) , ((vector_add orig) b))) NIL)) = ((IMAGE (\x. ((vector_add orig) x))) (closed_interval ((CONS (a , b)) NIL))))) b)) = ((\b. ((closed_interval ((CONS (((vector_add orig) a) , ((vector_add orig) b))) NIL)) = ((IMAGE (\x. ((vector_add orig) x))) (closed_interval ((CONS (a , b)) NIL))))) b))
T c==> c= f0 f0 c= c==> ! c= * part cclosed_interval cCONS c, cvector_add f0 f1 cvector_add f0 b0 cNIL * * part cIMAGE / cvector_add f0 b1 * part cclosed_interval cCONS c, f1 b0 cNIL * / c= * part cclosed_interval cCONS c, cvector_add f0 f1 cvector_add f0 b0 cNIL * * part cIMAGE / cvector_add f0 b1 * part cclosed_interval cCONS c, f1 b0 cNIL f2 * / c= * part cclosed_interval cCONS c, cvector_add f0 f1 cvector_add f0 b0 cNIL * * part cIMAGE / cvector_add f0 b1 * part cclosed_interval cCONS c, f1 b0 cNIL f2
+ |- (!s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) PSUBSET ((IMAGE (\y. ((vector_add orig) y))) t)) = (s PSUBSET t))))
T c= cPSUBSET * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 cPSUBSET f1 f2
+ |- ((\s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))) s)
T * / c==> cFINITE b0 c= cCARD * * part cINSERT f0 b0 cCOND cIN f0 b0 cCARD b0 cSUC cCARD b0 f1
- (orig = orig) |- (((!g. ((pathstart ((\x. ((vector_add orig) x)) o g)) = ((vector_add orig) (pathstart g)))) ==> ((\g. ((pathstart ((\x. ((vector_add orig) x)) o g)) = ((vector_add orig) (pathstart g)))) g)) = ((\g. ((pathstart ((\x. ((vector_add orig) x)) o g)) = ((vector_add orig) (pathstart g)))) g))
T c==> c= f0 f0 c= c==> ! c= cpathstart * * part co / cvector_add f0 b1 b0 cvector_add f0 cpathstart b0 * / c= cpathstart * * part co / cvector_add f0 b1 b0 cvector_add f0 cpathstart b0 f1 * / c= cpathstart * * part co / cvector_add f0 b1 b0 cvector_add f0 cpathstart b0 f1
- (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0
- (orig = orig) |- ((\k. (((IMAGE ((IMAGE (\x. ((vector_add orig) x))) o g)) k) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) ((IMAGE g) k)))) k)
T c==> c= f0 f0 * / c= * * part cIMAGE * * part co * part cIMAGE / cvector_add f0 b1 f1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * * part cIMAGE f1 b0 f2
- (orig = orig) |- (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) UNION ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s UNION t))))
T c==> c= f0 f0 ! c= * * part cUNION * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part cUNION f1 b0
- (orig = orig) |- ((\z. (((between ((vector_add orig) x)) (((vector_add orig) y) , ((vector_add orig) z))) = ((between x) (y , z)))) z)
T c==> c= f0 f0 * / c= cbetween cvector_add f0 f1 c, cvector_add f0 f2 cvector_add f0 b0 cbetween f1 c, f2 b0 f3
- |- ((((~ (orig IN s)) /\ (((orig INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (orig INSERT s)))) = T)
T c= c==> c/\ c~ cIN f0 f1 c/\ cHAS_SIZE * * part cINSERT f0 f1 f2 c<= f2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 f1 cT
- (orig = orig) |- (((closed_in ((subtopology euclidean) ((IMAGE (\x. ((vector_add orig) x))) t))) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((closed_in ((subtopology euclidean) t)) s))
T c==> c= f0 f0 c= cclosed_in csubtopology ceuclidean * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 cclosed_in csubtopology ceuclidean f1 f2
- (orig = orig) |- (((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) ==> ((\s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) s)) = ((\s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) s))
T c==> c= f0 f0 c= c==> ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 * / c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 f1 * / c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 f1
- |- ((FINITE s) ==> ((((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))))
T c==> cFINITE f0 c= c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
+ |- ((\a. (!x. (!y. ((midpoint (((vector_add a) x) , ((vector_add a) y))) = ((vector_add a) (midpoint (x , y))))))) orig)
T * / ! ! c= cmidpoint c, cvector_add b0 b1 cvector_add b0 b2 cvector_add b0 cmidpoint c, b1 b2 f0
- (orig = orig) |- (((!h. (!t. (((CONS ((\x. ((vector_add orig) x)) h)) ((MAP (\x. ((vector_add orig) x))) t)) = ((MAP (\x. ((vector_add orig) x))) ((CONS h) t))))) ==> ((\h. (!t. (((CONS ((\x. ((vector_add orig) x)) h)) ((MAP (\x. ((vector_add orig) x))) t)) = ((MAP (\x. ((vector_add orig) x))) ((CONS h) t))))) h)) = ((\h. (!t. (((CONS ((\x. ((vector_add orig) x)) h)) ((MAP (\x. ((vector_add orig) x))) t)) = ((MAP (\x. ((vector_add orig) x))) ((CONS h) t))))) h))
T c==> c= f0 f0 c= c==> ! ! c= cCONS * / cvector_add f0 b2 b0 cMAP / cvector_add f0 b2 b1 cMAP / cvector_add f0 b2 cCONS b0 b1 * / ! c= cCONS * / cvector_add f0 b2 b0 cMAP / cvector_add f0 b2 b1 cMAP / cvector_add f0 b2 cCONS b0 b1 f1 * / ! c= cCONS * / cvector_add f0 b2 b0 cMAP / cvector_add f0 b2 b1 cMAP / cvector_add f0 b2 cCONS b0 b1 f1
- (orig = orig) |- (!x. (!s. ((((IMAGE (\x. ((vector_add orig) x))) x) IN ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (x IN s))))
T c==> c= f0 f0 ! ! c= cIN * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 cIN b0 b1
- (orig = orig) |- (!h. (!t. (((CONS ((\x. ((vector_add orig) x)) h)) ((MAP (\x. ((vector_add orig) x))) t)) = ((MAP (\x. ((vector_add orig) x))) ((CONS h) t)))))
T c==> c= f0 f0 ! ! c= cCONS * / cvector_add f0 b2 b0 cMAP / cvector_add f0 b2 b1 cMAP / cvector_add f0 b2 cCONS b0 b1
- (orig = orig) |- (!g. ((reversepath ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o (reversepath g))))
T c==> c= f0 f0 ! c= * part creversepath * * part co / cvector_add f0 b1 b0 * * part co / cvector_add f0 b1 * part creversepath b0
+ |- (((!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))) ==> ((\P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))) P)) = ((\P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))) P))
T c= c==> ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 * / c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 f0 * / c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 f0
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num n)) ==> (((int_le (int_of_num (NUMERAL _0))) (int_of_num (CARD s))) ==> (((int_le (int_of_num (NUMERAL _0))) (int_of_num (dimindex UNIV))) ==> (((vec (NUMERAL _0)) IN s) \/ ((~ (FINITE s)) \/ ((~ (((int_add (int_of_num (CARD s))) (int_of_num (NUMERAL (BIT1 _0)))) = (int_of_num n))) \/ ((~ ((int_le (int_of_num n)) (int_of_num (dimindex UNIV)))) \/ ((int_lt (int_of_num (CARD s))) (int_of_num (dimindex UNIV)))))))))) = (((int_le (int_of_num (NUMERAL _0))) (int_of_num (CARD s))) ==> (((int_le (int_of_num (NUMERAL _0))) (int_of_num (dimindex UNIV))) ==> (((vec (NUMERAL _0)) IN s) \/ ((~ (FINITE s)) \/ ((~ (((int_add (int_of_num (CARD s))) (int_of_num (NUMERAL (BIT1 _0)))) = (int_of_num n))) \/ ((~ ((int_le (int_of_num n)) (int_of_num (dimindex UNIV)))) \/ ((int_lt (int_of_num (CARD s))) (int_of_num (dimindex UNIV))))))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num cCARD f1 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num cdimindex part cUNIV c\/ cIN cvec cNUMERAL c_0 f1 c\/ c~ cFINITE f1 c\/ c~ c= cint_add cint_of_num cCARD f1 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f0 c\/ c~ cint_le cint_of_num f0 cint_of_num cdimindex part cUNIV cint_lt cint_of_num cCARD f1 cint_of_num cdimindex part cUNIV c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num cCARD f1 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num cdimindex part cUNIV c\/ cIN cvec cNUMERAL c_0 f1 c\/ c~ cFINITE f1 c\/ c~ c= cint_add cint_of_num cCARD f1 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f0 c\/ c~ cint_le cint_of_num f0 cint_of_num cdimindex part cUNIV cint_lt cint_of_num cCARD f1 cint_of_num cdimindex part cUNIV
- |- (((!p'. (!q'. (((n <= (dimindex UNIV)) = p') ==> ((p' ==> ((negligible (span s)) = q')) ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((n <= (dimindex UNIV)) = p') ==> ((p' ==> ((negligible (span s)) = q')) ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((n <= (dimindex UNIV)) = p') ==> ((p' ==> ((negligible (span s)) = q')) ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= cnegligible * part cspan f1 b1 c= c==> c<= f0 cdimindex part cUNIV cnegligible * part cspan f1 c==> b0 b1 * / ! c==> c= c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= cnegligible * part cspan f1 b1 c= c==> c<= f0 cdimindex part cUNIV cnegligible * part cspan f1 c==> b0 b1 f2 * / ! c==> c= c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= cnegligible * part cspan f1 b1 c= c==> c<= f0 cdimindex part cUNIV cnegligible * part cspan f1 c==> b0 b1 f2
- |- ((\s. (!n. (((~ (orig IN s)) /\ (((orig INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (orig INSERT s)))))) s)
T * / ! c==> c/\ c~ cIN f0 b0 c/\ cHAS_SIZE * * part cINSERT f0 b0 b1 c<= b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 b0 f1
+ |- (!s. (!x. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) DELETE ((IMAGE (\x. ((vector_add orig) x))) x)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s DELETE x)))))
T c= * * part cDELETE * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 * * part cDELETE f1 f2
+ |- (((!a. (!x. (!s. ((((IMAGE (\x. ((vector_add a) x))) x) INSERT ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (x INSERT s)))))) ==> ((\a. (!x. (!s. ((((IMAGE (\x. ((vector_add a) x))) x) INSERT ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (x INSERT s)))))) orig)) = ((\a. (!x. (!s. ((((IMAGE (\x. ((vector_add a) x))) x) INSERT ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (x INSERT s)))))) orig))
T c= c==> ! ! ! c= * * part cINSERT * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 * * part cINSERT b1 b2 * / ! ! c= * * part cINSERT * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 * * part cINSERT b1 b2 f0 * / ! ! c= * * part cINSERT * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 * * part cINSERT b1 b2 f0
- (orig = orig) |- ((\s. ((INFINITE ((IMAGE (\y. ((vector_add orig) y))) s)) = (INFINITE s))) s)
T c==> c= f0 f0 * / c= cINFINITE * * part cIMAGE / cvector_add f0 b1 b0 cINFINITE b0 f1
+ |- ((\a. (!s. (!t. ((((IMAGE (\y. ((vector_add a) y))) s) PSUBSET ((IMAGE (\y. ((vector_add a) y))) t)) = (s PSUBSET t))))) orig)
T * / ! ! c= cPSUBSET * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cPSUBSET b1 b2 f0
- ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- ((~ ((CARD (x INSERT s)) <= (dimindex UNIV))) ==> ((CARD (x INSERT s)) <= (dimindex UNIV)))
T c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c==> c~ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV
- (orig = orig) |- (((!l. ((REVERSE ((MAP (\x. ((vector_add orig) x))) l)) = ((MAP (\x. ((vector_add orig) x))) (REVERSE l)))) ==> ((\l. ((REVERSE ((MAP (\x. ((vector_add orig) x))) l)) = ((MAP (\x. ((vector_add orig) x))) (REVERSE l)))) l)) = ((\l. ((REVERSE ((MAP (\x. ((vector_add orig) x))) l)) = ((MAP (\x. ((vector_add orig) x))) (REVERSE l)))) l))
T c==> c= f0 f0 c= c==> ! c= cREVERSE cMAP / cvector_add f0 b1 b0 cMAP / cvector_add f0 b1 cREVERSE b0 * / c= cREVERSE cMAP / cvector_add f0 b1 b0 cMAP / cvector_add f0 b1 cREVERSE b0 f1 * / c= cREVERSE cMAP / cvector_add f0 b1 b0 cMAP / cvector_add f0 b1 cREVERSE b0 f1
+ |- (((!p'. (!q'. ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) = p') ==> ((p' ==> ((negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s))) = q')) ==> ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s)))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) = p') ==> ((p' ==> ((negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s))) = q')) ==> ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) = p') ==> ((p' ==> ((negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s))) = q')) ==> ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV b0 c==> c==> b0 c= cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 b1 c= c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 c==> b0 b1 * / ! c==> c= c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV b0 c==> c==> b0 c= cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 b1 c= c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 c==> b0 b1 f2 * / ! c==> c= c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV b0 c==> c==> b0 c= cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 b1 c= c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 c==> b0 b1 f2
+ |- (F ==> ((CARD s) = (CARD s)))
T c==> cF c= cCARD f0 cCARD f0
+ |- (((!a. (!s. ((diameter ((IMAGE (\x. ((vector_add a) x))) s)) = (diameter s)))) ==> ((\a. (!s. ((diameter ((IMAGE (\x. ((vector_add a) x))) s)) = (diameter s)))) orig)) = ((\a. (!s. ((diameter ((IMAGE (\x. ((vector_add a) x))) s)) = (diameter s)))) orig))
T c= c==> ! ! c= cdiameter * * part cIMAGE / cvector_add b0 b2 b1 cdiameter b1 * / ! c= cdiameter * * part cIMAGE / cvector_add b0 b2 b1 cdiameter b1 f0 * / ! c= cdiameter * * part cIMAGE / cvector_add b0 b2 b1 cdiameter b1 f0
+ |- ((\q'. ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) = p') ==> ((p' ==> ((negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s))) = q')) ==> ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s)))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV f2 c==> c==> f2 c= cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 b0 c= c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 c==> f2 b0 f3
- (orig = orig) |- ((\l. (((MEM ((vector_add orig) x)) ((MAP (\x. ((vector_add orig) x))) l)) = ((MEM x) l))) l)
T c==> c= f0 f0 * / c= cMEM cvector_add f0 f1 cMAP / cvector_add f0 b1 b0 cMEM f1 b0 f2
- (orig = orig) |- ((\r. ((cball (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (cball (x , r))))) r)
T c==> c= f0 f0 * / c= * part ccball c, cvector_add f0 f1 b0 * * part cIMAGE / cvector_add f0 b1 * part ccball c, f1 b0 f2
- (orig = orig) |- (((!s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) DIFF ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s DIFF t))))) ==> ((\s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) DIFF ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s DIFF t))))) s)) = ((\s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) DIFF ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s DIFF t))))) s))
T c==> c= f0 f0 c= c==> ! ! c= * * part cDIFF * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE / cvector_add f0 b2 * * part cDIFF b0 b1 * / ! c= * * part cDIFF * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE / cvector_add f0 b2 * * part cDIFF b0 b1 f1 * / ! c= * * part cDIFF * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE / cvector_add f0 b2 * * part cDIFF b0 b1 f1
+ |- ((\p'. (!q'. (((~ ((vec (NUMERAL _0)) IN s)) = p') ==> ((p' ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = q')) ==> (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = (p' ==> q')))))) p')
T * / ! c==> c= c~ cIN cvec cNUMERAL c_0 f0 b0 c==> c==> b0 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b1 c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> b0 b1 f2
- (orig = orig) |- (((!s. ((compact ((IMAGE (\x. ((vector_add orig) x))) s)) = (compact s))) ==> ((\s. ((compact ((IMAGE (\x. ((vector_add orig) x))) s)) = (compact s))) s)) = ((\s. ((compact ((IMAGE (\x. ((vector_add orig) x))) s)) = (compact s))) s))
T c==> c= f0 f0 c= c==> ! c= ccompact * * part cIMAGE / cvector_add f0 b1 b0 ccompact b0 * / c= ccompact * * part cIMAGE / cvector_add f0 b1 b0 ccompact b0 f1 * / c= ccompact * * part cIMAGE / cvector_add f0 b1 b0 ccompact b0 f1
+ (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- (((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) ==> ((\Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) Q)) = ((\Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) Q))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c= c==> ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 * / c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 f1 * / c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 f1
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (orig = orig) |- ((\s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) s)
T c==> c= f0 f0 * / ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 f1
- |- ((!n'. ((~ ((x INSERT s) HAS_SIZE n')) \/ (~ (n <= (dimindex UNIV))))) = ((!n. (~ ((x INSERT s) HAS_SIZE n))) \/ (~ (n <= (dimindex UNIV)))))
T c= ! c\/ c~ cHAS_SIZE * * part cINSERT f0 f1 b0 c~ c<= f2 cdimindex part cUNIV c\/ ! c~ cHAS_SIZE * * part cINSERT f0 f1 b0 c~ c<= f2 cdimindex part cUNIV
+ (orig = orig) |- ((!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homotopy_equivalent s) t)))) /\ ((!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) /\ ((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) /\ ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))))))))))))
T c==> c= f0 f0 c/\ ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b2 b0 b1 chomotopy_equivalent b0 b1 c/\ ! ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 c/\ ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- (((!a. (!s. ((AR ((IMAGE (\x. ((vector_add a) x))) s)) = (AR s)))) ==> ((\a. (!s. ((AR ((IMAGE (\x. ((vector_add a) x))) s)) = (AR s)))) orig)) = ((\a. (!s. ((AR ((IMAGE (\x. ((vector_add a) x))) s)) = (AR s)))) orig))
T c= c==> ! ! c= cAR * * part cIMAGE / cvector_add b0 b2 b1 cAR b1 * / ! c= cAR * * part cIMAGE / cvector_add b0 b2 b1 cAR b1 f0 * / ! c= cAR * * part cIMAGE / cvector_add b0 b2 b1 cAR b1 f0
- ((vec (NUMERAL _0)) IN ((hull affine) s)) |- (((vec (NUMERAL _0)) IN ((hull affine) s)) /\ (((hull affine) s) = (span s)))
T c==> cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c= * * part chull part caffine f0 * part cspan f0
+ (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- (((!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
- (orig = orig) |- (((!x. (((limit_point_of ((vector_add orig) x)) ((IMAGE (\y. ((vector_add orig) y))) s)) = ((limit_point_of x) s))) ==> ((\x. (((limit_point_of ((vector_add orig) x)) ((IMAGE (\y. ((vector_add orig) y))) s)) = ((limit_point_of x) s))) x)) = ((\x. (((limit_point_of ((vector_add orig) x)) ((IMAGE (\y. ((vector_add orig) y))) s)) = ((limit_point_of x) s))) x))
T c==> c= f0 f0 c= c==> ! c= climit_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b1 f1 climit_point_of b0 f1 * / c= climit_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b1 f1 climit_point_of b0 f1 f2 * / c= climit_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b1 f1 climit_point_of b0 f1 f2
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((\Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) Q)
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 * / c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 f1
+ |- (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = ((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))))
T c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
+ (~ ((vec (NUMERAL _0)) IN s)), (FINITE s), ((SUC (CARD s)) = n), (n <= (dimindex UNIV)) |- ((dim (span s)) < (dimindex UNIV))
T c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV c< cdim * part cspan f0 cdimindex part cUNIV
- (orig = orig) |- (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add orig) x)) ((vector_add orig) y))) = ((vector_add orig) ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y))))
T c==> c= f0 f0 c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add f0 f1 cvector_add f0 f2 cvector_add f0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f1 f2
- (orig = orig) |- (((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) ==> ((\tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) tr)) = ((\tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) tr))
T c==> c= f0 f0 c= c==> ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 * / c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 f1 * / c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 f1
- (orig = orig) |- ((((IMAGE (\x. ((vector_add orig) x))) s) >=_c t) = (s >=_c t))
T c==> c= f0 f0 c= c>=_c * * part cIMAGE / cvector_add f0 b0 f1 f2 c>=_c f1 f2
+ (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) |- ((((\s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s))))))) s) ==> F) = T)
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c= c==> * / c/\ c/\ c\/ c~ c<= cCARD b0 cdimindex part cUNIV cnegligible * * part chull part caffine b0 c/\ c~ cIN f0 b0 cFINITE b0 c/\ c<= cCARD * * part cINSERT f0 b0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f0 b0 f1 cF cT
- (orig = orig) |- ((\s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) s)
T c==> c= f0 f0 * / ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 f1
- (orig = orig) |- ((REVERSE ((MAP (\x. ((vector_add orig) x))) l)) = ((MAP (\x. ((vector_add orig) x))) (REVERSE l)))
T c==> c= f0 f0 c= cREVERSE cMAP / cvector_add f0 b0 f1 cMAP / cvector_add f0 b0 cREVERSE f1
+ |- ((EMPTY = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) EMPTY)) /\ ((UNIV = ((IMAGE (\x. ((vector_add orig) x))) UNIV)) /\ ((UNIV = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) UNIV)) /\ (NIL = ((MAP (\x. ((vector_add orig) x))) NIL)))))
T c/\ c= part cEMPTY * * part cIMAGE * part cIMAGE / cvector_add f0 b0 part cEMPTY c/\ c= part cUNIV * * part cIMAGE / cvector_add f0 b0 part cUNIV c/\ c= part cUNIV * * part cIMAGE * part cIMAGE / cvector_add f0 b0 part cUNIV c= cNIL cMAP / cvector_add f0 b0 cNIL
- (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) |- (((!x. ((~ (FINITE (x INSERT _1772464))) \/ (FINITE _1772464))) ==> ((\x. ((~ (FINITE (x INSERT _1772464))) \/ (FINITE _1772464))) _1772465)) = ((\x. ((~ (FINITE (x INSERT _1772464))) \/ (FINITE _1772464))) _1772465))
T c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c= c==> ! c\/ c~ cFINITE * * part cINSERT b0 f0 cFINITE f0 * / c\/ c~ cFINITE * * part cINSERT b0 f0 cFINITE f0 f1 * / c\/ c~ cFINITE * * part cINSERT b0 f0 cFINITE f0 f1
- (orig = orig) |- ((\s. ((is_interval ((IMAGE (\x. ((vector_add orig) x))) s)) = (is_interval s))) s)
T c==> c= f0 f0 * / c= cis_interval * * part cIMAGE / cvector_add f0 b1 b0 cis_interval b0 f1
+ |- ((\a. (!s. ((interior ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (interior s))))) orig)
T * / ! c= * part cinterior * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cinterior b1 f0
- (orig = orig) |- ((components ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (components s)))
T c==> c= f0 f0 c= * part ccomponents * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 * part ccomponents f1
+ |- ((\a. (!s. ((relative_interior ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (relative_interior s))))) orig)
T * / ! c= * part crelative_interior * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part crelative_interior b1 f0
- (orig = orig) |- (!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homotopy_equivalent s) t))))
T c==> c= f0 f0 ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b2 b0 b1 chomotopy_equivalent b0 b1
+ |- (((!e'. ((((vec (NUMERAL _0)) IN s) = g') ==> ((g' ==> ((CARD s) = t')) ==> (((~ g') ==> ((SUC (CARD s)) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN s)) (CARD s)) (SUC (CARD s))) = (((COND g') t') e')))))) ==> ((\e'. ((((vec (NUMERAL _0)) IN s) = g') ==> ((g' ==> ((CARD s) = t')) ==> (((~ g') ==> ((SUC (CARD s)) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN s)) (CARD s)) (SUC (CARD s))) = (((COND g') t') e')))))) e')) = ((\e'. ((((vec (NUMERAL _0)) IN s) = g') ==> ((g' ==> ((CARD s) = t')) ==> (((~ g') ==> ((SUC (CARD s)) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN s)) (CARD s)) (SUC (CARD s))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= cIN cvec cNUMERAL c_0 f0 f1 c==> c==> f1 c= cCARD f0 f2 c==> c==> c~ f1 c= cSUC cCARD f0 b0 c= cCOND cIN cvec cNUMERAL c_0 f0 cCARD f0 cSUC cCARD f0 cCOND f1 f2 b0 * / c==> c= cIN cvec cNUMERAL c_0 f0 f1 c==> c==> f1 c= cCARD f0 f2 c==> c==> c~ f1 c= cSUC cCARD f0 b0 c= cCOND cIN cvec cNUMERAL c_0 f0 cCARD f0 cSUC cCARD f0 cCOND f1 f2 b0 f3 * / c==> c= cIN cvec cNUMERAL c_0 f0 f1 c==> c==> f1 c= cCARD f0 f2 c==> c==> c~ f1 c= cSUC cCARD f0 b0 c= cCOND cIN cvec cNUMERAL c_0 f0 cCARD f0 cSUC cCARD f0 cCOND f1 f2 b0 f3
+ (orig = orig) |- ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))
T c==> c= f0 f0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
- (orig = orig) |- ((\b. (!c. ((linepath (((vector_add orig) b) , ((vector_add orig) c))) = ((\x. ((vector_add orig) x)) o (linepath (b , c)))))) b)
T c==> c= f0 f0 * / ! c= * part clinepath c, cvector_add f0 b0 cvector_add f0 b1 * * part co / cvector_add f0 b2 * part clinepath c, b0 b1 f1
+ |- (((!a. (!s. (((hull convex) ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) ((hull convex) s))))) ==> ((\a. (!s. (((hull convex) ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) ((hull convex) s))))) orig)) = ((\a. (!s. (((hull convex) ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) ((hull convex) s))))) orig))
T c= c==> ! ! c= * * part chull part cconvex * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * * part chull part cconvex b1 * / ! c= * * part chull part cconvex * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * * part chull part cconvex b1 f0 * / ! c= * * part chull part cconvex * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * * part chull part cconvex b1 f0
- (orig = orig) |- ((\s. (!t. ((((COND p) ((IMAGE (\y. ((vector_add orig) y))) s)) ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (((COND p) s) t))))) s)
T c==> c= f0 f0 * / ! c= * * * part cCOND f1 * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE / cvector_add f0 b2 * * * part cCOND f1 b0 b1 f2
- (orig = orig) |- ((\t. ((((IMAGE (\x. ((vector_add orig) x))) s) =_c t) = (s =_c t))) t)
T c==> c= f0 f0 * / c= c=_c * * part cIMAGE / cvector_add f0 b1 f1 b0 c=_c f1 b0 f2
+ |- ((\a. (!s. ((AR ((IMAGE (\x. ((vector_add a) x))) s)) = (AR s)))) orig)
T * / ! c= cAR * * part cIMAGE / cvector_add b0 b2 b1 cAR b1 f0
- (orig = orig) |- ((complete ((IMAGE (\x. ((vector_add orig) x))) s)) = (complete s))
T c==> c= f0 f0 c= ccomplete * * part cIMAGE / cvector_add f0 b0 f1 ccomplete f1
+ (orig = orig) |- (!s. ((((vector_add orig) x) INSERT ((IMAGE (\y. ((vector_add orig) y))) s)) = ((IMAGE (\y. ((vector_add orig) y))) (x INSERT s))))
T c==> c= f0 f0 ! c= * * part cINSERT cvector_add f0 f1 * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part cINSERT f1 b0
+ (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((!s. (!n. (((~ (orig IN s)) /\ (((orig INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (orig INSERT s)))))) = (!s. (!n. (((~ (((vector_add orig) (vec (NUMERAL _0))) IN ((IMAGE (\x. ((vector_add _1772522) x))) s))) /\ (((((vector_add orig) (vec (NUMERAL _0))) INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s)) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (((vector_add orig) (vec (NUMERAL _0))) INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s))))))))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c= ! ! c==> c/\ c~ cIN f1 b0 c/\ cHAS_SIZE * * part cINSERT f1 b0 b1 c<= b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f1 b0 ! ! c==> c/\ c~ cIN cvector_add f1 cvec cNUMERAL c_0 * * part cIMAGE / cvector_add f0 b2 b0 c/\ cHAS_SIZE * * part cINSERT cvector_add f1 cvec cNUMERAL c_0 * * part cIMAGE / cvector_add f0 b2 b0 b1 c<= b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvector_add f1 cvec cNUMERAL c_0 * * part cIMAGE / cvector_add f0 b2 b0
+ |- (((!a. (!g. (!k. (((IMAGE ((\y. ((vector_add a) y)) o g)) k) = ((IMAGE (\y. ((vector_add a) y))) ((IMAGE g) k)))))) ==> ((\a. (!g. (!k. (((IMAGE ((\y. ((vector_add a) y)) o g)) k) = ((IMAGE (\y. ((vector_add a) y))) ((IMAGE g) k)))))) orig)) = ((\a. (!g. (!k. (((IMAGE ((\y. ((vector_add a) y)) o g)) k) = ((IMAGE (\y. ((vector_add a) y))) ((IMAGE g) k)))))) orig))
T c= c==> ! ! ! c= * * part cIMAGE * * part co / cvector_add b0 b3 b1 b2 * * part cIMAGE / cvector_add b0 b3 * * part cIMAGE b1 b2 * / ! ! c= * * part cIMAGE * * part co / cvector_add b0 b3 b1 b2 * * part cIMAGE / cvector_add b0 b3 * * part cIMAGE b1 b2 f0 * / ! ! c= * * part cIMAGE * * part co / cvector_add b0 b3 b1 b2 * * part cIMAGE / cvector_add b0 b3 * * part cIMAGE b1 b2 f0
+ |- (!s. (!t. ((s <=_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s <=_c t))))
T c= c<=_c f0 * * part cIMAGE / cvector_add f1 b0 f2 c<=_c f0 f2
- (orig = orig) |- ((\s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) PSUBSET ((IMAGE (\y. ((vector_add orig) y))) t)) = (s PSUBSET t)))) s)
T c==> c= f0 f0 * / ! c= cPSUBSET * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cPSUBSET b0 b1 f1
- |- ((_1772519 = _1772521) ==> ((~ (_1772518 = _1772520)) \/ (((hull _1772518) _1772519) = ((hull _1772520) _1772521))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
- (orig = orig) |- (((!y. (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add orig) x)) ((vector_add orig) y))) = ((vector_add orig) ((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y))))) ==> ((\y. (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add orig) x)) ((vector_add orig) y))) = ((vector_add orig) ((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y))))) y)) = ((\y. (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add orig) x)) ((vector_add orig) y))) = ((vector_add orig) ((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y))))) y))
T c==> c= f0 f0 c= c==> ! c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add f0 f1 cvector_add f0 b0 cvector_add f0 c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f1 b0 * / c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add f0 f1 cvector_add f0 b0 cvector_add f0 c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f1 b0 f2 * / c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add f0 f1 cvector_add f0 b0 cvector_add f0 c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f1 b0 f2
+ |- ((\a. (!s. (!b. (!c. ((((vector_add ((vector_add a) b)) c) IN ((IMAGE (\x. ((vector_add a) x))) s)) = (((vector_add b) c) IN s)))))) orig)
T * / ! ! ! c= cIN cvector_add cvector_add b0 b2 b3 * * part cIMAGE / cvector_add b0 b4 b1 cIN cvector_add b2 b3 b1 f0
- (orig = orig) |- (!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s)))
T c==> c= f0 f0 ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0
- ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- ((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s)))
T c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0
+ (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0))))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0
- (orig = orig) |- ((\t. ((((IMAGE (\y. ((vector_add orig) y))) s) INTER ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s INTER t)))) t)
T c==> c= f0 f0 * / c= * * part cINTER * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part cINTER f1 b0 f2
- (orig = orig) |- (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))
T c==> c= f0 f0 ! c= chas_measure * * part cIMAGE / cvector_add f0 b1 f1 b0 chas_measure f1 b0
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- (!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x)))))))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2
- (orig = orig) |- (((!s. ((COUNTABLE ((IMAGE (\y. ((vector_add orig) y))) s)) = (COUNTABLE s))) ==> ((\s. ((COUNTABLE ((IMAGE (\y. ((vector_add orig) y))) s)) = (COUNTABLE s))) s)) = ((\s. ((COUNTABLE ((IMAGE (\y. ((vector_add orig) y))) s)) = (COUNTABLE s))) s))
T c==> c= f0 f0 c= c==> ! c= cCOUNTABLE * * part cIMAGE / cvector_add f0 b1 b0 cCOUNTABLE b0 * / c= cCOUNTABLE * * part cIMAGE / cvector_add f0 b1 b0 cCOUNTABLE b0 f1 * / c= cCOUNTABLE * * part cIMAGE / cvector_add f0 b1 b0 cCOUNTABLE b0 f1
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((\Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) Q)
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 * / c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 f1
+ |- ((int_le (int_of_num (NUMERAL _0))) (int_of_num (CARD s)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num cCARD f0
- (orig = orig) |- ((\l1. (!l2. (((APPEND ((MAP (\x. ((vector_add orig) x))) l1)) ((MAP (\x. ((vector_add orig) x))) l2)) = ((MAP (\x. ((vector_add orig) x))) ((APPEND l1) l2))))) l1)
T c==> c= f0 f0 * / ! c= cAPPEND cMAP / cvector_add f0 b2 b0 cMAP / cvector_add f0 b2 b1 cMAP / cvector_add f0 b2 cAPPEND b0 b1 f1
+ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) |- (((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) /\ ((negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s))) = (negligible (span s))))
T c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV c/\ c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV c= cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 cnegligible * part cspan f0
- (orig = orig) |- (((!a. (!b. ((closed_segment ((CONS (((vector_add orig) a) , ((vector_add orig) b))) NIL)) = ((IMAGE (\x. ((vector_add orig) x))) (closed_segment ((CONS (a , b)) NIL)))))) ==> ((\a. (!b. ((closed_segment ((CONS (((vector_add orig) a) , ((vector_add orig) b))) NIL)) = ((IMAGE (\x. ((vector_add orig) x))) (closed_segment ((CONS (a , b)) NIL)))))) a)) = ((\a. (!b. ((closed_segment ((CONS (((vector_add orig) a) , ((vector_add orig) b))) NIL)) = ((IMAGE (\x. ((vector_add orig) x))) (closed_segment ((CONS (a , b)) NIL)))))) a))
T c==> c= f0 f0 c= c==> ! ! c= * part cclosed_segment cCONS c, cvector_add f0 b0 cvector_add f0 b1 cNIL * * part cIMAGE / cvector_add f0 b2 * part cclosed_segment cCONS c, b0 b1 cNIL * / ! c= * part cclosed_segment cCONS c, cvector_add f0 b0 cvector_add f0 b1 cNIL * * part cIMAGE / cvector_add f0 b2 * part cclosed_segment cCONS c, b0 b1 cNIL f1 * / ! c= * part cclosed_segment cCONS c, cvector_add f0 b0 cvector_add f0 b1 cNIL * * part cIMAGE / cvector_add f0 b2 * part cclosed_segment cCONS c, b0 b1 cNIL f1
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- (((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) ==> ((\P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) P)) = ((\P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) P))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c= c==> ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 * / c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 f1 * / c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 f1
+ |- (((!a. (!h. (!t. (((CONS ((\x. ((vector_add a) x)) h)) ((MAP (\x. ((vector_add a) x))) t)) = ((MAP (\x. ((vector_add a) x))) ((CONS h) t)))))) ==> ((\a. (!h. (!t. (((CONS ((\x. ((vector_add a) x)) h)) ((MAP (\x. ((vector_add a) x))) t)) = ((MAP (\x. ((vector_add a) x))) ((CONS h) t)))))) orig)) = ((\a. (!h. (!t. (((CONS ((\x. ((vector_add a) x)) h)) ((MAP (\x. ((vector_add a) x))) t)) = ((MAP (\x. ((vector_add a) x))) ((CONS h) t)))))) orig))
T c= c==> ! ! ! c= cCONS * / cvector_add b0 b3 b1 cMAP / cvector_add b0 b3 b2 cMAP / cvector_add b0 b3 cCONS b1 b2 * / ! ! c= cCONS * / cvector_add b0 b3 b1 cMAP / cvector_add b0 b3 b2 cMAP / cvector_add b0 b3 cCONS b1 b2 f0 * / ! ! c= cCONS * / cvector_add b0 b3 b1 cMAP / cvector_add b0 b3 b2 cMAP / cvector_add b0 b3 cCONS b1 b2 f0
- (!s. (((dim s) < (dimindex UNIV)) ==> (negligible s))) |- ((\s. (((dim s) < (dimindex UNIV)) ==> (negligible s))) s)
T c==> ! c==> c< cdim b0 cdimindex part cUNIV cnegligible b0 * / c==> c< cdim b0 cdimindex part cUNIV cnegligible b0 f0
- (orig = orig) |- ((\s. ((open ((IMAGE (\x. ((vector_add orig) x))) s)) = (open s))) s)
T c==> c= f0 f0 * / c= copen * * part cIMAGE / cvector_add f0 b1 b0 copen b0 f1
- (orig = orig) |- ((\s. ((affine_dependent ((IMAGE (\x. ((vector_add orig) x))) s)) = (affine_dependent s))) s)
T c==> c= f0 f0 * / c= caffine_dependent * * part cIMAGE / cvector_add f0 b1 b0 caffine_dependent b0 f1
- |- ((~ (_1772512 = _1772513)) \/ ((dimindex _1772512) = (dimindex _1772513)))
T c\/ c~ c= f0 f1 c= cdimindex f0 cdimindex f1
+ |- ((\a. (!g. ((pathfinish ((\x. ((vector_add a) x)) o g)) = ((vector_add a) (pathfinish g))))) orig)
T * / ! c= cpathfinish * * part co / cvector_add b0 b2 b1 cvector_add b0 cpathfinish b1 f0
+ |- ((\a. (!s. ((aff_dim ((IMAGE (\x. ((vector_add a) x))) s)) = (aff_dim s)))) orig)
T * / ! c= caff_dim * * part cIMAGE / cvector_add b0 b2 b1 caff_dim b1 f0
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
- (orig = orig) |- (((!g. ((path ((\x. ((vector_add orig) x)) o g)) = (path g))) ==> ((\g. ((path ((\x. ((vector_add orig) x)) o g)) = (path g))) g)) = ((\g. ((path ((\x. ((vector_add orig) x)) o g)) = (path g))) g))
T c==> c= f0 f0 c= c==> ! c= cpath * * part co / cvector_add f0 b1 b0 cpath b0 * / c= cpath * * part co / cvector_add f0 b1 b0 cpath b0 f1 * / c= cpath * * part co / cvector_add f0 b1 b0 cpath b0 f1
+ |- (((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))) = ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))
T c= c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
- (orig = orig) |- ((\t. (((homeomorphic s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homeomorphic s) t))) t)
T c==> c= f0 f0 * / c= chomeomorphic f1 * * part cIMAGE / cvector_add f0 b1 b0 chomeomorphic f1 b0 f2
- (orig = orig) |- ((\p. (!s. (!t. ((((COND p) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (((COND p) s) t)))))) p)
T c==> c= f0 f0 * / ! ! c= * * * part cCOND b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b3 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b3 * * * part cCOND b0 b1 b2 f1
+ |- ((\a. (!s. (!t. (((homeomorphic s) ((IMAGE (\x. ((vector_add a) x))) t)) = ((homeomorphic s) t))))) orig)
T * / ! ! c= chomeomorphic b1 * * part cIMAGE / cvector_add b0 b3 b2 chomeomorphic b1 b2 f0
- (orig = orig) |- (!s. ((fsigma ((IMAGE (\x. ((vector_add orig) x))) s)) = (fsigma s)))
T c==> c= f0 f0 ! c= cfsigma * * part cIMAGE / cvector_add f0 b1 b0 cfsigma b0
+ |- (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) SUBSET ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = (s SUBSET t))))
T c= cSUBSET * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f2 cSUBSET f1 f2
+ |- ((\a. (!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add a) x))) f)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((edge_of f) s))))) orig)
T * / ! ! c= cedge_of * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cedge_of b1 b2 f0
+ (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) |- ((!s. ((!x. (FINITE (x INSERT s))) \/ (~ (FINITE s)))) /\ (!s. ((!x. (~ (FINITE (x INSERT s)))) \/ (FINITE s))))
T c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c/\ ! c\/ ! cFINITE * * part cINSERT b1 b0 c~ cFINITE b0 ! c\/ ! c~ cFINITE * * part cINSERT b1 b0 cFINITE b0
+ |- ((\a. (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) SUBSET ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = (s SUBSET t))))) orig)
T * / ! ! c= cSUBSET * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 cSUBSET b1 b2 f0
+ |- (((!s. (((dim s) < (dimindex UNIV)) ==> (negligible s))) ==> ((\s. (((dim s) < (dimindex UNIV)) ==> (negligible s))) s)) = ((\s. (((dim s) < (dimindex UNIV)) ==> (negligible s))) s))
T c= c==> ! c==> c< cdim b0 cdimindex part cUNIV cnegligible b0 * / c==> c< cdim b0 cdimindex part cUNIV cnegligible b0 f0 * / c==> c< cdim b0 cdimindex part cUNIV cnegligible b0 f0
- (orig = orig) |- (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))
T c==> c= f0 f0 ! c= csimplex b0 * * part cIMAGE / cvector_add f0 b1 f1 csimplex b0 f1
- (orig = orig) |- ((\s. (!t. (((homeomorphic s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homeomorphic s) t)))) s)
T c==> c= f0 f0 * / ! c= chomeomorphic b0 * * part cIMAGE / cvector_add f0 b2 b1 chomeomorphic b0 b1 f1
- (orig = orig) |- (((!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) UNION ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s UNION t)))) ==> ((\t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) UNION ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s UNION t)))) t)) = ((\t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) UNION ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s UNION t)))) t))
T c==> c= f0 f0 c= c==> ! c= * * part cUNION * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * * part cUNION f1 b0 * / c= * * part cUNION * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * * part cUNION f1 b0 f2 * / c= * * part cUNION * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * * part cUNION f1 b0 f2
- (orig = orig) |- (!l. ((REVERSE ((MAP (\x. ((vector_add orig) x))) l)) = ((MAP (\x. ((vector_add orig) x))) (REVERSE l))))
T c==> c= f0 f0 ! c= cREVERSE cMAP / cvector_add f0 b1 b0 cMAP / cvector_add f0 b1 cREVERSE b0
+ |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- (orig = orig) |- (((shiftpath t) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o ((shiftpath t) g)))
T c==> c= f0 f0 c= * * part cshiftpath f1 * * part co / cvector_add f0 b0 f2 * * part co / cvector_add f0 b0 * * part cshiftpath f1 f2
- (orig = orig) |- ((((vector_add ((vector_add orig) b)) c) IN ((IMAGE (\x. ((vector_add orig) x))) s)) = (((vector_add b) c) IN s))
T c==> c= f0 f0 c= cIN cvector_add cvector_add f0 f1 f2 * * part cIMAGE / cvector_add f0 b0 f3 cIN cvector_add f1 f2 f3
+ |- ((\a. (!s. ((polytope ((IMAGE (\x. ((vector_add a) x))) s)) = (polytope s)))) orig)
T * / ! c= cpolytope * * part cIMAGE / cvector_add b0 b2 b1 cpolytope b1 f0
- (orig = orig) |- (((!t. (!g. (((shiftpath t) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o ((shiftpath t) g))))) ==> ((\t. (!g. (((shiftpath t) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o ((shiftpath t) g))))) t)) = ((\t. (!g. (((shiftpath t) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o ((shiftpath t) g))))) t))
T c==> c= f0 f0 c= c==> ! ! c= * * part cshiftpath b0 * * part co / cvector_add f0 b2 b1 * * part co / cvector_add f0 b2 * * part cshiftpath b0 b1 * / ! c= * * part cshiftpath b0 * * part co / cvector_add f0 b2 b1 * * part co / cvector_add f0 b2 * * part cshiftpath b0 b1 f1 * / ! c= * * part cshiftpath b0 * * part co / cvector_add f0 b2 b1 * * part co / cvector_add f0 b2 * * part cshiftpath b0 b1 f1
+ |- ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))))))))
T c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
- (orig = orig) |- (!u. ((UNIONS ((IMAGE (IMAGE (IMAGE (\x. ((vector_add orig) x))))) u)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (UNIONS u))))
T c==> c= f0 f0 ! c= * part cUNIONS * * part cIMAGE * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cUNIONS b0
- (orig = orig) |- (!s. ((relative_interior ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (relative_interior s))))
T c==> c= f0 f0 ! c= * part crelative_interior * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part crelative_interior b0
+ |- ((\a. (!x. (!s. ((((IMAGE (\x. ((vector_add a) x))) x) INSERT ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (x INSERT s)))))) orig)
T * / ! ! c= * * part cINSERT * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 * * part cINSERT b1 b2 f0
- (orig = orig) |- (((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) ==> ((\tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) tr)) = ((\tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) tr))
T c==> c= f0 f0 c= c==> ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 * / c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 f1 * / c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 f1
+ |- ((\a. (!g. (!k. (((IMAGE ((\y. ((vector_add a) y)) o g)) k) = ((IMAGE (\y. ((vector_add a) y))) ((IMAGE g) k)))))) orig)
T * / ! ! c= * * part cIMAGE * * part co / cvector_add b0 b3 b1 b2 * * part cIMAGE / cvector_add b0 b3 * * part cIMAGE b1 b2 f0
- (orig = orig) |- ((\s. ((collinear ((IMAGE (\x. ((vector_add orig) x))) s)) = (collinear s))) s)
T c==> c= f0 f0 * / c= ccollinear * * part cIMAGE / cvector_add f0 b1 b0 ccollinear b0 f1
+ |- (((!a. (!s. (!t. ((((IMAGE (\y. ((vector_add a) y))) s) UNION ((IMAGE (\y. ((vector_add a) y))) t)) = ((IMAGE (\y. ((vector_add a) y))) (s UNION t)))))) ==> ((\a. (!s. (!t. ((((IMAGE (\y. ((vector_add a) y))) s) UNION ((IMAGE (\y. ((vector_add a) y))) t)) = ((IMAGE (\y. ((vector_add a) y))) (s UNION t)))))) orig)) = ((\a. (!s. (!t. ((((IMAGE (\y. ((vector_add a) y))) s) UNION ((IMAGE (\y. ((vector_add a) y))) t)) = ((IMAGE (\y. ((vector_add a) y))) (s UNION t)))))) orig))
T c= c==> ! ! ! c= * * part cUNION * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE / cvector_add b0 b3 * * part cUNION b1 b2 * / ! ! c= * * part cUNION * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE / cvector_add b0 b3 * * part cUNION b1 b2 f0 * / ! ! c= * * part cUNION * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE / cvector_add b0 b3 * * part cUNION b1 b2 f0
- (!s. (((dim s) < (dimindex UNIV)) ==> (negligible s))), ((dim s) < (dimindex UNIV)) |- (((dim s) < (dimindex UNIV)) /\ (negligible s))
T c==> ! c==> c< cdim b0 cdimindex part cUNIV cnegligible b0 c==> c< cdim f0 cdimindex part cUNIV c/\ c< cdim f0 cdimindex part cUNIV cnegligible f0
- (orig = orig) |- (((!l2. (((APPEND ((MAP (\x. ((vector_add orig) x))) l1)) ((MAP (\x. ((vector_add orig) x))) l2)) = ((MAP (\x. ((vector_add orig) x))) ((APPEND l1) l2)))) ==> ((\l2. (((APPEND ((MAP (\x. ((vector_add orig) x))) l1)) ((MAP (\x. ((vector_add orig) x))) l2)) = ((MAP (\x. ((vector_add orig) x))) ((APPEND l1) l2)))) l2)) = ((\l2. (((APPEND ((MAP (\x. ((vector_add orig) x))) l1)) ((MAP (\x. ((vector_add orig) x))) l2)) = ((MAP (\x. ((vector_add orig) x))) ((APPEND l1) l2)))) l2))
T c==> c= f0 f0 c= c==> ! c= cAPPEND cMAP / cvector_add f0 b1 f1 cMAP / cvector_add f0 b1 b0 cMAP / cvector_add f0 b1 cAPPEND f1 b0 * / c= cAPPEND cMAP / cvector_add f0 b1 f1 cMAP / cvector_add f0 b1 b0 cMAP / cvector_add f0 b1 cAPPEND f1 b0 f2 * / c= cAPPEND cMAP / cvector_add f0 b1 f1 cMAP / cvector_add f0 b1 b0 cMAP / cvector_add f0 b1 cAPPEND f1 b0 f2
- (orig = orig) |- ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) HAS_SIZE n) = (s HAS_SIZE n))
T c==> c= f0 f0 c= cHAS_SIZE * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 f2 cHAS_SIZE f1 f2
+ (~ ((vec (NUMERAL _0)) IN s)), (FINITE s) |- ((((SUC (CARD s)) = n) ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = q')) ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (((SUC (CARD s)) = n) ==> q')))
T c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c==> c= cSUC cCARD f0 f1 c= c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 f2 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c= cSUC cCARD f0 f1 f2
- (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))), ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- ((negligible ((hull affine) s)) ==> F)
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c==> cnegligible * * part chull part caffine f0 cF
- (orig = orig) |- ((simply_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (simply_connected s))
T c==> c= f0 f0 c= csimply_connected * * part cIMAGE / cvector_add f0 b0 f1 csimply_connected f1
- (orig = orig) |- ((((IMAGE (\x. ((vector_add orig) x))) s) <=_c t) = (s <=_c t))
T c==> c= f0 f0 c= c<=_c * * part cIMAGE / cvector_add f0 b0 f1 f2 c<=_c f1 f2
- |- ((((~ ((vec (NUMERAL _0)) IN s)) ==> (((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))))) ==> (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = ((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))))) = (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = ((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))))))
T c= c==> c==> c~ cIN cvec cNUMERAL c_0 f0 c= c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
- (orig = orig) |- (!s. ((convex ((IMAGE (\x. ((vector_add orig) x))) s)) = (convex s)))
T c==> c= f0 f0 ! c= cconvex * * part cIMAGE / cvector_add f0 b1 b0 cconvex b0
- (orig = orig) |- ((\y. ((((COND p) ((vector_add orig) x)) ((vector_add orig) y)) = ((vector_add orig) (((COND p) x) y)))) y)
T c==> c= f0 f0 * / c= cCOND f1 cvector_add f0 f2 cvector_add f0 b0 cvector_add f0 cCOND f1 f2 b0 f3
+ |- ((\a. (!g. ((path ((\x. ((vector_add a) x)) o g)) = (path g)))) orig)
T * / ! c= cpath * * part co / cvector_add b0 b2 b1 cpath b1 f0
+ |- (((!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) ==> ((\n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) n)) = ((\n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) n))
T c= c==> ! c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 * / c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 f1 * / c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 f1
+ (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- ((((real_add (real_of_int _1772535)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772536))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0
+ |- ((\p'. (!q'. ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) = p') ==> ((p' ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = q')) ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (p' ==> q')))))) p')
T * / ! c==> c= c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 b0 c==> c==> b0 c= c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b1 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> b0 b1 f2
- (orig = orig) |- ((((subpath u) v) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o (((subpath u) v) g)))
T c==> c= f0 f0 c= * * * part csubpath f1 f2 * * part co / cvector_add f0 b0 f3 * * part co / cvector_add f0 b0 * * * part csubpath f1 f2 f3
- (orig = orig) |- (((IMAGE ((\y. ((vector_add orig) y)) o g)) k) = ((IMAGE (\y. ((vector_add orig) y))) ((IMAGE g) k)))
T c==> c= f0 f0 c= * * part cIMAGE * * part co / cvector_add f0 b0 f1 f2 * * part cIMAGE / cvector_add f0 b0 * * part cIMAGE f1 f2
- (orig = orig) |- (((!s. ((((IMAGE (\x. ((vector_add orig) x))) x) INSERT ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (x INSERT s)))) ==> ((\s. ((((IMAGE (\x. ((vector_add orig) x))) x) INSERT ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (x INSERT s)))) s)) = ((\s. ((((IMAGE (\x. ((vector_add orig) x))) x) INSERT ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (x INSERT s)))) s))
T c==> c= f0 f0 c= c==> ! c= * * part cINSERT * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * * part cINSERT f1 b0 * / c= * * part cINSERT * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * * part cINSERT f1 b0 f2 * / c= * * part cINSERT * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * * part cINSERT f1 b0 f2
- (orig = orig) |- ((((COND p) ((vector_add orig) x)) ((vector_add orig) y)) = ((vector_add orig) (((COND p) x) y)))
T c==> c= f0 f0 c= cCOND f1 cvector_add f0 f2 cvector_add f0 f3 cvector_add f0 cCOND f1 f2 f3
- |- (((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))))
T c= c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
- (orig = orig) |- (((!s. (((hull convex) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) ((hull convex) s)))) ==> ((\s. (((hull convex) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) ((hull convex) s)))) s)) = ((\s. (((hull convex) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) ((hull convex) s)))) s))
T c==> c= f0 f0 c= c==> ! c= * * part chull part cconvex * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part chull part cconvex b0 * / c= * * part chull part cconvex * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part chull part cconvex b0 f1 * / c= * * part chull part cconvex * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part chull part cconvex b0 f1
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- (((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) ==> ((\Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) Q)) = ((\Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) Q))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c= c==> ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 * / c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 f1 * / c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 f1
+ |- (((!a. (!g. (!k. (((IMAGE ((IMAGE (\x. ((vector_add a) x))) o g)) k) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) ((IMAGE g) k)))))) ==> ((\a. (!g. (!k. (((IMAGE ((IMAGE (\x. ((vector_add a) x))) o g)) k) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) ((IMAGE g) k)))))) orig)) = ((\a. (!g. (!k. (((IMAGE ((IMAGE (\x. ((vector_add a) x))) o g)) k) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) ((IMAGE g) k)))))) orig))
T c= c==> ! ! ! c= * * part cIMAGE * * part co * part cIMAGE / cvector_add b0 b3 b1 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 * * part cIMAGE b1 b2 * / ! ! c= * * part cIMAGE * * part co * part cIMAGE / cvector_add b0 b3 b1 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 * * part cIMAGE b1 b2 f0 * / ! ! c= * * part cIMAGE * * part co * part cIMAGE / cvector_add b0 b3 b1 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 * * part cIMAGE b1 b2 f0
+ |- (((!a. (!s. ((affine_dependent ((IMAGE (\x. ((vector_add a) x))) s)) = (affine_dependent s)))) ==> ((\a. (!s. ((affine_dependent ((IMAGE (\x. ((vector_add a) x))) s)) = (affine_dependent s)))) orig)) = ((\a. (!s. ((affine_dependent ((IMAGE (\x. ((vector_add a) x))) s)) = (affine_dependent s)))) orig))
T c= c==> ! ! c= caffine_dependent * * part cIMAGE / cvector_add b0 b2 b1 caffine_dependent b1 * / ! c= caffine_dependent * * part cIMAGE / cvector_add b0 b2 b1 caffine_dependent b1 f0 * / ! c= caffine_dependent * * part cIMAGE / cvector_add b0 b2 b1 caffine_dependent b1 f0
- (orig = orig) |- (!s. (!t. ((s >=_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s >=_c t))))
T c==> c= f0 f0 ! ! c= c>=_c b0 * * part cIMAGE / cvector_add f0 b2 b1 c>=_c b0 b1
- (orig = orig) |- ((\g. ((simple_path ((\x. ((vector_add orig) x)) o g)) = (simple_path g))) g)
T c==> c= f0 f0 * / c= csimple_path * * part co / cvector_add f0 b1 b0 csimple_path b0 f1
+ (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((!s. (!n. (((~ (orig IN s)) /\ (((orig INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (orig INSERT s)))))) = (!s. (!n. (((~ (orig IN ((IMAGE (\x. ((vector_add _1772522) x))) s))) /\ (((orig INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s)) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (orig INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s))))))))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c= ! ! c==> c/\ c~ cIN f1 b0 c/\ cHAS_SIZE * * part cINSERT f1 b0 b1 c<= b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f1 b0 ! ! c==> c/\ c~ cIN f1 * * part cIMAGE / cvector_add f0 b2 b0 c/\ cHAS_SIZE * * part cINSERT f1 * * part cIMAGE / cvector_add f0 b2 b0 b1 c<= b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f1 * * part cIMAGE / cvector_add f0 b2 b0
+ |- (((!a. (!p. (!s. (!t. ((((COND p) ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (((COND p) s) t))))))) ==> ((\a. (!p. (!s. (!t. ((((COND p) ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (((COND p) s) t))))))) orig)) = ((\a. (!p. (!s. (!t. ((((COND p) ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (((COND p) s) t))))))) orig))
T c= c==> ! ! ! ! c= * * * part cCOND b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b4 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b4 b3 * * part cIMAGE * part cIMAGE / cvector_add b0 b4 * * * part cCOND b1 b2 b3 * / ! ! ! c= * * * part cCOND b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b4 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b4 b3 * * part cIMAGE * part cIMAGE / cvector_add b0 b4 * * * part cCOND b1 b2 b3 f0 * / ! ! ! c= * * * part cCOND b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b4 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b4 b3 * * part cIMAGE * part cIMAGE / cvector_add b0 b4 * * * part cCOND b1 b2 b3 f0
+ |- ((\a. (!s. ((FINITE ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) = (FINITE s)))) orig)
T * / ! c= cFINITE * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 cFINITE b1 f0
- (orig = orig) |- (((!s. (!x. ((((IMAGE (\y. ((vector_add orig) y))) s) DELETE ((vector_add orig) x)) = ((IMAGE (\y. ((vector_add orig) y))) (s DELETE x))))) ==> ((\s. (!x. ((((IMAGE (\y. ((vector_add orig) y))) s) DELETE ((vector_add orig) x)) = ((IMAGE (\y. ((vector_add orig) y))) (s DELETE x))))) s)) = ((\s. (!x. ((((IMAGE (\y. ((vector_add orig) y))) s) DELETE ((vector_add orig) x)) = ((IMAGE (\y. ((vector_add orig) y))) (s DELETE x))))) s))
T c==> c= f0 f0 c= c==> ! ! c= * * part cDELETE * * part cIMAGE / cvector_add f0 b2 b0 cvector_add f0 b1 * * part cIMAGE / cvector_add f0 b2 * * part cDELETE b0 b1 * / ! c= * * part cDELETE * * part cIMAGE / cvector_add f0 b2 b0 cvector_add f0 b1 * * part cIMAGE / cvector_add f0 b2 * * part cDELETE b0 b1 f1 * / ! c= * * part cDELETE * * part cIMAGE / cvector_add f0 b2 b0 cvector_add f0 b1 * * part cIMAGE / cvector_add f0 b2 * * part cDELETE b0 b1 f1
- (orig = orig) |- (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) PSUBSET ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = (s PSUBSET t))))
T c==> c= f0 f0 ! ! c= cPSUBSET * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 cPSUBSET b0 b1
- (orig = orig) |- (((!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))) ==> ((\s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))) s)) = ((\s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))) s))
T c==> c= f0 f0 c= c==> ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0 * / c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0 f1 * / c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0 f1
- (orig = orig) |- (((path_component ((IMAGE (\x. ((vector_add orig) x))) s)) ((vector_add orig) x)) = ((IMAGE (\x. ((vector_add orig) x))) ((path_component s) x)))
T c==> c= f0 f0 c= * * part cpath_component * * part cIMAGE / cvector_add f0 b0 f1 cvector_add f0 f2 * * part cIMAGE / cvector_add f0 b0 * * part cpath_component f1 f2
- (orig = orig) |- (!xs. (!n. ((((\y. ((vector_add orig) y)) o xs) n) = ((vector_add orig) (xs n)))))
T c==> c= f0 f0 ! ! c= co / cvector_add f0 b2 b0 b1 cvector_add f0 * b0 b1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (orig = orig) |- ((\t. ((s <_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s <_c t))) t)
T c==> c= f0 f0 * / c= c<_c f1 * * part cIMAGE / cvector_add f0 b1 b0 c<_c f1 b0 f2
- (orig = orig) |- (!s. ((aff_dim ((IMAGE (\x. ((vector_add orig) x))) s)) = (aff_dim s)))
T c==> c= f0 f0 ! c= caff_dim * * part cIMAGE / cvector_add f0 b1 b0 caff_dim b0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))), (~ F), ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- ((~ F) /\ F)
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> c~ cF c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c/\ c~ cF cF
+ |- ((((real_ge x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 f1 creal_of_num cNUMERAL c_0
+ |- ((!x. ((~ (FINITE (x INSERT s))) \/ (FINITE s))) = ((!x. (~ (FINITE (x INSERT s)))) \/ (FINITE s)))
T c= ! c\/ c~ cFINITE * * part cINSERT b0 f0 cFINITE f0 c\/ ! c~ cFINITE * * part cINSERT b0 f0 cFINITE f0
- (orig = orig) |- (((!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s))) ==> ((\s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s))) s)) = ((\s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s))) s))
T c==> c= f0 f0 c= c==> ! c= cface_of * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cface_of f1 b0 * / c= cface_of * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cface_of f1 b0 f2 * / c= cface_of * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cface_of f1 b0 f2
+ (orig = orig) |- (!x. (!s. ((((vector_add orig) x) INSERT ((IMAGE (\y. ((vector_add orig) y))) s)) = ((IMAGE (\y. ((vector_add orig) y))) (x INSERT s)))))
T c==> c= f0 f0 ! ! c= * * part cINSERT cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE / cvector_add f0 b2 * * part cINSERT b0 b1
- ((~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) ==> ((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) ==> ((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) ==> F)))) |- ((((~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) ==> ((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) ==> ((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) ==> F)))) ==> ((~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) ==> ((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) ==> ((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) ==> F))))) ==> ((~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) ==> ((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) ==> ((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) ==> F)))))
T c==> c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF c==> c==> c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF
- (orig = orig) |- (((!s. (!x. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) DELETE ((IMAGE (\x. ((vector_add orig) x))) x)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s DELETE x))))) ==> ((\s. (!x. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) DELETE ((IMAGE (\x. ((vector_add orig) x))) x)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s DELETE x))))) s)) = ((\s. (!x. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) DELETE ((IMAGE (\x. ((vector_add orig) x))) x)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s DELETE x))))) s))
T c==> c= f0 f0 c= c==> ! ! c= * * part cDELETE * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 * * part cDELETE b0 b1 * / ! c= * * part cDELETE * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 * * part cDELETE b0 b1 f1 * / ! c= * * part cDELETE * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 * * part cDELETE b0 b1 f1
+ (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0
- (orig = orig) |- ((\y. ((midpoint (((vector_add orig) x) , ((vector_add orig) y))) = ((vector_add orig) (midpoint (x , y))))) y)
T c==> c= f0 f0 * / c= cmidpoint c, cvector_add f0 f1 cvector_add f0 b0 cvector_add f0 cmidpoint c, f1 b0 f2
- ((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) |- (n <= (dimindex UNIV))
T c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV c<= f1 cdimindex part cUNIV
- (orig = orig) |- (!t. (((DISJOINT ((IMAGE (\y. ((vector_add orig) y))) s)) ((IMAGE (\y. ((vector_add orig) y))) t)) = ((DISJOINT s) t)))
T c==> c= f0 f0 ! c= cDISJOINT * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cDISJOINT f1 b0
- |- (((!y. (((\x. (f x)) y) = (f y))) ==> ((\y. (((\x. (f x)) y) = (f y))) y)) = ((\y. (((\x. (f x)) y) = (f y))) y))
T c= c==> ! c= * / * f0 b1 b0 * f0 b0 * / c= * / * f0 b1 b0 * f0 b0 f1 * / c= * / * f0 b1 b0 * f0 b0 f1
+ |- ((\a. (!x. (!r. ((cball (((vector_add a) x) , r)) = ((IMAGE (\y. ((vector_add a) y))) (cball (x , r))))))) orig)
T * / ! ! c= * part ccball c, cvector_add b0 b1 b2 * * part cIMAGE / cvector_add b0 b3 * part ccball c, b1 b2 f0
- (orig = orig) |- ((\y. ((((vector_add orig) x) = ((vector_add orig) y)) = (x = y))) y)
T c==> c= f0 f0 * / c= c= cvector_add f0 f1 cvector_add f0 b0 c= f1 b0 f2
- (orig = orig) |- ((\s. ((convex ((IMAGE (\x. ((vector_add orig) x))) s)) = (convex s))) s)
T c==> c= f0 f0 * / c= cconvex * * part cIMAGE / cvector_add f0 b1 b0 cconvex b0 f1
- (orig = orig) |- (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) DIFF ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s DIFF t))))
T c==> c= f0 f0 ! c= * * part cDIFF * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part cDIFF f1 b0
- (orig = orig) |- ((\g. (!k. (((IMAGE ((IMAGE (\x. ((vector_add orig) x))) o g)) k) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) ((IMAGE g) k))))) g)
T c==> c= f0 f0 * / ! c= * * part cIMAGE * * part co * part cIMAGE / cvector_add f0 b2 b0 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 * * part cIMAGE b0 b1 f1
+ (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0
+ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) |- (((hull affine) ((vec (NUMERAL _0)) INSERT s)) = (span ((vec (NUMERAL _0)) INSERT s)))
T c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV c= * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 * part cspan * * part cINSERT cvec cNUMERAL c_0 f0
- (orig = orig) |- (!s. (!t. ((s >_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s >_c t))))
T c==> c= f0 f0 ! ! c= c>_c b0 * * part cIMAGE / cvector_add f0 b2 b1 c>_c b0 b1
+ |- (((!a. (!s. ((components ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (components s))))) ==> ((\a. (!s. ((components ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (components s))))) orig)) = ((\a. (!s. ((components ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (components s))))) orig))
T c= c==> ! ! c= * part ccomponents * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b2 * part ccomponents b1 * / ! c= * part ccomponents * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b2 * part ccomponents b1 f0 * / ! c= * part ccomponents * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b2 * part ccomponents b1 f0
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1
- (orig = orig) |- (!s. ((simply_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (simply_connected s)))
T c==> c= f0 f0 ! c= csimply_connected * * part cIMAGE / cvector_add f0 b1 b0 csimply_connected b0
+ (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) |- ((((\x. (?s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))))) x) ==> F) = T)
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c= c==> * / c? / c/\ c/\ c\/ c~ c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c/\ c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT b0 b1 f0 cF cT
- (orig = orig) |- (((!t. ((((IMAGE (\y. ((vector_add orig) y))) s) SUBSET ((IMAGE (\y. ((vector_add orig) y))) t)) = (s SUBSET t))) ==> ((\t. ((((IMAGE (\y. ((vector_add orig) y))) s) SUBSET ((IMAGE (\y. ((vector_add orig) y))) t)) = (s SUBSET t))) t)) = ((\t. ((((IMAGE (\y. ((vector_add orig) y))) s) SUBSET ((IMAGE (\y. ((vector_add orig) y))) t)) = (s SUBSET t))) t))
T c==> c= f0 f0 c= c==> ! c= cSUBSET * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cSUBSET f1 b0 * / c= cSUBSET * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cSUBSET f1 b0 f2 * / c= cSUBSET * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cSUBSET f1 b0 f2
+ |- (((!a. (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) UNION ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (s UNION t)))))) ==> ((\a. (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) UNION ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (s UNION t)))))) orig)) = ((\a. (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) UNION ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (s UNION t)))))) orig))
T c= c==> ! ! ! c= * * part cUNION * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 * * part cUNION b1 b2 * / ! ! c= * * part cUNION * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 * * part cUNION b1 b2 f0 * / ! ! c= * * part cUNION * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 * * part cUNION b1 b2 f0
- (orig = orig) |- (((!s. (((locally compact) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally compact) s))) ==> ((\s. (((locally compact) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally compact) s))) s)) = ((\s. (((locally compact) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally compact) s))) s))
T c==> c= f0 f0 c= c==> ! c= clocally part ccompact * * part cIMAGE / cvector_add f0 b1 b0 clocally part ccompact b0 * / c= clocally part ccompact * * part cIMAGE / cvector_add f0 b1 b0 clocally part ccompact b0 f1 * / c= clocally part ccompact * * part cIMAGE / cvector_add f0 b1 b0 clocally part ccompact b0 f1
- |- (((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ |- ((\a. (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = (s = t))))) orig)
T * / ! ! c= c= * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 c= b1 b2 f0
- (orig = orig) |- (!t. ((s <=_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s <=_c t)))
T c==> c= f0 f0 ! c= c<=_c f1 * * part cIMAGE / cvector_add f0 b1 b0 c<=_c f1 b0
- (orig = orig) |- (!s. ((gdelta ((IMAGE (\x. ((vector_add orig) x))) s)) = (gdelta s)))
T c==> c= f0 f0 ! c= cgdelta * * part cIMAGE / cvector_add f0 b1 b0 cgdelta b0
- (orig = orig) |- ((\s. (((locally connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally connected) s))) s)
T c==> c= f0 f0 * / c= clocally part cconnected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cconnected b0 f1
+ |- ((\a. (!t. (!g. (((shiftpath t) ((\x. ((vector_add a) x)) o g)) = ((\x. ((vector_add a) x)) o ((shiftpath t) g)))))) orig)
T * / ! ! c= * * part cshiftpath b1 * * part co / cvector_add b0 b3 b2 * * part co / cvector_add b0 b3 * * part cshiftpath b1 b2 f0
+ (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) |- (!s. (!n. ((s HAS_SIZE n) \/ ((~ (FINITE s)) \/ (~ ((CARD s) = n))))))
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 ! ! c\/ cHAS_SIZE b0 b1 c\/ c~ cFINITE b0 c~ c= cCARD b0 b1
- (orig = orig) |- ((connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (connected s))
T c==> c= f0 f0 c= cconnected * * part cIMAGE / cvector_add f0 b0 f1 cconnected f1
- (orig = orig) |- (!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s))))
T c==> c= f0 f0 ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1
- (_1772494 = _1772495) |- ((_1772494 = _1772495) /\ ((FINITE _1772495) \/ (~ (FINITE _1772494))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ cFINITE f1 c~ cFINITE f0
- (negligible ((hull affine) (x INSERT s))), ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- ((negligible ((hull affine) (x INSERT s))) /\ (~ (negligible ((hull affine) (x INSERT s)))))
T c==> cnegligible * * part chull part caffine * * part cINSERT f0 f1 c==> c/\ c/\ c\/ c~ c<= cCARD f1 cdimindex part cUNIV cnegligible * * part chull part caffine f1 c/\ c~ cIN f0 f1 cFINITE f1 c/\ c<= cCARD * * part cINSERT f0 f1 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f0 f1 c/\ cnegligible * * part chull part caffine * * part cINSERT f0 f1 c~ cnegligible * * part chull part caffine * * part cINSERT f0 f1
- (orig = orig) |- ((((IMAGE (\y. ((vector_add orig) y))) s) SUBSET ((IMAGE (\y. ((vector_add orig) y))) t)) = (s SUBSET t))
T c==> c= f0 f0 c= cSUBSET * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 cSUBSET f1 f2
- (orig = orig) |- (((!x. (!y. ((((COND p) ((vector_add orig) x)) ((vector_add orig) y)) = ((vector_add orig) (((COND p) x) y))))) ==> ((\x. (!y. ((((COND p) ((vector_add orig) x)) ((vector_add orig) y)) = ((vector_add orig) (((COND p) x) y))))) x)) = ((\x. (!y. ((((COND p) ((vector_add orig) x)) ((vector_add orig) y)) = ((vector_add orig) (((COND p) x) y))))) x))
T c==> c= f0 f0 c= c==> ! ! c= cCOND f1 cvector_add f0 b0 cvector_add f0 b1 cvector_add f0 cCOND f1 b0 b1 * / ! c= cCOND f1 cvector_add f0 b0 cvector_add f0 b1 cvector_add f0 cCOND f1 b0 b1 f2 * / ! c= cCOND f1 cvector_add f0 b0 cvector_add f0 b1 cvector_add f0 cCOND f1 b0 b1 f2
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (orig = orig) |- (!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s)))
T c==> c= f0 f0 ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0
- (orig = orig) |- (!s. ((coplanar ((IMAGE (\x. ((vector_add orig) x))) s)) = (coplanar s)))
T c==> c= f0 f0 ! c= ccoplanar * * part cIMAGE / cvector_add f0 b1 b0 ccoplanar b0
- (orig = orig) |- ((pathstart ((\x. ((vector_add orig) x)) o g)) = ((vector_add orig) (pathstart g)))
T c==> c= f0 f0 c= cpathstart * * part co / cvector_add f0 b0 f1 cvector_add f0 cpathstart f1
+ |- ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))))
T c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
- (orig = orig) |- ((outside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (outside s)))
T c==> c= f0 f0 c= * part coutside * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 * part coutside f1
- (orig = orig) |- (!s. ((is_interval ((IMAGE (\x. ((vector_add orig) x))) s)) = (is_interval s)))
T c==> c= f0 f0 ! c= cis_interval * * part cIMAGE / cvector_add f0 b1 b0 cis_interval b0
- (orig = orig) |- (!b. ((open_interval (((vector_add orig) a) , ((vector_add orig) b))) = ((IMAGE (\x. ((vector_add orig) x))) (open_interval (a , b)))))
T c==> c= f0 f0 ! c= * part copen_interval c, cvector_add f0 f1 cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b1 * part copen_interval c, f1 b0
- (orig = orig) |- (((!z. (((between ((vector_add orig) x)) (((vector_add orig) y) , ((vector_add orig) z))) = ((between x) (y , z)))) ==> ((\z. (((between ((vector_add orig) x)) (((vector_add orig) y) , ((vector_add orig) z))) = ((between x) (y , z)))) z)) = ((\z. (((between ((vector_add orig) x)) (((vector_add orig) y) , ((vector_add orig) z))) = ((between x) (y , z)))) z))
T c==> c= f0 f0 c= c==> ! c= cbetween cvector_add f0 f1 c, cvector_add f0 f2 cvector_add f0 b0 cbetween f1 c, f2 b0 * / c= cbetween cvector_add f0 f1 c, cvector_add f0 f2 cvector_add f0 b0 cbetween f1 c, f2 b0 f3 * / c= cbetween cvector_add f0 f1 c, cvector_add f0 f2 cvector_add f0 b0 cbetween f1 c, f2 b0 f3
+ (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) |- ((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) /\ (~ (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s)))))))))
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c/\ ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c~ ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1
+ |- (((!a. (!s. ((borel ((IMAGE (\x. ((vector_add a) x))) s)) = (borel s)))) ==> ((\a. (!s. ((borel ((IMAGE (\x. ((vector_add a) x))) s)) = (borel s)))) orig)) = ((\a. (!s. ((borel ((IMAGE (\x. ((vector_add a) x))) s)) = (borel s)))) orig))
T c= c==> ! ! c= cborel * * part cIMAGE / cvector_add b0 b2 b1 cborel b1 * / ! c= cborel * * part cIMAGE / cvector_add b0 b2 b1 cborel b1 f0 * / ! c= cborel * * part cIMAGE / cvector_add b0 b2 b1 cborel b1 f0
+ (orig = orig) |- (((!n. ((((IMAGE (\y. ((vector_add orig) y))) s) HAS_SIZE n) = (s HAS_SIZE n))) ==> ((\n. ((((IMAGE (\y. ((vector_add orig) y))) s) HAS_SIZE n) = (s HAS_SIZE n))) n)) = ((\n. ((((IMAGE (\y. ((vector_add orig) y))) s) HAS_SIZE n) = (s HAS_SIZE n))) n))
T c==> c= f0 f0 c= c==> ! c= cHAS_SIZE * * part cIMAGE / cvector_add f0 b1 f1 b0 cHAS_SIZE f1 b0 * / c= cHAS_SIZE * * part cIMAGE / cvector_add f0 b1 f1 b0 cHAS_SIZE f1 b0 f2 * / c= cHAS_SIZE * * part cIMAGE / cvector_add f0 b1 f1 b0 cHAS_SIZE f1 b0 f2
+ |- ((\a. (!s. ((complete ((IMAGE (\x. ((vector_add a) x))) s)) = (complete s)))) orig)
T * / ! c= ccomplete * * part cIMAGE / cvector_add b0 b2 b1 ccomplete b1 f0
+ |- (((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))) = ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))
T c= c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
- (orig = orig) |- (((!s. (!x. (((path_component ((IMAGE (\x. ((vector_add orig) x))) s)) ((vector_add orig) x)) = ((IMAGE (\x. ((vector_add orig) x))) ((path_component s) x))))) ==> ((\s. (!x. (((path_component ((IMAGE (\x. ((vector_add orig) x))) s)) ((vector_add orig) x)) = ((IMAGE (\x. ((vector_add orig) x))) ((path_component s) x))))) s)) = ((\s. (!x. (((path_component ((IMAGE (\x. ((vector_add orig) x))) s)) ((vector_add orig) x)) = ((IMAGE (\x. ((vector_add orig) x))) ((path_component s) x))))) s))
T c==> c= f0 f0 c= c==> ! ! c= * * part cpath_component * * part cIMAGE / cvector_add f0 b2 b0 cvector_add f0 b1 * * part cIMAGE / cvector_add f0 b2 * * part cpath_component b0 b1 * / ! c= * * part cpath_component * * part cIMAGE / cvector_add f0 b2 b0 cvector_add f0 b1 * * part cIMAGE / cvector_add f0 b2 * * part cpath_component b0 b1 f1 * / ! c= * * part cpath_component * * part cIMAGE / cvector_add f0 b2 b0 cvector_add f0 b1 * * part cIMAGE / cvector_add f0 b2 * * part cpath_component b0 b1 f1
+ |- (((!a. (!b. (!c. ((linepath (((vector_add a) b) , ((vector_add a) c))) = ((\x. ((vector_add a) x)) o (linepath (b , c))))))) ==> ((\a. (!b. (!c. ((linepath (((vector_add a) b) , ((vector_add a) c))) = ((\x. ((vector_add a) x)) o (linepath (b , c))))))) orig)) = ((\a. (!b. (!c. ((linepath (((vector_add a) b) , ((vector_add a) c))) = ((\x. ((vector_add a) x)) o (linepath (b , c))))))) orig))
T c= c==> ! ! ! c= * part clinepath c, cvector_add b0 b1 cvector_add b0 b2 * * part co / cvector_add b0 b3 * part clinepath c, b1 b2 * / ! ! c= * part clinepath c, cvector_add b0 b1 cvector_add b0 b2 * * part co / cvector_add b0 b3 * part clinepath c, b1 b2 f0 * / ! ! c= * part clinepath c, cvector_add b0 b1 cvector_add b0 b2 * * part co / cvector_add b0 b3 * part clinepath c, b1 b2 f0
- (orig = orig) |- (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s))
T c==> c= f0 f0 c= cedge_of * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 cedge_of f1 f2
+ |- ((m <= n) = ((int_le (int_of_num m)) (int_of_num n)))
T c= c<= f0 f1 cint_le cint_of_num f0 cint_of_num f1
- (orig = orig) |- (((!s. (!x. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) ((IMAGE (\x. ((vector_add orig) x))) x)) = (s x)))) ==> ((\s. (!x. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) ((IMAGE (\x. ((vector_add orig) x))) x)) = (s x)))) s)) = ((\s. (!x. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) ((IMAGE (\x. ((vector_add orig) x))) x)) = (s x)))) s))
T c==> c= f0 f0 c= c==> ! ! c= cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 * b0 b1 * / ! c= cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 * b0 b1 f1 * / ! c= cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 * b0 b1 f1
+ |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- (orig = orig) |- (((!x. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) ((IMAGE (\x. ((vector_add orig) x))) x)) = (s x))) ==> ((\x. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) ((IMAGE (\x. ((vector_add orig) x))) x)) = (s x))) x)) = ((\x. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) ((IMAGE (\x. ((vector_add orig) x))) x)) = (s x))) x))
T c==> c= f0 f0 c= c==> ! c= cIMAGE * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 * f1 b0 * / c= cIMAGE * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 * f1 b0 f2 * / c= cIMAGE * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 * f1 b0 f2
- (orig = orig) |- ((\s. (!t. (((DISJOINT ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((DISJOINT s) t)))) s)
T c==> c= f0 f0 * / ! c= cDISJOINT * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 cDISJOINT b0 b1 f1
- (orig = orig) |- (((!s. ((bounded ((IMAGE (\x. ((vector_add orig) x))) s)) = (bounded s))) ==> ((\s. ((bounded ((IMAGE (\x. ((vector_add orig) x))) s)) = (bounded s))) s)) = ((\s. ((bounded ((IMAGE (\x. ((vector_add orig) x))) s)) = (bounded s))) s))
T c==> c= f0 f0 c= c==> ! c= cbounded * * part cIMAGE / cvector_add f0 b1 b0 cbounded b0 * / c= cbounded * * part cIMAGE / cvector_add f0 b1 b0 cbounded b0 f1 * / c= cbounded * * part cIMAGE / cvector_add f0 b1 b0 cbounded b0 f1
+ |- ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))))
T c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
- (orig = orig) |- ((((IMAGE (\y. ((vector_add orig) y))) s) INTER ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s INTER t)))
T c==> c= f0 f0 c= * * part cINTER * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 * * part cIMAGE / cvector_add f0 b0 * * part cINTER f1 f2
+ |- ((\x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) x)
T * / ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 f0
+ |- ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) n)
T * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
- (orig = orig) |- (!s. (!x. ((((IMAGE (\y. ((vector_add orig) y))) s) DELETE ((vector_add orig) x)) = ((IMAGE (\y. ((vector_add orig) y))) (s DELETE x)))))
T c==> c= f0 f0 ! ! c= * * part cDELETE * * part cIMAGE / cvector_add f0 b2 b0 cvector_add f0 b1 * * part cIMAGE / cvector_add f0 b2 * * part cDELETE b0 b1
- (orig = orig) |- (!s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) >_c t) = (s >_c t))))
T c==> c= f0 f0 ! ! c= c>_c * * part cIMAGE / cvector_add f0 b2 b0 b1 c>_c b0 b1
+ (orig = orig) |- ((\n. ((((IMAGE (\y. ((vector_add orig) y))) s) HAS_SIZE n) = (s HAS_SIZE n))) n)
T c==> c= f0 f0 * / c= cHAS_SIZE * * part cIMAGE / cvector_add f0 b1 f1 b0 cHAS_SIZE f1 b0 f2
- (orig = orig) |- (((!t. (((homeomorphic ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homeomorphic s) t))) ==> ((\t. (((homeomorphic ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homeomorphic s) t))) t)) = ((\t. (((homeomorphic ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homeomorphic s) t))) t))
T c==> c= f0 f0 c= c==> ! c= chomeomorphic * * part cIMAGE / cvector_add f0 b1 f1 b0 chomeomorphic f1 b0 * / c= chomeomorphic * * part cIMAGE / cvector_add f0 b1 f1 b0 chomeomorphic f1 b0 f2 * / c= chomeomorphic * * part cIMAGE / cvector_add f0 b1 f1 b0 chomeomorphic f1 b0 f2
- (orig = orig) |- (((!t. ((((IMAGE (\y. ((vector_add orig) y))) s) DIFF ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s DIFF t)))) ==> ((\t. ((((IMAGE (\y. ((vector_add orig) y))) s) DIFF ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s DIFF t)))) t)) = ((\t. ((((IMAGE (\y. ((vector_add orig) y))) s) DIFF ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s DIFF t)))) t))
T c==> c= f0 f0 c= c==> ! c= * * part cDIFF * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part cDIFF f1 b0 * / c= * * part cDIFF * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part cDIFF f1 b0 f2 * / c= * * part cDIFF * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part cDIFF f1 b0 f2
- (orig = orig) |- (((!t. ((((IMAGE (\y. ((vector_add orig) y))) s) PSUBSET ((IMAGE (\y. ((vector_add orig) y))) t)) = (s PSUBSET t))) ==> ((\t. ((((IMAGE (\y. ((vector_add orig) y))) s) PSUBSET ((IMAGE (\y. ((vector_add orig) y))) t)) = (s PSUBSET t))) t)) = ((\t. ((((IMAGE (\y. ((vector_add orig) y))) s) PSUBSET ((IMAGE (\y. ((vector_add orig) y))) t)) = (s PSUBSET t))) t))
T c==> c= f0 f0 c= c==> ! c= cPSUBSET * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cPSUBSET f1 b0 * / c= cPSUBSET * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cPSUBSET f1 b0 f2 * / c= cPSUBSET * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cPSUBSET f1 b0 f2
- (!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))) |- ((\P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))) P)
T c==> ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 * / c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 f0
+ (orig = orig) |- ((!s. (((locally path_connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally path_connected) s))) /\ ((!s. (((locally connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally connected) s))) /\ ((!s. ((inside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (inside s)))) /\ ((!s. ((outside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (outside s)))) /\ ((!s. ((simply_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (simply_connected s))) /\ ((!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homotopy_equivalent s) t)))) /\ ((!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) /\ ((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) /\ ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))))))))))))))))))
T c==> c= f0 f0 c/\ ! c= clocally part cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cpath_connected b0 c/\ ! c= clocally part cconnected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cconnected b0 c/\ ! c= * part cinside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cinside b0 c/\ ! c= * part coutside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part coutside b0 c/\ ! c= csimply_connected * * part cIMAGE / cvector_add f0 b1 b0 csimply_connected b0 c/\ ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b2 b0 b1 chomotopy_equivalent b0 b1 c/\ ! ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 c/\ ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- ((UNIV = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) UNIV)) /\ (NIL = ((MAP (\x. ((vector_add orig) x))) NIL)))
T c/\ c= part cUNIV * * part cIMAGE * part cIMAGE / cvector_add f0 b0 part cUNIV c= cNIL cMAP / cvector_add f0 b0 cNIL
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- (((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) ==> ((\P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) P)) = ((\P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) P))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c= c==> ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 * / c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 f1 * / c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 f1
- (orig = orig) |- (!s. (!n. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) HAS_SIZE n) = (s HAS_SIZE n))))
T c==> c= f0 f0 ! ! c= cHAS_SIZE * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 b1 cHAS_SIZE b0 b1
- (_1772500 = _1772502) |- ((_1772500 = _1772502) /\ ((~ (_1772501 = _1772503)) \/ ((_1772502 HAS_SIZE _1772503) \/ (~ (_1772500 HAS_SIZE _1772501)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cHAS_SIZE f1 f3 c~ cHAS_SIZE f0 f2
+ |- (!s. (!x. ((((IMAGE (\y. ((vector_add orig) y))) s) DELETE ((vector_add orig) x)) = ((IMAGE (\y. ((vector_add orig) y))) (s DELETE x)))))
T c= * * part cDELETE * * part cIMAGE / cvector_add f0 b0 f1 cvector_add f0 f2 * * part cIMAGE / cvector_add f0 b0 * * part cDELETE f1 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (orig = orig) |- (((!s. ((((vector_add orig) x) IN ((IMAGE (\y. ((vector_add orig) y))) s)) = (x IN s))) ==> ((\s. ((((vector_add orig) x) IN ((IMAGE (\y. ((vector_add orig) y))) s)) = (x IN s))) s)) = ((\s. ((((vector_add orig) x) IN ((IMAGE (\y. ((vector_add orig) y))) s)) = (x IN s))) s))
T c==> c= f0 f0 c= c==> ! c= cIN cvector_add f0 f1 * * part cIMAGE / cvector_add f0 b1 b0 cIN f1 b0 * / c= cIN cvector_add f0 f1 * * part cIMAGE / cvector_add f0 b1 b0 cIN f1 b0 f2 * / c= cIN cvector_add f0 f1 * * part cIMAGE / cvector_add f0 b1 b0 cIN f1 b0 f2
+ (~ ((vec (NUMERAL _0)) IN s)), (FINITE s), ((SUC (CARD s)) = n) |- (((SUC (CARD s)) = n) /\ ((n <= (dimindex UNIV)) ==> (negligible (span s))))
T c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c/\ c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
- (orig = orig) |- ((((IMAGE (\x. ((vector_add orig) x))) s) <_c t) = (s <_c t))
T c==> c= f0 f0 c= c<_c * * part cIMAGE / cvector_add f0 b0 f1 f2 c<_c f1 f2
- (orig = orig) |- ((LENGTH ((MAP (\x. ((vector_add orig) x))) l)) = (LENGTH l))
T c==> c= f0 f0 c= cLENGTH cMAP / cvector_add f0 b0 f1 cLENGTH f1
+ |- (((!a. (!s. (!t. ((s <=_c ((IMAGE (\x. ((vector_add a) x))) t)) = (s <=_c t))))) ==> ((\a. (!s. (!t. ((s <=_c ((IMAGE (\x. ((vector_add a) x))) t)) = (s <=_c t))))) orig)) = ((\a. (!s. (!t. ((s <=_c ((IMAGE (\x. ((vector_add a) x))) t)) = (s <=_c t))))) orig))
T c= c==> ! ! ! c= c<=_c b1 * * part cIMAGE / cvector_add b0 b3 b2 c<=_c b1 b2 * / ! ! c= c<=_c b1 * * part cIMAGE / cvector_add b0 b3 b2 c<=_c b1 b2 f0 * / ! ! c= c<=_c b1 * * part cIMAGE / cvector_add b0 b3 b2 c<=_c b1 b2 f0
- |- ((_1772496 = _1772498) ==> ((~ (_1772497 = _1772499)) \/ ((_1772498 IN _1772499) \/ (~ (_1772496 IN _1772497)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
- (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))), (~ ((CARD s) <= (dimindex UNIV))), ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- ((~ ((CARD s) <= (dimindex UNIV))) /\ F)
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> c~ c<= cCARD f0 cdimindex part cUNIV c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c/\ c~ c<= cCARD f0 cdimindex part cUNIV cF
+ (FINITE s) |- (((dim s) <= (CARD s)) = T)
T c==> cFINITE f0 c= c<= cdim f0 cCARD f0 cT
- (orig = orig) |- ((\s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) s)
T c==> c= f0 f0 * / c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 f1
+ |- ((\p'. (!q'. ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) = p') ==> ((p' ==> ((negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s))) = q')) ==> ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s)))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV b0 c==> c==> b0 c= cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 b1 c= c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 c==> b0 b1 f2
- (orig = orig) |- (!b. (!c. ((linepath (((vector_add orig) b) , ((vector_add orig) c))) = ((\x. ((vector_add orig) x)) o (linepath (b , c))))))
T c==> c= f0 f0 ! ! c= * part clinepath c, cvector_add f0 b0 cvector_add f0 b1 * * part co / cvector_add f0 b2 * part clinepath c, b0 b1
- (~ F) |- ((F = F) = T)
T c==> c~ cF c= c= cF cF cT
- (orig = orig) |- ((convex ((IMAGE (\x. ((vector_add orig) x))) s)) = (convex s))
T c==> c= f0 f0 c= cconvex * * part cIMAGE / cvector_add f0 b0 f1 cconvex f1
- (orig = orig) |- ((\s. ((coplanar ((IMAGE (\x. ((vector_add orig) x))) s)) = (coplanar s))) s)
T c==> c= f0 f0 * / c= ccoplanar * * part cIMAGE / cvector_add f0 b1 b0 ccoplanar b0 f1
+ ((\s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s))))))) s) |- ((((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) ==> F) = F)
T c==> * / c/\ c/\ c\/ c~ c<= cCARD b0 cdimindex part cUNIV cnegligible * * part chull part caffine b0 c/\ c~ cIN f0 b0 cFINITE b0 c/\ c<= cCARD * * part cINSERT f0 b0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f0 b0 f1 c= c==> c/\ c/\ c\/ c~ c<= cCARD f1 cdimindex part cUNIV cnegligible * * part chull part caffine f1 c/\ c~ cIN f0 f1 cFINITE f1 c/\ c<= cCARD * * part cINSERT f0 f1 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f0 f1 cF cF
- (orig = orig) |- ((\t. ((s >_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s >_c t))) t)
T c==> c= f0 f0 * / c= c>_c f1 * * part cIMAGE / cvector_add f0 b1 b0 c>_c f1 b0 f2
- (orig = orig) |- (!g. ((path_image ((\x. ((vector_add orig) x)) o g)) = ((IMAGE (\x. ((vector_add orig) x))) (path_image g))))
T c==> c= f0 f0 ! c= * part cpath_image * * part co / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cpath_image b0
- |- (((!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))) ==> (!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s)))))) = (!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))))
T c= c==> ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1
- (orig = orig) |- (!x. (!y. (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add orig) x)) ((vector_add orig) y))) = ((vector_add orig) ((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y))))))
T c==> c= f0 f0 ! ! c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add f0 b0 cvector_add f0 b1 cvector_add f0 c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b0 b1
+ |- ((\a. (!s. ((affine_dependent ((IMAGE (\x. ((vector_add a) x))) s)) = (affine_dependent s)))) orig)
T * / ! c= caffine_dependent * * part cIMAGE / cvector_add b0 b2 b1 caffine_dependent b1 f0
+ (!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) |- (((?n. ((m <= n) /\ (n < p))) ==> (m < p)) = T)
T c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 c= c==> c? / c/\ c<= f0 b0 c< b0 f1 c< f0 f1 cT
- (orig = orig) |- (!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s))))
T c==> c= f0 f0 ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1
+ (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1
+ |- (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) UNION ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s UNION t)))))
T c= * * part cUNION * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f2 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 * * part cUNION f1 f2
- (orig = orig) |- ((\x. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) DELETE ((IMAGE (\x. ((vector_add orig) x))) x)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s DELETE x)))) x)
T c==> c= f0 f0 * / c= * * part cDELETE * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * * part cDELETE f1 b0 f2
+ |- (((!m. (!p. ((?n. ((m <= n) /\ (n < p))) ==> (m < p)))) ==> ((\m. (!p. ((?n. ((m <= n) /\ (n < p))) ==> (m < p)))) m)) = ((\m. (!p. ((?n. ((m <= n) /\ (n < p))) ==> (m < p)))) m))
T c= c==> ! ! c==> c? / c/\ c<= b0 b2 c< b2 b1 c< b0 b1 * / ! c==> c? / c/\ c<= b0 b2 c< b2 b1 c< b0 b1 f0 * / ! c==> c? / c/\ c<= b0 b2 c< b2 b1 c< b0 b1 f0
- (orig = orig) |- (((!s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) SUBSET ((IMAGE (\y. ((vector_add orig) y))) t)) = (s SUBSET t)))) ==> ((\s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) SUBSET ((IMAGE (\y. ((vector_add orig) y))) t)) = (s SUBSET t)))) s)) = ((\s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) SUBSET ((IMAGE (\y. ((vector_add orig) y))) t)) = (s SUBSET t)))) s))
T c==> c= f0 f0 c= c==> ! ! c= cSUBSET * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cSUBSET b0 b1 * / ! c= cSUBSET * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cSUBSET b0 b1 f1 * / ! c= cSUBSET * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cSUBSET b0 b1 f1
+ |- ((\a. (!u. ((UNIONS ((IMAGE (IMAGE (\y. ((vector_add a) y)))) u)) = ((IMAGE (\y. ((vector_add a) y))) (UNIONS u))))) orig)
T * / ! c= * part cUNIONS * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cUNIONS b1 f0
- (orig = orig) |- ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) ((IMAGE (\x. ((vector_add orig) x))) x)) = (s x))
T c==> c= f0 f0 c= cIMAGE * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 * f1 f2
- |- ((\q'. ((((SUC (CARD s)) = n) = p') ==> ((p' ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = q')) ==> ((((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (p' ==> q'))))) q')
T * / c==> c= c= cSUC cCARD f0 f1 f2 c==> c==> f2 c= c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b0 c= c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> f2 b0 f3
- (orig = orig) |- ((((IMAGE (\y. ((vector_add orig) y))) s) ((vector_add orig) x)) = (s x))
T c==> c= f0 f0 c= cIMAGE / cvector_add f0 b0 f1 cvector_add f0 f2 * f1 f2
+ |- ((\a. (!s. ((barycentre ((IMAGE (\x. ((vector_add a) x))) s)) = ((vector_add (((COND ((FINITE s) /\ (~ (s = EMPTY)))) a) (vec (NUMERAL _0)))) (barycentre s))))) orig)
T * / ! c= cbarycentre * * part cIMAGE / cvector_add b0 b2 b1 cvector_add cCOND c/\ cFINITE b1 c~ c= b1 part cEMPTY b0 cvec cNUMERAL c_0 cbarycentre b1 f0
- |- ((((n <= (dimindex UNIV)) ==> ((negligible (span s)) = (negligible (span s)))) ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = (((n <= (dimindex UNIV)) ==> (negligible (span s))) = ((n <= (dimindex UNIV)) ==> (negligible (span s)))))
T c= c==> c==> c<= f0 cdimindex part cUNIV c= cnegligible * part cspan f1 cnegligible * part cspan f1 c= c==> c<= f0 cdimindex part cUNIV cnegligible * part cspan f1 c==> c<= f0 cdimindex part cUNIV cnegligible * part cspan f1 c= c==> c<= f0 cdimindex part cUNIV cnegligible * part cspan f1 c==> c<= f0 cdimindex part cUNIV cnegligible * part cspan f1
- (orig = orig) |- (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))
T c==> c= f0 f0 ! c= cedge_of * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cedge_of f1 b0
- (orig = orig) |- (!s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) SUBSET ((IMAGE (\y. ((vector_add orig) y))) t)) = (s SUBSET t))))
T c==> c= f0 f0 ! ! c= cSUBSET * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cSUBSET b0 b1
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- (!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s)))))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1
- (orig = orig) |- ((\x. (!y. ((distance (((vector_add orig) x) , ((vector_add orig) y))) = (distance (x , y))))) x)
T c==> c= f0 f0 * / ! c= cdistance c, cvector_add f0 b0 cvector_add f0 b1 cdistance c, b0 b1 f1
- (orig = orig) |- ((fsigma ((IMAGE (\x. ((vector_add orig) x))) s)) = (fsigma s))
T c==> c= f0 f0 c= cfsigma * * part cIMAGE / cvector_add f0 b0 f1 cfsigma f1
+ |- (((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) ==> F)) = ((!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) ==> F))
T c= c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF
- (orig = orig) |- (!t. (((closed_in ((subtopology euclidean) ((IMAGE (\x. ((vector_add orig) x))) t))) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((closed_in ((subtopology euclidean) t)) s)))
T c==> c= f0 f0 ! c= cclosed_in csubtopology ceuclidean * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 f1 cclosed_in csubtopology ceuclidean b0 f1
+ |- (((!a. (!x. (!y. (((vector_sub ((vector_add a) x)) ((vector_add a) y)) = ((vector_sub x) y))))) ==> ((\a. (!x. (!y. (((vector_sub ((vector_add a) x)) ((vector_add a) y)) = ((vector_sub x) y))))) orig)) = ((\a. (!x. (!y. (((vector_sub ((vector_add a) x)) ((vector_add a) y)) = ((vector_sub x) y))))) orig))
T c= c==> ! ! ! c= cvector_sub cvector_add b0 b1 cvector_add b0 b2 cvector_sub b1 b2 * / ! ! c= cvector_sub cvector_add b0 b1 cvector_add b0 b2 cvector_sub b1 b2 f0 * / ! ! c= cvector_sub cvector_add b0 b1 cvector_add b0 b2 cvector_sub b1 b2 f0
- |- ((?s'. ((((~ ((CARD s') <= (dimindex UNIV))) \/ (negligible ((hull affine) s'))) /\ ((~ (x IN s')) /\ (FINITE s'))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s))))))) = ((?s. (((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s)))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))))
T c= c? / c/\ c/\ c\/ c~ c<= cCARD b0 cdimindex part cUNIV cnegligible * * part chull part caffine b0 c/\ c~ cIN f0 b0 cFINITE b0 c/\ c<= cCARD * * part cINSERT f0 f1 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f0 f1 c/\ c? / c/\ c\/ c~ c<= cCARD b0 cdimindex part cUNIV cnegligible * * part chull part caffine b0 c/\ c~ cIN f0 b0 cFINITE b0 c/\ c<= cCARD * * part cINSERT f0 f1 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f0 f1
- (orig = orig) |- (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) <_c t) = (s <_c t)))
T c==> c= f0 f0 ! c= c<_c * * part cIMAGE / cvector_add f0 b1 f1 b0 c<_c f1 b0
+ |- ((!s. (((!x. (FINITE (x INSERT s))) \/ (~ (FINITE s))) /\ ((!x. (~ (FINITE (x INSERT s)))) \/ (FINITE s)))) = ((!s. ((!x. (FINITE (x INSERT s))) \/ (~ (FINITE s)))) /\ (!s. ((!x. (~ (FINITE (x INSERT s)))) \/ (FINITE s)))))
T c= ! c/\ c\/ ! cFINITE * * part cINSERT b1 b0 c~ cFINITE b0 c\/ ! c~ cFINITE * * part cINSERT b1 b0 cFINITE b0 c/\ ! c\/ ! cFINITE * * part cINSERT b1 b0 c~ cFINITE b0 ! c\/ ! c~ cFINITE * * part cINSERT b1 b0 cFINITE b0
- (orig = orig) |- ((\s. (!t. (((closed_in ((subtopology euclidean) ((IMAGE (\x. ((vector_add orig) x))) t))) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((closed_in ((subtopology euclidean) t)) s)))) s)
T c==> c= f0 f0 * / ! c= cclosed_in csubtopology ceuclidean * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE / cvector_add f0 b2 b0 cclosed_in csubtopology ceuclidean b1 b0 f1
- (orig = orig) |- (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) INTER ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s INTER t))))
T c==> c= f0 f0 ! c= * * part cINTER * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * * part cINTER f1 b0
+ |- (EMPTY = ((IMAGE (\x. ((vector_add orig) x))) EMPTY))
T c= part cEMPTY * * part cIMAGE / cvector_add f0 b0 part cEMPTY
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c= c? / * f1 b0 c? / * f1 cMAP / cvector_add f0 b1 b0
- (orig = orig) |- ((((IMAGE (\x. ((vector_add orig) x))) s) >_c t) = (s >_c t))
T c==> c= f0 f0 c= c>_c * * part cIMAGE / cvector_add f0 b0 f1 f2 c>_c f1 f2
+ |- ((!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s))))))) = ((((CARD EMPTY) <= (dimindex UNIV)) ==> (negligible ((hull affine) EMPTY))) /\ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))))
T c= ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c/\ c==> c<= cCARD part cEMPTY cdimindex part cUNIV cnegligible * * part chull part caffine part cEMPTY ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1
- (_1772508 = _1772509) |- ((((negligible _1772508) = (negligible _1772509)) ==> ((negligible _1772509) \/ (~ (negligible _1772508)))) = ((negligible _1772509) \/ (~ (negligible _1772508))))
T c==> c= f0 f1 c= c==> c= cnegligible f0 cnegligible f1 c\/ cnegligible f1 c~ cnegligible f0 c\/ cnegligible f1 c~ cnegligible f0
- (orig = orig) |- (((!s. (!t. (((homeomorphic ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homeomorphic s) t)))) ==> ((\s. (!t. (((homeomorphic ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homeomorphic s) t)))) s)) = ((\s. (!t. (((homeomorphic ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homeomorphic s) t)))) s))
T c==> c= f0 f0 c= c==> ! ! c= chomeomorphic * * part cIMAGE / cvector_add f0 b2 b0 b1 chomeomorphic b0 b1 * / ! c= chomeomorphic * * part cIMAGE / cvector_add f0 b2 b0 b1 chomeomorphic b0 b1 f1 * / ! c= chomeomorphic * * part cIMAGE / cvector_add f0 b2 b0 b1 chomeomorphic b0 b1 f1
- (orig = orig) |- (((!t. ((s >_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s >_c t))) ==> ((\t. ((s >_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s >_c t))) t)) = ((\t. ((s >_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s >_c t))) t))
T c==> c= f0 f0 c= c==> ! c= c>_c f1 * * part cIMAGE / cvector_add f0 b1 b0 c>_c f1 b0 * / c= c>_c f1 * * part cIMAGE / cvector_add f0 b1 b0 c>_c f1 b0 f2 * / c= c>_c f1 * * part cIMAGE / cvector_add f0 b1 b0 c>_c f1 b0 f2
- (orig = orig) |- (!z. (!f. (((continuous f) (at ((vector_add orig) z))) = ((continuous (\x. (f ((vector_add orig) x)))) (at z)))))
T c==> c= f0 f0 ! ! c= ccontinuous b1 cat cvector_add f0 b0 ccontinuous / * b1 cvector_add f0 b2 cat b0
+ |- ((\a. (!s. (((locally compact) ((IMAGE (\x. ((vector_add a) x))) s)) = ((locally compact) s)))) orig)
T * / ! c= clocally part ccompact * * part cIMAGE / cvector_add b0 b2 b1 clocally part ccompact b1 f0
- ((~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) ==> ((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) ==> ((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) ==> F)))) |- (((~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) ==> ((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) ==> ((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) ==> F)))) /\ ((~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) ==> ((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) ==> ((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) ==> F)))))
T c==> c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF c/\ c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF
- (orig = orig) |- (!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t))))
T c==> c= f0 f0 ! ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1
- (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))), ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- ((~ F) ==> F)
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c==> c~ cF cF
+ |- ((\_1772528. (!s. (!n. (((~ (orig IN ((IMAGE (\x. ((vector_add _1772522) x))) s))) /\ (((orig INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s)) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (orig INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s)))))))) = (\_1772528. (!s. (!n. (((~ (((vector_add orig) (vec (NUMERAL _0))) IN ((IMAGE (\x. ((vector_add _1772522) x))) s))) /\ (((((vector_add orig) (vec (NUMERAL _0))) INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s)) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (((vector_add orig) (vec (NUMERAL _0))) INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s)))))))))
T c= / ! ! c==> c/\ c~ cIN f0 * * part cIMAGE / cvector_add f1 b3 b1 c/\ cHAS_SIZE * * part cINSERT f0 * * part cIMAGE / cvector_add f1 b3 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 * * part cIMAGE / cvector_add f1 b3 b1 / ! ! c==> c/\ c~ cIN cvector_add f0 cvec cNUMERAL c_0 * * part cIMAGE / cvector_add f1 b3 b1 c/\ cHAS_SIZE * * part cINSERT cvector_add f0 cvec cNUMERAL c_0 * * part cIMAGE / cvector_add f1 b3 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvector_add f0 cvec cNUMERAL c_0 * * part cIMAGE / cvector_add f1 b3 b1
- (orig = orig) |- (!a. (!b. ((closed_segment ((CONS (((vector_add orig) a) , ((vector_add orig) b))) NIL)) = ((IMAGE (\x. ((vector_add orig) x))) (closed_segment ((CONS (a , b)) NIL))))))
T c==> c= f0 f0 ! ! c= * part cclosed_segment cCONS c, cvector_add f0 b0 cvector_add f0 b1 cNIL * * part cIMAGE / cvector_add f0 b2 * part cclosed_segment cCONS c, b0 b1 cNIL
- (orig = orig) |- (((!s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) >_c t) = (s >_c t)))) ==> ((\s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) >_c t) = (s >_c t)))) s)) = ((\s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) >_c t) = (s >_c t)))) s))
T c==> c= f0 f0 c= c==> ! ! c= c>_c * * part cIMAGE / cvector_add f0 b2 b0 b1 c>_c b0 b1 * / ! c= c>_c * * part cIMAGE / cvector_add f0 b2 b0 b1 c>_c b0 b1 f1 * / ! c= c>_c * * part cIMAGE / cvector_add f0 b2 b0 b1 c>_c b0 b1 f1
- |- ((!n. (((~ (orig IN s)) /\ (((orig INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (orig INSERT s))))) = T)
T c= ! c==> c/\ c~ cIN f0 f1 c/\ cHAS_SIZE * * part cINSERT f0 f1 b0 c<= b0 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 f1 cT
- |- ((_1772514 = _1772516) ==> ((~ (_1772515 = _1772517)) \/ ((_1772514 INSERT _1772515) = (_1772516 INSERT _1772517))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ |- (((int_le (int_of_num (NUMERAL _0))) _1772535) ==> (((int_le (int_of_num (NUMERAL _0))) _1772536) ==> (((int_le (int_of_num (NUMERAL _0))) _1772537) ==> (((vec (NUMERAL _0)) IN s) \/ ((~ (FINITE s)) \/ ((~ (((int_add _1772536) (int_of_num (NUMERAL (BIT1 _0)))) = _1772535)) \/ ((~ ((int_le _1772535) _1772537)) \/ ((int_lt _1772536) _1772537))))))))
T c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c==> cint_le cint_of_num cNUMERAL c_0 f2 c\/ cIN cvec cNUMERAL c_0 f3 c\/ c~ cFINITE f3 c\/ c~ c= cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0 c\/ c~ cint_le f0 f2 cint_lt f1 f2
- (orig = orig) |- (!s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) PSUBSET ((IMAGE (\y. ((vector_add orig) y))) t)) = (s PSUBSET t))))
T c==> c= f0 f0 ! ! c= cPSUBSET * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cPSUBSET b0 b1
- (_1772515 = _1772517), (_1772514 = _1772516) |- ((_1772515 = _1772517) /\ ((_1772514 INSERT _1772515) = (_1772516 INSERT _1772517)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cINSERT f2 f0 * * part cINSERT f3 f1
+ (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))), (~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) |- F
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF
- (orig = orig) |- (((!s. ((complete ((IMAGE (\x. ((vector_add orig) x))) s)) = (complete s))) ==> ((\s. ((complete ((IMAGE (\x. ((vector_add orig) x))) s)) = (complete s))) s)) = ((\s. ((complete ((IMAGE (\x. ((vector_add orig) x))) s)) = (complete s))) s))
T c==> c= f0 f0 c= c==> ! c= ccomplete * * part cIMAGE / cvector_add f0 b1 b0 ccomplete b0 * / c= ccomplete * * part cIMAGE / cvector_add f0 b1 b0 ccomplete b0 f1 * / c= ccomplete * * part cIMAGE / cvector_add f0 b1 b0 ccomplete b0 f1
- (orig = orig) |- (!s. ((affine ((IMAGE (\x. ((vector_add orig) x))) s)) = (affine s)))
T c==> c= f0 f0 ! c= caffine * * part cIMAGE / cvector_add f0 b1 b0 caffine b0
- (_1772512 = _1772513) |- ((_1772512 = _1772513) /\ ((dimindex _1772512) = (dimindex _1772513)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cdimindex f0 cdimindex f1
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772535)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772536)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772537)) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_int _1772535)) /\ (((real_le (real_of_int _1772535)) (real_of_int _1772537)) /\ ((real_le (real_of_int _1772537)) (real_of_int _1772536))))))))) = (~ (((int_le (int_of_num (NUMERAL _0))) _1772535) ==> (((int_le (int_of_num (NUMERAL _0))) _1772536) ==> (((int_le (int_of_num (NUMERAL _0))) _1772537) ==> (((vec (NUMERAL _0)) IN s) \/ ((~ (FINITE s)) \/ ((~ (((int_add _1772536) (int_of_num (NUMERAL (BIT1 _0)))) = _1772535)) \/ ((~ ((int_le _1772535) _1772537)) \/ ((int_lt _1772536) _1772537))))))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f2 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ creal_le creal_of_int f0 creal_of_int f2 creal_le creal_of_int f2 creal_of_int f1 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c==> cint_le cint_of_num cNUMERAL c_0 f2 c\/ cIN cvec cNUMERAL c_0 f3 c\/ c~ cFINITE f3 c\/ c~ c= cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0 c\/ c~ cint_le f0 f2 cint_lt f1 f2
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- (((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) ==> ((\P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) P)) = ((\P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) P))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c= c==> ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 * / c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 f1 * / c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 f1
- (orig = orig) |- ((\x. (!l. (((MEM ((vector_add orig) x)) ((MAP (\x. ((vector_add orig) x))) l)) = ((MEM x) l)))) x)
T c==> c= f0 f0 * / ! c= cMEM cvector_add f0 b0 cMAP / cvector_add f0 b2 b1 cMEM b0 b1 f1
- (orig = orig) |- ((\x. (!y. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add orig) x)) ((vector_add orig) y))) = ((vector_add orig) ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y)))))) x)
T c==> c= f0 f0 * / ! c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add f0 b0 cvector_add f0 b1 cvector_add f0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b0 b1 f1
- (orig = orig) |- (!t. (!g. (((shiftpath t) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o ((shiftpath t) g)))))
T c==> c= f0 f0 ! ! c= * * part cshiftpath b0 * * part co / cvector_add f0 b2 b1 * * part co / cvector_add f0 b2 * * part cshiftpath b0 b1
+ |- (((!a. (!x. (!y. ((distance (((vector_add a) x) , ((vector_add a) y))) = (distance (x , y)))))) ==> ((\a. (!x. (!y. ((distance (((vector_add a) x) , ((vector_add a) y))) = (distance (x , y)))))) orig)) = ((\a. (!x. (!y. ((distance (((vector_add a) x) , ((vector_add a) y))) = (distance (x , y)))))) orig))
T c= c==> ! ! ! c= cdistance c, cvector_add b0 b1 cvector_add b0 b2 cdistance c, b1 b2 * / ! ! c= cdistance c, cvector_add b0 b1 cvector_add b0 b2 cdistance c, b1 b2 f0 * / ! ! c= cdistance c, cvector_add b0 b1 cvector_add b0 b2 cdistance c, b1 b2 f0
- (orig = orig) |- (((DISJOINT ((IMAGE (\y. ((vector_add orig) y))) s)) ((IMAGE (\y. ((vector_add orig) y))) t)) = ((DISJOINT s) t))
T c==> c= f0 f0 c= cDISJOINT * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 cDISJOINT f1 f2
- (orig = orig) |- (!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s)))
T c==> c= f0 f0 ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0
+ |- (((!s. (((vec (NUMERAL _0)) IN ((hull affine) s)) ==> (((hull affine) s) = (span s)))) ==> ((\s. (((vec (NUMERAL _0)) IN ((hull affine) s)) ==> (((hull affine) s) = (span s)))) s)) = ((\s. (((vec (NUMERAL _0)) IN ((hull affine) s)) ==> (((hull affine) s) = (span s)))) s))
T c= c==> ! c==> cIN cvec cNUMERAL c_0 * * part chull part caffine b0 c= * * part chull part caffine b0 * part cspan b0 * / c==> cIN cvec cNUMERAL c_0 * * part chull part caffine b0 c= * * part chull part caffine b0 * part cspan b0 f0 * / c==> cIN cvec cNUMERAL c_0 * * part chull part caffine b0 c= * * part chull part caffine b0 * part cspan b0 f0
- (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- (~ ((vec (NUMERAL _0)) IN s))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c~ cIN cvec cNUMERAL c_0 f3
+ |- ((\a. (!s. ((INFINITE ((IMAGE (\y. ((vector_add a) y))) s)) = (INFINITE s)))) orig)
T * / ! c= cINFINITE * * part cIMAGE / cvector_add b0 b2 b1 cINFINITE b1 f0
+ |- (((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))) = ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))))
T c= c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
- ((dim s) < (dimindex UNIV)) |- ((!s. (((dim s) < (dimindex UNIV)) ==> (negligible s))) ==> (negligible s))
T c==> c< cdim f0 cdimindex part cUNIV c==> ! c==> c< cdim b0 cdimindex part cUNIV cnegligible b0 cnegligible f0
+ |- (((!a. (!s. ((INFINITE ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) = (INFINITE s)))) ==> ((\a. (!s. ((INFINITE ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) = (INFINITE s)))) orig)) = ((\a. (!s. ((INFINITE ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) = (INFINITE s)))) orig))
T c= c==> ! ! c= cINFINITE * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 cINFINITE b1 * / ! c= cINFINITE * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 cINFINITE b1 f0 * / ! c= cINFINITE * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 cINFINITE b1 f0
- (orig = orig) |- (((!s. ((INFINITE ((IMAGE (\y. ((vector_add orig) y))) s)) = (INFINITE s))) ==> ((\s. ((INFINITE ((IMAGE (\y. ((vector_add orig) y))) s)) = (INFINITE s))) s)) = ((\s. ((INFINITE ((IMAGE (\y. ((vector_add orig) y))) s)) = (INFINITE s))) s))
T c==> c= f0 f0 c= c==> ! c= cINFINITE * * part cIMAGE / cvector_add f0 b1 b0 cINFINITE b0 * / c= cINFINITE * * part cIMAGE / cvector_add f0 b1 b0 cINFINITE b0 f1 * / c= cINFINITE * * part cIMAGE / cvector_add f0 b1 b0 cINFINITE b0 f1
+ (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))), ((\x. (?s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))))) x) |- (((\x. (?s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))))) x) /\ F)
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> * / c? / c/\ c/\ c\/ c~ c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c/\ c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT b0 b1 f0 c/\ * / c? / c/\ c/\ c\/ c~ c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c/\ c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT b0 b1 f0 cF
+ |- ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))))))
T c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((!a. (!s. ((interior ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (interior s))))) ==> ((\a. (!s. ((interior ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (interior s))))) orig)) = ((\a. (!s. ((interior ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (interior s))))) orig))
T c= c==> ! ! c= * part cinterior * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cinterior b1 * / ! c= * part cinterior * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cinterior b1 f0 * / ! c= * part cinterior * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cinterior b1 f0
+ (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) |- (!x. (((\x. (?s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))))) x) ==> F))
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 ! c==> * / c? / c/\ c/\ c\/ c~ c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b1 b1 cFINITE b1 c/\ c<= cCARD * * part cINSERT b1 b1 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT b1 b1 b0 cF
- (orig = orig) |- (((!s. ((aff_dim ((IMAGE (\x. ((vector_add orig) x))) s)) = (aff_dim s))) ==> ((\s. ((aff_dim ((IMAGE (\x. ((vector_add orig) x))) s)) = (aff_dim s))) s)) = ((\s. ((aff_dim ((IMAGE (\x. ((vector_add orig) x))) s)) = (aff_dim s))) s))
T c==> c= f0 f0 c= c==> ! c= caff_dim * * part cIMAGE / cvector_add f0 b1 b0 caff_dim b0 * / c= caff_dim * * part cIMAGE / cvector_add f0 b1 b0 caff_dim b0 f1 * / c= caff_dim * * part cIMAGE / cvector_add f0 b1 b0 caff_dim b0 f1
- (orig = orig) |- ((\t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = (s = t))) t)
T c==> c= f0 f0 * / c= c= * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 c= f1 b0 f2
- (orig = orig) |- (((!s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) = ((IMAGE (\y. ((vector_add orig) y))) t)) = (s = t)))) ==> ((\s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) = ((IMAGE (\y. ((vector_add orig) y))) t)) = (s = t)))) s)) = ((\s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) = ((IMAGE (\y. ((vector_add orig) y))) t)) = (s = t)))) s))
T c==> c= f0 f0 c= c==> ! ! c= c= * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 c= b0 b1 * / ! c= c= * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 c= b0 b1 f1 * / ! c= c= * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 c= b0 b1 f1
- (orig = orig) |- ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))
T c==> c= f0 f0 c= cpolyhedron * * part cIMAGE / cvector_add f0 b0 f1 cpolyhedron f1
- (orig = orig) |- ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))
T c==> c= f0 f0 c= cmeasurable * * part cIMAGE / cvector_add f0 b0 f1 cmeasurable f1
- (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0
- (orig = orig) |- (!s. ((interior ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (interior s))))
T c==> c= f0 f0 ! c= * part cinterior * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cinterior b0
- (orig = orig) |- (!y. (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add orig) x)) ((vector_add orig) y))) = ((vector_add orig) ((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y)))))
T c==> c= f0 f0 ! c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add f0 f1 cvector_add f0 b0 cvector_add f0 c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f1 b0
- (orig = orig) |- ((\g. ((arc ((\x. ((vector_add orig) x)) o g)) = (arc g))) g)
T c==> c= f0 f0 * / c= carc * * part co / cvector_add f0 b1 b0 carc b0 f1
- (orig = orig) |- (((!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t))) ==> ((\t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t))) t)) = ((\t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t))) t))
T c==> c= f0 f0 c= c==> ! c= chomotopy_equivalent f1 * * part cIMAGE / cvector_add f0 b1 b0 chomotopy_equivalent f1 b0 * / c= chomotopy_equivalent f1 * * part cIMAGE / cvector_add f0 b1 b0 chomotopy_equivalent f1 b0 f2 * / c= chomotopy_equivalent f1 * * part cIMAGE / cvector_add f0 b1 b0 chomotopy_equivalent f1 b0 f2
+ |- (((!a. (!s. (!t. ((s >_c ((IMAGE (\x. ((vector_add a) x))) t)) = (s >_c t))))) ==> ((\a. (!s. (!t. ((s >_c ((IMAGE (\x. ((vector_add a) x))) t)) = (s >_c t))))) orig)) = ((\a. (!s. (!t. ((s >_c ((IMAGE (\x. ((vector_add a) x))) t)) = (s >_c t))))) orig))
T c= c==> ! ! ! c= c>_c b1 * * part cIMAGE / cvector_add b0 b3 b2 c>_c b1 b2 * / ! ! c= c>_c b1 * * part cIMAGE / cvector_add b0 b3 b2 c>_c b1 b2 f0 * / ! ! c= c>_c b1 * * part cIMAGE / cvector_add b0 b3 b2 c>_c b1 b2 f0
- (orig = orig) |- ((\f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) f)
T c==> c= f0 f0 * / ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 f1
+ |- ((UNIV = ((IMAGE (\x. ((vector_add orig) x))) UNIV)) /\ ((UNIV = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) UNIV)) /\ (NIL = ((MAP (\x. ((vector_add orig) x))) NIL))))
T c/\ c= part cUNIV * * part cIMAGE / cvector_add f0 b0 part cUNIV c/\ c= part cUNIV * * part cIMAGE * part cIMAGE / cvector_add f0 b0 part cUNIV c= cNIL cMAP / cvector_add f0 b0 cNIL
+ |- ((\y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) y)
T * / ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 f1
- |- ((!s'. (((x IN s') \/ (!n. ((~ ((x INSERT s') HAS_SIZE n)) \/ (~ (n <= (dimindex UNIV)))))) \/ (negligible ((hull affine) (x INSERT s))))) = ((!s. ((x IN s) \/ (!n. ((~ ((x INSERT s) HAS_SIZE n)) \/ (~ (n <= (dimindex UNIV))))))) \/ (negligible ((hull affine) (x INSERT s)))))
T c= ! c\/ c\/ cIN f0 b0 ! c\/ c~ cHAS_SIZE * * part cINSERT f0 b0 b1 c~ c<= b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 f1 c\/ ! c\/ cIN f0 b0 ! c\/ c~ cHAS_SIZE * * part cINSERT f0 b0 b1 c~ c<= b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 f1
- (orig = orig) |- ((((IMAGE (\x. ((vector_add orig) x))) s) =_c t) = (s =_c t))
T c==> c= f0 f0 c= c=_c * * part cIMAGE / cvector_add f0 b0 f1 f2 c=_c f1 f2
- (orig = orig) |- ((\n. ((((IMAGE (\x. ((vector_add orig) x))) o xs) n) = ((IMAGE (\x. ((vector_add orig) x))) (xs n)))) n)
T c==> c= f0 f0 * / c= * * * part co * part cIMAGE / cvector_add f0 b1 f1 b0 * * part cIMAGE / cvector_add f0 b1 * f1 b0 f2
- (orig = orig) |- ((\n. ((((\y. ((vector_add orig) y)) o xs) n) = ((vector_add orig) (xs n)))) n)
T c==> c= f0 f0 * / c= co / cvector_add f0 b1 f1 b0 cvector_add f0 * f1 b0 f2
- (orig = orig) |- ((\c. ((linepath (((vector_add orig) b) , ((vector_add orig) c))) = ((\x. ((vector_add orig) x)) o (linepath (b , c))))) c)
T c==> c= f0 f0 * / c= * part clinepath c, cvector_add f0 f1 cvector_add f0 b0 * * part co / cvector_add f0 b1 * part clinepath c, f1 b0 f2
- (orig = orig) |- ((\s. ((COUNTABLE ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (COUNTABLE s))) s)
T c==> c= f0 f0 * / c= cCOUNTABLE * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 cCOUNTABLE b0 f1
- (orig = orig) |- (((!r. ((cball (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (cball (x , r))))) ==> ((\r. ((cball (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (cball (x , r))))) r)) = ((\r. ((cball (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (cball (x , r))))) r))
T c==> c= f0 f0 c= c==> ! c= * part ccball c, cvector_add f0 f1 b0 * * part cIMAGE / cvector_add f0 b1 * part ccball c, f1 b0 * / c= * part ccball c, cvector_add f0 f1 b0 * * part cIMAGE / cvector_add f0 b1 * part ccball c, f1 b0 f2 * / c= * part ccball c, cvector_add f0 f1 b0 * * part cIMAGE / cvector_add f0 b1 * part ccball c, f1 b0 f2
- (orig = orig) |- (((!y. ((((vector_add orig) x) = ((vector_add orig) y)) = (x = y))) ==> ((\y. ((((vector_add orig) x) = ((vector_add orig) y)) = (x = y))) y)) = ((\y. ((((vector_add orig) x) = ((vector_add orig) y)) = (x = y))) y))
T c==> c= f0 f0 c= c==> ! c= c= cvector_add f0 f1 cvector_add f0 b0 c= f1 b0 * / c= c= cvector_add f0 f1 cvector_add f0 b0 c= f1 b0 f2 * / c= c= cvector_add f0 f1 cvector_add f0 b0 c= f1 b0 f2
+ |- ((\_1772525. (\_1772526. (\_1772527. (\_1772528. (!s. (!n. (((~ (orig IN ((IMAGE (\x. ((vector_add _1772522) x))) s))) /\ (((orig INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s)) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (orig INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s))))))))))) = (\_1772525. (\_1772526. (\_1772527. (\_1772528. (!s. (!n. (((~ (((vector_add orig) (vec (NUMERAL _0))) IN ((IMAGE (\x. ((vector_add _1772522) x))) s))) /\ (((((vector_add orig) (vec (NUMERAL _0))) INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s)) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (((vector_add orig) (vec (NUMERAL _0))) INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s))))))))))))
T c= / / / / ! ! c==> c/\ c~ cIN f0 * * part cIMAGE / cvector_add f1 b6 b4 c/\ cHAS_SIZE * * part cINSERT f0 * * part cIMAGE / cvector_add f1 b6 b4 b5 c<= b5 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 * * part cIMAGE / cvector_add f1 b6 b4 / / / / ! ! c==> c/\ c~ cIN cvector_add f0 cvec cNUMERAL c_0 * * part cIMAGE / cvector_add f1 b6 b4 c/\ cHAS_SIZE * * part cINSERT cvector_add f0 cvec cNUMERAL c_0 * * part cIMAGE / cvector_add f1 b6 b4 b5 c<= b5 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvector_add f0 cvec cNUMERAL c_0 * * part cIMAGE / cvector_add f1 b6 b4
- (orig = orig) |- (((locally path_connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally path_connected) s))
T c==> c= f0 f0 c= clocally part cpath_connected * * part cIMAGE / cvector_add f0 b0 f1 clocally part cpath_connected f1
+ (orig = orig) |- ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))
T c==> c= f0 f0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- ((\s. ((span ((vec (NUMERAL _0)) INSERT s)) = (span s))) s)
T * / c= * part cspan * * part cINSERT cvec cNUMERAL c_0 b0 * part cspan b0 f0
- (orig = orig) |- ((((IMAGE (\y. ((vector_add orig) y))) s) UNION ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s UNION t)))
T c==> c= f0 f0 c= * * part cUNION * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 * * part cIMAGE / cvector_add f0 b0 * * part cUNION f1 f2
+ |- ((((~ F) ==> ((SUC (CARD s)) = (SUC (CARD s)))) ==> ((((COND ((vec (NUMERAL _0)) IN s)) (CARD s)) (SUC (CARD s))) = (((COND F) (CARD s)) (SUC (CARD s))))) = ((((COND ((vec (NUMERAL _0)) IN s)) (CARD s)) (SUC (CARD s))) = (((COND F) (CARD s)) (SUC (CARD s)))))
T c= c==> c==> c~ cF c= cSUC cCARD f0 cSUC cCARD f0 c= cCOND cIN cvec cNUMERAL c_0 f0 cCARD f0 cSUC cCARD f0 cCOND cF cCARD f0 cSUC cCARD f0 c= cCOND cIN cvec cNUMERAL c_0 f0 cCARD f0 cSUC cCARD f0 cCOND cF cCARD f0 cSUC cCARD f0
+ |- (((!a. (!s. (!t. ((((IMAGE (\x. ((vector_add a) x))) s) >_c t) = (s >_c t))))) ==> ((\a. (!s. (!t. ((((IMAGE (\x. ((vector_add a) x))) s) >_c t) = (s >_c t))))) orig)) = ((\a. (!s. (!t. ((((IMAGE (\x. ((vector_add a) x))) s) >_c t) = (s >_c t))))) orig))
T c= c==> ! ! ! c= c>_c * * part cIMAGE / cvector_add b0 b3 b1 b2 c>_c b1 b2 * / ! ! c= c>_c * * part cIMAGE / cvector_add b0 b3 b1 b2 c>_c b1 b2 f0 * / ! ! c= c>_c * * part cIMAGE / cvector_add b0 b3 b1 b2 c>_c b1 b2 f0
+ (orig = orig) |- ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))
T c==> c= f0 f0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- (((!q'. (((~ ((vec (NUMERAL _0)) IN s)) = p') ==> ((p' ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = q')) ==> (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = (p' ==> q'))))) ==> ((\q'. (((~ ((vec (NUMERAL _0)) IN s)) = p') ==> ((p' ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = q')) ==> (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = (p' ==> q'))))) q')) = ((\q'. (((~ ((vec (NUMERAL _0)) IN s)) = p') ==> ((p' ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = q')) ==> (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c~ cIN cvec cNUMERAL c_0 f0 f1 c==> c==> f1 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 b0 c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 c==> f1 b0 * / c==> c= c~ cIN cvec cNUMERAL c_0 f0 f1 c==> c==> f1 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 b0 c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 c==> f1 b0 f3 * / c==> c= c~ cIN cvec cNUMERAL c_0 f0 f1 c==> c==> f1 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 b0 c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 c==> f1 b0 f3
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
+ |- ((\a. (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) UNION ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (s UNION t)))))) orig)
T * / ! ! c= * * part cUNION * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 * * part cUNION b1 b2 f0
+ |- (((!a. (!s. (!x. (((limit_point_of ((vector_add a) x)) ((IMAGE (\y. ((vector_add a) y))) s)) = ((limit_point_of x) s))))) ==> ((\a. (!s. (!x. (((limit_point_of ((vector_add a) x)) ((IMAGE (\y. ((vector_add a) y))) s)) = ((limit_point_of x) s))))) orig)) = ((\a. (!s. (!x. (((limit_point_of ((vector_add a) x)) ((IMAGE (\y. ((vector_add a) y))) s)) = ((limit_point_of x) s))))) orig))
T c= c==> ! ! ! c= climit_point_of cvector_add b0 b2 * * part cIMAGE / cvector_add b0 b3 b1 climit_point_of b2 b1 * / ! ! c= climit_point_of cvector_add b0 b2 * * part cIMAGE / cvector_add b0 b3 b1 climit_point_of b2 b1 f0 * / ! ! c= climit_point_of cvector_add b0 b2 * * part cIMAGE / cvector_add b0 b3 b1 climit_point_of b2 b1 f0
- (orig = orig) |- ((\l. ((LENGTH ((MAP (\x. ((vector_add orig) x))) l)) = (LENGTH l))) l)
T c==> c= f0 f0 * / c= cLENGTH cMAP / cvector_add f0 b1 b0 cLENGTH b0 f1
+ |- (((!c. (!a. (!b. ((open_interval (((vector_add c) a) , ((vector_add c) b))) = ((IMAGE (\x. ((vector_add c) x))) (open_interval (a , b))))))) ==> ((\c. (!a. (!b. ((open_interval (((vector_add c) a) , ((vector_add c) b))) = ((IMAGE (\x. ((vector_add c) x))) (open_interval (a , b))))))) orig)) = ((\c. (!a. (!b. ((open_interval (((vector_add c) a) , ((vector_add c) b))) = ((IMAGE (\x. ((vector_add c) x))) (open_interval (a , b))))))) orig))
T c= c==> ! ! ! c= * part copen_interval c, cvector_add b0 b1 cvector_add b0 b2 * * part cIMAGE / cvector_add b0 b3 * part copen_interval c, b1 b2 * / ! ! c= * part copen_interval c, cvector_add b0 b1 cvector_add b0 b2 * * part cIMAGE / cvector_add b0 b3 * part copen_interval c, b1 b2 f0 * / ! ! c= * part copen_interval c, cvector_add b0 b1 cvector_add b0 b2 * * part cIMAGE / cvector_add b0 b3 * part copen_interval c, b1 b2 f0
+ |- (((!a. (!s. (!t. (((DISJOINT ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = ((DISJOINT s) t))))) ==> ((\a. (!s. (!t. (((DISJOINT ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = ((DISJOINT s) t))))) orig)) = ((\a. (!s. (!t. (((DISJOINT ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = ((DISJOINT s) t))))) orig))
T c= c==> ! ! ! c= cDISJOINT * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 cDISJOINT b1 b2 * / ! ! c= cDISJOINT * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 cDISJOINT b1 b2 f0 * / ! ! c= cDISJOINT * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 cDISJOINT b1 b2 f0
- (orig = orig) |- ((\s. (!x. ((((IMAGE (\y. ((vector_add orig) y))) s) DELETE ((vector_add orig) x)) = ((IMAGE (\y. ((vector_add orig) y))) (s DELETE x))))) s)
T c==> c= f0 f0 * / ! c= * * part cDELETE * * part cIMAGE / cvector_add f0 b2 b0 cvector_add f0 b1 * * part cIMAGE / cvector_add f0 b2 * * part cDELETE b0 b1 f1
- (orig = orig) |- ((\n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s))) n)
T c==> c= f0 f0 * / c= csimplex b0 * * part cIMAGE / cvector_add f0 b1 f1 csimplex b0 f1 f2
- |- (((!p'. (!q'. (((~ ((vec (NUMERAL _0)) IN s)) = p') ==> ((p' ==> (((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = q')) ==> (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((~ ((vec (NUMERAL _0)) IN s)) = p') ==> ((p' ==> (((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = q')) ==> (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((~ ((vec (NUMERAL _0)) IN s)) = p') ==> ((p' ==> (((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = q')) ==> (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c~ cIN cvec cNUMERAL c_0 f0 b0 c==> c==> b0 c= c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b1 c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> b0 b1 * / ! c==> c= c~ cIN cvec cNUMERAL c_0 f0 b0 c==> c==> b0 c= c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b1 c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> b0 b1 f2 * / ! c==> c= c~ cIN cvec cNUMERAL c_0 f0 b0 c==> c==> b0 c= c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b1 c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> b0 b1 f2
+ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) |- ((vec (NUMERAL _0)) IN ((hull affine) ((vec (NUMERAL _0)) INSERT s)))
T c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0
+ |- (((!t'. (!e'. ((((vec (NUMERAL _0)) IN s) = g') ==> ((g' ==> ((CARD s) = t')) ==> (((~ g') ==> ((SUC (CARD s)) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN s)) (CARD s)) (SUC (CARD s))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((vec (NUMERAL _0)) IN s) = g') ==> ((g' ==> ((CARD s) = t')) ==> (((~ g') ==> ((SUC (CARD s)) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN s)) (CARD s)) (SUC (CARD s))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((vec (NUMERAL _0)) IN s) = g') ==> ((g' ==> ((CARD s) = t')) ==> (((~ g') ==> ((SUC (CARD s)) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN s)) (CARD s)) (SUC (CARD s))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cIN cvec cNUMERAL c_0 f0 f1 c==> c==> f1 c= cCARD f0 b0 c==> c==> c~ f1 c= cSUC cCARD f0 b1 c= cCOND cIN cvec cNUMERAL c_0 f0 cCARD f0 cSUC cCARD f0 cCOND f1 b0 b1 * / ! c==> c= cIN cvec cNUMERAL c_0 f0 f1 c==> c==> f1 c= cCARD f0 b0 c==> c==> c~ f1 c= cSUC cCARD f0 b1 c= cCOND cIN cvec cNUMERAL c_0 f0 cCARD f0 cSUC cCARD f0 cCOND f1 b0 b1 f2 * / ! c==> c= cIN cvec cNUMERAL c_0 f0 f1 c==> c==> f1 c= cCARD f0 b0 c==> c==> c~ f1 c= cSUC cCARD f0 b1 c= cCOND cIN cvec cNUMERAL c_0 f0 cCARD f0 cSUC cCARD f0 cCOND f1 b0 b1 f2
+ (~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) |- ((~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) /\ ((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) ==> ((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> (~ (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s)))))))))))
T c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c/\ c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c~ ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1
- (orig = orig) |- (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))
T c==> c= f0 f0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- (((!a. (!l. ((REVERSE ((MAP (\x. ((vector_add a) x))) l)) = ((MAP (\x. ((vector_add a) x))) (REVERSE l))))) ==> ((\a. (!l. ((REVERSE ((MAP (\x. ((vector_add a) x))) l)) = ((MAP (\x. ((vector_add a) x))) (REVERSE l))))) orig)) = ((\a. (!l. ((REVERSE ((MAP (\x. ((vector_add a) x))) l)) = ((MAP (\x. ((vector_add a) x))) (REVERSE l))))) orig))
T c= c==> ! ! c= cREVERSE cMAP / cvector_add b0 b2 b1 cMAP / cvector_add b0 b2 cREVERSE b1 * / ! c= cREVERSE cMAP / cvector_add b0 b2 b1 cMAP / cvector_add b0 b2 cREVERSE b1 f0 * / ! c= cREVERSE cMAP / cvector_add b0 b2 b1 cMAP / cvector_add b0 b2 cREVERSE b1 f0
- (orig = orig) |- ((\s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) UNION ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s UNION t))))) s)
T c==> c= f0 f0 * / ! c= * * part cUNION * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 * * part cUNION b0 b1 f1
- (orig = orig) |- ((\t. (((DISJOINT ((IMAGE (\y. ((vector_add orig) y))) s)) ((IMAGE (\y. ((vector_add orig) y))) t)) = ((DISJOINT s) t))) t)
T c==> c= f0 f0 * / c= cDISJOINT * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cDISJOINT f1 b0 f2
- |- (((!f. (!y. (((\x. (f x)) y) = (f y)))) ==> ((\f. (!y. (((\x. (f x)) y) = (f y)))) f)) = ((\f. (!y. (((\x. (f x)) y) = (f y)))) f))
T c= c==> ! ! c= * / * b0 b2 b1 * b0 b1 * / ! c= * / * b0 b2 b1 * b0 b1 f0 * / ! c= * / * b0 b2 b1 * b0 b1 f0
- |- ((\f. (!y. (((\x. (f x)) y) = (f y)))) f)
T * / ! c= * / * b0 b2 b1 * b0 b1 f0
- (orig = orig) |- (((!r. ((sphere (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (sphere (x , r))))) ==> ((\r. ((sphere (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (sphere (x , r))))) r)) = ((\r. ((sphere (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (sphere (x , r))))) r))
T c==> c= f0 f0 c= c==> ! c= * part csphere c, cvector_add f0 f1 b0 * * part cIMAGE / cvector_add f0 b1 * part csphere c, f1 b0 * / c= * part csphere c, cvector_add f0 f1 b0 * * part cIMAGE / cvector_add f0 b1 * part csphere c, f1 b0 f2 * / c= * part csphere c, cvector_add f0 f1 b0 * * part cIMAGE / cvector_add f0 b1 * part csphere c, f1 b0 f2
+ (orig = orig) |- ((!s. (!n. (((~ (orig IN s)) /\ (((orig INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (orig INSERT s)))))) = (!s. (!n. (((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s)))))))
T c==> c= f0 f0 c= ! ! c==> c/\ c~ cIN f0 b0 c/\ cHAS_SIZE * * part cINSERT f0 b0 b1 c<= b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 b0 ! ! c==> c/\ c~ cIN cvec cNUMERAL c_0 b0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 b0 b1 c<= b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 b0
- F |- (F = T)
T c==> cF c= cF cT
+ |- (((!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) ==> ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) n)) = ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) n))
T c= c==> ! cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
+ |- ((\a. (!s. ((COUNTABLE ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) = (COUNTABLE s)))) orig)
T * / ! c= cCOUNTABLE * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 cCOUNTABLE b1 f0
+ |- (((!s. ((span ((vec (NUMERAL _0)) INSERT s)) = (span s))) ==> ((\s. ((span ((vec (NUMERAL _0)) INSERT s)) = (span s))) s)) = ((\s. ((span ((vec (NUMERAL _0)) INSERT s)) = (span s))) s))
T c= c==> ! c= * part cspan * * part cINSERT cvec cNUMERAL c_0 b0 * part cspan b0 * / c= * part cspan * * part cINSERT cvec cNUMERAL c_0 b0 * part cspan b0 f0 * / c= * part cspan * * part cINSERT cvec cNUMERAL c_0 b0 * part cspan b0 f0
+ |- ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s)))) = (((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible (span s))))
T c= c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
+ |- (((!a. (!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add a) x))) s)) = ((simplex n) s))))) ==> ((\a. (!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add a) x))) s)) = ((simplex n) s))))) orig)) = ((\a. (!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add a) x))) s)) = ((simplex n) s))))) orig))
T c= c==> ! ! ! c= csimplex b2 * * part cIMAGE / cvector_add b0 b3 b1 csimplex b2 b1 * / ! ! c= csimplex b2 * * part cIMAGE / cvector_add b0 b3 b1 csimplex b2 b1 f0 * / ! ! c= csimplex b2 * * part cIMAGE / cvector_add b0 b3 b1 csimplex b2 b1 f0
- (orig = orig) |- ((\f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) f)
T c==> c= f0 f0 * / ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 f1
+ |- (((!a. (!s. (!t. ((((IMAGE (\y. ((vector_add a) y))) s) SUBSET ((IMAGE (\y. ((vector_add a) y))) t)) = (s SUBSET t))))) ==> ((\a. (!s. (!t. ((((IMAGE (\y. ((vector_add a) y))) s) SUBSET ((IMAGE (\y. ((vector_add a) y))) t)) = (s SUBSET t))))) orig)) = ((\a. (!s. (!t. ((((IMAGE (\y. ((vector_add a) y))) s) SUBSET ((IMAGE (\y. ((vector_add a) y))) t)) = (s SUBSET t))))) orig))
T c= c==> ! ! ! c= cSUBSET * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cSUBSET b1 b2 * / ! ! c= cSUBSET * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cSUBSET b1 b2 f0 * / ! ! c= cSUBSET * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cSUBSET b1 b2 f0
- (orig = orig) |- ((((IMAGE (\x. ((vector_add orig) x))) x) INSERT ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (x INSERT s)))
T c==> c= f0 f0 c= * * part cINSERT * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f2 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 * * part cINSERT f1 f2
- (orig = orig) |- (!s. (!t. ((s <=_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s <=_c t))))
T c==> c= f0 f0 ! ! c= c<=_c b0 * * part cIMAGE / cvector_add f0 b2 b1 c<=_c b0 b1
- (orig = orig) |- (((!g2. (((++ ((\x. ((vector_add orig) x)) o g1)) ((\x. ((vector_add orig) x)) o g2)) = ((\x. ((vector_add orig) x)) o ((++ g1) g2)))) ==> ((\g2. (((++ ((\x. ((vector_add orig) x)) o g1)) ((\x. ((vector_add orig) x)) o g2)) = ((\x. ((vector_add orig) x)) o ((++ g1) g2)))) g2)) = ((\g2. (((++ ((\x. ((vector_add orig) x)) o g1)) ((\x. ((vector_add orig) x)) o g2)) = ((\x. ((vector_add orig) x)) o ((++ g1) g2)))) g2))
T c==> c= f0 f0 c= c==> ! c= * * part c++ * * part co / cvector_add f0 b1 f1 * * part co / cvector_add f0 b1 b0 * * part co / cvector_add f0 b1 * * part c++ f1 b0 * / c= * * part c++ * * part co / cvector_add f0 b1 f1 * * part co / cvector_add f0 b1 b0 * * part co / cvector_add f0 b1 * * part c++ f1 b0 f2 * / c= * * part c++ * * part co / cvector_add f0 b1 f1 * * part co / cvector_add f0 b1 b0 * * part co / cvector_add f0 b1 * * part c++ f1 b0 f2
+ |- ((\a. (!x. (!y. (((vector_sub ((vector_add a) x)) ((vector_add a) y)) = ((vector_sub x) y))))) orig)
T * / ! ! c= cvector_sub cvector_add b0 b1 cvector_add b0 b2 cvector_sub b1 b2 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((~ ((vec (NUMERAL _0)) IN s)) ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))))) ==> (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = ((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))))) = (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = ((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))))))
T c= c==> c==> c~ cIN cvec cNUMERAL c_0 f0 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
- (orig = orig) |- ((\h. (!t. (((CONS ((\x. ((vector_add orig) x)) h)) ((MAP (\x. ((vector_add orig) x))) t)) = ((MAP (\x. ((vector_add orig) x))) ((CONS h) t))))) h)
T c==> c= f0 f0 * / ! c= cCONS * / cvector_add f0 b2 b0 cMAP / cvector_add f0 b2 b1 cMAP / cvector_add f0 b2 cCONS b0 b1 f1
+ |- (((!a. (!x. (!y. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add a) x)) ((vector_add a) y))) = ((vector_add a) ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y))))))) ==> ((\a. (!x. (!y. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add a) x)) ((vector_add a) y))) = ((vector_add a) ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y))))))) orig)) = ((\a. (!x. (!y. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add a) x)) ((vector_add a) y))) = ((vector_add a) ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y))))))) orig))
T c= c==> ! ! ! c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add b0 b1 cvector_add b0 b2 cvector_add b0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b1 b2 * / ! ! c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add b0 b1 cvector_add b0 b2 cvector_add b0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b1 b2 f0 * / ! ! c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add b0 b1 cvector_add b0 b2 cvector_add b0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b1 b2 f0
- (orig = orig) |- ((\b. ((open_interval (((vector_add orig) a) , ((vector_add orig) b))) = ((IMAGE (\x. ((vector_add orig) x))) (open_interval (a , b))))) b)
T c==> c= f0 f0 * / c= * part copen_interval c, cvector_add f0 f1 cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b1 * part copen_interval c, f1 b0 f2
+ |- (!s. (!t. ((s <_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s <_c t))))
T c= c<_c f0 * * part cIMAGE / cvector_add f1 b0 f2 c<_c f0 f2
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) ==> ((\P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) P)) = ((\P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) P))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c= c==> ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 * / c= ! * b0 b1 ! * b0 cvector_add f0 b1 f1 * / c= ! * b0 b1 ! * b0 cvector_add f0 b1 f1
- (orig = orig) |- ((\s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s))) s)
T c==> c= f0 f0 * / c= cretract_of * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cretract_of f1 b0 f2
- (orig = orig) |- (!s. (((locally compact) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally compact) s)))
T c==> c= f0 f0 ! c= clocally part ccompact * * part cIMAGE / cvector_add f0 b1 b0 clocally part ccompact b0
- (orig = orig) |- (((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) ==> ((\s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) s)) = ((\s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) s))
T c==> c= f0 f0 c= c==> ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 * / c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 f1 * / c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 f1
- (!s. (((dim s) < (dimindex UNIV)) ==> (negligible s))) |- ((!s. (((dim s) < (dimindex UNIV)) ==> (negligible s))) /\ (!s. (((dim s) < (dimindex UNIV)) ==> (negligible s))))
T c==> ! c==> c< cdim b0 cdimindex part cUNIV cnegligible b0 c/\ ! c==> c< cdim b0 cdimindex part cUNIV cnegligible b0 ! c==> c< cdim b0 cdimindex part cUNIV cnegligible b0
- (orig = orig) |- (((!s. ((gdelta ((IMAGE (\x. ((vector_add orig) x))) s)) = (gdelta s))) ==> ((\s. ((gdelta ((IMAGE (\x. ((vector_add orig) x))) s)) = (gdelta s))) s)) = ((\s. ((gdelta ((IMAGE (\x. ((vector_add orig) x))) s)) = (gdelta s))) s))
T c==> c= f0 f0 c= c==> ! c= cgdelta * * part cIMAGE / cvector_add f0 b1 b0 cgdelta b0 * / c= cgdelta * * part cIMAGE / cvector_add f0 b1 b0 cgdelta b0 f1 * / c= cgdelta * * part cIMAGE / cvector_add f0 b1 b0 cgdelta b0 f1
- (orig = orig) |- (((!s. (!t. ((s <=_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s <=_c t)))) ==> ((\s. (!t. ((s <=_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s <=_c t)))) s)) = ((\s. (!t. ((s <=_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s <=_c t)))) s))
T c==> c= f0 f0 c= c==> ! ! c= c<=_c b0 * * part cIMAGE / cvector_add f0 b2 b1 c<=_c b0 b1 * / ! c= c<=_c b0 * * part cIMAGE / cvector_add f0 b2 b1 c<=_c b0 b1 f1 * / ! c= c<=_c b0 * * part cIMAGE / cvector_add f0 b2 b1 c<=_c b0 b1 f1
+ (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- ((FINITE (x INSERT s)) /\ ((CARD (x INSERT s)) = (CARD (x INSERT s))))
T c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c/\ cFINITE * * part cINSERT f1 f0 c= cCARD * * part cINSERT f1 f0 cCARD * * part cINSERT f1 f0
- (orig = orig) |- (((!s. (!t. ((((COND p) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (((COND p) s) t))))) ==> ((\s. (!t. ((((COND p) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (((COND p) s) t))))) s)) = ((\s. (!t. ((((COND p) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (((COND p) s) t))))) s))
T c==> c= f0 f0 c= c==> ! ! c= * * * part cCOND f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 * * * part cCOND f1 b0 b1 * / ! c= * * * part cCOND f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 * * * part cCOND f1 b0 b1 f2 * / ! c= * * * part cCOND f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 * * * part cCOND f1 b0 b1 f2
+ ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- (FINITE s)
T c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 cFINITE f0
+ |- ((\a. (!s. ((affine ((IMAGE (\x. ((vector_add a) x))) s)) = (affine s)))) orig)
T * / ! c= caffine * * part cIMAGE / cvector_add b0 b2 b1 caffine b1 f0
+ (orig = orig) |- ((!s. ((outside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (outside s)))) /\ ((!s. ((simply_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (simply_connected s))) /\ ((!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homotopy_equivalent s) t)))) /\ ((!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) /\ ((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) /\ ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))))))))))))))
T c==> c= f0 f0 c/\ ! c= * part coutside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part coutside b0 c/\ ! c= csimply_connected * * part cIMAGE / cvector_add f0 b1 b0 csimply_connected b0 c/\ ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b2 b0 b1 chomotopy_equivalent b0 b1 c/\ ! ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 c/\ ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0))))))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0
+ |- (((!a. (!l. ((LENGTH ((MAP (\x. ((vector_add a) x))) l)) = (LENGTH l)))) ==> ((\a. (!l. ((LENGTH ((MAP (\x. ((vector_add a) x))) l)) = (LENGTH l)))) orig)) = ((\a. (!l. ((LENGTH ((MAP (\x. ((vector_add a) x))) l)) = (LENGTH l)))) orig))
T c= c==> ! ! c= cLENGTH cMAP / cvector_add b0 b2 b1 cLENGTH b1 * / ! c= cLENGTH cMAP / cvector_add b0 b2 b1 cLENGTH b1 f0 * / ! c= cLENGTH cMAP / cvector_add b0 b2 b1 cLENGTH b1 f0
- (orig = orig) |- ((\s. ((closure ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (closure s)))) s)
T c==> c= f0 f0 * / c= * part cclosure * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cclosure b0 f1
- (orig = orig) |- (((!g. ((reversepath ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o (reversepath g)))) ==> ((\g. ((reversepath ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o (reversepath g)))) g)) = ((\g. ((reversepath ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o (reversepath g)))) g))
T c==> c= f0 f0 c= c==> ! c= * part creversepath * * part co / cvector_add f0 b1 b0 * * part co / cvector_add f0 b1 * part creversepath b0 * / c= * part creversepath * * part co / cvector_add f0 b1 b0 * * part co / cvector_add f0 b1 * part creversepath b0 f1 * / c= * part creversepath * * part co / cvector_add f0 b1 b0 * * part co / cvector_add f0 b1 * part creversepath b0 f1
+ (~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) |- ((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) ==> F))
T c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF
+ ((\s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s))))))) s) |- ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s))))))
T c==> * / c/\ c/\ c\/ c~ c<= cCARD b0 cdimindex part cUNIV cnegligible * * part chull part caffine b0 c/\ c~ cIN f0 b0 cFINITE b0 c/\ c<= cCARD * * part cINSERT f0 b0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f0 b0 f1 c/\ c/\ c\/ c~ c<= cCARD f1 cdimindex part cUNIV cnegligible * * part chull part caffine f1 c/\ c~ cIN f0 f1 cFINITE f1 c/\ c<= cCARD * * part cINSERT f0 f1 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f0 f1
+ |- ((\a. (!s. ((borel ((IMAGE (\x. ((vector_add a) x))) s)) = (borel s)))) orig)
T * / ! c= cborel * * part cIMAGE / cvector_add b0 b2 b1 cborel b1 f0
+ |- ((((FINITE s) = (FINITE s)) ==> (((FINITE s) ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = q')) ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = ((FINITE s) ==> q')))) = (((FINITE s) ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = q')) ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = ((FINITE s) ==> q'))))
T c= c==> c= cFINITE f0 cFINITE f0 c==> c==> cFINITE f0 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 f2 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> cFINITE f0 f2 c==> c==> cFINITE f0 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 f2 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> cFINITE f0 f2
+ (orig = orig) |- (!s. ((((vector_add orig) x) IN ((IMAGE (\y. ((vector_add orig) y))) s)) = (x IN s)))
T c==> c= f0 f0 ! c= cIN cvector_add f0 f1 * * part cIMAGE / cvector_add f0 b1 b0 cIN f1 b0
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((\P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) P)
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 * / c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 f1
+ |- (((!a. ((a = ((vector_add a) (vec (NUMERAL _0)))) /\ ((EMPTY = ((IMAGE (\x. ((vector_add a) x))) EMPTY)) /\ ((EMPTY = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) EMPTY)) /\ ((UNIV = ((IMAGE (\x. ((vector_add a) x))) UNIV)) /\ ((UNIV = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) UNIV)) /\ (NIL = ((MAP (\x. ((vector_add a) x))) NIL)))))))) ==> ((\a. ((a = ((vector_add a) (vec (NUMERAL _0)))) /\ ((EMPTY = ((IMAGE (\x. ((vector_add a) x))) EMPTY)) /\ ((EMPTY = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) EMPTY)) /\ ((UNIV = ((IMAGE (\x. ((vector_add a) x))) UNIV)) /\ ((UNIV = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) UNIV)) /\ (NIL = ((MAP (\x. ((vector_add a) x))) NIL)))))))) orig)) = ((\a. ((a = ((vector_add a) (vec (NUMERAL _0)))) /\ ((EMPTY = ((IMAGE (\x. ((vector_add a) x))) EMPTY)) /\ ((EMPTY = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) EMPTY)) /\ ((UNIV = ((IMAGE (\x. ((vector_add a) x))) UNIV)) /\ ((UNIV = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) UNIV)) /\ (NIL = ((MAP (\x. ((vector_add a) x))) NIL)))))))) orig))
T c= c==> ! c/\ c= b0 cvector_add b0 cvec cNUMERAL c_0 c/\ c= part cEMPTY * * part cIMAGE / cvector_add b0 b1 part cEMPTY c/\ c= part cEMPTY * * part cIMAGE * part cIMAGE / cvector_add b0 b1 part cEMPTY c/\ c= part cUNIV * * part cIMAGE / cvector_add b0 b1 part cUNIV c/\ c= part cUNIV * * part cIMAGE * part cIMAGE / cvector_add b0 b1 part cUNIV c= cNIL cMAP / cvector_add b0 b1 cNIL * / c/\ c= b0 cvector_add b0 cvec cNUMERAL c_0 c/\ c= part cEMPTY * * part cIMAGE / cvector_add b0 b1 part cEMPTY c/\ c= part cEMPTY * * part cIMAGE * part cIMAGE / cvector_add b0 b1 part cEMPTY c/\ c= part cUNIV * * part cIMAGE / cvector_add b0 b1 part cUNIV c/\ c= part cUNIV * * part cIMAGE * part cIMAGE / cvector_add b0 b1 part cUNIV c= cNIL cMAP / cvector_add b0 b1 cNIL f0 * / c/\ c= b0 cvector_add b0 cvec cNUMERAL c_0 c/\ c= part cEMPTY * * part cIMAGE / cvector_add b0 b1 part cEMPTY c/\ c= part cEMPTY * * part cIMAGE * part cIMAGE / cvector_add b0 b1 part cEMPTY c/\ c= part cUNIV * * part cIMAGE / cvector_add b0 b1 part cUNIV c/\ c= part cUNIV * * part cIMAGE * part cIMAGE / cvector_add b0 b1 part cUNIV c= cNIL cMAP / cvector_add b0 b1 cNIL f0
- |- ((~ (_1772514 = _1772516)) \/ ((~ (_1772515 = _1772517)) \/ ((_1772514 INSERT _1772515) = (_1772516 INSERT _1772517))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- (orig = orig) |- (((!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) SUBSET ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = (s SUBSET t)))) ==> ((\s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) SUBSET ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = (s SUBSET t)))) s)) = ((\s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) SUBSET ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = (s SUBSET t)))) s))
T c==> c= f0 f0 c= c==> ! ! c= cSUBSET * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 cSUBSET b0 b1 * / ! c= cSUBSET * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 cSUBSET b0 b1 f1 * / ! c= cSUBSET * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 cSUBSET b0 b1 f1
+ |- ((\a. (!s. (!t. ((((IMAGE (\x. ((vector_add a) x))) s) >=_c t) = (s >=_c t))))) orig)
T * / ! ! c= c>=_c * * part cIMAGE / cvector_add b0 b3 b1 b2 c>=_c b1 b2 f0
+ |- ((\p. ((?n. ((m <= n) /\ (n < p))) ==> (m < p))) p)
T * / c==> c? / c/\ c<= f0 b1 c< b1 b0 c< f0 b0 f1
- (orig = orig) |- (((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) ==> ((\f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) f)) = ((\f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) f))
T c==> c= f0 f0 c= c==> ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 * / ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 f1 * / ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 f1
+ |- ((\a. (!s. (!t. ((s <_c ((IMAGE (\x. ((vector_add a) x))) t)) = (s <_c t))))) orig)
T * / ! ! c= c<_c b1 * * part cIMAGE / cvector_add b0 b3 b2 c<_c b1 b2 f0
+ |- (((!a. (!x. (!l. (((MEM ((vector_add a) x)) ((MAP (\x. ((vector_add a) x))) l)) = ((MEM x) l))))) ==> ((\a. (!x. (!l. (((MEM ((vector_add a) x)) ((MAP (\x. ((vector_add a) x))) l)) = ((MEM x) l))))) orig)) = ((\a. (!x. (!l. (((MEM ((vector_add a) x)) ((MAP (\x. ((vector_add a) x))) l)) = ((MEM x) l))))) orig))
T c= c==> ! ! ! c= cMEM cvector_add b0 b1 cMAP / cvector_add b0 b3 b2 cMEM b1 b2 * / ! ! c= cMEM cvector_add b0 b1 cMAP / cvector_add b0 b3 b2 cMEM b1 b2 f0 * / ! ! c= cMEM cvector_add b0 b1 cMAP / cvector_add b0 b3 b2 cMEM b1 b2 f0
- (orig = orig) |- (((!x. (!r. ((sphere (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (sphere (x , r)))))) ==> ((\x. (!r. ((sphere (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (sphere (x , r)))))) x)) = ((\x. (!r. ((sphere (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (sphere (x , r)))))) x))
T c==> c= f0 f0 c= c==> ! ! c= * part csphere c, cvector_add f0 b0 b1 * * part cIMAGE / cvector_add f0 b2 * part csphere c, b0 b1 * / ! c= * part csphere c, cvector_add f0 b0 b1 * * part cIMAGE / cvector_add f0 b2 * part csphere c, b0 b1 f1 * / ! c= * part csphere c, cvector_add f0 b0 b1 * * part cIMAGE / cvector_add f0 b2 * part csphere c, b0 b1 f1
+ |- (((!a. (!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add a) x))) t)) = ((homotopy_equivalent s) t))))) ==> ((\a. (!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add a) x))) t)) = ((homotopy_equivalent s) t))))) orig)) = ((\a. (!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add a) x))) t)) = ((homotopy_equivalent s) t))))) orig))
T c= c==> ! ! ! c= chomotopy_equivalent b1 * * part cIMAGE / cvector_add b0 b3 b2 chomotopy_equivalent b1 b2 * / ! ! c= chomotopy_equivalent b1 * * part cIMAGE / cvector_add b0 b3 b2 chomotopy_equivalent b1 b2 f0 * / ! ! c= chomotopy_equivalent b1 * * part cIMAGE / cvector_add b0 b3 b2 chomotopy_equivalent b1 b2 f0
+ (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) |- (((\s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s))))))) s) ==> F)
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> * / c/\ c/\ c\/ c~ c<= cCARD b0 cdimindex part cUNIV cnegligible * * part chull part caffine b0 c/\ c~ cIN f0 b0 cFINITE b0 c/\ c<= cCARD * * part cINSERT f0 b0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f0 b0 f1 cF
+ |- (((!a. (!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add a) x))) f)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((facet_of f) s))))) ==> ((\a. (!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add a) x))) f)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((facet_of f) s))))) orig)) = ((\a. (!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add a) x))) f)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((facet_of f) s))))) orig))
T c= c==> ! ! ! c= cfacet_of * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cfacet_of b1 b2 * / ! ! c= cfacet_of * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cfacet_of b1 b2 f0 * / ! ! c= cfacet_of * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cfacet_of b1 b2 f0
+ |- (((!a. (!s. (!n. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) HAS_SIZE n) = (s HAS_SIZE n))))) ==> ((\a. (!s. (!n. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) HAS_SIZE n) = (s HAS_SIZE n))))) orig)) = ((\a. (!s. (!n. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) HAS_SIZE n) = (s HAS_SIZE n))))) orig))
T c= c==> ! ! ! c= cHAS_SIZE * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 b2 cHAS_SIZE b1 b2 * / ! ! c= cHAS_SIZE * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 b2 cHAS_SIZE b1 b2 f0 * / ! ! c= cHAS_SIZE * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 b2 cHAS_SIZE b1 b2 f0
+ |- (((!a. (!s. (!t. ((s >=_c ((IMAGE (\x. ((vector_add a) x))) t)) = (s >=_c t))))) ==> ((\a. (!s. (!t. ((s >=_c ((IMAGE (\x. ((vector_add a) x))) t)) = (s >=_c t))))) orig)) = ((\a. (!s. (!t. ((s >=_c ((IMAGE (\x. ((vector_add a) x))) t)) = (s >=_c t))))) orig))
T c= c==> ! ! ! c= c>=_c b1 * * part cIMAGE / cvector_add b0 b3 b2 c>=_c b1 b2 * / ! ! c= c>=_c b1 * * part cIMAGE / cvector_add b0 b3 b2 c>=_c b1 b2 f0 * / ! ! c= c>=_c b1 * * part cIMAGE / cvector_add b0 b3 b2 c>=_c b1 b2 f0
- (orig = orig) |- (!g. ((arc ((\x. ((vector_add orig) x)) o g)) = (arc g)))
T c==> c= f0 f0 ! c= carc * * part co / cvector_add f0 b1 b0 carc b0
+ |- ((\a. (!s. (!x. ((((IMAGE (\y. ((vector_add a) y))) s) DELETE ((vector_add a) x)) = ((IMAGE (\y. ((vector_add a) y))) (s DELETE x)))))) orig)
T * / ! ! c= * * part cDELETE * * part cIMAGE / cvector_add b0 b3 b1 cvector_add b0 b2 * * part cIMAGE / cvector_add b0 b3 * * part cDELETE b1 b2 f0
+ |- ((\a. (!g. ((simple_path ((\x. ((vector_add a) x)) o g)) = (simple_path g)))) orig)
T * / ! c= csimple_path * * part co / cvector_add b0 b2 b1 csimple_path b1 f0
+ |- (((~ ((vec (NUMERAL _0)) IN s)) ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = q')) ==> (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = ((~ ((vec (NUMERAL _0)) IN s)) ==> q')))
T c==> c==> c~ cIN cvec cNUMERAL c_0 f0 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 f2 c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c~ cIN cvec cNUMERAL c_0 f0 f2
- |- ((\q'. (((FINITE s) = p') ==> ((p' ==> ((((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = q')) ==> (((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = (p' ==> q'))))) q')
T * / c==> c= cFINITE f0 f1 c==> c==> f1 c= c==> c= cSUC cCARD f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 b0 c= c==> cFINITE f0 c==> c= cSUC cCARD f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 c==> f1 b0 f3
+ (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c= c==> c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\a. (!g. ((arc ((\x. ((vector_add a) x)) o g)) = (arc g)))) orig)
T * / ! c= carc * * part co / cvector_add b0 b2 b1 carc b1 f0
- (orig = orig) |- ((\s. ((gdelta ((IMAGE (\x. ((vector_add orig) x))) s)) = (gdelta s))) s)
T c==> c= f0 f0 * / c= cgdelta * * part cIMAGE / cvector_add f0 b1 b0 cgdelta b0 f1
- (orig = orig) |- (!x. (!r. ((ball (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (ball (x , r))))))
T c==> c= f0 f0 ! ! c= * part cball c, cvector_add f0 b0 b1 * * part cIMAGE / cvector_add f0 b2 * part cball c, b0 b1
- (orig = orig) |- ((\x. (!r. ((sphere (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (sphere (x , r)))))) x)
T c==> c= f0 f0 * / ! c= * part csphere c, cvector_add f0 b0 b1 * * part cIMAGE / cvector_add f0 b2 * part csphere c, b0 b1 f1
- (orig = orig) |- ((\b. ((open_segment (((vector_add orig) a) , ((vector_add orig) b))) = ((IMAGE (\x. ((vector_add orig) x))) (open_segment (a , b))))) b)
T c==> c= f0 f0 * / c= * part copen_segment c, cvector_add f0 f1 cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b1 * part copen_segment c, f1 b0 f2
- (orig = orig) |- (!l1. (!l2. (((APPEND ((MAP (\x. ((vector_add orig) x))) l1)) ((MAP (\x. ((vector_add orig) x))) l2)) = ((MAP (\x. ((vector_add orig) x))) ((APPEND l1) l2)))))
T c==> c= f0 f0 ! ! c= cAPPEND cMAP / cvector_add f0 b2 b0 cMAP / cvector_add f0 b2 b1 cMAP / cvector_add f0 b2 cAPPEND b0 b1
- (orig = orig) |- ((\s. (!x. (((path_component ((IMAGE (\x. ((vector_add orig) x))) s)) ((vector_add orig) x)) = ((IMAGE (\x. ((vector_add orig) x))) ((path_component s) x))))) s)
T c==> c= f0 f0 * / ! c= * * part cpath_component * * part cIMAGE / cvector_add f0 b2 b0 cvector_add f0 b1 * * part cIMAGE / cvector_add f0 b2 * * part cpath_component b0 b1 f1
+ |- ((!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) ==> (!m. (!p. ((?n. ((m <= n) /\ (n < p))) ==> (m < p)))))
T c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 ! ! c==> c? / c/\ c<= b0 b2 c< b2 b1 c< b0 b1
+ |- (((!a. (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) PSUBSET ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = (s PSUBSET t))))) ==> ((\a. (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) PSUBSET ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = (s PSUBSET t))))) orig)) = ((\a. (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) PSUBSET ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = (s PSUBSET t))))) orig))
T c= c==> ! ! ! c= cPSUBSET * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 cPSUBSET b1 b2 * / ! ! c= cPSUBSET * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 cPSUBSET b1 b2 f0 * / ! ! c= cPSUBSET * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 cPSUBSET b1 b2 f0
- |- ((p ==> (~ p)) = (~ p))
T c= c==> f0 c~ f0 c~ f0
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- (((!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l))))))) ==> ((\R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l))))))) R)) = ((\R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l))))))) R))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c= c==> ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 * / c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 f1 * / c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\p'. (!q'. (((FINITE s) = p') ==> ((p' ==> ((((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = q')) ==> (((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = (p' ==> q')))))) p')
T * / ! c==> c= cFINITE f0 b0 c==> c==> b0 c= c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b1 c= c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> b0 b1 f2
- |- (T = ((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> ((CARD s) < (dimindex UNIV)))))))
T c= cT c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV c< cCARD f0 cdimindex part cUNIV
+ |- (((!a. (!s. (!t. ((((IMAGE (\x. ((vector_add a) x))) s) <_c t) = (s <_c t))))) ==> ((\a. (!s. (!t. ((((IMAGE (\x. ((vector_add a) x))) s) <_c t) = (s <_c t))))) orig)) = ((\a. (!s. (!t. ((((IMAGE (\x. ((vector_add a) x))) s) <_c t) = (s <_c t))))) orig))
T c= c==> ! ! ! c= c<_c * * part cIMAGE / cvector_add b0 b3 b1 b2 c<_c b1 b2 * / ! ! c= c<_c * * part cIMAGE / cvector_add b0 b3 b1 b2 c<_c b1 b2 f0 * / ! ! c= c<_c * * part cIMAGE / cvector_add b0 b3 b1 b2 c<_c b1 b2 f0
- (orig = orig) |- (!x. (!y. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add orig) x)) ((vector_add orig) y))) = ((vector_add orig) ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y))))))
T c==> c= f0 f0 ! ! c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add f0 b0 cvector_add f0 b1 cvector_add f0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b0 b1
- (orig = orig) |- (!g1. (!g2. (((++ ((\x. ((vector_add orig) x)) o g1)) ((\x. ((vector_add orig) x)) o g2)) = ((\x. ((vector_add orig) x)) o ((++ g1) g2)))))
T c==> c= f0 f0 ! ! c= * * part c++ * * part co / cvector_add f0 b2 b0 * * part co / cvector_add f0 b2 b1 * * part co / cvector_add f0 b2 * * part c++ b0 b1
+ (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) |- (((!x. (((\x. (?s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))))) x) ==> F)) ==> ((?x. (?s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))))) ==> F)) = ((?x. (?s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))))) ==> F))
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c= c==> ! c==> * / c? / c/\ c/\ c\/ c~ c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b1 b1 cFINITE b1 c/\ c<= cCARD * * part cINSERT b1 b1 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT b1 b1 b0 cF c==> c? / c? / c/\ c/\ c\/ c~ c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c/\ c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF c==> c? / c? / c/\ c/\ c\/ c~ c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c/\ c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF
- (orig = orig) |- ((\g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) g)
T c==> c= f0 f0 * / c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 f1
- (_1772504 = _1772506) |- ((_1772504 = _1772506) /\ ((~ (_1772505 = _1772507)) \/ ((_1772506 <= _1772507) \/ (~ (_1772504 <= _1772505)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c<= f1 f3 c~ c<= f0 f2
+ (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- ((((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s))))) = (((x INSERT s) HAS_SIZE (CARD (x INSERT s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))))
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c= c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c/\ cHAS_SIZE * * part cINSERT f1 f0 cCARD * * part cINSERT f1 f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0
- (orig = orig) |- (((!p. (!s. (!t. ((((COND p) ((IMAGE (\y. ((vector_add orig) y))) s)) ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (((COND p) s) t)))))) ==> ((\p. (!s. (!t. ((((COND p) ((IMAGE (\y. ((vector_add orig) y))) s)) ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (((COND p) s) t)))))) p)) = ((\p. (!s. (!t. ((((COND p) ((IMAGE (\y. ((vector_add orig) y))) s)) ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (((COND p) s) t)))))) p))
T c==> c= f0 f0 c= c==> ! ! ! c= * * * part cCOND b0 * * part cIMAGE / cvector_add f0 b3 b1 * * part cIMAGE / cvector_add f0 b3 b2 * * part cIMAGE / cvector_add f0 b3 * * * part cCOND b0 b1 b2 * / ! ! c= * * * part cCOND b0 * * part cIMAGE / cvector_add f0 b3 b1 * * part cIMAGE / cvector_add f0 b3 b2 * * part cIMAGE / cvector_add f0 b3 * * * part cCOND b0 b1 b2 f1 * / ! ! c= * * * part cCOND b0 * * part cIMAGE / cvector_add f0 b3 b1 * * part cIMAGE / cvector_add f0 b3 b2 * * part cIMAGE / cvector_add f0 b3 * * * part cCOND b0 b1 b2 f1
- |- (((!s. (((dim s) < (dimindex UNIV)) ==> (negligible s))) ==> (!s. (((dim s) < (dimindex UNIV)) ==> (negligible s)))) = (!s. (((dim s) < (dimindex UNIV)) ==> (negligible s))))
T c= c==> ! c==> c< cdim b0 cdimindex part cUNIV cnegligible b0 ! c==> c< cdim b0 cdimindex part cUNIV cnegligible b0 ! c==> c< cdim b0 cdimindex part cUNIV cnegligible b0
- (orig = orig) |- (((!x. (!y. ((midpoint (((vector_add orig) x) , ((vector_add orig) y))) = ((vector_add orig) (midpoint (x , y)))))) ==> ((\x. (!y. ((midpoint (((vector_add orig) x) , ((vector_add orig) y))) = ((vector_add orig) (midpoint (x , y)))))) x)) = ((\x. (!y. ((midpoint (((vector_add orig) x) , ((vector_add orig) y))) = ((vector_add orig) (midpoint (x , y)))))) x))
T c==> c= f0 f0 c= c==> ! ! c= cmidpoint c, cvector_add f0 b0 cvector_add f0 b1 cvector_add f0 cmidpoint c, b0 b1 * / ! c= cmidpoint c, cvector_add f0 b0 cvector_add f0 b1 cvector_add f0 cmidpoint c, b0 b1 f1 * / ! c= cmidpoint c, cvector_add f0 b0 cvector_add f0 b1 cvector_add f0 cmidpoint c, b0 b1 f1
+ (orig = orig) |- (((!s. ((((vector_add orig) x) INSERT ((IMAGE (\y. ((vector_add orig) y))) s)) = ((IMAGE (\y. ((vector_add orig) y))) (x INSERT s)))) ==> ((\s. ((((vector_add orig) x) INSERT ((IMAGE (\y. ((vector_add orig) y))) s)) = ((IMAGE (\y. ((vector_add orig) y))) (x INSERT s)))) s)) = ((\s. ((((vector_add orig) x) INSERT ((IMAGE (\y. ((vector_add orig) y))) s)) = ((IMAGE (\y. ((vector_add orig) y))) (x INSERT s)))) s))
T c==> c= f0 f0 c= c==> ! c= * * part cINSERT cvector_add f0 f1 * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part cINSERT f1 b0 * / c= * * part cINSERT cvector_add f0 f1 * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part cINSERT f1 b0 f2 * / c= * * part cINSERT cvector_add f0 f1 * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part cINSERT f1 b0 f2
+ |- ((\_1772524. (\_1772525. (\_1772526. (\_1772527. (\_1772528. (!s. (!n. (((~ (orig IN ((IMAGE (\x. ((vector_add _1772522) x))) s))) /\ (((orig INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s)) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (orig INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s)))))))))))) = (\_1772524. (\_1772525. (\_1772526. (\_1772527. (\_1772528. (!s. (!n. (((~ (((vector_add orig) (vec (NUMERAL _0))) IN ((IMAGE (\x. ((vector_add _1772522) x))) s))) /\ (((((vector_add orig) (vec (NUMERAL _0))) INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s)) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (((vector_add orig) (vec (NUMERAL _0))) INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s)))))))))))))
T c= / / / / / ! ! c==> c/\ c~ cIN f0 * * part cIMAGE / cvector_add f1 b7 b5 c/\ cHAS_SIZE * * part cINSERT f0 * * part cIMAGE / cvector_add f1 b7 b5 b6 c<= b6 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 * * part cIMAGE / cvector_add f1 b7 b5 / / / / / ! ! c==> c/\ c~ cIN cvector_add f0 cvec cNUMERAL c_0 * * part cIMAGE / cvector_add f1 b7 b5 c/\ cHAS_SIZE * * part cINSERT cvector_add f0 cvec cNUMERAL c_0 * * part cIMAGE / cvector_add f1 b7 b5 b6 c<= b6 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvector_add f0 cvec cNUMERAL c_0 * * part cIMAGE / cvector_add f1 b7 b5
- (orig = orig) |- (((!s. ((frontier ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (frontier s)))) ==> ((\s. ((frontier ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (frontier s)))) s)) = ((\s. ((frontier ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (frontier s)))) s))
T c==> c= f0 f0 c= c==> ! c= * part cfrontier * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cfrontier b0 * / c= * part cfrontier * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cfrontier b0 f1 * / c= * part cfrontier * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cfrontier b0 f1
- (orig = orig) |- ((\s. (!t. ((((COND p) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (((COND p) s) t))))) s)
T c==> c= f0 f0 * / ! c= * * * part cCOND f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 * * * part cCOND f1 b0 b1 f2
- |- ((\q'. (((~ ((vec (NUMERAL _0)) IN s)) = p') ==> ((p' ==> (((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = q')) ==> (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = (p' ==> q'))))) q')
T * / c==> c= c~ cIN cvec cNUMERAL c_0 f0 f1 c==> c==> f1 c= c==> cFINITE f0 c==> c= cSUC cCARD f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 b0 c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 c==> f1 b0 f3
+ |- (((!a. (!s. (!x. (((path_component ((IMAGE (\x. ((vector_add a) x))) s)) ((vector_add a) x)) = ((IMAGE (\x. ((vector_add a) x))) ((path_component s) x)))))) ==> ((\a. (!s. (!x. (((path_component ((IMAGE (\x. ((vector_add a) x))) s)) ((vector_add a) x)) = ((IMAGE (\x. ((vector_add a) x))) ((path_component s) x)))))) orig)) = ((\a. (!s. (!x. (((path_component ((IMAGE (\x. ((vector_add a) x))) s)) ((vector_add a) x)) = ((IMAGE (\x. ((vector_add a) x))) ((path_component s) x)))))) orig))
T c= c==> ! ! ! c= * * part cpath_component * * part cIMAGE / cvector_add b0 b3 b1 cvector_add b0 b2 * * part cIMAGE / cvector_add b0 b3 * * part cpath_component b1 b2 * / ! ! c= * * part cpath_component * * part cIMAGE / cvector_add b0 b3 b1 cvector_add b0 b2 * * part cIMAGE / cvector_add b0 b3 * * part cpath_component b1 b2 f0 * / ! ! c= * * part cpath_component * * part cIMAGE / cvector_add b0 b3 b1 cvector_add b0 b2 * * part cIMAGE / cvector_add b0 b3 * * part cpath_component b1 b2 f0
+ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) |- (((vec (NUMERAL _0)) IN ((hull affine) ((vec (NUMERAL _0)) INSERT s))) = T)
T c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV c= cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 cT
- (orig = orig) |- ((midpoint (((vector_add orig) x) , ((vector_add orig) y))) = ((vector_add orig) (midpoint (x , y))))
T c==> c= f0 f0 c= cmidpoint c, cvector_add f0 f1 cvector_add f0 f2 cvector_add f0 cmidpoint c, f1 f2
- (orig = orig) |- (((!g. ((path_image ((\x. ((vector_add orig) x)) o g)) = ((IMAGE (\x. ((vector_add orig) x))) (path_image g)))) ==> ((\g. ((path_image ((\x. ((vector_add orig) x)) o g)) = ((IMAGE (\x. ((vector_add orig) x))) (path_image g)))) g)) = ((\g. ((path_image ((\x. ((vector_add orig) x)) o g)) = ((IMAGE (\x. ((vector_add orig) x))) (path_image g)))) g))
T c==> c= f0 f0 c= c==> ! c= * part cpath_image * * part co / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cpath_image b0 * / c= * part cpath_image * * part co / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cpath_image b0 f1 * / c= * part cpath_image * * part co / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cpath_image b0 f1
- |- ((\q'. (((n <= (dimindex UNIV)) = p') ==> ((p' ==> ((negligible (span s)) = q')) ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = (p' ==> q'))))) q')
T * / c==> c= c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= cnegligible * part cspan f2 b0 c= c==> c<= f0 cdimindex part cUNIV cnegligible * part cspan f2 c==> f1 b0 f3
+ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) |- (T = ((vec (NUMERAL _0)) IN ((vec (NUMERAL _0)) INSERT s)))
T c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV c= cT cIN cvec cNUMERAL c_0 * * part cINSERT cvec cNUMERAL c_0 f0
+ |- ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) = p') ==> ((p' ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = q')) ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (p' ==> q'))))
T c==> c= c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 f2 c==> c==> f2 c= c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 f3 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> f2 f3
- (orig = orig) |- (!g. (!u. (!v. ((((subpath u) v) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o (((subpath u) v) g))))))
T c==> c= f0 f0 ! ! ! c= * * * part csubpath b1 b2 * * part co / cvector_add f0 b3 b0 * * part co / cvector_add f0 b3 * * * part csubpath b1 b2 b0
- (orig = orig) |- (!y. (!z. (((between ((vector_add orig) x)) (((vector_add orig) y) , ((vector_add orig) z))) = ((between x) (y , z)))))
T c==> c= f0 f0 ! ! c= cbetween cvector_add f0 f1 c, cvector_add f0 b0 cvector_add f0 b1 cbetween f1 c, b0 b1
- (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) |- ((\s. (!n. (((~ (s HAS_SIZE n)) \/ (FINITE s)) /\ ((~ (s HAS_SIZE n)) \/ ((CARD s) = n))))) _1772460)
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 * / ! c/\ c\/ c~ cHAS_SIZE b0 b1 cFINITE b0 c\/ c~ cHAS_SIZE b0 b1 c= cCARD b0 b1 f0
- (orig = orig) |- (!s. ((relative_frontier ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (relative_frontier s))))
T c==> c= f0 f0 ! c= * part crelative_frontier * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part crelative_frontier b0
- (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) |- (((!s. (!n. (((~ (s HAS_SIZE n)) \/ (FINITE s)) /\ ((~ (s HAS_SIZE n)) \/ ((CARD s) = n))))) ==> ((\s. (!n. (((~ (s HAS_SIZE n)) \/ (FINITE s)) /\ ((~ (s HAS_SIZE n)) \/ ((CARD s) = n))))) _1772460)) = ((\s. (!n. (((~ (s HAS_SIZE n)) \/ (FINITE s)) /\ ((~ (s HAS_SIZE n)) \/ ((CARD s) = n))))) _1772460))
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c= c==> ! ! c/\ c\/ c~ cHAS_SIZE b0 b1 cFINITE b0 c\/ c~ cHAS_SIZE b0 b1 c= cCARD b0 b1 * / ! c/\ c\/ c~ cHAS_SIZE b0 b1 cFINITE b0 c\/ c~ cHAS_SIZE b0 b1 c= cCARD b0 b1 f0 * / ! c/\ c\/ c~ cHAS_SIZE b0 b1 cFINITE b0 c\/ c~ cHAS_SIZE b0 b1 c= cCARD b0 b1 f0
- (orig = orig) |- ((\s. (!t. ((s <=_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s <=_c t)))) s)
T c==> c= f0 f0 * / ! c= c<=_c b0 * * part cIMAGE / cvector_add f0 b2 b1 c<=_c b0 b1 f1
- (orig = orig) |- (((!s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) =_c t) = (s =_c t)))) ==> ((\s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) =_c t) = (s =_c t)))) s)) = ((\s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) =_c t) = (s =_c t)))) s))
T c==> c= f0 f0 c= c==> ! ! c= c=_c * * part cIMAGE / cvector_add f0 b2 b0 b1 c=_c b0 b1 * / ! c= c=_c * * part cIMAGE / cvector_add f0 b2 b0 b1 c=_c b0 b1 f1 * / ! c= c=_c * * part cIMAGE / cvector_add f0 b2 b0 b1 c=_c b0 b1 f1
- (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))), ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- ((~ ((CARD s) <= (dimindex UNIV))) ==> F)
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c==> c~ c<= cCARD f0 cdimindex part cUNIV cF
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((!n. (P n)) = (!n. (P ((\x. ((vector_add _1772522) x)) o n))))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c= ! * f1 b0 ! * f1 * * part co / cvector_add f0 b1 b0
+ |- ((\a. (!s. (!n. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) HAS_SIZE n) = (s HAS_SIZE n))))) orig)
T * / ! ! c= cHAS_SIZE * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 b2 cHAS_SIZE b1 b2 f0
+ |- ((\a. (!s. ((components ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (components s))))) orig)
T * / ! c= * part ccomponents * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b2 * part ccomponents b1 f0
+ |- (!x. (!y. (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add orig) x)) ((vector_add orig) y))) = ((vector_add orig) ((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y))))))
T c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add f0 f1 cvector_add f0 f2 cvector_add f0 c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f1 f2
- (orig = orig) |- (((!x. (!s. ((((IMAGE (\x. ((vector_add orig) x))) x) INSERT ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (x INSERT s))))) ==> ((\x. (!s. ((((IMAGE (\x. ((vector_add orig) x))) x) INSERT ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (x INSERT s))))) x)) = ((\x. (!s. ((((IMAGE (\x. ((vector_add orig) x))) x) INSERT ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (x INSERT s))))) x))
T c==> c= f0 f0 c= c==> ! ! c= * * part cINSERT * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 * * part cINSERT b0 b1 * / ! c= * * part cINSERT * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 * * part cINSERT b0 b1 f1 * / ! c= * * part cINSERT * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 * * part cINSERT b0 b1 f1
- (orig = orig) |- ((\s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = (s = t)))) s)
T c==> c= f0 f0 * / ! c= c= * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c= b0 b1 f1
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- (!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1
- (orig = orig) |- ((bounded ((IMAGE (\x. ((vector_add orig) x))) s)) = (bounded s))
T c==> c= f0 f0 c= cbounded * * part cIMAGE / cvector_add f0 b0 f1 cbounded f1
- (orig = orig) |- (!a. (!b. ((open_segment (((vector_add orig) a) , ((vector_add orig) b))) = ((IMAGE (\x. ((vector_add orig) x))) (open_segment (a , b))))))
T c==> c= f0 f0 ! ! c= * part copen_segment c, cvector_add f0 b0 cvector_add f0 b1 * * part cIMAGE / cvector_add f0 b2 * part copen_segment c, b0 b1
- (orig = orig) |- (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))
T c==> c= f0 f0 ! c= cretract_of * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cretract_of f1 b0
- (orig = orig) |- (((!z. (!f. (((continuous f) (at ((vector_add orig) z))) = ((continuous (\x. (f ((vector_add orig) x)))) (at z))))) ==> ((\z. (!f. (((continuous f) (at ((vector_add orig) z))) = ((continuous (\x. (f ((vector_add orig) x)))) (at z))))) z)) = ((\z. (!f. (((continuous f) (at ((vector_add orig) z))) = ((continuous (\x. (f ((vector_add orig) x)))) (at z))))) z))
T c==> c= f0 f0 c= c==> ! ! c= ccontinuous b1 cat cvector_add f0 b0 ccontinuous / * b1 cvector_add f0 b2 cat b0 * / ! c= ccontinuous b1 cat cvector_add f0 b0 ccontinuous / * b1 cvector_add f0 b2 cat b0 f1 * / ! c= ccontinuous b1 cat cvector_add f0 b0 ccontinuous / * b1 cvector_add f0 b2 cat b0 f1
- (orig = orig) |- (((!s. ((connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (connected s))) ==> ((\s. ((connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (connected s))) s)) = ((\s. ((connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (connected s))) s))
T c==> c= f0 f0 c= c==> ! c= cconnected * * part cIMAGE / cvector_add f0 b1 b0 cconnected b0 * / c= cconnected * * part cIMAGE / cvector_add f0 b1 b0 cconnected b0 f1 * / c= cconnected * * part cIMAGE / cvector_add f0 b1 b0 cconnected b0 f1
- (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))), ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))), ((negligible ((hull affine) s)) ==> F) |- F
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c==> c==> cnegligible * * part chull part caffine f0 cF cF
- (orig = orig) |- ((\s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s))) s)
T c==> c= f0 f0 * / c= cexposed_face_of * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cexposed_face_of f1 b0 f2
+ |- ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))
T c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
- |- ((\t. ((!x. t) = t)) t)
T * / c= ! b0 b0 f0
- (orig = orig) |- ((\s. ((closed ((IMAGE (\x. ((vector_add orig) x))) s)) = (closed s))) s)
T c==> c= f0 f0 * / c= cclosed * * part cIMAGE / cvector_add f0 b1 b0 cclosed b0 f1
- (orig = orig) |- (((!s. ((relative_interior ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (relative_interior s)))) ==> ((\s. ((relative_interior ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (relative_interior s)))) s)) = ((\s. ((relative_interior ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (relative_interior s)))) s))
T c==> c= f0 f0 c= c==> ! c= * part crelative_interior * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part crelative_interior b0 * / c= * part crelative_interior * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part crelative_interior b0 f1 * / c= * part crelative_interior * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part crelative_interior b0 f1
- (orig = orig) |- (!l. (((MEM ((vector_add orig) x)) ((MAP (\x. ((vector_add orig) x))) l)) = ((MEM x) l)))
T c==> c= f0 f0 ! c= cMEM cvector_add f0 f1 cMAP / cvector_add f0 b1 b0 cMEM f1 b0
+ (!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))), ((m <= n) /\ (n < p)) |- ((!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) /\ (m < p))
T c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 c==> c/\ c<= f0 f1 c< f1 f2 c/\ ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 c< f0 f2
- (orig = orig) |- ((INFINITE ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (INFINITE s))
T c==> c= f0 f0 c= cINFINITE * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 cINFINITE f1
- (orig = orig) |- (((!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s))) ==> ((\s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s))) s)) = ((\s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s))) s))
T c==> c= f0 f0 c= c==> ! c= cretract_of * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cretract_of f1 b0 * / c= cretract_of * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cretract_of f1 b0 f2 * / c= cretract_of * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cretract_of f1 b0 f2
+ (?n. ((m <= n) /\ (n < p))) |- ((!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) ==> (m < p))
T c==> c? / c/\ c<= f0 b0 c< b0 f1 c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 c< f0 f1
- (orig = orig) |- (((!t. ((((COND p) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (((COND p) s) t)))) ==> ((\t. ((((COND p) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (((COND p) s) t)))) t)) = ((\t. ((((COND p) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (((COND p) s) t)))) t))
T c==> c= f0 f0 c= c==> ! c= * * * part cCOND f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * * * part cCOND f1 f2 b0 * / c= * * * part cCOND f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * * * part cCOND f1 f2 b0 f3 * / c= * * * part cCOND f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * * * part cCOND f1 f2 b0 f3
+ |- ((\a. (!s. ((bounded ((IMAGE (\x. ((vector_add a) x))) s)) = (bounded s)))) orig)
T * / ! c= cbounded * * part cIMAGE / cvector_add b0 b2 b1 cbounded b1 f0
+ |- ((\a. (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) INTER ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (s INTER t)))))) orig)
T * / ! ! c= * * part cINTER * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 * * part cINTER b1 b2 f0
- (orig = orig) |- ((\s. ((borel ((IMAGE (\x. ((vector_add orig) x))) s)) = (borel s))) s)
T c==> c= f0 f0 * / c= cborel * * part cIMAGE / cvector_add f0 b1 b0 cborel b0 f1
+ |- (((!a. (!s. (!t. ((((IMAGE (\x. ((vector_add a) x))) s) <=_c t) = (s <=_c t))))) ==> ((\a. (!s. (!t. ((((IMAGE (\x. ((vector_add a) x))) s) <=_c t) = (s <=_c t))))) orig)) = ((\a. (!s. (!t. ((((IMAGE (\x. ((vector_add a) x))) s) <=_c t) = (s <=_c t))))) orig))
T c= c==> ! ! ! c= c<=_c * * part cIMAGE / cvector_add b0 b3 b1 b2 c<=_c b1 b2 * / ! ! c= c<=_c * * part cIMAGE / cvector_add b0 b3 b1 b2 c<=_c b1 b2 f0 * / ! ! c= c<=_c * * part cIMAGE / cvector_add b0 b3 b1 b2 c<=_c b1 b2 f0
- (_1772510 = _1772511) |- ((_1772510 = _1772511) /\ ((CARD _1772510) = (CARD _1772511)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cCARD f0 cCARD f1
- (orig = orig) |- (((!x. (((path_component ((IMAGE (\x. ((vector_add orig) x))) s)) ((vector_add orig) x)) = ((IMAGE (\x. ((vector_add orig) x))) ((path_component s) x)))) ==> ((\x. (((path_component ((IMAGE (\x. ((vector_add orig) x))) s)) ((vector_add orig) x)) = ((IMAGE (\x. ((vector_add orig) x))) ((path_component s) x)))) x)) = ((\x. (((path_component ((IMAGE (\x. ((vector_add orig) x))) s)) ((vector_add orig) x)) = ((IMAGE (\x. ((vector_add orig) x))) ((path_component s) x)))) x))
T c==> c= f0 f0 c= c==> ! c= * * part cpath_component * * part cIMAGE / cvector_add f0 b1 f1 cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b1 * * part cpath_component f1 b0 * / c= * * part cpath_component * * part cIMAGE / cvector_add f0 b1 f1 cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b1 * * part cpath_component f1 b0 f2 * / c= * * part cpath_component * * part cIMAGE / cvector_add f0 b1 f1 cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b1 * * part cpath_component f1 b0 f2
+ (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- (((x INSERT s) HAS_SIZE (CARD (x INSERT s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s))))))
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c/\ cHAS_SIZE * * part cINSERT f1 f0 cCARD * * part cINSERT f1 f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0
- (orig = orig) |- ((gdelta ((IMAGE (\x. ((vector_add orig) x))) s)) = (gdelta s))
T c==> c= f0 f0 c= cgdelta * * part cIMAGE / cvector_add f0 b0 f1 cgdelta f1
+ |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
- (orig = orig) |- ((\t. ((((IMAGE (\y. ((vector_add orig) y))) s) = ((IMAGE (\y. ((vector_add orig) y))) t)) = (s = t))) t)
T c==> c= f0 f0 * / c= c= * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 c= f1 b0 f2
- (orig = orig) |- (((!x. (!s. ((((IMAGE (\x. ((vector_add orig) x))) x) IN ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (x IN s)))) ==> ((\x. (!s. ((((IMAGE (\x. ((vector_add orig) x))) x) IN ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (x IN s)))) x)) = ((\x. (!s. ((((IMAGE (\x. ((vector_add orig) x))) x) IN ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (x IN s)))) x))
T c==> c= f0 f0 c= c==> ! ! c= cIN * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 cIN b0 b1 * / ! c= cIN * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 cIN b0 b1 f1 * / ! c= cIN * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 cIN b0 b1 f1
+ (~ ((vec (NUMERAL _0)) IN s)) |- (((vec (NUMERAL _0)) IN s) = F)
T c==> c~ cIN cvec cNUMERAL c_0 f0 c= cIN cvec cNUMERAL c_0 f0 cF
+ |- (!g. (!k. (((IMAGE ((IMAGE (\x. ((vector_add orig) x))) o g)) k) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) ((IMAGE g) k)))))
T c= * * part cIMAGE * * part co * part cIMAGE / cvector_add f0 b0 f1 f2 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 * * part cIMAGE f1 f2
- (orig = orig) |- (!s. ((complete ((IMAGE (\x. ((vector_add orig) x))) s)) = (complete s)))
T c==> c= f0 f0 ! c= ccomplete * * part cIMAGE / cvector_add f0 b1 b0 ccomplete b0
- (orig = orig) |- ((\x. (((limit_point_of ((vector_add orig) x)) ((IMAGE (\y. ((vector_add orig) y))) s)) = ((limit_point_of x) s))) x)
T c==> c= f0 f0 * / c= climit_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b1 f1 climit_point_of b0 f1 f2
+ |- (((!a. (!s. ((open ((IMAGE (\x. ((vector_add a) x))) s)) = (open s)))) ==> ((\a. (!s. ((open ((IMAGE (\x. ((vector_add a) x))) s)) = (open s)))) orig)) = ((\a. (!s. ((open ((IMAGE (\x. ((vector_add a) x))) s)) = (open s)))) orig))
T c= c==> ! ! c= copen * * part cIMAGE / cvector_add b0 b2 b1 copen b1 * / ! c= copen * * part cIMAGE / cvector_add b0 b2 b1 copen b1 f0 * / ! c= copen * * part cIMAGE / cvector_add b0 b2 b1 copen b1 f0
- (orig = orig) |- (((hull convex) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) ((hull convex) s)))
T c==> c= f0 f0 c= * * part chull part cconvex * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 * * part chull part cconvex f1
+ |- (((!a. (!g. ((path_image ((\x. ((vector_add a) x)) o g)) = ((IMAGE (\x. ((vector_add a) x))) (path_image g))))) ==> ((\a. (!g. ((path_image ((\x. ((vector_add a) x)) o g)) = ((IMAGE (\x. ((vector_add a) x))) (path_image g))))) orig)) = ((\a. (!g. ((path_image ((\x. ((vector_add a) x)) o g)) = ((IMAGE (\x. ((vector_add a) x))) (path_image g))))) orig))
T c= c==> ! ! c= * part cpath_image * * part co / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cpath_image b1 * / ! c= * part cpath_image * * part co / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cpath_image b1 f0 * / ! c= * part cpath_image * * part co / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cpath_image b1 f0
- (orig = orig) |- (!x. ((((IMAGE (\y. ((vector_add orig) y))) s) ((vector_add orig) x)) = (s x)))
T c==> c= f0 f0 ! c= cIMAGE / cvector_add f0 b1 f1 cvector_add f0 b0 * f1 b0
+ |- (!x. (!y. (!z. (((between ((vector_add orig) x)) (((vector_add orig) y) , ((vector_add orig) z))) = ((between x) (y , z))))))
T c= cbetween cvector_add f0 f1 c, cvector_add f0 f2 cvector_add f0 f3 cbetween f1 c, f2 f3
+ |- ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))
T c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) |- ((!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) ==> F)
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF
+ |- (((!a. (!s. (!t. ((((IMAGE (\y. ((vector_add a) y))) s) INTER ((IMAGE (\y. ((vector_add a) y))) t)) = ((IMAGE (\y. ((vector_add a) y))) (s INTER t)))))) ==> ((\a. (!s. (!t. ((((IMAGE (\y. ((vector_add a) y))) s) INTER ((IMAGE (\y. ((vector_add a) y))) t)) = ((IMAGE (\y. ((vector_add a) y))) (s INTER t)))))) orig)) = ((\a. (!s. (!t. ((((IMAGE (\y. ((vector_add a) y))) s) INTER ((IMAGE (\y. ((vector_add a) y))) t)) = ((IMAGE (\y. ((vector_add a) y))) (s INTER t)))))) orig))
T c= c==> ! ! ! c= * * part cINTER * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE / cvector_add b0 b3 * * part cINTER b1 b2 * / ! ! c= * * part cINTER * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE / cvector_add b0 b3 * * part cINTER b1 b2 f0 * / ! ! c= * * part cINTER * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE / cvector_add b0 b3 * * part cINTER b1 b2 f0
- |- ((!n'. ((~ (s HAS_SIZE n)) \/ ((FINITE s) /\ ((CARD s) = n')))) = ((~ (s HAS_SIZE n)) \/ (!n. ((FINITE s) /\ ((CARD s) = n)))))
T c= ! c\/ c~ cHAS_SIZE f0 f1 c/\ cFINITE f0 c= cCARD f0 b0 c\/ c~ cHAS_SIZE f0 f1 ! c/\ cFINITE f0 c= cCARD f0 b0
+ |- (((!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) ==> ((\s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) s)) = ((\s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) s))
T c= c==> ! c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 * / c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 f2 * / c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 f2
+ |- ((!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homotopy_equivalent s) t)))) /\ ((!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) /\ ((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) /\ ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))))))))))))
T c/\ ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b2 b0 b1 chomotopy_equivalent b0 b1 c/\ ! ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 c/\ ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
- (orig = orig) |- (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))
T c==> c= f0 f0 ! c= cextreme_point_of cvector_add f0 f1 * * part cIMAGE / cvector_add f0 b1 b0 cextreme_point_of f1 b0
- (orig = orig) |- (((!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = (s = t))) ==> ((\t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = (s = t))) t)) = ((\t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = (s = t))) t))
T c==> c= f0 f0 c= c==> ! c= c= * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 c= f1 b0 * / c= c= * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 c= f1 b0 f2 * / c= c= * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 c= f1 b0 f2
+ (~ ((vec (NUMERAL _0)) IN s)), (FINITE s), ((SUC (CARD s)) = n), (n <= (dimindex UNIV)) |- ((n <= (dimindex UNIV)) /\ (negligible (span s)))
T c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV c/\ c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
- ((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) |- ((!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))) ==> (!s. ((FINITE s) ==> (P s))))
T c==> c/\ * f0 part cEMPTY ! ! c==> c/\ * f0 b1 c/\ c~ cIN b0 b1 cFINITE b1 * f0 * * part cINSERT b0 b1 c==> ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 ! c==> cFINITE b0 * f0 b0
+ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) |- (((vec (NUMERAL _0)) IN s) = F)
T c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV c= cIN cvec cNUMERAL c_0 f0 cF
+ |- ((\q'. ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) = p') ==> ((p' ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = q')) ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (p' ==> q'))))) q')
T * / c==> c= c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 f2 c==> c==> f2 c= c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b0 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> f2 b0 f3
+ |- (((F ==> ((CARD s) = (CARD s))) ==> (((~ F) ==> ((SUC (CARD s)) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN s)) (CARD s)) (SUC (CARD s))) = (((COND F) (CARD s)) e')))) = (((~ F) ==> ((SUC (CARD s)) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN s)) (CARD s)) (SUC (CARD s))) = (((COND F) (CARD s)) e'))))
T c= c==> c==> cF c= cCARD f0 cCARD f0 c==> c==> c~ cF c= cSUC cCARD f0 f1 c= cCOND cIN cvec cNUMERAL c_0 f0 cCARD f0 cSUC cCARD f0 cCOND cF cCARD f0 f1 c==> c==> c~ cF c= cSUC cCARD f0 f1 c= cCOND cIN cvec cNUMERAL c_0 f0 cCARD f0 cSUC cCARD f0 cCOND cF cCARD f0 f1
+ |- (!u. ((UNIONS ((IMAGE (IMAGE (IMAGE (\x. ((vector_add orig) x))))) u)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (UNIONS u))))
T c= * part cUNIONS * * part cIMAGE * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 * part cUNIONS f1
- |- ((!x'. ((FINITE (x INSERT s)) \/ (~ (FINITE s)))) = ((FINITE (x INSERT s)) \/ (!x. (~ (FINITE s)))))
T c= ! c\/ cFINITE * * part cINSERT f0 f1 c~ cFINITE f1 c\/ cFINITE * * part cINSERT f0 f1 ! c~ cFINITE f1
+ (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))), (~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) |- ((~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) /\ F)
T c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c/\ c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF
- (orig = orig) |- ((\g. ((path ((\x. ((vector_add orig) x)) o g)) = (path g))) g)
T c==> c= f0 f0 * / c= cpath * * part co / cvector_add f0 b1 b0 cpath b0 f1
+ |- ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))))))))))
T c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) |- (((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) ==> F)
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 cF
- (orig = orig) |- ((((IMAGE (\y. ((vector_add orig) y))) s) DELETE ((vector_add orig) x)) = ((IMAGE (\y. ((vector_add orig) y))) (s DELETE x)))
T c==> c= f0 f0 c= * * part cDELETE * * part cIMAGE / cvector_add f0 b0 f1 cvector_add f0 f2 * * part cIMAGE / cvector_add f0 b0 * * part cDELETE f1 f2
+ |- (((!a. (!x. (!r. ((cball (((vector_add a) x) , r)) = ((IMAGE (\y. ((vector_add a) y))) (cball (x , r))))))) ==> ((\a. (!x. (!r. ((cball (((vector_add a) x) , r)) = ((IMAGE (\y. ((vector_add a) y))) (cball (x , r))))))) orig)) = ((\a. (!x. (!r. ((cball (((vector_add a) x) , r)) = ((IMAGE (\y. ((vector_add a) y))) (cball (x , r))))))) orig))
T c= c==> ! ! ! c= * part ccball c, cvector_add b0 b1 b2 * * part cIMAGE / cvector_add b0 b3 * part ccball c, b1 b2 * / ! ! c= * part ccball c, cvector_add b0 b1 b2 * * part cIMAGE / cvector_add b0 b3 * part ccball c, b1 b2 f0 * / ! ! c= * part ccball c, cvector_add b0 b1 b2 * * part cIMAGE / cvector_add b0 b3 * part ccball c, b1 b2 f0
- (orig = orig) |- (!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s))))
T c==> c= f0 f0 ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1
- (orig = orig) |- (((!s. ((simply_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (simply_connected s))) ==> ((\s. ((simply_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (simply_connected s))) s)) = ((\s. ((simply_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (simply_connected s))) s))
T c==> c= f0 f0 c= c==> ! c= csimply_connected * * part cIMAGE / cvector_add f0 b1 b0 csimply_connected b0 * / c= csimply_connected * * part cIMAGE / cvector_add f0 b1 b0 csimply_connected b0 f1 * / c= csimply_connected * * part cIMAGE / cvector_add f0 b1 b0 csimply_connected b0 f1
+ (~ ((vec (NUMERAL _0)) IN s)) |- ((F ==> ((CARD s) = t')) ==> (((~ F) ==> ((SUC (CARD s)) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN s)) (CARD s)) (SUC (CARD s))) = (((COND F) t') e'))))
T c==> c~ cIN cvec cNUMERAL c_0 f0 c==> c==> cF c= cCARD f0 f1 c==> c==> c~ cF c= cSUC cCARD f0 f2 c= cCOND cIN cvec cNUMERAL c_0 f0 cCARD f0 cSUC cCARD f0 cCOND cF f1 f2
+ |- (((!a. (!g. ((path ((\x. ((vector_add a) x)) o g)) = (path g)))) ==> ((\a. (!g. ((path ((\x. ((vector_add a) x)) o g)) = (path g)))) orig)) = ((\a. (!g. ((path ((\x. ((vector_add a) x)) o g)) = (path g)))) orig))
T c= c==> ! ! c= cpath * * part co / cvector_add b0 b2 b1 cpath b1 * / ! c= cpath * * part co / cvector_add b0 b2 b1 cpath b1 f0 * / ! c= cpath * * part co / cvector_add b0 b2 b1 cpath b1 f0
- (orig = orig) |- (!s. (!x. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) ((IMAGE (\x. ((vector_add orig) x))) x)) = (s x))))
T c==> c= f0 f0 ! ! c= cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 * b0 b1
+ (orig = orig) |- (((!x. (!s. ((((vector_add orig) x) INSERT ((IMAGE (\y. ((vector_add orig) y))) s)) = ((IMAGE (\y. ((vector_add orig) y))) (x INSERT s))))) ==> ((\x. (!s. ((((vector_add orig) x) INSERT ((IMAGE (\y. ((vector_add orig) y))) s)) = ((IMAGE (\y. ((vector_add orig) y))) (x INSERT s))))) x)) = ((\x. (!s. ((((vector_add orig) x) INSERT ((IMAGE (\y. ((vector_add orig) y))) s)) = ((IMAGE (\y. ((vector_add orig) y))) (x INSERT s))))) x))
T c==> c= f0 f0 c= c==> ! ! c= * * part cINSERT cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE / cvector_add f0 b2 * * part cINSERT b0 b1 * / ! c= * * part cINSERT cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE / cvector_add f0 b2 * * part cINSERT b0 b1 f1 * / ! c= * * part cINSERT cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE / cvector_add f0 b2 * * part cINSERT b0 b1 f1
+ |- ((\a. (!x. (!s. ((((IMAGE (\x. ((vector_add a) x))) x) IN ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) = (x IN s))))) orig)
T * / ! ! c= cIN * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 cIN b1 b2 f0
- (orig = orig) |- ((path ((\x. ((vector_add orig) x)) o g)) = (path g))
T c==> c= f0 f0 c= cpath * * part co / cvector_add f0 b0 f1 cpath f1
+ |- (((!a. (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) SUBSET ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = (s SUBSET t))))) ==> ((\a. (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) SUBSET ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = (s SUBSET t))))) orig)) = ((\a. (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) SUBSET ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = (s SUBSET t))))) orig))
T c= c==> ! ! ! c= cSUBSET * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 cSUBSET b1 b2 * / ! ! c= cSUBSET * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 cSUBSET b1 b2 f0 * / ! ! c= cSUBSET * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 cSUBSET b1 b2 f0
- (orig = orig) |- (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) DIFF ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s DIFF t))))
T c==> c= f0 f0 ! c= * * part cDIFF * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * * part cDIFF f1 b0
- (orig = orig) |- ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))
T c==> c= f0 f0 c= crectifiable_path * * part co / cvector_add f0 b0 f1 crectifiable_path f1
- (orig = orig) |- (((!s. (!t. ((s <_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s <_c t)))) ==> ((\s. (!t. ((s <_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s <_c t)))) s)) = ((\s. (!t. ((s <_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s <_c t)))) s))
T c==> c= f0 f0 c= c==> ! ! c= c<_c b0 * * part cIMAGE / cvector_add f0 b2 b1 c<_c b0 b1 * / ! c= c<_c b0 * * part cIMAGE / cvector_add f0 b2 b1 c<_c b0 b1 f1 * / ! c= c<_c b0 * * part cIMAGE / cvector_add f0 b2 b1 c<_c b0 b1 f1
- (orig = orig) |- (!x. (!y. ((distance (((vector_add orig) x) , ((vector_add orig) y))) = (distance (x , y)))))
T c==> c= f0 f0 ! ! c= cdistance c, cvector_add f0 b0 cvector_add f0 b1 cdistance c, b0 b1
+ |- (!s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) UNION ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s UNION t)))))
T c= * * part cUNION * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 * * part cIMAGE / cvector_add f0 b0 * * part cUNION f1 f2
+ |- (((!a. (!s. ((path_connected ((IMAGE (\x. ((vector_add a) x))) s)) = (path_connected s)))) ==> ((\a. (!s. ((path_connected ((IMAGE (\x. ((vector_add a) x))) s)) = (path_connected s)))) orig)) = ((\a. (!s. ((path_connected ((IMAGE (\x. ((vector_add a) x))) s)) = (path_connected s)))) orig))
T c= c==> ! ! c= cpath_connected * * part cIMAGE / cvector_add b0 b2 b1 cpath_connected b1 * / ! c= cpath_connected * * part cIMAGE / cvector_add b0 b2 b1 cpath_connected b1 f0 * / ! c= cpath_connected * * part cIMAGE / cvector_add b0 b2 b1 cpath_connected b1 f0
- |- (((n <= (dimindex UNIV)) ==> ((negligible (span s)) = q')) ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = ((n <= (dimindex UNIV)) ==> q')))
T c==> c==> c<= f0 cdimindex part cUNIV c= cnegligible * part cspan f1 f2 c= c==> c<= f0 cdimindex part cUNIV cnegligible * part cspan f1 c==> c<= f0 cdimindex part cUNIV f2
- (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) |- (!s. (!n. ((~ (s HAS_SIZE n)) \/ ((FINITE s) /\ ((CARD s) = n)))))
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 ! ! c\/ c~ cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1
+ |- (((!a. (!x. (!y. ((((vector_add a) x) = ((vector_add a) y)) = (x = y))))) ==> ((\a. (!x. (!y. ((((vector_add a) x) = ((vector_add a) y)) = (x = y))))) orig)) = ((\a. (!x. (!y. ((((vector_add a) x) = ((vector_add a) y)) = (x = y))))) orig))
T c= c==> ! ! ! c= c= cvector_add b0 b1 cvector_add b0 b2 c= b1 b2 * / ! ! c= c= cvector_add b0 b1 cvector_add b0 b2 c= b1 b2 f0 * / ! ! c= c= cvector_add b0 b1 cvector_add b0 b2 c= b1 b2 f0
- (orig = orig) |- (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = (s = t)))
T c==> c= f0 f0 ! c= c= * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 c= f1 b0
+ |- (((!a. (!s. ((collinear ((IMAGE (\x. ((vector_add a) x))) s)) = (collinear s)))) ==> ((\a. (!s. ((collinear ((IMAGE (\x. ((vector_add a) x))) s)) = (collinear s)))) orig)) = ((\a. (!s. ((collinear ((IMAGE (\x. ((vector_add a) x))) s)) = (collinear s)))) orig))
T c= c==> ! ! c= ccollinear * * part cIMAGE / cvector_add b0 b2 b1 ccollinear b1 * / ! c= ccollinear * * part cIMAGE / cvector_add b0 b2 b1 ccollinear b1 f0 * / ! c= ccollinear * * part cIMAGE / cvector_add b0 b2 b1 ccollinear b1 f0
- (orig = orig) |- (((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) ==> ((\s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) s)) = ((\s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) s))
T c==> c= f0 f0 c= c==> ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 * / ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 f1 * / ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 f1
- (orig = orig) |- ((\s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) SUBSET ((IMAGE (\y. ((vector_add orig) y))) t)) = (s SUBSET t)))) s)
T c==> c= f0 f0 * / ! c= cSUBSET * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cSUBSET b0 b1 f1
- (orig = orig) |- (((!g. (!u. (!v. ((((subpath u) v) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o (((subpath u) v) g)))))) ==> ((\g. (!u. (!v. ((((subpath u) v) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o (((subpath u) v) g)))))) g)) = ((\g. (!u. (!v. ((((subpath u) v) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o (((subpath u) v) g)))))) g))
T c==> c= f0 f0 c= c==> ! ! ! c= * * * part csubpath b1 b2 * * part co / cvector_add f0 b3 b0 * * part co / cvector_add f0 b3 * * * part csubpath b1 b2 b0 * / ! ! c= * * * part csubpath b1 b2 * * part co / cvector_add f0 b3 b0 * * part co / cvector_add f0 b3 * * * part csubpath b1 b2 b0 f1 * / ! ! c= * * * part csubpath b1 b2 * * part co / cvector_add f0 b3 b0 * * part co / cvector_add f0 b3 * * * part csubpath b1 b2 b0 f1
- (orig = orig) |- (((!g. (!k. (((IMAGE ((\y. ((vector_add orig) y)) o g)) k) = ((IMAGE (\y. ((vector_add orig) y))) ((IMAGE g) k))))) ==> ((\g. (!k. (((IMAGE ((\y. ((vector_add orig) y)) o g)) k) = ((IMAGE (\y. ((vector_add orig) y))) ((IMAGE g) k))))) g)) = ((\g. (!k. (((IMAGE ((\y. ((vector_add orig) y)) o g)) k) = ((IMAGE (\y. ((vector_add orig) y))) ((IMAGE g) k))))) g))
T c==> c= f0 f0 c= c==> ! ! c= * * part cIMAGE * * part co / cvector_add f0 b2 b0 b1 * * part cIMAGE / cvector_add f0 b2 * * part cIMAGE b0 b1 * / ! c= * * part cIMAGE * * part co / cvector_add f0 b2 b0 b1 * * part cIMAGE / cvector_add f0 b2 * * part cIMAGE b0 b1 f1 * / ! c= * * part cIMAGE * * part co / cvector_add f0 b2 b0 b1 * * part cIMAGE / cvector_add f0 b2 * * part cIMAGE b0 b1 f1
- (orig = orig) |- ((\c. ((((vector_add ((vector_add orig) b)) c) IN ((IMAGE (\x. ((vector_add orig) x))) s)) = (((vector_add b) c) IN s))) c)
T c==> c= f0 f0 * / c= cIN cvector_add cvector_add f0 f1 b0 * * part cIMAGE / cvector_add f0 b1 f2 cIN cvector_add f1 b0 f2 f3
- (orig = orig) |- (!f. (((continuous f) (at ((vector_add orig) z))) = ((continuous (\x. (f ((vector_add orig) x)))) (at z))))
T c==> c= f0 f0 ! c= ccontinuous b0 cat cvector_add f0 f1 ccontinuous / * b0 cvector_add f0 b1 cat f1
+ |- ((\a. (!s. (!x. (((connected_component ((IMAGE (\x. ((vector_add a) x))) s)) ((vector_add a) x)) = ((IMAGE (\x. ((vector_add a) x))) ((connected_component s) x)))))) orig)
T * / ! ! c= * * part cconnected_component * * part cIMAGE / cvector_add b0 b3 b1 cvector_add b0 b2 * * part cIMAGE / cvector_add b0 b3 * * part cconnected_component b1 b2 f0
+ |- ((\a. (!x. (!l. (((MEM ((vector_add a) x)) ((MAP (\x. ((vector_add a) x))) l)) = ((MEM x) l))))) orig)
T * / ! ! c= cMEM cvector_add b0 b1 cMAP / cvector_add b0 b3 b2 cMEM b1 b2 f0
+ |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- (orig = orig) |- (((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) ==> ((\f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) f)) = ((\f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) f))
T c==> c= f0 f0 c= c==> ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 * / ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 f1 * / ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 f1
+ |- ((~ (a \/ b)) = ((~ a) /\ (~ b)))
T c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
- (orig = orig) |- (!a. (!b. ((closed_interval ((CONS (((vector_add orig) a) , ((vector_add orig) b))) NIL)) = ((IMAGE (\x. ((vector_add orig) x))) (closed_interval ((CONS (a , b)) NIL))))))
T c==> c= f0 f0 ! ! c= * part cclosed_interval cCONS c, cvector_add f0 b0 cvector_add f0 b1 cNIL * * part cIMAGE / cvector_add f0 b2 * part cclosed_interval cCONS c, b0 b1 cNIL
+ |- (((!a. (!g. ((pathfinish ((\x. ((vector_add a) x)) o g)) = ((vector_add a) (pathfinish g))))) ==> ((\a. (!g. ((pathfinish ((\x. ((vector_add a) x)) o g)) = ((vector_add a) (pathfinish g))))) orig)) = ((\a. (!g. ((pathfinish ((\x. ((vector_add a) x)) o g)) = ((vector_add a) (pathfinish g))))) orig))
T c= c==> ! ! c= cpathfinish * * part co / cvector_add b0 b2 b1 cvector_add b0 cpathfinish b1 * / ! c= cpathfinish * * part co / cvector_add b0 b2 b1 cvector_add b0 cpathfinish b1 f0 * / ! c= cpathfinish * * part co / cvector_add b0 b2 b1 cvector_add b0 cpathfinish b1 f0
- (orig = orig) |- ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) UNION ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s UNION t)))
T c==> c= f0 f0 c= * * part cUNION * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f2 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 * * part cUNION f1 f2
- (orig = orig) |- (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s))
T c==> c= f0 f0 c= cexposed_face_of * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 cexposed_face_of f1 f2
+ |- ((((vec (NUMERAL _0)) IN s) = g') ==> ((g' ==> ((CARD s) = t')) ==> (((~ g') ==> ((SUC (CARD s)) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN s)) (CARD s)) (SUC (CARD s))) = (((COND g') t') e')))))
T c==> c= cIN cvec cNUMERAL c_0 f0 f1 c==> c==> f1 c= cCARD f0 f2 c==> c==> c~ f1 c= cSUC cCARD f0 f3 c= cCOND cIN cvec cNUMERAL c_0 f0 cCARD f0 cSUC cCARD f0 cCOND f1 f2 f3
- (orig = orig) |- (!t. ((s <_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s <_c t)))
T c==> c= f0 f0 ! c= c<_c f1 * * part cIMAGE / cvector_add f0 b1 b0 c<_c f1 b0
- (orig = orig) |- ((((\y. ((vector_add orig) y)) o xs) n) = ((vector_add orig) (xs n)))
T c==> c= f0 f0 c= co / cvector_add f0 b0 f1 f2 cvector_add f0 * f1 f2
+ |- ((\c. (!a. (!b. ((open_segment (((vector_add c) a) , ((vector_add c) b))) = ((IMAGE (\x. ((vector_add c) x))) (open_segment (a , b))))))) orig)
T * / ! ! c= * part copen_segment c, cvector_add b0 b1 cvector_add b0 b2 * * part cIMAGE / cvector_add b0 b3 * part copen_segment c, b1 b2 f0
+ |- (((!a. (!s. (!t. ((((IMAGE (\x. ((vector_add a) x))) s) =_c t) = (s =_c t))))) ==> ((\a. (!s. (!t. ((((IMAGE (\x. ((vector_add a) x))) s) =_c t) = (s =_c t))))) orig)) = ((\a. (!s. (!t. ((((IMAGE (\x. ((vector_add a) x))) s) =_c t) = (s =_c t))))) orig))
T c= c==> ! ! ! c= c=_c * * part cIMAGE / cvector_add b0 b3 b1 b2 c=_c b1 b2 * / ! ! c= c=_c * * part cIMAGE / cvector_add b0 b3 b1 b2 c=_c b1 b2 f0 * / ! ! c= c=_c * * part cIMAGE / cvector_add b0 b3 b1 b2 c=_c b1 b2 f0
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772535)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772536)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772537)) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_int _1772535)) /\ (((real_le (real_of_int _1772535)) (real_of_int _1772537)) /\ ((real_le (real_of_int _1772537)) (real_of_int _1772536))))))))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f2 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ creal_le creal_of_int f0 creal_of_int f2 creal_le creal_of_int f2 creal_of_int f1
- (!s. (((dim s) < (dimindex UNIV)) ==> (negligible s))), ((dim s) < (dimindex UNIV)) |- (negligible s)
T c==> ! c==> c< cdim b0 cdimindex part cUNIV cnegligible b0 c==> c< cdim f0 cdimindex part cUNIV cnegligible f0
- (orig = orig) |- ((\s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) DIFF ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s DIFF t))))) s)
T c==> c= f0 f0 * / ! c= * * part cDIFF * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE / cvector_add f0 b2 * * part cDIFF b0 b1 f1
+ |- ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))
T c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
- |- ((\orig. (!s. (!n. (((~ (orig IN s)) /\ (((orig INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (orig INSERT s))))))) orig)
T * / ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 f0
- (orig = orig) |- ((\s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) INTER ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s INTER t))))) s)
T c==> c= f0 f0 * / ! c= * * part cINTER * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE / cvector_add f0 b2 * * part cINTER b0 b1 f1
- (_1772508 = _1772509) |- ((_1772508 = _1772509) /\ ((negligible _1772509) \/ (~ (negligible _1772508))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ cnegligible f1 c~ cnegligible f0
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num (CARD s))) ==> (((int_le (int_of_num (NUMERAL _0))) (int_of_num (dimindex UNIV))) ==> (((vec (NUMERAL _0)) IN s) \/ ((~ (FINITE s)) \/ ((~ (((int_add (int_of_num (CARD s))) (int_of_num (NUMERAL (BIT1 _0)))) = (int_of_num n))) \/ ((~ ((int_le (int_of_num n)) (int_of_num (dimindex UNIV)))) \/ ((int_lt (int_of_num (CARD s))) (int_of_num (dimindex UNIV))))))))) = (((int_le (int_of_num (NUMERAL _0))) (int_of_num (dimindex UNIV))) ==> (((vec (NUMERAL _0)) IN s) \/ ((~ (FINITE s)) \/ ((~ (((int_add (int_of_num (CARD s))) (int_of_num (NUMERAL (BIT1 _0)))) = (int_of_num n))) \/ ((~ ((int_le (int_of_num n)) (int_of_num (dimindex UNIV)))) \/ ((int_lt (int_of_num (CARD s))) (int_of_num (dimindex UNIV)))))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num cCARD f0 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num cdimindex part cUNIV c\/ cIN cvec cNUMERAL c_0 f0 c\/ c~ cFINITE f0 c\/ c~ c= cint_add cint_of_num cCARD f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f1 c\/ c~ cint_le cint_of_num f1 cint_of_num cdimindex part cUNIV cint_lt cint_of_num cCARD f0 cint_of_num cdimindex part cUNIV c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num cdimindex part cUNIV c\/ cIN cvec cNUMERAL c_0 f0 c\/ c~ cFINITE f0 c\/ c~ c= cint_add cint_of_num cCARD f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f1 c\/ c~ cint_le cint_of_num f1 cint_of_num cdimindex part cUNIV cint_lt cint_of_num cCARD f0 cint_of_num cdimindex part cUNIV
+ |- ((((dim (span s)) <= (CARD s)) /\ ((CARD s) < (dimindex UNIV))) = ((\n. (((dim (span s)) <= n) /\ (n < (dimindex UNIV)))) (CARD s)))
T c= c/\ c<= cdim * part cspan f0 cCARD f0 c< cCARD f0 cdimindex part cUNIV * / c/\ c<= cdim * part cspan f0 b0 c< b0 cdimindex part cUNIV cCARD f0
- (orig = orig) |- (((!s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) >=_c t) = (s >=_c t)))) ==> ((\s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) >=_c t) = (s >=_c t)))) s)) = ((\s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) >=_c t) = (s >=_c t)))) s))
T c==> c= f0 f0 c= c==> ! ! c= c>=_c * * part cIMAGE / cvector_add f0 b2 b0 b1 c>=_c b0 b1 * / ! c= c>=_c * * part cIMAGE / cvector_add f0 b2 b0 b1 c>=_c b0 b1 f1 * / ! c= c>=_c * * part cIMAGE / cvector_add f0 b2 b0 b1 c>=_c b0 b1 f1
+ (orig = orig) |- ((((vector_add orig) x) INSERT ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (x INSERT s)))
T c==> c= f0 f0 c= * * part cINSERT cvector_add f0 f1 * * part cIMAGE / cvector_add f0 b0 f2 * * part cIMAGE / cvector_add f0 b0 * * part cINSERT f1 f2
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c= c? / * f1 b0 c? / * f1 * * part co / cvector_add f0 b1 b0
- (orig = orig) |- (((!c. ((linepath (((vector_add orig) b) , ((vector_add orig) c))) = ((\x. ((vector_add orig) x)) o (linepath (b , c))))) ==> ((\c. ((linepath (((vector_add orig) b) , ((vector_add orig) c))) = ((\x. ((vector_add orig) x)) o (linepath (b , c))))) c)) = ((\c. ((linepath (((vector_add orig) b) , ((vector_add orig) c))) = ((\x. ((vector_add orig) x)) o (linepath (b , c))))) c))
T c==> c= f0 f0 c= c==> ! c= * part clinepath c, cvector_add f0 f1 cvector_add f0 b0 * * part co / cvector_add f0 b1 * part clinepath c, f1 b0 * / c= * part clinepath c, cvector_add f0 f1 cvector_add f0 b0 * * part co / cvector_add f0 b1 * part clinepath c, f1 b0 f2 * / c= * part clinepath c, cvector_add f0 f1 cvector_add f0 b0 * * part co / cvector_add f0 b1 * part clinepath c, f1 b0 f2
+ |- (((!a. (!s. ((bounded ((IMAGE (\x. ((vector_add a) x))) s)) = (bounded s)))) ==> ((\a. (!s. ((bounded ((IMAGE (\x. ((vector_add a) x))) s)) = (bounded s)))) orig)) = ((\a. (!s. ((bounded ((IMAGE (\x. ((vector_add a) x))) s)) = (bounded s)))) orig))
T c= c==> ! ! c= cbounded * * part cIMAGE / cvector_add b0 b2 b1 cbounded b1 * / ! c= cbounded * * part cIMAGE / cvector_add b0 b2 b1 cbounded b1 f0 * / ! c= cbounded * * part cIMAGE / cvector_add b0 b2 b1 cbounded b1 f0
+ |- ((((CARD EMPTY) <= (dimindex UNIV)) ==> (negligible ((hull affine) EMPTY))) /\ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s))))))))
T c/\ c==> c<= cCARD part cEMPTY cdimindex part cUNIV cnegligible * * part chull part caffine part cEMPTY ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1
+ (!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) |- ((\p. (((m <= n) /\ (n < p)) ==> (m < p))) p)
T c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 * / c==> c/\ c<= f0 f1 c< f1 b0 c< f0 b0 f2
- (orig = orig) |- (!y. ((((COND p) ((vector_add orig) x)) ((vector_add orig) y)) = ((vector_add orig) (((COND p) x) y))))
T c==> c= f0 f0 ! c= cCOND f1 cvector_add f0 f2 cvector_add f0 b0 cvector_add f0 cCOND f1 f2 b0
- (orig = orig) |- (((!s. ((INTERS ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (INTERS s)))) ==> ((\s. ((INTERS ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (INTERS s)))) s)) = ((\s. ((INTERS ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (INTERS s)))) s))
T c==> c= f0 f0 c= c==> ! c= * part cINTERS * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cINTERS b0 * / c= * part cINTERS * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cINTERS b0 f1 * / c= * part cINTERS * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cINTERS b0 f1
+ (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- ((real_ge ((real_add ((real_add (real_of_int _1772535)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772536))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0
- (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) |- ((~ (FINITE (_1772465 INSERT _1772464))) \/ (FINITE _1772464))
T c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c\/ c~ cFINITE * * part cINSERT f0 f1 cFINITE f1
- (orig = orig) |- (!x. (!y. (!z. (((between ((vector_add orig) x)) (((vector_add orig) y) , ((vector_add orig) z))) = ((between x) (y , z))))))
T c==> c= f0 f0 ! ! ! c= cbetween cvector_add f0 b0 c, cvector_add f0 b1 cvector_add f0 b2 cbetween b0 c, b1 b2
- (orig = orig) |- (!r. ((ball (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (ball (x , r)))))
T c==> c= f0 f0 ! c= * part cball c, cvector_add f0 f1 b0 * * part cIMAGE / cvector_add f0 b1 * part cball c, f1 b0
- (orig = orig) |- ((\s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) SUBSET ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = (s SUBSET t)))) s)
T c==> c= f0 f0 * / ! c= cSUBSET * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 cSUBSET b0 b1 f1
- (orig = orig) |- ((\s. ((FINITE ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (FINITE s))) s)
T c==> c= f0 f0 * / c= cFINITE * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 cFINITE b0 f1
- (orig = orig) |- (((!s. ((convex ((IMAGE (\x. ((vector_add orig) x))) s)) = (convex s))) ==> ((\s. ((convex ((IMAGE (\x. ((vector_add orig) x))) s)) = (convex s))) s)) = ((\s. ((convex ((IMAGE (\x. ((vector_add orig) x))) s)) = (convex s))) s))
T c==> c= f0 f0 c= c==> ! c= cconvex * * part cIMAGE / cvector_add f0 b1 b0 cconvex b0 * / c= cconvex * * part cIMAGE / cvector_add f0 b1 b0 cconvex b0 f1 * / c= cconvex * * part cIMAGE / cvector_add f0 b1 b0 cconvex b0 f1
+ ((\n. ((m <= n) /\ (n < p))) n) |- (((\n. ((m <= n) /\ (n < p))) n) /\ ((!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) ==> (m < p)))
T c==> * / c/\ c<= f0 b0 c< b0 f1 f2 c/\ * / c/\ c<= f0 b0 c< b0 f1 f2 c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 c< f0 f1
- (orig = orig) |- ((\s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homotopy_equivalent s) t)))) s)
T c==> c= f0 f0 * / ! c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b2 b0 b1 chomotopy_equivalent b0 b1 f1
- (orig = orig) |- (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))
T c==> c= f0 f0 ! c= cfacet_of * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cfacet_of f1 b0
- (orig = orig) |- (!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s))))
T c==> c= f0 f0 ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1
- (orig = orig) |- ((\t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) PSUBSET ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = (s PSUBSET t))) t)
T c==> c= f0 f0 * / c= cPSUBSET * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 cPSUBSET f1 b0 f2
+ |- (((!a. (!s. ((measure ((IMAGE (\x. ((vector_add a) x))) s)) = (measure s)))) ==> ((\a. (!s. ((measure ((IMAGE (\x. ((vector_add a) x))) s)) = (measure s)))) orig)) = ((\a. (!s. ((measure ((IMAGE (\x. ((vector_add a) x))) s)) = (measure s)))) orig))
T c= c==> ! ! c= cmeasure * * part cIMAGE / cvector_add b0 b2 b1 cmeasure b1 * / ! c= cmeasure * * part cIMAGE / cvector_add b0 b2 b1 cmeasure b1 f0 * / ! c= cmeasure * * part cIMAGE / cvector_add b0 b2 b1 cmeasure b1 f0
+ |- ((x IN s) ==> ((x IN ((hull P) s)) = T))
T c==> cIN f0 f1 c= cIN f0 * * part chull f2 f1 cT
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1
+ (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))), ((\s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s))))))) s) |- (((\s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s))))))) s) /\ F)
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> * / c/\ c/\ c\/ c~ c<= cCARD b0 cdimindex part cUNIV cnegligible * * part chull part caffine b0 c/\ c~ cIN f0 b0 cFINITE b0 c/\ c<= cCARD * * part cINSERT f0 b0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f0 b0 f1 c/\ * / c/\ c/\ c\/ c~ c<= cCARD b0 cdimindex part cUNIV cnegligible * * part chull part caffine b0 c/\ c~ cIN f0 b0 cFINITE b0 c/\ c<= cCARD * * part cINSERT f0 b0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f0 b0 f1 cF
- (orig = orig) |- (((!y. ((((COND p) ((vector_add orig) x)) ((vector_add orig) y)) = ((vector_add orig) (((COND p) x) y)))) ==> ((\y. ((((COND p) ((vector_add orig) x)) ((vector_add orig) y)) = ((vector_add orig) (((COND p) x) y)))) y)) = ((\y. ((((COND p) ((vector_add orig) x)) ((vector_add orig) y)) = ((vector_add orig) (((COND p) x) y)))) y))
T c==> c= f0 f0 c= c==> ! c= cCOND f1 cvector_add f0 f2 cvector_add f0 b0 cvector_add f0 cCOND f1 f2 b0 * / c= cCOND f1 cvector_add f0 f2 cvector_add f0 b0 cvector_add f0 cCOND f1 f2 b0 f3 * / c= cCOND f1 cvector_add f0 f2 cvector_add f0 b0 cvector_add f0 cCOND f1 f2 b0 f3
- (orig = orig) |- ((\s. ((affine ((IMAGE (\x. ((vector_add orig) x))) s)) = (affine s))) s)
T c==> c= f0 f0 * / c= caffine * * part cIMAGE / cvector_add f0 b1 b0 caffine b0 f1
+ |- ((\s. (((dim s) < (dimindex UNIV)) ==> (negligible s))) s)
T * / c==> c< cdim b0 cdimindex part cUNIV cnegligible b0 f0
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((\P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) P)
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 * / c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 f1
- (orig = orig) |- (!x. (((connected_component ((IMAGE (\x. ((vector_add orig) x))) s)) ((vector_add orig) x)) = ((IMAGE (\x. ((vector_add orig) x))) ((connected_component s) x))))
T c==> c= f0 f0 ! c= * * part cconnected_component * * part cIMAGE / cvector_add f0 b1 f1 cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b1 * * part cconnected_component f1 b0
+ |- (((!a. (!s. ((connected ((IMAGE (\x. ((vector_add a) x))) s)) = (connected s)))) ==> ((\a. (!s. ((connected ((IMAGE (\x. ((vector_add a) x))) s)) = (connected s)))) orig)) = ((\a. (!s. ((connected ((IMAGE (\x. ((vector_add a) x))) s)) = (connected s)))) orig))
T c= c==> ! ! c= cconnected * * part cIMAGE / cvector_add b0 b2 b1 cconnected b1 * / ! c= cconnected * * part cIMAGE / cvector_add b0 b2 b1 cconnected b1 f0 * / ! c= cconnected * * part cIMAGE / cvector_add b0 b2 b1 cconnected b1 f0
+ |- (((!q'. ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) = p') ==> ((p' ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = q')) ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (p' ==> q'))))) ==> ((\q'. ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) = p') ==> ((p' ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = q')) ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (p' ==> q'))))) q')) = ((\q'. ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) = p') ==> ((p' ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = q')) ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 f2 c==> c==> f2 c= c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b0 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> f2 b0 * / c==> c= c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 f2 c==> c==> f2 c= c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b0 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> f2 b0 f3 * / c==> c= c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 f2 c==> c==> f2 c= c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b0 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> f2 b0 f3
+ |- (((!a. (!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add a) x)))) tr)) = (simplicial_complex tr)))) ==> ((\a. (!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add a) x)))) tr)) = (simplicial_complex tr)))) orig)) = ((\a. (!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add a) x)))) tr)) = (simplicial_complex tr)))) orig))
T c= c==> ! ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 csimplicial_complex b1 * / ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 csimplicial_complex b1 f0 * / ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 csimplicial_complex b1 f0
- (FINITE s) |- (T = (FINITE s))
T c==> cFINITE f0 c= cT cFINITE f0
- (orig = orig) |- (((homeomorphic ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homeomorphic s) t))
T c==> c= f0 f0 c= chomeomorphic * * part cIMAGE / cvector_add f0 b0 f1 f2 chomeomorphic f1 f2
- (orig = orig) |- (!xs. (!n. ((((IMAGE (\x. ((vector_add orig) x))) o xs) n) = ((IMAGE (\x. ((vector_add orig) x))) (xs n)))))
T c==> c= f0 f0 ! ! c= * * * part co * part cIMAGE / cvector_add f0 b2 b0 b1 * * part cIMAGE / cvector_add f0 b2 * b0 b1
+ |- (((!a. (!s. (!t. ((s <_c ((IMAGE (\x. ((vector_add a) x))) t)) = (s <_c t))))) ==> ((\a. (!s. (!t. ((s <_c ((IMAGE (\x. ((vector_add a) x))) t)) = (s <_c t))))) orig)) = ((\a. (!s. (!t. ((s <_c ((IMAGE (\x. ((vector_add a) x))) t)) = (s <_c t))))) orig))
T c= c==> ! ! ! c= c<_c b1 * * part cIMAGE / cvector_add b0 b3 b2 c<_c b1 b2 * / ! ! c= c<_c b1 * * part cIMAGE / cvector_add b0 b3 b2 c<_c b1 b2 f0 * / ! ! c= c<_c b1 * * part cIMAGE / cvector_add b0 b3 b2 c<_c b1 b2 f0
- (orig = orig) |- (!s. ((open ((IMAGE (\x. ((vector_add orig) x))) s)) = (open s)))
T c==> c= f0 f0 ! c= copen * * part cIMAGE / cvector_add f0 b1 b0 copen b0
+ (orig = orig) |- ((!g. (!u. (!v. ((((subpath u) v) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o (((subpath u) v) g)))))) /\ ((!b. (!c. ((linepath (((vector_add orig) b) , ((vector_add orig) c))) = ((\x. ((vector_add orig) x)) o (linepath (b , c)))))) /\ ((!s. (!x. (((path_component ((IMAGE (\x. ((vector_add orig) x))) s)) ((vector_add orig) x)) = ((IMAGE (\x. ((vector_add orig) x))) ((path_component s) x))))) /\ ((!s. ((path_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (path_connected s))) /\ ((!s. (((locally path_connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally path_connected) s))) /\ ((!s. (((locally connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally connected) s))) /\ ((!s. ((inside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (inside s)))) /\ ((!s. ((outside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (outside s)))) /\ ((!s. ((simply_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (simply_connected s))) /\ ((!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homotopy_equivalent s) t)))) /\ ((!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) /\ ((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) /\ ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))))))))))))))))))))))
T c==> c= f0 f0 c/\ ! ! ! c= * * * part csubpath b1 b2 * * part co / cvector_add f0 b3 b0 * * part co / cvector_add f0 b3 * * * part csubpath b1 b2 b0 c/\ ! ! c= * part clinepath c, cvector_add f0 b0 cvector_add f0 b1 * * part co / cvector_add f0 b2 * part clinepath c, b0 b1 c/\ ! ! c= * * part cpath_component * * part cIMAGE / cvector_add f0 b2 b0 cvector_add f0 b1 * * part cIMAGE / cvector_add f0 b2 * * part cpath_component b0 b1 c/\ ! c= cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 cpath_connected b0 c/\ ! c= clocally part cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cpath_connected b0 c/\ ! c= clocally part cconnected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cconnected b0 c/\ ! c= * part cinside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cinside b0 c/\ ! c= * part coutside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part coutside b0 c/\ ! c= csimply_connected * * part cIMAGE / cvector_add f0 b1 b0 csimply_connected b0 c/\ ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b2 b0 b1 chomotopy_equivalent b0 b1 c/\ ! ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 c/\ ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- ((\a. (!s. (!t. (((DISJOINT ((IMAGE (\y. ((vector_add a) y))) s)) ((IMAGE (\y. ((vector_add a) y))) t)) = ((DISJOINT s) t))))) orig)
T * / ! ! c= cDISJOINT * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cDISJOINT b1 b2 f0
+ (orig = orig) |- (!s. (!n. ((((IMAGE (\y. ((vector_add orig) y))) s) HAS_SIZE n) = (s HAS_SIZE n))))
T c==> c= f0 f0 ! ! c= cHAS_SIZE * * part cIMAGE / cvector_add f0 b2 b0 b1 cHAS_SIZE b0 b1
- (orig = orig) |- (((!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s))) ==> ((\s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s))) s)) = ((\s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s))) s))
T c==> c= f0 f0 c= c==> ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cexposed_face_of f1 b0 * / c= cexposed_face_of * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cexposed_face_of f1 b0 f2 * / c= cexposed_face_of * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cexposed_face_of f1 b0 f2
- (_1772496 = _1772498) |- ((_1772496 = _1772498) /\ ((~ (_1772497 = _1772499)) \/ ((_1772498 IN _1772499) \/ (~ (_1772496 IN _1772497)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
- (orig = orig) |- ((\u. ((UNIONS ((IMAGE (IMAGE (IMAGE (\x. ((vector_add orig) x))))) u)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (UNIONS u)))) u)
T c==> c= f0 f0 * / c= * part cUNIONS * * part cIMAGE * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cUNIONS b0 f1
- (orig = orig) |- (((!s. ((borel ((IMAGE (\x. ((vector_add orig) x))) s)) = (borel s))) ==> ((\s. ((borel ((IMAGE (\x. ((vector_add orig) x))) s)) = (borel s))) s)) = ((\s. ((borel ((IMAGE (\x. ((vector_add orig) x))) s)) = (borel s))) s))
T c==> c= f0 f0 c= c==> ! c= cborel * * part cIMAGE / cvector_add f0 b1 b0 cborel b0 * / c= cborel * * part cIMAGE / cvector_add f0 b1 b0 cborel b0 f1 * / c= cborel * * part cIMAGE / cvector_add f0 b1 b0 cborel b0 f1
- (FINITE s) |- ((FINITE s) /\ ((((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))))
T c==> cFINITE f0 c/\ cFINITE f0 c= c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
+ |- ((\a. (!s. (!t. ((((IMAGE (\x. ((vector_add a) x))) s) <_c t) = (s <_c t))))) orig)
T * / ! ! c= c<_c * * part cIMAGE / cvector_add b0 b3 b1 b2 c<_c b1 b2 f0
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772535)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772536)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772537)) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_int _1772535)) /\ (((real_le (real_of_int _1772535)) (real_of_int _1772537)) /\ ((real_le (real_of_int _1772537)) (real_of_int _1772536))))))))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772535)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772536)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772537)) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_int _1772535)) /\ (((real_le (real_of_int _1772535)) (real_of_int _1772537)) /\ ((real_le (real_of_int _1772537)) (real_of_int _1772536))))))))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f2 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ creal_le creal_of_int f0 creal_of_int f2 creal_le creal_of_int f2 creal_of_int f1 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f2 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ creal_le creal_of_int f0 creal_of_int f2 creal_le creal_of_int f2 creal_of_int f1 cF
+ |- ((\t'. (!e'. ((((vec (NUMERAL _0)) IN s) = g') ==> ((g' ==> ((CARD s) = t')) ==> (((~ g') ==> ((SUC (CARD s)) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN s)) (CARD s)) (SUC (CARD s))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cIN cvec cNUMERAL c_0 f0 f1 c==> c==> f1 c= cCARD f0 b0 c==> c==> c~ f1 c= cSUC cCARD f0 b1 c= cCOND cIN cvec cNUMERAL c_0 f0 cCARD f0 cSUC cCARD f0 cCOND f1 b0 b1 f2
- (orig = orig) |- ((\x. (!y. (!z. (((between ((vector_add orig) x)) (((vector_add orig) y) , ((vector_add orig) z))) = ((between x) (y , z)))))) x)
T c==> c= f0 f0 * / ! ! c= cbetween cvector_add f0 b0 c, cvector_add f0 b1 cvector_add f0 b2 cbetween b0 c, b1 b2 f1
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((\Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) Q)
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 * / c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 f1
+ |- ((!s. ((inside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (inside s)))) /\ ((!s. ((outside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (outside s)))) /\ ((!s. ((simply_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (simply_connected s))) /\ ((!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homotopy_equivalent s) t)))) /\ ((!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) /\ ((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) /\ ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))))))))))))))))
T c/\ ! c= * part cinside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cinside b0 c/\ ! c= * part coutside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part coutside b0 c/\ ! c= csimply_connected * * part cIMAGE / cvector_add f0 b1 b0 csimply_connected b0 c/\ ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b2 b0 b1 chomotopy_equivalent b0 b1 c/\ ! ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 c/\ ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- (!s. (!x. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) ((IMAGE (\x. ((vector_add orig) x))) x)) = (s x))))
T c= cIMAGE * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 * f1 f2
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- (((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) ==> ((\Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) Q)) = ((\Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) Q))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c= c==> ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 * / c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 f1 * / c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 f1
- (orig = orig) |- (((!t. (((homeomorphic s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homeomorphic s) t))) ==> ((\t. (((homeomorphic s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homeomorphic s) t))) t)) = ((\t. (((homeomorphic s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homeomorphic s) t))) t))
T c==> c= f0 f0 c= c==> ! c= chomeomorphic f1 * * part cIMAGE / cvector_add f0 b1 b0 chomeomorphic f1 b0 * / c= chomeomorphic f1 * * part cIMAGE / cvector_add f0 b1 b0 chomeomorphic f1 b0 f2 * / c= chomeomorphic f1 * * part cIMAGE / cvector_add f0 b1 b0 chomeomorphic f1 b0 f2
- (orig = orig) |- ((\n. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) HAS_SIZE n) = (s HAS_SIZE n))) n)
T c==> c= f0 f0 * / c= cHAS_SIZE * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 b0 cHAS_SIZE f1 b0 f2
- ((~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) ==> ((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) ==> ((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) ==> F)))), (((~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) ==> ((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) ==> ((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) ==> F)))) ==> ((~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) ==> ((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) ==> ((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) ==> F))))) |- (((~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) ==> ((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) ==> ((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) ==> F)))) /\ ((~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) ==> ((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) ==> ((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) ==> F)))))
T c==> c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF c==> c==> c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF c/\ c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF
+ |- ((\a. (!s. (!t. ((((IMAGE (\y. ((vector_add a) y))) s) DIFF ((IMAGE (\y. ((vector_add a) y))) t)) = ((IMAGE (\y. ((vector_add a) y))) (s DIFF t)))))) orig)
T * / ! ! c= * * part cDIFF * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE / cvector_add b0 b3 * * part cDIFF b1 b2 f0
+ (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- ((real_ge ((real_add ((real_add (real_of_int _1772535)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0
- (orig = orig) |- ((((COND p) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (((COND p) s) t)))
T c==> c= f0 f0 c= * * * part cCOND f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f2 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f3 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 * * * part cCOND f1 f2 f3
+ (orig = orig) |- (!x. (!s. ((((vector_add orig) x) IN ((IMAGE (\y. ((vector_add orig) y))) s)) = (x IN s))))
T c==> c= f0 f0 ! ! c= cIN cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cIN b0 b1
+ (orig = orig) |- ((\s. ((((vector_add orig) x) IN ((IMAGE (\y. ((vector_add orig) y))) s)) = (x IN s))) s)
T c==> c= f0 f0 * / c= cIN cvector_add f0 f1 * * part cIMAGE / cvector_add f0 b1 b0 cIN f1 b0 f2
+ (x IN s) |- ((x IN s) /\ ((x IN ((hull P) s)) = T))
T c==> cIN f0 f1 c/\ cIN f0 f1 c= cIN f0 * * part chull f2 f1 cT
- (orig = orig) |- ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = (s = t))
T c==> c= f0 f0 c= c= * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f2 c= f1 f2
+ (orig = orig) |- ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))))))
T c==> c= f0 f0 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
- (orig = orig) |- ((\g. ((reversepath ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o (reversepath g)))) g)
T c==> c= f0 f0 * / c= * part creversepath * * part co / cvector_add f0 b1 b0 * * part co / cvector_add f0 b1 * part creversepath b0 f1
- (orig = orig) |- (((!a. (!b. ((open_interval (((vector_add orig) a) , ((vector_add orig) b))) = ((IMAGE (\x. ((vector_add orig) x))) (open_interval (a , b)))))) ==> ((\a. (!b. ((open_interval (((vector_add orig) a) , ((vector_add orig) b))) = ((IMAGE (\x. ((vector_add orig) x))) (open_interval (a , b)))))) a)) = ((\a. (!b. ((open_interval (((vector_add orig) a) , ((vector_add orig) b))) = ((IMAGE (\x. ((vector_add orig) x))) (open_interval (a , b)))))) a))
T c==> c= f0 f0 c= c==> ! ! c= * part copen_interval c, cvector_add f0 b0 cvector_add f0 b1 * * part cIMAGE / cvector_add f0 b2 * part copen_interval c, b0 b1 * / ! c= * part copen_interval c, cvector_add f0 b0 cvector_add f0 b1 * * part cIMAGE / cvector_add f0 b2 * part copen_interval c, b0 b1 f1 * / ! c= * part copen_interval c, cvector_add f0 b0 cvector_add f0 b1 * * part cIMAGE / cvector_add f0 b2 * part copen_interval c, b0 b1 f1
- (orig = orig) |- (((!s. ((outside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (outside s)))) ==> ((\s. ((outside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (outside s)))) s)) = ((\s. ((outside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (outside s)))) s))
T c==> c= f0 f0 c= c==> ! c= * part coutside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part coutside b0 * / c= * part coutside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part coutside b0 f1 * / c= * part coutside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part coutside b0 f1
+ |- ((\a. (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) DIFF ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (s DIFF t)))))) orig)
T * / ! ! c= * * part cDIFF * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 * * part cDIFF b1 b2 f0
+ |- ((!s. ((outside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (outside s)))) /\ ((!s. ((simply_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (simply_connected s))) /\ ((!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homotopy_equivalent s) t)))) /\ ((!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) /\ ((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) /\ ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))))))))))))))
T c/\ ! c= * part coutside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part coutside b0 c/\ ! c= csimply_connected * * part cIMAGE / cvector_add f0 b1 b0 csimply_connected b0 c/\ ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b2 b0 b1 chomotopy_equivalent b0 b1 c/\ ! ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 c/\ ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
- (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))), (negligible ((hull affine) s)), ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- ((negligible ((hull affine) s)) /\ F)
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> cnegligible * * part chull part caffine f0 c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c/\ cnegligible * * part chull part caffine f0 cF
+ |- (((SUC (CARD s)) = n) ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = ((n <= (dimindex UNIV)) ==> (negligible (span s)))))
T c==> c= cSUC cCARD f0 f1 c= c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
- |- ((!n'. ((s HAS_SIZE n) \/ ((~ (FINITE s)) \/ (~ ((CARD s) = n'))))) = ((s HAS_SIZE n) \/ (!n. ((~ (FINITE s)) \/ (~ ((CARD s) = n))))))
T c= ! c\/ cHAS_SIZE f0 f1 c\/ c~ cFINITE f0 c~ c= cCARD f0 b0 c\/ cHAS_SIZE f0 f1 ! c\/ c~ cFINITE f0 c~ c= cCARD f0 b0
- (orig = orig) |- (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) UNION ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s UNION t))))
T c==> c= f0 f0 ! c= * * part cUNION * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * * part cUNION f1 b0
+ |- ((((COND F) t1) t2) = t2)
T c= cCOND cF f0 f1 f1
- |- (((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> ((negligible (span s)) = (negligible (span s)))) ==> ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible (span s))) = (((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible (span s))))) = ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible (span s))) = (((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible (span s)))))
T c= c==> c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV c= cnegligible * part cspan f0 cnegligible * part cspan f0 c= c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c= c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
- (orig = orig) |- (((!f. (((continuous f) (at ((vector_add orig) z))) = ((continuous (\x. (f ((vector_add orig) x)))) (at z)))) ==> ((\f. (((continuous f) (at ((vector_add orig) z))) = ((continuous (\x. (f ((vector_add orig) x)))) (at z)))) f)) = ((\f. (((continuous f) (at ((vector_add orig) z))) = ((continuous (\x. (f ((vector_add orig) x)))) (at z)))) f))
T c==> c= f0 f0 c= c==> ! c= ccontinuous b0 cat cvector_add f0 f1 ccontinuous / * b0 cvector_add f0 b1 cat f1 * / c= ccontinuous b0 cat cvector_add f0 f1 ccontinuous / * b0 cvector_add f0 b1 cat f1 f2 * / c= ccontinuous b0 cat cvector_add f0 f1 ccontinuous / * b0 cvector_add f0 b1 cat f1 f2
- (orig = orig) |- ((\m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m))) m)
T c==> c= f0 f0 * / c= chas_measure * * part cIMAGE / cvector_add f0 b1 f1 b0 chas_measure f1 b0 f2
- (orig = orig) |- ((\s. (!x. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) DELETE ((IMAGE (\x. ((vector_add orig) x))) x)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s DELETE x))))) s)
T c==> c= f0 f0 * / ! c= * * part cDELETE * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 * * part cDELETE b0 b1 f1
- (orig = orig) |- ((\v. ((((subpath u) v) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o (((subpath u) v) g)))) v)
T c==> c= f0 f0 * / c= * * * part csubpath f1 b0 * * part co / cvector_add f0 b1 f2 * * part co / cvector_add f0 b1 * * * part csubpath f1 b0 f2 f3
- (orig = orig) |- (!k. (((IMAGE ((\y. ((vector_add orig) y)) o g)) k) = ((IMAGE (\y. ((vector_add orig) y))) ((IMAGE g) k))))
T c==> c= f0 f0 ! c= * * part cIMAGE * * part co / cvector_add f0 b1 f1 b0 * * part cIMAGE / cvector_add f0 b1 * * part cIMAGE f1 b0
- (orig = orig) |- (((MEM ((vector_add orig) x)) ((MAP (\x. ((vector_add orig) x))) l)) = ((MEM x) l))
T c==> c= f0 f0 c= cMEM cvector_add f0 f1 cMAP / cvector_add f0 b0 f2 cMEM f1 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (orig = orig) |- ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))))))))
T c==> c= f0 f0 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- ((\a. (!s. ((diameter ((IMAGE (\x. ((vector_add a) x))) s)) = (diameter s)))) orig)
T * / ! c= cdiameter * * part cIMAGE / cvector_add b0 b2 b1 cdiameter b1 f0
+ (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))))))))))))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1
- (orig = orig) |- ((\x. (!y. (((vector_sub ((vector_add orig) x)) ((vector_add orig) y)) = ((vector_sub x) y)))) x)
T c==> c= f0 f0 * / ! c= cvector_sub cvector_add f0 b0 cvector_add f0 b1 cvector_sub b0 b1 f1
- (orig = orig) |- ((reversepath ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o (reversepath g)))
T c==> c= f0 f0 c= * part creversepath * * part co / cvector_add f0 b0 f1 * * part co / cvector_add f0 b0 * part creversepath f1
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- (orig = orig) |- (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) <=_c t) = (s <=_c t)))
T c==> c= f0 f0 ! c= c<=_c * * part cIMAGE / cvector_add f0 b1 f1 b0 c<=_c f1 b0
+ |- ((\a. (!xs. (!n. ((((\y. ((vector_add a) y)) o xs) n) = ((vector_add a) (xs n)))))) orig)
T * / ! ! c= co / cvector_add b0 b3 b1 b2 cvector_add b0 * b1 b2 f0
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- (!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x)))))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 ! c= ! * b0 b1 ! * b0 cvector_add f0 b1
- (orig = orig) |- (((!x. ((((IMAGE (\y. ((vector_add orig) y))) s) DELETE ((vector_add orig) x)) = ((IMAGE (\y. ((vector_add orig) y))) (s DELETE x)))) ==> ((\x. ((((IMAGE (\y. ((vector_add orig) y))) s) DELETE ((vector_add orig) x)) = ((IMAGE (\y. ((vector_add orig) y))) (s DELETE x)))) x)) = ((\x. ((((IMAGE (\y. ((vector_add orig) y))) s) DELETE ((vector_add orig) x)) = ((IMAGE (\y. ((vector_add orig) y))) (s DELETE x)))) x))
T c==> c= f0 f0 c= c==> ! c= * * part cDELETE * * part cIMAGE / cvector_add f0 b1 f1 cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b1 * * part cDELETE f1 b0 * / c= * * part cDELETE * * part cIMAGE / cvector_add f0 b1 f1 cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b1 * * part cDELETE f1 b0 f2 * / c= * * part cDELETE * * part cIMAGE / cvector_add f0 b1 f1 cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b1 * * part cDELETE f1 b0 f2
- (orig = orig) |- ((inside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (inside s)))
T c==> c= f0 f0 c= * part cinside * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 * part cinside f1
+ (~ ((vec (NUMERAL _0)) IN s)), (FINITE s), ((SUC (CARD s)) = n), (n <= (dimindex UNIV)) |- (((?n. (((dim (span s)) <= n) /\ (n < (dimindex UNIV)))) ==> ((dim (span s)) < (dimindex UNIV))) = ((dim (span s)) < (dimindex UNIV)))
T c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV c= c==> c? / c/\ c<= cdim * part cspan f0 b0 c< b0 cdimindex part cUNIV c< cdim * part cspan f0 cdimindex part cUNIV c< cdim * part cspan f0 cdimindex part cUNIV
+ |- (!x. (!s. ((((IMAGE (\x. ((vector_add orig) x))) x) INSERT ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (x INSERT s)))))
T c= * * part cINSERT * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f2 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 * * part cINSERT f1 f2
+ |- ((\a. (!x. (!s. (((extreme_point_of ((vector_add a) x)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((extreme_point_of x) s))))) orig)
T * / ! ! c= cextreme_point_of cvector_add b0 b1 * * part cIMAGE / cvector_add b0 b3 b2 cextreme_point_of b1 b2 f0
- (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- ((~ ((x INSERT s) HAS_SIZE (CARD (x INSERT s)))) ==> ((x INSERT s) HAS_SIZE (CARD (x INSERT s))))
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c==> c~ cHAS_SIZE * * part cINSERT f1 f0 cCARD * * part cINSERT f1 f0 cHAS_SIZE * * part cINSERT f1 f0 cCARD * * part cINSERT f1 f0
+ |- (((!a. (!s. ((gdelta ((IMAGE (\x. ((vector_add a) x))) s)) = (gdelta s)))) ==> ((\a. (!s. ((gdelta ((IMAGE (\x. ((vector_add a) x))) s)) = (gdelta s)))) orig)) = ((\a. (!s. ((gdelta ((IMAGE (\x. ((vector_add a) x))) s)) = (gdelta s)))) orig))
T c= c==> ! ! c= cgdelta * * part cIMAGE / cvector_add b0 b2 b1 cgdelta b1 * / ! c= cgdelta * * part cIMAGE / cvector_add b0 b2 b1 cgdelta b1 f0 * / ! c= cgdelta * * part cIMAGE / cvector_add b0 b2 b1 cgdelta b1 f0
- (orig = orig) |- (!s. (!t. ((setdist (((IMAGE (\x. ((vector_add orig) x))) s) , ((IMAGE (\x. ((vector_add orig) x))) t))) = (setdist (s , t)))))
T c==> c= f0 f0 ! ! c= csetdist c, * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 csetdist c, b0 b1
+ |- (((!p'. (!q'. (((~ ((vec (NUMERAL _0)) IN s)) = p') ==> ((p' ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = q')) ==> (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((~ ((vec (NUMERAL _0)) IN s)) = p') ==> ((p' ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = q')) ==> (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((~ ((vec (NUMERAL _0)) IN s)) = p') ==> ((p' ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = q')) ==> (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c~ cIN cvec cNUMERAL c_0 f0 b0 c==> c==> b0 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b1 c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> b0 b1 * / ! c==> c= c~ cIN cvec cNUMERAL c_0 f0 b0 c==> c==> b0 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b1 c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> b0 b1 f2 * / ! c==> c= c~ cIN cvec cNUMERAL c_0 f0 b0 c==> c==> b0 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b1 c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> b0 b1 f2
+ |- (((!a. (!s. (((locally compact) ((IMAGE (\x. ((vector_add a) x))) s)) = ((locally compact) s)))) ==> ((\a. (!s. (((locally compact) ((IMAGE (\x. ((vector_add a) x))) s)) = ((locally compact) s)))) orig)) = ((\a. (!s. (((locally compact) ((IMAGE (\x. ((vector_add a) x))) s)) = ((locally compact) s)))) orig))
T c= c==> ! ! c= clocally part ccompact * * part cIMAGE / cvector_add b0 b2 b1 clocally part ccompact b1 * / ! c= clocally part ccompact * * part cIMAGE / cvector_add b0 b2 b1 clocally part ccompact b1 f0 * / ! c= clocally part ccompact * * part cIMAGE / cvector_add b0 b2 b1 clocally part ccompact b1 f0
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- (!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x)))))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1
+ |- ((\a. (!s. (!t. ((((IMAGE (\y. ((vector_add a) y))) s) SUBSET ((IMAGE (\y. ((vector_add a) y))) t)) = (s SUBSET t))))) orig)
T * / ! ! c= cSUBSET * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cSUBSET b1 b2 f0
- (n <= (dimindex UNIV)) |- ((n <= (dimindex UNIV)) /\ ((negligible (span s)) = (negligible (span s))))
T c==> c<= f0 cdimindex part cUNIV c/\ c<= f0 cdimindex part cUNIV c= cnegligible * part cspan f1 cnegligible * part cspan f1
- (_1772497 = _1772499), (_1772496 = _1772498) |- ((_1772497 = _1772499) /\ ((_1772498 IN _1772499) \/ (~ (_1772496 IN _1772497))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ cIN f3 f1 c~ cIN f2 f0
- (orig = orig) |- ((\s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) = ((IMAGE (\y. ((vector_add orig) y))) t)) = (s = t)))) s)
T c==> c= f0 f0 * / ! c= c= * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 c= b0 b1 f1
+ (orig = orig) |- (((!s. (((hull affine) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) ((hull affine) s)))) ==> ((\s. (((hull affine) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) ((hull affine) s)))) s)) = ((\s. (((hull affine) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) ((hull affine) s)))) s))
T c==> c= f0 f0 c= c==> ! c= * * part chull part caffine * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part chull part caffine b0 * / c= * * part chull part caffine * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part chull part caffine b0 f1 * / c= * * part chull part caffine * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part chull part caffine b0 f1
+ |- (((!x. (FINITE (x INSERT s))) \/ (~ (FINITE s))) = (!x. ((FINITE (x INSERT s)) \/ (~ (FINITE s)))))
T c= c\/ ! cFINITE * * part cINSERT b0 f0 c~ cFINITE f0 ! c\/ cFINITE * * part cINSERT b0 f0 c~ cFINITE f0
- (orig = orig) |- ((\s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) s)
T c==> c= f0 f0 * / c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 f1
- (orig = orig) |- (((!t. (((closed_in ((subtopology euclidean) ((IMAGE (\x. ((vector_add orig) x))) t))) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((closed_in ((subtopology euclidean) t)) s))) ==> ((\t. (((closed_in ((subtopology euclidean) ((IMAGE (\x. ((vector_add orig) x))) t))) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((closed_in ((subtopology euclidean) t)) s))) t)) = ((\t. (((closed_in ((subtopology euclidean) ((IMAGE (\x. ((vector_add orig) x))) t))) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((closed_in ((subtopology euclidean) t)) s))) t))
T c==> c= f0 f0 c= c==> ! c= cclosed_in csubtopology ceuclidean * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 f1 cclosed_in csubtopology ceuclidean b0 f1 * / c= cclosed_in csubtopology ceuclidean * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 f1 cclosed_in csubtopology ceuclidean b0 f1 f2 * / c= cclosed_in csubtopology ceuclidean * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 f1 cclosed_in csubtopology ceuclidean b0 f1 f2
+ |- (((!a. (!l1. (!l2. (((APPEND ((MAP (\x. ((vector_add a) x))) l1)) ((MAP (\x. ((vector_add a) x))) l2)) = ((MAP (\x. ((vector_add a) x))) ((APPEND l1) l2)))))) ==> ((\a. (!l1. (!l2. (((APPEND ((MAP (\x. ((vector_add a) x))) l1)) ((MAP (\x. ((vector_add a) x))) l2)) = ((MAP (\x. ((vector_add a) x))) ((APPEND l1) l2)))))) orig)) = ((\a. (!l1. (!l2. (((APPEND ((MAP (\x. ((vector_add a) x))) l1)) ((MAP (\x. ((vector_add a) x))) l2)) = ((MAP (\x. ((vector_add a) x))) ((APPEND l1) l2)))))) orig))
T c= c==> ! ! ! c= cAPPEND cMAP / cvector_add b0 b3 b1 cMAP / cvector_add b0 b3 b2 cMAP / cvector_add b0 b3 cAPPEND b1 b2 * / ! ! c= cAPPEND cMAP / cvector_add b0 b3 b1 cMAP / cvector_add b0 b3 b2 cMAP / cvector_add b0 b3 cAPPEND b1 b2 f0 * / ! ! c= cAPPEND cMAP / cvector_add b0 b3 b1 cMAP / cvector_add b0 b3 b2 cMAP / cvector_add b0 b3 cAPPEND b1 b2 f0
+ |- (((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) ==> ((\s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) s)) = ((\s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) s))
T c= c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 * / ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 f0 * / ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 f0
+ |- (((x = (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 f1 creal_of_num cNUMERAL c_0
- (orig = orig) |- (((!s. (!t. ((hausdist (((IMAGE (\x. ((vector_add orig) x))) s) , ((IMAGE (\x. ((vector_add orig) x))) t))) = (hausdist (s , t))))) ==> ((\s. (!t. ((hausdist (((IMAGE (\x. ((vector_add orig) x))) s) , ((IMAGE (\x. ((vector_add orig) x))) t))) = (hausdist (s , t))))) s)) = ((\s. (!t. ((hausdist (((IMAGE (\x. ((vector_add orig) x))) s) , ((IMAGE (\x. ((vector_add orig) x))) t))) = (hausdist (s , t))))) s))
T c==> c= f0 f0 c= c==> ! ! c= chausdist c, * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 chausdist c, b0 b1 * / ! c= chausdist c, * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 chausdist c, b0 b1 f1 * / ! c= chausdist c, * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 chausdist c, b0 b1 f1
+ |- ((((((CARD EMPTY) <= (dimindex UNIV)) ==> (negligible ((hull affine) EMPTY))) /\ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) ==> (!s. ((FINITE s) ==> (((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s)))))) = (!s. ((FINITE s) ==> (((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))))))
T c= c==> c/\ c==> c<= cCARD part cEMPTY cdimindex part cUNIV cnegligible * * part chull part caffine part cEMPTY ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 ! c==> cFINITE b0 c==> c<= cCARD b0 cdimindex part cUNIV cnegligible * * part chull part caffine b0 ! c==> cFINITE b0 c==> c<= cCARD b0 cdimindex part cUNIV cnegligible * * part chull part caffine b0
+ |- (((!a. (!s. ((INFINITE ((IMAGE (\y. ((vector_add a) y))) s)) = (INFINITE s)))) ==> ((\a. (!s. ((INFINITE ((IMAGE (\y. ((vector_add a) y))) s)) = (INFINITE s)))) orig)) = ((\a. (!s. ((INFINITE ((IMAGE (\y. ((vector_add a) y))) s)) = (INFINITE s)))) orig))
T c= c==> ! ! c= cINFINITE * * part cIMAGE / cvector_add b0 b2 b1 cINFINITE b1 * / ! c= cINFINITE * * part cIMAGE / cvector_add b0 b2 b1 cINFINITE b1 f0 * / ! c= cINFINITE * * part cIMAGE / cvector_add b0 b2 b1 cINFINITE b1 f0
- (_1772514 = _1772516) |- ((_1772515 = _1772517) ==> ((_1772514 INSERT _1772515) = (_1772516 INSERT _1772517)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ |- (((FINITE s) = p') ==> ((p' ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = q')) ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = (p' ==> q'))))
T c==> c= cFINITE f0 f1 c==> c==> f1 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 f3 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 c==> f1 f3
+ |- (!l. ((LENGTH ((MAP (\x. ((vector_add orig) x))) l)) = (LENGTH l)))
T c= cLENGTH cMAP / cvector_add f0 b0 f1 cLENGTH f1
- (orig = orig) |- ((\s. ((simply_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (simply_connected s))) s)
T c==> c= f0 f0 * / c= csimply_connected * * part cIMAGE / cvector_add f0 b1 b0 csimply_connected b0 f1
- (orig = orig) |- ((\s. ((complete ((IMAGE (\x. ((vector_add orig) x))) s)) = (complete s))) s)
T c==> c= f0 f0 * / c= ccomplete * * part cIMAGE / cvector_add f0 b1 b0 ccomplete b0 f1
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- (((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) ==> ((\Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) Q)) = ((\Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) Q))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c= c==> ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 * / c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 f1 * / c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 f1
+ |- ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))))))
T c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) = p') ==> ((p' ==> ((negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s))) = q')) ==> ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s)))) = (p' ==> q'))))
T c==> c= c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV f2 c==> c==> f2 c= cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 f3 c= c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 c==> f2 f3
- (orig = orig) |- (((!s. (((locally connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally connected) s))) ==> ((\s. (((locally connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally connected) s))) s)) = ((\s. (((locally connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally connected) s))) s))
T c==> c= f0 f0 c= c==> ! c= clocally part cconnected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cconnected b0 * / c= clocally part cconnected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cconnected b0 f1 * / c= clocally part cconnected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cconnected b0 f1
- (orig = orig) |- (((!l. ((LENGTH ((MAP (\x. ((vector_add orig) x))) l)) = (LENGTH l))) ==> ((\l. ((LENGTH ((MAP (\x. ((vector_add orig) x))) l)) = (LENGTH l))) l)) = ((\l. ((LENGTH ((MAP (\x. ((vector_add orig) x))) l)) = (LENGTH l))) l))
T c==> c= f0 f0 c= c==> ! c= cLENGTH cMAP / cvector_add f0 b1 b0 cLENGTH b0 * / c= cLENGTH cMAP / cvector_add f0 b1 b0 cLENGTH b0 f1 * / c= cLENGTH cMAP / cvector_add f0 b1 b0 cLENGTH b0 f1
- (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))), (~ (x IN s)), ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- ((~ (x IN s)) /\ (x IN s))
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> c~ cIN f0 f1 c==> c/\ c/\ c\/ c~ c<= cCARD f1 cdimindex part cUNIV cnegligible * * part chull part caffine f1 c/\ c~ cIN f0 f1 cFINITE f1 c/\ c<= cCARD * * part cINSERT f0 f1 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f0 f1 c/\ c~ cIN f0 f1 cIN f0 f1
- (orig = orig) |- (((!s. ((interior ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (interior s)))) ==> ((\s. ((interior ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (interior s)))) s)) = ((\s. ((interior ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (interior s)))) s))
T c==> c= f0 f0 c= c==> ! c= * part cinterior * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cinterior b0 * / c= * part cinterior * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cinterior b0 f1 * / c= * part cinterior * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cinterior b0 f1
- (orig = orig) |- (((!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s))) ==> ((\n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s))) n)) = ((\n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s))) n))
T c==> c= f0 f0 c= c==> ! c= csimplex b0 * * part cIMAGE / cvector_add f0 b1 f1 csimplex b0 f1 * / c= csimplex b0 * * part cIMAGE / cvector_add f0 b1 f1 csimplex b0 f1 f2 * / c= csimplex b0 * * part cIMAGE / cvector_add f0 b1 f1 csimplex b0 f1 f2
- (orig = orig) |- (!n. ((((IMAGE (\x. ((vector_add orig) x))) o xs) n) = ((IMAGE (\x. ((vector_add orig) x))) (xs n))))
T c==> c= f0 f0 ! c= * * * part co * part cIMAGE / cvector_add f0 b1 f1 b0 * * part cIMAGE / cvector_add f0 b1 * f1 b0
+ |- (((!a. (!s. ((complete ((IMAGE (\x. ((vector_add a) x))) s)) = (complete s)))) ==> ((\a. (!s. ((complete ((IMAGE (\x. ((vector_add a) x))) s)) = (complete s)))) orig)) = ((\a. (!s. ((complete ((IMAGE (\x. ((vector_add a) x))) s)) = (complete s)))) orig))
T c= c==> ! ! c= ccomplete * * part cIMAGE / cvector_add b0 b2 b1 ccomplete b1 * / ! c= ccomplete * * part cIMAGE / cvector_add b0 b2 b1 ccomplete b1 f0 * / ! c= ccomplete * * part cIMAGE / cvector_add b0 b2 b1 ccomplete b1 f0
- (orig = orig) |- ((\s. ((outside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (outside s)))) s)
T c==> c= f0 f0 * / c= * part coutside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part coutside b0 f1
- (orig = orig) |- ((linepath (((vector_add orig) b) , ((vector_add orig) c))) = ((\x. ((vector_add orig) x)) o (linepath (b , c))))
T c==> c= f0 f0 c= * part clinepath c, cvector_add f0 f1 cvector_add f0 f2 * * part co / cvector_add f0 b0 * part clinepath c, f1 f2
+ |- ((T \/ t) = T)
T c= c\/ cT f0 cT
+ |- (((!a. (!z. (!f. (((continuous f) (at ((vector_add a) z))) = ((continuous (\x. (f ((vector_add a) x)))) (at z)))))) ==> ((\a. (!z. (!f. (((continuous f) (at ((vector_add a) z))) = ((continuous (\x. (f ((vector_add a) x)))) (at z)))))) orig)) = ((\a. (!z. (!f. (((continuous f) (at ((vector_add a) z))) = ((continuous (\x. (f ((vector_add a) x)))) (at z)))))) orig))
T c= c==> ! ! ! c= ccontinuous b2 cat cvector_add b0 b1 ccontinuous / * b2 cvector_add b0 b3 cat b1 * / ! ! c= ccontinuous b2 cat cvector_add b0 b1 ccontinuous / * b2 cvector_add b0 b3 cat b1 f0 * / ! ! c= ccontinuous b2 cat cvector_add b0 b1 ccontinuous / * b2 cvector_add b0 b3 cat b1 f0
+ |- ((\a. (!s. (!t. ((s >=_c ((IMAGE (\x. ((vector_add a) x))) t)) = (s >=_c t))))) orig)
T * / ! ! c= c>=_c b1 * * part cIMAGE / cvector_add b0 b3 b2 c>=_c b1 b2 f0
+ |- (((!p'. (!q'. (((FINITE s) = p') ==> ((p' ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = q')) ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((FINITE s) = p') ==> ((p' ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = q')) ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((FINITE s) = p') ==> ((p' ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = q')) ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cFINITE f0 b0 c==> c==> b0 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b1 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> b0 b1 * / ! c==> c= cFINITE f0 b0 c==> c==> b0 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b1 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> b0 b1 f2 * / ! c==> c= cFINITE f0 b0 c==> c==> b0 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b1 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> b0 b1 f2
+ (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))), (~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) |- ((!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) /\ F)
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c/\ ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF
+ |- (((!c. (!a. (!b. ((closed_interval ((CONS (((vector_add c) a) , ((vector_add c) b))) NIL)) = ((IMAGE (\x. ((vector_add c) x))) (closed_interval ((CONS (a , b)) NIL))))))) ==> ((\c. (!a. (!b. ((closed_interval ((CONS (((vector_add c) a) , ((vector_add c) b))) NIL)) = ((IMAGE (\x. ((vector_add c) x))) (closed_interval ((CONS (a , b)) NIL))))))) orig)) = ((\c. (!a. (!b. ((closed_interval ((CONS (((vector_add c) a) , ((vector_add c) b))) NIL)) = ((IMAGE (\x. ((vector_add c) x))) (closed_interval ((CONS (a , b)) NIL))))))) orig))
T c= c==> ! ! ! c= * part cclosed_interval cCONS c, cvector_add b0 b1 cvector_add b0 b2 cNIL * * part cIMAGE / cvector_add b0 b3 * part cclosed_interval cCONS c, b1 b2 cNIL * / ! ! c= * part cclosed_interval cCONS c, cvector_add b0 b1 cvector_add b0 b2 cNIL * * part cIMAGE / cvector_add b0 b3 * part cclosed_interval cCONS c, b1 b2 cNIL f0 * / ! ! c= * part cclosed_interval cCONS c, cvector_add b0 b1 cvector_add b0 b2 cNIL * * part cIMAGE / cvector_add b0 b3 * part cclosed_interval cCONS c, b1 b2 cNIL f0
+ (~ ((vec (NUMERAL _0)) IN s)) |- (((((vec (NUMERAL _0)) IN s) = F) ==> ((F ==> ((CARD s) = t')) ==> (((~ F) ==> ((SUC (CARD s)) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN s)) (CARD s)) (SUC (CARD s))) = (((COND F) t') e'))))) = ((F ==> ((CARD s) = t')) ==> (((~ F) ==> ((SUC (CARD s)) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN s)) (CARD s)) (SUC (CARD s))) = (((COND F) t') e')))))
T c==> c~ cIN cvec cNUMERAL c_0 f0 c= c==> c= cIN cvec cNUMERAL c_0 f0 cF c==> c==> cF c= cCARD f0 f1 c==> c==> c~ cF c= cSUC cCARD f0 f2 c= cCOND cIN cvec cNUMERAL c_0 f0 cCARD f0 cSUC cCARD f0 cCOND cF f1 f2 c==> c==> cF c= cCARD f0 f1 c==> c==> c~ cF c= cSUC cCARD f0 f2 c= cCOND cIN cvec cNUMERAL c_0 f0 cCARD f0 cSUC cCARD f0 cCOND cF f1 f2
- (orig = orig) |- ((\b. (!c. ((((vector_add ((vector_add orig) b)) c) IN ((IMAGE (\x. ((vector_add orig) x))) s)) = (((vector_add b) c) IN s)))) b)
T c==> c= f0 f0 * / ! c= cIN cvector_add cvector_add f0 b0 b1 * * part cIMAGE / cvector_add f0 b2 f1 cIN cvector_add b0 b1 f1 f2
- (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) |- (!n. (((~ (_1772460 HAS_SIZE n)) \/ (FINITE _1772460)) /\ ((~ (_1772460 HAS_SIZE n)) \/ ((CARD _1772460) = n))))
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 ! c/\ c\/ c~ cHAS_SIZE f0 b0 cFINITE f0 c\/ c~ cHAS_SIZE f0 b0 c= cCARD f0 b0
+ |- ((\a. (!x. (!y. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add a) x)) ((vector_add a) y))) = ((vector_add a) ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y))))))) orig)
T * / ! ! c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add b0 b1 cvector_add b0 b2 cvector_add b0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b1 b2 f0
+ |- ((\a. (!x. (!r. ((ball (((vector_add a) x) , r)) = ((IMAGE (\y. ((vector_add a) y))) (ball (x , r))))))) orig)
T * / ! ! c= * part cball c, cvector_add b0 b1 b2 * * part cIMAGE / cvector_add b0 b3 * part cball c, b1 b2 f0
+ |- ((!b. (!c. ((linepath (((vector_add orig) b) , ((vector_add orig) c))) = ((\x. ((vector_add orig) x)) o (linepath (b , c)))))) /\ ((!s. (!x. (((path_component ((IMAGE (\x. ((vector_add orig) x))) s)) ((vector_add orig) x)) = ((IMAGE (\x. ((vector_add orig) x))) ((path_component s) x))))) /\ ((!s. ((path_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (path_connected s))) /\ ((!s. (((locally path_connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally path_connected) s))) /\ ((!s. (((locally connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally connected) s))) /\ ((!s. ((inside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (inside s)))) /\ ((!s. ((outside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (outside s)))) /\ ((!s. ((simply_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (simply_connected s))) /\ ((!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homotopy_equivalent s) t)))) /\ ((!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) /\ ((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) /\ ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))))))))))))))))))))
T c/\ ! ! c= * part clinepath c, cvector_add f0 b0 cvector_add f0 b1 * * part co / cvector_add f0 b2 * part clinepath c, b0 b1 c/\ ! ! c= * * part cpath_component * * part cIMAGE / cvector_add f0 b2 b0 cvector_add f0 b1 * * part cIMAGE / cvector_add f0 b2 * * part cpath_component b0 b1 c/\ ! c= cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 cpath_connected b0 c/\ ! c= clocally part cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cpath_connected b0 c/\ ! c= clocally part cconnected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cconnected b0 c/\ ! c= * part cinside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cinside b0 c/\ ! c= * part coutside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part coutside b0 c/\ ! c= csimply_connected * * part cIMAGE / cvector_add f0 b1 b0 csimply_connected b0 c/\ ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b2 b0 b1 chomotopy_equivalent b0 b1 c/\ ! ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 c/\ ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
- (orig = orig) |- ((\x. ((((IMAGE (\y. ((vector_add orig) y))) s) ((vector_add orig) x)) = (s x))) x)
T c==> c= f0 f0 * / c= cIMAGE / cvector_add f0 b1 f1 cvector_add f0 b0 * f1 b0 f2
- (orig = orig) |- ((\y. ((distance (((vector_add orig) x) , ((vector_add orig) y))) = (distance (x , y)))) y)
T c==> c= f0 f0 * / c= cdistance c, cvector_add f0 f1 cvector_add f0 b0 cdistance c, f1 b0 f2
- (orig = orig) |- ((\x. (((connected_component ((IMAGE (\x. ((vector_add orig) x))) s)) ((vector_add orig) x)) = ((IMAGE (\x. ((vector_add orig) x))) ((connected_component s) x)))) x)
T c==> c= f0 f0 * / c= * * part cconnected_component * * part cIMAGE / cvector_add f0 b1 f1 cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b1 * * part cconnected_component f1 b0 f2
- (orig = orig) |- (((!k. (((IMAGE ((IMAGE (\x. ((vector_add orig) x))) o g)) k) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) ((IMAGE g) k)))) ==> ((\k. (((IMAGE ((IMAGE (\x. ((vector_add orig) x))) o g)) k) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) ((IMAGE g) k)))) k)) = ((\k. (((IMAGE ((IMAGE (\x. ((vector_add orig) x))) o g)) k) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) ((IMAGE g) k)))) k))
T c==> c= f0 f0 c= c==> ! c= * * part cIMAGE * * part co * part cIMAGE / cvector_add f0 b1 f1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * * part cIMAGE f1 b0 * / c= * * part cIMAGE * * part co * part cIMAGE / cvector_add f0 b1 f1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * * part cIMAGE f1 b0 f2 * / c= * * part cIMAGE * * part co * part cIMAGE / cvector_add f0 b1 f1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * * part cIMAGE f1 b0 f2
- (orig = orig) |- (((!u. ((UNIONS ((IMAGE (IMAGE (IMAGE (\x. ((vector_add orig) x))))) u)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (UNIONS u)))) ==> ((\u. ((UNIONS ((IMAGE (IMAGE (IMAGE (\x. ((vector_add orig) x))))) u)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (UNIONS u)))) u)) = ((\u. ((UNIONS ((IMAGE (IMAGE (IMAGE (\x. ((vector_add orig) x))))) u)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (UNIONS u)))) u))
T c==> c= f0 f0 c= c==> ! c= * part cUNIONS * * part cIMAGE * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cUNIONS b0 * / c= * part cUNIONS * * part cIMAGE * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cUNIONS b0 f1 * / c= * part cUNIONS * * part cIMAGE * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cUNIONS b0 f1
+ |- (((!a. (!s. ((FINITE ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) = (FINITE s)))) ==> ((\a. (!s. ((FINITE ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) = (FINITE s)))) orig)) = ((\a. (!s. ((FINITE ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) = (FINITE s)))) orig))
T c= c==> ! ! c= cFINITE * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 cFINITE b1 * / ! c= cFINITE * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 cFINITE b1 f0 * / ! c= cFINITE * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 cFINITE b1 f0
+ |- ((\P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))) P)
T * / c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 f0
- (orig = orig) |- ((\x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) x)
T c==> c= f0 f0 * / ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 f1
+ |- ((\c. (!a. (!b. ((closed_interval ((CONS (((vector_add c) a) , ((vector_add c) b))) NIL)) = ((IMAGE (\x. ((vector_add c) x))) (closed_interval ((CONS (a , b)) NIL))))))) orig)
T * / ! ! c= * part cclosed_interval cCONS c, cvector_add b0 b1 cvector_add b0 b2 cNIL * * part cIMAGE / cvector_add b0 b3 * part cclosed_interval cCONS c, b1 b2 cNIL f0
+ |- (((!x. ((x IN s) ==> (x IN ((hull P) s)))) ==> ((\x. ((x IN s) ==> (x IN ((hull P) s)))) x)) = ((\x. ((x IN s) ==> (x IN ((hull P) s)))) x))
T c= c==> ! c==> cIN b0 f0 cIN b0 * * part chull f1 f0 * / c==> cIN b0 f0 cIN b0 * * part chull f1 f0 f2 * / c==> cIN b0 f0 cIN b0 * * part chull f1 f0 f2
- (orig = orig) |- (((!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) INTER ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s INTER t))))) ==> ((\s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) INTER ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s INTER t))))) s)) = ((\s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) INTER ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s INTER t))))) s))
T c==> c= f0 f0 c= c==> ! ! c= * * part cINTER * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 * * part cINTER b0 b1 * / ! c= * * part cINTER * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 * * part cINTER b0 b1 f1 * / ! c= * * part cINTER * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 * * part cINTER b0 b1 f1
- (orig = orig) |- (((!v. ((((subpath u) v) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o (((subpath u) v) g)))) ==> ((\v. ((((subpath u) v) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o (((subpath u) v) g)))) v)) = ((\v. ((((subpath u) v) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o (((subpath u) v) g)))) v))
T c==> c= f0 f0 c= c==> ! c= * * * part csubpath f1 b0 * * part co / cvector_add f0 b1 f2 * * part co / cvector_add f0 b1 * * * part csubpath f1 b0 f2 * / c= * * * part csubpath f1 b0 * * part co / cvector_add f0 b1 f2 * * part co / cvector_add f0 b1 * * * part csubpath f1 b0 f2 f3 * / c= * * * part csubpath f1 b0 * * part co / cvector_add f0 b1 f2 * * part co / cvector_add f0 b1 * * * part csubpath f1 b0 f2 f3
+ |- (((real_le (real_of_num m)) (real_neg (real_of_num n))) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))
T c= creal_le creal_of_num f0 creal_neg creal_of_num f1 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
- (!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))) |- ((((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s)))) = T)
T c==> ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 c= c==> c/\ * f0 part cEMPTY ! ! c==> c/\ * f0 b1 c/\ c~ cIN b0 b1 cFINITE b1 * f0 * * part cINSERT b0 b1 ! c==> cFINITE b0 * f0 b0 cT
+ |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- (orig = orig) |- ((\g. (!u. (!v. ((((subpath u) v) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o (((subpath u) v) g)))))) g)
T c==> c= f0 f0 * / ! ! c= * * * part csubpath b1 b2 * * part co / cvector_add f0 b3 b0 * * part co / cvector_add f0 b3 * * * part csubpath b1 b2 b0 f1
+ |- (((!a. (!s. (!n. ((((IMAGE (\y. ((vector_add a) y))) s) HAS_SIZE n) = (s HAS_SIZE n))))) ==> ((\a. (!s. (!n. ((((IMAGE (\y. ((vector_add a) y))) s) HAS_SIZE n) = (s HAS_SIZE n))))) orig)) = ((\a. (!s. (!n. ((((IMAGE (\y. ((vector_add a) y))) s) HAS_SIZE n) = (s HAS_SIZE n))))) orig))
T c= c==> ! ! ! c= cHAS_SIZE * * part cIMAGE / cvector_add b0 b3 b1 b2 cHAS_SIZE b1 b2 * / ! ! c= cHAS_SIZE * * part cIMAGE / cvector_add b0 b3 b1 b2 cHAS_SIZE b1 b2 f0 * / ! ! c= cHAS_SIZE * * part cIMAGE / cvector_add b0 b3 b1 b2 cHAS_SIZE b1 b2 f0
- (orig = orig) |- ((\s. (!t. ((hausdist (((IMAGE (\x. ((vector_add orig) x))) s) , ((IMAGE (\x. ((vector_add orig) x))) t))) = (hausdist (s , t))))) s)
T c==> c= f0 f0 * / ! c= chausdist c, * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 chausdist c, b0 b1 f1
+ |- (!g. (!k. (((IMAGE ((\y. ((vector_add orig) y)) o g)) k) = ((IMAGE (\y. ((vector_add orig) y))) ((IMAGE g) k)))))
T c= * * part cIMAGE * * part co / cvector_add f0 b0 f1 f2 * * part cIMAGE / cvector_add f0 b0 * * part cIMAGE f1 f2
- (orig = orig) |- ((frontier ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (frontier s)))
T c==> c= f0 f0 c= * part cfrontier * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 * part cfrontier f1
- (orig = orig) |- (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) SUBSET ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = (s SUBSET t))))
T c==> c= f0 f0 ! ! c= cSUBSET * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 cSUBSET b0 b1
- (orig = orig) |- (((!s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) <_c t) = (s <_c t)))) ==> ((\s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) <_c t) = (s <_c t)))) s)) = ((\s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) <_c t) = (s <_c t)))) s))
T c==> c= f0 f0 c= c==> ! ! c= c<_c * * part cIMAGE / cvector_add f0 b2 b0 b1 c<_c b0 b1 * / ! c= c<_c * * part cIMAGE / cvector_add f0 b2 b0 b1 c<_c b0 b1 f1 * / ! c= c<_c * * part cIMAGE / cvector_add f0 b2 b0 b1 c<_c b0 b1 f1
+ (FINITE s) |- ((CARD ((vec (NUMERAL _0)) INSERT s)) = (((COND ((vec (NUMERAL _0)) IN s)) (CARD s)) (SUC (CARD s))))
T c==> cFINITE f0 c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 cCOND cIN cvec cNUMERAL c_0 f0 cCARD f0 cSUC cCARD f0
- |- (((!s. (!n. (((~ (orig IN s)) /\ (((orig INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (orig INSERT s)))))) ==> ((\s. (!n. (((~ (orig IN s)) /\ (((orig INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (orig INSERT s)))))) s)) = ((\s. (!n. (((~ (orig IN s)) /\ (((orig INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (orig INSERT s)))))) s))
T c= c==> ! ! c==> c/\ c~ cIN f0 b0 c/\ cHAS_SIZE * * part cINSERT f0 b0 b1 c<= b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 b0 * / ! c==> c/\ c~ cIN f0 b0 c/\ cHAS_SIZE * * part cINSERT f0 b0 b1 c<= b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 b0 f1 * / ! c==> c/\ c~ cIN f0 b0 c/\ cHAS_SIZE * * part cINSERT f0 b0 b1 c<= b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 b0 f1
- (orig = orig) |- (((!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s))) ==> ((\s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s))) s)) = ((\s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s))) s))
T c==> c= f0 f0 c= c==> ! c= cextreme_point_of cvector_add f0 f1 * * part cIMAGE / cvector_add f0 b1 b0 cextreme_point_of f1 b0 * / c= cextreme_point_of cvector_add f0 f1 * * part cIMAGE / cvector_add f0 b1 b0 cextreme_point_of f1 b0 f2 * / c= cextreme_point_of cvector_add f0 f1 * * part cIMAGE / cvector_add f0 b1 b0 cextreme_point_of f1 b0 f2
+ |- ((\s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) s)
T * / c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 f2
+ |- ((!s. (!n. (((~ (orig IN s)) /\ (((orig INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (orig INSERT s)))))) = (!s. (!n. (((~ (((vector_add orig) (vec (NUMERAL _0))) IN ((IMAGE (\x. ((vector_add _1772522) x))) s))) /\ (((((vector_add orig) (vec (NUMERAL _0))) INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s)) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (((vector_add orig) (vec (NUMERAL _0))) INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s))))))))
T c= ! ! c==> c/\ c~ cIN f0 b0 c/\ cHAS_SIZE * * part cINSERT f0 b0 b1 c<= b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 b0 ! ! c==> c/\ c~ cIN cvector_add f0 cvec cNUMERAL c_0 * * part cIMAGE / cvector_add f1 b2 b0 c/\ cHAS_SIZE * * part cINSERT cvector_add f0 cvec cNUMERAL c_0 * * part cIMAGE / cvector_add f1 b2 b0 b1 c<= b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvector_add f0 cvec cNUMERAL c_0 * * part cIMAGE / cvector_add f1 b2 b0
+ |- (!s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) <_c t) = (s <_c t))))
T c= c<_c * * part cIMAGE / cvector_add f0 b0 f1 f2 c<_c f1 f2
- (orig = orig) |- (!s. (((hull convex) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) ((hull convex) s))))
T c==> c= f0 f0 ! c= * * part chull part cconvex * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part chull part cconvex b0
- (orig = orig) |- (((!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) PSUBSET ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = (s PSUBSET t)))) ==> ((\s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) PSUBSET ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = (s PSUBSET t)))) s)) = ((\s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) PSUBSET ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = (s PSUBSET t)))) s))
T c==> c= f0 f0 c= c==> ! ! c= cPSUBSET * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 cPSUBSET b0 b1 * / ! c= cPSUBSET * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 cPSUBSET b0 b1 f1 * / ! c= cPSUBSET * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 cPSUBSET b0 b1 f1
- (orig = orig) |- (((!x. (!r. ((cball (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (cball (x , r)))))) ==> ((\x. (!r. ((cball (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (cball (x , r)))))) x)) = ((\x. (!r. ((cball (((vector_add orig) x) , r)) = ((IMAGE (\y. ((vector_add orig) y))) (cball (x , r)))))) x))
T c==> c= f0 f0 c= c==> ! ! c= * part ccball c, cvector_add f0 b0 b1 * * part cIMAGE / cvector_add f0 b2 * part ccball c, b0 b1 * / ! c= * part ccball c, cvector_add f0 b0 b1 * * part cIMAGE / cvector_add f0 b2 * part ccball c, b0 b1 f1 * / ! c= * part ccball c, cvector_add f0 b0 b1 * * part cIMAGE / cvector_add f0 b2 * part ccball c, b0 b1 f1
- (orig = orig) |- ((\g. (!k. (((IMAGE ((\y. ((vector_add orig) y)) o g)) k) = ((IMAGE (\y. ((vector_add orig) y))) ((IMAGE g) k))))) g)
T c==> c= f0 f0 * / ! c= * * part cIMAGE * * part co / cvector_add f0 b2 b0 b1 * * part cIMAGE / cvector_add f0 b2 * * part cIMAGE b0 b1 f1
- (orig = orig) |- ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))
T c==> c= f0 f0 c= ccontractible * * part cIMAGE / cvector_add f0 b0 f1 ccontractible f1
+ |- (!s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) INTER ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s INTER t)))))
T c= * * part cINTER * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 * * part cIMAGE / cvector_add f0 b0 * * part cINTER f1 f2
+ (~ ((vec (NUMERAL _0)) IN s)) |- ((~ ((vec (NUMERAL _0)) IN s)) /\ (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))))
T c==> c~ cIN cvec cNUMERAL c_0 f0 c/\ c~ cIN cvec cNUMERAL c_0 f0 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
- (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- ((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0
+ |- ((\a. (!s. ((compact ((IMAGE (\x. ((vector_add a) x))) s)) = (compact s)))) orig)
T * / ! c= ccompact * * part cIMAGE / cvector_add b0 b2 b1 ccompact b1 f0
- (orig = orig) |- (!x. (!y. (((vector_sub ((vector_add orig) x)) ((vector_add orig) y)) = ((vector_sub x) y))))
T c==> c= f0 f0 ! ! c= cvector_sub cvector_add f0 b0 cvector_add f0 b1 cvector_sub b0 b1
- (orig = orig) |- (!y. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add orig) x)) ((vector_add orig) y))) = ((vector_add orig) ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y)))))
T c==> c= f0 f0 ! c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add f0 f1 cvector_add f0 b0 cvector_add f0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f1 b0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (orig = orig) |- ((path_image ((\x. ((vector_add orig) x)) o g)) = ((IMAGE (\x. ((vector_add orig) x))) (path_image g)))
T c==> c= f0 f0 c= * part cpath_image * * part co / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 * part cpath_image f1
+ |- (((!a. (!s. (!x. ((((IMAGE (\y. ((vector_add a) y))) s) ((vector_add a) x)) = (s x))))) ==> ((\a. (!s. (!x. ((((IMAGE (\y. ((vector_add a) y))) s) ((vector_add a) x)) = (s x))))) orig)) = ((\a. (!s. (!x. ((((IMAGE (\y. ((vector_add a) y))) s) ((vector_add a) x)) = (s x))))) orig))
T c= c==> ! ! ! c= cIMAGE / cvector_add b0 b3 b1 cvector_add b0 b2 * b1 b2 * / ! ! c= cIMAGE / cvector_add b0 b3 b1 cvector_add b0 b2 * b1 b2 f0 * / ! ! c= cIMAGE / cvector_add b0 b3 b1 cvector_add b0 b2 * b1 b2 f0
- (orig = orig) |- (((!x. (!l. (((MEM ((vector_add orig) x)) ((MAP (\x. ((vector_add orig) x))) l)) = ((MEM x) l)))) ==> ((\x. (!l. (((MEM ((vector_add orig) x)) ((MAP (\x. ((vector_add orig) x))) l)) = ((MEM x) l)))) x)) = ((\x. (!l. (((MEM ((vector_add orig) x)) ((MAP (\x. ((vector_add orig) x))) l)) = ((MEM x) l)))) x))
T c==> c= f0 f0 c= c==> ! ! c= cMEM cvector_add f0 b0 cMAP / cvector_add f0 b2 b1 cMEM b0 b1 * / ! c= cMEM cvector_add f0 b0 cMAP / cvector_add f0 b2 b1 cMEM b0 b1 f1 * / ! c= cMEM cvector_add f0 b0 cMAP / cvector_add f0 b2 b1 cMEM b0 b1 f1
+ (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
+ |- ((\a. (!x. (!y. ((((vector_add a) x) = ((vector_add a) y)) = (x = y))))) orig)
T * / ! ! c= c= cvector_add b0 b1 cvector_add b0 b2 c= b1 b2 f0
+ |- (((!a. (!t. (!g. (((shiftpath t) ((\x. ((vector_add a) x)) o g)) = ((\x. ((vector_add a) x)) o ((shiftpath t) g)))))) ==> ((\a. (!t. (!g. (((shiftpath t) ((\x. ((vector_add a) x)) o g)) = ((\x. ((vector_add a) x)) o ((shiftpath t) g)))))) orig)) = ((\a. (!t. (!g. (((shiftpath t) ((\x. ((vector_add a) x)) o g)) = ((\x. ((vector_add a) x)) o ((shiftpath t) g)))))) orig))
T c= c==> ! ! ! c= * * part cshiftpath b1 * * part co / cvector_add b0 b3 b2 * * part co / cvector_add b0 b3 * * part cshiftpath b1 b2 * / ! ! c= * * part cshiftpath b1 * * part co / cvector_add b0 b3 b2 * * part co / cvector_add b0 b3 * * part cshiftpath b1 b2 f0 * / ! ! c= * * part cshiftpath b1 * * part co / cvector_add b0 b3 b2 * * part co / cvector_add b0 b3 * * part cshiftpath b1 b2 f0
- (orig = orig) |- (((!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) UNION ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s UNION t))))) ==> ((\s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) UNION ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s UNION t))))) s)) = ((\s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) UNION ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s UNION t))))) s))
T c==> c= f0 f0 c= c==> ! ! c= * * part cUNION * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 * * part cUNION b0 b1 * / ! c= * * part cUNION * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 * * part cUNION b0 b1 f1 * / ! c= * * part cUNION * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 * * part cUNION b0 b1 f1
+ (orig = orig) |- (((hull affine) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) ((hull affine) s)))
T c==> c= f0 f0 c= * * part chull part caffine * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 * * part chull part caffine f1
- (orig = orig) |- (!b. ((closed_interval ((CONS (((vector_add orig) a) , ((vector_add orig) b))) NIL)) = ((IMAGE (\x. ((vector_add orig) x))) (closed_interval ((CONS (a , b)) NIL)))))
T c==> c= f0 f0 ! c= * part cclosed_interval cCONS c, cvector_add f0 f1 cvector_add f0 b0 cNIL * * part cIMAGE / cvector_add f0 b1 * part cclosed_interval cCONS c, f1 b0 cNIL
- (!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))) |- ((!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))) /\ (!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))))
T c==> ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 c/\ ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1
+ |- (((!a. (!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add a) x))) s)) m) = ((has_measure s) m))))) ==> ((\a. (!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add a) x))) s)) m) = ((has_measure s) m))))) orig)) = ((\a. (!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add a) x))) s)) m) = ((has_measure s) m))))) orig))
T c= c==> ! ! ! c= chas_measure * * part cIMAGE / cvector_add b0 b3 b1 b2 chas_measure b1 b2 * / ! ! c= chas_measure * * part cIMAGE / cvector_add b0 b3 b1 b2 chas_measure b1 b2 f0 * / ! ! c= chas_measure * * part cIMAGE / cvector_add b0 b3 b1 b2 chas_measure b1 b2 f0
- (orig = orig) |- (!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr)))
T c==> c= f0 f0 ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0
+ |- ((\a. (!s. ((open ((IMAGE (\x. ((vector_add a) x))) s)) = (open s)))) orig)
T * / ! c= copen * * part cIMAGE / cvector_add b0 b2 b1 copen b1 f0
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((\R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l))))))) R)
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 * / c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 f1
+ |- (((!a. (!s. (!t. ((((IMAGE (\y. ((vector_add a) y))) s) DIFF ((IMAGE (\y. ((vector_add a) y))) t)) = ((IMAGE (\y. ((vector_add a) y))) (s DIFF t)))))) ==> ((\a. (!s. (!t. ((((IMAGE (\y. ((vector_add a) y))) s) DIFF ((IMAGE (\y. ((vector_add a) y))) t)) = ((IMAGE (\y. ((vector_add a) y))) (s DIFF t)))))) orig)) = ((\a. (!s. (!t. ((((IMAGE (\y. ((vector_add a) y))) s) DIFF ((IMAGE (\y. ((vector_add a) y))) t)) = ((IMAGE (\y. ((vector_add a) y))) (s DIFF t)))))) orig))
T c= c==> ! ! ! c= * * part cDIFF * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE / cvector_add b0 b3 * * part cDIFF b1 b2 * / ! ! c= * * part cDIFF * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE / cvector_add b0 b3 * * part cDIFF b1 b2 f0 * / ! ! c= * * part cDIFF * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE / cvector_add b0 b3 * * part cDIFF b1 b2 f0
- (orig = orig) |- (!g. (((shiftpath t) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o ((shiftpath t) g))))
T c==> c= f0 f0 ! c= * * part cshiftpath f1 * * part co / cvector_add f0 b1 b0 * * part co / cvector_add f0 b1 * * part cshiftpath f1 b0
- (orig = orig) |- (((!s. ((closure ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (closure s)))) ==> ((\s. ((closure ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (closure s)))) s)) = ((\s. ((closure ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (closure s)))) s))
T c==> c= f0 f0 c= c==> ! c= * part cclosure * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cclosure b0 * / c= * part cclosure * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cclosure b0 f1 * / c= * part cclosure * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cclosure b0 f1
+ |- ((!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e')))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 cT
+ |- (((!a. (!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add a) x))) f)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((exposed_face_of f) s))))) ==> ((\a. (!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add a) x))) f)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((exposed_face_of f) s))))) orig)) = ((\a. (!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add a) x))) f)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((exposed_face_of f) s))))) orig))
T c= c==> ! ! ! c= cexposed_face_of * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cexposed_face_of b1 b2 * / ! ! c= cexposed_face_of * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cexposed_face_of b1 b2 f0 * / ! ! c= cexposed_face_of * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cexposed_face_of b1 b2 f0
- (orig = orig) |- (!n. ((((\y. ((vector_add orig) y)) o xs) n) = ((vector_add orig) (xs n))))
T c==> c= f0 f0 ! c= co / cvector_add f0 b1 f1 b0 cvector_add f0 * f1 b0
- (orig = orig) |- ((\s. (!t. (((DISJOINT ((IMAGE (\y. ((vector_add orig) y))) s)) ((IMAGE (\y. ((vector_add orig) y))) t)) = ((DISJOINT s) t)))) s)
T c==> c= f0 f0 * / ! c= cDISJOINT * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cDISJOINT b0 b1 f1
+ |- (orig = ((vector_add orig) (vec (NUMERAL _0))))
T c= f0 cvector_add f0 cvec cNUMERAL c_0
+ |- ((\a. (!s. ((polyhedron ((IMAGE (\x. ((vector_add a) x))) s)) = (polyhedron s)))) orig)
T * / ! c= cpolyhedron * * part cIMAGE / cvector_add b0 b2 b1 cpolyhedron b1 f0
- (orig = orig) |- ((\a. (!b. ((open_interval (((vector_add orig) a) , ((vector_add orig) b))) = ((IMAGE (\x. ((vector_add orig) x))) (open_interval (a , b)))))) a)
T c==> c= f0 f0 * / ! c= * part copen_interval c, cvector_add f0 b0 cvector_add f0 b1 * * part cIMAGE / cvector_add f0 b2 * part copen_interval c, b0 b1 f1
- (orig = orig) |- (((!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s))) ==> ((\s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s))) s)) = ((\s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s))) s))
T c==> c= f0 f0 c= c==> ! c= cfacet_of * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cfacet_of f1 b0 * / c= cfacet_of * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cfacet_of f1 b0 f2 * / c= cfacet_of * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cfacet_of f1 b0 f2
- |- ((!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))) ==> (!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))))
T c==> ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1
- (orig = orig) |- (((!t. (((DISJOINT ((IMAGE (\y. ((vector_add orig) y))) s)) ((IMAGE (\y. ((vector_add orig) y))) t)) = ((DISJOINT s) t))) ==> ((\t. (((DISJOINT ((IMAGE (\y. ((vector_add orig) y))) s)) ((IMAGE (\y. ((vector_add orig) y))) t)) = ((DISJOINT s) t))) t)) = ((\t. (((DISJOINT ((IMAGE (\y. ((vector_add orig) y))) s)) ((IMAGE (\y. ((vector_add orig) y))) t)) = ((DISJOINT s) t))) t))
T c==> c= f0 f0 c= c==> ! c= cDISJOINT * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cDISJOINT f1 b0 * / c= cDISJOINT * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cDISJOINT f1 b0 f2 * / c= cDISJOINT * * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE / cvector_add f0 b1 b0 cDISJOINT f1 b0 f2
- (_1772504 = _1772506) |- ((_1772505 = _1772507) ==> ((_1772506 <= _1772507) \/ (~ (_1772504 <= _1772505))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c<= f1 f3 c~ c<= f0 f2
+ |- ((\a. (!s. ((fsigma ((IMAGE (\x. ((vector_add a) x))) s)) = (fsigma s)))) orig)
T * / ! c= cfsigma * * part cIMAGE / cvector_add b0 b2 b1 cfsigma b1 f0
- (orig = orig) |- (!s. (!x. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) DELETE ((IMAGE (\x. ((vector_add orig) x))) x)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s DELETE x)))))
T c==> c= f0 f0 ! ! c= * * part cDELETE * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 * * part cDELETE b0 b1
+ |- (((((CARD EMPTY) <= (dimindex UNIV)) ==> (negligible ((hull affine) EMPTY))) /\ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) ==> (!s. ((FINITE s) ==> (((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))))))
T c==> c/\ c==> c<= cCARD part cEMPTY cdimindex part cUNIV cnegligible * * part chull part caffine part cEMPTY ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 ! c==> cFINITE b0 c==> c<= cCARD b0 cdimindex part cUNIV cnegligible * * part chull part caffine b0
- (orig = orig) |- (((!s. ((path_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (path_connected s))) ==> ((\s. ((path_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (path_connected s))) s)) = ((\s. ((path_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (path_connected s))) s))
T c==> c= f0 f0 c= c==> ! c= cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 cpath_connected b0 * / c= cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 cpath_connected b0 f1 * / c= cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 cpath_connected b0 f1
- (orig = orig) |- (((!t. ((s <_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s <_c t))) ==> ((\t. ((s <_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s <_c t))) t)) = ((\t. ((s <_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s <_c t))) t))
T c==> c= f0 f0 c= c==> ! c= c<_c f1 * * part cIMAGE / cvector_add f0 b1 b0 c<_c f1 b0 * / c= c<_c f1 * * part cIMAGE / cvector_add f0 b1 b0 c<_c f1 b0 f2 * / c= c<_c f1 * * part cIMAGE / cvector_add f0 b1 b0 c<_c f1 b0 f2
- (orig = orig) |- (((!s. (!t. ((s >_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s >_c t)))) ==> ((\s. (!t. ((s >_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s >_c t)))) s)) = ((\s. (!t. ((s >_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s >_c t)))) s))
T c==> c= f0 f0 c= c==> ! ! c= c>_c b0 * * part cIMAGE / cvector_add f0 b2 b1 c>_c b0 b1 * / ! c= c>_c b0 * * part cIMAGE / cvector_add f0 b2 b1 c>_c b0 b1 f1 * / ! c= c>_c b0 * * part cIMAGE / cvector_add f0 b2 b1 c>_c b0 b1 f1
- (orig = orig) |- (((!s. ((barycentre ((IMAGE (\x. ((vector_add orig) x))) s)) = ((vector_add (((COND ((FINITE s) /\ (~ (s = EMPTY)))) orig) (vec (NUMERAL _0)))) (barycentre s)))) ==> ((\s. ((barycentre ((IMAGE (\x. ((vector_add orig) x))) s)) = ((vector_add (((COND ((FINITE s) /\ (~ (s = EMPTY)))) orig) (vec (NUMERAL _0)))) (barycentre s)))) s)) = ((\s. ((barycentre ((IMAGE (\x. ((vector_add orig) x))) s)) = ((vector_add (((COND ((FINITE s) /\ (~ (s = EMPTY)))) orig) (vec (NUMERAL _0)))) (barycentre s)))) s))
T c==> c= f0 f0 c= c==> ! c= cbarycentre * * part cIMAGE / cvector_add f0 b1 b0 cvector_add cCOND c/\ cFINITE b0 c~ c= b0 part cEMPTY f0 cvec cNUMERAL c_0 cbarycentre b0 * / c= cbarycentre * * part cIMAGE / cvector_add f0 b1 b0 cvector_add cCOND c/\ cFINITE b0 c~ c= b0 part cEMPTY f0 cvec cNUMERAL c_0 cbarycentre b0 f1 * / c= cbarycentre * * part cIMAGE / cvector_add f0 b1 b0 cvector_add cCOND c/\ cFINITE b0 c~ c= b0 part cEMPTY f0 cvec cNUMERAL c_0 cbarycentre b0 f1
+ |- ((\a. (!s. (!x. (((limit_point_of ((vector_add a) x)) ((IMAGE (\y. ((vector_add a) y))) s)) = ((limit_point_of x) s))))) orig)
T * / ! ! c= climit_point_of cvector_add b0 b2 * * part cIMAGE / cvector_add b0 b3 b1 climit_point_of b2 b1 f0
- (orig = orig) |- (((!y. ((midpoint (((vector_add orig) x) , ((vector_add orig) y))) = ((vector_add orig) (midpoint (x , y))))) ==> ((\y. ((midpoint (((vector_add orig) x) , ((vector_add orig) y))) = ((vector_add orig) (midpoint (x , y))))) y)) = ((\y. ((midpoint (((vector_add orig) x) , ((vector_add orig) y))) = ((vector_add orig) (midpoint (x , y))))) y))
T c==> c= f0 f0 c= c==> ! c= cmidpoint c, cvector_add f0 f1 cvector_add f0 b0 cvector_add f0 cmidpoint c, f1 b0 * / c= cmidpoint c, cvector_add f0 f1 cvector_add f0 b0 cvector_add f0 cmidpoint c, f1 b0 f2 * / c= cmidpoint c, cvector_add f0 f1 cvector_add f0 b0 cvector_add f0 cmidpoint c, f1 b0 f2
- (orig = orig) |- ((diameter ((IMAGE (\x. ((vector_add orig) x))) s)) = (diameter s))
T c==> c= f0 f0 c= cdiameter * * part cIMAGE / cvector_add f0 b0 f1 cdiameter f1
+ |- (((!a. (!s. ((FINITE ((IMAGE (\y. ((vector_add a) y))) s)) = (FINITE s)))) ==> ((\a. (!s. ((FINITE ((IMAGE (\y. ((vector_add a) y))) s)) = (FINITE s)))) orig)) = ((\a. (!s. ((FINITE ((IMAGE (\y. ((vector_add a) y))) s)) = (FINITE s)))) orig))
T c= c==> ! ! c= cFINITE * * part cIMAGE / cvector_add b0 b2 b1 cFINITE b1 * / ! c= cFINITE * * part cIMAGE / cvector_add b0 b2 b1 cFINITE b1 f0 * / ! c= cFINITE * * part cIMAGE / cvector_add b0 b2 b1 cFINITE b1 f0
+ |- (!s. (!t. (((DISJOINT ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((DISJOINT s) t))))
T c= cDISJOINT * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f2 cDISJOINT f1 f2
- (orig = orig) |- ((\t. (((homeomorphic ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homeomorphic s) t))) t)
T c==> c= f0 f0 * / c= chomeomorphic * * part cIMAGE / cvector_add f0 b1 f1 b0 chomeomorphic f1 b0 f2
- (orig = orig) |- ((\s. ((diameter ((IMAGE (\x. ((vector_add orig) x))) s)) = (diameter s))) s)
T c==> c= f0 f0 * / c= cdiameter * * part cIMAGE / cvector_add f0 b1 b0 cdiameter b0 f1
- |- ((!s'. (((x IN s) \/ (!n. ((~ ((x INSERT s) HAS_SIZE n)) \/ (~ (n <= (dimindex UNIV)))))) \/ (negligible ((hull affine) (x INSERT s'))))) = (((x IN s) \/ (!n. ((~ ((x INSERT s) HAS_SIZE n)) \/ (~ (n <= (dimindex UNIV)))))) \/ (!s. (negligible ((hull affine) (x INSERT s))))))
T c= ! c\/ c\/ cIN f0 f1 ! c\/ c~ cHAS_SIZE * * part cINSERT f0 f1 b1 c~ c<= b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 b0 c\/ c\/ cIN f0 f1 ! c\/ c~ cHAS_SIZE * * part cINSERT f0 f1 b0 c~ c<= b0 cdimindex part cUNIV ! cnegligible * * part chull part caffine * * part cINSERT f0 b0
+ |- ((!x. ((FINITE (x INSERT s)) \/ (~ (FINITE s)))) = ((!x. (FINITE (x INSERT s))) \/ (~ (FINITE s))))
T c= ! c\/ cFINITE * * part cINSERT b0 f0 c~ cFINITE f0 c\/ ! cFINITE * * part cINSERT b0 f0 c~ cFINITE f0
- (orig = orig) |- (((vector_sub ((vector_add orig) x)) ((vector_add orig) y)) = ((vector_sub x) y))
T c==> c= f0 f0 c= cvector_sub cvector_add f0 f1 cvector_add f0 f2 cvector_sub f1 f2
- (orig = orig) |- (!s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) DIFF ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s DIFF t)))))
T c==> c= f0 f0 ! ! c= * * part cDIFF * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE / cvector_add f0 b2 * * part cDIFF b0 b1
+ (orig = orig) |- ((\s. (((hull affine) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) ((hull affine) s)))) s)
T c==> c= f0 f0 * / c= * * part chull part caffine * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part chull part caffine b0 f1
+ |- ((\e'. ((((vec (NUMERAL _0)) IN s) = g') ==> ((g' ==> ((CARD s) = t')) ==> (((~ g') ==> ((SUC (CARD s)) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN s)) (CARD s)) (SUC (CARD s))) = (((COND g') t') e')))))) e')
T * / c==> c= cIN cvec cNUMERAL c_0 f0 f1 c==> c==> f1 c= cCARD f0 f2 c==> c==> c~ f1 c= cSUC cCARD f0 b0 c= cCOND cIN cvec cNUMERAL c_0 f0 cCARD f0 cSUC cCARD f0 cCOND f1 f2 b0 f3
+ (~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) |- ((!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) ==> F)
T c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF
+ |- (((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))) = ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))))))
T c= c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- (((!a. (!f. (!s. (((face_of ((IMAGE (\x. ((vector_add a) x))) f)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((face_of f) s))))) ==> ((\a. (!f. (!s. (((face_of ((IMAGE (\x. ((vector_add a) x))) f)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((face_of f) s))))) orig)) = ((\a. (!f. (!s. (((face_of ((IMAGE (\x. ((vector_add a) x))) f)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((face_of f) s))))) orig))
T c= c==> ! ! ! c= cface_of * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cface_of b1 b2 * / ! ! c= cface_of * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cface_of b1 b2 f0 * / ! ! c= cface_of * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cface_of b1 b2 f0
+ |- (((!a. (!u. ((UNIONS ((IMAGE (IMAGE (\y. ((vector_add a) y)))) u)) = ((IMAGE (\y. ((vector_add a) y))) (UNIONS u))))) ==> ((\a. (!u. ((UNIONS ((IMAGE (IMAGE (\y. ((vector_add a) y)))) u)) = ((IMAGE (\y. ((vector_add a) y))) (UNIONS u))))) orig)) = ((\a. (!u. ((UNIONS ((IMAGE (IMAGE (\y. ((vector_add a) y)))) u)) = ((IMAGE (\y. ((vector_add a) y))) (UNIONS u))))) orig))
T c= c==> ! ! c= * part cUNIONS * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cUNIONS b1 * / ! c= * part cUNIONS * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cUNIONS b1 f0 * / ! c= * part cUNIONS * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cUNIONS b1 f0
- (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0
+ |- ((\a. (!x. (!y. ((distance (((vector_add a) x) , ((vector_add a) y))) = (distance (x , y)))))) orig)
T * / ! ! c= cdistance c, cvector_add b0 b1 cvector_add b0 b2 cdistance c, b1 b2 f0
- (orig = orig) |- (((!x. (!y. (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add orig) x)) ((vector_add orig) y))) = ((vector_add orig) ((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y)))))) ==> ((\x. (!y. (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add orig) x)) ((vector_add orig) y))) = ((vector_add orig) ((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y)))))) x)) = ((\x. (!y. (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add orig) x)) ((vector_add orig) y))) = ((vector_add orig) ((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y)))))) x))
T c==> c= f0 f0 c= c==> ! ! c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add f0 b0 cvector_add f0 b1 cvector_add f0 c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b0 b1 * / ! c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add f0 b0 cvector_add f0 b1 cvector_add f0 c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b0 b1 f1 * / ! c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add f0 b0 cvector_add f0 b1 cvector_add f0 c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b0 b1 f1
- (orig = orig) |- ((\g1. (!g2. (((++ ((\x. ((vector_add orig) x)) o g1)) ((\x. ((vector_add orig) x)) o g2)) = ((\x. ((vector_add orig) x)) o ((++ g1) g2))))) g1)
T c==> c= f0 f0 * / ! c= * * part c++ * * part co / cvector_add f0 b2 b0 * * part co / cvector_add f0 b2 b1 * * part co / cvector_add f0 b2 * * part c++ b0 b1 f1
- (orig = orig) |- ((COUNTABLE ((IMAGE (\y. ((vector_add orig) y))) s)) = (COUNTABLE s))
T c==> c= f0 f0 c= cCOUNTABLE * * part cIMAGE / cvector_add f0 b0 f1 cCOUNTABLE f1
- (orig = orig) |- ((((IMAGE (\y. ((vector_add orig) y))) s) PSUBSET ((IMAGE (\y. ((vector_add orig) y))) t)) = (s PSUBSET t))
T c==> c= f0 f0 c= cPSUBSET * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 cPSUBSET f1 f2
+ (orig = orig) |- ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))))))))))
T c==> c= f0 f0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((\P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) P)
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 * / c= ! * b0 b1 ! * b0 cvector_add f0 b1 f1
- (orig = orig) |- (((!s. ((INFINITE ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (INFINITE s))) ==> ((\s. ((INFINITE ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (INFINITE s))) s)) = ((\s. ((INFINITE ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (INFINITE s))) s))
T c==> c= f0 f0 c= c==> ! c= cINFINITE * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 cINFINITE b0 * / c= cINFINITE * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 cINFINITE b0 f1 * / c= cINFINITE * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 cINFINITE b0 f1
+ |- ((\a. (!s. ((outside ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (outside s))))) orig)
T * / ! c= * part coutside * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part coutside b1 f0
+ |- (((!a. (!g. ((rectifiable_path ((\x. ((vector_add a) x)) o g)) = (rectifiable_path g)))) ==> ((\a. (!g. ((rectifiable_path ((\x. ((vector_add a) x)) o g)) = (rectifiable_path g)))) orig)) = ((\a. (!g. ((rectifiable_path ((\x. ((vector_add a) x)) o g)) = (rectifiable_path g)))) orig))
T c= c==> ! ! c= crectifiable_path * * part co / cvector_add b0 b2 b1 crectifiable_path b1 * / ! c= crectifiable_path * * part co / cvector_add b0 b2 b1 crectifiable_path b1 f0 * / ! c= crectifiable_path * * part co / cvector_add b0 b2 b1 crectifiable_path b1 f0
- (orig = orig) |- (((!t. ((s <=_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s <=_c t))) ==> ((\t. ((s <=_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s <=_c t))) t)) = ((\t. ((s <=_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s <=_c t))) t))
T c==> c= f0 f0 c= c==> ! c= c<=_c f1 * * part cIMAGE / cvector_add f0 b1 b0 c<=_c f1 b0 * / c= c<=_c f1 * * part cIMAGE / cvector_add f0 b1 b0 c<=_c f1 b0 f2 * / c= c<=_c f1 * * part cIMAGE / cvector_add f0 b1 b0 c<=_c f1 b0 f2
- (orig = orig) |- ((\s. (!t. (((homeomorphic ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homeomorphic s) t)))) s)
T c==> c= f0 f0 * / ! c= chomeomorphic * * part cIMAGE / cvector_add f0 b2 b0 b1 chomeomorphic b0 b1 f1
- (orig = orig) |- (((!s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) UNION ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s UNION t))))) ==> ((\s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) UNION ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s UNION t))))) s)) = ((\s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) UNION ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s UNION t))))) s))
T c==> c= f0 f0 c= c==> ! ! c= * * part cUNION * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE / cvector_add f0 b2 * * part cUNION b0 b1 * / ! c= * * part cUNION * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE / cvector_add f0 b2 * * part cUNION b0 b1 f1 * / ! c= * * part cUNION * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE / cvector_add f0 b2 * * part cUNION b0 b1 f1
- |- ((\p'. (!q'. (((~ ((vec (NUMERAL _0)) IN s)) = p') ==> ((p' ==> (((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = q')) ==> (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = (p' ==> q')))))) p')
T * / ! c==> c= c~ cIN cvec cNUMERAL c_0 f0 b0 c==> c==> b0 c= c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b1 c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> b0 b1 f2
+ |- (((!a. (!p. (!x. (!y. ((((COND p) ((vector_add a) x)) ((vector_add a) y)) = ((vector_add a) (((COND p) x) y))))))) ==> ((\a. (!p. (!x. (!y. ((((COND p) ((vector_add a) x)) ((vector_add a) y)) = ((vector_add a) (((COND p) x) y))))))) orig)) = ((\a. (!p. (!x. (!y. ((((COND p) ((vector_add a) x)) ((vector_add a) y)) = ((vector_add a) (((COND p) x) y))))))) orig))
T c= c==> ! ! ! ! c= cCOND b1 cvector_add b0 b2 cvector_add b0 b3 cvector_add b0 cCOND b1 b2 b3 * / ! ! ! c= cCOND b1 cvector_add b0 b2 cvector_add b0 b3 cvector_add b0 cCOND b1 b2 b3 f0 * / ! ! ! c= cCOND b1 cvector_add b0 b2 cvector_add b0 b3 cvector_add b0 cCOND b1 b2 b3 f0
- (orig = orig) |- (((!s. ((relative_frontier ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (relative_frontier s)))) ==> ((\s. ((relative_frontier ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (relative_frontier s)))) s)) = ((\s. ((relative_frontier ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (relative_frontier s)))) s))
T c==> c= f0 f0 c= c==> ! c= * part crelative_frontier * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part crelative_frontier b0 * / c= * part crelative_frontier * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part crelative_frontier b0 f1 * / c= * part crelative_frontier * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part crelative_frontier b0 f1
- (orig = orig) |- (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add orig) x)) ((vector_add orig) y))) = ((vector_add orig) ((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y))))
T c==> c= f0 f0 c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add f0 f1 cvector_add f0 f2 cvector_add f0 c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f1 f2
+ (orig = orig) |- ((!s. ((simply_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (simply_connected s))) /\ ((!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homotopy_equivalent s) t)))) /\ ((!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) /\ ((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) /\ ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))))))))))))))
T c==> c= f0 f0 c/\ ! c= csimply_connected * * part cIMAGE / cvector_add f0 b1 b0 csimply_connected b0 c/\ ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b2 b0 b1 chomotopy_equivalent b0 b1 c/\ ! ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 c/\ ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!a. (!s. ((inside ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (inside s))))) ==> ((\a. (!s. ((inside ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (inside s))))) orig)) = ((\a. (!s. ((inside ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (inside s))))) orig))
T c= c==> ! ! c= * part cinside * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cinside b1 * / ! c= * part cinside * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cinside b1 f0 * / ! c= * part cinside * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cinside b1 f0
- |- ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> ((negligible (span s)) = q')) ==> ((((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible (span s))) = (((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> q')))
T c==> c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV c= cnegligible * part cspan f0 f2 c= c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV f2
+ |- (((!a. (!s. (!t. (((homeomorphic s) ((IMAGE (\x. ((vector_add a) x))) t)) = ((homeomorphic s) t))))) ==> ((\a. (!s. (!t. (((homeomorphic s) ((IMAGE (\x. ((vector_add a) x))) t)) = ((homeomorphic s) t))))) orig)) = ((\a. (!s. (!t. (((homeomorphic s) ((IMAGE (\x. ((vector_add a) x))) t)) = ((homeomorphic s) t))))) orig))
T c= c==> ! ! ! c= chomeomorphic b1 * * part cIMAGE / cvector_add b0 b3 b2 chomeomorphic b1 b2 * / ! ! c= chomeomorphic b1 * * part cIMAGE / cvector_add b0 b3 b2 chomeomorphic b1 b2 f0 * / ! ! c= chomeomorphic b1 * * part cIMAGE / cvector_add b0 b3 b2 chomeomorphic b1 b2 f0
+ ((m <= n) /\ (n < p)) |- (((m <= n) /\ (n < p)) /\ ((!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) ==> (m < p)))
T c==> c/\ c<= f0 f1 c< f1 f2 c/\ c/\ c<= f0 f1 c< f1 f2 c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 c< f0 f2
- (orig = orig) |- ((((COND p) ((IMAGE (\y. ((vector_add orig) y))) s)) ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (((COND p) s) t)))
T c==> c= f0 f0 c= * * * part cCOND f1 * * part cIMAGE / cvector_add f0 b0 f2 * * part cIMAGE / cvector_add f0 b0 f3 * * part cIMAGE / cvector_add f0 b0 * * * part cCOND f1 f2 f3
+ |- ((\a. (!s. (!t. ((hausdist (((IMAGE (\x. ((vector_add a) x))) s) , ((IMAGE (\x. ((vector_add a) x))) t))) = (hausdist (s , t)))))) orig)
T * / ! ! c= chausdist c, * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 chausdist c, b1 b2 f0
- (((!P. ((!x. (P x)) = (!x. (P ((vector_add _1772522) x))))) /\ ((!P. ((?x. (P x)) = (?x. (P ((vector_add _1772522) x))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))))) /\ ((!Q. ((!s. (Q s)) = (!s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!Q. ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((!g. (P g)) = (!g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!P. ((?g. (P g)) = (?g. (P ((\x. ((vector_add _1772522) x)) o g))))) /\ ((!Q. ((!l. (Q l)) = (!l. (Q ((MAP (\x. ((vector_add _1772522) x))) l))))) /\ (!Q. ((?l. (Q l)) = (?l. (Q ((MAP (\x. ((vector_add _1772522) x))) l)))))))))))))))) /\ ((!P. ((GSPEC (\GEN%PVAR%460. (?x. (((SETSPEC GEN%PVAR%460) (P x)) x)))) = ((IMAGE (\x. ((vector_add _1772522) x))) (GSPEC (\GEN%PVAR%461. (?x. (((SETSPEC GEN%PVAR%461) (P ((vector_add _1772522) x))) x))))))) /\ ((!Q. ((GSPEC (\GEN%PVAR%462. (?s. (((SETSPEC GEN%PVAR%462) (Q s)) s)))) = ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%463. (?s. (((SETSPEC GEN%PVAR%463) (Q ((IMAGE (\x. ((vector_add _1772522) x))) s))) s))))))) /\ (!R. ((GSPEC (\GEN%PVAR%464. (?l. (((SETSPEC GEN%PVAR%464) (R l)) l)))) = ((IMAGE (MAP (\x. ((vector_add _1772522) x)))) (GSPEC (\GEN%PVAR%465. (?l. (((SETSPEC GEN%PVAR%465) (R ((MAP (\x. ((vector_add _1772522) x))) l))) l)))))))))) |- ((?s. (Q s)) = (?s. (Q ((IMAGE (IMAGE (\x. ((vector_add _1772522) x)))) s))))
T c==> c/\ c/\ ! c= ! * b0 b1 ! * b0 cvector_add f0 b1 c/\ ! c= c? / * b0 b1 c? / * b0 cvector_add f0 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= c? / * b0 b1 c? / * b0 * * part co / cvector_add f0 b2 b1 c/\ ! c= ! * b0 b1 ! * b0 cMAP / cvector_add f0 b2 b1 ! c= c? / * b0 b1 c? / * b0 cMAP / cvector_add f0 b2 b1 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cvector_add f0 b2 b2 c/\ ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 * * part cIMAGE / cvector_add f0 b3 b2 b2 ! c= * part cGSPEC / c? / cSETSPEC b1 * b0 b2 b2 * * part cIMAGE * part cMAP / cvector_add f0 b1 * part cGSPEC / c? / cSETSPEC b1 * b0 cMAP / cvector_add f0 b3 b2 b2 c= c? / * f1 b0 c? / * f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0
- (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) |- (!s. (!x. ((~ (FINITE (x INSERT s))) \/ (FINITE s))))
T c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 ! ! c\/ c~ cFINITE * * part cINSERT b1 b0 cFINITE b0
+ |- ((\a. (!s. (!t. (((closed_in ((subtopology euclidean) ((IMAGE (\x. ((vector_add a) x))) t))) ((IMAGE (\x. ((vector_add a) x))) s)) = ((closed_in ((subtopology euclidean) t)) s))))) orig)
T * / ! ! c= cclosed_in csubtopology ceuclidean * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE / cvector_add b0 b3 b1 cclosed_in csubtopology ceuclidean b2 b1 f0
- (orig = orig) |- ((\s. (!b. (!c. ((((vector_add ((vector_add orig) b)) c) IN ((IMAGE (\x. ((vector_add orig) x))) s)) = (((vector_add b) c) IN s))))) s)
T c==> c= f0 f0 * / ! ! c= cIN cvector_add cvector_add f0 b1 b2 * * part cIMAGE / cvector_add f0 b3 b0 cIN cvector_add b1 b2 b0 f1
+ (~ ((vec (NUMERAL _0)) IN s)), (FINITE s), ((SUC (CARD s)) = n), (n <= (dimindex UNIV)) |- ((((dim (span s)) < (dimindex UNIV)) ==> (negligible (span s))) = (negligible (span s)))
T c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV c= c==> c< cdim * part cspan f0 cdimindex part cUNIV cnegligible * part cspan f0 cnegligible * part cspan f0
+ |- (((!a. (!g. ((arc ((\x. ((vector_add a) x)) o g)) = (arc g)))) ==> ((\a. (!g. ((arc ((\x. ((vector_add a) x)) o g)) = (arc g)))) orig)) = ((\a. (!g. ((arc ((\x. ((vector_add a) x)) o g)) = (arc g)))) orig))
T c= c==> ! ! c= carc * * part co / cvector_add b0 b2 b1 carc b1 * / ! c= carc * * part co / cvector_add b0 b2 b1 carc b1 f0 * / ! c= carc * * part co / cvector_add b0 b2 b1 carc b1 f0
- (orig = orig) |- (!p. (!s. (!t. ((((COND p) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (((COND p) s) t))))))
T c==> c= f0 f0 ! ! ! c= * * * part cCOND b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b3 b2 * * part cIMAGE * part cIMAGE / cvector_add f0 b3 * * * part cCOND b0 b1 b2
+ (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))), ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- (((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) /\ F)
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c/\ c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 cF
- (orig = orig) |- (!x. (!s. ((((IMAGE (\x. ((vector_add orig) x))) x) INSERT ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (x INSERT s)))))
T c==> c= f0 f0 ! ! c= * * part cINSERT * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add f0 b2 * * part cINSERT b0 b1
+ |- ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))))))))
T c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
- (orig = orig) |- ((\t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) UNION ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s UNION t)))) t)
T c==> c= f0 f0 * / c= * * part cUNION * * part cIMAGE * part cIMAGE / cvector_add f0 b1 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE * part cIMAGE / cvector_add f0 b1 * * part cUNION f1 b0 f2
- (orig = orig) |- (((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) ==> ((\t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) t)) = ((\t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) t))
T c==> c= f0 f0 c= c==> ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 * / ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 f1 * / ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 f1
- |- (((!p'. (!q'. (((FINITE s) = p') ==> ((p' ==> ((((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = q')) ==> (((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((FINITE s) = p') ==> ((p' ==> ((((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = q')) ==> (((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((FINITE s) = p') ==> ((p' ==> ((((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = q')) ==> (((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cFINITE f0 b0 c==> c==> b0 c= c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b1 c= c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> b0 b1 * / ! c==> c= cFINITE f0 b0 c==> c==> b0 c= c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b1 c= c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> b0 b1 f2 * / ! c==> c= cFINITE f0 b0 c==> c==> b0 c= c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b1 c= c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> b0 b1 f2
- |- (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = ((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))))
T c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
+ |- ((\a. (!s. (((hull convex) ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) ((hull convex) s))))) orig)
T * / ! c= * * part chull part cconvex * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * * part chull part cconvex b1 f0
+ (orig = orig) |- ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))
T c==> c= f0 f0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- ((~ (x IN s)) /\ (FINITE s))
T c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c/\ c~ cIN f1 f0 cFINITE f0
+ |- ((\a. (!f. (!s. (((face_of ((IMAGE (\x. ((vector_add a) x))) f)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((face_of f) s))))) orig)
T * / ! ! c= cface_of * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cface_of b1 b2 f0
+ (orig = orig) |- ((!s. ((inside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (inside s)))) /\ ((!s. ((outside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (outside s)))) /\ ((!s. ((simply_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (simply_connected s))) /\ ((!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homotopy_equivalent s) t)))) /\ ((!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) /\ ((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) /\ ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))))))))))))))))
T c==> c= f0 f0 c/\ ! c= * part cinside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cinside b0 c/\ ! c= * part coutside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part coutside b0 c/\ ! c= csimply_connected * * part cIMAGE / cvector_add f0 b1 b0 csimply_connected b0 c/\ ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b2 b0 b1 chomotopy_equivalent b0 b1 c/\ ! ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 c/\ ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) |- ((!s. (!n. ((s HAS_SIZE n) \/ ((~ (FINITE s)) \/ (~ ((CARD s) = n)))))) /\ (!s. (!n. ((~ (s HAS_SIZE n)) \/ ((FINITE s) /\ ((CARD s) = n))))))
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c/\ ! ! c\/ cHAS_SIZE b0 b1 c\/ c~ cFINITE b0 c~ c= cCARD b0 b1 ! ! c\/ c~ cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1
+ |- (((!a. (!s. (!t. ((((IMAGE (\y. ((vector_add a) y))) s) PSUBSET ((IMAGE (\y. ((vector_add a) y))) t)) = (s PSUBSET t))))) ==> ((\a. (!s. (!t. ((((IMAGE (\y. ((vector_add a) y))) s) PSUBSET ((IMAGE (\y. ((vector_add a) y))) t)) = (s PSUBSET t))))) orig)) = ((\a. (!s. (!t. ((((IMAGE (\y. ((vector_add a) y))) s) PSUBSET ((IMAGE (\y. ((vector_add a) y))) t)) = (s PSUBSET t))))) orig))
T c= c==> ! ! ! c= cPSUBSET * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cPSUBSET b1 b2 * / ! ! c= cPSUBSET * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cPSUBSET b1 b2 f0 * / ! ! c= cPSUBSET * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cPSUBSET b1 b2 f0
+ |- ((\a. (!s. (((locally path_connected) ((IMAGE (\x. ((vector_add a) x))) s)) = ((locally path_connected) s)))) orig)
T * / ! c= clocally part cpath_connected * * part cIMAGE / cvector_add b0 b2 b1 clocally part cpath_connected b1 f0
+ |- ((\a. (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) PSUBSET ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = (s PSUBSET t))))) orig)
T * / ! ! c= cPSUBSET * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 cPSUBSET b1 b2 f0
+ |- (((!a. (!s. ((negligible ((IMAGE (\x. ((vector_add a) x))) s)) = (negligible s)))) ==> ((\a. (!s. ((negligible ((IMAGE (\x. ((vector_add a) x))) s)) = (negligible s)))) orig)) = ((\a. (!s. ((negligible ((IMAGE (\x. ((vector_add a) x))) s)) = (negligible s)))) orig))
T c= c==> ! ! c= cnegligible * * part cIMAGE / cvector_add b0 b2 b1 cnegligible b1 * / ! c= cnegligible * * part cIMAGE / cvector_add b0 b2 b1 cnegligible b1 f0 * / ! c= cnegligible * * part cIMAGE / cvector_add b0 b2 b1 cnegligible b1 f0
+ |- (((!a. (!s. ((affine ((IMAGE (\x. ((vector_add a) x))) s)) = (affine s)))) ==> ((\a. (!s. ((affine ((IMAGE (\x. ((vector_add a) x))) s)) = (affine s)))) orig)) = ((\a. (!s. ((affine ((IMAGE (\x. ((vector_add a) x))) s)) = (affine s)))) orig))
T c= c==> ! ! c= caffine * * part cIMAGE / cvector_add b0 b2 b1 caffine b1 * / ! c= caffine * * part cIMAGE / cvector_add b0 b2 b1 caffine b1 f0 * / ! c= caffine * * part cIMAGE / cvector_add b0 b2 b1 caffine b1 f0
+ (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- (((((real_ge ((real_add (real_of_int _1772535)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add (real_of_int _1772535)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add (real_of_int _1772535)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0
+ |- ((\a. (!x. (!y. (!z. (((between ((vector_add a) x)) (((vector_add a) y) , ((vector_add a) z))) = ((between x) (y , z))))))) orig)
T * / ! ! ! c= cbetween cvector_add b0 b1 c, cvector_add b0 b2 cvector_add b0 b3 cbetween b1 c, b2 b3 f0
+ |- (((!a. (!s. ((outside ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (outside s))))) ==> ((\a. (!s. ((outside ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (outside s))))) orig)) = ((\a. (!s. ((outside ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (outside s))))) orig))
T c= c==> ! ! c= * part coutside * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part coutside b1 * / ! c= * part coutside * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part coutside b1 f0 * / ! c= * part coutside * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part coutside b1 f0
+ |- (((!a. (!s. (!t. (((closed_in ((subtopology euclidean) ((IMAGE (\x. ((vector_add a) x))) t))) ((IMAGE (\x. ((vector_add a) x))) s)) = ((closed_in ((subtopology euclidean) t)) s))))) ==> ((\a. (!s. (!t. (((closed_in ((subtopology euclidean) ((IMAGE (\x. ((vector_add a) x))) t))) ((IMAGE (\x. ((vector_add a) x))) s)) = ((closed_in ((subtopology euclidean) t)) s))))) orig)) = ((\a. (!s. (!t. (((closed_in ((subtopology euclidean) ((IMAGE (\x. ((vector_add a) x))) t))) ((IMAGE (\x. ((vector_add a) x))) s)) = ((closed_in ((subtopology euclidean) t)) s))))) orig))
T c= c==> ! ! ! c= cclosed_in csubtopology ceuclidean * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE / cvector_add b0 b3 b1 cclosed_in csubtopology ceuclidean b2 b1 * / ! ! c= cclosed_in csubtopology ceuclidean * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE / cvector_add b0 b3 b1 cclosed_in csubtopology ceuclidean b2 b1 f0 * / ! ! c= cclosed_in csubtopology ceuclidean * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE / cvector_add b0 b3 b1 cclosed_in csubtopology ceuclidean b2 b1 f0
+ |- ((\s. ((dim (span s)) = (dim s))) s)
T * / c= cdim * part cspan b0 cdim b0 f0
+ |- ((\a. (!s. ((simply_connected ((IMAGE (\x. ((vector_add a) x))) s)) = (simply_connected s)))) orig)
T * / ! c= csimply_connected * * part cIMAGE / cvector_add b0 b2 b1 csimply_connected b1 f0
+ ((\n. ((m <= n) /\ (n < p))) n) |- ((m <= n) /\ (n < p))
T c==> * / c/\ c<= f0 b0 c< b0 f1 f2 c/\ c<= f0 f2 c< f2 f1
+ |- ((\a. (!xs. (!n. ((((IMAGE (\x. ((vector_add a) x))) o xs) n) = ((IMAGE (\x. ((vector_add a) x))) (xs n)))))) orig)
T * / ! ! c= * * * part co * part cIMAGE / cvector_add b0 b3 b1 b2 * * part cIMAGE / cvector_add b0 b3 * b1 b2 f0
+ |- (((!a. (!s. (((hull affine) ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) ((hull affine) s))))) ==> ((\a. (!s. (((hull affine) ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) ((hull affine) s))))) orig)) = ((\a. (!s. (((hull affine) ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) ((hull affine) s))))) orig))
T c= c==> ! ! c= * * part chull part caffine * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * * part chull part caffine b1 * / ! c= * * part chull part caffine * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * * part chull part caffine b1 f0 * / ! c= * * part chull part caffine * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * * part chull part caffine b1 f0
+ |- ((\a. (!s. ((relative_frontier ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (relative_frontier s))))) orig)
T * / ! c= * part crelative_frontier * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part crelative_frontier b1 f0
+ |- (!s. (!n. (((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible (span s)))))
T c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
+ |- (((!a. (!x. (!s. (((extreme_point_of ((vector_add a) x)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((extreme_point_of x) s))))) ==> ((\a. (!x. (!s. (((extreme_point_of ((vector_add a) x)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((extreme_point_of x) s))))) orig)) = ((\a. (!x. (!s. (((extreme_point_of ((vector_add a) x)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((extreme_point_of x) s))))) orig))
T c= c==> ! ! ! c= cextreme_point_of cvector_add b0 b1 * * part cIMAGE / cvector_add b0 b3 b2 cextreme_point_of b1 b2 * / ! ! c= cextreme_point_of cvector_add b0 b1 * * part cIMAGE / cvector_add b0 b3 b2 cextreme_point_of b1 b2 f0 * / ! ! c= cextreme_point_of cvector_add b0 b1 * * part cIMAGE / cvector_add b0 b3 b2 cextreme_point_of b1 b2 f0
+ |- (UNIV = ((IMAGE (\x. ((vector_add orig) x))) UNIV))
T c= part cUNIV * * part cIMAGE / cvector_add f0 b0 part cUNIV
+ (orig = orig) |- ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))))))))
T c==> c= f0 f0 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- ((~ ((vec (NUMERAL _0)) IN s)) ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))))
T c==> c~ cIN cvec cNUMERAL c_0 f0 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
+ |- (((!a. (!s. (!b. (!c. ((((vector_add ((vector_add a) b)) c) IN ((IMAGE (\x. ((vector_add a) x))) s)) = (((vector_add b) c) IN s)))))) ==> ((\a. (!s. (!b. (!c. ((((vector_add ((vector_add a) b)) c) IN ((IMAGE (\x. ((vector_add a) x))) s)) = (((vector_add b) c) IN s)))))) orig)) = ((\a. (!s. (!b. (!c. ((((vector_add ((vector_add a) b)) c) IN ((IMAGE (\x. ((vector_add a) x))) s)) = (((vector_add b) c) IN s)))))) orig))
T c= c==> ! ! ! ! c= cIN cvector_add cvector_add b0 b2 b3 * * part cIMAGE / cvector_add b0 b4 b1 cIN cvector_add b2 b3 b1 * / ! ! ! c= cIN cvector_add cvector_add b0 b2 b3 * * part cIMAGE / cvector_add b0 b4 b1 cIN cvector_add b2 b3 b1 f0 * / ! ! ! c= cIN cvector_add cvector_add b0 b2 b3 * * part cIMAGE / cvector_add b0 b4 b1 cIN cvector_add b2 b3 b1 f0
+ |- (((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))))) = ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))))))
T c= c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ (~ ((vec (NUMERAL _0)) IN s)) |- ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))))
T c==> c~ cIN cvec cNUMERAL c_0 f0 c/\ c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
+ |- ((\a. (!s. ((closed ((IMAGE (\x. ((vector_add a) x))) s)) = (closed s)))) orig)
T * / ! c= cclosed * * part cIMAGE / cvector_add b0 b2 b1 cclosed b1 f0
+ |- (!p. (!s. (!t. ((((COND p) ((IMAGE (\y. ((vector_add orig) y))) s)) ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (((COND p) s) t))))))
T c= * * * part cCOND f0 * * part cIMAGE / cvector_add f1 b0 f2 * * part cIMAGE / cvector_add f1 b0 f3 * * part cIMAGE / cvector_add f1 b0 * * * part cCOND f0 f2 f3
+ |- ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))
T c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- ((\a. (!s. (!t. ((((IMAGE (\x. ((vector_add a) x))) s) >_c t) = (s >_c t))))) orig)
T * / ! ! c= c>_c * * part cIMAGE / cvector_add b0 b3 b1 b2 c>_c b1 b2 f0
+ |- ((\a. (!z. (!f. (((continuous f) (at ((vector_add a) z))) = ((continuous (\x. (f ((vector_add a) x)))) (at z)))))) orig)
T * / ! ! c= ccontinuous b2 cat cvector_add b0 b1 ccontinuous / * b2 cvector_add b0 b3 cat b1 f0
+ (FINITE s) |- (((CARD s) < (dimindex UNIV)) = (((dim (span s)) <= (CARD s)) /\ ((CARD s) < (dimindex UNIV))))
T c==> cFINITE f0 c= c< cCARD f0 cdimindex part cUNIV c/\ c<= cdim * part cspan f0 cCARD f0 c< cCARD f0 cdimindex part cUNIV
+ |- (((!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) ==> ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) (CARD s))) = ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) (CARD s)))
T c= c==> ! cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 cCARD f0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 cCARD f0
+ |- (((!p'. (!q'. ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) = p') ==> ((p' ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = q')) ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) = p') ==> ((p' ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = q')) ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) = p') ==> ((p' ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = q')) ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 b0 c==> c==> b0 c= c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b1 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> b0 b1 * / ! c==> c= c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 b0 c==> c==> b0 c= c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b1 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> b0 b1 f2 * / ! c==> c= c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 b0 c==> c==> b0 c= c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 b1 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> b0 b1 f2
+ |- ((EMPTY = ((IMAGE (\x. ((vector_add orig) x))) EMPTY)) /\ ((EMPTY = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) EMPTY)) /\ ((UNIV = ((IMAGE (\x. ((vector_add orig) x))) UNIV)) /\ ((UNIV = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) UNIV)) /\ (NIL = ((MAP (\x. ((vector_add orig) x))) NIL))))))
T c/\ c= part cEMPTY * * part cIMAGE / cvector_add f0 b0 part cEMPTY c/\ c= part cEMPTY * * part cIMAGE * part cIMAGE / cvector_add f0 b0 part cEMPTY c/\ c= part cUNIV * * part cIMAGE / cvector_add f0 b0 part cUNIV c/\ c= part cUNIV * * part cIMAGE * part cIMAGE / cvector_add f0 b0 part cUNIV c= cNIL cMAP / cvector_add f0 b0 cNIL
+ |- (((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))) = ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))
T c= c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- (((~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) ==> ((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) ==> ((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> (~ (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))))))) = ((~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) ==> ((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) ==> ((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) ==> F)))))
T c= c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c~ ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF
+ |- (((!a. (!s. ((fsigma ((IMAGE (\x. ((vector_add a) x))) s)) = (fsigma s)))) ==> ((\a. (!s. ((fsigma ((IMAGE (\x. ((vector_add a) x))) s)) = (fsigma s)))) orig)) = ((\a. (!s. ((fsigma ((IMAGE (\x. ((vector_add a) x))) s)) = (fsigma s)))) orig))
T c= c==> ! ! c= cfsigma * * part cIMAGE / cvector_add b0 b2 b1 cfsigma b1 * / ! c= cfsigma * * part cIMAGE / cvector_add b0 b2 b1 cfsigma b1 f0 * / ! c= cfsigma * * part cIMAGE / cvector_add b0 b2 b1 cfsigma b1 f0
+ |- ((!n. (((x IN s) \/ ((~ ((x INSERT s) HAS_SIZE n)) \/ (~ (n <= (dimindex UNIV))))) \/ (negligible ((hull affine) (x INSERT s))))) = ((!n. ((x IN s) \/ ((~ ((x INSERT s) HAS_SIZE n)) \/ (~ (n <= (dimindex UNIV)))))) \/ (negligible ((hull affine) (x INSERT s)))))
T c= ! c\/ c\/ cIN f0 f1 c\/ c~ cHAS_SIZE * * part cINSERT f0 f1 b0 c~ c<= b0 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 f1 c\/ ! c\/ cIN f0 f1 c\/ c~ cHAS_SIZE * * part cINSERT f0 f1 b0 c~ c<= b0 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 f1
+ |- (((!a. (!s. (!t. ((((IMAGE (\y. ((vector_add a) y))) s) = ((IMAGE (\y. ((vector_add a) y))) t)) = (s = t))))) ==> ((\a. (!s. (!t. ((((IMAGE (\y. ((vector_add a) y))) s) = ((IMAGE (\y. ((vector_add a) y))) t)) = (s = t))))) orig)) = ((\a. (!s. (!t. ((((IMAGE (\y. ((vector_add a) y))) s) = ((IMAGE (\y. ((vector_add a) y))) t)) = (s = t))))) orig))
T c= c==> ! ! ! c= c= * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 c= b1 b2 * / ! ! c= c= * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 c= b1 b2 f0 * / ! ! c= c= * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 c= b1 b2 f0
+ |- (((!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))) ==> ((\s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))) s)) = ((\s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))) s))
T c= c==> ! c==> cFINITE b0 c= cCARD * * part cINSERT f0 b0 cCOND cIN f0 b0 cCARD b0 cSUC cCARD b0 * / c==> cFINITE b0 c= cCARD * * part cINSERT f0 b0 cCOND cIN f0 b0 cCARD b0 cSUC cCARD b0 f1 * / c==> cFINITE b0 c= cCARD * * part cINSERT f0 b0 cCOND cIN f0 b0 cCARD b0 cSUC cCARD b0 f1
+ (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- (((((x INSERT s) HAS_SIZE (CARD (x INSERT s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) ==> (x IN s)) = (x IN s))
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c= c==> c/\ cHAS_SIZE * * part cINSERT f1 f0 cCARD * * part cINSERT f1 f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 cIN f1 f0 cIN f1 f0
+ |- ((\a. (!s. (!t. ((s =_c ((IMAGE (\x. ((vector_add a) x))) t)) = (s =_c t))))) orig)
T * / ! ! c= c=_c b1 * * part cIMAGE / cvector_add b0 b3 b2 c=_c b1 b2 f0
+ (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))))))) = ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))))))))
T c= c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- (((!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) ==> (!m. (!p. ((?n. ((m <= n) /\ (n < p))) ==> (m < p))))) = (!m. (!p. ((?n. ((m <= n) /\ (n < p))) ==> (m < p)))))
T c= c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 ! ! c==> c? / c/\ c<= b0 b2 c< b2 b1 c< b0 b1 ! ! c==> c? / c/\ c<= b0 b2 c< b2 b1 c< b0 b1
+ (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) |- ((?x. (?s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))))) ==> F)
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> c? / c? / c/\ c/\ c\/ c~ c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c/\ c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF
+ |- ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) (dimindex UNIV))
T * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 cdimindex part cUNIV
+ |- (!x. (!s. ((((vector_add orig) x) IN ((IMAGE (\y. ((vector_add orig) y))) s)) = (x IN s))))
T c= cIN cvector_add f0 f1 * * part cIMAGE / cvector_add f0 b0 f2 cIN f1 f2
+ |- ((\a. (!s. ((negligible ((IMAGE (\x. ((vector_add a) x))) s)) = (negligible s)))) orig)
T * / ! c= cnegligible * * part cIMAGE / cvector_add b0 b2 b1 cnegligible b1 f0
+ |- ((\a. (!x. (!y. (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add a) x)) ((vector_add a) y))) = ((vector_add a) ((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y))))))) orig)
T * / ! ! c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add b0 b1 cvector_add b0 b2 cvector_add b0 c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b1 b2 f0
+ |- ((\a. (!s. (!t. ((setdist (((IMAGE (\x. ((vector_add a) x))) s) , ((IMAGE (\x. ((vector_add a) x))) t))) = (setdist (s , t)))))) orig)
T * / ! ! c= csetdist c, * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 csetdist c, b1 b2 f0
+ |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772535)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772536)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _1772537)) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_int _1772535)) /\ (((real_le (real_of_int _1772535)) (real_of_int _1772537)) /\ ((real_le (real_of_int _1772537)) (real_of_int _1772536))))))))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f2 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ creal_le creal_of_int f0 creal_of_int f2 creal_le creal_of_int f2 creal_of_int f1 cF
+ (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ (orig = orig) |- (((!s. (!n. ((((IMAGE (\y. ((vector_add orig) y))) s) HAS_SIZE n) = (s HAS_SIZE n)))) ==> ((\s. (!n. ((((IMAGE (\y. ((vector_add orig) y))) s) HAS_SIZE n) = (s HAS_SIZE n)))) s)) = ((\s. (!n. ((((IMAGE (\y. ((vector_add orig) y))) s) HAS_SIZE n) = (s HAS_SIZE n)))) s))
T c==> c= f0 f0 c= c==> ! ! c= cHAS_SIZE * * part cIMAGE / cvector_add f0 b2 b0 b1 cHAS_SIZE b0 b1 * / ! c= cHAS_SIZE * * part cIMAGE / cvector_add f0 b2 b0 b1 cHAS_SIZE b0 b1 f1 * / ! c= cHAS_SIZE * * part cIMAGE / cvector_add f0 b2 b0 b1 cHAS_SIZE b0 b1 f1
+ |- ((\a. (!s. ((COUNTABLE ((IMAGE (\y. ((vector_add a) y))) s)) = (COUNTABLE s)))) orig)
T * / ! c= cCOUNTABLE * * part cIMAGE / cvector_add b0 b2 b1 cCOUNTABLE b1 f0
+ |- (EMPTY = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) EMPTY))
T c= part cEMPTY * * part cIMAGE * part cIMAGE / cvector_add f0 b0 part cEMPTY
+ |- ((\a. (!s. ((INTERS ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) = ((IMAGE (\x. ((vector_add a) x))) (INTERS s))))) orig)
T * / ! c= * part cINTERS * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cINTERS b1 f0
+ (~ ((vec (NUMERAL _0)) IN s)), (FINITE s), ((SUC (CARD s)) = n), (n <= (dimindex UNIV)) |- ((\n. (((dim (span s)) <= n) /\ (n < (dimindex UNIV)))) (CARD s))
T c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV * / c/\ c<= cdim * part cspan f0 b0 c< b0 cdimindex part cUNIV cCARD f0
+ |- (!s. ((FINITE s) ==> (((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s)))))
T c==> cFINITE f0 c==> c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0
+ (~ ((vec (NUMERAL _0)) IN s)), (FINITE s) |- ((FINITE s) /\ ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))))
T c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c/\ cFINITE f0 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
+ (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) |- (!x. (!s. (((x IN s) \/ (!n. ((~ ((x INSERT s) HAS_SIZE n)) \/ (~ (n <= (dimindex UNIV)))))) \/ (negligible ((hull affine) (x INSERT s))))))
T c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 ! ! c\/ c\/ cIN b0 b1 ! c\/ c~ cHAS_SIZE * * part cINSERT b0 b1 b2 c~ c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1
+ |- (((!a. (!s. ((convex ((IMAGE (\x. ((vector_add a) x))) s)) = (convex s)))) ==> ((\a. (!s. ((convex ((IMAGE (\x. ((vector_add a) x))) s)) = (convex s)))) orig)) = ((\a. (!s. ((convex ((IMAGE (\x. ((vector_add a) x))) s)) = (convex s)))) orig))
T c= c==> ! ! c= cconvex * * part cIMAGE / cvector_add b0 b2 b1 cconvex b1 * / ! c= cconvex * * part cIMAGE / cvector_add b0 b2 b1 cconvex b1 f0 * / ! c= cconvex * * part cIMAGE / cvector_add b0 b2 b1 cconvex b1 f0
+ |- (!u. ((UNIONS ((IMAGE (IMAGE (\y. ((vector_add orig) y)))) u)) = ((IMAGE (\y. ((vector_add orig) y))) (UNIONS u))))
T c= * part cUNIONS * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 * part cUNIONS f1
+ |- (((!a. (!s. ((closed ((IMAGE (\x. ((vector_add a) x))) s)) = (closed s)))) ==> ((\a. (!s. ((closed ((IMAGE (\x. ((vector_add a) x))) s)) = (closed s)))) orig)) = ((\a. (!s. ((closed ((IMAGE (\x. ((vector_add a) x))) s)) = (closed s)))) orig))
T c= c==> ! ! c= cclosed * * part cIMAGE / cvector_add b0 b2 b1 cclosed b1 * / ! c= cclosed * * part cIMAGE / cvector_add b0 b2 b1 cclosed b1 f0 * / ! c= cclosed * * part cIMAGE / cvector_add b0 b2 b1 cclosed b1 f0
+ |- ((\a. (!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add a) x)))) tr)) = (simplicial_complex tr)))) orig)
T * / ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 csimplicial_complex b1 f0
+ |- ((~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) ==> ((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) ==> ((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> (~ (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s)))))))))))
T c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c~ ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1
+ |- (((!a. (!x. (!r. ((sphere (((vector_add a) x) , r)) = ((IMAGE (\y. ((vector_add a) y))) (sphere (x , r))))))) ==> ((\a. (!x. (!r. ((sphere (((vector_add a) x) , r)) = ((IMAGE (\y. ((vector_add a) y))) (sphere (x , r))))))) orig)) = ((\a. (!x. (!r. ((sphere (((vector_add a) x) , r)) = ((IMAGE (\y. ((vector_add a) y))) (sphere (x , r))))))) orig))
T c= c==> ! ! ! c= * part csphere c, cvector_add b0 b1 b2 * * part cIMAGE / cvector_add b0 b3 * part csphere c, b1 b2 * / ! ! c= * part csphere c, cvector_add b0 b1 b2 * * part cIMAGE / cvector_add b0 b3 * part csphere c, b1 b2 f0 * / ! ! c= * part csphere c, cvector_add b0 b1 b2 * * part cIMAGE / cvector_add b0 b3 * part csphere c, b1 b2 f0
+ |- (((!a. (!s. ((compact ((IMAGE (\x. ((vector_add a) x))) s)) = (compact s)))) ==> ((\a. (!s. ((compact ((IMAGE (\x. ((vector_add a) x))) s)) = (compact s)))) orig)) = ((\a. (!s. ((compact ((IMAGE (\x. ((vector_add a) x))) s)) = (compact s)))) orig))
T c= c==> ! ! c= ccompact * * part cIMAGE / cvector_add b0 b2 b1 ccompact b1 * / ! c= ccompact * * part cIMAGE / cvector_add b0 b2 b1 ccompact b1 f0 * / ! c= ccompact * * part cIMAGE / cvector_add b0 b2 b1 ccompact b1 f0
+ |- ((\a. (!s. (!n. ((((IMAGE (\y. ((vector_add a) y))) s) HAS_SIZE n) = (s HAS_SIZE n))))) orig)
T * / ! ! c= cHAS_SIZE * * part cIMAGE / cvector_add b0 b3 b1 b2 cHAS_SIZE b1 b2 f0
+ |- ((\a. (!g1. (!g2. (((++ ((\x. ((vector_add a) x)) o g1)) ((\x. ((vector_add a) x)) o g2)) = ((\x. ((vector_add a) x)) o ((++ g1) g2)))))) orig)
T * / ! ! c= * * part c++ * * part co / cvector_add b0 b3 b1 * * part co / cvector_add b0 b3 b2 * * part co / cvector_add b0 b3 * * part c++ b1 b2 f0
+ |- ((\a. (!s. (!t. ((((IMAGE (\y. ((vector_add a) y))) s) INTER ((IMAGE (\y. ((vector_add a) y))) t)) = ((IMAGE (\y. ((vector_add a) y))) (s INTER t)))))) orig)
T * / ! ! c= * * part cINTER * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE / cvector_add b0 b3 * * part cINTER b1 b2 f0
+ |- (!a. (!b. ((closed_interval ((CONS (((vector_add orig) a) , ((vector_add orig) b))) NIL)) = ((IMAGE (\x. ((vector_add orig) x))) (closed_interval ((CONS (a , b)) NIL))))))
T c= * part cclosed_interval cCONS c, cvector_add f0 f1 cvector_add f0 f2 cNIL * * part cIMAGE / cvector_add f0 b0 * part cclosed_interval cCONS c, f1 f2 cNIL
+ |- ((\a. (!s. (!x. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) DELETE ((IMAGE (\x. ((vector_add a) x))) x)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (s DELETE x)))))) orig)
T * / ! ! c= * * part cDELETE * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 * * part cDELETE b1 b2 f0
+ |- ((\x. ((FINITE (x INSERT s)) = (FINITE s))) x)
T * / c= cFINITE * * part cINSERT b0 f0 cFINITE f0 f1
+ |- (((!a. (!s. ((measurable ((IMAGE (\x. ((vector_add a) x))) s)) = (measurable s)))) ==> ((\a. (!s. ((measurable ((IMAGE (\x. ((vector_add a) x))) s)) = (measurable s)))) orig)) = ((\a. (!s. ((measurable ((IMAGE (\x. ((vector_add a) x))) s)) = (measurable s)))) orig))
T c= c==> ! ! c= cmeasurable * * part cIMAGE / cvector_add b0 b2 b1 cmeasurable b1 * / ! c= cmeasurable * * part cIMAGE / cvector_add b0 b2 b1 cmeasurable b1 f0 * / ! c= cmeasurable * * part cIMAGE / cvector_add b0 b2 b1 cmeasurable b1 f0
+ (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- ((real_ge ((real_add (real_of_int _1772535)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\a. (!s. (!x. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) ((IMAGE (\x. ((vector_add a) x))) x)) = (s x))))) orig)
T * / ! ! c= cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 * b1 b2 f0
+ |- (((~ ((vec (NUMERAL _0)) IN s)) = p') ==> ((p' ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = q')) ==> (((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = (p' ==> q'))))
T c==> c= c~ cIN cvec cNUMERAL c_0 f0 f1 c==> c==> f1 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 f3 c= c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f2 c==> c<= f2 cdimindex part cUNIV cnegligible * part cspan f0 c==> f1 f3
+ |- (!s. ((INFINITE ((IMAGE (\y. ((vector_add orig) y))) s)) = (INFINITE s)))
T c= cINFINITE * * part cIMAGE / cvector_add f0 b0 f1 cINFINITE f1
+ |- ((\a. (!s. ((closure ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (closure s))))) orig)
T * / ! c= * part cclosure * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cclosure b1 f0
+ |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ (~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) |- ((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) ==> ((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) ==> F)))
T c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF
+ |- (((!a. (!xs. (!n. ((((IMAGE (\x. ((vector_add a) x))) o xs) n) = ((IMAGE (\x. ((vector_add a) x))) (xs n)))))) ==> ((\a. (!xs. (!n. ((((IMAGE (\x. ((vector_add a) x))) o xs) n) = ((IMAGE (\x. ((vector_add a) x))) (xs n)))))) orig)) = ((\a. (!xs. (!n. ((((IMAGE (\x. ((vector_add a) x))) o xs) n) = ((IMAGE (\x. ((vector_add a) x))) (xs n)))))) orig))
T c= c==> ! ! ! c= * * * part co * part cIMAGE / cvector_add b0 b3 b1 b2 * * part cIMAGE / cvector_add b0 b3 * b1 b2 * / ! ! c= * * * part co * part cIMAGE / cvector_add b0 b3 b1 b2 * * part cIMAGE / cvector_add b0 b3 * b1 b2 f0 * / ! ! c= * * * part co * part cIMAGE / cvector_add b0 b3 b1 b2 * * part cIMAGE / cvector_add b0 b3 * b1 b2 f0
+ (orig = orig) |- (!n. ((((IMAGE (\y. ((vector_add orig) y))) s) HAS_SIZE n) = (s HAS_SIZE n)))
T c==> c= f0 f0 ! c= cHAS_SIZE * * part cIMAGE / cvector_add f0 b1 f1 b0 cHAS_SIZE f1 b0
+ |- (((!a. (!u. ((UNIONS ((IMAGE (IMAGE (IMAGE (\x. ((vector_add a) x))))) u)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (UNIONS u))))) ==> ((\a. (!u. ((UNIONS ((IMAGE (IMAGE (IMAGE (\x. ((vector_add a) x))))) u)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (UNIONS u))))) orig)) = ((\a. (!u. ((UNIONS ((IMAGE (IMAGE (IMAGE (\x. ((vector_add a) x))))) u)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (UNIONS u))))) orig))
T c= c==> ! ! c= * part cUNIONS * * part cIMAGE * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b2 * part cUNIONS b1 * / ! c= * part cUNIONS * * part cIMAGE * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b2 * part cUNIONS b1 f0 * / ! c= * part cUNIONS * * part cIMAGE * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b2 * part cUNIONS b1 f0
+ |- (((!g'. (!t'. (!e'. ((((vec (NUMERAL _0)) IN s) = g') ==> ((g' ==> ((CARD s) = t')) ==> (((~ g') ==> ((SUC (CARD s)) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN s)) (CARD s)) (SUC (CARD s))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((vec (NUMERAL _0)) IN s) = g') ==> ((g' ==> ((CARD s) = t')) ==> (((~ g') ==> ((SUC (CARD s)) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN s)) (CARD s)) (SUC (CARD s))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((vec (NUMERAL _0)) IN s) = g') ==> ((g' ==> ((CARD s) = t')) ==> (((~ g') ==> ((SUC (CARD s)) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN s)) (CARD s)) (SUC (CARD s))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= cIN cvec cNUMERAL c_0 f0 b0 c==> c==> b0 c= cCARD f0 b1 c==> c==> c~ b0 c= cSUC cCARD f0 b2 c= cCOND cIN cvec cNUMERAL c_0 f0 cCARD f0 cSUC cCARD f0 cCOND b0 b1 b2 * / ! ! c==> c= cIN cvec cNUMERAL c_0 f0 b0 c==> c==> b0 c= cCARD f0 b1 c==> c==> c~ b0 c= cSUC cCARD f0 b2 c= cCOND cIN cvec cNUMERAL c_0 f0 cCARD f0 cSUC cCARD f0 cCOND b0 b1 b2 f1 * / ! ! c==> c= cIN cvec cNUMERAL c_0 f0 b0 c==> c==> b0 c= cCARD f0 b1 c==> c==> c~ b0 c= cSUC cCARD f0 b2 c= cCOND cIN cvec cNUMERAL c_0 f0 cCARD f0 cSUC cCARD f0 cCOND b0 b1 b2 f1
+ |- (((!a. (!x. (!y. ((midpoint (((vector_add a) x) , ((vector_add a) y))) = ((vector_add a) (midpoint (x , y))))))) ==> ((\a. (!x. (!y. ((midpoint (((vector_add a) x) , ((vector_add a) y))) = ((vector_add a) (midpoint (x , y))))))) orig)) = ((\a. (!x. (!y. ((midpoint (((vector_add a) x) , ((vector_add a) y))) = ((vector_add a) (midpoint (x , y))))))) orig))
T c= c==> ! ! ! c= cmidpoint c, cvector_add b0 b1 cvector_add b0 b2 cvector_add b0 cmidpoint c, b1 b2 * / ! ! c= cmidpoint c, cvector_add b0 b1 cvector_add b0 b2 cvector_add b0 cmidpoint c, b1 b2 f0 * / ! ! c= cmidpoint c, cvector_add b0 b1 cvector_add b0 b2 cvector_add b0 cmidpoint c, b1 b2 f0
+ |- ((\_1772526. (\_1772527. (\_1772528. (!s. (!n. (((~ (orig IN ((IMAGE (\x. ((vector_add _1772522) x))) s))) /\ (((orig INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s)) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (orig INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s)))))))))) = (\_1772526. (\_1772527. (\_1772528. (!s. (!n. (((~ (((vector_add orig) (vec (NUMERAL _0))) IN ((IMAGE (\x. ((vector_add _1772522) x))) s))) /\ (((((vector_add orig) (vec (NUMERAL _0))) INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s)) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (((vector_add orig) (vec (NUMERAL _0))) INSERT ((IMAGE (\x. ((vector_add _1772522) x))) s)))))))))))
T c= / / / ! ! c==> c/\ c~ cIN f0 * * part cIMAGE / cvector_add f1 b5 b3 c/\ cHAS_SIZE * * part cINSERT f0 * * part cIMAGE / cvector_add f1 b5 b3 b4 c<= b4 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 * * part cIMAGE / cvector_add f1 b5 b3 / / / ! ! c==> c/\ c~ cIN cvector_add f0 cvec cNUMERAL c_0 * * part cIMAGE / cvector_add f1 b5 b3 c/\ cHAS_SIZE * * part cINSERT cvector_add f0 cvec cNUMERAL c_0 * * part cIMAGE / cvector_add f1 b5 b3 b4 c<= b4 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT cvector_add f0 cvec cNUMERAL c_0 * * part cIMAGE / cvector_add f1 b5 b3
+ (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- ((((((real_add (real_of_int _1772535)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772536))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add (real_of_int _1772535)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772536))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add (real_of_int _1772535)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772536))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0
+ (orig = orig) |- (!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s)))
T c==> c= f0 f0 ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0
+ |- (((!s. (!x. ((x IN s) ==> (x IN ((hull P) s))))) ==> ((\s. (!x. ((x IN s) ==> (x IN ((hull P) s))))) s)) = ((\s. (!x. ((x IN s) ==> (x IN ((hull P) s))))) s))
T c= c==> ! ! c==> cIN b1 b0 cIN b1 * * part chull f0 b0 * / ! c==> cIN b1 b0 cIN b1 * * part chull f0 b0 f1 * / ! c==> cIN b1 b0 cIN b1 * * part chull f0 b0 f1
+ |- (((!a. (!p. (!s. (!t. ((((COND p) ((IMAGE (\y. ((vector_add a) y))) s)) ((IMAGE (\y. ((vector_add a) y))) t)) = ((IMAGE (\y. ((vector_add a) y))) (((COND p) s) t))))))) ==> ((\a. (!p. (!s. (!t. ((((COND p) ((IMAGE (\y. ((vector_add a) y))) s)) ((IMAGE (\y. ((vector_add a) y))) t)) = ((IMAGE (\y. ((vector_add a) y))) (((COND p) s) t))))))) orig)) = ((\a. (!p. (!s. (!t. ((((COND p) ((IMAGE (\y. ((vector_add a) y))) s)) ((IMAGE (\y. ((vector_add a) y))) t)) = ((IMAGE (\y. ((vector_add a) y))) (((COND p) s) t))))))) orig))
T c= c==> ! ! ! ! c= * * * part cCOND b1 * * part cIMAGE / cvector_add b0 b4 b2 * * part cIMAGE / cvector_add b0 b4 b3 * * part cIMAGE / cvector_add b0 b4 * * * part cCOND b1 b2 b3 * / ! ! ! c= * * * part cCOND b1 * * part cIMAGE / cvector_add b0 b4 b2 * * part cIMAGE / cvector_add b0 b4 b3 * * part cIMAGE / cvector_add b0 b4 * * * part cCOND b1 b2 b3 f0 * / ! ! ! c= * * * part cCOND b1 * * part cIMAGE / cvector_add b0 b4 b2 * * part cIMAGE / cvector_add b0 b4 b3 * * part cIMAGE / cvector_add b0 b4 * * * part cCOND b1 b2 b3 f0
+ (orig = orig) |- ((!s. ((path_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (path_connected s))) /\ ((!s. (((locally path_connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally path_connected) s))) /\ ((!s. (((locally connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally connected) s))) /\ ((!s. ((inside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (inside s)))) /\ ((!s. ((outside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (outside s)))) /\ ((!s. ((simply_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (simply_connected s))) /\ ((!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homotopy_equivalent s) t)))) /\ ((!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) /\ ((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) /\ ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))))))))))))))))))
T c==> c= f0 f0 c/\ ! c= cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 cpath_connected b0 c/\ ! c= clocally part cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cpath_connected b0 c/\ ! c= clocally part cconnected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cconnected b0 c/\ ! c= * part cinside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cinside b0 c/\ ! c= * part coutside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part coutside b0 c/\ ! c= csimply_connected * * part cIMAGE / cvector_add f0 b1 b0 csimply_connected b0 c/\ ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b2 b0 b1 chomotopy_equivalent b0 b1 c/\ ! ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 c/\ ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- (!s. (!n. ((((IMAGE (\y. ((vector_add orig) y))) s) HAS_SIZE n) = (s HAS_SIZE n))))
T c= cHAS_SIZE * * part cIMAGE / cvector_add f0 b0 f1 f2 cHAS_SIZE f1 f2
+ |- ((\a. (!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add a) x))) s)) t) = ((homotopy_equivalent s) t))))) orig)
T * / ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add b0 b3 b1 b2 chomotopy_equivalent b1 b2 f0
+ |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
+ ((\x. (?s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))))) x) |- (?s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))))
T c==> * / c? / c/\ c/\ c\/ c~ c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c/\ c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT b0 b1 f0 c? / c/\ c/\ c\/ c~ c<= cCARD b0 cdimindex part cUNIV cnegligible * * part chull part caffine b0 c/\ c~ cIN f0 b0 cFINITE b0 c/\ c<= cCARD * * part cINSERT f0 b0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f0 b0
+ |- ((!n. ((P n) /\ (Q n))) = ((!n. (P n)) /\ (!n. (Q n))))
T c= ! c/\ * f0 b0 * f1 b0 c/\ ! * f0 b0 ! * f1 b0
+ (~ ((vec (NUMERAL _0)) IN s)), (FINITE s), ((SUC (CARD s)) = n), (n <= (dimindex UNIV)) |- (((dim (span s)) <= (CARD s)) /\ ((CARD s) < (dimindex UNIV)))
T c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV c/\ c<= cdim * part cspan f0 cCARD f0 c< cCARD f0 cdimindex part cUNIV
+ |- ((!s. ((FINITE s) ==> (((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))))) = (!s. (((FINITE s) /\ ((CARD s) <= (dimindex UNIV))) ==> (negligible ((hull affine) s)))))
T c= ! c==> cFINITE b0 c==> c<= cCARD b0 cdimindex part cUNIV cnegligible * * part chull part caffine b0 ! c==> c/\ cFINITE b0 c<= cCARD b0 cdimindex part cUNIV cnegligible * * part chull part caffine b0
+ |- (!p. (!x. (!y. ((((COND p) ((vector_add orig) x)) ((vector_add orig) y)) = ((vector_add orig) (((COND p) x) y))))))
T c= cCOND f0 cvector_add f1 f2 cvector_add f1 f3 cvector_add f1 cCOND f0 f2 f3
+ |- ((\s. (!x. ((x IN s) ==> (x IN ((hull P) s))))) s)
T * / ! c==> cIN b1 b0 cIN b1 * * part chull f0 b0 f1
+ |- (((!a. (!s. (!t. ((s =_c ((IMAGE (\x. ((vector_add a) x))) t)) = (s =_c t))))) ==> ((\a. (!s. (!t. ((s =_c ((IMAGE (\x. ((vector_add a) x))) t)) = (s =_c t))))) orig)) = ((\a. (!s. (!t. ((s =_c ((IMAGE (\x. ((vector_add a) x))) t)) = (s =_c t))))) orig))
T c= c==> ! ! ! c= c=_c b1 * * part cIMAGE / cvector_add b0 b3 b2 c=_c b1 b2 * / ! ! c= c=_c b1 * * part cIMAGE / cvector_add b0 b3 b2 c=_c b1 b2 f0 * / ! ! c= c=_c b1 * * part cIMAGE / cvector_add b0 b3 b2 c=_c b1 b2 f0
+ (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0
+ (!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))), (?n. ((m <= n) /\ (n < p))) |- ((?n. ((m <= n) /\ (n < p))) /\ (m < p))
T c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 c==> c? / c/\ c<= f0 b0 c< b0 f1 c/\ c? / c/\ c<= f0 b0 c< b0 f1 c< f0 f1
+ |- (!s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) SUBSET ((IMAGE (\y. ((vector_add orig) y))) t)) = (s SUBSET t))))
T c= cSUBSET * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 cSUBSET f1 f2
+ (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))), ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- (x IN s)
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 cIN f1 f0
+ |- ((\a. (!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add a) x))) s)) = ((simplex n) s))))) orig)
T * / ! ! c= csimplex b2 * * part cIMAGE / cvector_add b0 b3 b1 csimplex b2 b1 f0
+ |- (((!s. ((FINITE s) ==> ((dim s) <= (CARD s)))) ==> ((\s. ((FINITE s) ==> ((dim s) <= (CARD s)))) s)) = ((\s. ((FINITE s) ==> ((dim s) <= (CARD s)))) s))
T c= c==> ! c==> cFINITE b0 c<= cdim b0 cCARD b0 * / c==> cFINITE b0 c<= cdim b0 cCARD b0 f0 * / c==> cFINITE b0 c<= cdim b0 cCARD b0 f0
+ |- (((!a. (!s. ((INTERS ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) = ((IMAGE (\x. ((vector_add a) x))) (INTERS s))))) ==> ((\a. (!s. ((INTERS ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) = ((IMAGE (\x. ((vector_add a) x))) (INTERS s))))) orig)) = ((\a. (!s. ((INTERS ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) = ((IMAGE (\x. ((vector_add a) x))) (INTERS s))))) orig))
T c= c==> ! ! c= * part cINTERS * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cINTERS b1 * / ! c= * part cINTERS * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cINTERS b1 f0 * / ! c= * part cINTERS * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cINTERS b1 f0
+ |- (!l1. (!l2. (((APPEND ((MAP (\x. ((vector_add orig) x))) l1)) ((MAP (\x. ((vector_add orig) x))) l2)) = ((MAP (\x. ((vector_add orig) x))) ((APPEND l1) l2)))))
T c= cAPPEND cMAP / cvector_add f0 b0 f1 cMAP / cvector_add f0 b0 f2 cMAP / cvector_add f0 b0 cAPPEND f1 f2
+ |- (!a. (!b. ((open_interval (((vector_add orig) a) , ((vector_add orig) b))) = ((IMAGE (\x. ((vector_add orig) x))) (open_interval (a , b))))))
T c= * part copen_interval c, cvector_add f0 f1 cvector_add f0 f2 * * part cIMAGE / cvector_add f0 b0 * part copen_interval c, f1 f2
+ |- (((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))) = ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))
T c= c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- (((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))) = ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))
T c= c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- ((\a. (!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add a) x))) t)) = ((homotopy_equivalent s) t))))) orig)
T * / ! ! c= chomotopy_equivalent b1 * * part cIMAGE / cvector_add b0 b3 b2 chomotopy_equivalent b1 b2 f0
+ |- (!xs. (!n. ((((\y. ((vector_add orig) y)) o xs) n) = ((vector_add orig) (xs n)))))
T c= co / cvector_add f0 b0 f1 f2 cvector_add f0 * f1 f2
+ |- (((!a. (!x. (!y. (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add a) x)) ((vector_add a) y))) = ((vector_add a) ((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y))))))) ==> ((\a. (!x. (!y. (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add a) x)) ((vector_add a) y))) = ((vector_add a) ((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y))))))) orig)) = ((\a. (!x. (!y. (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add ((vector_add a) x)) ((vector_add a) y))) = ((vector_add a) ((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add x) y))))))) orig))
T c= c==> ! ! ! c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add b0 b1 cvector_add b0 b2 cvector_add b0 c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b1 b2 * / ! ! c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add b0 b1 cvector_add b0 b2 cvector_add b0 c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b1 b2 f0 * / ! ! c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_add b0 b1 cvector_add b0 b2 cvector_add b0 c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b1 b2 f0
+ |- (((!a. (!s. ((ENR ((IMAGE (\x. ((vector_add a) x))) s)) = (ENR s)))) ==> ((\a. (!s. ((ENR ((IMAGE (\x. ((vector_add a) x))) s)) = (ENR s)))) orig)) = ((\a. (!s. ((ENR ((IMAGE (\x. ((vector_add a) x))) s)) = (ENR s)))) orig))
T c= c==> ! ! c= cENR * * part cIMAGE / cvector_add b0 b2 b1 cENR b1 * / ! c= cENR * * part cIMAGE / cvector_add b0 b2 b1 cENR b1 f0 * / ! c= cENR * * part cIMAGE / cvector_add b0 b2 b1 cENR b1 f0
+ |- ((\s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) s)
T * / ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 f0
+ |- ((\a. (!s. ((ENR ((IMAGE (\x. ((vector_add a) x))) s)) = (ENR s)))) orig)
T * / ! c= cENR * * part cIMAGE / cvector_add b0 b2 b1 cENR b1 f0
+ |- (((~ ((vec (NUMERAL _0)) IN s)) /\ ((((vec (NUMERAL _0)) INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> ((negligible ((hull affine) ((vec (NUMERAL _0)) INSERT s))) = (negligible (span s))))
T c==> c/\ c~ cIN cvec cNUMERAL c_0 f0 c/\ cHAS_SIZE * * part cINSERT cvec cNUMERAL c_0 f0 f1 c<= f1 cdimindex part cUNIV c= cnegligible * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 cnegligible * part cspan f0
+ (orig = orig) |- ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))
T c==> c= f0 f0 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- (((!a. (!s. ((COUNTABLE ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) = (COUNTABLE s)))) ==> ((\a. (!s. ((COUNTABLE ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) = (COUNTABLE s)))) orig)) = ((\a. (!s. ((COUNTABLE ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) = (COUNTABLE s)))) orig))
T c= c==> ! ! c= cCOUNTABLE * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 cCOUNTABLE b1 * / ! c= cCOUNTABLE * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 cCOUNTABLE b1 f0 * / ! c= cCOUNTABLE * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 cCOUNTABLE b1 f0
+ |- (!xs. (!n. ((((IMAGE (\x. ((vector_add orig) x))) o xs) n) = ((IMAGE (\x. ((vector_add orig) x))) (xs n)))))
T c= * * * part co * part cIMAGE / cvector_add f0 b0 f1 f2 * * part cIMAGE / cvector_add f0 b0 * f1 f2
+ |- (((!a. (!s. (!x. (((connected_component ((IMAGE (\x. ((vector_add a) x))) s)) ((vector_add a) x)) = ((IMAGE (\x. ((vector_add a) x))) ((connected_component s) x)))))) ==> ((\a. (!s. (!x. (((connected_component ((IMAGE (\x. ((vector_add a) x))) s)) ((vector_add a) x)) = ((IMAGE (\x. ((vector_add a) x))) ((connected_component s) x)))))) orig)) = ((\a. (!s. (!x. (((connected_component ((IMAGE (\x. ((vector_add a) x))) s)) ((vector_add a) x)) = ((IMAGE (\x. ((vector_add a) x))) ((connected_component s) x)))))) orig))
T c= c==> ! ! ! c= * * part cconnected_component * * part cIMAGE / cvector_add b0 b3 b1 cvector_add b0 b2 * * part cIMAGE / cvector_add b0 b3 * * part cconnected_component b1 b2 * / ! ! c= * * part cconnected_component * * part cIMAGE / cvector_add b0 b3 b1 cvector_add b0 b2 * * part cIMAGE / cvector_add b0 b3 * * part cconnected_component b1 b2 f0 * / ! ! c= * * part cconnected_component * * part cIMAGE / cvector_add b0 b3 b1 cvector_add b0 b2 * * part cIMAGE / cvector_add b0 b3 * * part cconnected_component b1 b2 f0
+ |- (((!a. (!s. ((is_interval ((IMAGE (\x. ((vector_add a) x))) s)) = (is_interval s)))) ==> ((\a. (!s. ((is_interval ((IMAGE (\x. ((vector_add a) x))) s)) = (is_interval s)))) orig)) = ((\a. (!s. ((is_interval ((IMAGE (\x. ((vector_add a) x))) s)) = (is_interval s)))) orig))
T c= c==> ! ! c= cis_interval * * part cIMAGE / cvector_add b0 b2 b1 cis_interval b1 * / ! c= cis_interval * * part cIMAGE / cvector_add b0 b2 b1 cis_interval b1 f0 * / ! c= cis_interval * * part cIMAGE / cvector_add b0 b2 b1 cis_interval b1 f0
+ |- (!x. (!y. (((vector_sub ((vector_add orig) x)) ((vector_add orig) y)) = ((vector_sub x) y))))
T c= cvector_sub cvector_add f0 f1 cvector_add f0 f2 cvector_sub f1 f2
+ (orig = orig) |- ((((IMAGE (\x. ((vector_add orig) x))) s) HAS_SIZE n) = (s HAS_SIZE n))
T c==> c= f0 f0 c= cHAS_SIZE * * part cIMAGE / cvector_add f0 b0 f1 f2 cHAS_SIZE f1 f2
+ |- ((\c. (!a. (!b. ((open_interval (((vector_add c) a) , ((vector_add c) b))) = ((IMAGE (\x. ((vector_add c) x))) (open_interval (a , b))))))) orig)
T * / ! ! c= * part copen_interval c, cvector_add b0 b1 cvector_add b0 b2 * * part cIMAGE / cvector_add b0 b3 * part copen_interval c, b1 b2 f0
+ |- ((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) /\ ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))))))))))
T c/\ ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- (((!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) ==> ((\y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) y)) = ((\y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) y))
T c= c==> ! ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 * / ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 f1 * / ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 f1
+ |- (((!a. (!s. ((aff_dim ((IMAGE (\x. ((vector_add a) x))) s)) = (aff_dim s)))) ==> ((\a. (!s. ((aff_dim ((IMAGE (\x. ((vector_add a) x))) s)) = (aff_dim s)))) orig)) = ((\a. (!s. ((aff_dim ((IMAGE (\x. ((vector_add a) x))) s)) = (aff_dim s)))) orig))
T c= c==> ! ! c= caff_dim * * part cIMAGE / cvector_add b0 b2 b1 caff_dim b1 * / ! c= caff_dim * * part cIMAGE / cvector_add b0 b2 b1 caff_dim b1 f0 * / ! c= caff_dim * * part cIMAGE / cvector_add b0 b2 b1 caff_dim b1 f0
+ |- ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) (CARD s))
T * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 cCARD f0
+ (orig = orig) |- ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))
T c==> c= f0 f0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- ((\a. (!s. ((gdelta ((IMAGE (\x. ((vector_add a) x))) s)) = (gdelta s)))) orig)
T * / ! c= cgdelta * * part cIMAGE / cvector_add b0 b2 b1 cgdelta b1 f0
+ |- ((\a. (!s. (!t. (((homeomorphic ((IMAGE (\x. ((vector_add a) x))) s)) t) = ((homeomorphic s) t))))) orig)
T * / ! ! c= chomeomorphic * * part cIMAGE / cvector_add b0 b3 b1 b2 chomeomorphic b1 b2 f0
+ (!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) |- (((!p. (((m <= n) /\ (n < p)) ==> (m < p))) ==> ((\p. (((m <= n) /\ (n < p)) ==> (m < p))) p)) = ((\p. (((m <= n) /\ (n < p)) ==> (m < p))) p))
T c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 c= c==> ! c==> c/\ c<= f0 f1 c< f1 b0 c< f0 b0 * / c==> c/\ c<= f0 f1 c< f1 b0 c< f0 b0 f2 * / c==> c/\ c<= f0 f1 c< f1 b0 c< f0 b0 f2
+ |- ((\a. (!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add a) x)))) tr)) = (triangulation tr)))) orig)
T * / ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add b0 b2 b1 ctriangulation b1 f0
+ |- (((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))) = ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))
T c= c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ (orig = orig) |- ((!s. (((locally connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally connected) s))) /\ ((!s. ((inside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (inside s)))) /\ ((!s. ((outside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (outside s)))) /\ ((!s. ((simply_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (simply_connected s))) /\ ((!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homotopy_equivalent s) t)))) /\ ((!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) /\ ((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) /\ ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))))))))))))))))
T c==> c= f0 f0 c/\ ! c= clocally part cconnected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cconnected b0 c/\ ! c= * part cinside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cinside b0 c/\ ! c= * part coutside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part coutside b0 c/\ ! c= csimply_connected * * part cIMAGE / cvector_add f0 b1 b0 csimply_connected b0 c/\ ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b2 b0 b1 chomotopy_equivalent b0 b1 c/\ ! ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 c/\ ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- (!p'. (!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3
+ |- (!a. (!b. ((open_segment (((vector_add orig) a) , ((vector_add orig) b))) = ((IMAGE (\x. ((vector_add orig) x))) (open_segment (a , b))))))
T c= * part copen_segment c, cvector_add f0 f1 cvector_add f0 f2 * * part cIMAGE / cvector_add f0 b0 * part copen_segment c, f1 f2
+ |- ((\a. (!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add a) x))) f)) ((IMAGE (\x. ((vector_add a) x))) s)) = ((facet_of f) s))))) orig)
T * / ! ! c= cfacet_of * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cfacet_of b1 b2 f0
+ |- ((\a. (!l1. (!l2. (((APPEND ((MAP (\x. ((vector_add a) x))) l1)) ((MAP (\x. ((vector_add a) x))) l2)) = ((MAP (\x. ((vector_add a) x))) ((APPEND l1) l2)))))) orig)
T * / ! ! c= cAPPEND cMAP / cvector_add b0 b3 b1 cMAP / cvector_add b0 b3 b2 cMAP / cvector_add b0 b3 cAPPEND b1 b2 f0
+ |- (((!a. (!s. (!t. (((open_in ((subtopology euclidean) ((IMAGE (\x. ((vector_add a) x))) t))) ((IMAGE (\x. ((vector_add a) x))) s)) = ((open_in ((subtopology euclidean) t)) s))))) ==> ((\a. (!s. (!t. (((open_in ((subtopology euclidean) ((IMAGE (\x. ((vector_add a) x))) t))) ((IMAGE (\x. ((vector_add a) x))) s)) = ((open_in ((subtopology euclidean) t)) s))))) orig)) = ((\a. (!s. (!t. (((open_in ((subtopology euclidean) ((IMAGE (\x. ((vector_add a) x))) t))) ((IMAGE (\x. ((vector_add a) x))) s)) = ((open_in ((subtopology euclidean) t)) s))))) orig))
T c= c==> ! ! ! c= copen_in csubtopology ceuclidean * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE / cvector_add b0 b3 b1 copen_in csubtopology ceuclidean b2 b1 * / ! ! c= copen_in csubtopology ceuclidean * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE / cvector_add b0 b3 b1 copen_in csubtopology ceuclidean b2 b1 f0 * / ! ! c= copen_in csubtopology ceuclidean * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE / cvector_add b0 b3 b1 copen_in csubtopology ceuclidean b2 b1 f0
+ (~ ((vec (NUMERAL _0)) IN s)) |- ((((FINITE s) ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) ==> (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))))) = (((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))) = ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))))
T c==> c~ cIN cvec cNUMERAL c_0 f0 c= c==> c==> cFINITE f0 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c= c==> cFINITE f0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
+ |- ((!n. ((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))))) = T)
T c= ! c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 b0 c==> c<= b0 cdimindex part cUNIV cnegligible * part cspan f0 cT
+ |- ((!s. ((path_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (path_connected s))) /\ ((!s. (((locally path_connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally path_connected) s))) /\ ((!s. (((locally connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally connected) s))) /\ ((!s. ((inside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (inside s)))) /\ ((!s. ((outside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (outside s)))) /\ ((!s. ((simply_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (simply_connected s))) /\ ((!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homotopy_equivalent s) t)))) /\ ((!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) /\ ((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) /\ ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))))))))))))))))))
T c/\ ! c= cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 cpath_connected b0 c/\ ! c= clocally part cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cpath_connected b0 c/\ ! c= clocally part cconnected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cconnected b0 c/\ ! c= * part cinside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cinside b0 c/\ ! c= * part coutside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part coutside b0 c/\ ! c= csimply_connected * * part cIMAGE / cvector_add f0 b1 b0 csimply_connected b0 c/\ ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b2 b0 b1 chomotopy_equivalent b0 b1 c/\ ! ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 c/\ ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- (((!a. (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = (s = t))))) ==> ((\a. (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = (s = t))))) orig)) = ((\a. (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = (s = t))))) orig))
T c= c==> ! ! ! c= c= * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 c= b1 b2 * / ! ! c= c= * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 c= b1 b2 f0 * / ! ! c= c= * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 c= b1 b2 f0
+ |- (((!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) ==> ((\x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) x)) = ((\x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) x))
T c= c==> ! ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 * / ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 f0 * / ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 f0
+ (((real_ge (real_of_int _1772535)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772536)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _1772537)) (real_of_num (NUMERAL _0))) /\ ((~ ((vec (NUMERAL _0)) IN s)) /\ ((FINITE s) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) ((real_add (real_of_int _1772536)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772535))) (real_of_int _1772537))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _1772536)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _1772537)))) (real_of_num (NUMERAL _0)))))))))) |- F
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c~ cIN cvec cNUMERAL c_0 f3 c/\ cFINITE f3 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 cF
+ |- (!s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) >_c t) = (s >_c t))))
T c= c>_c * * part cIMAGE / cvector_add f0 b0 f1 f2 c>_c f1 f2
+ |- (((!a. (!xs. (!n. ((((\y. ((vector_add a) y)) o xs) n) = ((vector_add a) (xs n)))))) ==> ((\a. (!xs. (!n. ((((\y. ((vector_add a) y)) o xs) n) = ((vector_add a) (xs n)))))) orig)) = ((\a. (!xs. (!n. ((((\y. ((vector_add a) y)) o xs) n) = ((vector_add a) (xs n)))))) orig))
T c= c==> ! ! ! c= co / cvector_add b0 b3 b1 b2 cvector_add b0 * b1 b2 * / ! ! c= co / cvector_add b0 b3 b1 b2 cvector_add b0 * b1 b2 f0 * / ! ! c= co / cvector_add b0 b3 b1 b2 cvector_add b0 * b1 b2 f0
+ |- (!x. (!y. ((((vector_add orig) x) = ((vector_add orig) y)) = (x = y))))
T c= c= cvector_add f0 f1 cvector_add f0 f2 c= f1 f2
+ |- (((!a. (!x. (!s. ((((IMAGE (\x. ((vector_add a) x))) x) IN ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) = (x IN s))))) ==> ((\a. (!x. (!s. ((((IMAGE (\x. ((vector_add a) x))) x) IN ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) = (x IN s))))) orig)) = ((\a. (!x. (!s. ((((IMAGE (\x. ((vector_add a) x))) x) IN ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) = (x IN s))))) orig))
T c= c==> ! ! ! c= cIN * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 cIN b1 b2 * / ! ! c= cIN * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 cIN b1 b2 f0 * / ! ! c= cIN * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 cIN b1 b2 f0
+ (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) |- (!x. (!s. (!n. (((x IN s) \/ ((~ ((x INSERT s) HAS_SIZE n)) \/ (~ (n <= (dimindex UNIV))))) \/ (negligible ((hull affine) (x INSERT s)))))))
T c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 ! ! ! c\/ c\/ cIN b0 b1 c\/ c~ cHAS_SIZE * * part cINSERT b0 b1 b2 c~ c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1
+ |- (((!n. ((x IN s) \/ ((~ ((x INSERT s) HAS_SIZE n)) \/ (~ (n <= (dimindex UNIV)))))) \/ (negligible ((hull affine) (x INSERT s)))) = (!n. (((x IN s) \/ ((~ ((x INSERT s) HAS_SIZE n)) \/ (~ (n <= (dimindex UNIV))))) \/ (negligible ((hull affine) (x INSERT s))))))
T c= c\/ ! c\/ cIN f0 f1 c\/ c~ cHAS_SIZE * * part cINSERT f0 f1 b0 c~ c<= b0 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 f1 ! c\/ c\/ cIN f0 f1 c\/ c~ cHAS_SIZE * * part cINSERT f0 f1 b0 c~ c<= b0 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT f0 f1
+ |- (!s. (!t. ((((IMAGE (\y. ((vector_add orig) y))) s) DIFF ((IMAGE (\y. ((vector_add orig) y))) t)) = ((IMAGE (\y. ((vector_add orig) y))) (s DIFF t)))))
T c= * * part cDIFF * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 * * part cIMAGE / cvector_add f0 b0 * * part cDIFF f1 f2
+ |- (((!a. (!s. ((starlike ((IMAGE (\x. ((vector_add a) x))) s)) = (starlike s)))) ==> ((\a. (!s. ((starlike ((IMAGE (\x. ((vector_add a) x))) s)) = (starlike s)))) orig)) = ((\a. (!s. ((starlike ((IMAGE (\x. ((vector_add a) x))) s)) = (starlike s)))) orig))
T c= c==> ! ! c= cstarlike * * part cIMAGE / cvector_add b0 b2 b1 cstarlike b1 * / ! c= cstarlike * * part cIMAGE / cvector_add b0 b2 b1 cstarlike b1 f0 * / ! c= cstarlike * * part cIMAGE / cvector_add b0 b2 b1 cstarlike b1 f0
+ |- ((negligible EMPTY) = T)
T c= cnegligible part cEMPTY cT
+ |- ((\a. (!s. (!t. ((s >_c ((IMAGE (\x. ((vector_add a) x))) t)) = (s >_c t))))) orig)
T * / ! ! c= c>_c b1 * * part cIMAGE / cvector_add b0 b3 b2 c>_c b1 b2 f0
+ |- (((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q')))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3 cT
+ |- (((!a. (!s. ((frontier ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (frontier s))))) ==> ((\a. (!s. ((frontier ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (frontier s))))) orig)) = ((\a. (!s. ((frontier ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (frontier s))))) orig))
T c= c==> ! ! c= * part cfrontier * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cfrontier b1 * / ! c= * part cfrontier * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cfrontier b1 f0 * / ! c= * part cfrontier * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cfrontier b1 f0
+ |- ((!s. (!n. ((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))))) = (!s. (!n. ((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))))))
T c= ! ! c==> c~ cIN cvec cNUMERAL c_0 b0 c==> cFINITE b0 c==> c= cSUC cCARD b0 b1 c==> c<= b1 cdimindex part cUNIV cnegligible * part cspan b0 ! ! c==> c~ cIN cvec cNUMERAL c_0 b0 c==> cFINITE b0 c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 b0 b1 c==> c<= b1 cdimindex part cUNIV cnegligible * part cspan b0
+ |- ((\a. (!s. ((measure ((IMAGE (\x. ((vector_add a) x))) s)) = (measure s)))) orig)
T * / ! c= cmeasure * * part cIMAGE / cvector_add b0 b2 b1 cmeasure b1 f0
+ |- ((\a. (!x. (!s. ((((vector_add a) x) INSERT ((IMAGE (\y. ((vector_add a) y))) s)) = ((IMAGE (\y. ((vector_add a) y))) (x INSERT s)))))) orig)
T * / ! ! c= * * part cINSERT cvector_add b0 b1 * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE / cvector_add b0 b3 * * part cINSERT b1 b2 f0
+ |- (!s. (!n. ((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))))))
T c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
+ |- (((!a. (!s. (!t. ((setdist (((IMAGE (\x. ((vector_add a) x))) s) , ((IMAGE (\x. ((vector_add a) x))) t))) = (setdist (s , t)))))) ==> ((\a. (!s. (!t. ((setdist (((IMAGE (\x. ((vector_add a) x))) s) , ((IMAGE (\x. ((vector_add a) x))) t))) = (setdist (s , t)))))) orig)) = ((\a. (!s. (!t. ((setdist (((IMAGE (\x. ((vector_add a) x))) s) , ((IMAGE (\x. ((vector_add a) x))) t))) = (setdist (s , t)))))) orig))
T c= c==> ! ! ! c= csetdist c, * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 csetdist c, b1 b2 * / ! ! c= csetdist c, * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 csetdist c, b1 b2 f0 * / ! ! c= csetdist c, * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 csetdist c, b1 b2 f0
+ |- ((\a. (!s. ((path_connected ((IMAGE (\x. ((vector_add a) x))) s)) = (path_connected s)))) orig)
T * / ! c= cpath_connected * * part cIMAGE / cvector_add b0 b2 b1 cpath_connected b1 f0
+ (orig = orig) |- ((!b. (!c. ((linepath (((vector_add orig) b) , ((vector_add orig) c))) = ((\x. ((vector_add orig) x)) o (linepath (b , c)))))) /\ ((!s. (!x. (((path_component ((IMAGE (\x. ((vector_add orig) x))) s)) ((vector_add orig) x)) = ((IMAGE (\x. ((vector_add orig) x))) ((path_component s) x))))) /\ ((!s. ((path_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (path_connected s))) /\ ((!s. (((locally path_connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally path_connected) s))) /\ ((!s. (((locally connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally connected) s))) /\ ((!s. ((inside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (inside s)))) /\ ((!s. ((outside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (outside s)))) /\ ((!s. ((simply_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (simply_connected s))) /\ ((!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homotopy_equivalent s) t)))) /\ ((!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) /\ ((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) /\ ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))))))))))))))))))))
T c==> c= f0 f0 c/\ ! ! c= * part clinepath c, cvector_add f0 b0 cvector_add f0 b1 * * part co / cvector_add f0 b2 * part clinepath c, b0 b1 c/\ ! ! c= * * part cpath_component * * part cIMAGE / cvector_add f0 b2 b0 cvector_add f0 b1 * * part cIMAGE / cvector_add f0 b2 * * part cpath_component b0 b1 c/\ ! c= cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 cpath_connected b0 c/\ ! c= clocally part cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cpath_connected b0 c/\ ! c= clocally part cconnected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cconnected b0 c/\ ! c= * part cinside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cinside b0 c/\ ! c= * part coutside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part coutside b0 c/\ ! c= csimply_connected * * part cIMAGE / cvector_add f0 b1 b0 csimply_connected b0 c/\ ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b2 b0 b1 chomotopy_equivalent b0 b1 c/\ ! ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 c/\ ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- ((((vec (NUMERAL _0)) IN s) \/ ((~ (FINITE s)) \/ ((~ (((int_add (int_of_num (CARD s))) (int_of_num (NUMERAL (BIT1 _0)))) = (int_of_num n))) \/ ((~ ((int_le (int_of_num n)) (int_of_num (dimindex UNIV)))) \/ ((int_lt (int_of_num (CARD s))) (int_of_num (dimindex UNIV))))))) = ((~ ((vec (NUMERAL _0)) IN s)) ==> ((FINITE s) ==> (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> ((CARD s) < (dimindex UNIV)))))))
T c= c\/ cIN cvec cNUMERAL c_0 f0 c\/ c~ cFINITE f0 c\/ c~ c= cint_add cint_of_num cCARD f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f1 c\/ c~ cint_le cint_of_num f1 cint_of_num cdimindex part cUNIV cint_lt cint_of_num cCARD f0 cint_of_num cdimindex part cUNIV c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV c< cCARD f0 cdimindex part cUNIV
+ (orig = orig) |- ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))
T c==> c= f0 f0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- ((\a. (!l. ((LENGTH ((MAP (\x. ((vector_add a) x))) l)) = (LENGTH l)))) orig)
T * / ! c= cLENGTH cMAP / cvector_add b0 b2 b1 cLENGTH b1 f0
+ |- ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))
T c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) |- ((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) /\ ((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> (~ (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))))))
T c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c/\ ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c~ ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1
+ |- ((orig = ((vector_add orig) (vec (NUMERAL _0)))) /\ ((EMPTY = ((IMAGE (\x. ((vector_add orig) x))) EMPTY)) /\ ((EMPTY = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) EMPTY)) /\ ((UNIV = ((IMAGE (\x. ((vector_add orig) x))) UNIV)) /\ ((UNIV = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) UNIV)) /\ (NIL = ((MAP (\x. ((vector_add orig) x))) NIL)))))))
T c/\ c= f0 cvector_add f0 cvec cNUMERAL c_0 c/\ c= part cEMPTY * * part cIMAGE / cvector_add f0 b0 part cEMPTY c/\ c= part cEMPTY * * part cIMAGE * part cIMAGE / cvector_add f0 b0 part cEMPTY c/\ c= part cUNIV * * part cIMAGE / cvector_add f0 b0 part cUNIV c/\ c= part cUNIV * * part cIMAGE * part cIMAGE / cvector_add f0 b0 part cUNIV c= cNIL cMAP / cvector_add f0 b0 cNIL
+ (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) |- (((!x. (((\s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s))))))) x) ==> F)) ==> ((?s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s))))))) ==> F)) = ((?s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s))))))) ==> F))
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c= c==> ! c==> * / c/\ c/\ c\/ c~ c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN f0 b1 cFINITE b1 c/\ c<= cCARD * * part cINSERT f0 b1 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f0 b1 b0 cF c==> c? / c/\ c/\ c\/ c~ c<= cCARD b0 cdimindex part cUNIV cnegligible * * part chull part caffine b0 c/\ c~ cIN f0 b0 cFINITE b0 c/\ c<= cCARD * * part cINSERT f0 b0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f0 b0 cF c==> c? / c/\ c/\ c\/ c~ c<= cCARD b0 cdimindex part cUNIV cnegligible * * part chull part caffine b0 c/\ c~ cIN f0 b0 cFINITE b0 c/\ c<= cCARD * * part cINSERT f0 b0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f0 b0 cF
+ |- ((T /\ t) = t)
T c= c/\ cT f0 f0
+ |- ((!t. (!g. (((shiftpath t) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o ((shiftpath t) g))))) /\ ((!g. (!u. (!v. ((((subpath u) v) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o (((subpath u) v) g)))))) /\ ((!b. (!c. ((linepath (((vector_add orig) b) , ((vector_add orig) c))) = ((\x. ((vector_add orig) x)) o (linepath (b , c)))))) /\ ((!s. (!x. (((path_component ((IMAGE (\x. ((vector_add orig) x))) s)) ((vector_add orig) x)) = ((IMAGE (\x. ((vector_add orig) x))) ((path_component s) x))))) /\ ((!s. ((path_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (path_connected s))) /\ ((!s. (((locally path_connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally path_connected) s))) /\ ((!s. (((locally connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally connected) s))) /\ ((!s. ((inside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (inside s)))) /\ ((!s. ((outside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (outside s)))) /\ ((!s. ((simply_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (simply_connected s))) /\ ((!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homotopy_equivalent s) t)))) /\ ((!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) /\ ((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) /\ ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))))))))))))))))))))))
T c/\ ! ! c= * * part cshiftpath b0 * * part co / cvector_add f0 b2 b1 * * part co / cvector_add f0 b2 * * part cshiftpath b0 b1 c/\ ! ! ! c= * * * part csubpath b1 b2 * * part co / cvector_add f0 b3 b0 * * part co / cvector_add f0 b3 * * * part csubpath b1 b2 b0 c/\ ! ! c= * part clinepath c, cvector_add f0 b0 cvector_add f0 b1 * * part co / cvector_add f0 b2 * part clinepath c, b0 b1 c/\ ! ! c= * * part cpath_component * * part cIMAGE / cvector_add f0 b2 b0 cvector_add f0 b1 * * part cIMAGE / cvector_add f0 b2 * * part cpath_component b0 b1 c/\ ! c= cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 cpath_connected b0 c/\ ! c= clocally part cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cpath_connected b0 c/\ ! c= clocally part cconnected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cconnected b0 c/\ ! c= * part cinside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cinside b0 c/\ ! c= * part coutside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part coutside b0 c/\ ! c= csimply_connected * * part cIMAGE / cvector_add f0 b1 b0 csimply_connected b0 c/\ ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b2 b0 b1 chomotopy_equivalent b0 b1 c/\ ! ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 c/\ ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ (orig = orig) |- ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))))
T c==> c= f0 f0 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- ((~ p) = (p ==> F))
T c= c~ f0 c==> f0 cF
+ F |- (F /\ ((CARD s) = (CARD s)))
T c==> cF c/\ cF c= cCARD f0 cCARD f0
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num (dimindex UNIV))) ==> (((vec (NUMERAL _0)) IN s) \/ ((~ (FINITE s)) \/ ((~ (((int_add (int_of_num (CARD s))) (int_of_num (NUMERAL (BIT1 _0)))) = (int_of_num n))) \/ ((~ ((int_le (int_of_num n)) (int_of_num (dimindex UNIV)))) \/ ((int_lt (int_of_num (CARD s))) (int_of_num (dimindex UNIV)))))))) = (((vec (NUMERAL _0)) IN s) \/ ((~ (FINITE s)) \/ ((~ (((int_add (int_of_num (CARD s))) (int_of_num (NUMERAL (BIT1 _0)))) = (int_of_num n))) \/ ((~ ((int_le (int_of_num n)) (int_of_num (dimindex UNIV)))) \/ ((int_lt (int_of_num (CARD s))) (int_of_num (dimindex UNIV))))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num cdimindex part cUNIV c\/ cIN cvec cNUMERAL c_0 f0 c\/ c~ cFINITE f0 c\/ c~ c= cint_add cint_of_num cCARD f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f1 c\/ c~ cint_le cint_of_num f1 cint_of_num cdimindex part cUNIV cint_lt cint_of_num cCARD f0 cint_of_num cdimindex part cUNIV c\/ cIN cvec cNUMERAL c_0 f0 c\/ c~ cFINITE f0 c\/ c~ c= cint_add cint_of_num cCARD f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f1 c\/ c~ cint_le cint_of_num f1 cint_of_num cdimindex part cUNIV cint_lt cint_of_num cCARD f0 cint_of_num cdimindex part cUNIV
+ |- ((\s. (((vec (NUMERAL _0)) IN ((hull affine) s)) ==> (((hull affine) s) = (span s)))) s)
T * / c==> cIN cvec cNUMERAL c_0 * * part chull part caffine b0 c= * * part chull part caffine b0 * part cspan b0 f0
+ ((\x. (?s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))))) x) |- (((?s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s))))))) ==> F) = F)
T c==> * / c? / c/\ c/\ c\/ c~ c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c/\ c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT b0 b1 f0 c= c==> c? / c/\ c/\ c\/ c~ c<= cCARD b0 cdimindex part cUNIV cnegligible * * part chull part caffine b0 c/\ c~ cIN f0 b0 cFINITE b0 c/\ c<= cCARD * * part cINSERT f0 b0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f0 b0 cF cF
+ |- ((\a. (!s. (!t. ((s <=_c ((IMAGE (\x. ((vector_add a) x))) t)) = (s <=_c t))))) orig)
T * / ! ! c= c<=_c b1 * * part cIMAGE / cvector_add b0 b3 b2 c<=_c b1 b2 f0
+ |- (!x. (!y. ((distance (((vector_add orig) x) , ((vector_add orig) y))) = (distance (x , y)))))
T c= cdistance c, cvector_add f0 f1 cvector_add f0 f2 cdistance c, f1 f2
+ |- (((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))) = ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))
T c= c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- ((\a. (!s. (!t. ((((IMAGE (\x. ((vector_add a) x))) s) =_c t) = (s =_c t))))) orig)
T * / ! ! c= c=_c * * part cIMAGE / cvector_add b0 b3 b1 b2 c=_c b1 b2 f0
+ |- (((!a. (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) INTER ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (s INTER t)))))) ==> ((\a. (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) INTER ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (s INTER t)))))) orig)) = ((\a. (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add a) x)))) s) INTER ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (s INTER t)))))) orig))
T c= c==> ! ! ! c= * * part cINTER * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 * * part cINTER b1 b2 * / ! ! c= * * part cINTER * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 * * part cINTER b1 b2 f0 * / ! ! c= * * part cINTER * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b3 * * part cINTER b1 b2 f0
+ |- ((\a. (!s. ((FINITE ((IMAGE (\y. ((vector_add a) y))) s)) = (FINITE s)))) orig)
T * / ! c= cFINITE * * part cIMAGE / cvector_add b0 b2 b1 cFINITE b1 f0
+ |- (!s. (!t. ((((IMAGE (\x. ((vector_add orig) x))) s) >=_c t) = (s >=_c t))))
T c= c>=_c * * part cIMAGE / cvector_add f0 b0 f1 f2 c>=_c f1 f2
+ |- (((!a. (!x. (!y. (!z. (((between ((vector_add a) x)) (((vector_add a) y) , ((vector_add a) z))) = ((between x) (y , z))))))) ==> ((\a. (!x. (!y. (!z. (((between ((vector_add a) x)) (((vector_add a) y) , ((vector_add a) z))) = ((between x) (y , z))))))) orig)) = ((\a. (!x. (!y. (!z. (((between ((vector_add a) x)) (((vector_add a) y) , ((vector_add a) z))) = ((between x) (y , z))))))) orig))
T c= c==> ! ! ! ! c= cbetween cvector_add b0 b1 c, cvector_add b0 b2 cvector_add b0 b3 cbetween b1 c, b2 b3 * / ! ! ! c= cbetween cvector_add b0 b1 c, cvector_add b0 b2 cvector_add b0 b3 cbetween b1 c, b2 b3 f0 * / ! ! ! c= cbetween cvector_add b0 b1 c, cvector_add b0 b2 cvector_add b0 b3 cbetween b1 c, b2 b3 f0
+ (~ ((vec (NUMERAL _0)) IN s)) |- ((FINITE s) ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))))
T c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
+ |- (!h. (!t. (((CONS ((\x. ((vector_add orig) x)) h)) ((MAP (\x. ((vector_add orig) x))) t)) = ((MAP (\x. ((vector_add orig) x))) ((CONS h) t)))))
T c= cCONS * / cvector_add f0 b0 f1 cMAP / cvector_add f0 b0 f2 cMAP / cvector_add f0 b0 cCONS f1 f2
+ (orig = orig) |- ((!t. (!g. (((shiftpath t) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o ((shiftpath t) g))))) /\ ((!g. (!u. (!v. ((((subpath u) v) ((\x. ((vector_add orig) x)) o g)) = ((\x. ((vector_add orig) x)) o (((subpath u) v) g)))))) /\ ((!b. (!c. ((linepath (((vector_add orig) b) , ((vector_add orig) c))) = ((\x. ((vector_add orig) x)) o (linepath (b , c)))))) /\ ((!s. (!x. (((path_component ((IMAGE (\x. ((vector_add orig) x))) s)) ((vector_add orig) x)) = ((IMAGE (\x. ((vector_add orig) x))) ((path_component s) x))))) /\ ((!s. ((path_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (path_connected s))) /\ ((!s. (((locally path_connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally path_connected) s))) /\ ((!s. (((locally connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally connected) s))) /\ ((!s. ((inside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (inside s)))) /\ ((!s. ((outside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (outside s)))) /\ ((!s. ((simply_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (simply_connected s))) /\ ((!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homotopy_equivalent s) t)))) /\ ((!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) /\ ((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) /\ ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))))))))))))))))))))))))
T c==> c= f0 f0 c/\ ! ! c= * * part cshiftpath b0 * * part co / cvector_add f0 b2 b1 * * part co / cvector_add f0 b2 * * part cshiftpath b0 b1 c/\ ! ! ! c= * * * part csubpath b1 b2 * * part co / cvector_add f0 b3 b0 * * part co / cvector_add f0 b3 * * * part csubpath b1 b2 b0 c/\ ! ! c= * part clinepath c, cvector_add f0 b0 cvector_add f0 b1 * * part co / cvector_add f0 b2 * part clinepath c, b0 b1 c/\ ! ! c= * * part cpath_component * * part cIMAGE / cvector_add f0 b2 b0 cvector_add f0 b1 * * part cIMAGE / cvector_add f0 b2 * * part cpath_component b0 b1 c/\ ! c= cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 cpath_connected b0 c/\ ! c= clocally part cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cpath_connected b0 c/\ ! c= clocally part cconnected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cconnected b0 c/\ ! c= * part cinside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cinside b0 c/\ ! c= * part coutside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part coutside b0 c/\ ! c= csimply_connected * * part cIMAGE / cvector_add f0 b1 b0 csimply_connected b0 c/\ ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b2 b0 b1 chomotopy_equivalent b0 b1 c/\ ! ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 c/\ ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- (((CARD (x INSERT s)) = (CARD (x INSERT s))) = ((FINITE (x INSERT s)) /\ ((CARD (x INSERT s)) = (CARD (x INSERT s)))))
T c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c= c= cCARD * * part cINSERT f1 f0 cCARD * * part cINSERT f1 f0 c/\ cFINITE * * part cINSERT f1 f0 c= cCARD * * part cINSERT f1 f0 cCARD * * part cINSERT f1 f0
+ (orig = orig) |- ((((vector_add orig) x) IN ((IMAGE (\x. ((vector_add orig) x))) s)) = (x IN s))
T c==> c= f0 f0 c= cIN cvector_add f0 f1 * * part cIMAGE / cvector_add f0 b0 f2 cIN f1 f2
+ |- ((\a. (!s. (((hull affine) ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) ((hull affine) s))))) orig)
T * / ! c= * * part chull part caffine * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * * part chull part caffine b1 f0
+ (!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))), ((m <= n) /\ (n < p)) |- (m < p)
T c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 c==> c/\ c<= f0 f1 c< f1 f2 c< f0 f2
+ (orig = orig) |- ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))
T c==> c= f0 f0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- ((x INSERT s) HAS_SIZE (CARD (x INSERT s)))
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 cHAS_SIZE * * part cINSERT f1 f0 cCARD * * part cINSERT f1 f0
+ |- (((!a. (!s. ((ANR ((IMAGE (\x. ((vector_add a) x))) s)) = (ANR s)))) ==> ((\a. (!s. ((ANR ((IMAGE (\x. ((vector_add a) x))) s)) = (ANR s)))) orig)) = ((\a. (!s. ((ANR ((IMAGE (\x. ((vector_add a) x))) s)) = (ANR s)))) orig))
T c= c==> ! ! c= cANR * * part cIMAGE / cvector_add b0 b2 b1 cANR b1 * / ! c= cANR * * part cIMAGE / cvector_add b0 b2 b1 cANR b1 f0 * / ! c= cANR * * part cIMAGE / cvector_add b0 b2 b1 cANR b1 f0
+ (!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) |- ((!p. ((?n. ((m <= n) /\ (n < p))) ==> (m < p))) = T)
T c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 c= ! c==> c? / c/\ c<= f0 b1 c< b1 b0 c< f0 b0 cT
+ |- ((\g'. (!t'. (!e'. ((((vec (NUMERAL _0)) IN s) = g') ==> ((g' ==> ((CARD s) = t')) ==> (((~ g') ==> ((SUC (CARD s)) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN s)) (CARD s)) (SUC (CARD s))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= cIN cvec cNUMERAL c_0 f0 b0 c==> c==> b0 c= cCARD f0 b1 c==> c==> c~ b0 c= cSUC cCARD f0 b2 c= cCOND cIN cvec cNUMERAL c_0 f0 cCARD f0 cSUC cCARD f0 cCOND b0 b1 b2 f1
+ (!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) |- ((?n. ((m <= n) /\ (n < p))) ==> (m < p))
T c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 c==> c? / c/\ c<= f0 b0 c< b0 f1 c< f0 f1
+ (orig = orig) |- (!s. (((hull affine) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) ((hull affine) s))))
T c==> c= f0 f0 ! c= * * part chull part caffine * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * * part chull part caffine b0
+ |- (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) DIFF ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s DIFF t)))))
T c= * * part cDIFF * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f2 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 * * part cDIFF f1 f2
+ |- (((((SUC (CARD s)) = n) ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = ((n <= (dimindex UNIV)) ==> (negligible (span s))))) ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))))) = ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (((SUC (CARD s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s))))))
T c= c==> c==> c= cSUC cCARD f0 f1 c= c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c= cSUC cCARD f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
+ |- (!s. (!t. (((DISJOINT ((IMAGE (\y. ((vector_add orig) y))) s)) ((IMAGE (\y. ((vector_add orig) y))) t)) = ((DISJOINT s) t))))
T c= cDISJOINT * * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE / cvector_add f0 b0 f2 cDISJOINT f1 f2
+ (orig = orig) |- ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))
T c==> c= f0 f0 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- (((!a. (!s. (!t. (((DISJOINT ((IMAGE (\y. ((vector_add a) y))) s)) ((IMAGE (\y. ((vector_add a) y))) t)) = ((DISJOINT s) t))))) ==> ((\a. (!s. (!t. (((DISJOINT ((IMAGE (\y. ((vector_add a) y))) s)) ((IMAGE (\y. ((vector_add a) y))) t)) = ((DISJOINT s) t))))) orig)) = ((\a. (!s. (!t. (((DISJOINT ((IMAGE (\y. ((vector_add a) y))) s)) ((IMAGE (\y. ((vector_add a) y))) t)) = ((DISJOINT s) t))))) orig))
T c= c==> ! ! ! c= cDISJOINT * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cDISJOINT b1 b2 * / ! ! c= cDISJOINT * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cDISJOINT b1 b2 f0 * / ! ! c= cDISJOINT * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 cDISJOINT b1 b2 f0
+ |- ((\s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) s)
T * / ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 f0
+ (orig = orig) |- ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s)))))))))))))
T c==> c= f0 f0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
+ (!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) |- (((!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p)))) ==> ((\n. (!p. (((m <= n) /\ (n < p)) ==> (m < p)))) n)) = ((\n. (!p. (((m <= n) /\ (n < p)) ==> (m < p)))) n))
T c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 c= c==> ! ! c==> c/\ c<= f0 b0 c< b0 b1 c< f0 b1 * / ! c==> c/\ c<= f0 b0 c< b0 b1 c< f0 b1 f1 * / ! c==> c/\ c<= f0 b0 c< b0 b1 c< f0 b1 f1
+ |- (((!a. (!s. ((relative_interior ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (relative_interior s))))) ==> ((\a. (!s. ((relative_interior ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (relative_interior s))))) orig)) = ((\a. (!s. ((relative_interior ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (relative_interior s))))) orig))
T c= c==> ! ! c= * part crelative_interior * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part crelative_interior b1 * / ! c= * part crelative_interior * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part crelative_interior b1 f0 * / ! c= * part crelative_interior * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part crelative_interior b1 f0
+ |- ((\a. (!g. ((path_length ((\x. ((vector_add a) x)) o g)) = (path_length g)))) orig)
T * / ! c= cpath_length * * part co / cvector_add b0 b2 b1 cpath_length b1 f0
+ |- ((\a. (!g. ((path_image ((\x. ((vector_add a) x)) o g)) = ((IMAGE (\x. ((vector_add a) x))) (path_image g))))) orig)
T * / ! c= * part cpath_image * * part co / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cpath_image b1 f0
+ (~ ((vec (NUMERAL _0)) IN s)) |- ((((COND ((vec (NUMERAL _0)) IN s)) (CARD s)) (SUC (CARD s))) = (((COND F) (CARD s)) (SUC (CARD s))))
T c==> c~ cIN cvec cNUMERAL c_0 f0 c= cCOND cIN cvec cNUMERAL c_0 f0 cCARD f0 cSUC cCARD f0 cCOND cF cCARD f0 cSUC cCARD f0
+ |- (((!a. (!g. (!u. (!v. ((((subpath u) v) ((\x. ((vector_add a) x)) o g)) = ((\x. ((vector_add a) x)) o (((subpath u) v) g))))))) ==> ((\a. (!g. (!u. (!v. ((((subpath u) v) ((\x. ((vector_add a) x)) o g)) = ((\x. ((vector_add a) x)) o (((subpath u) v) g))))))) orig)) = ((\a. (!g. (!u. (!v. ((((subpath u) v) ((\x. ((vector_add a) x)) o g)) = ((\x. ((vector_add a) x)) o (((subpath u) v) g))))))) orig))
T c= c==> ! ! ! ! c= * * * part csubpath b2 b3 * * part co / cvector_add b0 b4 b1 * * part co / cvector_add b0 b4 * * * part csubpath b2 b3 b1 * / ! ! ! c= * * * part csubpath b2 b3 * * part co / cvector_add b0 b4 b1 * * part co / cvector_add b0 b4 * * * part csubpath b2 b3 b1 f0 * / ! ! ! c= * * * part csubpath b2 b3 * * part co / cvector_add b0 b4 b1 * * part co / cvector_add b0 b4 * * * part csubpath b2 b3 b1 f0
+ (~ ((vec (NUMERAL _0)) IN s)), (FINITE s) |- (((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) = ((SUC (CARD s)) = n)) ==> ((((SUC (CARD s)) = n) ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = q')) ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (((SUC (CARD s)) = n) ==> q')))) = ((((SUC (CARD s)) = n) ==> (((n <= (dimindex UNIV)) ==> (negligible (span s))) = q')) ==> ((((CARD ((vec (NUMERAL _0)) INSERT s)) = n) ==> ((n <= (dimindex UNIV)) ==> (negligible (span s)))) = (((SUC (CARD s)) = n) ==> q'))))
T c==> c~ cIN cvec cNUMERAL c_0 f0 c==> cFINITE f0 c= c==> c= c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c= cSUC cCARD f0 f1 c==> c==> c= cSUC cCARD f0 f1 c= c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 f2 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c= cSUC cCARD f0 f1 f2 c==> c==> c= cSUC cCARD f0 f1 c= c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 f2 c= c==> c= cCARD * * part cINSERT cvec cNUMERAL c_0 f0 f1 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c= cSUC cCARD f0 f1 f2
+ (~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) |- (((?x. (?s. ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))))) ==> F) = F)
T c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c= c==> c? / c? / c/\ c/\ c\/ c~ c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c/\ c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF cF
+ |- (!x. (!s. ((((vector_add orig) x) INSERT ((IMAGE (\y. ((vector_add orig) y))) s)) = ((IMAGE (\y. ((vector_add orig) y))) (x INSERT s)))))
T c= * * part cINSERT cvector_add f0 f1 * * part cIMAGE / cvector_add f0 b0 f2 * * part cIMAGE / cvector_add f0 b0 * * part cINSERT f1 f2
+ |- (((!a. (!g. ((pathstart ((\x. ((vector_add a) x)) o g)) = ((vector_add a) (pathstart g))))) ==> ((\a. (!g. ((pathstart ((\x. ((vector_add a) x)) o g)) = ((vector_add a) (pathstart g))))) orig)) = ((\a. (!g. ((pathstart ((\x. ((vector_add a) x)) o g)) = ((vector_add a) (pathstart g))))) orig))
T c= c==> ! ! c= cpathstart * * part co / cvector_add b0 b2 b1 cvector_add b0 cpathstart b1 * / ! c= cpathstart * * part co / cvector_add b0 b2 b1 cvector_add b0 cpathstart b1 f0 * / ! c= cpathstart * * part co / cvector_add b0 b2 b1 cvector_add b0 cpathstart b1 f0
+ (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))), (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) |- (~ (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))))
T c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c~ ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1
+ |- (!s. ((FINITE ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s)) = (FINITE s)))
T c= cFINITE * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 cFINITE f1
+ |- (((!p. ((?n. ((m <= n) /\ (n < p))) ==> (m < p))) ==> ((\p. ((?n. ((m <= n) /\ (n < p))) ==> (m < p))) p)) = ((\p. ((?n. ((m <= n) /\ (n < p))) ==> (m < p))) p))
T c= c==> ! c==> c? / c/\ c<= f0 b1 c< b1 b0 c< f0 b0 * / c==> c? / c/\ c<= f0 b1 c< b1 b0 c< f0 b0 f1 * / c==> c? / c/\ c<= f0 b1 c< b1 b0 c< f0 b0 f1
+ |- (((!a. (!g. ((simple_path ((\x. ((vector_add a) x)) o g)) = (simple_path g)))) ==> ((\a. (!g. ((simple_path ((\x. ((vector_add a) x)) o g)) = (simple_path g)))) orig)) = ((\a. (!g. ((simple_path ((\x. ((vector_add a) x)) o g)) = (simple_path g)))) orig))
T c= c==> ! ! c= csimple_path * * part co / cvector_add b0 b2 b1 csimple_path b1 * / ! c= csimple_path * * part co / cvector_add b0 b2 b1 csimple_path b1 f0 * / ! c= csimple_path * * part co / cvector_add b0 b2 b1 csimple_path b1 f0
+ |- (((!x. ((FINITE (x INSERT s)) = (FINITE s))) ==> ((\x. ((FINITE (x INSERT s)) = (FINITE s))) x)) = ((\x. ((FINITE (x INSERT s)) = (FINITE s))) x))
T c= c==> ! c= cFINITE * * part cINSERT b0 f0 cFINITE f0 * / c= cFINITE * * part cINSERT b0 f0 cFINITE f0 f1 * / c= cFINITE * * part cINSERT b0 f0 cFINITE f0 f1
+ (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), (~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) |- ((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> (~ (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s)))))))))
T c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 c~ ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1
+ |- (((m <= n) /\ (n < p)) ==> ((!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) ==> (m < p)))
T c==> c/\ c<= f0 f1 c< f1 f2 c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 c< f0 f2
+ (orig = orig) |- ((\s. (!n. ((((IMAGE (\y. ((vector_add orig) y))) s) HAS_SIZE n) = (s HAS_SIZE n)))) s)
T c==> c= f0 f0 * / ! c= cHAS_SIZE * * part cIMAGE / cvector_add f0 b2 b0 b1 cHAS_SIZE b0 b1 f1
+ |- (((!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) ==> ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) (dimindex UNIV))) = ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) (dimindex UNIV)))
T c= c==> ! cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 cdimindex part cUNIV * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 cdimindex part cUNIV
+ ((SUC (CARD s)) = n) |- (((SUC (CARD s)) = n) /\ (((n <= (dimindex UNIV)) ==> (negligible (span s))) = ((n <= (dimindex UNIV)) ==> (negligible (span s)))))
T c==> c= cSUC cCARD f0 f1 c/\ c= cSUC cCARD f0 f1 c= c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0 c==> c<= f1 cdimindex part cUNIV cnegligible * part cspan f0
+ (!x. (!s. (!n. (((~ (x IN s)) /\ (((x INSERT s) HAS_SIZE n) /\ (n <= (dimindex UNIV)))) ==> (negligible ((hull affine) (x INSERT s))))))) |- ((~ (!x. (!s. (((((CARD s) <= (dimindex UNIV)) ==> (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (((CARD (x INSERT s)) <= (dimindex UNIV)) ==> (negligible ((hull affine) (x INSERT s)))))))) ==> F)
T c==> ! ! ! c==> c/\ c~ cIN b0 b1 c/\ cHAS_SIZE * * part cINSERT b0 b1 b2 c<= b2 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 c==> c~ ! ! c==> c/\ c==> c<= cCARD b1 cdimindex part cUNIV cnegligible * * part chull part caffine b1 c/\ c~ cIN b0 b1 cFINITE b1 c==> c<= cCARD * * part cINSERT b0 b1 cdimindex part cUNIV cnegligible * * part chull part caffine * * part cINSERT b0 b1 cF
+ |- (!s. (!t. ((((IMAGE (IMAGE (\x. ((vector_add orig) x)))) s) INTER ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) (s INTER t)))))
T c= * * part cINTER * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f1 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 f2 * * part cIMAGE * part cIMAGE / cvector_add f0 b0 * * part cINTER f1 f2
+ (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))), ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- ((((FINITE (x INSERT s)) /\ ((CARD (x INSERT s)) = (CARD (x INSERT s)))) ==> ((x INSERT s) HAS_SIZE (CARD (x INSERT s)))) = ((x INSERT s) HAS_SIZE (CARD (x INSERT s))))
T c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c= c==> c/\ cFINITE * * part cINSERT f1 f0 c= cCARD * * part cINSERT f1 f0 cCARD * * part cINSERT f1 f0 cHAS_SIZE * * part cINSERT f1 f0 cCARD * * part cINSERT f1 f0 cHAS_SIZE * * part cINSERT f1 f0 cCARD * * part cINSERT f1 f0
+ |- ((\a. (!s. ((collinear ((IMAGE (\x. ((vector_add a) x))) s)) = (collinear s)))) orig)
T * / ! c= ccollinear * * part cIMAGE / cvector_add b0 b2 b1 ccollinear b1 f0
+ |- ((\a. (!p. (!s. (!t. ((((COND p) ((IMAGE (IMAGE (\x. ((vector_add a) x)))) s)) ((IMAGE (IMAGE (\x. ((vector_add a) x)))) t)) = ((IMAGE (IMAGE (\x. ((vector_add a) x)))) (((COND p) s) t))))))) orig)
T * / ! ! ! c= * * * part cCOND b1 * * part cIMAGE * part cIMAGE / cvector_add b0 b4 b2 * * part cIMAGE * part cIMAGE / cvector_add b0 b4 b3 * * part cIMAGE * part cIMAGE / cvector_add b0 b4 * * * part cCOND b1 b2 b3 f0
+ |- (NIL = ((MAP (\x. ((vector_add orig) x))) NIL))
T c= cNIL cMAP / cvector_add f0 b0 cNIL
+ |- ((\a. (!g. (!u. (!v. ((((subpath u) v) ((\x. ((vector_add a) x)) o g)) = ((\x. ((vector_add a) x)) o (((subpath u) v) g))))))) orig)
T * / ! ! ! c= * * * part csubpath b2 b3 * * part co / cvector_add b0 b4 b1 * * part co / cvector_add b0 b4 * * * part csubpath b2 b3 b1 f0
+ |- (!s. (!t. ((s >_c ((IMAGE (\x. ((vector_add orig) x))) t)) = (s >_c t))))
T c= c>_c f0 * * part cIMAGE / cvector_add f1 b0 f2 c>_c f0 f2
+ ((((~ ((CARD s) <= (dimindex UNIV))) \/ (negligible ((hull affine) s))) /\ ((~ (x IN s)) /\ (FINITE s))) /\ (((CARD (x INSERT s)) <= (dimindex UNIV)) /\ (~ (negligible ((hull affine) (x INSERT s)))))) |- (~ (x IN s))
T c==> c/\ c/\ c\/ c~ c<= cCARD f0 cdimindex part cUNIV cnegligible * * part chull part caffine f0 c/\ c~ cIN f1 f0 cFINITE f0 c/\ c<= cCARD * * part cINSERT f1 f0 cdimindex part cUNIV c~ cnegligible * * part chull part caffine * * part cINSERT f1 f0 c~ cIN f1 f0
+ |- ((\a. (!s. (!t. ((((IMAGE (\x. ((vector_add a) x))) s) <=_c t) = (s <=_c t))))) orig)
T * / ! ! c= c<=_c * * part cIMAGE / cvector_add b0 b3 b1 b2 c<=_c b1 b2 f0
+ |- ((\a. (!s. ((frontier ((IMAGE (\x. ((vector_add a) x))) s)) = ((IMAGE (\x. ((vector_add a) x))) (frontier s))))) orig)
T * / ! c= * part cfrontier * * part cIMAGE / cvector_add b0 b2 b1 * * part cIMAGE / cvector_add b0 b2 * part cfrontier b1 f0
+ |- ((!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))) = T)
T c= ! ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c==> c==> c~ f1 c= f3 b1 c= cCOND f0 f2 f3 cCOND f1 b0 b1 cT
+ |- ((\a. (!s. (!t. ((((IMAGE (\y. ((vector_add a) y))) s) UNION ((IMAGE (\y. ((vector_add a) y))) t)) = ((IMAGE (\y. ((vector_add a) y))) (s UNION t)))))) orig)
T * / ! ! c= * * part cUNION * * part cIMAGE / cvector_add b0 b3 b1 * * part cIMAGE / cvector_add b0 b3 b2 * * part cIMAGE / cvector_add b0 b3 * * part cUNION b1 b2 f0
+ |- ((!s. (!x. (((path_component ((IMAGE (\x. ((vector_add orig) x))) s)) ((vector_add orig) x)) = ((IMAGE (\x. ((vector_add orig) x))) ((path_component s) x))))) /\ ((!s. ((path_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (path_connected s))) /\ ((!s. (((locally path_connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally path_connected) s))) /\ ((!s. (((locally connected) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((locally connected) s))) /\ ((!s. ((inside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (inside s)))) /\ ((!s. ((outside ((IMAGE (\x. ((vector_add orig) x))) s)) = ((IMAGE (\x. ((vector_add orig) x))) (outside s)))) /\ ((!s. ((simply_connected ((IMAGE (\x. ((vector_add orig) x))) s)) = (simply_connected s))) /\ ((!s. (!t. (((homotopy_equivalent ((IMAGE (\x. ((vector_add orig) x))) s)) t) = ((homotopy_equivalent s) t)))) /\ ((!s. (!t. (((homotopy_equivalent s) ((IMAGE (\x. ((vector_add orig) x))) t)) = ((homotopy_equivalent s) t)))) /\ ((!s. ((contractible ((IMAGE (\x. ((vector_add orig) x))) s)) = (contractible s))) /\ ((!f. (!s. (((face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((face_of f) s)))) /\ ((!f. (!s. (((exposed_face_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((exposed_face_of f) s)))) /\ ((!x. (!s. (((extreme_point_of ((vector_add orig) x)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((extreme_point_of x) s)))) /\ ((!f. (!s. (((facet_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((facet_of f) s)))) /\ ((!f. (!s. (((edge_of ((IMAGE (\x. ((vector_add orig) x))) f)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((edge_of f) s)))) /\ ((!s. ((polytope ((IMAGE (\x. ((vector_add orig) x))) s)) = (polytope s))) /\ ((!s. ((polyhedron ((IMAGE (\x. ((vector_add orig) x))) s)) = (polyhedron s))) /\ ((!s. (!n. (((simplex n) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((simplex n) s)))) /\ ((!tr. ((simplicial_complex ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (simplicial_complex tr))) /\ ((!tr. ((triangulation ((IMAGE (IMAGE (\x. ((vector_add orig) x)))) tr)) = (triangulation tr))) /\ ((!t. (!s. (((retract_of ((IMAGE (\x. ((vector_add orig) x))) t)) ((IMAGE (\x. ((vector_add orig) x))) s)) = ((retract_of t) s)))) /\ ((!s. ((AR ((IMAGE (\x. ((vector_add orig) x))) s)) = (AR s))) /\ ((!s. ((ANR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ANR s))) /\ ((!s. ((ENR ((IMAGE (\x. ((vector_add orig) x))) s)) = (ENR s))) /\ ((!g. ((rectifiable_path ((\x. ((vector_add orig) x)) o g)) = (rectifiable_path g))) /\ ((!g. ((path_length ((\x. ((vector_add orig) x)) o g)) = (path_length g))) /\ ((!s. (!m. (((has_measure ((IMAGE (\x. ((vector_add orig) x))) s)) m) = ((has_measure s) m)))) /\ ((!s. ((measure ((IMAGE (\x. ((vector_add orig) x))) s)) = (measure s))) /\ ((!s. ((negligible ((IMAGE (\x. ((vector_add orig) x))) s)) = (negligible s))) /\ (!s. ((measurable ((IMAGE (\x. ((vector_add orig) x))) s)) = (measurable s))))))))))))))))))))))))))))))))
T c/\ ! ! c= * * part cpath_component * * part cIMAGE / cvector_add f0 b2 b0 cvector_add f0 b1 * * part cIMAGE / cvector_add f0 b2 * * part cpath_component b0 b1 c/\ ! c= cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 cpath_connected b0 c/\ ! c= clocally part cpath_connected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cpath_connected b0 c/\ ! c= clocally part cconnected * * part cIMAGE / cvector_add f0 b1 b0 clocally part cconnected b0 c/\ ! c= * part cinside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part cinside b0 c/\ ! c= * part coutside * * part cIMAGE / cvector_add f0 b1 b0 * * part cIMAGE / cvector_add f0 b1 * part coutside b0 c/\ ! c= csimply_connected * * part cIMAGE / cvector_add f0 b1 b0 csimply_connected b0 c/\ ! ! c= chomotopy_equivalent * * part cIMAGE / cvector_add f0 b2 b0 b1 chomotopy_equivalent b0 b1 c/\ ! ! c= chomotopy_equivalent b0 * * part cIMAGE / cvector_add f0 b2 b1 chomotopy_equivalent b0 b1 c/\ ! c= ccontractible * * part cIMAGE / cvector_add f0 b1 b0 ccontractible b0 c/\ ! ! c= cface_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cface_of b0 b1 c/\ ! ! c= cexposed_face_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cexposed_face_of b0 b1 c/\ ! ! c= cextreme_point_of cvector_add f0 b0 * * part cIMAGE / cvector_add f0 b2 b1 cextreme_point_of b0 b1 c/\ ! ! c= cfacet_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cfacet_of b0 b1 c/\ ! ! c= cedge_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cedge_of b0 b1 c/\ ! c= cpolytope * * part cIMAGE / cvector_add f0 b1 b0 cpolytope b0 c/\ ! c= cpolyhedron * * part cIMAGE / cvector_add f0 b1 b0 cpolyhedron b0 c/\ ! ! c= csimplex b1 * * part cIMAGE / cvector_add f0 b2 b0 csimplex b1 b0 c/\ ! c= csimplicial_complex * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 csimplicial_complex b0 c/\ ! c= ctriangulation * * part cIMAGE * part cIMAGE / cvector_add f0 b1 b0 ctriangulation b0 c/\ ! ! c= cretract_of * * part cIMAGE / cvector_add f0 b2 b0 * * part cIMAGE / cvector_add f0 b2 b1 cretract_of b0 b1 c/\ ! c= cAR * * part cIMAGE / cvector_add f0 b1 b0 cAR b0 c/\ ! c= cANR * * part cIMAGE / cvector_add f0 b1 b0 cANR b0 c/\ ! c= cENR * * part cIMAGE / cvector_add f0 b1 b0 cENR b0 c/\ ! c= crectifiable_path * * part co / cvector_add f0 b1 b0 crectifiable_path b0 c/\ ! c= cpath_length * * part co / cvector_add f0 b1 b0 cpath_length b0 c/\ ! ! c= chas_measure * * part cIMAGE / cvector_add f0 b2 b0 b1 chas_measure b0 b1 c/\ ! c= cmeasure * * part cIMAGE / cvector_add f0 b1 b0 cmeasure b0 c/\ ! c= cnegligible * * part cIMAGE / cvector_add f0 b1 b0 cnegligible b0 ! c= cmeasurable * * part cIMAGE / cvector_add f0 b1 b0 cmeasurable b0
+ ((\n. ((m <= n) /\ (n < p))) n) |- ((((m <= n) /\ (n < p)) ==> ((!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) ==> (m < p))) = ((!m. (!n. (!p. (((m <= n) /\ (n < p)) ==> (m < p))))) ==> (m < p)))
T c==> * / c/\ c<= f0 b0 c< b0 f1 f2 c= c==> c/\ c<= f0 f2 c< f2 f1 c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 c< f0 f1 c==> ! ! ! c==> c/\ c<= b0 b1 c< b1 b2 c< b0 b2 c< f0 f1
