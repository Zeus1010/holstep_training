N Dangeyj.SPLIT_NORMAL_LIST_CASES
C |- ((((MEM x) r) /\ (uniq r)) ==> (((MEM x) (FST (((((split_normal_list L) r) f) ram1) ram2))) \/ ((MEM x) (SND (((((split_normal_list L) r) f) ram1) ram2)))))
T c==> c/\ cMEM f0 f1 cuniq f1 c\/ cMEM f0 cFST csplit_normal_list f2 f1 f3 f4 f5 cMEM f0 cSND csplit_normal_list f2 f1 f3 f4 f5
D TRUTH
A |- T
T cT
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D FST
A |- (!x. (!y. ((FST (x , y)) = x)))
T c= cFST c, f0 f1 f0
D SND
A |- (!x. (!y. ((SND (x , y)) = y)))
T c= cSND c, f0 f1 f1
D MEM_APPEND
A |- (!x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))))
T c= cMEM f0 cAPPEND f1 f2 c\/ cMEM f0 f1 cMEM f0 f2
D Nkezbfc_local.lemma
A |- (!A. (A \/ (~ A)))
T c\/ f0 c~ f0
D Nkezbfc_local.lemma1
A |- (!A. ((~ A) \/ A))
T c\/ c~ f0 f0
D Seq.mem_seq1
A |- (!x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y))))
T c= cMEM f0 cCONS f1 cNIL c= f0 f1
D Seq.mem_rev
A |- (!s. (!x. (((MEM x) (rev s)) = ((MEM x) s))))
T c= cMEM f0 crev f1 cMEM f0 f1
D Seq2.mem_flatten
A |- (!x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))))
T c= cMEM f0 cflatten f1 c? / c/\ cMEM b0 f1 cMEM f0 b0
D Seq2.next_el_outside
A |- (!s. (!x. ((~ ((MEM x) s)) ==> (((next_el s) x) = x))))
T c==> c~ cMEM f0 f1 c= cnext_el f1 f0 f0
D Seq2.mem_next_el
A |- (!x. (!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s))))
T c==> cMEM f0 f1 cMEM cnext_el f1 f0 f1
D Tame_defs2.split_normal_list
A |- (!L. (!r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))))))
T c= csplit_normal_list f0 f1 f2 f3 f4 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b5 b6 cAPPEND b7 b4 cAPPEND cCONS b1 cNIL cAPPEND cbetwn f1 b1 f3 cCONS f3 cNIL cAPPEND cCONS b0 cNIL cAPPEND cbetwn f1 b0 f4 cCONS f4 cNIL cflatten cmap b3 b4 cbetwn f2 f3 b1 / cmap / cPOWER * part cn_list f0 b4 b3 cupt cNUMERAL cBIT1 c_0 * b2 cFST b3 / csizel cfilter / c= b3 b2 cflatten f0 cnext_el f1 f4 cnext_el f1 f3
D Tame_list.MEM_HD
A |- (!xs. ((~ (xs = NIL)) ==> ((MEM (HD xs)) xs)))
T c==> c~ c= f0 cNIL cMEM cHD f0 f0
D Tame_list.REVERSE_rev
A |- (REVERSE = rev)
T c= part cREVERSE part crev
D Tame_list.not_betwn1
A |- (!x. (!z. (!s. (((uniq s) /\ ((MEM z) s)) ==> (~ ((MEM x) (((betwn s) x) z)))))))
T c==> c/\ cuniq f0 cMEM f1 f0 c~ cMEM f2 cbetwn f0 f2 f1
D Tame_list.not_betwn2
A |- (!x. (!z. (!s. ((uniq s) ==> (~ ((MEM z) (((betwn s) x) z)))))))
T c==> cuniq f0 c~ cMEM f1 cbetwn f0 f2 f1
D Tame_list.betwn_cases
A |- (!s. (!x. (!y. (!z. (((~ (x = z)) /\ ((uniq s) /\ (((MEM x) s) /\ (((MEM y) s) /\ ((MEM z) s))))) ==> ((y = x) \/ ((y = z) \/ (((MEM y) (((betwn s) x) z)) \/ ((MEM y) (((betwn s) z) x))))))))))
T c==> c/\ c~ c= f0 f1 c/\ cuniq f2 c/\ cMEM f0 f2 c/\ cMEM f3 f2 cMEM f1 f2 c\/ c= f3 f0 c\/ c= f3 f1 c\/ cMEM f3 cbetwn f2 f0 f1 cMEM f3 cbetwn f2 f1 f0
D Tame_list.next_el_refl
A |- (!x. (!s. ((((MEM x) s) /\ ((((next_el s) x) = x) /\ (uniq s))) ==> (s = ((CONS x) NIL)))))
T c==> c/\ cMEM f0 f1 c/\ c= cnext_el f1 f0 f0 cuniq f1 c= f1 cCONS f0 cNIL
D Dangeyj.not_betwn
A |- (((~ ((MEM ram1) r)) /\ (~ ((MEM ram2) r))) ==> ((((betwn r) ram1) ram2) = r))
T c==> c/\ c~ cMEM f0 f1 c~ cMEM f2 f1 c= cbetwn f1 f0 f2 f1
D Dangeyj.not_in_mem_betwn
A |- (!r. (!r1. (!r2. (((~ ((MEM r1) r)) /\ (((MEM r2) r) /\ ((MEM x) r))) ==> ((r2 = x) \/ ((MEM x) (((betwn r) r2) r1)))))))
T c==> c/\ c~ cMEM f0 f1 c/\ cMEM f2 f1 cMEM f3 f1 c\/ c= f2 f3 cMEM f3 cbetwn f1 f2 f0
D Dangeyj.in_uniq_betwn
A |- (!r. (!r1. ((((MEM r1) r) /\ (((MEM x) r) /\ (uniq r))) ==> ((r1 = x) \/ ((MEM x) (((betwn r) r1) r1))))))
T c==> c/\ cMEM f0 f1 c/\ cMEM f2 f1 cuniq f1 c\/ c= f0 f2 cMEM f2 cbetwn f1 f0 f0
D Dangeyj.HD_BETWN1
A |- (!r. (!r1. ((((MEM r1) r) /\ ((uniq r) /\ (~ (r = ((CONS r1) NIL))))) ==> ((HD (((betwn r) r1) r1)) = ((next_el r) r1)))))
T c==> c/\ cMEM f0 f1 c/\ cuniq f1 c~ c= f1 cCONS f0 cNIL c= cHD cbetwn f1 f0 f0 cnext_el f1 f0
D Dangeyj.BETWN_TWO_MEM
A |- (!r. (((uniq r) /\ (((MEM r1) r) /\ (((MEM r2) r) /\ (((MEM r3) (((betwn r) r1) r2)) /\ (((HD (((betwn r) r1) r2)) = r3) /\ ((MEM x) (((betwn (((betwn r) r1) r2)) r3) r2))))))) ==> ((MEM x) (((betwn r) r3) r2))))
T c==> c/\ cuniq f0 c/\ cMEM f1 f0 c/\ cMEM f2 f0 c/\ cMEM f3 cbetwn f0 f1 f2 c/\ c= cHD cbetwn f0 f1 f2 f3 cMEM f4 cbetwn cbetwn f0 f1 f2 f3 f2 cMEM f4 cbetwn f0 f3 f2
D Dangeyj.mem_imp_not_nil
A |- (!s. (!x. (((MEM x) s) ==> (~ (s = NIL)))))
T c==> cMEM f0 f1 c~ c= f1 cNIL
D Dangeyj.HD_BETWN2
A |- (!r. (!r1. (!r2. ((((MEM r1) r) /\ (((MEM r2) r) /\ ((~ (r1 = r2)) /\ ((uniq r) /\ (~ ((((betwn r) r1) r2) = NIL)))))) ==> ((HD (((betwn r) r1) r2)) = ((next_el r) r1))))))
T c==> c/\ cMEM f0 f1 c/\ cMEM f2 f1 c/\ c~ c= f0 f2 c/\ cuniq f1 c~ c= cbetwn f1 f0 f2 cNIL c= cHD cbetwn f1 f0 f2 cnext_el f1 f0
+ |- (((MEM ram1) r) ==> ((((MEM x) r) /\ (uniq r)) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ((next_el r) ram1)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ((next_el r) ram2)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2)))))))
T c==> cMEM f0 f1 c==> c/\ cMEM f2 f1 cuniq f1 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f3 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f3 cbetwn f4 f0 cnext_el f1 f5 cMEM f2 b0 c\/ cMEM f2 cCONS cnext_el f1 f0 cNIL c\/ cMEM f2 cbetwn f1 cnext_el f1 f0 f5 cMEM f2 cCONS f5 cNIL c\/ c\/ cMEM f2 cCONS cnext_el f1 f5 cNIL c\/ cMEM f2 cbetwn f1 cnext_el f1 f5 f0 cMEM f2 cCONS f0 cNIL cMEM f2 cbetwn f4 f0 cnext_el f1 f5
+ ((MEM ram1) r), ((MEM ram2) r) |- ((ram1 = ram2) ==> ((((MEM x) r) /\ (uniq r)) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ((next_el r) ram1)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ((next_el r) ram2)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2)))))))
T c==> cMEM f0 f1 c==> cMEM f2 f1 c==> c= f0 f2 c==> c/\ cMEM f3 f1 cuniq f1 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f0 cnext_el f1 f2 cMEM f3 b0 c\/ cMEM f3 cCONS cnext_el f1 f0 cNIL c\/ cMEM f3 cbetwn f1 cnext_el f1 f0 f2 cMEM f3 cCONS f2 cNIL c\/ c\/ cMEM f3 cCONS cnext_el f1 f2 cNIL c\/ cMEM f3 cbetwn f1 cnext_el f1 f2 f0 cMEM f3 cCONS f0 cNIL cMEM f3 cbetwn f5 f0 cnext_el f1 f2
- |- ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all))))
T c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
+ (uniq r), (ram1 = ram2), ((MEM ram1) r), ((MEM ram2) r), ((MEM x) r) |- (((((MEM ram1) r) /\ (((MEM x) r) /\ (uniq r))) ==> ((ram1 = x) \/ ((MEM x) (((betwn r) ram1) ram1)))) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram2) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ((next_el r) ram2)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ((next_el r) ram2)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) \/ ((MEM x) ((CONS ram2) NIL)))) \/ ((MEM x) (((betwn f) ram2) ((next_el r) ram2))))))
T c==> cuniq f0 c==> c= f1 f2 c==> cMEM f1 f0 c==> cMEM f2 f0 c==> cMEM f3 f0 c==> c==> c/\ cMEM f1 f0 c/\ cMEM f3 f0 cuniq f0 c\/ c= f1 f3 cMEM f3 cbetwn f0 f1 f1 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f2 cnext_el f0 f2 cMEM f3 b0 c\/ cMEM f3 cCONS cnext_el f0 f2 cNIL c\/ cMEM f3 cbetwn f0 cnext_el f0 f2 f2 cMEM f3 cCONS f2 cNIL c\/ c\/ cMEM f3 cCONS cnext_el f0 f2 cNIL c\/ cMEM f3 cbetwn f0 cnext_el f0 f2 f2 cMEM f3 cCONS f2 cNIL cMEM f3 cbetwn f5 f2 cnext_el f0 f2
+ |- ((\x. (!z. (!s. (((uniq s) /\ ((MEM z) s)) ==> (~ ((MEM x) (((betwn s) x) z))))))) ram2)
T * / ! ! c==> c/\ cuniq b2 cMEM b1 b2 c~ cMEM b0 cbetwn b2 b0 b1 f0
+ (~ ((MEM ram1) (((betwn r) ram2) ram1))), (uniq r), ((HD (((betwn r) ram2) ram1)) = ((next_el r) ram2)), ((MEM ram1) r), ((MEM ram2) r), ((MEM x) (((betwn r) ram2) ram1)), ((MEM ((next_el r) ram2)) (((betwn r) ram2) ram1)) |- ((((~ ((MEM ram1) (((betwn r) ram2) ram1))) /\ (((MEM ((next_el r) ram2)) (((betwn r) ram2) ram1)) /\ ((MEM x) (((betwn r) ram2) ram1)))) ==> ((((next_el r) ram2) = x) \/ ((MEM x) (((betwn (((betwn r) ram2) ram1)) ((next_el r) ram2)) ram1)))) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram1)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ (x = ram1))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2))))))
T c==> c~ cMEM f0 cbetwn f1 f2 f0 c==> cuniq f1 c==> c= cHD cbetwn f1 f2 f0 cnext_el f1 f2 c==> cMEM f0 f1 c==> cMEM f2 f1 c==> cMEM f3 cbetwn f1 f2 f0 c==> cMEM cnext_el f1 f2 cbetwn f1 f2 f0 c==> c==> c/\ c~ cMEM f0 cbetwn f1 f2 f0 c/\ cMEM cnext_el f1 f2 cbetwn f1 f2 f0 cMEM f3 cbetwn f1 f2 f0 c\/ c= cnext_el f1 f2 f3 cMEM f3 cbetwn cbetwn f1 f2 f0 cnext_el f1 f2 f0 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f0 cnext_el f1 f2 cMEM f3 b0 c\/ c= f3 cnext_el f1 f0 c\/ cMEM f3 cbetwn f1 cnext_el f1 f0 f2 c= f3 f2 c\/ c\/ c= f3 cnext_el f1 f2 c\/ cMEM f3 cbetwn f1 cnext_el f1 f2 f0 c= f3 f0 cMEM f3 cbetwn f5 f0 cnext_el f1 f2
- ((~ (!A. ((~ A) \/ A))) ==> F) |- (((~ (!A. ((~ A) \/ A))) ==> F) /\ ((~ (!A. ((~ A) \/ A))) ==> F))
T c==> c==> c~ ! c\/ c~ b0 b0 cF c/\ c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF
+ |- (((uniq r) /\ (((MEM ram2) r) /\ (((MEM ram2) r) /\ (((MEM ((next_el r) ram2)) (((betwn r) ram2) ram2)) /\ (((HD (((betwn r) ram2) ram2)) = ((next_el r) ram2)) /\ ((MEM x) (((betwn (((betwn r) ram2) ram2)) ((next_el r) ram2)) ram2))))))) ==> ((MEM x) (((betwn r) ((next_el r) ram2)) ram2)))
T c==> c/\ cuniq f0 c/\ cMEM f1 f0 c/\ cMEM f1 f0 c/\ cMEM cnext_el f0 f1 cbetwn f0 f1 f1 c/\ c= cHD cbetwn f0 f1 f1 cnext_el f0 f1 cMEM f2 cbetwn cbetwn f0 f1 f1 cnext_el f0 f1 f1 cMEM f2 cbetwn f0 cnext_el f0 f1 f1
+ (~ ((MEM ram1) (((betwn r) ram2) ram1))), ((MEM x) (((betwn r) ram2) ram1)), ((MEM ((next_el r) ram2)) (((betwn r) ram2) ram1)) |- ((((((next_el r) ram2) = x) \/ ((MEM x) (((betwn (((betwn r) ram2) ram1)) ((next_el r) ram2)) ram1))) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram1)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ (x = ram1))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2)))))) = ((((~ ((MEM ram1) (((betwn r) ram2) ram1))) /\ (((MEM ((next_el r) ram2)) (((betwn r) ram2) ram1)) /\ ((MEM x) (((betwn r) ram2) ram1)))) ==> ((((next_el r) ram2) = x) \/ ((MEM x) (((betwn (((betwn r) ram2) ram1)) ((next_el r) ram2)) ram1)))) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram1)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ (x = ram1))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2)))))))
T c==> c~ cMEM f0 cbetwn f1 f2 f0 c==> cMEM f3 cbetwn f1 f2 f0 c==> cMEM cnext_el f1 f2 cbetwn f1 f2 f0 c= c==> c\/ c= cnext_el f1 f2 f3 cMEM f3 cbetwn cbetwn f1 f2 f0 cnext_el f1 f2 f0 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f0 cnext_el f1 f2 cMEM f3 b0 c\/ c= f3 cnext_el f1 f0 c\/ cMEM f3 cbetwn f1 cnext_el f1 f0 f2 c= f3 f2 c\/ c\/ c= f3 cnext_el f1 f2 c\/ cMEM f3 cbetwn f1 cnext_el f1 f2 f0 c= f3 f0 cMEM f3 cbetwn f5 f0 cnext_el f1 f2 c==> c==> c/\ c~ cMEM f0 cbetwn f1 f2 f0 c/\ cMEM cnext_el f1 f2 cbetwn f1 f2 f0 cMEM f3 cbetwn f1 f2 f0 c\/ c= cnext_el f1 f2 f3 cMEM f3 cbetwn cbetwn f1 f2 f0 cnext_el f1 f2 f0 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f0 cnext_el f1 f2 cMEM f3 b0 c\/ c= f3 cnext_el f1 f0 c\/ cMEM f3 cbetwn f1 cnext_el f1 f0 f2 c= f3 f2 c\/ c\/ c= f3 cnext_el f1 f2 c\/ cMEM f3 cbetwn f1 cnext_el f1 f2 f0 c= f3 f0 cMEM f3 cbetwn f5 f0 cnext_el f1 f2
+ |- (((!x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) ==> ((\x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) x)) = ((\x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) x))
T c= c==> ! ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 * / ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0 * / ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ (ram1 = ram2), ((MEM ram1) r), ((MEM ram2) r) |- ((ram1 = ram2) /\ ((((MEM x) r) /\ (uniq r)) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ((next_el r) ram1)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ((next_el r) ram2)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2)))))))
T c==> c= f0 f1 c==> cMEM f0 f2 c==> cMEM f1 f2 c/\ c= f0 f1 c==> c/\ cMEM f3 f2 cuniq f2 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f0 cnext_el f2 f1 cMEM f3 b0 c\/ cMEM f3 cCONS cnext_el f2 f0 cNIL c\/ cMEM f3 cbetwn f2 cnext_el f2 f0 f1 cMEM f3 cCONS f1 cNIL c\/ c\/ cMEM f3 cCONS cnext_el f2 f1 cNIL c\/ cMEM f3 cbetwn f2 cnext_el f2 f1 f0 cMEM f3 cCONS f0 cNIL cMEM f3 cbetwn f5 f0 cnext_el f2 f1
+ |- ((\L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))) L)
T * / c= cMEM f0 cflatten b0 c? / c/\ cMEM b1 b0 cMEM f0 b1 f1
+ (~ ((((betwn r) ram1) ram2) = NIL)), (uniq r), ((HD (((betwn r) ram1) ram2)) = ((next_el r) ram1)), ((MEM ram1) r), ((MEM ram2) r), ((MEM x) (((betwn r) ram1) ram2)) |- (((HD (((betwn r) ram1) ram2)) = ((next_el r) ram1)) /\ (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram1)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ (x = ram1))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2))))))
T c==> c~ c= cbetwn f0 f1 f2 cNIL c==> cuniq f0 c==> c= cHD cbetwn f0 f1 f2 cnext_el f0 f1 c==> cMEM f1 f0 c==> cMEM f2 f0 c==> cMEM f3 cbetwn f0 f1 f2 c/\ c= cHD cbetwn f0 f1 f2 cnext_el f0 f1 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f1 cnext_el f0 f2 cMEM f3 b0 c\/ c= f3 cnext_el f0 f1 c\/ cMEM f3 cbetwn f0 cnext_el f0 f1 f2 c= f3 f2 c\/ c\/ c= f3 cnext_el f0 f2 c\/ cMEM f3 cbetwn f0 cnext_el f0 f2 f1 c= f3 f1 cMEM f3 cbetwn f5 f1 cnext_el f0 f2
+ ((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) |- (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) = T)
T c==> cMEM f0 cbetwn f1 cnext_el f1 f2 f3 c= cMEM f0 cbetwn f1 cnext_el f1 f2 f3 cT
+ |- (((!r'. (((uniq r') /\ (((MEM ram2) r') /\ (((MEM ram2) r') /\ (((MEM ((next_el r) ram2)) (((betwn r') ram2) ram2)) /\ (((HD (((betwn r') ram2) ram2)) = ((next_el r) ram2)) /\ ((MEM x) (((betwn (((betwn r') ram2) ram2)) ((next_el r) ram2)) ram2))))))) ==> ((MEM x) (((betwn r') ((next_el r) ram2)) ram2)))) ==> ((\r'. (((uniq r') /\ (((MEM ram2) r') /\ (((MEM ram2) r') /\ (((MEM ((next_el r) ram2)) (((betwn r') ram2) ram2)) /\ (((HD (((betwn r') ram2) ram2)) = ((next_el r) ram2)) /\ ((MEM x) (((betwn (((betwn r') ram2) ram2)) ((next_el r) ram2)) ram2))))))) ==> ((MEM x) (((betwn r') ((next_el r) ram2)) ram2)))) r)) = ((\r'. (((uniq r') /\ (((MEM ram2) r') /\ (((MEM ram2) r') /\ (((MEM ((next_el r) ram2)) (((betwn r') ram2) ram2)) /\ (((HD (((betwn r') ram2) ram2)) = ((next_el r) ram2)) /\ ((MEM x) (((betwn (((betwn r') ram2) ram2)) ((next_el r) ram2)) ram2))))))) ==> ((MEM x) (((betwn r') ((next_el r) ram2)) ram2)))) r))
T c= c==> ! c==> c/\ cuniq b0 c/\ cMEM f0 b0 c/\ cMEM f0 b0 c/\ cMEM cnext_el f1 f0 cbetwn b0 f0 f0 c/\ c= cHD cbetwn b0 f0 f0 cnext_el f1 f0 cMEM f2 cbetwn cbetwn b0 f0 f0 cnext_el f1 f0 f0 cMEM f2 cbetwn b0 cnext_el f1 f0 f0 * / c==> c/\ cuniq b0 c/\ cMEM f0 b0 c/\ cMEM f0 b0 c/\ cMEM cnext_el f1 f0 cbetwn b0 f0 f0 c/\ c= cHD cbetwn b0 f0 f0 cnext_el f1 f0 cMEM f2 cbetwn cbetwn b0 f0 f0 cnext_el f1 f0 f0 cMEM f2 cbetwn b0 cnext_el f1 f0 f0 f1 * / c==> c/\ cuniq b0 c/\ cMEM f0 b0 c/\ cMEM f0 b0 c/\ cMEM cnext_el f1 f0 cbetwn b0 f0 f0 c/\ c= cHD cbetwn b0 f0 f0 cnext_el f1 f0 cMEM f2 cbetwn cbetwn b0 f0 f0 cnext_el f1 f0 f0 cMEM f2 cbetwn b0 cnext_el f1 f0 f0 f1
+ (uniq r), ((HD (((betwn r) ram1) ram2)) = ((next_el r) ram1)), ((MEM ram1) r), ((MEM ram2) r), ((MEM x) (((betwn (((betwn r) ram1) ram2)) ((next_el r) ram1)) ram2)), ((MEM ((next_el r) ram1)) (((betwn r) ram1) ram2)) |- ((((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram1)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ (x = ram1))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2)))))) = ((((uniq r) /\ (((MEM ram1) r) /\ (((MEM ram2) r) /\ (((MEM ((next_el r) ram1)) (((betwn r) ram1) ram2)) /\ (((HD (((betwn r) ram1) ram2)) = ((next_el r) ram1)) /\ ((MEM x) (((betwn (((betwn r) ram1) ram2)) ((next_el r) ram1)) ram2))))))) ==> ((MEM x) (((betwn r) ((next_el r) ram1)) ram2))) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram1)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ (x = ram1))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2)))))))
T c==> cuniq f0 c==> c= cHD cbetwn f0 f1 f2 cnext_el f0 f1 c==> cMEM f1 f0 c==> cMEM f2 f0 c==> cMEM f3 cbetwn cbetwn f0 f1 f2 cnext_el f0 f1 f2 c==> cMEM cnext_el f0 f1 cbetwn f0 f1 f2 c= c==> cMEM f3 cbetwn f0 cnext_el f0 f1 f2 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f1 cnext_el f0 f2 cMEM f3 b0 c\/ c= f3 cnext_el f0 f1 c\/ cMEM f3 cbetwn f0 cnext_el f0 f1 f2 c= f3 f2 c\/ c\/ c= f3 cnext_el f0 f2 c\/ cMEM f3 cbetwn f0 cnext_el f0 f2 f1 c= f3 f1 cMEM f3 cbetwn f5 f1 cnext_el f0 f2 c==> c==> c/\ cuniq f0 c/\ cMEM f1 f0 c/\ cMEM f2 f0 c/\ cMEM cnext_el f0 f1 cbetwn f0 f1 f2 c/\ c= cHD cbetwn f0 f1 f2 cnext_el f0 f1 cMEM f3 cbetwn cbetwn f0 f1 f2 cnext_el f0 f1 f2 cMEM f3 cbetwn f0 cnext_el f0 f1 f2 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f1 cnext_el f0 f2 cMEM f3 b0 c\/ c= f3 cnext_el f0 f1 c\/ cMEM f3 cbetwn f0 cnext_el f0 f1 f2 c= f3 f2 c\/ c\/ c= f3 cnext_el f0 f2 c\/ cMEM f3 cbetwn f0 cnext_el f0 f2 f1 c= f3 f1 cMEM f3 cbetwn f5 f1 cnext_el f0 f2
+ |- (((MEM x) (((betwn r) ram2) ram1)) ==> (~ ((((betwn r) ram2) ram1) = NIL)))
T c==> cMEM f0 cbetwn f1 f2 f3 c~ c= cbetwn f1 f2 f3 cNIL
+ (~ ((MEM ram2) (((betwn r) ram1) ram2))), (uniq r), ((HD (((betwn r) ram1) ram2)) = ((next_el r) ram1)), ((MEM ram1) r), ((MEM ram2) r), ((MEM x) (((betwn r) ram1) ram2)), ((MEM ((next_el r) ram1)) (((betwn r) ram1) ram2)) |- ((((~ ((MEM ram2) (((betwn r) ram1) ram2))) /\ (((MEM ((next_el r) ram1)) (((betwn r) ram1) ram2)) /\ ((MEM x) (((betwn r) ram1) ram2)))) ==> ((((next_el r) ram1) = x) \/ ((MEM x) (((betwn (((betwn r) ram1) ram2)) ((next_el r) ram1)) ram2)))) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram1)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ (x = ram1))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2))))))
T c==> c~ cMEM f0 cbetwn f1 f2 f0 c==> cuniq f1 c==> c= cHD cbetwn f1 f2 f0 cnext_el f1 f2 c==> cMEM f2 f1 c==> cMEM f0 f1 c==> cMEM f3 cbetwn f1 f2 f0 c==> cMEM cnext_el f1 f2 cbetwn f1 f2 f0 c==> c==> c/\ c~ cMEM f0 cbetwn f1 f2 f0 c/\ cMEM cnext_el f1 f2 cbetwn f1 f2 f0 cMEM f3 cbetwn f1 f2 f0 c\/ c= cnext_el f1 f2 f3 cMEM f3 cbetwn cbetwn f1 f2 f0 cnext_el f1 f2 f0 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f2 cnext_el f1 f0 cMEM f3 b0 c\/ c= f3 cnext_el f1 f2 c\/ cMEM f3 cbetwn f1 cnext_el f1 f2 f0 c= f3 f0 c\/ c\/ c= f3 cnext_el f1 f0 c\/ cMEM f3 cbetwn f1 cnext_el f1 f0 f2 c= f3 f2 cMEM f3 cbetwn f5 f2 cnext_el f1 f0
+ |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
+ (~ (ram1 = ram2)), (uniq r), ((MEM ram1) r), ((MEM ram2) r), ((MEM x) (((betwn r) ram2) ram1)) |- ((~ ((((betwn r) ram2) ram1) = NIL)) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram1)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ (x = ram1))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2))))))
T c==> c~ c= f0 f1 c==> cuniq f2 c==> cMEM f0 f2 c==> cMEM f1 f2 c==> cMEM f3 cbetwn f2 f1 f0 c==> c~ c= cbetwn f2 f1 f0 cNIL c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f0 cnext_el f2 f1 cMEM f3 b0 c\/ c= f3 cnext_el f2 f0 c\/ cMEM f3 cbetwn f2 cnext_el f2 f0 f1 c= f3 f1 c\/ c\/ c= f3 cnext_el f2 f1 c\/ cMEM f3 cbetwn f2 cnext_el f2 f1 f0 c= f3 f0 cMEM f3 cbetwn f5 f0 cnext_el f2 f1
+ |- ((((~ ((MEM ram2) r)) \/ ((MEM ram2) r)) ==> ((((MEM x) r) /\ (uniq r)) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ram1) NIL)) \/ (((MEM x) (((betwn r) ram1) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ((next_el r) ram2)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2))))))) = ((((MEM x) r) /\ (uniq r)) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ram1) NIL)) \/ (((MEM x) (((betwn r) ram1) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ((next_el r) ram2)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2)))))))
T c= c==> c\/ c~ cMEM f0 f1 cMEM f0 f1 c==> c/\ cMEM f2 f1 cuniq f1 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f3 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f3 cbetwn f4 f5 cnext_el f1 f0 cMEM f2 b0 c\/ cMEM f2 cCONS f5 cNIL c\/ cMEM f2 cbetwn f1 f5 f0 cMEM f2 cCONS f0 cNIL c\/ c\/ cMEM f2 cCONS cnext_el f1 f0 cNIL c\/ cMEM f2 cbetwn f1 cnext_el f1 f0 f5 cMEM f2 cCONS f5 cNIL cMEM f2 cbetwn f4 f5 cnext_el f1 f0 c==> c/\ cMEM f2 f1 cuniq f1 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f3 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f3 cbetwn f4 f5 cnext_el f1 f0 cMEM f2 b0 c\/ cMEM f2 cCONS f5 cNIL c\/ cMEM f2 cbetwn f1 f5 f0 cMEM f2 cCONS f0 cNIL c\/ c\/ cMEM f2 cCONS cnext_el f1 f0 cNIL c\/ cMEM f2 cbetwn f1 cnext_el f1 f0 f5 cMEM f2 cCONS f5 cNIL cMEM f2 cbetwn f4 f5 cnext_el f1 f0
- |- ((FILTER = filter) /\ ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all)))))
T c/\ c= part cFILTER part cfilter c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
+ (uniq r), ((HD (((betwn r) ram1) ram2)) = ((next_el r) ram1)), ((MEM ram1) r), ((MEM ram2) r), ((MEM x) (((betwn (((betwn r) ram1) ram2)) ((next_el r) ram1)) ram2)), ((MEM ((next_el r) ram1)) (((betwn r) ram1) ram2)) |- (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram1)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ (x = ram1))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2)))))
T c==> cuniq f0 c==> c= cHD cbetwn f0 f1 f2 cnext_el f0 f1 c==> cMEM f1 f0 c==> cMEM f2 f0 c==> cMEM f3 cbetwn cbetwn f0 f1 f2 cnext_el f0 f1 f2 c==> cMEM cnext_el f0 f1 cbetwn f0 f1 f2 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f1 cnext_el f0 f2 cMEM f3 b0 c\/ c= f3 cnext_el f0 f1 c\/ cMEM f3 cbetwn f0 cnext_el f0 f1 f2 c= f3 f2 c\/ c\/ c= f3 cnext_el f0 f2 c\/ cMEM f3 cbetwn f0 cnext_el f0 f2 f1 c= f3 f1 cMEM f3 cbetwn f5 f1 cnext_el f0 f2
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ |- ((\r1. ((((MEM r1) r) /\ ((uniq r) /\ (~ (r = ((CONS r1) NIL))))) ==> ((HD (((betwn r) r1) r1)) = ((next_el r) r1)))) ram2)
T * / c==> c/\ cMEM b0 f0 c/\ cuniq f0 c~ c= f0 cCONS b0 cNIL c= cHD cbetwn f0 b0 b0 cnext_el f0 b0 f1
+ |- (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram2) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) \/ (x = ram2))) \/ ((MEM x) (((betwn f) ram2) ((next_el r) ram2))))))
T c==> cMEM f0 cbetwn f1 cnext_el f1 f2 f2 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f3 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f3 cbetwn f4 f2 cnext_el f1 f2 cMEM f0 b0 c\/ c= f0 cnext_el f1 f2 c\/ cMEM f0 cbetwn f1 cnext_el f1 f2 f2 c= f0 f2 c\/ c\/ c= f0 cnext_el f1 f2 c\/ cMEM f0 cbetwn f1 cnext_el f1 f2 f2 c= f0 f2 cMEM f0 cbetwn f4 f2 cnext_el f1 f2
+ |- ((x = ram2) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram2) ((next_el ((CONS ram2) NIL)) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el ((CONS ram2) NIL)) ram2)) \/ (((MEM x) (((betwn ((CONS ram2) NIL)) ((next_el ((CONS ram2) NIL)) ram2)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el ((CONS ram2) NIL)) ram2)) \/ (((MEM x) (((betwn ((CONS ram2) NIL)) ((next_el ((CONS ram2) NIL)) ram2)) ram2)) \/ (x = ram2))) \/ ((MEM x) (((betwn f) ram2) ((next_el ((CONS ram2) NIL)) ram2))))))
T c==> c= f0 f1 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f2 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f2 cbetwn f3 f1 cnext_el cCONS f1 cNIL f1 cMEM f0 b0 c\/ c= f0 cnext_el cCONS f1 cNIL f1 c\/ cMEM f0 cbetwn cCONS f1 cNIL cnext_el cCONS f1 cNIL f1 f1 c= f0 f1 c\/ c\/ c= f0 cnext_el cCONS f1 cNIL f1 c\/ cMEM f0 cbetwn cCONS f1 cNIL cnext_el cCONS f1 cNIL f1 f1 c= f0 f1 cMEM f0 cbetwn f3 f1 cnext_el cCONS f1 cNIL f1
+ |- (((!r1. (!r2. ((((MEM r1) r) /\ (((MEM r2) r) /\ ((~ (r1 = r2)) /\ ((uniq r) /\ (~ ((((betwn r) r1) r2) = NIL)))))) ==> ((HD (((betwn r) r1) r2)) = ((next_el r) r1))))) ==> ((\r1. (!r2. ((((MEM r1) r) /\ (((MEM r2) r) /\ ((~ (r1 = r2)) /\ ((uniq r) /\ (~ ((((betwn r) r1) r2) = NIL)))))) ==> ((HD (((betwn r) r1) r2)) = ((next_el r) r1))))) ram2)) = ((\r1. (!r2. ((((MEM r1) r) /\ (((MEM r2) r) /\ ((~ (r1 = r2)) /\ ((uniq r) /\ (~ ((((betwn r) r1) r2) = NIL)))))) ==> ((HD (((betwn r) r1) r2)) = ((next_el r) r1))))) ram2))
T c= c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c/\ c~ c= b0 b1 c/\ cuniq f0 c~ c= cbetwn f0 b0 b1 cNIL c= cHD cbetwn f0 b0 b1 cnext_el f0 b0 * / ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c/\ c~ c= b0 b1 c/\ cuniq f0 c~ c= cbetwn f0 b0 b1 cNIL c= cHD cbetwn f0 b0 b1 cnext_el f0 b0 f1 * / ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c/\ c~ c= b0 b1 c/\ cuniq f0 c~ c= cbetwn f0 b0 b1 cNIL c= cHD cbetwn f0 b0 b1 cnext_el f0 b0 f1
+ |- ((((MEM x) r) /\ (uniq r)) ==> ((((MEM x) (REVERSE (flatten ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))))) \/ (((MEM x) ((CONS ((next_el r) ram1)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ((next_el r) ram2)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2))))))
T c==> c/\ cMEM f0 f1 cuniq f1 c\/ c\/ cMEM f0 cREVERSE cflatten cmap / cmap / cPOWER * part cn_list f2 b1 b0 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b1 cFST b0 cflatten f2 cbetwn f3 f4 cnext_el f1 f5 c\/ cMEM f0 cCONS cnext_el f1 f4 cNIL c\/ cMEM f0 cbetwn f1 cnext_el f1 f4 f5 cMEM f0 cCONS f5 cNIL c\/ c\/ cMEM f0 cCONS cnext_el f1 f5 cNIL c\/ cMEM f0 cbetwn f1 cnext_el f1 f5 f4 cMEM f0 cCONS f4 cNIL cMEM f0 cbetwn f3 f4 cnext_el f1 f5
+ |- (((!r. (!r1. (!r2. ((((MEM r1) r) /\ (((MEM r2) r) /\ ((~ (r1 = r2)) /\ ((uniq r) /\ (~ ((((betwn r) r1) r2) = NIL)))))) ==> ((HD (((betwn r) r1) r2)) = ((next_el r) r1)))))) ==> ((\r. (!r1. (!r2. ((((MEM r1) r) /\ (((MEM r2) r) /\ ((~ (r1 = r2)) /\ ((uniq r) /\ (~ ((((betwn r) r1) r2) = NIL)))))) ==> ((HD (((betwn r) r1) r2)) = ((next_el r) r1)))))) r)) = ((\r. (!r1. (!r2. ((((MEM r1) r) /\ (((MEM r2) r) /\ ((~ (r1 = r2)) /\ ((uniq r) /\ (~ ((((betwn r) r1) r2) = NIL)))))) ==> ((HD (((betwn r) r1) r2)) = ((next_el r) r1)))))) r))
T c= c==> ! ! ! c==> c/\ cMEM b1 b0 c/\ cMEM b2 b0 c/\ c~ c= b1 b2 c/\ cuniq b0 c~ c= cbetwn b0 b1 b2 cNIL c= cHD cbetwn b0 b1 b2 cnext_el b0 b1 * / ! ! c==> c/\ cMEM b1 b0 c/\ cMEM b2 b0 c/\ c~ c= b1 b2 c/\ cuniq b0 c~ c= cbetwn b0 b1 b2 cNIL c= cHD cbetwn b0 b1 b2 cnext_el b0 b1 f0 * / ! ! c==> c/\ cMEM b1 b0 c/\ cMEM b2 b0 c/\ c~ c= b1 b2 c/\ cuniq b0 c~ c= cbetwn b0 b1 b2 cNIL c= cHD cbetwn b0 b1 b2 cnext_el b0 b1 f0
+ |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
+ |- (((MEM x) ((CONS ram2) NIL)) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ram2))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ((next_el ((CONS ram2) NIL)) ram1)) NIL)) \/ (((MEM x) (((betwn ((CONS ram2) NIL)) ((next_el ((CONS ram2) NIL)) ram1)) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ram2) NIL)) \/ (((MEM x) (((betwn ((CONS ram2) NIL)) ram2) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ram2)))))
T c==> cMEM f0 cCONS f1 cNIL c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f2 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f2 cbetwn f3 f4 f1 cMEM f0 b0 c\/ cMEM f0 cCONS cnext_el cCONS f1 cNIL f4 cNIL c\/ cMEM f0 cbetwn cCONS f1 cNIL cnext_el cCONS f1 cNIL f4 f1 cMEM f0 cCONS f1 cNIL c\/ c\/ cMEM f0 cCONS f1 cNIL c\/ cMEM f0 cbetwn cCONS f1 cNIL f1 f4 cMEM f0 cCONS f4 cNIL cMEM f0 cbetwn f3 f4 f1
+ (((next_el r) ram1) = ram1), (((MEM x) r) /\ (uniq r)), ((MEM ram1) r) |- ((((MEM x) r) /\ (uniq r)) /\ (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ram1) NIL)) \/ (((MEM x) (((betwn r) ram1) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ((next_el r) ram2)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2))))))
T c==> c= cnext_el f0 f1 f1 c==> c/\ cMEM f2 f0 cuniq f0 c==> cMEM f1 f0 c/\ c/\ cMEM f2 f0 cuniq f0 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f3 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f3 cbetwn f4 f1 cnext_el f0 f5 cMEM f2 b0 c\/ cMEM f2 cCONS f1 cNIL c\/ cMEM f2 cbetwn f0 f1 f5 cMEM f2 cCONS f5 cNIL c\/ c\/ cMEM f2 cCONS cnext_el f0 f5 cNIL c\/ cMEM f2 cbetwn f0 cnext_el f0 f5 f1 cMEM f2 cCONS f1 cNIL cMEM f2 cbetwn f4 f1 cnext_el f0 f5
+ |- ((!r. (!r1. (!r2. (((~ ((MEM r1) r)) /\ (((MEM r2) r) /\ ((MEM x) r))) ==> ((r2 = x) \/ ((MEM x) (((betwn r) r2) r1))))))) = T)
T c= ! ! ! c==> c/\ c~ cMEM b1 b0 c/\ cMEM b2 b0 cMEM f0 b0 c\/ c= b2 f0 cMEM f0 cbetwn b0 b2 b1 cT
+ (uniq r), ((HD (((betwn r) ram2) ram1)) = ((next_el r) ram2)), ((MEM ram1) r), ((MEM ram2) r), ((MEM x) (((betwn (((betwn r) ram2) ram1)) ((next_el r) ram2)) ram1)), ((MEM ((next_el r) ram2)) (((betwn r) ram2) ram1)) |- ((((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram1)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ (x = ram1))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2)))))) = ((((uniq r) /\ (((MEM ram2) r) /\ (((MEM ram1) r) /\ (((MEM ((next_el r) ram2)) (((betwn r) ram2) ram1)) /\ (((HD (((betwn r) ram2) ram1)) = ((next_el r) ram2)) /\ ((MEM x) (((betwn (((betwn r) ram2) ram1)) ((next_el r) ram2)) ram1))))))) ==> ((MEM x) (((betwn r) ((next_el r) ram2)) ram1))) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram1)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ (x = ram1))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2)))))))
T c==> cuniq f0 c==> c= cHD cbetwn f0 f1 f2 cnext_el f0 f1 c==> cMEM f2 f0 c==> cMEM f1 f0 c==> cMEM f3 cbetwn cbetwn f0 f1 f2 cnext_el f0 f1 f2 c==> cMEM cnext_el f0 f1 cbetwn f0 f1 f2 c= c==> cMEM f3 cbetwn f0 cnext_el f0 f1 f2 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f2 cnext_el f0 f1 cMEM f3 b0 c\/ c= f3 cnext_el f0 f2 c\/ cMEM f3 cbetwn f0 cnext_el f0 f2 f1 c= f3 f1 c\/ c\/ c= f3 cnext_el f0 f1 c\/ cMEM f3 cbetwn f0 cnext_el f0 f1 f2 c= f3 f2 cMEM f3 cbetwn f5 f2 cnext_el f0 f1 c==> c==> c/\ cuniq f0 c/\ cMEM f1 f0 c/\ cMEM f2 f0 c/\ cMEM cnext_el f0 f1 cbetwn f0 f1 f2 c/\ c= cHD cbetwn f0 f1 f2 cnext_el f0 f1 cMEM f3 cbetwn cbetwn f0 f1 f2 cnext_el f0 f1 f2 cMEM f3 cbetwn f0 cnext_el f0 f1 f2 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f2 cnext_el f0 f1 cMEM f3 b0 c\/ c= f3 cnext_el f0 f2 c\/ cMEM f3 cbetwn f0 cnext_el f0 f2 f1 c= f3 f1 c\/ c\/ c= f3 cnext_el f0 f1 c\/ cMEM f3 cbetwn f0 cnext_el f0 f1 f2 c= f3 f2 cMEM f3 cbetwn f5 f2 cnext_el f0 f1
- |- ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all)))
T c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
- (~ ((((betwn r) ram2) ram1) = NIL)) |- ((NIL = (((betwn r) ram2) ram1)) = F)
T c==> c~ c= cbetwn f0 f1 f2 cNIL c= c= cNIL cbetwn f0 f1 f2 cF
+ |- ((\x. (((MEM x) (rev s)) = ((MEM x) s))) x)
T * / c= cMEM b0 crev f0 cMEM b0 f0 f1
+ (((next_el r) ram2) = ram2), (((MEM x) r) /\ (uniq r)), ((MEM ram2) r), ((MEM x) r) |- (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ram2))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ((next_el r) ram1)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ram2) NIL)) \/ (((MEM x) (((betwn r) ram2) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ram2))))
T c==> c= cnext_el f0 f1 f1 c==> c/\ cMEM f2 f0 cuniq f0 c==> cMEM f1 f0 c==> cMEM f2 f0 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f3 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f3 cbetwn f4 f5 f1 cMEM f2 b0 c\/ cMEM f2 cCONS cnext_el f0 f5 cNIL c\/ cMEM f2 cbetwn f0 cnext_el f0 f5 f1 cMEM f2 cCONS f1 cNIL c\/ c\/ cMEM f2 cCONS f1 cNIL c\/ cMEM f2 cbetwn f0 f1 f5 cMEM f2 cCONS f5 cNIL cMEM f2 cbetwn f4 f5 f1
+ |- (((!z. (((~ (ram1 = z)) /\ ((uniq r) /\ (((MEM ram1) r) /\ (((MEM x) r) /\ ((MEM z) r))))) ==> ((x = ram1) \/ ((x = z) \/ (((MEM x) (((betwn r) ram1) z)) \/ ((MEM x) (((betwn r) z) ram1))))))) ==> ((\z. (((~ (ram1 = z)) /\ ((uniq r) /\ (((MEM ram1) r) /\ (((MEM x) r) /\ ((MEM z) r))))) ==> ((x = ram1) \/ ((x = z) \/ (((MEM x) (((betwn r) ram1) z)) \/ ((MEM x) (((betwn r) z) ram1))))))) ram2)) = ((\z. (((~ (ram1 = z)) /\ ((uniq r) /\ (((MEM ram1) r) /\ (((MEM x) r) /\ ((MEM z) r))))) ==> ((x = ram1) \/ ((x = z) \/ (((MEM x) (((betwn r) ram1) z)) \/ ((MEM x) (((betwn r) z) ram1))))))) ram2))
T c= c==> ! c==> c/\ c~ c= f0 b0 c/\ cuniq f1 c/\ cMEM f0 f1 c/\ cMEM f2 f1 cMEM b0 f1 c\/ c= f2 f0 c\/ c= f2 b0 c\/ cMEM f2 cbetwn f1 f0 b0 cMEM f2 cbetwn f1 b0 f0 * / c==> c/\ c~ c= f0 b0 c/\ cuniq f1 c/\ cMEM f0 f1 c/\ cMEM f2 f1 cMEM b0 f1 c\/ c= f2 f0 c\/ c= f2 b0 c\/ cMEM f2 cbetwn f1 f0 b0 cMEM f2 cbetwn f1 b0 f0 f3 * / c==> c/\ c~ c= f0 b0 c/\ cuniq f1 c/\ cMEM f0 f1 c/\ cMEM f2 f1 cMEM b0 f1 c\/ c= f2 f0 c\/ c= f2 b0 c\/ cMEM f2 cbetwn f1 f0 b0 cMEM f2 cbetwn f1 b0 f0 f3
+ (uniq r), (r = ((CONS ram2) NIL)), ((MEM x) r), ((MEM x) (((betwn r) ram2) ram2)) |- (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram2) ((next_el ((CONS ram2) NIL)) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el ((CONS ram2) NIL)) ram2)) \/ (((MEM x) (((betwn ((CONS ram2) NIL)) ((next_el ((CONS ram2) NIL)) ram2)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el ((CONS ram2) NIL)) ram2)) \/ (((MEM x) (((betwn ((CONS ram2) NIL)) ((next_el ((CONS ram2) NIL)) ram2)) ram2)) \/ (x = ram2))) \/ ((MEM x) (((betwn f) ram2) ((next_el ((CONS ram2) NIL)) ram2)))))
T c==> cuniq f0 c==> c= f0 cCONS f1 cNIL c==> cMEM f2 f0 c==> cMEM f2 cbetwn f0 f1 f1 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f3 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f3 cbetwn f4 f1 cnext_el cCONS f1 cNIL f1 cMEM f2 b0 c\/ c= f2 cnext_el cCONS f1 cNIL f1 c\/ cMEM f2 cbetwn cCONS f1 cNIL cnext_el cCONS f1 cNIL f1 f1 c= f2 f1 c\/ c\/ c= f2 cnext_el cCONS f1 cNIL f1 c\/ cMEM f2 cbetwn cCONS f1 cNIL cnext_el cCONS f1 cNIL f1 f1 c= f2 f1 cMEM f2 cbetwn f4 f1 cnext_el cCONS f1 cNIL f1
+ |- ((\q'. (((((MEM x) r) /\ (uniq r)) = p') ==> ((p' ==> ((((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ram1) NIL)) \/ (((MEM x) (((betwn r) ram1) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ((next_el r) ram2)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2))))) = q')) ==> (((((MEM x) r) /\ (uniq r)) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ram1) NIL)) \/ (((MEM x) (((betwn r) ram1) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ((next_el r) ram2)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2)))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cMEM f0 f1 cuniq f1 f2 c==> c==> f2 c= c\/ c\/ c? / c/\ cMEM b1 cmap / cmap / cPOWER * part cn_list f3 b3 b2 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b3 cFST b2 cflatten f3 cbetwn f4 f5 cnext_el f1 f6 cMEM f0 b1 c\/ cMEM f0 cCONS f5 cNIL c\/ cMEM f0 cbetwn f1 f5 f6 cMEM f0 cCONS f6 cNIL c\/ c\/ cMEM f0 cCONS cnext_el f1 f6 cNIL c\/ cMEM f0 cbetwn f1 cnext_el f1 f6 f5 cMEM f0 cCONS f5 cNIL cMEM f0 cbetwn f4 f5 cnext_el f1 f6 b0 c= c==> c/\ cMEM f0 f1 cuniq f1 c\/ c\/ c? / c/\ cMEM b1 cmap / cmap / cPOWER * part cn_list f3 b3 b2 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b3 cFST b2 cflatten f3 cbetwn f4 f5 cnext_el f1 f6 cMEM f0 b1 c\/ cMEM f0 cCONS f5 cNIL c\/ cMEM f0 cbetwn f1 f5 f6 cMEM f0 cCONS f6 cNIL c\/ c\/ cMEM f0 cCONS cnext_el f1 f6 cNIL c\/ cMEM f0 cbetwn f1 cnext_el f1 f6 f5 cMEM f0 cCONS f5 cNIL cMEM f0 cbetwn f4 f5 cnext_el f1 f6 c==> f2 b0 f7
+ |- ((\r1. (!r2. (((~ ((MEM r1) r)) /\ (((MEM r2) r) /\ ((MEM x) r))) ==> ((r2 = x) \/ ((MEM x) (((betwn r) r2) r1)))))) ram2)
T * / ! c==> c/\ c~ cMEM b0 f0 c/\ cMEM b1 f0 cMEM f1 f0 c\/ c= b1 f1 cMEM f1 cbetwn f0 b1 b0 f2
+ |- ((\x. (!r. (!r1. (!r2. (((~ ((MEM r1) r)) /\ (((MEM r2) r) /\ ((MEM x) r))) ==> ((r2 = x) \/ ((MEM x) (((betwn r) r2) r1)))))))) x)
T * / ! ! ! c==> c/\ c~ cMEM b2 b1 c/\ cMEM b3 b1 cMEM b0 b1 c\/ c= b3 b0 cMEM b0 cbetwn b1 b3 b2 f0
+ |- (((!s. (!x. (((MEM x) (rev s)) = ((MEM x) s)))) ==> ((\s. (!x. (((MEM x) (rev s)) = ((MEM x) s)))) s)) = ((\s. (!x. (((MEM x) (rev s)) = ((MEM x) s)))) s))
T c= c==> ! ! c= cMEM b1 crev b0 cMEM b1 b0 * / ! c= cMEM b1 crev b0 cMEM b1 b0 f0 * / ! c= cMEM b1 crev b0 cMEM b1 b0 f0
+ |- ((\r. (!r1. (!r2. (((~ ((MEM r1) r)) /\ (((MEM r2) r) /\ ((MEM x) r))) ==> ((r2 = x) \/ ((MEM x) (((betwn r) r2) r1))))))) r)
T * / ! ! c==> c/\ c~ cMEM b1 b0 c/\ cMEM b2 b0 cMEM f0 b0 c\/ c= b2 f0 cMEM f0 cbetwn b0 b2 b1 f1
+ |- (((!z. (!s. (((uniq s) /\ ((MEM z) s)) ==> (~ ((MEM ram2) (((betwn s) ram2) z)))))) ==> ((\z. (!s. (((uniq s) /\ ((MEM z) s)) ==> (~ ((MEM ram2) (((betwn s) ram2) z)))))) ram2)) = ((\z. (!s. (((uniq s) /\ ((MEM z) s)) ==> (~ ((MEM ram2) (((betwn s) ram2) z)))))) ram2))
T c= c==> ! ! c==> c/\ cuniq b1 cMEM b0 b1 c~ cMEM f0 cbetwn b1 f0 b0 * / ! c==> c/\ cuniq b1 cMEM b0 b1 c~ cMEM f0 cbetwn b1 f0 b0 f0 * / ! c==> c/\ cuniq b1 cMEM b0 b1 c~ cMEM f0 cbetwn b1 f0 b0 f0
+ (uniq r), ((MEM ram2) r), ((MEM x) r) |- (((ram2 = x) \/ ((MEM x) (((betwn r) ram2) ram2))) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram2) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) \/ (x = ram2))) \/ ((MEM x) (((betwn f) ram2) ((next_el r) ram2))))))
T c==> cuniq f0 c==> cMEM f1 f0 c==> cMEM f2 f0 c==> c\/ c= f1 f2 cMEM f2 cbetwn f0 f1 f1 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f3 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f3 cbetwn f4 f1 cnext_el f0 f1 cMEM f2 b0 c\/ c= f2 cnext_el f0 f1 c\/ cMEM f2 cbetwn f0 cnext_el f0 f1 f1 c= f2 f1 c\/ c\/ c= f2 cnext_el f0 f1 c\/ cMEM f2 cbetwn f0 cnext_el f0 f1 f1 c= f2 f1 cMEM f2 cbetwn f4 f1 cnext_el f0 f1
+ |- (!r2. (((~ ((MEM ram1) (((betwn r) ram2) ram1))) /\ (((MEM r2) (((betwn r) ram2) ram1)) /\ ((MEM x) (((betwn r) ram2) ram1)))) ==> ((r2 = x) \/ ((MEM x) (((betwn (((betwn r) ram2) ram1)) r2) ram1)))))
T c==> c/\ c~ cMEM f0 cbetwn f1 f2 f0 c/\ cMEM f3 cbetwn f1 f2 f0 cMEM f4 cbetwn f1 f2 f0 c\/ c= f3 f4 cMEM f4 cbetwn cbetwn f1 f2 f0 f3 f0
+ |- ((\r. (!r1. ((((MEM r1) r) /\ (((MEM x) r) /\ (uniq r))) ==> ((r1 = x) \/ ((MEM x) (((betwn r) r1) r1)))))) r)
T * / ! c==> c/\ cMEM b1 b0 c/\ cMEM f0 b0 cuniq b0 c\/ c= b1 f0 cMEM f0 cbetwn b0 b1 b1 f1
+ (((MEM x) r) /\ (uniq r)) |- ((((MEM x) r) /\ (uniq r)) /\ ((((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ram1) NIL)) \/ (((MEM x) (((betwn r) ram1) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ((next_el r) ram2)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2))))) = (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ram1) NIL)) \/ (((MEM x) (((betwn r) ram1) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ((next_el r) ram2)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2)))))))
T c==> c/\ cMEM f0 f1 cuniq f1 c/\ c/\ cMEM f0 f1 cuniq f1 c= c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f2 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f2 cbetwn f3 f4 cnext_el f1 f5 cMEM f0 b0 c\/ cMEM f0 cCONS f4 cNIL c\/ cMEM f0 cbetwn f1 f4 f5 cMEM f0 cCONS f5 cNIL c\/ c\/ cMEM f0 cCONS cnext_el f1 f5 cNIL c\/ cMEM f0 cbetwn f1 cnext_el f1 f5 f4 cMEM f0 cCONS f4 cNIL cMEM f0 cbetwn f3 f4 cnext_el f1 f5 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f2 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f2 cbetwn f3 f4 cnext_el f1 f5 cMEM f0 b0 c\/ cMEM f0 cCONS f4 cNIL c\/ cMEM f0 cbetwn f1 f4 f5 cMEM f0 cCONS f5 cNIL c\/ c\/ cMEM f0 cCONS cnext_el f1 f5 cNIL c\/ cMEM f0 cbetwn f1 cnext_el f1 f5 f4 cMEM f0 cCONS f4 cNIL cMEM f0 cbetwn f3 f4 cnext_el f1 f5
+ (~ ((MEM ram2) (((betwn r) ram2) ram2))), (uniq r), ((HD (((betwn r) ram2) ram2)) = ((next_el r) ram2)), ((MEM ram2) r), ((MEM x) (((betwn r) ram2) ram2)), ((MEM ((next_el r) ram2)) (((betwn r) ram2) ram2)) |- (((MEM ((next_el r) ram2)) (((betwn r) ram2) ram2)) /\ (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram2) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) \/ (x = ram2))) \/ ((MEM x) (((betwn f) ram2) ((next_el r) ram2))))))
T c==> c~ cMEM f0 cbetwn f1 f0 f0 c==> cuniq f1 c==> c= cHD cbetwn f1 f0 f0 cnext_el f1 f0 c==> cMEM f0 f1 c==> cMEM f2 cbetwn f1 f0 f0 c==> cMEM cnext_el f1 f0 cbetwn f1 f0 f0 c/\ cMEM cnext_el f1 f0 cbetwn f1 f0 f0 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f3 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f3 cbetwn f4 f0 cnext_el f1 f0 cMEM f2 b0 c\/ c= f2 cnext_el f1 f0 c\/ cMEM f2 cbetwn f1 cnext_el f1 f0 f0 c= f2 f0 c\/ c\/ c= f2 cnext_el f1 f0 c\/ cMEM f2 cbetwn f1 cnext_el f1 f0 f0 c= f2 f0 cMEM f2 cbetwn f4 f0 cnext_el f1 f0
+ (~ ((MEM ram1) (((betwn r) ram2) ram1))), (uniq r), ((HD (((betwn r) ram2) ram1)) = ((next_el r) ram2)), ((MEM ram1) r), ((MEM ram2) r), ((MEM x) (((betwn r) ram2) ram1)) |- (((MEM ((next_el r) ram2)) (((betwn r) ram2) ram1)) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram1)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ (x = ram1))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2))))))
T c==> c~ cMEM f0 cbetwn f1 f2 f0 c==> cuniq f1 c==> c= cHD cbetwn f1 f2 f0 cnext_el f1 f2 c==> cMEM f0 f1 c==> cMEM f2 f1 c==> cMEM f3 cbetwn f1 f2 f0 c==> cMEM cnext_el f1 f2 cbetwn f1 f2 f0 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f0 cnext_el f1 f2 cMEM f3 b0 c\/ c= f3 cnext_el f1 f0 c\/ cMEM f3 cbetwn f1 cnext_el f1 f0 f2 c= f3 f2 c\/ c\/ c= f3 cnext_el f1 f2 c\/ cMEM f3 cbetwn f1 cnext_el f1 f2 f0 c= f3 f0 cMEM f3 cbetwn f5 f0 cnext_el f1 f2
+ |- (((!x. (!r. (!r1. ((((MEM r1) r) /\ (((MEM x) r) /\ (uniq r))) ==> ((r1 = x) \/ ((MEM x) (((betwn r) r1) r1))))))) ==> ((\x. (!r. (!r1. ((((MEM r1) r) /\ (((MEM x) r) /\ (uniq r))) ==> ((r1 = x) \/ ((MEM x) (((betwn r) r1) r1))))))) x)) = ((\x. (!r. (!r1. ((((MEM r1) r) /\ (((MEM x) r) /\ (uniq r))) ==> ((r1 = x) \/ ((MEM x) (((betwn r) r1) r1))))))) x))
T c= c==> ! ! ! c==> c/\ cMEM b2 b1 c/\ cMEM b0 b1 cuniq b1 c\/ c= b2 b0 cMEM b0 cbetwn b1 b2 b2 * / ! ! c==> c/\ cMEM b2 b1 c/\ cMEM b0 b1 cuniq b1 c\/ c= b2 b0 cMEM b0 cbetwn b1 b2 b2 f0 * / ! ! c==> c/\ cMEM b2 b1 c/\ cMEM b0 b1 cuniq b1 c\/ c= b2 b0 cMEM b0 cbetwn b1 b2 b2 f0
+ ((MEM ram1) r) |- (((~ ((MEM ram2) r)) \/ ((MEM ram2) r)) ==> ((((MEM x) r) /\ (uniq r)) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ((next_el r) ram1)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ((next_el r) ram2)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2)))))))
T c==> cMEM f0 f1 c==> c\/ c~ cMEM f2 f1 cMEM f2 f1 c==> c/\ cMEM f3 f1 cuniq f1 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f0 cnext_el f1 f2 cMEM f3 b0 c\/ cMEM f3 cCONS cnext_el f1 f0 cNIL c\/ cMEM f3 cbetwn f1 cnext_el f1 f0 f2 cMEM f3 cCONS f2 cNIL c\/ c\/ cMEM f3 cCONS cnext_el f1 f2 cNIL c\/ cMEM f3 cbetwn f1 cnext_el f1 f2 f0 cMEM f3 cCONS f0 cNIL cMEM f3 cbetwn f5 f0 cnext_el f1 f2
+ |- ((t \/ T) = T)
T c= c\/ f0 cT cT
+ (uniq r), (((next_el r) ram2) = ram2), ((MEM ram2) r) |- (((r = ((CONS ram2) NIL)) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ram2))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ((next_el r) ram1)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ram2) NIL)) \/ (((MEM x) (((betwn r) ram2) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ram2))))) = (((((MEM ram2) r) /\ ((((next_el r) ram2) = ram2) /\ (uniq r))) ==> (r = ((CONS ram2) NIL))) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ram2))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ((next_el r) ram1)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ram2) NIL)) \/ (((MEM x) (((betwn r) ram2) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ram2))))))
T c==> cuniq f0 c==> c= cnext_el f0 f1 f1 c==> cMEM f1 f0 c= c==> c= f0 cCONS f1 cNIL c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f2 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f2 cbetwn f3 f4 f1 cMEM f5 b0 c\/ cMEM f5 cCONS cnext_el f0 f4 cNIL c\/ cMEM f5 cbetwn f0 cnext_el f0 f4 f1 cMEM f5 cCONS f1 cNIL c\/ c\/ cMEM f5 cCONS f1 cNIL c\/ cMEM f5 cbetwn f0 f1 f4 cMEM f5 cCONS f4 cNIL cMEM f5 cbetwn f3 f4 f1 c==> c==> c/\ cMEM f1 f0 c/\ c= cnext_el f0 f1 f1 cuniq f0 c= f0 cCONS f1 cNIL c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f2 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f2 cbetwn f3 f4 f1 cMEM f5 b0 c\/ cMEM f5 cCONS cnext_el f0 f4 cNIL c\/ cMEM f5 cbetwn f0 cnext_el f0 f4 f1 cMEM f5 cCONS f1 cNIL c\/ c\/ cMEM f5 cCONS f1 cNIL c\/ cMEM f5 cbetwn f0 f1 f4 cMEM f5 cCONS f4 cNIL cMEM f5 cbetwn f3 f4 f1
+ (~ (ram1 = ram2)), (~ (((next_el r) ram1) = ram1)), (~ (((next_el r) ram2) = ram2)), (((MEM x) r) /\ (uniq r)), ((MEM ram1) r), ((MEM ram2) r) |- ((((MEM x) r) /\ (uniq r)) /\ (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ((next_el r) ram1)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ((next_el r) ram2)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2))))))
T c==> c~ c= f0 f1 c==> c~ c= cnext_el f2 f0 f0 c==> c~ c= cnext_el f2 f1 f1 c==> c/\ cMEM f3 f2 cuniq f2 c==> cMEM f0 f2 c==> cMEM f1 f2 c/\ c/\ cMEM f3 f2 cuniq f2 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f0 cnext_el f2 f1 cMEM f3 b0 c\/ cMEM f3 cCONS cnext_el f2 f0 cNIL c\/ cMEM f3 cbetwn f2 cnext_el f2 f0 f1 cMEM f3 cCONS f1 cNIL c\/ c\/ cMEM f3 cCONS cnext_el f2 f1 cNIL c\/ cMEM f3 cbetwn f2 cnext_el f2 f1 f0 cMEM f3 cCONS f0 cNIL cMEM f3 cbetwn f5 f0 cnext_el f2 f1
+ ((MEM x) ((CONS ram1) NIL)) |- (((MEM x) ((CONS ram1) NIL)) /\ (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el ((CONS ram1) NIL)) ram2)))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ram1) NIL)) \/ (((MEM x) (((betwn ((CONS ram1) NIL)) ram1) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ((next_el ((CONS ram1) NIL)) ram2)) NIL)) \/ (((MEM x) (((betwn ((CONS ram1) NIL)) ((next_el ((CONS ram1) NIL)) ram2)) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ((next_el ((CONS ram1) NIL)) ram2))))))
T c==> cMEM f0 cCONS f1 cNIL c/\ cMEM f0 cCONS f1 cNIL c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f2 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f2 cbetwn f3 f1 cnext_el cCONS f1 cNIL f4 cMEM f0 b0 c\/ cMEM f0 cCONS f1 cNIL c\/ cMEM f0 cbetwn cCONS f1 cNIL f1 f4 cMEM f0 cCONS f4 cNIL c\/ c\/ cMEM f0 cCONS cnext_el cCONS f1 cNIL f4 cNIL c\/ cMEM f0 cbetwn cCONS f1 cNIL cnext_el cCONS f1 cNIL f4 f1 cMEM f0 cCONS f1 cNIL cMEM f0 cbetwn f3 f1 cnext_el cCONS f1 cNIL f4
+ (~ ((MEM ram1) r)) |- (((MEM ram2) r) ==> ((((MEM x) r) /\ (uniq r)) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ram1) NIL)) \/ (((MEM x) (((betwn r) ram1) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ((next_el r) ram2)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2)))))))
T c==> c~ cMEM f0 f1 c==> cMEM f2 f1 c==> c/\ cMEM f3 f1 cuniq f1 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f0 cnext_el f1 f2 cMEM f3 b0 c\/ cMEM f3 cCONS f0 cNIL c\/ cMEM f3 cbetwn f1 f0 f2 cMEM f3 cCONS f2 cNIL c\/ c\/ cMEM f3 cCONS cnext_el f1 f2 cNIL c\/ cMEM f3 cbetwn f1 cnext_el f1 f2 f0 cMEM f3 cCONS f0 cNIL cMEM f3 cbetwn f5 f0 cnext_el f1 f2
+ |- (((!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) ==> ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1)) = ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1))
T c= c==> ! ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1 * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
+ |- ((\x. (!z. (!s. ((uniq s) ==> (~ ((MEM z) (((betwn s) x) z))))))) ram2)
T * / ! ! c==> cuniq b2 c~ cMEM b1 cbetwn b2 b0 b1 f0
+ (~ ((((betwn r) ram2) ram1) = NIL)), (uniq r), ((HD (((betwn r) ram2) ram1)) = ((next_el r) ram2)), ((MEM ram1) r), ((MEM ram2) r), ((MEM x) (((betwn r) ram2) ram1)) |- (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram1)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ (x = ram1))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2)))))
T c==> c~ c= cbetwn f0 f1 f2 cNIL c==> cuniq f0 c==> c= cHD cbetwn f0 f1 f2 cnext_el f0 f1 c==> cMEM f2 f0 c==> cMEM f1 f0 c==> cMEM f3 cbetwn f0 f1 f2 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f2 cnext_el f0 f1 cMEM f3 b0 c\/ c= f3 cnext_el f0 f2 c\/ cMEM f3 cbetwn f0 cnext_el f0 f2 f1 c= f3 f1 c\/ c\/ c= f3 cnext_el f0 f1 c\/ cMEM f3 cbetwn f0 cnext_el f0 f1 f2 c= f3 f2 cMEM f3 cbetwn f5 f2 cnext_el f0 f1
- |- (MAP = map)
T c= part cMAP part cmap
- |- (LENGTH = sizel)
T c= part cLENGTH part csizel
+ ((MEM ram1) r) |- ((~ ((MEM ram2) r)) ==> ((((MEM x) r) /\ (uniq r)) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ((next_el r) ram1)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ((next_el r) ram2)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2)))))))
T c==> cMEM f0 f1 c==> c~ cMEM f2 f1 c==> c/\ cMEM f3 f1 cuniq f1 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f0 cnext_el f1 f2 cMEM f3 b0 c\/ cMEM f3 cCONS cnext_el f1 f0 cNIL c\/ cMEM f3 cbetwn f1 cnext_el f1 f0 f2 cMEM f3 cCONS f2 cNIL c\/ c\/ cMEM f3 cCONS cnext_el f1 f2 cNIL c\/ cMEM f3 cbetwn f1 cnext_el f1 f2 f0 cMEM f3 cCONS f0 cNIL cMEM f3 cbetwn f5 f0 cnext_el f1 f2
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- ((((~ ((((betwn r) ram2) ram2) = NIL)) ==> ((MEM (HD (((betwn r) ram2) ram2))) (((betwn r) ram2) ram2))) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram2) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) \/ (x = ram2))) \/ ((MEM x) (((betwn f) ram2) ((next_el r) ram2)))))) = (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram2) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) \/ (x = ram2))) \/ ((MEM x) (((betwn f) ram2) ((next_el r) ram2))))))
T c= c==> c==> c~ c= cbetwn f0 f1 f1 cNIL cMEM cHD cbetwn f0 f1 f1 cbetwn f0 f1 f1 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f2 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f2 cbetwn f3 f1 cnext_el f0 f1 cMEM f4 b0 c\/ c= f4 cnext_el f0 f1 c\/ cMEM f4 cbetwn f0 cnext_el f0 f1 f1 c= f4 f1 c\/ c\/ c= f4 cnext_el f0 f1 c\/ cMEM f4 cbetwn f0 cnext_el f0 f1 f1 c= f4 f1 cMEM f4 cbetwn f3 f1 cnext_el f0 f1 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f2 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f2 cbetwn f3 f1 cnext_el f0 f1 cMEM f4 b0 c\/ c= f4 cnext_el f0 f1 c\/ cMEM f4 cbetwn f0 cnext_el f0 f1 f1 c= f4 f1 c\/ c\/ c= f4 cnext_el f0 f1 c\/ cMEM f4 cbetwn f0 cnext_el f0 f1 f1 c= f4 f1 cMEM f4 cbetwn f3 f1 cnext_el f0 f1
+ (((next_el r) ram2) = ram2), ((MEM ram2) r) |- ((((MEM x) r) /\ (uniq r)) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ((next_el r) ram1)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ((next_el r) ram2)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2))))))
T c==> c= cnext_el f0 f1 f1 c==> cMEM f1 f0 c==> c/\ cMEM f2 f0 cuniq f0 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f3 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f3 cbetwn f4 f5 cnext_el f0 f1 cMEM f2 b0 c\/ cMEM f2 cCONS cnext_el f0 f5 cNIL c\/ cMEM f2 cbetwn f0 cnext_el f0 f5 f1 cMEM f2 cCONS f1 cNIL c\/ c\/ cMEM f2 cCONS cnext_el f0 f1 cNIL c\/ cMEM f2 cbetwn f0 cnext_el f0 f1 f5 cMEM f2 cCONS f5 cNIL cMEM f2 cbetwn f4 f5 cnext_el f0 f1
+ (~ (ram1 = ram2)), (~ ((((betwn r) ram1) ram2) = NIL)), (uniq r), ((MEM ram1) r), ((MEM ram2) r), ((MEM x) (((betwn r) ram1) ram2)) |- (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram1)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ (x = ram1))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2)))))
T c==> c~ c= f0 f1 c==> c~ c= cbetwn f2 f0 f1 cNIL c==> cuniq f2 c==> cMEM f0 f2 c==> cMEM f1 f2 c==> cMEM f3 cbetwn f2 f0 f1 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f0 cnext_el f2 f1 cMEM f3 b0 c\/ c= f3 cnext_el f2 f0 c\/ cMEM f3 cbetwn f2 cnext_el f2 f0 f1 c= f3 f1 c\/ c\/ c= f3 cnext_el f2 f1 c\/ cMEM f3 cbetwn f2 cnext_el f2 f1 f0 c= f3 f0 cMEM f3 cbetwn f5 f0 cnext_el f2 f1
- |- (T = ((~ (!A. (A \/ (~ A)))) ==> F))
T c= cT c==> c~ ! c\/ b0 c~ b0 cF
- |- (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
+ (((MEM x) (((betwn (((betwn r) ram1) ram2)) ((next_el r) ram1)) ram2)) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram1)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ (x = ram1))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2)))))), ((((next_el r) ram1) = x) \/ ((MEM x) (((betwn (((betwn r) ram1) ram2)) ((next_el r) ram1)) ram2))) |- (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram1)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ (x = ram1))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2)))))
T c==> c==> cMEM f0 cbetwn cbetwn f1 f2 f3 cnext_el f1 f2 f3 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f2 cnext_el f1 f3 cMEM f0 b0 c\/ c= f0 cnext_el f1 f2 c\/ cMEM f0 cbetwn f1 cnext_el f1 f2 f3 c= f0 f3 c\/ c\/ c= f0 cnext_el f1 f3 c\/ cMEM f0 cbetwn f1 cnext_el f1 f3 f2 c= f0 f2 cMEM f0 cbetwn f5 f2 cnext_el f1 f3 c==> c\/ c= cnext_el f1 f2 f0 cMEM f0 cbetwn cbetwn f1 f2 f3 cnext_el f1 f2 f3 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f2 cnext_el f1 f3 cMEM f0 b0 c\/ c= f0 cnext_el f1 f2 c\/ cMEM f0 cbetwn f1 cnext_el f1 f2 f3 c= f0 f3 c\/ c\/ c= f0 cnext_el f1 f3 c\/ cMEM f0 cbetwn f1 cnext_el f1 f3 f2 c= f0 f2 cMEM f0 cbetwn f5 f2 cnext_el f1 f3
+ (uniq r), ((MEM x) r) |- ((r = ((CONS ram2) NIL)) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ram2))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ((next_el r) ram1)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ram2) NIL)) \/ (((MEM x) (((betwn r) ram2) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ram2)))))
T c==> cuniq f0 c==> cMEM f1 f0 c==> c= f0 cCONS f2 cNIL c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f3 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f3 cbetwn f4 f5 f2 cMEM f1 b0 c\/ cMEM f1 cCONS cnext_el f0 f5 cNIL c\/ cMEM f1 cbetwn f0 cnext_el f0 f5 f2 cMEM f1 cCONS f2 cNIL c\/ c\/ cMEM f1 cCONS f2 cNIL c\/ cMEM f1 cbetwn f0 f2 f5 cMEM f1 cCONS f5 cNIL cMEM f1 cbetwn f4 f5 f2
+ (~ ((MEM ram1) r)), (~ ((MEM ram2) r)) |- ((~ ((MEM ((next_el r) ram2)) r)) /\ (~ ((MEM ram1) r)))
T c==> c~ cMEM f0 f1 c==> c~ cMEM f2 f1 c/\ c~ cMEM cnext_el f1 f2 f1 c~ cMEM f0 f1
+ (uniq r), ((HD (((betwn r) ram1) ram2)) = ((next_el r) ram1)), ((MEM ram1) r), ((MEM ram2) r), ((MEM x) (((betwn (((betwn r) ram1) ram2)) ((next_el r) ram1)) ram2)), ((MEM ((next_el r) ram1)) (((betwn r) ram1) ram2)) |- ((((uniq r) /\ (((MEM ram1) r) /\ (((MEM ram2) r) /\ (((MEM ((next_el r) ram1)) (((betwn r) ram1) ram2)) /\ (((HD (((betwn r) ram1) ram2)) = ((next_el r) ram1)) /\ ((MEM x) (((betwn (((betwn r) ram1) ram2)) ((next_el r) ram1)) ram2))))))) ==> ((MEM x) (((betwn r) ((next_el r) ram1)) ram2))) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram1)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ (x = ram1))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2))))))
T c==> cuniq f0 c==> c= cHD cbetwn f0 f1 f2 cnext_el f0 f1 c==> cMEM f1 f0 c==> cMEM f2 f0 c==> cMEM f3 cbetwn cbetwn f0 f1 f2 cnext_el f0 f1 f2 c==> cMEM cnext_el f0 f1 cbetwn f0 f1 f2 c==> c==> c/\ cuniq f0 c/\ cMEM f1 f0 c/\ cMEM f2 f0 c/\ cMEM cnext_el f0 f1 cbetwn f0 f1 f2 c/\ c= cHD cbetwn f0 f1 f2 cnext_el f0 f1 cMEM f3 cbetwn cbetwn f0 f1 f2 cnext_el f0 f1 f2 cMEM f3 cbetwn f0 cnext_el f0 f1 f2 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f1 cnext_el f0 f2 cMEM f3 b0 c\/ c= f3 cnext_el f0 f1 c\/ cMEM f3 cbetwn f0 cnext_el f0 f1 f2 c= f3 f2 c\/ c\/ c= f3 cnext_el f0 f2 c\/ cMEM f3 cbetwn f0 cnext_el f0 f2 f1 c= f3 f1 cMEM f3 cbetwn f5 f1 cnext_el f0 f2
+ |- ((\s. ((((MEM ram2) s) /\ ((((next_el s) ram2) = ram2) /\ (uniq s))) ==> (s = ((CONS ram2) NIL)))) r)
T * / c==> c/\ cMEM f0 b0 c/\ c= cnext_el b0 f0 f0 cuniq b0 c= b0 cCONS f0 cNIL f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((~ ((((betwn r) ram2) ram1) = NIL)) ==> ((MEM (HD (((betwn r) ram2) ram1))) (((betwn r) ram2) ram1)))
T c==> c~ c= cbetwn f0 f1 f2 cNIL cMEM cHD cbetwn f0 f1 f2 cbetwn f0 f1 f2
+ (~ ((MEM ram2) (((betwn r) ram2) ram2))), (uniq r), ((HD (((betwn r) ram2) ram2)) = ((next_el r) ram2)), ((MEM ram2) r), ((MEM x) (((betwn r) ram2) ram2)) |- (((MEM ((next_el r) ram2)) (((betwn r) ram2) ram2)) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram2) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) \/ (x = ram2))) \/ ((MEM x) (((betwn f) ram2) ((next_el r) ram2))))))
T c==> c~ cMEM f0 cbetwn f1 f0 f0 c==> cuniq f1 c==> c= cHD cbetwn f1 f0 f0 cnext_el f1 f0 c==> cMEM f0 f1 c==> cMEM f2 cbetwn f1 f0 f0 c==> cMEM cnext_el f1 f0 cbetwn f1 f0 f0 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f3 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f3 cbetwn f4 f0 cnext_el f1 f0 cMEM f2 b0 c\/ c= f2 cnext_el f1 f0 c\/ cMEM f2 cbetwn f1 cnext_el f1 f0 f0 c= f2 f0 c\/ c\/ c= f2 cnext_el f1 f0 c\/ cMEM f2 cbetwn f1 cnext_el f1 f0 f0 c= f2 f0 cMEM f2 cbetwn f4 f0 cnext_el f1 f0
+ |- (((!r1. (!r2. (((~ ((MEM r1) r)) /\ (((MEM r2) r) /\ ((MEM x) r))) ==> ((r2 = x) \/ ((MEM x) (((betwn r) r2) r1)))))) ==> ((\r1. (!r2. (((~ ((MEM r1) r)) /\ (((MEM r2) r) /\ ((MEM x) r))) ==> ((r2 = x) \/ ((MEM x) (((betwn r) r2) r1)))))) ram2)) = ((\r1. (!r2. (((~ ((MEM r1) r)) /\ (((MEM r2) r) /\ ((MEM x) r))) ==> ((r2 = x) \/ ((MEM x) (((betwn r) r2) r1)))))) ram2))
T c= c==> ! ! c==> c/\ c~ cMEM b0 f0 c/\ cMEM b1 f0 cMEM f1 f0 c\/ c= b1 f1 cMEM f1 cbetwn f0 b1 b0 * / ! c==> c/\ c~ cMEM b0 f0 c/\ cMEM b1 f0 cMEM f1 f0 c\/ c= b1 f1 cMEM f1 cbetwn f0 b1 b0 f2 * / ! c==> c/\ c~ cMEM b0 f0 c/\ cMEM b1 f0 cMEM f1 f0 c\/ c= b1 f1 cMEM f1 cbetwn f0 b1 b0 f2
+ (uniq r), ((HD (((betwn r) ram2) ram2)) = ((next_el r) ram2)), ((MEM ram2) r), ((MEM x) (((betwn r) ram2) ram2)) |- (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram2) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) \/ (x = ram2))) \/ ((MEM x) (((betwn f) ram2) ((next_el r) ram2)))))
T c==> cuniq f0 c==> c= cHD cbetwn f0 f1 f1 cnext_el f0 f1 c==> cMEM f1 f0 c==> cMEM f2 cbetwn f0 f1 f1 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f3 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f3 cbetwn f4 f1 cnext_el f0 f1 cMEM f2 b0 c\/ c= f2 cnext_el f0 f1 c\/ cMEM f2 cbetwn f0 cnext_el f0 f1 f1 c= f2 f1 c\/ c\/ c= f2 cnext_el f0 f1 c\/ cMEM f2 cbetwn f0 cnext_el f0 f1 f1 c= f2 f1 cMEM f2 cbetwn f4 f1 cnext_el f0 f1
+ (uniq r), (ram1 = ram2), ((MEM ram1) r), ((MEM x) r) |- ((((ram2 = x) \/ ((MEM x) (((betwn r) ram2) ram2))) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram2) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) \/ (x = ram2))) \/ ((MEM x) (((betwn f) ram2) ((next_el r) ram2)))))) = (((((MEM ram1) r) /\ (((MEM x) r) /\ (uniq r))) ==> ((ram1 = x) \/ ((MEM x) (((betwn r) ram1) ram1)))) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram2) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ((next_el r) ram2)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ((next_el r) ram2)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) \/ ((MEM x) ((CONS ram2) NIL)))) \/ ((MEM x) (((betwn f) ram2) ((next_el r) ram2)))))))
T c==> cuniq f0 c==> c= f1 f2 c==> cMEM f1 f0 c==> cMEM f3 f0 c= c==> c\/ c= f2 f3 cMEM f3 cbetwn f0 f2 f2 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f2 cnext_el f0 f2 cMEM f3 b0 c\/ c= f3 cnext_el f0 f2 c\/ cMEM f3 cbetwn f0 cnext_el f0 f2 f2 c= f3 f2 c\/ c\/ c= f3 cnext_el f0 f2 c\/ cMEM f3 cbetwn f0 cnext_el f0 f2 f2 c= f3 f2 cMEM f3 cbetwn f5 f2 cnext_el f0 f2 c==> c==> c/\ cMEM f1 f0 c/\ cMEM f3 f0 cuniq f0 c\/ c= f1 f3 cMEM f3 cbetwn f0 f1 f1 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f2 cnext_el f0 f2 cMEM f3 b0 c\/ cMEM f3 cCONS cnext_el f0 f2 cNIL c\/ cMEM f3 cbetwn f0 cnext_el f0 f2 f2 cMEM f3 cCONS f2 cNIL c\/ c\/ cMEM f3 cCONS cnext_el f0 f2 cNIL c\/ cMEM f3 cbetwn f0 cnext_el f0 f2 f2 cMEM f3 cCONS f2 cNIL cMEM f3 cbetwn f5 f2 cnext_el f0 f2
- |- ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0)
T * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1
+ (uniq r), ((MEM x) r) |- ((r = ((CONS ram2) NIL)) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ram2))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ((next_el ((CONS ram2) NIL)) ram1)) NIL)) \/ (((MEM x) (((betwn ((CONS ram2) NIL)) ((next_el ((CONS ram2) NIL)) ram1)) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ram2) NIL)) \/ (((MEM x) (((betwn ((CONS ram2) NIL)) ram2) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ram2)))))
T c==> cuniq f0 c==> cMEM f1 f0 c==> c= f0 cCONS f2 cNIL c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f3 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f3 cbetwn f4 f5 f2 cMEM f1 b0 c\/ cMEM f1 cCONS cnext_el cCONS f2 cNIL f5 cNIL c\/ cMEM f1 cbetwn cCONS f2 cNIL cnext_el cCONS f2 cNIL f5 f2 cMEM f1 cCONS f2 cNIL c\/ c\/ cMEM f1 cCONS f2 cNIL c\/ cMEM f1 cbetwn cCONS f2 cNIL f2 f5 cMEM f1 cCONS f5 cNIL cMEM f1 cbetwn f4 f5 f2
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ |- (((~ ((MEM ram1) r)) \/ ((MEM ram1) r)) ==> ((((MEM x) r) /\ (uniq r)) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ((next_el r) ram1)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ((next_el r) ram2)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2)))))))
T c==> c\/ c~ cMEM f0 f1 cMEM f0 f1 c==> c/\ cMEM f2 f1 cuniq f1 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f3 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f3 cbetwn f4 f0 cnext_el f1 f5 cMEM f2 b0 c\/ cMEM f2 cCONS cnext_el f1 f0 cNIL c\/ cMEM f2 cbetwn f1 cnext_el f1 f0 f5 cMEM f2 cCONS f5 cNIL c\/ c\/ cMEM f2 cCONS cnext_el f1 f5 cNIL c\/ cMEM f2 cbetwn f1 cnext_el f1 f5 f0 cMEM f2 cCONS f0 cNIL cMEM f2 cbetwn f4 f0 cnext_el f1 f5
+ |- ((\s. (!x. (!y. (!z. (((~ (x = z)) /\ ((uniq s) /\ (((MEM x) s) /\ (((MEM y) s) /\ ((MEM z) s))))) ==> ((y = x) \/ ((y = z) \/ (((MEM y) (((betwn s) x) z)) \/ ((MEM y) (((betwn s) z) x)))))))))) r)
T * / ! ! ! c==> c/\ c~ c= b1 b3 c/\ cuniq b0 c/\ cMEM b1 b0 c/\ cMEM b2 b0 cMEM b3 b0 c\/ c= b2 b1 c\/ c= b2 b3 c\/ cMEM b2 cbetwn b0 b1 b3 cMEM b2 cbetwn b0 b3 b1 f0
- |- ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))
T c==> c~ c= cNIL f0 c= cLAST f0 clast f1 f0
+ (r = ((CONS ram2) NIL)) |- ((((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ram2))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ((next_el ((CONS ram2) NIL)) ram1)) NIL)) \/ (((MEM x) (((betwn ((CONS ram2) NIL)) ((next_el ((CONS ram2) NIL)) ram1)) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ram2) NIL)) \/ (((MEM x) (((betwn ((CONS ram2) NIL)) ram2) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ram2)))) = (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ram2))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ((next_el r) ram1)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ram2) NIL)) \/ (((MEM x) (((betwn r) ram2) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ram2)))))
T c==> c= f0 cCONS f1 cNIL c= c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f2 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f2 cbetwn f3 f4 f1 cMEM f5 b0 c\/ cMEM f5 cCONS cnext_el cCONS f1 cNIL f4 cNIL c\/ cMEM f5 cbetwn cCONS f1 cNIL cnext_el cCONS f1 cNIL f4 f1 cMEM f5 cCONS f1 cNIL c\/ c\/ cMEM f5 cCONS f1 cNIL c\/ cMEM f5 cbetwn cCONS f1 cNIL f1 f4 cMEM f5 cCONS f4 cNIL cMEM f5 cbetwn f3 f4 f1 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f2 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f2 cbetwn f3 f4 f1 cMEM f5 b0 c\/ cMEM f5 cCONS cnext_el f0 f4 cNIL c\/ cMEM f5 cbetwn f0 cnext_el f0 f4 f1 cMEM f5 cCONS f1 cNIL c\/ c\/ cMEM f5 cCONS f1 cNIL c\/ cMEM f5 cbetwn f0 f1 f4 cMEM f5 cCONS f4 cNIL cMEM f5 cbetwn f3 f4 f1
+ |- (((!A. (A \/ (~ A))) ==> ((\A. (A \/ (~ A))) (((next_el r) ram2) = ram2))) = ((\A. (A \/ (~ A))) (((next_el r) ram2) = ram2)))
T c= c==> ! c\/ b0 c~ b0 * / c\/ b0 c~ b0 c= cnext_el f0 f1 f1 * / c\/ b0 c~ b0 c= cnext_el f0 f1 f1
+ (uniq r), ((~ (r = ((CONS ram2) NIL))) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram2) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) \/ (x = ram2))) \/ ((MEM x) (((betwn f) ram2) ((next_el r) ram2)))))), ((r = ((CONS ram2) NIL)) \/ (~ (r = ((CONS ram2) NIL)))), ((MEM x) r), ((MEM x) (((betwn r) ram2) ram2)) |- (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram2) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) \/ (x = ram2))) \/ ((MEM x) (((betwn f) ram2) ((next_el r) ram2)))))
T c==> cuniq f0 c==> c==> c~ c= f0 cCONS f1 cNIL c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f2 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f2 cbetwn f3 f1 cnext_el f0 f1 cMEM f4 b0 c\/ c= f4 cnext_el f0 f1 c\/ cMEM f4 cbetwn f0 cnext_el f0 f1 f1 c= f4 f1 c\/ c\/ c= f4 cnext_el f0 f1 c\/ cMEM f4 cbetwn f0 cnext_el f0 f1 f1 c= f4 f1 cMEM f4 cbetwn f3 f1 cnext_el f0 f1 c==> c\/ c= f0 cCONS f1 cNIL c~ c= f0 cCONS f1 cNIL c==> cMEM f4 f0 c==> cMEM f4 cbetwn f0 f1 f1 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f2 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f2 cbetwn f3 f1 cnext_el f0 f1 cMEM f4 b0 c\/ c= f4 cnext_el f0 f1 c\/ cMEM f4 cbetwn f0 cnext_el f0 f1 f1 c= f4 f1 c\/ c\/ c= f4 cnext_el f0 f1 c\/ cMEM f4 cbetwn f0 cnext_el f0 f1 f1 c= f4 f1 cMEM f4 cbetwn f3 f1 cnext_el f0 f1
- |- ((!A'. (A' \/ (~ A))) = ((!A. A) \/ (~ A)))
T c= ! c\/ b0 c~ f0 c\/ ! b0 c~ f0
+ |- (((!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ==> ((\ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ram1)) = ((\ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ram1))
T c= c==> ! ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 * / ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 f3 * / ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 f3
+ (uniq r), ((r = ((CONS ram2) NIL)) \/ (~ (r = ((CONS ram2) NIL)))), ((MEM ram2) r), ((MEM x) r), ((MEM x) (((betwn r) ram2) ram2)) |- (((r = ((CONS ram2) NIL)) \/ (~ (r = ((CONS ram2) NIL)))) /\ (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram2) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram2)) \/ (x = ram2))) \/ ((MEM x) (((betwn f) ram2) ((next_el r) ram2))))))
T c==> cuniq f0 c==> c\/ c= f0 cCONS f1 cNIL c~ c= f0 cCONS f1 cNIL c==> cMEM f1 f0 c==> cMEM f2 f0 c==> cMEM f2 cbetwn f0 f1 f1 c/\ c\/ c= f0 cCONS f1 cNIL c~ c= f0 cCONS f1 cNIL c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f3 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f3 cbetwn f4 f1 cnext_el f0 f1 cMEM f2 b0 c\/ c= f2 cnext_el f0 f1 c\/ cMEM f2 cbetwn f0 cnext_el f0 f1 f1 c= f2 f1 c\/ c\/ c= f2 cnext_el f0 f1 c\/ cMEM f2 cbetwn f0 cnext_el f0 f1 f1 c= f2 f1 cMEM f2 cbetwn f4 f1 cnext_el f0 f1
+ (uniq r), ((HD (((betwn r) ram2) ram1)) = ((next_el r) ram2)), ((MEM ram1) r), ((MEM ram2) r), ((MEM x) (((betwn (((betwn r) ram2) ram1)) ((next_el r) ram2)) ram1)), ((MEM ((next_el r) ram2)) (((betwn r) ram2) ram1)) |- (((MEM x) (((betwn (((betwn r) ram2) ram1)) ((next_el r) ram2)) ram1)) /\ (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram1)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ (x = ram1))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2))))))
T c==> cuniq f0 c==> c= cHD cbetwn f0 f1 f2 cnext_el f0 f1 c==> cMEM f2 f0 c==> cMEM f1 f0 c==> cMEM f3 cbetwn cbetwn f0 f1 f2 cnext_el f0 f1 f2 c==> cMEM cnext_el f0 f1 cbetwn f0 f1 f2 c/\ cMEM f3 cbetwn cbetwn f0 f1 f2 cnext_el f0 f1 f2 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f2 cnext_el f0 f1 cMEM f3 b0 c\/ c= f3 cnext_el f0 f2 c\/ cMEM f3 cbetwn f0 cnext_el f0 f2 f1 c= f3 f1 c\/ c\/ c= f3 cnext_el f0 f1 c\/ cMEM f3 cbetwn f0 cnext_el f0 f1 f2 c= f3 f2 cMEM f3 cbetwn f5 f2 cnext_el f0 f1
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ ((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) |- (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) /\ (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ ((x = ((next_el r) ram1)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ (x = ram2)))) \/ (((x = ((next_el r) ram2)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ (x = ram1))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2))))))
T c==> cMEM f0 cbetwn f1 cnext_el f1 f2 f3 c/\ cMEM f0 cbetwn f1 cnext_el f1 f2 f3 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f3 cnext_el f1 f2 cMEM f0 b0 c\/ c= f0 cnext_el f1 f3 c\/ cMEM f0 cbetwn f1 cnext_el f1 f3 f2 c= f0 f2 c\/ c\/ c= f0 cnext_el f1 f2 c\/ cMEM f0 cbetwn f1 cnext_el f1 f2 f3 c= f0 f3 cMEM f0 cbetwn f5 f3 cnext_el f1 f2
+ |- ((\r2. (!r'. (((uniq r') /\ (((MEM ram2) r') /\ (((MEM r2) r') /\ (((MEM ((next_el r) ram2)) (((betwn r') ram2) r2)) /\ (((HD (((betwn r') ram2) r2)) = ((next_el r) ram2)) /\ ((MEM x) (((betwn (((betwn r') ram2) r2)) ((next_el r) ram2)) r2))))))) ==> ((MEM x) (((betwn r') ((next_el r) ram2)) r2))))) ram2)
T * / ! c==> c/\ cuniq b1 c/\ cMEM f0 b1 c/\ cMEM b0 b1 c/\ cMEM cnext_el f1 f0 cbetwn b1 f0 b0 c/\ c= cHD cbetwn b1 f0 b0 cnext_el f1 f0 cMEM f2 cbetwn cbetwn b1 f0 b0 cnext_el f1 f0 b0 cMEM f2 cbetwn b1 cnext_el f1 f0 b0 f0
+ (uniq r), ((MEM x) r) |- ((r = ((CONS ram1) NIL)) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el ((CONS ram1) NIL)) ram2)))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ram1) NIL)) \/ (((MEM x) (((betwn ((CONS ram1) NIL)) ram1) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ((next_el ((CONS ram1) NIL)) ram2)) NIL)) \/ (((MEM x) (((betwn ((CONS ram1) NIL)) ((next_el ((CONS ram1) NIL)) ram2)) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ((next_el ((CONS ram1) NIL)) ram2))))))
T c==> cuniq f0 c==> cMEM f1 f0 c==> c= f0 cCONS f2 cNIL c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f3 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f3 cbetwn f4 f2 cnext_el cCONS f2 cNIL f5 cMEM f1 b0 c\/ cMEM f1 cCONS f2 cNIL c\/ cMEM f1 cbetwn cCONS f2 cNIL f2 f5 cMEM f1 cCONS f5 cNIL c\/ c\/ cMEM f1 cCONS cnext_el cCONS f2 cNIL f5 cNIL c\/ cMEM f1 cbetwn cCONS f2 cNIL cnext_el cCONS f2 cNIL f5 f2 cMEM f1 cCONS f2 cNIL cMEM f1 cbetwn f4 f2 cnext_el cCONS f2 cNIL f5
- ((~ (!A. ((~ A) \/ A))) ==> F) |- ((((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F)) ==> ((~ (!A. ((~ A) \/ A))) ==> F))
T c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF
+ (~ (((next_el r) ram1) = ram1)), (~ (((next_el r) ram2) = ram2)), ((ram1 = ram2) \/ (~ (ram1 = ram2))), ((MEM ram1) r), ((MEM ram2) r) |- (((ram1 = ram2) \/ (~ (ram1 = ram2))) /\ ((((MEM x) r) /\ (uniq r)) ==> (((?l. (((MEM l) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) ram1) ((next_el r) ram2)))) /\ ((MEM x) l))) \/ (((MEM x) ((CONS ((next_el r) ram1)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram1)) ram2)) \/ ((MEM x) ((CONS ram2) NIL))))) \/ ((((MEM x) ((CONS ((next_el r) ram2)) NIL)) \/ (((MEM x) (((betwn r) ((next_el r) ram2)) ram1)) \/ ((MEM x) ((CONS ram1) NIL)))) \/ ((MEM x) (((betwn f) ram1) ((next_el r) ram2)))))))
T c==> c~ c= cnext_el f0 f1 f1 c==> c~ c= cnext_el f0 f2 f2 c==> c\/ c= f1 f2 c~ c= f1 f2 c==> cMEM f1 f0 c==> cMEM f2 f0 c/\ c\/ c= f1 f2 c~ c= f1 f2 c==> c/\ cMEM f3 f0 cuniq f0 c\/ c\/ c? / c/\ cMEM b0 cmap / cmap / cPOWER * part cn_list f4 b2 b1 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b2 cFST b1 cflatten f4 cbetwn f5 f1 cnext_el f0 f2 cMEM f3 b0 c\/ cMEM f3 cCONS cnext_el f0 f1 cNIL c\/ cMEM f3 cbetwn f0 cnext_el f0 f1 f2 cMEM f3 cCONS f2 cNIL c\/ c\/ cMEM f3 cCONS cnext_el f0 f2 cNIL c\/ cMEM f3 cbetwn f0 cnext_el f0 f2 f1 cMEM f3 cCONS f1 cNIL cMEM f3 cbetwn f5 f1 cnext_el f0 f2
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- |- ((!A. t) = t)
T c= ! f0 f0
- |- ((!A. ((~ A) \/ A)) = (((~ T) \/ T) /\ ((~ F) \/ F)))
T c= ! c\/ c~ b0 b0 c/\ c\/ c~ cT cT c\/ c~ cF cF
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- (~ ((MEM ram2) r)) |- (T = (~ ((MEM ram2) r)))
T c==> c~ cMEM f0 f1 c= cT c~ cMEM f0 f1
- (~ ((((betwn r) ram2) ram1) = NIL)) |- (((~ (NIL = (((betwn r) ram2) ram1))) ==> ((NIL = (((betwn r) ram2) ram1)) = F)) = ((NIL = (((betwn r) ram2) ram1)) = F))
T c==> c~ c= cbetwn f0 f1 f2 cNIL c= c==> c~ c= cNIL cbetwn f0 f1 f2 c= c= cNIL cbetwn f0 f1 f2 cF c= c= cNIL cbetwn f0 f1 f2 cF
- |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?l. t) = t)
T c= c? / f0 f0
- |- (((((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F)) ==> (((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F))) = (((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F)))
T c= c==> c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF
- |- ((((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F)) ==> (((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F)))
T c==> c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF
- (~ ((((betwn r) ram2) ram1) = NIL)) |- (~ (NIL = (((betwn r) ram2) ram1)))
T c==> c~ c= cbetwn f0 f1 f2 cNIL c~ c= cNIL cbetwn f0 f1 f2
- |- ((!A. (A \/ (~ A))) = ((T \/ (~ T)) /\ (F \/ (~ F))))
T c= ! c\/ b0 c~ b0 c/\ c\/ cT c~ cT c\/ cF c~ cF
- ((~ (!A. ((~ A) \/ A))) ==> F), (((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F)) |- (((~ (!A. ((~ A) \/ A))) ==> F) /\ ((~ (!A. ((~ A) \/ A))) ==> F))
T c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF c/\ c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- ((~ ((MEM ram1) r)) /\ (~ ((MEM ram2) r))) |- (((~ ((MEM ram1) r)) /\ (~ ((MEM ram2) r))) /\ ((((betwn r) ram1) ram2) = r))
T c==> c/\ c~ cMEM f0 f1 c~ cMEM f2 f1 c/\ c/\ c~ cMEM f0 f1 c~ cMEM f2 f1 c= cbetwn f1 f0 f2 f1
- (~ ((MEM ram2) r)) |- (((~ ((MEM ram1) f)) /\ (~ ((MEM ram2) f))) = ((~ ((MEM ram1) f)) /\ (~ ((MEM ((next_el r) ram2)) f))))
T c==> c~ cMEM f0 f1 c= c/\ c~ cMEM f2 f3 c~ cMEM f0 f3 c/\ c~ cMEM f2 f3 c~ cMEM cnext_el f1 f0 f3
- (~ (!A. (A \/ (~ A)))) |- F
T c==> c~ ! c\/ b0 c~ b0 cF
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!A. ((P A) \/ Q)) = ((!A. (P A)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
- |- (((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F))
T c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF
- |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) = ((~ (!A. (A \/ (~ A)))) ==> F))
T c= c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) ==> (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)))
T c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- ((~ (!A. (A \/ (~ A)))) ==> F), (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) |- (((~ (!A. (A \/ (~ A)))) ==> F) /\ ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- (((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F)) |- ((((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F)) /\ (((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F)))
T c==> c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF c/\ c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- (~ (!A. (A \/ (~ A)))) |- ((~ (!A. (A \/ (~ A)))) /\ F)
T c==> c~ ! c\/ b0 c~ b0 c/\ c~ ! c\/ b0 c~ b0 cF
- (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) /\ (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)))
T c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- (~ (r = ((CONS ram2) NIL))) |- (~ (((CONS ram2) NIL) = r))
T c==> c~ c= f0 cCONS f1 cNIL c~ c= cCONS f1 cNIL f0
- (((MEM x) r) /\ (uniq r)) |- ((uniq r) = T)
T c==> c/\ cMEM f0 f1 cuniq f1 c= cuniq f1 cT
- |- ((!A'. ((~ A) \/ A')) = ((~ A) \/ (!A. A)))
T c= ! c\/ c~ f0 b0 c\/ c~ f0 ! b0
- |- (((!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) ==> ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0)) = ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0))
T c= c==> ! c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1 * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1
- (~ ((((betwn r) ram2) ram2) = NIL)) |- (((~ (NIL = (((betwn r) ram2) ram2))) ==> ((NIL = (((betwn r) ram2) ram2)) = F)) = ((NIL = (((betwn r) ram2) ram2)) = F))
T c==> c~ c= cbetwn f0 f1 f1 cNIL c= c==> c~ c= cNIL cbetwn f0 f1 f1 c= c= cNIL cbetwn f0 f1 f1 cF c= c= cNIL cbetwn f0 f1 f1 cF
- (r = ((CONS ram2) NIL)) |- (((CONS ram2) NIL) = r)
T c==> c= f0 cCONS f1 cNIL c= cCONS f1 cNIL f0
- |- (((~ (!A. ((~ A) \/ A))) ==> F) = (!A. ((~ A) \/ A)))
T c= c==> c~ ! c\/ c~ b0 b0 cF ! c\/ c~ b0 b0
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- ((~ (!A. ((~ A) \/ A))) ==> F), (((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F)) |- ((((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F)) /\ ((~ (!A. ((~ A) \/ A))) ==> F))
T c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF c/\ c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF
- (~ (r = ((CONS ram2) NIL))) |- ((((CONS ram2) NIL) = r) = F)
T c==> c~ c= f0 cCONS f1 cNIL c= c= cCONS f1 cNIL f0 cF
- |- ((((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F)) = ((~ (!A. ((~ A) \/ A))) ==> F))
T c= c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF
- (~ (((next_el r) ram2) = ram2)) |- ((((next_el r) ram2) = ram2) = F)
T c==> c~ c= cnext_el f0 f1 f1 c= c= cnext_el f0 f1 f1 cF
- |- (((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) ==> ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s)) = ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s))
T c= c==> ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0 * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0
- (NIL = (((betwn r) ram2) ram1)) |- ((((betwn r) ram2) ram1) = NIL)
T c==> c= cNIL cbetwn f0 f1 f2 c= cbetwn f0 f1 f2 cNIL
- ((~ (!A. (A \/ (~ A)))) ==> F), (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) /\ ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- ((!A. (P \/ (Q A))) = (P \/ (!A. (Q A))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))) = T)
T c= c==> c~ c= cNIL f0 c= cLAST f0 clast f1 f0 cT
- (NIL = (((betwn r) ram2) ram2)) |- ((((betwn r) ram2) ram2) = NIL)
T c==> c= cNIL cbetwn f0 f1 f1 c= cbetwn f0 f1 f1 cNIL
- |- (((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) ==> (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F))) = (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)))
T c= c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- ((LENGTH = sizel) /\ ((FILTER = filter) /\ ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all))))))
T c/\ c= part cLENGTH part csizel c/\ c= part cFILTER part cfilter c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
- ((~ (!A. (A \/ (~ A)))) ==> F) |- (((~ (!A. (A \/ (~ A)))) ==> F) /\ ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- (~ ((((betwn r) ram2) ram2) = NIL)) |- ((NIL = (((betwn r) ram2) ram2)) = F)
T c==> c~ c= cbetwn f0 f1 f1 cNIL c= c= cNIL cbetwn f0 f1 f1 cF
- (((CONS ram2) NIL) = r) |- (r = ((CONS ram2) NIL))
T c==> c= cCONS f0 cNIL f1 c= f1 cCONS f0 cNIL
- (~ (r = ((CONS ram2) NIL))) |- (((~ (((CONS ram2) NIL) = r)) ==> ((((CONS ram2) NIL) = r) = F)) = ((((CONS ram2) NIL) = r) = F))
T c==> c~ c= f0 cCONS f1 cNIL c= c==> c~ c= cCONS f1 cNIL f0 c= c= cCONS f1 cNIL f0 cF c= c= cCONS f1 cNIL f0 cF
- ((((betwn r) ram2) ram2) = NIL) |- (NIL = (((betwn r) ram2) ram2))
T c==> c= cbetwn f0 f1 f1 cNIL c= cNIL cbetwn f0 f1 f1
- ((((betwn r) ram2) ram1) = NIL) |- (NIL = (((betwn r) ram2) ram1))
T c==> c= cbetwn f0 f1 f2 cNIL c= cNIL cbetwn f0 f1 f2
- |- ((!A. (P A)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- (~ (!A. ((~ A) \/ A))) |- F
T c==> c~ ! c\/ c~ b0 b0 cF
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- |- ((APPEND = cat) /\ (ALL = all))
T c/\ c= part cAPPEND part ccat c= part cALL part call
- |- (FILTER = filter)
T c= part cFILTER part cfilter
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (T = ((~ (!A. ((~ A) \/ A))) ==> F))
T c= cT c==> c~ ! c\/ c~ b0 b0 cF
- (~ (!A. ((~ A) \/ A))) |- ((~ (!A. ((~ A) \/ A))) /\ F)
T c==> c~ ! c\/ c~ b0 b0 c/\ c~ ! c\/ c~ b0 b0 cF
- (~ ((MEM x) s)) |- ((~ ((MEM x) s)) /\ (((next_el s) x) = x))
T c==> c~ cMEM f0 f1 c/\ c~ cMEM f0 f1 c= cnext_el f1 f0 f0
- (~ ((((betwn r) ram2) ram2) = NIL)) |- (~ (NIL = (((betwn r) ram2) ram2)))
T c==> c~ c= cbetwn f0 f1 f1 cNIL c~ c= cNIL cbetwn f0 f1 f1
- |- (((~ (!A. (A \/ (~ A)))) ==> F) = (!A. (A \/ (~ A))))
T c= c==> c~ ! c\/ b0 c~ b0 cF ! c\/ b0 c~ b0
- ((~ (!A. (A \/ (~ A)))) ==> F) |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) ==> ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s)
T * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0
