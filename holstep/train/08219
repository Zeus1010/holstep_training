N Oxlzlez.mcell3_dihX_dih_y
C |- (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((pack_nonlinear_non_ox3q1h /\ ((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (~ (((((cc_4 V) u0) u1) f) i)))))))))) ==> ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))))))))))
T c==> c/\ cpack_nonlinear_non_ox3q1h c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ccritical_edge_y cdistance c, f1 f2 c/\ cHAS_SIZE * * part cs_leaf f0 cCONS f1 cCONS f2 cNIL f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c~ ccc_4 f0 f1 f2 f5 f6 c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f1 * f5 f6 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f5 f6
D TRUTH
A |- T
T cT
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D FORALL_BOOL_THM
A |- ((!b. (P b)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
D Basics.EL_EXPLICIT
A |- (!h. (!t. ((((EL (NUMERAL _0)) ((CONS h) t)) = h) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS h) t)) = ((EL (NUMERAL _0)) t)) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t))))))))))
T c/\ c= cEL cNUMERAL c_0 cCONS f0 f1 f0 c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL c_0 f1 c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
D Nonlinear_lemma.dih_y_sym
A |- (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5))))))))
T c= cdih_y f0 f1 f2 f3 f4 f5 cdih_y f0 f2 f1 f3 f5 f4
D Nonlinear_lemma.dih_y_sym2
A |- (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3))))))))
T c= cdih_y f0 f1 f2 f3 f4 f5 cdih_y f0 f4 f5 f3 f1 f2
D Tskajxy_lemmas.gammaX_gamma3f
A |- (!V. (!X. (!ul. (!u0. (!u1. (!u2. (!u3. (!y4. (!y5. (!y6. (((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((X = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ul)) /\ ((~ (negligible X)) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ (((distance (u1 , u2)) = y4) /\ (((distance (u0 , u2)) = y5) /\ ((distance (u0 , u1)) = y6))))))))) ==> (((measure X) = ((((((vol_y sqrt2) sqrt2) sqrt2) y4) y5) y6)) /\ ((((sol u0) X) = ((((((sol_y y5) y6) sqrt2) sqrt2) sqrt2) y4)) /\ ((((sol u1) X) = ((((((sol_y y6) y4) sqrt2) sqrt2) sqrt2) y5)) /\ ((((sol u2) X) = ((((((sol_y y4) y5) sqrt2) sqrt2) sqrt2) y6)) /\ (((((dihX V) X) (u0 , u1)) = ((((((dih_y y6) y4) sqrt2) sqrt2) sqrt2) y5)) /\ (((((dihX V) X) (u0 , u2)) = ((((((dih_y y5) y6) sqrt2) sqrt2) sqrt2) y4)) /\ (((((dihX V) X) (u1 , u2)) = ((((((dih_y y4) y5) sqrt2) sqrt2) sqrt2) y6)) /\ ((((gammaX V) X) lmfun) = (((((gamma3f y4) y5) y6) sqrt2) lmfun))))))))))))))))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f2 * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 f1 c/\ c~ cnegligible f2 c/\ c= f1 cCONS f3 cCONS f4 cCONS f5 cCONS f6 cNIL c/\ c= cdistance c, f4 f5 f7 c/\ c= cdistance c, f3 f5 f8 c= cdistance c, f3 f4 f9 c/\ c= cmeasure f2 cvol_y csqrt2 csqrt2 csqrt2 f7 f8 f9 c/\ c= csol f3 f2 csol_y f8 f9 csqrt2 csqrt2 csqrt2 f7 c/\ c= csol f4 f2 csol_y f9 f7 csqrt2 csqrt2 csqrt2 f8 c/\ c= csol f5 f2 csol_y f7 f8 csqrt2 csqrt2 csqrt2 f9 c/\ c= cdihX f0 f2 c, f3 f4 cdih_y f9 f7 csqrt2 csqrt2 csqrt2 f8 c/\ c= cdihX f0 f2 c, f3 f5 cdih_y f8 f9 csqrt2 csqrt2 csqrt2 f7 c/\ c= cdihX f0 f2 c, f4 f5 cdih_y f7 f8 csqrt2 csqrt2 csqrt2 f9 c= cgammaX f0 f2 part clmfun cgamma3f f7 f8 f9 csqrt2 part clmfun
D Leaf_cell.cc_cell
A |- (!V. (!ul. (((cc_cell V) ul) = (((mcell ((cc_ke V) ul)) V) ((cc_uh V) ul)))))
T c= * * part ccc_cell f0 f1 * * * part cmcell ccc_ke f0 f1 f0 ccc_uh f0 f1
D Leaf_cell.LIST_OF_CC_UH
A |- (!V. (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_uh V) ul) = ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL))))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 c= ccc_uh f0 f1 cCONS cEL cNUMERAL c_0 f1 cCONS cEL cNUMERAL cBIT1 c_0 f1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cNIL
D Oxlzlez.CC_3_PROPS
A |- (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((pack_nonlinear_non_ox3q1h /\ ((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (~ (((((cc_4 V) u0) u1) f) i)))))))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL))))) /\ (((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL _0))) /\ (((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL))))) = (real_of_num (NUMERAL _0))) /\ ((((cc_ke V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) /\ ((((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) /\ ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) /\ (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_lt (hl ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) /\ (((leaf V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u0 , u1))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u0 , (f i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u0 , (f (SUC i))))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u1 , (f i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u1 , (f (SUC i))))) /\ (((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u1 , (f i))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f (SUC i))))) (distance (u1 , (f (SUC i)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) /\ (((((((azim_mcell V) f) u0) u1) i) = ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (?y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i)))))))))))))))))))))))))))))))))))))))))))))))))))))
T c==> c/\ cpack_nonlinear_non_ox3q1h c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ccritical_edge_y cdistance c, f1 f2 c/\ cHAS_SIZE * * part cs_leaf f0 cCONS f1 cCONS f2 cNIL f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c~ ccc_4 f0 f1 f2 f5 f6 c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT1 cBIT1 c_0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f1 cCONS * f5 cSUC f6 cNIL c/\ c= cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL creal_of_num cNUMERAL c_0 c/\ c= cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f5 cSUC f6 cNIL creal_of_num cNUMERAL c_0 c/\ c= ccc_ke f0 cCONS f2 cCONS f1 cCONS * f5 cSUC f6 cNIL cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * * * part cwedge_ge f1 f2 * f5 f6 * f5 cSUC f6 c/\ cSUBSET * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f5 cSUC f6 cNIL * * * * part cwedge_ge f1 f2 * f5 f6 * f5 cSUC f6 c/\ c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f5 cSUC f6 cNIL c/\ cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * * * part cwedge_ge f1 f2 * f5 f6 * f5 cSUC f6 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 part cEMPTY c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 cSUC f6 part cEMPTY c/\ creal_lt chl cCONS f1 cCONS f2 cCONS * f5 f6 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt chl cCONS f1 cCONS f2 cCONS * f5 cSUC f6 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt chl cCONS f2 cCONS f1 cCONS * f5 cSUC f6 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 cSUC f6 cNIL c/\ cleaf f0 cCONS f2 cCONS f1 cCONS * f5 cSUC f6 cNIL c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 * f5 f6 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 * f5 cSUC f6 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 * f5 f6 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 * f5 cSUC f6 c/\ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f1 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f1 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f2 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f2 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f5 f6 cdistance c, f2 * f5 f6 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f5 cSUC f6 cdistance c, f2 * f5 cSUC f6 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f5 cSUC f6 cNIL c/\ c= cazim_mcell f0 f5 f1 f2 f6 cazim f1 f2 * f5 f6 * f5 cSUC f6 c? / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f1 f2 cdistance c, f1 * f5 f6 cdistance c, f1 * f5 cSUC f6 b0 cdistance c, f2 * f5 cSUC f6 cdistance c, f2 * f5 f6 c/\ creal_le cdih_y cdistance c, f1 f2 cdistance c, f1 * f5 f6 cdistance c, f1 * f5 cSUC f6 b0 cdistance c, f2 * f5 cSUC f6 cdistance c, f2 * f5 f6 cazim f1 f2 * f5 f6 * f5 cSUC f6 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f1 f2 cdistance c, f1 * f5 f6 cdistance c, f1 * f5 cSUC f6 b0 cdistance c, f2 * f5 cSUC f6 cdistance c, f2 * f5 f6 c==> c/\ creal_lt cazim f1 f2 * f5 f6 * f5 cSUC f6 cpi creal_le cdistance c, * f5 f6 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f5 f6 * f5 cSUC f6
+ pack_nonlinear_non_ox3q1h, (packing V), ((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (~ (((((cc_4 V) u0) u1) f) i))))))))) |- ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))
T c==> cpack_nonlinear_non_ox3q1h c==> cpacking f0 c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ccritical_edge_y cdistance c, f1 f2 c/\ cHAS_SIZE * * part cs_leaf f0 cCONS f1 cCONS f2 cNIL f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c~ ccc_4 f0 f1 f2 f5 f6 c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f1 * f5 f6 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f5 f6
+ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) NIL))))) /\ (((distance (u1 , (f i))) = (distance (u1 , (f i)))) /\ (((distance (u0 , (f i))) = (distance (u0 , (f i)))) /\ ((distance (u0 , u1)) = (distance (u0 , u1)))))))))))
T c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cpacking f0 c==> csaturated f0 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS f1 cCONS f2 cCONS * f3 f4 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL c/\ c= cdistance c, f2 * f3 f4 cdistance c, f2 * f3 f4 c/\ c= cdistance c, f1 * f3 f4 cdistance c, f1 * f3 f4 c= cdistance c, f1 f2 cdistance c, f1 f2
+ |- ((!u1. (!u0. ((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> (~ (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5))))))))))))) = T)
T c= ! ! c==> c~ c= cdih_y cdistance c, b1 b0 cdistance c, b0 * f0 f1 csqrt2 csqrt2 csqrt2 cdistance c, b1 * f0 f1 cdih_y cdistance c, b1 b0 cdistance c, b1 * f0 f1 csqrt2 csqrt2 csqrt2 cdistance c, b0 * f0 f1 c==> ! ! ! ! ! ! c= cdih_y b2 b3 b4 b5 b6 b7 cdih_y b2 b6 b7 b5 b3 b4 c~ ! ! ! ! ! ! c= cdih_y b2 b3 b4 b5 b6 b7 cdih_y b2 b4 b3 b5 b7 b6 cT
+ |- ((\X. (!ul. (!u0. (!u1. (!u2. (!u3. (!y4. (!y5. (!y6. (((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((X = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ul)) /\ ((~ (negligible X)) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ (((distance (u1 , u2)) = y4) /\ (((distance (u0 , u2)) = y5) /\ ((distance (u0 , u1)) = y6))))))))) ==> (((measure X) = ((((((vol_y sqrt2) sqrt2) sqrt2) y4) y5) y6)) /\ ((((sol u0) X) = ((((((sol_y y5) y6) sqrt2) sqrt2) sqrt2) y4)) /\ ((((sol u1) X) = ((((((sol_y y6) y4) sqrt2) sqrt2) sqrt2) y5)) /\ ((((sol u2) X) = ((((((sol_y y4) y5) sqrt2) sqrt2) sqrt2) y6)) /\ (((((dihX V) X) (u0 , u1)) = ((((((dih_y y6) y4) sqrt2) sqrt2) sqrt2) y5)) /\ (((((dihX V) X) (u0 , u2)) = ((((((dih_y y5) y6) sqrt2) sqrt2) sqrt2) y4)) /\ (((((dihX V) X) (u1 , u2)) = ((((((dih_y y4) y5) sqrt2) sqrt2) sqrt2) y6)) /\ ((((gammaX V) X) lmfun) = (((((gamma3f y4) y5) y6) sqrt2) lmfun))))))))))))))))))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))
T * / ! ! ! ! ! ! ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 b1 c/\ c= b0 * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 b1 c/\ c~ cnegligible b0 c/\ c= b1 cCONS b2 cCONS b3 cCONS b4 cCONS b5 cNIL c/\ c= cdistance c, b3 b4 b6 c/\ c= cdistance c, b2 b4 b7 c= cdistance c, b2 b3 b8 c/\ c= cmeasure b0 cvol_y csqrt2 csqrt2 csqrt2 b6 b7 b8 c/\ c= csol b2 b0 csol_y b7 b8 csqrt2 csqrt2 csqrt2 b6 c/\ c= csol b3 b0 csol_y b8 b6 csqrt2 csqrt2 csqrt2 b7 c/\ c= csol b4 b0 csol_y b6 b7 csqrt2 csqrt2 csqrt2 b8 c/\ c= cdihX f0 b0 c, b2 b3 cdih_y b8 b6 csqrt2 csqrt2 csqrt2 b7 c/\ c= cdihX f0 b0 c, b2 b4 cdih_y b7 b8 csqrt2 csqrt2 csqrt2 b6 c/\ c= cdihX f0 b0 c, b3 b4 cdih_y b6 b7 csqrt2 csqrt2 csqrt2 b8 c= cgammaX f0 b0 part clmfun cgamma3f b6 b7 b8 csqrt2 part clmfun * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) = (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))))
T c= c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
- ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u0 , u1))) |- (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u0 , u1))) = T)
T c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c= creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cT
- (((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))
T c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 f4 cNIL c= * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL
- (_7324256 = _7324262), (_7324257 = _7324263), (_7324258 = _7324264), (_7324259 = _7324265), (_7324260 = _7324266), (_7324261 = _7324267) |- ((_7324261 = _7324267) /\ (((((((dih_y _7324256) _7324257) _7324258) _7324259) _7324260) _7324261) = ((((((dih_y _7324262) _7324263) _7324264) _7324265) _7324266) _7324267)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c==> c= f10 f11 c/\ c= f10 f11 c= cdih_y f0 f2 f4 f6 f8 f10 cdih_y f1 f3 f5 f7 f9 f11
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) |- ((\x. ((\v. (((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) v)) NIL)))) = v)) x)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * / * / c= cCONS f1 cCONS f2 cCONS * f3 f4 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 b1 cNIL b1 b0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
- ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u1 , (f (SUC i))))) |- (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u1 , (f (SUC i))))) = T)
T c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 * f1 cSUC f2 c= creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 * f1 cSUC f2 cT
- (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) |- ((~ (((((((dih_y (distance (u0 , u1))) sqrt2) (distance (u1 , (f i)))) sqrt2) (distance (u0 , (f i)))) sqrt2) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> (((((((dih_y (distance (u0 , u1))) sqrt2) (distance (u1 , (f i)))) sqrt2) (distance (u0 , (f i)))) sqrt2) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))))
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> c~ c= cdih_y cdistance c, f0 f1 csqrt2 cdistance c, f1 * f2 f3 csqrt2 cdistance c, f0 * f2 f3 csqrt2 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c= cdih_y cdistance c, f0 f1 csqrt2 cdistance c, f1 * f2 f3 csqrt2 cdistance c, f0 * f2 f3 csqrt2 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3
+ (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u1 , (f (SUC i))))) /\ (((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u1 , (f i))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f (SUC i))))) (distance (u1 , (f (SUC i)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) /\ (((((((azim_mcell V) f) u0) u1) i) = ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (?y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i))))))))))))))))))))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))
T c==> cpacking f0 c==> csaturated f0 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 * f3 cSUC f4 c/\ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f2 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f2 * f3 f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 cSUC f4 cdistance c, f2 * f3 cSUC f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c/\ c= cazim_mcell f0 f3 f1 f2 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c? / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c/\ creal_le cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c==> c/\ creal_lt cazim f1 f2 * f3 f4 * f3 cSUC f4 cpi creal_le cdistance c, * f3 f4 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f3 f4 * f3 cSUC f4 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4
+ (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) |- ((((((((dih_y (distance (u0 , u1))) sqrt2) (distance (u1 , (f i)))) sqrt2) (distance (u0 , (f i)))) sqrt2) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) = ((((((((dih_y (distance (u0 , u1))) sqrt2) (distance (u1 , (f i)))) sqrt2) (distance (u0 , (f i)))) sqrt2) = ((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ (((((((dih_y (distance (u0 , u1))) sqrt2) (distance (u1 , (f i)))) sqrt2) (distance (u0 , (f i)))) sqrt2) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))))
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 c= c= cdih_y cdistance c, f0 f1 csqrt2 cdistance c, f1 * f2 f3 csqrt2 cdistance c, f0 * f2 f3 csqrt2 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c/\ c= cdih_y cdistance c, f0 f1 csqrt2 cdistance c, f1 * f2 f3 csqrt2 cdistance c, f0 * f2 f3 csqrt2 cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 c= cdih_y cdistance c, f0 f1 csqrt2 cdistance c, f1 * f2 f3 csqrt2 cdistance c, f0 * f2 f3 csqrt2 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3
+ (!V. (!ul. (!P. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul)))))) |- (((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul))) = T)
T c==> ! ! ! c==> c/\ c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 * b2 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 cNIL * b2 ccc_uh b0 b1 c= c==> c/\ c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 * f2 cCONS cEL cNUMERAL c_0 f1 cCONS cEL cNUMERAL cBIT1 c_0 f1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cNIL * f2 ccc_uh f0 f1 cT
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (~ F), (~ (P b)), (P c), (b = c) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c/\ c~ cF cF
+ |- (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t))
T c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT1 c_0 f1
+ |- ((!w0. (!n. (!f. (!i. ((pack_nonlinear_non_ox3q1h /\ ((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (~ (((((cc_4 V) u0) u1) f) i)))))))))) ==> ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))))))) = T)
T c= ! ! ! ! c==> c/\ cpack_nonlinear_non_ox3q1h c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 b2 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ ccritical_edge_y cdistance c, f1 f2 c/\ cHAS_SIZE * * part cs_leaf f0 cCONS f1 cCONS f2 cNIL b1 c/\ c< cNUMERAL cBIT1 c_0 b1 c~ ccc_4 f0 f1 f2 b2 b3 c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * b2 b3 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f1 * b2 b3 csqrt2 csqrt2 csqrt2 cdistance c, f2 * b2 b3 cT
- |- ((_7324250 = _7324252) ==> ((~ (_7324251 = _7324253)) \/ ((_7324250 , _7324251) = (_7324252 , _7324253))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ |- ((\c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))) c)
T * / c==> c==> f0 c= f1 b0 ! c==> c/\ f0 * b1 b0 * b1 f1 f2
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ (!V. (!ul. (!P. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul)))))) |- (!ul. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul))))
T c==> ! ! ! c==> c/\ c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 * b2 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 cNIL * b2 ccc_uh b0 b1 ! c==> c/\ c/\ csaturated f0 c/\ cpacking f0 cleaf f0 b0 * f1 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b0 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 cNIL * f1 ccc_uh f0 b0
+ (P c), (b = c) |- (P b)
T c==> * f0 f1 c==> c= f2 f1 * f0 f2
+ |- (((b = c) ==> (!P. ((P c) ==> (P b)))) = T)
T c= c==> c= f0 f1 ! c==> * b0 f1 * b0 f0 cT
- (((measure ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((vol_y sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1)))) /\ ((((sol u0) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ ((((sol u1) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ ((((sol (f i)) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , (f i))) = ((((((dih_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u1 , (f i))) = ((((((dih_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ ((((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun) = (((((gamma3f (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) lmfun))))))))) |- (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , (f i))) = ((((((dih_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u1 , (f i))) = ((((((dih_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ ((((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun) = (((((gamma3f (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) lmfun))))
T c==> c/\ c= cmeasure * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cvol_y csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 c/\ c= csol f1 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= csol f2 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= csol * f3 f4 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 * f3 f4 cdih_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f2 * f3 f4 cdih_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c= cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun cgamma3f cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 part clmfun c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 * f3 f4 cdih_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f2 * f3 f4 cdih_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c= cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun cgamma3f cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 part clmfun
+ |- ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. (((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) v)) NIL)))) = v)))
T * / ! c= * / * b0 b2 b1 * b0 b1 / c= cCONS f0 cCONS f1 cCONS * f2 f3 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 b0 cNIL b0
- (_7324256 = _7324262), (_7324257 = _7324263) |- ((_7324257 = _7324263) /\ ((~ (_7324258 = _7324264)) \/ ((~ (_7324259 = _7324265)) \/ ((~ (_7324260 = _7324266)) \/ ((~ (_7324261 = _7324267)) \/ (((((((dih_y _7324256) _7324257) _7324258) _7324259) _7324260) _7324261) = ((((((dih_y _7324262) _7324263) _7324264) _7324265) _7324266) _7324267)))))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ c~ c= f10 f11 c= cdih_y f0 f2 f4 f6 f8 f10 cdih_y f1 f3 f5 f7 f9 f11
- (_7324256 = _7324262), (_7324257 = _7324263), (_7324258 = _7324264), (_7324259 = _7324265), (_7324260 = _7324266) |- ((_7324261 = _7324267) ==> (((((((dih_y _7324256) _7324257) _7324258) _7324259) _7324260) _7324261) = ((((((dih_y _7324262) _7324263) _7324264) _7324265) _7324266) _7324267)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c==> c= f10 f11 c= cdih_y f0 f2 f4 f6 f8 f10 cdih_y f1 f3 f5 f7 f9 f11
+ |- (((!ul. (((cc_cell V) ul) = (((mcell ((cc_ke V) ul)) V) ((cc_uh V) ul)))) ==> ((\ul. (((cc_cell V) ul) = (((mcell ((cc_ke V) ul)) V) ((cc_uh V) ul)))) ul)) = ((\ul. (((cc_cell V) ul) = (((mcell ((cc_ke V) ul)) V) ((cc_uh V) ul)))) ul))
T c= c==> ! c= * * part ccc_cell f0 b0 * * * part cmcell ccc_ke f0 b0 f0 ccc_uh f0 b0 * / c= * * part ccc_cell f0 b0 * * * part cmcell ccc_ke f0 b0 f0 ccc_uh f0 b0 f1 * / c= * * part ccc_cell f0 b0 * * * part cmcell ccc_ke f0 b0 f0 ccc_uh f0 b0 f1
+ (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), (((leaf V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u0 , u1))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u0 , (f i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u0 , (f (SUC i))))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u1 , (f i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u1 , (f (SUC i))))) /\ (((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u1 , (f i))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f (SUC i))))) (distance (u1 , (f (SUC i)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) /\ (((((((azim_mcell V) f) u0) u1) i) = ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (?y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i)))))))))))))))))))))))))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))
T c==> cpacking f0 c==> csaturated f0 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ cleaf f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 * f3 f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 * f3 f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 * f3 cSUC f4 c/\ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f2 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f2 * f3 f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 cSUC f4 cdistance c, f2 * f3 cSUC f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c/\ c= cazim_mcell f0 f3 f1 f2 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c? / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c/\ creal_le cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c==> c/\ creal_lt cazim f1 f2 * f3 f4 * f3 cSUC f4 cpi creal_le cdistance c, * f3 f4 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f3 f4 * f3 cSUC f4 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4
+ |- (((!P. (!V. (!ul. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul)))))) ==> ((\P. (!V. (!ul. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul)))))) P)) = ((\P. (!V. (!ul. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul)))))) P))
T c= c==> ! ! ! c==> c/\ c/\ csaturated b1 c/\ cpacking b1 cleaf b1 b2 * b0 cCONS cEL cNUMERAL c_0 b2 cCONS cEL cNUMERAL cBIT1 c_0 b2 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b2 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b1 b2 cNIL * b0 ccc_uh b1 b2 * / ! ! c==> c/\ c/\ csaturated b1 c/\ cpacking b1 cleaf b1 b2 * b0 cCONS cEL cNUMERAL c_0 b2 cCONS cEL cNUMERAL cBIT1 c_0 b2 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b2 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b1 b2 cNIL * b0 ccc_uh b1 b2 f0 * / ! ! c==> c/\ c/\ csaturated b1 c/\ cpacking b1 cleaf b1 b2 * b0 cCONS cEL cNUMERAL c_0 b2 cCONS cEL cNUMERAL cBIT1 c_0 b2 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b2 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b1 b2 cNIL * b0 ccc_uh b1 b2 f0
+ |- (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t))
T c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 c_0 f1
+ |- (((!u1. (!u0. ((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F))))) ==> ((\u1. (!u0. ((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F))))) u1)) = ((\u1. (!u0. ((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F))))) u1))
T c= c==> ! ! c==> c~ c= cdih_y cdistance c, b1 b0 cdistance c, b0 * f0 f1 csqrt2 csqrt2 csqrt2 cdistance c, b1 * f0 f1 cdih_y cdistance c, b1 b0 cdistance c, b1 * f0 f1 csqrt2 csqrt2 csqrt2 cdistance c, b0 * f0 f1 c==> ! ! ! ! ! ! c= cdih_y b2 b3 b4 b5 b6 b7 cdih_y b2 b6 b7 b5 b3 b4 c==> ! ! ! ! ! ! c= cdih_y b2 b3 b4 b5 b6 b7 cdih_y b2 b4 b3 b5 b7 b6 cF * / ! c==> c~ c= cdih_y cdistance c, b1 b0 cdistance c, b0 * f0 f1 csqrt2 csqrt2 csqrt2 cdistance c, b1 * f0 f1 cdih_y cdistance c, b1 b0 cdistance c, b1 * f0 f1 csqrt2 csqrt2 csqrt2 cdistance c, b0 * f0 f1 c==> ! ! ! ! ! ! c= cdih_y b2 b3 b4 b5 b6 b7 cdih_y b2 b6 b7 b5 b3 b4 c==> ! ! ! ! ! ! c= cdih_y b2 b3 b4 b5 b6 b7 cdih_y b2 b4 b3 b5 b7 b6 cF f2 * / ! c==> c~ c= cdih_y cdistance c, b1 b0 cdistance c, b0 * f0 f1 csqrt2 csqrt2 csqrt2 cdistance c, b1 * f0 f1 cdih_y cdistance c, b1 b0 cdistance c, b1 * f0 f1 csqrt2 csqrt2 csqrt2 cdistance c, b0 * f0 f1 c==> ! ! ! ! ! ! c= cdih_y b2 b3 b4 b5 b6 b7 cdih_y b2 b6 b7 b5 b3 b4 c==> ! ! ! ! ! ! c= cdih_y b2 b3 b4 b5 b6 b7 cdih_y b2 b4 b3 b5 b7 b6 cF f2
- ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u1 , (f i)))) |- (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u1 , (f i)))) = T)
T c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 * f1 f2 c= creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 * f1 f2 cT
+ (!V. (!ul. (!P. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul)))))) |- (((!ul. (!P. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul))))) ==> ((\ul. (!P. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul))))) ul)) = ((\ul. (!P. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul))))) ul))
T c==> ! ! ! c==> c/\ c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 * b2 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 cNIL * b2 ccc_uh b0 b1 c= c==> ! ! c==> c/\ c/\ csaturated f0 c/\ cpacking f0 cleaf f0 b0 * b1 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b0 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 cNIL * b1 ccc_uh f0 b0 * / ! c==> c/\ c/\ csaturated f0 c/\ cpacking f0 cleaf f0 b0 * b1 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b0 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 cNIL * b1 ccc_uh f0 b0 f1 * / ! c==> c/\ c/\ csaturated f0 c/\ cpacking f0 cleaf f0 b0 * b1 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b0 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 cNIL * b1 ccc_uh f0 b0 f1
+ |- ((\ul. (((cc_cell V) ul) = (((mcell ((cc_ke V) ul)) V) ((cc_uh V) ul)))) ul)
T * / c= * * part ccc_cell f0 b0 * * * part cmcell ccc_ke f0 b0 f0 ccc_uh f0 b0 f1
+ |- (!ul. (!u0'. (!u1'. (!u2. (!u3. (!y4. (!y5. (!y6. (((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ul)) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((ul = ((CONS u0') ((CONS u1') ((CONS u2) ((CONS u3) NIL))))) /\ (((distance (u1' , u2)) = y4) /\ (((distance (u0' , u2)) = y5) /\ ((distance (u0' , u1')) = y6))))))))) ==> (((measure ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((vol_y sqrt2) sqrt2) sqrt2) y4) y5) y6)) /\ ((((sol u0') ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y y5) y6) sqrt2) sqrt2) sqrt2) y4)) /\ ((((sol u1') ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y y6) y4) sqrt2) sqrt2) sqrt2) y5)) /\ ((((sol u2) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y y4) y5) sqrt2) sqrt2) sqrt2) y6)) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0' , u1')) = ((((((dih_y y6) y4) sqrt2) sqrt2) sqrt2) y5)) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0' , u2)) = ((((((dih_y y5) y6) sqrt2) sqrt2) sqrt2) y4)) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u1' , u2)) = ((((((dih_y y4) y5) sqrt2) sqrt2) sqrt2) y6)) /\ ((((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun) = (((((gamma3f y4) y5) y6) sqrt2) lmfun))))))))))))))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 f1 c/\ c~ cnegligible * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL c/\ c= f1 cCONS f6 cCONS f7 cCONS f8 cCONS f9 cNIL c/\ c= cdistance c, f7 f8 f10 c/\ c= cdistance c, f6 f8 f11 c= cdistance c, f6 f7 f12 c/\ c= cmeasure * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL cvol_y csqrt2 csqrt2 csqrt2 f10 f11 f12 c/\ c= csol f6 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL csol_y f11 f12 csqrt2 csqrt2 csqrt2 f10 c/\ c= csol f7 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL csol_y f12 f10 csqrt2 csqrt2 csqrt2 f11 c/\ c= csol f8 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL csol_y f10 f11 csqrt2 csqrt2 csqrt2 f12 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL c, f6 f7 cdih_y f12 f10 csqrt2 csqrt2 csqrt2 f11 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL c, f6 f8 cdih_y f11 f12 csqrt2 csqrt2 csqrt2 f10 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL c, f7 f8 cdih_y f10 f11 csqrt2 csqrt2 csqrt2 f12 c= cgammaX f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL part clmfun cgamma3f f10 f11 f12 csqrt2 part clmfun
- (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))), (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))), (~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) |- ((~ F) ==> F)
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c==> c~ cF cF
+ (~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) |- ((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) /\ F)
T c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c/\ c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 cF
- (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))), (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))), (~ F), (~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) |- ((~ F) /\ F)
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 c==> c~ cF c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c/\ c~ cF cF
+ (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) |- (((!y3. (!y4. (!y5. (!y6. (((((((dih_y _7324242) _7324243) y3) y4) y5) y6) = ((((((dih_y _7324242) y3) _7324243) y4) y6) y5)))))) ==> ((\y3. (!y4. (!y5. (!y6. (((((((dih_y _7324242) _7324243) y3) y4) y5) y6) = ((((((dih_y _7324242) y3) _7324243) y4) y6) y5)))))) _7324244)) = ((\y3. (!y4. (!y5. (!y6. (((((((dih_y _7324242) _7324243) y3) y4) y5) y6) = ((((((dih_y _7324242) y3) _7324243) y4) y6) y5)))))) _7324244))
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 c= c==> ! ! ! ! c= cdih_y f0 f1 b0 b1 b2 b3 cdih_y f0 b0 f1 b1 b3 b2 * / ! ! ! c= cdih_y f0 f1 b0 b1 b2 b3 cdih_y f0 b0 f1 b1 b3 b2 f2 * / ! ! ! c= cdih_y f0 f1 b0 b1 b2 b3 cdih_y f0 b0 f1 b1 b3 b2 f2
+ |- (!u3. (!y4. (!y5. (!y6. (((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS u3) NIL))))) /\ (((distance (u1 , (f i))) = y4) /\ (((distance (u0 , (f i))) = y5) /\ ((distance (u0 , u1)) = y6))))))))) ==> (((measure ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((vol_y sqrt2) sqrt2) sqrt2) y4) y5) y6)) /\ ((((sol u0) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y y5) y6) sqrt2) sqrt2) sqrt2) y4)) /\ ((((sol u1) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y y6) y4) sqrt2) sqrt2) sqrt2) y5)) /\ ((((sol (f i)) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y y4) y5) sqrt2) sqrt2) sqrt2) y6)) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y y6) y4) sqrt2) sqrt2) sqrt2) y5)) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , (f i))) = ((((((dih_y y5) y6) sqrt2) sqrt2) sqrt2) y4)) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u1 , (f i))) = ((((((dih_y y4) y5) sqrt2) sqrt2) sqrt2) y6)) /\ ((((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun) = (((((gamma3f y4) y5) y6) sqrt2) lmfun))))))))))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS f1 cCONS f2 cCONS * f3 f4 cCONS f5 cNIL c/\ c= cdistance c, f2 * f3 f4 f6 c/\ c= cdistance c, f1 * f3 f4 f7 c= cdistance c, f1 f2 f8 c/\ c= cmeasure * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cvol_y csqrt2 csqrt2 csqrt2 f6 f7 f8 c/\ c= csol f1 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y f7 f8 csqrt2 csqrt2 csqrt2 f6 c/\ c= csol f2 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y f8 f6 csqrt2 csqrt2 csqrt2 f7 c/\ c= csol * f3 f4 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y f6 f7 csqrt2 csqrt2 csqrt2 f8 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y f8 f6 csqrt2 csqrt2 csqrt2 f7 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 * f3 f4 cdih_y f7 f8 csqrt2 csqrt2 csqrt2 f6 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f2 * f3 f4 cdih_y f6 f7 csqrt2 csqrt2 csqrt2 f8 c= cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun cgamma3f f6 f7 f8 csqrt2 part clmfun
+ (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), (((real_le (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u1 , (f i))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f (SUC i))))) (distance (u1 , (f (SUC i)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) /\ (((((((azim_mcell V) f) u0) u1) i) = ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (?y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i))))))))))))))))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))
T c==> cpacking f0 c==> csaturated f0 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ creal_le cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f2 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f2 * f3 f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 cSUC f4 cdistance c, f2 * f3 cSUC f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c/\ c= cazim_mcell f0 f3 f1 f2 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c? / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c/\ creal_le cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c==> c/\ creal_lt cazim f1 f2 * f3 f4 * f3 cSUC f4 cpi creal_le cdistance c, * f3 f4 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f3 f4 * f3 cSUC f4 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4
- (((measure ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((vol_y sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1)))) /\ ((((sol u0) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ ((((sol u1) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ ((((sol (f i)) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , (f i))) = ((((((dih_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u1 , (f i))) = ((((((dih_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ ((((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun) = (((((gamma3f (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) lmfun))))))))) |- (((sol (f i)) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1))))
T c==> c/\ c= cmeasure * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cvol_y csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 c/\ c= csol f1 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= csol f2 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= csol * f3 f4 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 * f3 f4 cdih_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f2 * f3 f4 cdih_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c= cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun cgamma3f cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 part clmfun c= csol * f3 f4 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) |- ((\y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y _7324242) y2) y3) y4) y5) y6) = ((((((dih_y _7324242) y3) y2) y4) y6) y5))))))) _7324243)
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 * / ! ! ! ! c= cdih_y f0 b0 b1 b2 b3 b4 cdih_y f0 b1 b0 b2 b4 b3 f1
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
- (_7324250 = _7324252), (_7324251 = _7324253) |- ((_7324251 = _7324253) /\ ((_7324250 , _7324251) = (_7324252 , _7324253)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= c, f0 f2 c, f1 f3
- ((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F))), (((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F))) ==> ((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F)))) |- (((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F))) /\ ((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F))))
T c==> c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 cF c==> c==> c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 cF c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 cF c/\ c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 cF c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 cF
- (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) |- (~ (((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))
T c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c~ c= * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) |- (((!y4. (!y5. (!y6. (((((((dih_y _7324242) _7324243) _7324244) y4) y5) y6) = ((((((dih_y _7324242) _7324244) _7324243) y4) y6) y5))))) ==> ((\y4. (!y5. (!y6. (((((((dih_y _7324242) _7324243) _7324244) y4) y5) y6) = ((((((dih_y _7324242) _7324244) _7324243) y4) y6) y5))))) _7324245)) = ((\y4. (!y5. (!y6. (((((((dih_y _7324242) _7324243) _7324244) y4) y5) y6) = ((((((dih_y _7324242) _7324244) _7324243) y4) y6) y5))))) _7324245))
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 c= c==> ! ! ! c= cdih_y f0 f1 f2 b0 b1 b2 cdih_y f0 f2 f1 b0 b2 b1 * / ! ! c= cdih_y f0 f1 f2 b0 b1 b2 cdih_y f0 f2 f1 b0 b2 b1 f3 * / ! ! c= cdih_y f0 f1 f2 b0 b1 b2 cdih_y f0 f2 f1 b0 b2 b1 f3
+ pack_nonlinear_non_ox3q1h, ((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (~ (((((cc_4 V) u0) u1) f) i))))))))) |- ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))
T c==> cpack_nonlinear_non_ox3q1h c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ccritical_edge_y cdistance c, f1 f2 c/\ cHAS_SIZE * * part cs_leaf f0 cCONS f1 cCONS f2 cNIL f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c~ ccc_4 f0 f1 f2 f5 f6 c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f1 * f5 f6 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f5 f6
+ (!V. (!ul. (!P. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul)))))) |- ((!V. (!ul. (!P. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul)))))) /\ (!P. (!V. (!ul. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul)))))))
T c==> ! ! ! c==> c/\ c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 * b2 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 cNIL * b2 ccc_uh b0 b1 c/\ ! ! ! c==> c/\ c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 * b2 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 cNIL * b2 ccc_uh b0 b1 ! ! ! c==> c/\ c/\ csaturated b1 c/\ cpacking b1 cleaf b1 b2 * b0 cCONS cEL cNUMERAL c_0 b2 cCONS cEL cNUMERAL cBIT1 c_0 b2 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b2 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b1 b2 cNIL * b0 ccc_uh b1 b2
+ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = T)
T c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cT
+ |- (((pack_nonlinear_non_ox3q1h /\ ((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (~ (((((cc_4 V) u0) u1) f) i)))))))))) ==> ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) = T)
T c= c==> c/\ cpack_nonlinear_non_ox3q1h c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ccritical_edge_y cdistance c, f1 f2 c/\ cHAS_SIZE * * part cs_leaf f0 cCONS f1 cCONS f2 cNIL f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c~ ccc_4 f0 f1 f2 f5 f6 c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f1 * f5 f6 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f5 f6 cT
+ |- ((!ul. (!P. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul))))) = T)
T c= ! ! c==> c/\ c/\ csaturated f0 c/\ cpacking f0 cleaf f0 b0 * b1 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b0 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 cNIL * b1 ccc_uh f0 b0 cT
+ |- ((((measure ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((vol_y sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1)))) /\ ((((sol u0) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ ((((sol u1) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ ((((sol (f i)) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , (f i))) = ((((((dih_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u1 , (f i))) = ((((((dih_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ ((((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun) = (((((gamma3f (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) lmfun))))))))) ==> ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))))
T c==> c/\ c= cmeasure * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cvol_y csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 c/\ c= csol f1 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= csol f2 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= csol * f3 f4 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 * f3 f4 cdih_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f2 * f3 f4 cdih_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c= cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun cgamma3f cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 part clmfun c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- (((!V. (!ul. (!P. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul)))))) ==> (!P. (!V. (!ul. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul))))))) = (!P. (!V. (!ul. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul)))))))
T c= c==> ! ! ! c==> c/\ c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 * b2 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 cNIL * b2 ccc_uh b0 b1 ! ! ! c==> c/\ c/\ csaturated b1 c/\ cpacking b1 cleaf b1 b2 * b0 cCONS cEL cNUMERAL c_0 b2 cCONS cEL cNUMERAL cBIT1 c_0 b2 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b2 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b1 b2 cNIL * b0 ccc_uh b1 b2 ! ! ! c==> c/\ c/\ csaturated b1 c/\ cpacking b1 cleaf b1 b2 * b0 cCONS cEL cNUMERAL c_0 b2 cCONS cEL cNUMERAL cBIT1 c_0 b2 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b2 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b1 b2 cNIL * b0 ccc_uh b1 b2
+ (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) |- (!y5. (!y6. (((((((dih_y _7324242) _7324243) _7324244) _7324245) y5) y6) = ((((((dih_y _7324242) _7324244) _7324243) _7324245) y6) y5))))
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 ! ! c= cdih_y f0 f1 f2 f3 b0 b1 cdih_y f0 f2 f1 f3 b1 b0
+ pack_nonlinear_non_ox3q1h, (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (((((cc_4 V) u0) u1) f) i)), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), ((NUMERAL (BIT1 _0)) < n), (((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (T = (pack_nonlinear_non_ox3q1h /\ ((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (~ (((((cc_4 V) u0) u1) f) i)))))))))))
T c==> cpack_nonlinear_non_ox3q1h c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccc_4 f3 f0 f1 f4 f5 c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cHAS_SIZE * * part cs_leaf f3 cCONS f0 cCONS f1 cNIL f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c= cT c/\ cpack_nonlinear_non_ox3q1h c/\ cpacking f3 c/\ csaturated f3 c/\ cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ccritical_edge_y cdistance c, f0 f1 c/\ cHAS_SIZE * * part cs_leaf f3 cCONS f0 cCONS f1 cNIL f6 c/\ c< cNUMERAL cBIT1 c_0 f6 c~ ccc_4 f3 f0 f1 f4 f5
+ |- ((\y5. (!y6. (((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) NIL))))) /\ (((distance (u1 , (f i))) = (distance (u1 , (f i)))) /\ (((distance (u0 , (f i))) = y5) /\ ((distance (u0 , u1)) = y6))))))))) ==> (((measure ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((vol_y sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))) y5) y6)) /\ ((((sol u0) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y y5) y6) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ ((((sol u1) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y y6) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) y5)) /\ ((((sol (f i)) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u1 , (f i)))) y5) sqrt2) sqrt2) sqrt2) y6)) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y y6) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) y5)) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , (f i))) = ((((((dih_y y5) y6) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u1 , (f i))) = ((((((dih_y (distance (u1 , (f i)))) y5) sqrt2) sqrt2) sqrt2) y6)) /\ ((((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun) = (((((gamma3f (distance (u1 , (f i)))) y5) y6) sqrt2) lmfun)))))))))))) (distance (u0 , (f i))))
T * / ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS f1 cCONS f2 cCONS * f3 f4 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL c/\ c= cdistance c, f2 * f3 f4 cdistance c, f2 * f3 f4 c/\ c= cdistance c, f1 * f3 f4 b0 c= cdistance c, f1 f2 b1 c/\ c= cmeasure * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cvol_y csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 b0 b1 c/\ c= csol f1 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y b0 b1 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= csol f2 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y b1 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 b0 c/\ c= csol * f3 f4 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f2 * f3 f4 b0 csqrt2 csqrt2 csqrt2 b1 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y b1 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 b0 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 * f3 f4 cdih_y b0 b1 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f2 * f3 f4 cdih_y cdistance c, f2 * f3 f4 b0 csqrt2 csqrt2 csqrt2 b1 c= cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun cgamma3f cdistance c, f2 * f3 f4 b0 b1 csqrt2 part clmfun cdistance c, f1 * f3 f4
+ (((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) |- ((((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) = T)
T c==> cHAS_SIZE * * part cs_leaf f0 cCONS f1 cCONS f2 cNIL f3 c= cHAS_SIZE * * part cs_leaf f0 cCONS f1 cCONS f2 cNIL f3 cT
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- |- (((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F))) ==> ((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F))))
T c==> c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 cF c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 cF
+ |- ((!u0. ((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> (~ (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))))))) = T)
T c= ! c==> c~ c= cdih_y cdistance c, b0 f0 cdistance c, f0 * f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, b0 * f1 f2 cdih_y cdistance c, b0 f0 cdistance c, b0 * f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f1 f2 c==> ! ! ! ! ! ! c= cdih_y b1 b2 b3 b4 b5 b6 cdih_y b1 b5 b6 b4 b2 b3 c~ ! ! ! ! ! ! c= cdih_y b1 b2 b3 b4 b5 b6 cdih_y b1 b3 b2 b4 b6 b5 cT
+ pack_nonlinear_non_ox3q1h, (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (~ (((((cc_4 V) u0) u1) f) i)))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))
T c==> cpack_nonlinear_non_ox3q1h c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ccritical_edge_y cdistance c, f0 f1 c/\ cHAS_SIZE * * part cs_leaf f3 cCONS f0 cCONS f1 cNIL f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c~ ccc_4 f3 f0 f1 f5 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c= cdihX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c, f0 f1 cdih_y cdistance c, f0 f1 cdistance c, f0 * f5 f6 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f5 f6
- (b = c) |- ((P c) = (P c))
T c==> c= f0 f1 c= * f2 f1 * f2 f1
- (((measure ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((vol_y sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1)))) /\ ((((sol u0) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ ((((sol u1) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ ((((sol (f i)) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , (f i))) = ((((((dih_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u1 , (f i))) = ((((((dih_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ ((((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun) = (((((gamma3f (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) lmfun))))))))) |- ((((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun) = (((((gamma3f (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) lmfun))
T c==> c/\ c= cmeasure * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cvol_y csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 c/\ c= csol f1 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= csol f2 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= csol * f3 f4 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 * f3 f4 cdih_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f2 * f3 f4 cdih_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c= cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun cgamma3f cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 part clmfun c= cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun cgamma3f cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 part clmfun
+ (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))), (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) |- (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3
+ |- ((\u0'. (!u1'. (!u2. (!u3. (!y4. (!y5. (!y6. (((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((CONS u0') ((CONS u1') ((CONS u2) ((CONS u3) NIL))))) /\ (((distance (u1' , u2)) = y4) /\ (((distance (u0' , u2)) = y5) /\ ((distance (u0' , u1')) = y6))))))))) ==> (((measure ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((vol_y sqrt2) sqrt2) sqrt2) y4) y5) y6)) /\ ((((sol u0') ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y y5) y6) sqrt2) sqrt2) sqrt2) y4)) /\ ((((sol u1') ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y y6) y4) sqrt2) sqrt2) sqrt2) y5)) /\ ((((sol u2) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y y4) y5) sqrt2) sqrt2) sqrt2) y6)) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0' , u1')) = ((((((dih_y y6) y4) sqrt2) sqrt2) sqrt2) y5)) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0' , u2)) = ((((((dih_y y5) y6) sqrt2) sqrt2) sqrt2) y4)) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u1' , u2)) = ((((((dih_y y4) y5) sqrt2) sqrt2) sqrt2) y6)) /\ ((((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun) = (((((gamma3f y4) y5) y6) sqrt2) lmfun))))))))))))))))) u0)
T * / ! ! ! ! ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS b0 cCONS b1 cCONS b2 cCONS b3 cNIL c/\ c= cdistance c, b1 b2 b4 c/\ c= cdistance c, b0 b2 b5 c= cdistance c, b0 b1 b6 c/\ c= cmeasure * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cvol_y csqrt2 csqrt2 csqrt2 b4 b5 b6 c/\ c= csol b0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y b5 b6 csqrt2 csqrt2 csqrt2 b4 c/\ c= csol b1 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y b6 b4 csqrt2 csqrt2 csqrt2 b5 c/\ c= csol b2 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y b4 b5 csqrt2 csqrt2 csqrt2 b6 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, b0 b1 cdih_y b6 b4 csqrt2 csqrt2 csqrt2 b5 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, b0 b2 cdih_y b5 b6 csqrt2 csqrt2 csqrt2 b4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, b1 b2 cdih_y b4 b5 csqrt2 csqrt2 csqrt2 b6 c= cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun cgamma3f b4 b5 b6 csqrt2 part clmfun f1
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- ((!u1. (!w0. (!n. (!f. (!i. ((pack_nonlinear_non_ox3q1h /\ ((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (~ (((((cc_4 V) u0) u1) f) i)))))))))) ==> ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))))))))) = T)
T c= ! ! ! ! ! c==> c/\ cpack_nonlinear_non_ox3q1h c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS b0 cNIL b1 b2 b3 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ ccritical_edge_y cdistance c, f1 b0 c/\ cHAS_SIZE * * part cs_leaf f0 cCONS f1 cCONS b0 cNIL b2 c/\ c< cNUMERAL cBIT1 c_0 b2 c~ ccc_4 f0 f1 b0 b3 b4 c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS b0 cCONS * b3 b4 cNIL c, f1 b0 cdih_y cdistance c, f1 b0 cdistance c, f1 * b3 b4 csqrt2 csqrt2 csqrt2 cdistance c, b0 * b3 b4 cT
+ ((\y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i)))))))))))) y4) |- (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i)))))))))))
T c==> * / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 b0 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 c/\ creal_le cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 b0 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 cazim f0 f1 * f2 f3 * f2 cSUC f3 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 b0 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 c==> c/\ creal_lt cazim f0 f1 * f2 f3 * f2 cSUC f3 cpi creal_le cdistance c, * f2 f3 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f2 f3 * f2 cSUC f3 f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f4 c/\ creal_le f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 f4 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 c/\ creal_le cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 f4 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 cazim f0 f1 * f2 f3 * f2 cSUC f3 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 f4 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 c==> c/\ creal_lt cazim f0 f1 * f2 f3 * f2 cSUC f3 cpi creal_le cdistance c, * f2 f3 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= f4 cdistance c, * f2 f3 * f2 cSUC f3
+ |- ((\V. (!ul. (((cc_cell V) ul) = (((mcell ((cc_ke V) ul)) V) ((cc_uh V) ul))))) V)
T * / ! c= * * part ccc_cell b0 b1 * * * part cmcell ccc_ke b0 b1 b0 ccc_uh b0 b1 f0
+ (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u1 , (f i))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f (SUC i))))) (distance (u1 , (f (SUC i)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) /\ (((((((azim_mcell V) f) u0) u1) i) = ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (?y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i))))))))))))))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))
T c==> cpacking f0 c==> csaturated f0 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f2 * f3 f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 cSUC f4 cdistance c, f2 * f3 cSUC f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c/\ c= cazim_mcell f0 f3 f1 f2 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c? / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c/\ creal_le cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c==> c/\ creal_lt cazim f1 f2 * f3 f4 * f3 cSUC f4 cpi creal_le cdistance c, * f3 f4 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f3 f4 * f3 cSUC f4 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4
+ (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f (SUC i))))) (distance (u1 , (f (SUC i)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) /\ (((((((azim_mcell V) f) u0) u1) i) = ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (?y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i)))))))))))))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))
T c==> cpacking f0 c==> csaturated f0 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 cSUC f4 cdistance c, f2 * f3 cSUC f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c/\ c= cazim_mcell f0 f3 f1 f2 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c? / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c/\ creal_le cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c==> c/\ creal_lt cazim f1 f2 * f3 f4 * f3 cSUC f4 cpi creal_le cdistance c, * f3 f4 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f3 f4 * f3 cSUC f4 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4
- ((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f (SUC i))))) (distance (u1 , (f (SUC i)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) |- (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f (SUC i))))) (distance (u1 , (f (SUC i)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = T)
T c==> creal_lt ceta_y cdistance c, f0 f1 cdistance c, f0 * f2 cSUC f3 cdistance c, f1 * f2 cSUC f3 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_lt ceta_y cdistance c, f0 f1 cdistance c, f0 * f2 cSUC f3 cdistance c, f1 * f2 cSUC f3 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))
T c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cpacking f0 c==> csaturated f0 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4
+ (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u0 , u1))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u0 , (f i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u0 , (f (SUC i))))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u1 , (f i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u1 , (f (SUC i))))) /\ (((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u1 , (f i))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f (SUC i))))) (distance (u1 , (f (SUC i)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) /\ (((((((azim_mcell V) f) u0) u1) i) = ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (?y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i))))))))))))))))))))))))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))
T c==> cpacking f0 c==> csaturated f0 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 * f3 f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 * f3 f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 * f3 cSUC f4 c/\ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f2 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f2 * f3 f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 cSUC f4 cdistance c, f2 * f3 cSUC f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c/\ c= cazim_mcell f0 f3 f1 f2 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c? / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c/\ creal_le cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c==> c/\ creal_lt cazim f1 f2 * f3 f4 * f3 cSUC f4 cpi creal_le cdistance c, * f3 f4 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f3 f4 * f3 cSUC f4 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4
+ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = T)
T c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cT
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
+ (!V. (!ul. (!P. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul)))))) |- (!P. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul))))
T c==> ! ! ! c==> c/\ c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 * b2 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 cNIL * b2 ccc_uh b0 b1 ! c==> c/\ c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 * b0 cCONS cEL cNUMERAL c_0 f1 cCONS cEL cNUMERAL cBIT1 c_0 f1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cNIL * b0 ccc_uh f0 f1
- |- (((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))) = (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c= c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- ((real_le (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) |- (((real_le (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = T)
T c==> creal_le cdistance c, f0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_le cdistance c, f0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
+ (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))), (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) |- ((((((((dih_y (distance (u0 , u1))) sqrt2) (distance (u1 , (f i)))) sqrt2) (distance (u0 , (f i)))) sqrt2) = ((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ (((((((dih_y (distance (u0 , u1))) sqrt2) (distance (u1 , (f i)))) sqrt2) (distance (u0 , (f i)))) sqrt2) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))))
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 c/\ c= cdih_y cdistance c, f0 f1 csqrt2 cdistance c, f1 * f2 f3 csqrt2 cdistance c, f0 * f2 f3 csqrt2 cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 c= cdih_y cdistance c, f0 f1 csqrt2 cdistance c, f1 * f2 f3 csqrt2 cdistance c, f0 * f2 f3 csqrt2 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3
- |- ((_7324254 = _7324255) ==> ((distance _7324254) = (distance _7324255)))
T c==> c= f0 f1 c= cdistance f0 cdistance f1
+ pack_nonlinear_non_ox3q1h, (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), ((((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (~ (((((cc_4 V) u0) u1) f) i)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))
T c==> cpack_nonlinear_non_ox3q1h c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> c/\ cHAS_SIZE * * part cs_leaf f3 cCONS f0 cCONS f1 cNIL f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c~ ccc_4 f3 f0 f1 f5 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c= cdihX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c, f0 f1 cdih_y cdistance c, f0 f1 cdistance c, f0 * f5 f6 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f5 f6
+ pack_nonlinear_non_ox3q1h, (packing V), ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (~ (((((cc_4 V) u0) u1) f) i)))))))) |- ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))
T c==> cpack_nonlinear_non_ox3q1h c==> cpacking f0 c==> c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ccritical_edge_y cdistance c, f1 f2 c/\ cHAS_SIZE * * part cs_leaf f0 cCONS f1 cCONS f2 cNIL f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c~ ccc_4 f0 f1 f2 f5 f6 c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f1 * f5 f6 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f5 f6
+ (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) |- ((\y5. (!y6. (((((((dih_y _7324236) _7324237) _7324238) _7324239) y5) y6) = ((((((dih_y _7324236) y5) y6) _7324239) _7324237) _7324238)))) _7324240)
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 * / ! c= cdih_y f0 f1 f2 f3 b0 b1 cdih_y f0 b0 b1 f3 f1 f2 f4
+ |- ((\V. (!X. (!ul. (!u0. (!u1. (!u2. (!u3. (!y4. (!y5. (!y6. (((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((X = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ul)) /\ ((~ (negligible X)) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ (((distance (u1 , u2)) = y4) /\ (((distance (u0 , u2)) = y5) /\ ((distance (u0 , u1)) = y6))))))))) ==> (((measure X) = ((((((vol_y sqrt2) sqrt2) sqrt2) y4) y5) y6)) /\ ((((sol u0) X) = ((((((sol_y y5) y6) sqrt2) sqrt2) sqrt2) y4)) /\ ((((sol u1) X) = ((((((sol_y y6) y4) sqrt2) sqrt2) sqrt2) y5)) /\ ((((sol u2) X) = ((((((sol_y y4) y5) sqrt2) sqrt2) sqrt2) y6)) /\ (((((dihX V) X) (u0 , u1)) = ((((((dih_y y6) y4) sqrt2) sqrt2) sqrt2) y5)) /\ (((((dihX V) X) (u0 , u2)) = ((((((dih_y y5) y6) sqrt2) sqrt2) sqrt2) y4)) /\ (((((dihX V) X) (u1 , u2)) = ((((((dih_y y4) y5) sqrt2) sqrt2) sqrt2) y6)) /\ ((((gammaX V) X) lmfun) = (((((gamma3f y4) y5) y6) sqrt2) lmfun)))))))))))))))))))) V)
T * / ! ! ! ! ! ! ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b2 c/\ c= b1 * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 b0 b2 c/\ c~ cnegligible b1 c/\ c= b2 cCONS b3 cCONS b4 cCONS b5 cCONS b6 cNIL c/\ c= cdistance c, b4 b5 b7 c/\ c= cdistance c, b3 b5 b8 c= cdistance c, b3 b4 b9 c/\ c= cmeasure b1 cvol_y csqrt2 csqrt2 csqrt2 b7 b8 b9 c/\ c= csol b3 b1 csol_y b8 b9 csqrt2 csqrt2 csqrt2 b7 c/\ c= csol b4 b1 csol_y b9 b7 csqrt2 csqrt2 csqrt2 b8 c/\ c= csol b5 b1 csol_y b7 b8 csqrt2 csqrt2 csqrt2 b9 c/\ c= cdihX b0 b1 c, b3 b4 cdih_y b9 b7 csqrt2 csqrt2 csqrt2 b8 c/\ c= cdihX b0 b1 c, b3 b5 cdih_y b8 b9 csqrt2 csqrt2 csqrt2 b7 c/\ c= cdihX b0 b1 c, b4 b5 cdih_y b7 b8 csqrt2 csqrt2 csqrt2 b9 c= cgammaX b0 b1 part clmfun cgamma3f b7 b8 b9 csqrt2 part clmfun f0
+ (((measure ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((vol_y sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1)))) /\ ((((sol u0) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ ((((sol u1) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ ((((sol (f i)) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , (f i))) = ((((((dih_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u1 , (f i))) = ((((((dih_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ ((((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun) = (((((gamma3f (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) lmfun))))))))) |- ((((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) = ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))))
T c==> c/\ c= cmeasure * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cvol_y csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 c/\ c= csol f1 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= csol f2 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= csol * f3 f4 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 * f3 f4 cdih_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f2 * f3 f4 cdih_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c= cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun cgamma3f cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 part clmfun c= c= cdih_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4
+ |- ((!u0. (!u1. (!w0. (!n. (!f. (!i. ((pack_nonlinear_non_ox3q1h /\ ((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (~ (((((cc_4 V) u0) u1) f) i)))))))))) ==> ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))))))))) = T)
T c= ! ! ! ! ! ! c==> c/\ cpack_nonlinear_non_ox3q1h c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS b0 cCONS b1 cNIL b2 b3 b4 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ccritical_edge_y cdistance c, b0 b1 c/\ cHAS_SIZE * * part cs_leaf f0 cCONS b0 cCONS b1 cNIL b3 c/\ c< cNUMERAL cBIT1 c_0 b3 c~ ccc_4 f0 b0 b1 b4 b5 c= cdihX f0 * * part ccc_cell f0 cCONS b0 cCONS b1 cCONS * b4 b5 cNIL c, b0 b1 cdih_y cdistance c, b0 b1 cdistance c, b0 * b4 b5 csqrt2 csqrt2 csqrt2 cdistance c, b1 * b4 b5 cT
+ (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) |- ((\y6. (((((((dih_y _7324242) _7324243) _7324244) _7324245) _7324246) y6) = ((((((dih_y _7324242) _7324244) _7324243) _7324245) y6) _7324246))) _7324247)
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 * / c= cdih_y f0 f1 f2 f3 f4 b0 cdih_y f0 f2 f1 f3 b0 f4 f5
- ((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) |- (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = T)
T c==> creal_le f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_le f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
- (_7324256 = _7324262), (_7324257 = _7324263), (_7324258 = _7324264) |- ((_7324259 = _7324265) ==> ((~ (_7324260 = _7324266)) \/ ((~ (_7324261 = _7324267)) \/ (((((((dih_y _7324256) _7324257) _7324258) _7324259) _7324260) _7324261) = ((((((dih_y _7324262) _7324263) _7324264) _7324265) _7324266) _7324267)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ c~ c= f8 f9 c\/ c~ c= f10 f11 c= cdih_y f0 f2 f4 f6 f8 f10 cdih_y f1 f3 f5 f7 f9 f11
- |- ((~ (_7324250 = _7324252)) \/ ((~ (_7324251 = _7324253)) \/ ((_7324250 , _7324251) = (_7324252 , _7324253))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- (((\y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i)))))))))))) y4) ==> ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))))
T c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cpacking f0 c==> csaturated f0 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> * / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c/\ creal_le cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c==> c/\ creal_lt cazim f1 f2 * f3 f4 * f3 cSUC f4 cpi creal_le cdistance c, * f3 f4 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f3 f4 * f3 cSUC f4 f5 c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4
+ |- ((\y6. (((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) NIL))))) /\ (((distance (u1 , (f i))) = (distance (u1 , (f i)))) /\ (((distance (u0 , (f i))) = (distance (u0 , (f i)))) /\ ((distance (u0 , u1)) = y6))))))))) ==> (((measure ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((vol_y sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))) (distance (u0 , (f i)))) y6)) /\ ((((sol u0) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , (f i)))) y6) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ ((((sol u1) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y y6) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ ((((sol (f i)) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) y6)) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y y6) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , (f i))) = ((((((dih_y (distance (u0 , (f i)))) y6) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u1 , (f i))) = ((((((dih_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) y6)) /\ ((((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun) = (((((gamma3f (distance (u1 , (f i)))) (distance (u0 , (f i)))) y6) sqrt2) lmfun))))))))))) (distance (u0 , u1)))
T * / c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS f1 cCONS f2 cCONS * f3 f4 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL c/\ c= cdistance c, f2 * f3 f4 cdistance c, f2 * f3 f4 c/\ c= cdistance c, f1 * f3 f4 cdistance c, f1 * f3 f4 c= cdistance c, f1 f2 b0 c/\ c= cmeasure * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cvol_y csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 b0 c/\ c= csol f1 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 * f3 f4 b0 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= csol f2 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y b0 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= csol * f3 f4 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 b0 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y b0 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 * f3 f4 cdih_y cdistance c, f1 * f3 f4 b0 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f2 * f3 f4 cdih_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 b0 c= cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun cgamma3f cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 b0 csqrt2 part clmfun cdistance c, f1 f2
+ (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) |- (((!y6. (((((((dih_y _7324242) _7324243) _7324244) _7324245) _7324246) y6) = ((((((dih_y _7324242) _7324244) _7324243) _7324245) y6) _7324246))) ==> ((\y6. (((((((dih_y _7324242) _7324243) _7324244) _7324245) _7324246) y6) = ((((((dih_y _7324242) _7324244) _7324243) _7324245) y6) _7324246))) _7324247)) = ((\y6. (((((((dih_y _7324242) _7324243) _7324244) _7324245) _7324246) y6) = ((((((dih_y _7324242) _7324244) _7324243) _7324245) y6) _7324246))) _7324247))
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 c= c==> ! c= cdih_y f0 f1 f2 f3 f4 b0 cdih_y f0 f2 f1 f3 b0 f4 * / c= cdih_y f0 f1 f2 f3 f4 b0 cdih_y f0 f2 f1 f3 b0 f4 f5 * / c= cdih_y f0 f1 f2 f3 f4 b0 cdih_y f0 f2 f1 f3 b0 f4 f5
- |- (T = (((~ (x = y)) \/ ((~ (x = z)) \/ (y = z))) = ((y = z) \/ ((~ (x = y)) \/ (~ (x = z))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ c~ c= f0 f2 c= f1 f2 c\/ c= f1 f2 c\/ c~ c= f0 f1 c~ c= f0 f2
+ |- (!b. (!c. ((b = c) ==> (!P. ((P c) ==> (P b))))))
T c==> c= f0 f1 ! c==> * b0 f1 * b0 f0
- (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) |- ((!V. (!ul. (!P. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul)))))) ==> (P ((cc_uh V) ul)))
T c==> c/\ c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 * f2 cCONS cEL cNUMERAL c_0 f1 cCONS cEL cNUMERAL cBIT1 c_0 f1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cNIL c==> ! ! ! c==> c/\ c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 * b2 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 cNIL * b2 ccc_uh b0 b1 * f2 ccc_uh f0 f1
+ (~ (P b)), (P c), (b = c) |- ((~ (P b)) /\ F)
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c/\ c~ * f0 f1 cF
+ (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) |- (((((((dih_y _7324242) _7324243) _7324244) _7324245) _7324246) _7324247) = ((((((dih_y _7324242) _7324244) _7324243) _7324245) _7324247) _7324246))
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 c= cdih_y f0 f1 f2 f3 f4 f5 cdih_y f0 f2 f1 f3 f5 f4
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) |- (((!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y _7324242) y2) y3) y4) y5) y6) = ((((((dih_y _7324242) y3) y2) y4) y6) y5))))))) ==> ((\y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y _7324242) y2) y3) y4) y5) y6) = ((((((dih_y _7324242) y3) y2) y4) y6) y5))))))) _7324243)) = ((\y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y _7324242) y2) y3) y4) y5) y6) = ((((((dih_y _7324242) y3) y2) y4) y6) y5))))))) _7324243))
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 c= c==> ! ! ! ! ! c= cdih_y f0 b0 b1 b2 b3 b4 cdih_y f0 b1 b0 b2 b4 b3 * / ! ! ! ! c= cdih_y f0 b0 b1 b2 b3 b4 cdih_y f0 b1 b0 b2 b4 b3 f1 * / ! ! ! ! c= cdih_y f0 b0 b1 b2 b3 b4 cdih_y f0 b1 b0 b2 b4 b3 f1
+ pack_nonlinear_non_ox3q1h, (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), ((critical_edge_y (distance (u0 , u1))) /\ ((((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (~ (((((cc_4 V) u0) u1) f) i))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))
T c==> cpack_nonlinear_non_ox3q1h c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> c/\ ccritical_edge_y cdistance c, f0 f1 c/\ cHAS_SIZE * * part cs_leaf f3 cCONS f0 cCONS f1 cNIL f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c~ ccc_4 f3 f0 f1 f5 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c= cdihX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c, f0 f1 cdih_y cdistance c, f0 f1 cdistance c, f0 * f5 f6 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f5 f6
+ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), (((((((azim_mcell V) f) u0) u1) i) = ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (?y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i))))))))))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))
T c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cpacking f0 c==> csaturated f0 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ c= cazim_mcell f0 f3 f1 f2 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c? / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c/\ creal_le cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c==> c/\ creal_lt cazim f1 f2 * f3 f4 * f3 cSUC f4 cpi creal_le cdistance c, * f3 f4 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f3 f4 * f3 cSUC f4 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4
+ |- ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))
T c==> c==> f0 c= f1 f2 ! c==> c/\ f0 * b0 f2 * b0 f1
+ |- (((!V. (!ul. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul))))) ==> ((\V. (!ul. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul))))) V)) = ((\V. (!ul. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul))))) V))
T c= c==> ! ! c==> c/\ c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 * f0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 cNIL * f0 ccc_uh b0 b1 * / ! c==> c/\ c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 * f0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 cNIL * f0 ccc_uh b0 b1 f1 * / ! c==> c/\ c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 * f0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 cNIL * f0 ccc_uh b0 b1 f1
+ |- (((!i. (!f. (!u1. (!u0. ((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F))))))) ==> ((\i. (!f. (!u1. (!u0. ((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F))))))) i)) = ((\i. (!f. (!u1. (!u0. ((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F))))))) i))
T c= c==> ! ! ! ! c==> c~ c= cdih_y cdistance c, b3 b2 cdistance c, b2 * b1 b0 csqrt2 csqrt2 csqrt2 cdistance c, b3 * b1 b0 cdih_y cdistance c, b3 b2 cdistance c, b3 * b1 b0 csqrt2 csqrt2 csqrt2 cdistance c, b2 * b1 b0 c==> ! ! ! ! ! ! c= cdih_y b4 b5 b6 b7 b8 b9 cdih_y b4 b8 b9 b7 b5 b6 c==> ! ! ! ! ! ! c= cdih_y b4 b5 b6 b7 b8 b9 cdih_y b4 b6 b5 b7 b9 b8 cF * / ! ! ! c==> c~ c= cdih_y cdistance c, b3 b2 cdistance c, b2 * b1 b0 csqrt2 csqrt2 csqrt2 cdistance c, b3 * b1 b0 cdih_y cdistance c, b3 b2 cdistance c, b3 * b1 b0 csqrt2 csqrt2 csqrt2 cdistance c, b2 * b1 b0 c==> ! ! ! ! ! ! c= cdih_y b4 b5 b6 b7 b8 b9 cdih_y b4 b8 b9 b7 b5 b6 c==> ! ! ! ! ! ! c= cdih_y b4 b5 b6 b7 b8 b9 cdih_y b4 b6 b5 b7 b9 b8 cF f0 * / ! ! ! c==> c~ c= cdih_y cdistance c, b3 b2 cdistance c, b2 * b1 b0 csqrt2 csqrt2 csqrt2 cdistance c, b3 * b1 b0 cdih_y cdistance c, b3 b2 cdistance c, b3 * b1 b0 csqrt2 csqrt2 csqrt2 cdistance c, b2 * b1 b0 c==> ! ! ! ! ! ! c= cdih_y b4 b5 b6 b7 b8 b9 cdih_y b4 b8 b9 b7 b5 b6 c==> ! ! ! ! ! ! c= cdih_y b4 b5 b6 b7 b8 b9 cdih_y b4 b6 b5 b7 b9 b8 cF f0
- (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))), (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))), (~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) |- ((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) /\ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))))
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c/\ c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3
+ (b = c) |- ((b = c) /\ (!P. ((P c) ==> (P b))))
T c==> c= f0 f1 c/\ c= f0 f1 ! c==> * b0 f1 * b0 f0
+ (((measure ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((vol_y sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1)))) /\ ((((sol u0) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ ((((sol u1) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ ((((sol (f i)) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , (f i))) = ((((((dih_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u1 , (f i))) = ((((((dih_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ ((((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun) = (((((gamma3f (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) lmfun))))))))) |- ((((sol u1) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ ((((sol (f i)) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , (f i))) = ((((((dih_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u1 , (f i))) = ((((((dih_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ ((((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun) = (((((gamma3f (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) lmfun)))))))
T c==> c/\ c= cmeasure * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cvol_y csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 c/\ c= csol f1 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= csol f2 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= csol * f3 f4 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 * f3 f4 cdih_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f2 * f3 f4 cdih_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c= cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun cgamma3f cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 part clmfun c/\ c= csol f2 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= csol * f3 f4 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 * f3 f4 cdih_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f2 * f3 f4 cdih_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c= cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun cgamma3f cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 part clmfun
+ (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))), (~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) |- ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) /\ (~ (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5))))))))))
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c/\ ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c~ ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4
+ |- (((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_uh V) ul) = ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (!P. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul))))) = (!P. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul)))))
T c= c==> c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 c= ccc_uh f0 f1 cCONS cEL cNUMERAL c_0 f1 cCONS cEL cNUMERAL cBIT1 c_0 f1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cNIL ! c==> c/\ c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 * b0 cCONS cEL cNUMERAL c_0 f1 cCONS cEL cNUMERAL cBIT1 c_0 f1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cNIL * b0 ccc_uh f0 f1 ! c==> c/\ c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 * b0 cCONS cEL cNUMERAL c_0 f1 cCONS cEL cNUMERAL cBIT1 c_0 f1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cNIL * b0 ccc_uh f0 f1
+ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- (((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) NIL)))))) = ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) NIL))))) /\ (((distance (u1 , (f i))) = (distance (u1 , (f i)))) /\ (((distance (u0 , (f i))) = (distance (u0 , (f i)))) /\ ((distance (u0 , u1)) = (distance (u0 , u1))))))))))))
T c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS f1 cCONS f2 cCONS * f3 f4 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS f1 cCONS f2 cCONS * f3 f4 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL c/\ c= cdistance c, f2 * f3 f4 cdistance c, f2 * f3 f4 c/\ c= cdistance c, f1 * f3 f4 cdistance c, f1 * f3 f4 c= cdistance c, f1 f2 cdistance c, f1 f2
+ pack_nonlinear_non_ox3q1h, (packing V), (saturated V), ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (~ (((((cc_4 V) u0) u1) f) i)))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))
T c==> cpack_nonlinear_non_ox3q1h c==> cpacking f0 c==> csaturated f0 c==> c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ccritical_edge_y cdistance c, f1 f2 c/\ cHAS_SIZE * * part cs_leaf f0 cCONS f1 cCONS f2 cNIL f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c~ ccc_4 f0 f1 f2 f5 f6 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f1 * f5 f6 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f5 f6
+ (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), (((real_le (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u1 , (f i))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f (SUC i))))) (distance (u1 , (f (SUC i)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) /\ (((((((azim_mcell V) f) u0) u1) i) = ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (?y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i)))))))))))))))))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))
T c==> cpacking f0 c==> csaturated f0 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ creal_le cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f2 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f2 * f3 f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 cSUC f4 cdistance c, f2 * f3 cSUC f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c/\ c= cazim_mcell f0 f3 f1 f2 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c? / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c/\ creal_le cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c==> c/\ creal_lt cazim f1 f2 * f3 f4 * f3 cSUC f4 cpi creal_le cdistance c, * f3 f4 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f3 f4 * f3 cSUC f4 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4
+ pack_nonlinear_non_ox3q1h, (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), ((((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (~ (((((cc_4 V) u0) u1) f) i)))), (((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))
T c==> cpack_nonlinear_non_ox3q1h c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> c/\ cHAS_SIZE * * part cs_leaf f3 cCONS f0 cCONS f1 cNIL f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c~ ccc_4 f3 f0 f1 f5 f6 c==> cHAS_SIZE * * part cs_leaf f3 cCONS f0 cCONS f1 cNIL f4 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c= cdihX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c, f0 f1 cdih_y cdistance c, f0 f1 cdistance c, f0 * f5 f6 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f5 f6
+ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), ((\y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i)))))))))))) y4) |- (((\y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i)))))))))))) y4) /\ ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))))
T c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cpacking f0 c==> csaturated f0 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> * / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c/\ creal_le cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c==> c/\ creal_lt cazim f1 f2 * f3 f4 * f3 cSUC f4 cpi creal_le cdistance c, * f3 f4 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f3 f4 * f3 cSUC f4 f5 c/\ * / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c/\ creal_le cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c==> c/\ creal_lt cazim f1 f2 * f3 f4 * f3 cSUC f4 cpi creal_le cdistance c, * f3 f4 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f3 f4 * f3 cSUC f4 f5 c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4
- (((measure ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((vol_y sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1)))) /\ ((((sol u0) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ ((((sol u1) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ ((((sol (f i)) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , (f i))) = ((((((dih_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u1 , (f i))) = ((((((dih_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ ((((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun) = (((((gamma3f (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) lmfun))))))))) |- (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u1 , (f i))) = ((((((dih_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ ((((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun) = (((((gamma3f (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) lmfun)))
T c==> c/\ c= cmeasure * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cvol_y csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 c/\ c= csol f1 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= csol f2 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= csol * f3 f4 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 * f3 f4 cdih_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f2 * f3 f4 cdih_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c= cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun cgamma3f cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 part clmfun c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f2 * f3 f4 cdih_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c= cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun cgamma3f cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 part clmfun
- (!V. (!ul. (!P. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul)))))), (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) |- ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) /\ (P ((cc_uh V) ul)))
T c==> ! ! ! c==> c/\ c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 * b2 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 cNIL * b2 ccc_uh b0 b1 c==> c/\ c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 * f2 cCONS cEL cNUMERAL c_0 f1 cCONS cEL cNUMERAL cBIT1 c_0 f1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cNIL c/\ c/\ c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 * f2 cCONS cEL cNUMERAL c_0 f1 cCONS cEL cNUMERAL cBIT1 c_0 f1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cNIL * f2 ccc_uh f0 f1
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- ((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) |- (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) = T)
T c==> creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 f4 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 c= creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 f4 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 cT
+ (P c), (b = c) |- ((~ (P b)) ==> F)
T c==> * f0 f1 c==> c= f2 f1 c==> c~ * f0 f2 cF
+ (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) |- (!y3. (!y4. (!y5. (!y6. (((((((dih_y _7324242) _7324243) y3) y4) y5) y6) = ((((((dih_y _7324242) y3) _7324243) y4) y6) y5))))))
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 ! ! ! ! c= cdih_y f0 f1 b0 b1 b2 b3 cdih_y f0 b0 f1 b1 b3 b2
+ (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), (((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) NIL)))) = ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- (T = ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) NIL)))))))
T c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c= cCONS f1 cCONS f2 cCONS * f3 f4 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cT c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS f1 cCONS f2 cCONS * f3 f4 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL
+ (~ (P b)), (b = c) |- (~ (P c))
T c==> c~ * f0 f1 c==> c= f1 f2 c~ * f0 f2
- (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))), (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) |- ((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))))
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3
+ |- (((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> (~ (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5))))))))))) = T)
T c= c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c~ ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 cT
+ |- (!y. (((\x. ((\v. (((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) v)) NIL)))) = v)) x)) y) = ((\v. (((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) v)) NIL)))) = v)) y)))
T c= * / * / c= cCONS f0 cCONS f1 cCONS * f2 f3 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 b1 cNIL b1 b0 f4 * / c= cCONS f0 cCONS f1 cCONS * f2 f3 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 b0 cNIL b0 f4
+ |- (((!ul. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul)))) ==> ((\ul. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul)))) ul)) = ((\ul. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul)))) ul))
T c= c==> ! c==> c/\ c/\ csaturated f0 c/\ cpacking f0 cleaf f0 b0 * f1 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b0 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 cNIL * f1 ccc_uh f0 b0 * / c==> c/\ c/\ csaturated f0 c/\ cpacking f0 cleaf f0 b0 * f1 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b0 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 cNIL * f1 ccc_uh f0 b0 f2 * / c==> c/\ c/\ csaturated f0 c/\ cpacking f0 cleaf f0 b0 * f1 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b0 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 cNIL * f1 ccc_uh f0 b0 f2
+ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), ((~ (negligible ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) /\ (((((((azim_mcell V) f) u0) u1) i) = ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (?y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i)))))))))))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))
T c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cpacking f0 c==> csaturated f0 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ c~ cnegligible * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c/\ c= cazim_mcell f0 f3 f1 f2 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c? / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c/\ creal_le cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c==> c/\ creal_lt cazim f1 f2 * f3 f4 * f3 cSUC f4 cpi creal_le cdistance c, * f3 f4 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f3 f4 * f3 cSUC f4 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4
+ |- ((!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))) = ((!b. (!c. ((T ==> (b = c)) ==> (!P. ((T /\ (P c)) ==> (P b)))))) /\ (!b. (!c. ((F ==> (b = c)) ==> (!P. ((F /\ (P c)) ==> (P b))))))))
T c= ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 c/\ ! ! c==> c==> cT c= b0 b1 ! c==> c/\ cT * b2 b1 * b2 b0 ! ! c==> c==> cF c= b0 b1 ! c==> c/\ cF * b2 b1 * b2 b0
+ |- (((!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_uh V) ul) = ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL))))))) ==> ((\ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_uh V) ul) = ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL))))))) ul)) = ((\ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_uh V) ul) = ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL))))))) ul))
T c= c==> ! c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 b0 c= ccc_uh f0 b0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b0 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 cNIL * / c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 b0 c= ccc_uh f0 b0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b0 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 cNIL f1 * / c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 b0 c= ccc_uh f0 b0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b0 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 b0 cNIL f1
+ (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) |- ((\y3. (!y4. (!y5. (!y6. (((((((dih_y _7324236) _7324237) y3) y4) y5) y6) = ((((((dih_y _7324236) y5) y6) y4) _7324237) y3)))))) _7324238)
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 * / ! ! ! c= cdih_y f0 f1 b0 b1 b2 b3 cdih_y f0 b2 b3 b1 f1 b0 f2
- |- ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t)))
T c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
- (!V. (!ul. (!P. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul)))))), (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) |- ((!V. (!ul. (!P. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul)))))) /\ (P ((cc_uh V) ul)))
T c==> ! ! ! c==> c/\ c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 * b2 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 cNIL * b2 ccc_uh b0 b1 c==> c/\ c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 * f2 cCONS cEL cNUMERAL c_0 f1 cCONS cEL cNUMERAL cBIT1 c_0 f1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cNIL c/\ ! ! ! c==> c/\ c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 * b2 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 cNIL * b2 ccc_uh b0 b1 * f2 ccc_uh f0 f1
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) |- (((!y5. (!y6. (((((((dih_y _7324242) _7324243) _7324244) _7324245) y5) y6) = ((((((dih_y _7324242) _7324244) _7324243) _7324245) y6) y5)))) ==> ((\y5. (!y6. (((((((dih_y _7324242) _7324243) _7324244) _7324245) y5) y6) = ((((((dih_y _7324242) _7324244) _7324243) _7324245) y6) y5)))) _7324246)) = ((\y5. (!y6. (((((((dih_y _7324242) _7324243) _7324244) _7324245) y5) y6) = ((((((dih_y _7324242) _7324244) _7324243) _7324245) y6) y5)))) _7324246))
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 c= c==> ! ! c= cdih_y f0 f1 f2 f3 b0 b1 cdih_y f0 f2 f1 f3 b1 b0 * / ! c= cdih_y f0 f1 f2 f3 b0 b1 cdih_y f0 f2 f1 f3 b1 b0 f4 * / ! c= cdih_y f0 f1 f2 f3 b0 b1 cdih_y f0 f2 f1 f3 b1 b0 f4
+ |- (((~ (P b)) ==> F) = (P b))
T c= c==> c~ * f0 f1 cF * f0 f1
- (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))), (~ (((((((dih_y (distance (u0 , u1))) sqrt2) (distance (u1 , (f i)))) sqrt2) (distance (u0 , (f i)))) sqrt2) = ((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))))) |- ((~ (((((((dih_y (distance (u0 , u1))) sqrt2) (distance (u1 , (f i)))) sqrt2) (distance (u0 , (f i)))) sqrt2) = ((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))))) /\ (((((((dih_y (distance (u0 , u1))) sqrt2) (distance (u1 , (f i)))) sqrt2) (distance (u0 , (f i)))) sqrt2) = ((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))))
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 c==> c~ c= cdih_y cdistance c, f0 f1 csqrt2 cdistance c, f1 * f2 f3 csqrt2 cdistance c, f0 * f2 f3 csqrt2 cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 c/\ c~ c= cdih_y cdistance c, f0 f1 csqrt2 cdistance c, f1 * f2 f3 csqrt2 cdistance c, f0 * f2 f3 csqrt2 cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 c= cdih_y cdistance c, f0 f1 csqrt2 cdistance c, f1 * f2 f3 csqrt2 cdistance c, f0 * f2 f3 csqrt2 cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3
+ (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u1 , (f i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u1 , (f (SUC i))))) /\ (((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u1 , (f i))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f (SUC i))))) (distance (u1 , (f (SUC i)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) /\ (((((((azim_mcell V) f) u0) u1) i) = ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (?y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i)))))))))))))))))))))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))
T c==> cpacking f0 c==> csaturated f0 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 * f3 f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 * f3 cSUC f4 c/\ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f2 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f2 * f3 f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 cSUC f4 cdistance c, f2 * f3 cSUC f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c/\ c= cazim_mcell f0 f3 f1 f2 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c? / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c/\ creal_le cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c==> c/\ creal_lt cazim f1 f2 * f3 f4 * f3 cSUC f4 cpi creal_le cdistance c, * f3 f4 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f3 f4 * f3 cSUC f4 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4
+ (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) |- (((!y4. (!y5. (!y6. (((((((dih_y _7324236) _7324237) _7324238) y4) y5) y6) = ((((((dih_y _7324236) y5) y6) y4) _7324237) _7324238))))) ==> ((\y4. (!y5. (!y6. (((((((dih_y _7324236) _7324237) _7324238) y4) y5) y6) = ((((((dih_y _7324236) y5) y6) y4) _7324237) _7324238))))) _7324239)) = ((\y4. (!y5. (!y6. (((((((dih_y _7324236) _7324237) _7324238) y4) y5) y6) = ((((((dih_y _7324236) y5) y6) y4) _7324237) _7324238))))) _7324239))
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c= c==> ! ! ! c= cdih_y f0 f1 f2 b0 b1 b2 cdih_y f0 b1 b2 b0 f1 f2 * / ! ! c= cdih_y f0 f1 f2 b0 b1 b2 cdih_y f0 b1 b2 b0 f1 f2 f3 * / ! ! c= cdih_y f0 f1 f2 b0 b1 b2 cdih_y f0 b1 b2 b0 f1 f2 f3
+ |- (!u0'. (!u1'. (!u2. (!u3. (!y4. (!y5. (!y6. (((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((CONS u0') ((CONS u1') ((CONS u2) ((CONS u3) NIL))))) /\ (((distance (u1' , u2)) = y4) /\ (((distance (u0' , u2)) = y5) /\ ((distance (u0' , u1')) = y6))))))))) ==> (((measure ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((vol_y sqrt2) sqrt2) sqrt2) y4) y5) y6)) /\ ((((sol u0') ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y y5) y6) sqrt2) sqrt2) sqrt2) y4)) /\ ((((sol u1') ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y y6) y4) sqrt2) sqrt2) sqrt2) y5)) /\ ((((sol u2) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y y4) y5) sqrt2) sqrt2) sqrt2) y6)) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0' , u1')) = ((((((dih_y y6) y4) sqrt2) sqrt2) sqrt2) y5)) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0' , u2)) = ((((((dih_y y5) y6) sqrt2) sqrt2) sqrt2) y4)) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u1' , u2)) = ((((((dih_y y4) y5) sqrt2) sqrt2) sqrt2) y6)) /\ ((((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun) = (((((gamma3f y4) y5) y6) sqrt2) lmfun)))))))))))))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS f5 cCONS f6 cCONS f7 cCONS f8 cNIL c/\ c= cdistance c, f6 f7 f9 c/\ c= cdistance c, f5 f7 f10 c= cdistance c, f5 f6 f11 c/\ c= cmeasure * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cvol_y csqrt2 csqrt2 csqrt2 f9 f10 f11 c/\ c= csol f5 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y f10 f11 csqrt2 csqrt2 csqrt2 f9 c/\ c= csol f6 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y f11 f9 csqrt2 csqrt2 csqrt2 f10 c/\ c= csol f7 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y f9 f10 csqrt2 csqrt2 csqrt2 f11 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f5 f6 cdih_y f11 f9 csqrt2 csqrt2 csqrt2 f10 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f5 f7 cdih_y f10 f11 csqrt2 csqrt2 csqrt2 f9 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f6 f7 cdih_y f9 f10 csqrt2 csqrt2 csqrt2 f11 c= cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun cgamma3f f9 f10 f11 csqrt2 part clmfun
+ (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) NIL))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS f1 cCONS f2 cCONS * f3 f4 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL
+ |- (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))
T c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3
+ (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) |- (((!y5. (!y6. (((((((dih_y _7324236) _7324237) _7324238) _7324239) y5) y6) = ((((((dih_y _7324236) y5) y6) _7324239) _7324237) _7324238)))) ==> ((\y5. (!y6. (((((((dih_y _7324236) _7324237) _7324238) _7324239) y5) y6) = ((((((dih_y _7324236) y5) y6) _7324239) _7324237) _7324238)))) _7324240)) = ((\y5. (!y6. (((((((dih_y _7324236) _7324237) _7324238) _7324239) y5) y6) = ((((((dih_y _7324236) y5) y6) _7324239) _7324237) _7324238)))) _7324240))
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c= c==> ! ! c= cdih_y f0 f1 f2 f3 b0 b1 cdih_y f0 b0 b1 f3 f1 f2 * / ! c= cdih_y f0 f1 f2 f3 b0 b1 cdih_y f0 b0 b1 f3 f1 f2 f4 * / ! c= cdih_y f0 f1 f2 f3 b0 b1 cdih_y f0 b0 b1 f3 f1 f2 f4
- ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) |- (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) = T)
T c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 c= creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 cT
+ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- (((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) NIL))))) /\ (((distance (u1 , (f i))) = (distance (u1 , (f i)))) /\ (((distance (u0 , (f i))) = (distance (u0 , (f i)))) /\ ((distance (u0 , u1)) = (distance (u0 , u1))))))))))) /\ ((((measure ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((vol_y sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1)))) /\ ((((sol u0) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ ((((sol u1) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ ((((sol (f i)) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , (f i))) = ((((((dih_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u1 , (f i))) = ((((((dih_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ ((((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun) = (((((gamma3f (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) lmfun))))))))) ==> ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))))
T c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cpacking f0 c==> csaturated f0 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS f1 cCONS f2 cCONS * f3 f4 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL c/\ c= cdistance c, f2 * f3 f4 cdistance c, f2 * f3 f4 c/\ c= cdistance c, f1 * f3 f4 cdistance c, f1 * f3 f4 c= cdistance c, f1 f2 cdistance c, f1 f2 c==> c/\ c= cmeasure * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cvol_y csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 c/\ c= csol f1 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= csol f2 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= csol * f3 f4 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 * f3 f4 cdih_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f2 * f3 f4 cdih_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c= cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun cgamma3f cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 part clmfun c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) |- (((((saturated V) /\ ((packing V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((\x. ((\v. (((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) v)) NIL)))) = v)) x)) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) NIL)))))) ==> ((\x. ((\v. (((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) v)) NIL)))) = v)) x)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) = ((\x. ((\v. (((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) v)) NIL)))) = v)) x)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= c==> c/\ c/\ csaturated f0 c/\ cpacking f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * / * / c= cCONS f1 cCONS f2 cCONS * f3 f4 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 b1 cNIL b1 b0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL * / * / c= cCONS f1 cCONS f2 cCONS * f3 f4 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 b1 cNIL b1 b0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * / * / c= cCONS f1 cCONS f2 cCONS * f3 f4 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 b1 cNIL b1 b0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ |- (!y6. (((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) NIL))))) /\ (((distance (u1 , (f i))) = (distance (u1 , (f i)))) /\ (((distance (u0 , (f i))) = (distance (u0 , (f i)))) /\ ((distance (u0 , u1)) = y6))))))))) ==> (((measure ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((vol_y sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))) (distance (u0 , (f i)))) y6)) /\ ((((sol u0) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , (f i)))) y6) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ ((((sol u1) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y y6) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ ((((sol (f i)) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) y6)) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y y6) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , (f i))) = ((((((dih_y (distance (u0 , (f i)))) y6) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u1 , (f i))) = ((((((dih_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) y6)) /\ ((((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun) = (((((gamma3f (distance (u1 , (f i)))) (distance (u0 , (f i)))) y6) sqrt2) lmfun)))))))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS f1 cCONS f2 cCONS * f3 f4 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL c/\ c= cdistance c, f2 * f3 f4 cdistance c, f2 * f3 f4 c/\ c= cdistance c, f1 * f3 f4 cdistance c, f1 * f3 f4 c= cdistance c, f1 f2 f5 c/\ c= cmeasure * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cvol_y csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 f5 c/\ c= csol f1 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 * f3 f4 f5 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= csol f2 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y f5 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= csol * f3 f4 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 f5 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y f5 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 * f3 f4 cdih_y cdistance c, f1 * f3 f4 f5 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f2 * f3 f4 cdih_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 f5 c= cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun cgamma3f cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 f5 csqrt2 part clmfun
- (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) |- (((~ (((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = F)) = ((((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = F))
T c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c= c==> c~ c= * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= c= * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cF c= c= * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cF
+ |- ((!V. (!ul. (!P. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul)))))) ==> (!P. (!V. (!ul. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul)))))))
T c==> ! ! ! c==> c/\ c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 * b2 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 cNIL * b2 ccc_uh b0 b1 ! ! ! c==> c/\ c/\ csaturated b1 c/\ cpacking b1 cleaf b1 b2 * b0 cCONS cEL cNUMERAL c_0 b2 cCONS cEL cNUMERAL cBIT1 c_0 b2 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b2 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b1 b2 cNIL * b0 ccc_uh b1 b2
+ (!V. (!ul. (!P. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul)))))) |- ((!V. (!ul. ((((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (P ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL)))))) ==> (P ((cc_uh V) ul))))) = T)
T c==> ! ! ! c==> c/\ c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 * b2 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 cNIL * b2 ccc_uh b0 b1 c= ! ! c==> c/\ c/\ csaturated b0 c/\ cpacking b0 cleaf b0 b1 * f0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 b1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 b1 cNIL * f0 ccc_uh b0 b1 cT
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) |- (((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) NIL)))) = ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cCONS f1 cCONS f2 cCONS * f3 f4 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))), (~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) |- ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F)
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 cF
+ (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u0 , (f i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u0 , (f (SUC i))))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u1 , (f i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u1 , (f (SUC i))))) /\ (((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u1 , (f i))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f (SUC i))))) (distance (u1 , (f (SUC i)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) /\ (((((((azim_mcell V) f) u0) u1) i) = ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (?y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i)))))))))))))))))))))))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))
T c==> cpacking f0 c==> csaturated f0 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 * f3 f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 * f3 f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 * f3 cSUC f4 c/\ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f2 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f2 * f3 f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 cSUC f4 cdistance c, f2 * f3 cSUC f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c/\ c= cazim_mcell f0 f3 f1 f2 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c? / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c/\ creal_le cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c==> c/\ creal_lt cazim f1 f2 * f3 f4 * f3 cSUC f4 cpi creal_le cdistance c, * f3 f4 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f3 f4 * f3 cSUC f4 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- (((EL (NUMERAL _0)) ((CONS h) t)) = h)
T c= cEL cNUMERAL c_0 cCONS f0 f1 f0
- (((measure ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((vol_y sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1)))) /\ ((((sol u0) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ ((((sol u1) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ ((((sol (f i)) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , (f i))) = ((((((dih_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u1 , (f i))) = ((((((dih_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ ((((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun) = (((((gamma3f (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) lmfun))))))))) |- (((sol u1) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))))
T c==> c/\ c= cmeasure * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cvol_y csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 c/\ c= csol f1 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= csol f2 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= csol * f3 f4 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 * f3 f4 cdih_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f2 * f3 f4 cdih_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c= cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun cgamma3f cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 part clmfun c= csol f2 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4
- (_7324248 = _7324249) |- ((_7324248 = _7324249) /\ ((f _7324248) = (f _7324249)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * f2 f0 * f2 f1
- (_7324256 = _7324262), (_7324257 = _7324263) |- ((_7324258 = _7324264) ==> ((~ (_7324259 = _7324265)) \/ ((~ (_7324260 = _7324266)) \/ ((~ (_7324261 = _7324267)) \/ (((((((dih_y _7324256) _7324257) _7324258) _7324259) _7324260) _7324261) = ((((((dih_y _7324262) _7324263) _7324264) _7324265) _7324266) _7324267))))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ c~ c= f10 f11 c= cdih_y f0 f2 f4 f6 f8 f10 cdih_y f1 f3 f5 f7 f9 f11
- |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) |- ((collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY cF
- (~ (negligible ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) |- ((negligible ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL))))) = F)
T c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL c= cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL cF
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- (((measure ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((vol_y sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1)))) /\ ((((sol u0) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ ((((sol u1) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ ((((sol (f i)) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , (f i))) = ((((((dih_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u1 , (f i))) = ((((((dih_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ ((((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun) = (((((gamma3f (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) lmfun))))))))) |- (((sol u0) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))
T c==> c/\ c= cmeasure * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cvol_y csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 c/\ c= csol f1 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= csol f2 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= csol * f3 f4 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 * f3 f4 cdih_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f2 * f3 f4 cdih_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c= cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun cgamma3f cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 part clmfun c= csol f1 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4
- (_7324256 = _7324262), (_7324257 = _7324263), (_7324258 = _7324264), (_7324259 = _7324265), (_7324260 = _7324266) |- ((_7324260 = _7324266) /\ ((~ (_7324261 = _7324267)) \/ (((((((dih_y _7324256) _7324257) _7324258) _7324259) _7324260) _7324261) = ((((((dih_y _7324262) _7324263) _7324264) _7324265) _7324266) _7324267))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c/\ c= f8 f9 c\/ c~ c= f10 f11 c= cdih_y f0 f2 f4 f6 f8 f10 cdih_y f1 f3 f5 f7 f9 f11
- |- ((((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F))) ==> ((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F)))) ==> (((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F))) ==> ((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F)))))
T c==> c==> c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 cF c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 cF c==> c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 cF c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 cF
- (_7324256 = _7324262), (_7324257 = _7324263), (_7324258 = _7324264), (_7324259 = _7324265) |- ((_7324260 = _7324266) ==> ((~ (_7324261 = _7324267)) \/ (((((((dih_y _7324256) _7324257) _7324258) _7324259) _7324260) _7324261) = ((((((dih_y _7324262) _7324263) _7324264) _7324265) _7324266) _7324267))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c\/ c~ c= f10 f11 c= cdih_y f0 f2 f4 f6 f8 f10 cdih_y f1 f3 f5 f7 f9 f11
- |- ((~ (_7324254 = _7324255)) \/ ((distance _7324254) = (distance _7324255)))
T c\/ c~ c= f0 f1 c= cdistance f0 cdistance f1
- (~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) |- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) /\ F)
T c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 c/\ c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i)))))) |- (((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i)))))) = T)
T c==> c==> c/\ creal_lt cazim f0 f1 * f2 f3 * f2 cSUC f3 cpi creal_le cdistance c, * f2 f3 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= f4 cdistance c, * f2 f3 * f2 cSUC f3 c= c==> c/\ creal_lt cazim f0 f1 * f2 f3 * f2 cSUC f3 cpi creal_le cdistance c, * f2 f3 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= f4 cdistance c, * f2 f3 * f2 cSUC f3 cT
- (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) |- ((collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY cF
- |- ((_7324248 = _7324249) ==> ((f _7324248) = (f _7324249)))
T c==> c= f0 f1 c= * f2 f0 * f2 f1
- |- (((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t))
T c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 f1
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
- |- ((((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) NIL)))) = ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((\x. ((\v. (((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) v)) NIL)))) = v)) x)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))
T c= c= cCONS f0 cCONS f1 cCONS * f2 f3 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL cNIL ccc_uh f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL * / * / c= cCONS f0 cCONS f1 cCONS * f2 f3 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 b1 cNIL b1 b0 ccc_uh f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL
- (((measure ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((vol_y sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1)))) /\ ((((sol u0) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ ((((sol u1) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ ((((sol (f i)) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , (f i))) = ((((((dih_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u1 , (f i))) = ((((((dih_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ ((((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun) = (((((gamma3f (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) lmfun))))))))) |- ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , (f i))) = ((((((dih_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))
T c==> c/\ c= cmeasure * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cvol_y csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 c/\ c= csol f1 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= csol f2 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= csol * f3 f4 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 * f3 f4 cdih_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f2 * f3 f4 cdih_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c= cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun cgamma3f cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 part clmfun c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 * f3 f4 cdih_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4
- ((leaf V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) |- (((leaf V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) = T)
T c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL c= cleaf f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL cT
- (b = c) |- (F = F)
T c==> c= f0 f1 c= cF cF
- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL))))) |- (((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))
T c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c= * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F), (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- ((~ (_7324256 = _7324262)) \/ ((~ (_7324257 = _7324263)) \/ ((~ (_7324258 = _7324264)) \/ ((~ (_7324259 = _7324265)) \/ ((~ (_7324260 = _7324266)) \/ ((~ (_7324261 = _7324267)) \/ (((((((dih_y _7324256) _7324257) _7324258) _7324259) _7324260) _7324261) = ((((((dih_y _7324262) _7324263) _7324264) _7324265) _7324266) _7324267))))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ c~ c= f10 f11 c= cdih_y f0 f2 f4 f6 f8 f10 cdih_y f1 f3 f5 f7 f9 f11
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- ((saturated V) /\ ((packing V) /\ ((leaf V) ul))) |- (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) /\ (((cc_uh V) ul) = ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 c/\ c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 c= ccc_uh f0 f1 cCONS cEL cNUMERAL c_0 f1 cCONS cEL cNUMERAL cBIT1 c_0 f1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cNIL
- (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) |- ((((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = F)
T c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c= c= * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cF
- (~ (P c)), (P c) |- ((~ (P c)) /\ (P c))
T c==> c~ * f0 f1 c==> * f0 f1 c/\ c~ * f0 f1 * f0 f1
- |- ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t))))
T c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
- (_7324256 = _7324262), (_7324257 = _7324263), (_7324258 = _7324264), (_7324259 = _7324265) |- ((_7324259 = _7324265) /\ ((~ (_7324260 = _7324266)) \/ ((~ (_7324261 = _7324267)) \/ (((((((dih_y _7324256) _7324257) _7324258) _7324259) _7324260) _7324261) = ((((((dih_y _7324262) _7324263) _7324264) _7324265) _7324266) _7324267)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c/\ c= f6 f7 c\/ c~ c= f8 f9 c\/ c~ c= f10 f11 c= cdih_y f0 f2 f4 f6 f8 f10 cdih_y f1 f3 f5 f7 f9 f11
- (_7324256 = _7324262) |- ((_7324257 = _7324263) ==> ((~ (_7324258 = _7324264)) \/ ((~ (_7324259 = _7324265)) \/ ((~ (_7324260 = _7324266)) \/ ((~ (_7324261 = _7324267)) \/ (((((((dih_y _7324256) _7324257) _7324258) _7324259) _7324260) _7324261) = ((((((dih_y _7324262) _7324263) _7324264) _7324265) _7324266) _7324267)))))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ c~ c= f10 f11 c= cdih_y f0 f2 f4 f6 f8 f10 cdih_y f1 f3 f5 f7 f9 f11
- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) /\ (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL))))) |- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL))))) = T)
T c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL c= cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL cT
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- (_7324256 = _7324262) |- ((_7324256 = _7324262) /\ ((~ (_7324257 = _7324263)) \/ ((~ (_7324258 = _7324264)) \/ ((~ (_7324259 = _7324265)) \/ ((~ (_7324260 = _7324266)) \/ ((~ (_7324261 = _7324267)) \/ (((((((dih_y _7324256) _7324257) _7324258) _7324259) _7324260) _7324261) = ((((((dih_y _7324262) _7324263) _7324264) _7324265) _7324266) _7324267))))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ c~ c= f10 f11 c= cdih_y f0 f2 f4 f6 f8 f10 cdih_y f1 f3 f5 f7 f9 f11
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- ((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u1 , (f i))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) |- (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u1 , (f i))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = T)
T c==> creal_lt ceta_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f1 * f2 f3 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_lt ceta_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f1 * f2 f3 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
- |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))), (~ (((((((dih_y (distance (u0 , u1))) sqrt2) (distance (u1 , (f i)))) sqrt2) (distance (u0 , (f i)))) sqrt2) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) |- ((~ (((((((dih_y (distance (u0 , u1))) sqrt2) (distance (u1 , (f i)))) sqrt2) (distance (u0 , (f i)))) sqrt2) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) /\ (((((((dih_y (distance (u0 , u1))) sqrt2) (distance (u1 , (f i)))) sqrt2) (distance (u0 , (f i)))) sqrt2) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))))
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> c~ c= cdih_y cdistance c, f0 f1 csqrt2 cdistance c, f1 * f2 f3 csqrt2 cdistance c, f0 * f2 f3 csqrt2 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c/\ c~ c= cdih_y cdistance c, f0 f1 csqrt2 cdistance c, f1 * f2 f3 csqrt2 cdistance c, f0 * f2 f3 csqrt2 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c= cdih_y cdistance c, f0 f1 csqrt2 cdistance c, f1 * f2 f3 csqrt2 cdistance c, f0 * f2 f3 csqrt2 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F), (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- ((~ (_7324248 = _7324249)) \/ ((f _7324248) = (f _7324249)))
T c\/ c~ c= f0 f1 c= * f2 f0 * f2 f1
- (_7324250 = _7324252) |- ((_7324250 = _7324252) /\ ((~ (_7324251 = _7324253)) \/ ((_7324250 , _7324251) = (_7324252 , _7324253))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- |- ((((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F))) ==> ((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F)))) = ((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F))))
T c= c==> c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 cF c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 cF c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 cF
- (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) |- ((~ (((((((dih_y (distance (u0 , u1))) sqrt2) (distance (u1 , (f i)))) sqrt2) (distance (u0 , (f i)))) sqrt2) = ((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))))) ==> (((((((dih_y (distance (u0 , u1))) sqrt2) (distance (u1 , (f i)))) sqrt2) (distance (u0 , (f i)))) sqrt2) = ((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))))
T c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 c==> c~ c= cdih_y cdistance c, f0 f1 csqrt2 cdistance c, f1 * f2 f3 csqrt2 cdistance c, f0 * f2 f3 csqrt2 cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 c= cdih_y cdistance c, f0 f1 csqrt2 cdistance c, f1 * f2 f3 csqrt2 cdistance c, f0 * f2 f3 csqrt2 cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3
- (((measure ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((vol_y sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1)))) /\ ((((sol u0) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ ((((sol u1) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ ((((sol (f i)) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((((((sol_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , u1)) = ((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u0 , (f i))) = ((((((dih_y (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i))))) /\ (((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u1 , (f i))) = ((((((dih_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1)))) /\ ((((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun) = (((((gamma3f (distance (u1 , (f i)))) (distance (u0 , (f i)))) (distance (u0 , u1))) sqrt2) lmfun))))))))) |- ((((dihX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (u1 , (f i))) = ((((((dih_y (distance (u1 , (f i)))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , u1))))
T c==> c/\ c= cmeasure * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cvol_y csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 c/\ c= csol f1 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= csol f2 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= csol * f3 f4 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL csol_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 f2 cdih_y cdistance c, f1 f2 cdistance c, f2 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f1 * f3 f4 cdih_y cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 csqrt2 csqrt2 cdistance c, f2 * f3 f4 c/\ c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f2 * f3 f4 cdih_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2 c= cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun cgamma3f cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 cdistance c, f1 f2 csqrt2 part clmfun c= cdihX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c, f2 * f3 f4 cdih_y cdistance c, f2 * f3 f4 cdistance c, f1 * f3 f4 csqrt2 csqrt2 csqrt2 cdistance c, f1 f2
- ((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F))) |- ((((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F))) ==> ((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F)))) ==> ((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F))))
T c==> c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 cF c==> c==> c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 cF c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 cF c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 cF
- |- (((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t))
T c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1
- |- (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t))
T c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
- (_7324254 = _7324255) |- ((_7324254 = _7324255) /\ ((distance _7324254) = (distance _7324255)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cdistance f0 cdistance f1
- |- ((_7324256 = _7324262) ==> ((~ (_7324257 = _7324263)) \/ ((~ (_7324258 = _7324264)) \/ ((~ (_7324259 = _7324265)) \/ ((~ (_7324260 = _7324266)) \/ ((~ (_7324261 = _7324267)) \/ (((((((dih_y _7324256) _7324257) _7324258) _7324259) _7324260) _7324261) = ((((((dih_y _7324262) _7324263) _7324264) _7324265) _7324266) _7324267))))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ c~ c= f10 f11 c= cdih_y f0 f2 f4 f6 f8 f10 cdih_y f1 f3 f5 f7 f9 f11
- (((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) |- ((((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) = T)
T c==> cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL * * * * part cwedge_ge f2 f1 * f3 f4 * f3 cSUC f4 c= cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL * * * * part cwedge_ge f2 f1 * f3 f4 * f3 cSUC f4 cT
- ((real_le (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) |- (((real_le (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = T)
T c==> creal_le cdistance c, f0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_le cdistance c, f0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) = T)
T c==> cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 cT
- ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) |- (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = T)
T c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f2 f3 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_lt chl cCONS f0 cCONS f1 cCONS * f2 f3 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- ((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) |- (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) = T)
T c==> creal_le cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 f4 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 cazim f0 f1 * f2 f3 * f2 cSUC f3 c= creal_le cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 f4 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 cazim f0 f1 * f2 f3 * f2 cSUC f3 cT
- (P c) |- ((~ (P c)) ==> (P c))
T c==> * f0 f1 c==> c~ * f0 f1 * f0 f1
- ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) |- (((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = T)
T c==> creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
- ((real_lt (hl ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) |- (((real_lt (hl ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = T)
T c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f2 cSUC f3 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_lt chl cCONS f0 cCONS f1 cCONS * f2 cSUC f3 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
- |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) = ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c= c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL))))) = F)
T c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c= c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL cF
- (_7324256 = _7324262), (_7324257 = _7324263), (_7324258 = _7324264) |- ((_7324258 = _7324264) /\ ((~ (_7324259 = _7324265)) \/ ((~ (_7324260 = _7324266)) \/ ((~ (_7324261 = _7324267)) \/ (((((((dih_y _7324256) _7324257) _7324258) _7324259) _7324260) _7324261) = ((((((dih_y _7324262) _7324263) _7324264) _7324265) _7324266) _7324267))))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ c~ c= f10 f11 c= cdih_y f0 f2 f4 f6 f8 f10 cdih_y f1 f3 f5 f7 f9 f11
- ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) |- (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) = T)
T c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 f4 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 c= creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 f4 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 cT
- ((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F))) |- (((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F))) /\ ((~ (((((((dih_y (distance (u0 , u1))) (distance (u1 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u0 , (f i)))) = ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) sqrt2) sqrt2) sqrt2) (distance (u1 , (f i)))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y5) y6) y4) y2) y3)))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((dih_y y1) y2) y3) y4) y5) y6) = ((((((dih_y y1) y3) y2) y4) y6) y5)))))))) ==> F))))
T c==> c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 cF c/\ c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 cF c==> c~ c= cdih_y cdistance c, f0 f1 cdistance c, f1 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f0 * f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 csqrt2 csqrt2 csqrt2 cdistance c, f1 * f2 f3 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b4 b5 b3 b1 b2 c==> ! ! ! ! ! ! c= cdih_y b0 b1 b2 b3 b4 b5 cdih_y b0 b2 b1 b3 b5 b4 cF
- (_7324250 = _7324252) |- ((_7324251 = _7324253) ==> ((_7324250 , _7324251) = (_7324252 , _7324253)))
T c==> c= f0 f1 c==> c= f2 f3 c= c, f0 f2 c, f1 f3
- (~ (P b)), (P c), (b = c) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c==> c~ cF cF
