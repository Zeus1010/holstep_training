N NADD_MUL_ASSOC
C |- (!x. (!y. (!z. ((nadd_eq ((nadd_mul x) ((nadd_mul y) z))) ((nadd_mul ((nadd_mul x) y)) z)))))
T cnadd_eq cnadd_mul f0 cnadd_mul f1 f2 cnadd_mul cnadd_mul f0 f1 f2
D TRUTH
A |- T
T cT
D NADD_EQ_REFL
A |- (!x. ((nadd_eq x) x))
T cnadd_eq f0 f0
D nadd_mul
A |- (!x. (!y. (((nadd_mul x) y) = (mk_nadd (\n. ((dest_nadd x) ((dest_nadd y) n)))))))
T c= cnadd_mul f0 f1 cmk_nadd / cdest_nadd f0 cdest_nadd f1 b0
D NADD_MUL
A |- (!x. (!y. ((dest_nadd ((nadd_mul x) y)) = (\n. ((dest_nadd x) ((dest_nadd y) n))))))
T c= * part cdest_nadd cnadd_mul f0 f1 / cdest_nadd f0 cdest_nadd f1 b0
+ |- (T = ((nadd_eq (mk_nadd (\n. ((dest_nadd x) ((dest_nadd ((nadd_mul y) z)) n))))) (mk_nadd (\n. ((dest_nadd ((nadd_mul x) y)) ((dest_nadd z) n))))))
T c= cT cnadd_eq cmk_nadd / cdest_nadd f0 cdest_nadd cnadd_mul f1 f2 b0 cmk_nadd / cdest_nadd cnadd_mul f0 f1 cdest_nadd f2 b0
- |- (((\n. (f n)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
