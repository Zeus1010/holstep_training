N VSUM_CLAUSES_RIGHT
C |- (!f. (!m. (!n. ((((NUMERAL _0) < n) /\ (m <= n)) ==> (((vsum (m .. n)) f) = ((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) (f n)))))))
T c==> c/\ c< cNUMERAL c_0 f0 c<= f1 f0 c= cvsum * * part c.. f1 f0 f2 cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f2 * f2 f0
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D Ssrnat.succnK
A |- (!n. (((SUC n) - (NUMERAL (BIT1 _0))) = n))
T c= c- cSUC f0 cNUMERAL cBIT1 c_0 f0
D VSUM_CLAUSES_NUMSEG
A |- ((!m. (((vsum (m .. (NUMERAL _0))) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))))) /\ (!m. (!n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))))
T c/\ ! c= cvsum * * part c.. b0 cNUMERAL c_0 f0 cCOND c= b0 cNUMERAL c_0 * f0 cNUMERAL c_0 cvec cNUMERAL c_0 ! ! c= cvsum * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 cvector_add cvsum * * part c.. b0 b1 f0 * f0 cSUC b1 cvsum * * part c.. b0 b1 f0
- |- ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))))
T c= cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 cvec cNUMERAL c_0
- (~ (m = (NUMERAL _0))) |- (((~ ((NUMERAL _0) = m)) ==> (((NUMERAL _0) = m) = F)) = (((NUMERAL _0) = m) = F))
T c==> c~ c= f0 cNUMERAL c_0 c= c==> c~ c= cNUMERAL c_0 f0 c= c= cNUMERAL c_0 f0 cF c= c= cNUMERAL c_0 f0 cF
+ |- (((!n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)))) ==> ((\n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)))) n)) = ((\n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)))) n))
T c= c==> ! c= cvsum * * part c.. f0 cSUC b0 f1 cCOND c<= f0 cSUC b0 cvector_add cvsum * * part c.. f0 b0 f1 * f1 cSUC b0 cvsum * * part c.. f0 b0 f1 * / c= cvsum * * part c.. f0 cSUC b0 f1 cCOND c<= f0 cSUC b0 cvector_add cvsum * * part c.. f0 b0 f1 * f1 cSUC b0 cvsum * * part c.. f0 b0 f1 f2 * / c= cvsum * * part c.. f0 cSUC b0 f1 cCOND c<= f0 cSUC b0 cvector_add cvsum * * part c.. f0 b0 f1 * f1 cSUC b0 cvsum * * part c.. f0 b0 f1 f2
+ |- ((\m. (!n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))) m)
T * / ! c= cvsum * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 cvector_add cvsum * * part c.. b0 b1 f0 * f0 cSUC b1 cvsum * * part c.. b0 b1 f0 f1
+ |- (((!n. (((SUC n) - (NUMERAL (BIT1 _0))) = n)) ==> ((\n. (((SUC n) - (NUMERAL (BIT1 _0))) = n)) n)) = ((\n. (((SUC n) - (NUMERAL (BIT1 _0))) = n)) n))
T c= c==> ! c= c- cSUC b0 cNUMERAL cBIT1 c_0 b0 * / c= c- cSUC b0 cNUMERAL cBIT1 c_0 b0 f0 * / c= c- cSUC b0 cNUMERAL cBIT1 c_0 b0 f0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- ((\g'. (!t'. (!e'. (((m <= (SUC n)) = g') ==> ((g' ==> (((vector_add ((vsum (m .. n)) f)) (f (SUC n))) = t')) ==> (((~ g') ==> (((vsum (m .. n)) f) = e')) ==> ((((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c<= f0 cSUC f1 b0 c==> c==> b0 c= cvector_add cvsum * * part c.. f0 f1 f2 * f2 cSUC f1 b1 c==> c==> c~ b0 c= cvsum * * part c.. f0 f1 f2 b2 c= cCOND c<= f0 cSUC f1 cvector_add cvsum * * part c.. f0 f1 f2 * f2 cSUC f1 cvsum * * part c.. f0 f1 f2 cCOND b0 b1 b2 f3
+ (((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) |- ((((m <= (SUC n)) = T) ==> ((T ==> (((vector_add ((vsum (m .. n)) f)) (f (SUC n))) = t')) ==> (((~ T) ==> (((vsum (m .. n)) f) = e')) ==> ((((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)) = (((COND T) t') e'))))) = ((T ==> (((vector_add ((vsum (m .. n)) f)) (f (SUC n))) = t')) ==> (((~ T) ==> (((vsum (m .. n)) f) = e')) ==> ((((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)) = (((COND T) t') e')))))
T c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= c==> c= c<= f1 cSUC f0 cT c==> c==> cT c= cvector_add cvsum * * part c.. f1 f0 f2 * f2 cSUC f0 f3 c==> c==> c~ cT c= cvsum * * part c.. f1 f0 f2 f4 c= cCOND c<= f1 cSUC f0 cvector_add cvsum * * part c.. f1 f0 f2 * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 cCOND cT f3 f4 c==> c==> cT c= cvector_add cvsum * * part c.. f1 f0 f2 * f2 cSUC f0 f3 c==> c==> c~ cT c= cvsum * * part c.. f1 f0 f2 f4 c= cCOND c<= f1 cSUC f0 cvector_add cvsum * * part c.. f1 f0 f2 * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 cCOND cT f3 f4
+ |- (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)))
T c= cvsum * * part c.. f0 cSUC f1 f2 cCOND c<= f0 cSUC f1 cvector_add cvsum * * part c.. f0 f1 f2 * f2 cSUC f1 cvsum * * part c.. f0 f1 f2
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- (((!q'. (((((NUMERAL _0) < (NUMERAL _0)) /\ (m <= (NUMERAL _0))) = p') ==> ((p' ==> ((((vsum (m .. (NUMERAL _0))) f) = ((vector_add ((vsum (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0)))) = q')) ==> (((((NUMERAL _0) < (NUMERAL _0)) /\ (m <= (NUMERAL _0))) ==> (((vsum (m .. (NUMERAL _0))) f) = ((vector_add ((vsum (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0))))) = (p' ==> q'))))) ==> ((\q'. (((((NUMERAL _0) < (NUMERAL _0)) /\ (m <= (NUMERAL _0))) = p') ==> ((p' ==> ((((vsum (m .. (NUMERAL _0))) f) = ((vector_add ((vsum (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0)))) = q')) ==> (((((NUMERAL _0) < (NUMERAL _0)) /\ (m <= (NUMERAL _0))) ==> (((vsum (m .. (NUMERAL _0))) f) = ((vector_add ((vsum (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0))))) = (p' ==> q'))))) q')) = ((\q'. (((((NUMERAL _0) < (NUMERAL _0)) /\ (m <= (NUMERAL _0))) = p') ==> ((p' ==> ((((vsum (m .. (NUMERAL _0))) f) = ((vector_add ((vsum (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0)))) = q')) ==> (((((NUMERAL _0) < (NUMERAL _0)) /\ (m <= (NUMERAL _0))) ==> (((vsum (m .. (NUMERAL _0))) f) = ((vector_add ((vsum (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c< cNUMERAL c_0 cNUMERAL c_0 c<= f0 cNUMERAL c_0 f1 c==> c==> f1 c= c= cvsum * * part c.. f0 cNUMERAL c_0 f2 cvector_add cvsum * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 * f2 cNUMERAL c_0 b0 c= c==> c/\ c< cNUMERAL c_0 cNUMERAL c_0 c<= f0 cNUMERAL c_0 c= cvsum * * part c.. f0 cNUMERAL c_0 f2 cvector_add cvsum * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 * f2 cNUMERAL c_0 c==> f1 b0 * / c==> c= c/\ c< cNUMERAL c_0 cNUMERAL c_0 c<= f0 cNUMERAL c_0 f1 c==> c==> f1 c= c= cvsum * * part c.. f0 cNUMERAL c_0 f2 cvector_add cvsum * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 * f2 cNUMERAL c_0 b0 c= c==> c/\ c< cNUMERAL c_0 cNUMERAL c_0 c<= f0 cNUMERAL c_0 c= cvsum * * part c.. f0 cNUMERAL c_0 f2 cvector_add cvsum * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 * f2 cNUMERAL c_0 c==> f1 b0 f3 * / c==> c= c/\ c< cNUMERAL c_0 cNUMERAL c_0 c<= f0 cNUMERAL c_0 f1 c==> c==> f1 c= c= cvsum * * part c.. f0 cNUMERAL c_0 f2 cvector_add cvsum * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 * f2 cNUMERAL c_0 b0 c= c==> c/\ c< cNUMERAL c_0 cNUMERAL c_0 c<= f0 cNUMERAL c_0 c= cvsum * * part c.. f0 cNUMERAL c_0 f2 cvector_add cvsum * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 * f2 cNUMERAL c_0 c==> f1 b0 f3
+ (((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) |- (((~ T) ==> (((vsum (m .. n)) f) = e')) ==> ((((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)) = (((COND T) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) e')))
T c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c==> c==> c~ cT c= cvsum * * part c.. f1 f0 f2 f3 c= cCOND c<= f1 cSUC f0 cvector_add cvsum * * part c.. f1 f0 f2 * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 cCOND cT cvector_add cvsum * * part c.. f1 f0 f2 * f2 cSUC f0 f3
+ |- ((!n. (((((NUMERAL _0) < n) /\ (m <= n)) ==> (((vsum (m .. n)) f) = ((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) (f n)))) ==> ((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> (((vsum (m .. (SUC n))) f) = ((vector_add ((vsum (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n))))))) = (((((NUMERAL _0) < (NUMERAL _0)) /\ (m <= (NUMERAL _0))) ==> (((vsum (m .. (NUMERAL _0))) f) = ((vector_add ((vsum (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0))))) /\ (!n. (((((NUMERAL _0) < n) /\ (m <= n)) ==> (((vsum (m .. n)) f) = ((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) (f n)))) ==> ((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> (((vsum (m .. (SUC n))) f) = ((vector_add ((vsum (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n)))))))))
T c= ! c==> c==> c/\ c< cNUMERAL c_0 b0 c<= f0 b0 c= cvsum * * part c.. f0 b0 f1 cvector_add cvsum * * part c.. f0 c- b0 cNUMERAL cBIT1 c_0 f1 * f1 b0 c==> c/\ c< cNUMERAL c_0 cSUC b0 c<= f0 cSUC b0 c= cvsum * * part c.. f0 cSUC b0 f1 cvector_add cvsum * * part c.. f0 c- cSUC b0 cNUMERAL cBIT1 c_0 f1 * f1 cSUC b0 c/\ c==> c/\ c< cNUMERAL c_0 cNUMERAL c_0 c<= f0 cNUMERAL c_0 c= cvsum * * part c.. f0 cNUMERAL c_0 f1 cvector_add cvsum * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 * f1 cNUMERAL c_0 ! c==> c==> c/\ c< cNUMERAL c_0 b0 c<= f0 b0 c= cvsum * * part c.. f0 b0 f1 cvector_add cvsum * * part c.. f0 c- b0 cNUMERAL cBIT1 c_0 f1 * f1 b0 c==> c/\ c< cNUMERAL c_0 cSUC b0 c<= f0 cSUC b0 c= cvsum * * part c.. f0 cSUC b0 f1 cvector_add cvsum * * part c.. f0 c- cSUC b0 cNUMERAL cBIT1 c_0 f1 * f1 cSUC b0
+ |- (((!m. (!n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))) ==> ((\m. (!n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))) m)) = ((\m. (!n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))) m))
T c= c==> ! ! c= cvsum * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 cvector_add cvsum * * part c.. b0 b1 f0 * f0 cSUC b1 cvsum * * part c.. b0 b1 f0 * / ! c= cvsum * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 cvector_add cvsum * * part c.. b0 b1 f0 * f0 cSUC b1 cvsum * * part c.. b0 b1 f0 f1 * / ! c= cvsum * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 cvector_add cvsum * * part c.. b0 b1 f0 * f0 cSUC b1 cvsum * * part c.. b0 b1 f0 f1
+ |- (((!e'. (((m <= (SUC n)) = g') ==> ((g' ==> (((vector_add ((vsum (m .. n)) f)) (f (SUC n))) = t')) ==> (((~ g') ==> (((vsum (m .. n)) f) = e')) ==> ((((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)) = (((COND g') t') e')))))) ==> ((\e'. (((m <= (SUC n)) = g') ==> ((g' ==> (((vector_add ((vsum (m .. n)) f)) (f (SUC n))) = t')) ==> (((~ g') ==> (((vsum (m .. n)) f) = e')) ==> ((((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)) = (((COND g') t') e')))))) e')) = ((\e'. (((m <= (SUC n)) = g') ==> ((g' ==> (((vector_add ((vsum (m .. n)) f)) (f (SUC n))) = t')) ==> (((~ g') ==> (((vsum (m .. n)) f) = e')) ==> ((((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c<= f0 cSUC f1 f2 c==> c==> f2 c= cvector_add cvsum * * part c.. f0 f1 f3 * f3 cSUC f1 f4 c==> c==> c~ f2 c= cvsum * * part c.. f0 f1 f3 b0 c= cCOND c<= f0 cSUC f1 cvector_add cvsum * * part c.. f0 f1 f3 * f3 cSUC f1 cvsum * * part c.. f0 f1 f3 cCOND f2 f4 b0 * / c==> c= c<= f0 cSUC f1 f2 c==> c==> f2 c= cvector_add cvsum * * part c.. f0 f1 f3 * f3 cSUC f1 f4 c==> c==> c~ f2 c= cvsum * * part c.. f0 f1 f3 b0 c= cCOND c<= f0 cSUC f1 cvector_add cvsum * * part c.. f0 f1 f3 * f3 cSUC f1 cvsum * * part c.. f0 f1 f3 cCOND f2 f4 b0 f5 * / c==> c= c<= f0 cSUC f1 f2 c==> c==> f2 c= cvector_add cvsum * * part c.. f0 f1 f3 * f3 cSUC f1 f4 c==> c==> c~ f2 c= cvsum * * part c.. f0 f1 f3 b0 c= cCOND c<= f0 cSUC f1 cvector_add cvsum * * part c.. f0 f1 f3 * f3 cSUC f1 cvsum * * part c.. f0 f1 f3 cCOND f2 f4 b0 f5
+ |- ((((((NUMERAL _0) < (NUMERAL _0)) /\ (m <= (NUMERAL _0))) = F) ==> ((F ==> ((((vsum (m .. (NUMERAL _0))) f) = ((vector_add ((vsum (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0)))) = q')) ==> (((((NUMERAL _0) < (NUMERAL _0)) /\ (m <= (NUMERAL _0))) ==> (((vsum (m .. (NUMERAL _0))) f) = ((vector_add ((vsum (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0))))) = (F ==> q')))) = ((F ==> ((((vsum (m .. (NUMERAL _0))) f) = ((vector_add ((vsum (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0)))) = q')) ==> (((((NUMERAL _0) < (NUMERAL _0)) /\ (m <= (NUMERAL _0))) ==> (((vsum (m .. (NUMERAL _0))) f) = ((vector_add ((vsum (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0))))) = (F ==> q'))))
T c= c==> c= c/\ c< cNUMERAL c_0 cNUMERAL c_0 c<= f0 cNUMERAL c_0 cF c==> c==> cF c= c= cvsum * * part c.. f0 cNUMERAL c_0 f1 cvector_add cvsum * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 * f1 cNUMERAL c_0 f2 c= c==> c/\ c< cNUMERAL c_0 cNUMERAL c_0 c<= f0 cNUMERAL c_0 c= cvsum * * part c.. f0 cNUMERAL c_0 f1 cvector_add cvsum * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 * f1 cNUMERAL c_0 c==> cF f2 c==> c==> cF c= c= cvsum * * part c.. f0 cNUMERAL c_0 f1 cvector_add cvsum * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 * f1 cNUMERAL c_0 f2 c= c==> c/\ c< cNUMERAL c_0 cNUMERAL c_0 c<= f0 cNUMERAL c_0 c= cvsum * * part c.. f0 cNUMERAL c_0 f1 cvector_add cvsum * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 * f1 cNUMERAL c_0 c==> cF f2
- |- (((m = (NUMERAL _0)) ==> ((f (NUMERAL _0)) = t')) ==> (((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND (m = (NUMERAL _0))) t') e'))))
T c==> c==> c= f0 cNUMERAL c_0 c= * f1 cNUMERAL c_0 f2 c==> c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 f3 c= cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND c= f0 cNUMERAL c_0 f2 f3
+ |- ((((NUMERAL _0) < (NUMERAL _0)) /\ (m <= (NUMERAL _0))) ==> (((vsum (m .. (NUMERAL _0))) f) = ((vector_add ((vsum (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0)))))
T c==> c/\ c< cNUMERAL c_0 cNUMERAL c_0 c<= f0 cNUMERAL c_0 c= cvsum * * part c.. f0 cNUMERAL c_0 f1 cvector_add cvsum * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 * f1 cNUMERAL c_0
+ |- (((T ==> (((vector_add ((vsum (m .. n)) f)) (f (SUC n))) = ((vector_add ((vsum (m .. n)) f)) (f (SUC n))))) ==> (((~ T) ==> (((vsum (m .. n)) f) = e')) ==> ((((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)) = (((COND T) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) e')))) = (((~ T) ==> (((vsum (m .. n)) f) = e')) ==> ((((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)) = (((COND T) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) e'))))
T c= c==> c==> cT c= cvector_add cvsum * * part c.. f0 f1 f2 * f2 cSUC f1 cvector_add cvsum * * part c.. f0 f1 f2 * f2 cSUC f1 c==> c==> c~ cT c= cvsum * * part c.. f0 f1 f2 f3 c= cCOND c<= f0 cSUC f1 cvector_add cvsum * * part c.. f0 f1 f2 * f2 cSUC f1 cvsum * * part c.. f0 f1 f2 cCOND cT cvector_add cvsum * * part c.. f0 f1 f2 * f2 cSUC f1 f3 c==> c==> c~ cT c= cvsum * * part c.. f0 f1 f2 f3 c= cCOND c<= f0 cSUC f1 cvector_add cvsum * * part c.. f0 f1 f2 * f2 cSUC f1 cvsum * * part c.. f0 f1 f2 cCOND cT cvector_add cvsum * * part c.. f0 f1 f2 * f2 cSUC f1 f3
- (~ (m = (NUMERAL _0))) |- (~ ((NUMERAL _0) = m))
T c==> c~ c= f0 cNUMERAL c_0 c~ c= cNUMERAL c_0 f0
+ |- ((\p'. (!q'. (((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) = p') ==> ((p' ==> ((((vsum (m .. (SUC n))) f) = ((vector_add ((vsum (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n)))) = q')) ==> (((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> (((vsum (m .. (SUC n))) f) = ((vector_add ((vsum (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 b0 c==> c==> b0 c= c= cvsum * * part c.. f1 cSUC f0 f2 cvector_add cvsum * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f2 * f2 cSUC f0 b1 c= c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= cvsum * * part c.. f1 cSUC f0 f2 cvector_add cvsum * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f2 * f2 cSUC f0 c==> b0 b1 f3
+ |- (((((NUMERAL _0) < (NUMERAL _0)) /\ (m <= (NUMERAL _0))) ==> (((vsum (m .. (NUMERAL _0))) f) = ((vector_add ((vsum (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0))))) = (F ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))) = ((vector_add ((vsum (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0))))))
T c= c==> c/\ c< cNUMERAL c_0 cNUMERAL c_0 c<= f0 cNUMERAL c_0 c= cvsum * * part c.. f0 cNUMERAL c_0 f1 cvector_add cvsum * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 * f1 cNUMERAL c_0 c==> cF c= cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 cvec cNUMERAL c_0 cvector_add cvsum * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 * f1 cNUMERAL c_0
- |- ((((m = (NUMERAL _0)) ==> ((f (NUMERAL _0)) = (f (NUMERAL _0)))) ==> (((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) e')))) = (((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) e'))))
T c= c==> c==> c= f0 cNUMERAL c_0 c= * f1 cNUMERAL c_0 * f1 cNUMERAL c_0 c==> c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 f2 c= cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 f2 c==> c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 f2 c= cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 f2
+ (((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) |- ((((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)) = (((COND T) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)))
T c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= cCOND c<= f1 cSUC f0 cvector_add cvsum * * part c.. f1 f0 f2 * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 cCOND cT cvector_add cvsum * * part c.. f1 f0 f2 * f2 cSUC f0 cvsum * * part c.. f1 f0 f2
- (~ (m = (NUMERAL _0))) |- ((~ (m = (NUMERAL _0))) /\ ((vec (NUMERAL _0)) = (vec (NUMERAL _0))))
T c==> c~ c= f0 cNUMERAL c_0 c/\ c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 cvec cNUMERAL c_0
- T |- (T = T)
T c==> cT c= cT cT
- |- ((\g'. (!t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> ((f (NUMERAL _0)) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= f0 cNUMERAL c_0 b0 c==> c==> b0 c= * f1 cNUMERAL c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f2
+ |- (!n. (((((NUMERAL _0) < n) /\ (m <= n)) ==> (((vsum (m .. n)) f) = ((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) (f n)))) ==> ((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> (((vsum (m .. (SUC n))) f) = ((vector_add ((vsum (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n)))))))
T c==> c==> c/\ c< cNUMERAL c_0 f0 c<= f1 f0 c= cvsum * * part c.. f1 f0 f2 cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f2 * f2 f0 c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= cvsum * * part c.. f1 cSUC f0 f2 cvector_add cvsum * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f2 * f2 cSUC f0
- |- ((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = (vec (NUMERAL _0))))
T c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 cvec cNUMERAL c_0
+ (((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) |- ((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) /\ ((((vsum (m .. (SUC n))) f) = ((vector_add ((vsum (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n)))) = T))
T c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c/\ c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= c= cvsum * * part c.. f1 cSUC f0 f2 cvector_add cvsum * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f2 * f2 cSUC f0 cT
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- ((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> (((vsum (m .. (SUC n))) f) = ((vector_add ((vsum (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n)))))
T c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= cvsum * * part c.. f1 cSUC f0 f2 cvector_add cvsum * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f2 * f2 cSUC f0
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
+ |- ((((~ T) ==> (((vsum (m .. n)) f) = ((vsum (m .. n)) f))) ==> ((((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)) = (((COND T) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)))) = ((((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)) = (((COND T) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))
T c= c==> c==> c~ cT c= cvsum * * part c.. f0 f1 f2 cvsum * * part c.. f0 f1 f2 c= cCOND c<= f0 cSUC f1 cvector_add cvsum * * part c.. f0 f1 f2 * f2 cSUC f1 cvsum * * part c.. f0 f1 f2 cCOND cT cvector_add cvsum * * part c.. f0 f1 f2 * f2 cSUC f1 cvsum * * part c.. f0 f1 f2 c= cCOND c<= f0 cSUC f1 cvector_add cvsum * * part c.. f0 f1 f2 * f2 cSUC f1 cvsum * * part c.. f0 f1 f2 cCOND cT cvector_add cvsum * * part c.. f0 f1 f2 * f2 cSUC f1 cvsum * * part c.. f0 f1 f2
+ |- (((!n. (~ (n < n))) ==> ((\n. (~ (n < n))) n)) = ((\n. (~ (n < n))) n))
T c= c==> ! c~ c< b0 b0 * / c~ c< b0 b0 f0 * / c~ c< b0 b0 f0
+ |- (((m <= (SUC n)) = g') ==> ((g' ==> (((vector_add ((vsum (m .. n)) f)) (f (SUC n))) = t')) ==> (((~ g') ==> (((vsum (m .. n)) f) = e')) ==> ((((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)) = (((COND g') t') e')))))
T c==> c= c<= f0 cSUC f1 f2 c==> c==> f2 c= cvector_add cvsum * * part c.. f0 f1 f3 * f3 cSUC f1 f4 c==> c==> c~ f2 c= cvsum * * part c.. f0 f1 f3 f5 c= cCOND c<= f0 cSUC f1 cvector_add cvsum * * part c.. f0 f1 f3 * f3 cSUC f1 cvsum * * part c.. f0 f1 f3 cCOND f2 f4 f5
- (m = (NUMERAL _0)) |- ((NUMERAL _0) = m)
T c==> c= f0 cNUMERAL c_0 c= cNUMERAL c_0 f0
- (~ (m = (NUMERAL _0))) |- ((m = (NUMERAL _0)) = F)
T c==> c~ c= f0 cNUMERAL c_0 c= c= f0 cNUMERAL c_0 cF
- |- (((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) e')))
T c==> c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 f1 c= cCOND c= f0 cNUMERAL c_0 * f2 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND c= f0 cNUMERAL c_0 * f2 cNUMERAL c_0 f1
+ (~ T) |- ((~ T) /\ (((vsum (m .. n)) f) = ((vsum (m .. n)) f)))
T c==> c~ cT c/\ c~ cT c= cvsum * * part c.. f0 f1 f2 cvsum * * part c.. f0 f1 f2
- |- (((m = (NUMERAL _0)) = g') ==> ((g' ==> ((f (NUMERAL _0)) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND g') t') e')))))
T c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= * f2 cNUMERAL c_0 f3 c==> c==> c~ f1 c= cvec cNUMERAL c_0 f4 c= cCOND c= f0 cNUMERAL c_0 * f2 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND f1 f3 f4
+ |- ((\q'. (((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) = p') ==> ((p' ==> ((((vsum (m .. (SUC n))) f) = ((vector_add ((vsum (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n)))) = q')) ==> (((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> (((vsum (m .. (SUC n))) f) = ((vector_add ((vsum (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 f2 c==> c==> f2 c= c= cvsum * * part c.. f1 cSUC f0 f3 cvector_add cvsum * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f3 * f3 cSUC f0 b0 c= c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= cvsum * * part c.. f1 cSUC f0 f3 cvector_add cvsum * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f3 * f3 cSUC f0 c==> f2 b0 f4
+ ((((NUMERAL _0) < n) /\ (m <= n)) ==> (((vsum (m .. n)) f) = ((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) (f n)))) |- (((((NUMERAL _0) < n) /\ (m <= n)) ==> (((vsum (m .. n)) f) = ((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) (f n)))) /\ ((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> (((vsum (m .. (SUC n))) f) = ((vector_add ((vsum (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n))))))
T c==> c==> c/\ c< cNUMERAL c_0 f0 c<= f1 f0 c= cvsum * * part c.. f1 f0 f2 cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f2 * f2 f0 c/\ c==> c/\ c< cNUMERAL c_0 f0 c<= f1 f0 c= cvsum * * part c.. f1 f0 f2 cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f2 * f2 f0 c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= cvsum * * part c.. f1 cSUC f0 f2 cvector_add cvsum * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f2 * f2 cSUC f0
+ |- (T = ((((NUMERAL _0) < (NUMERAL _0)) /\ (m <= (NUMERAL _0))) ==> (((vsum (m .. (NUMERAL _0))) f) = ((vector_add ((vsum (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0))))))
T c= cT c==> c/\ c< cNUMERAL c_0 cNUMERAL c_0 c<= f0 cNUMERAL c_0 c= cvsum * * part c.. f0 cNUMERAL c_0 f1 cvector_add cvsum * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 * f1 cNUMERAL c_0
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
+ |- ((((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) = (((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n)))) ==> (((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> ((((vsum (m .. (SUC n))) f) = ((vector_add ((vsum (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n)))) = q')) ==> (((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> (((vsum (m .. (SUC n))) f) = ((vector_add ((vsum (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n))))) = ((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> q')))) = (((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> ((((vsum (m .. (SUC n))) f) = ((vector_add ((vsum (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n)))) = q')) ==> (((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> (((vsum (m .. (SUC n))) f) = ((vector_add ((vsum (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n))))) = ((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> q'))))
T c= c==> c= c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c==> c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= c= cvsum * * part c.. f1 cSUC f0 f2 cvector_add cvsum * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f2 * f2 cSUC f0 f3 c= c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= cvsum * * part c.. f1 cSUC f0 f2 cvector_add cvsum * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f2 * f2 cSUC f0 c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 f3 c==> c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= c= cvsum * * part c.. f1 cSUC f0 f2 cvector_add cvsum * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f2 * f2 cSUC f0 f3 c= c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= cvsum * * part c.. f1 cSUC f0 f2 cvector_add cvsum * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f2 * f2 cSUC f0 c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 f3
- |- (((!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> ((f (NUMERAL _0)) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) ==> ((\e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> ((f (NUMERAL _0)) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e')) = ((\e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> ((f (NUMERAL _0)) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= * f2 cNUMERAL c_0 f3 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b0 c= cCOND c= f0 cNUMERAL c_0 * f2 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND f1 f3 b0 * / c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= * f2 cNUMERAL c_0 f3 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b0 c= cCOND c= f0 cNUMERAL c_0 * f2 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND f1 f3 b0 f4 * / c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= * f2 cNUMERAL c_0 f3 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b0 c= cCOND c= f0 cNUMERAL c_0 * f2 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND f1 f3 b0 f4
- F |- (F = T)
T c==> cF c= cF cT
- |- ((\t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> ((f (NUMERAL _0)) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= * f2 cNUMERAL c_0 b0 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b1 c= cCOND c= f0 cNUMERAL c_0 * f2 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND f1 b0 b1 f3
- |- (((!g'. (!t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> ((f (NUMERAL _0)) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> ((f (NUMERAL _0)) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> ((f (NUMERAL _0)) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= f0 cNUMERAL c_0 b0 c==> c==> b0 c= * f1 cNUMERAL c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 * / ! ! c==> c= c= f0 cNUMERAL c_0 b0 c==> c==> b0 c= * f1 cNUMERAL c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f2 * / ! ! c==> c= c= f0 cNUMERAL c_0 b0 c==> c==> b0 c= * f1 cNUMERAL c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f2
- |- (((!t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> ((f (NUMERAL _0)) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> ((f (NUMERAL _0)) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> ((f (NUMERAL _0)) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= * f2 cNUMERAL c_0 b0 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b1 c= cCOND c= f0 cNUMERAL c_0 * f2 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND f1 b0 b1 * / ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= * f2 cNUMERAL c_0 b0 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b1 c= cCOND c= f0 cNUMERAL c_0 * f2 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND f1 b0 b1 f3 * / ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= * f2 cNUMERAL c_0 b0 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b1 c= cCOND c= f0 cNUMERAL c_0 * f2 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND f1 b0 b1 f3
- |- ((m = (NUMERAL _0)) ==> ((f (NUMERAL _0)) = (f (NUMERAL _0))))
T c==> c= f0 cNUMERAL c_0 c= * f1 cNUMERAL c_0 * f1 cNUMERAL c_0
- |- ((\e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> ((f (NUMERAL _0)) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e')
T * / c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= * f2 cNUMERAL c_0 f3 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b0 c= cCOND c= f0 cNUMERAL c_0 * f2 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND f1 f3 b0 f4
- ((NUMERAL _0) = m) |- (m = (NUMERAL _0))
T c==> c= cNUMERAL c_0 f0 c= f0 cNUMERAL c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (~ (m = (NUMERAL _0))) |- (((NUMERAL _0) = m) = F)
T c==> c~ c= f0 cNUMERAL c_0 c= c= cNUMERAL c_0 f0 cF
- (((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) |- (((NUMERAL _0) < (SUC n)) = T)
T c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= c< cNUMERAL c_0 cSUC f0 cT
- |- ((((m = (NUMERAL _0)) = (m = (NUMERAL _0))) ==> (((m = (NUMERAL _0)) ==> ((f (NUMERAL _0)) = t')) ==> (((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND (m = (NUMERAL _0))) t') e'))))) = (((m = (NUMERAL _0)) ==> ((f (NUMERAL _0)) = t')) ==> (((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND (m = (NUMERAL _0))) t') e')))))
T c= c==> c= c= f0 cNUMERAL c_0 c= f0 cNUMERAL c_0 c==> c==> c= f0 cNUMERAL c_0 c= * f1 cNUMERAL c_0 f2 c==> c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 f3 c= cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND c= f0 cNUMERAL c_0 f2 f3 c==> c==> c= f0 cNUMERAL c_0 c= * f1 cNUMERAL c_0 f2 c==> c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 f3 c= cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND c= f0 cNUMERAL c_0 f2 f3
- |- ((((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = (vec (NUMERAL _0)))) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))))) = ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0)))))
T c= c==> c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 cvec cNUMERAL c_0 c= cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 cvec cNUMERAL c_0 c= cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 cvec cNUMERAL c_0
- (~ T) |- (T = F)
T c==> c~ cT c= cT cF
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- (m = (NUMERAL _0)) |- ((m = (NUMERAL _0)) /\ ((f (NUMERAL _0)) = (f (NUMERAL _0))))
T c==> c= f0 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= * f1 cNUMERAL c_0 * f1 cNUMERAL c_0
