N Reduction3.size_dest_triple0_cons
C |- (!f. (!u. (!v. (!n. (!uvns. ((((MEM u) f) /\ ((MEM v) f)) ==> ((sizel (((dest_triple0 f) NIL) ((CONS (u , (v , n))) uvns))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))))))))
T c==> c/\ cMEM f0 f1 cMEM f2 f1 c= csizel cdest_triple0 f1 cNIL cCONS c, f0 c, f2 f3 f4 c+ cSUC f3 csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f4
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D SELECT_AX
A |- (!P. (!x. ((P x) ==> (P (@ P)))))
T c==> * f0 f1 * f0 c@ f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D FORALL_BOOL_THM
A |- ((!b. (P b)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D I_DEF
A |- (I = (\x. x))
T c= part cI / b0
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D GABS_DEF
A |- (!P. ((GABS P) = (@ P)))
T c= cGABS f0 c@ f0
D GEQ_DEF
A |- (!a. (!b. (((GEQ a) b) = (a = b))))
T c= cGEQ f0 f1 c= f0 f1
D pair_RECURSION
A |- (!PAIR'. (?fn. (!a0. (!a1. ((fn (a0 , a1)) = ((PAIR' a0) a1))))))
T c? / ! ! c= * b0 c, b1 b2 * * f0 b1 b2
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D Ssrnat.add0n
A |- (!n. (((NUMERAL _0) + n) = n))
T c= c+ cNUMERAL c_0 f0 f0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D ADD_ASSOC
A |- (!m. (!n. (!p. ((m + (n + p)) = ((m + n) + p)))))
T c= c+ f0 c+ f1 f2 c+ c+ f0 f1 f2
D ADD_AC
A |- (((m + n) = (n + m)) /\ ((((m + n) + p) = (m + (n + p))) /\ ((m + (n + p)) = (n + (m + p)))))
T c/\ c= c+ f0 f1 c+ f1 f0 c/\ c= c+ c+ f0 f1 f2 c+ f0 c+ f1 f2 c= c+ f0 c+ f1 f2 c+ f1 c+ f0 f2
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D ADD1
A |- (!m. ((SUC m) = (m + (NUMERAL (BIT1 _0)))))
T c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
D Ssrnat.mul0n
A |- (!n. (((NUMERAL _0) * n) = (NUMERAL _0)))
T c= c* cNUMERAL c_0 f0 cNUMERAL c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D Ssrnat.mul1n
A |- (!n. (((NUMERAL (BIT1 _0)) * n) = n))
T c= c* cNUMERAL cBIT1 c_0 f0 f0
D LEFT_ADD_DISTRIB
A |- (!m. (!n. (!p. ((m * (n + p)) = ((m * n) + (m * p))))))
T c= c* f0 c+ f1 f2 c+ c* f0 f1 c* f0 f2
D MULT_AC
A |- (((m * n) = (n * m)) /\ ((((m * n) * p) = (m * (n * p))) /\ ((m * (n * p)) = (n * (m * p)))))
T c/\ c= c* f0 f1 c* f1 f0 c/\ c= c* c* f0 f1 f2 c* f0 c* f1 f2 c= c* f0 c* f1 f2 c* f1 c* f0 f2
D Ssrnat.expnS
A |- (!m. (!n. ((m EXP (SUC n)) = (m * (m EXP n)))))
T c= cEXP f0 cSUC f1 c* f0 cEXP f0 f1
D Ssrnat.expn0
A |- (!m. ((m EXP (NUMERAL _0)) = (NUMERAL (BIT1 _0))))
T c= cEXP f0 cNUMERAL c_0 cNUMERAL cBIT1 c_0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D APPEND
A |- ((!l. (((APPEND NIL) l) = l)) /\ (!h. (!t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))))))
T c/\ ! c= cAPPEND cNIL b0 b0 ! ! ! c= cAPPEND cCONS b0 b1 b2 cCONS b0 cAPPEND b1 b2
D NOT_CONS_NIL
A |- (!h. (!t. (~ (((CONS h) t) = NIL))))
T c~ c= cCONS f0 f1 cNIL
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_EQ
A |- (!x. (!y. ((~ (x = y)) = (((int_lt x) y) \/ ((int_lt y) x)))))
T c= c~ c= f0 f1 c\/ cint_lt f0 f1 cint_lt f1 f0
D INT_OF_NUM_ADD
A |- (!m. (!n. (((int_add (int_of_num m)) (int_of_num n)) = (int_of_num (m + n)))))
T c= cint_add cint_of_num f0 cint_of_num f1 cint_of_num c+ f0 f1
D INT_OF_NUM_EQ
A |- (!m. (!n. (((int_of_num m) = (int_of_num n)) = (m = n))))
T c= c= cint_of_num f0 cint_of_num f1 c= f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D Truong_tactic.hold_def
A |- (hold = I)
T c= part chold part cI
D Seq.size_nseq
A |- (!n. (!x. ((sizel ((nseq n) x)) = n)))
T c= csizel cnseq f0 f1 f0
D Seq.size_cat
A |- (!s1. (!s2. ((sizel ((cat s1) s2)) = ((sizel s1) + (sizel s2)))))
T c= csizel ccat f0 f1 c+ csizel f0 csizel f1
D Seq2.size1
A |- (!x. ((sizel ((CONS x) NIL)) = (NUMERAL (BIT1 _0))))
T c= csizel cCONS f0 cNIL cNUMERAL cBIT1 c_0
D Tame_defs2.dest_triple0
A |- (((((dest_triple0 f) sofar) NIL) = sofar) /\ ((((dest_triple0 f) sofar) ((CONS uvn) uvns)) = ((LET (GABS (\f. (!u. (!v. (!n. ((GEQ (f (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (sofar = NIL)) (((dest_triple0 f) (flatten ((CONS sofar) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS sofar) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) uvns)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS sofar) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)) (((dest_triple0 f) (flatten ((CONS sofar) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) uvns))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST sofar)))))) ((nseq n) NONE)))))))))) uvn)))
T c/\ c= cdest_triple0 f0 f1 cNIL f1 c= cdest_triple0 f0 f1 cCONS f2 f3 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f1 cNIL cdest_triple0 f0 cflatten cCONS f1 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f3 cCOND c= b5 b1 cdest_triple0 f0 cflatten cCONS f1 cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f3 cCOND c= cnext_el f0 b5 b1 cdest_triple0 f0 cflatten cCONS f1 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f3 cdest_triple0 f0 cflatten cCONS f1 cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f3 cMAP part cSOME cbetwn f0 b5 b1 cthe cLAST f1 cnseq b3 cNONE f2
D Tame_list.APPEND_cat
A |- (APPEND = cat)
T c= part cAPPEND part ccat
D Tame_list.concat_flatten
A |- (!x. (!xs. (((flatten NIL) = NIL) /\ ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs))))))
T c/\ c= cflatten cNIL cNIL c= cflatten cCONS f0 f1 cAPPEND f0 cflatten f1
D Tame_list.upper_case
A |- ((map = MAP) /\ ((sizel = LENGTH) /\ ((filter = FILTER) /\ ((rev = REVERSE) /\ ((!s. (!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s))))) /\ ((cat = APPEND) /\ (all = ALL)))))))
T c/\ c= part cmap part cMAP c/\ c= part csizel part cLENGTH c/\ c= part cfilter part cFILTER c/\ c= part crev part cREVERSE c/\ ! ! c==> c~ c= b0 cNIL c= clast b1 b0 cLAST b0 c/\ c= part ccat part cAPPEND c= part call part cALL
D Reduction3.dest_triple0_cat
A |- (!uvns. (!f. (!s. (!s'. ((~ (s' = NIL)) ==> ((((dest_triple0 f) ((cat s) s')) uvns) = ((cat s) (((dest_triple0 f) s') uvns))))))))
T c==> c~ c= f0 cNIL c= cdest_triple0 f1 ccat f2 f0 f3 ccat f2 cdest_triple0 f1 f0 f3
- |- ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all))))
T c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
- |- (~ (NIL = ((CONS h) t)))
T c~ c= cNIL cCONS f0 f1
+ (ns = ((nseq n) NONE)), ((MEM u) f), ((MEM v) f) |- (((the (LAST NIL)) = u0) ==> ((((MAP SOME) (((betwn f) u0) u)) = b) ==> (hold ((((sizel ((CONS (SOME u)) NIL)) + (sizel ns)) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))))))
T c==> c= f0 cnseq f1 cNONE c==> cMEM f2 f3 c==> cMEM f4 f3 c==> c= cthe cLAST cNIL f5 c==> c= cMAP part cSOME cbetwn f3 f5 f2 f6 chold c= c+ c+ csizel cCONS cSOME f2 cNIL csizel f0 csizel cdest_triple0 f3 cCONS cSOME f4 cNIL f7 c+ cSUC f1 csizel cdest_triple0 f3 cCONS cSOME f4 cNIL f7
- (ns = ((nseq n) NONE)) |- (((MEM v) f) = ((MEM v) f))
T c==> c= f0 cnseq f1 cNONE c= cMEM f2 f3 cMEM f2 f3
+ |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) = (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))))
T c= c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1
+ |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
+ ((\ns. (ns = ((nseq n) NONE))) ns) |- (ns = ((nseq n) NONE))
T c==> * / c= b0 cnseq f0 cNONE f1 c= f1 cnseq f0 cNONE
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ |- ((!uvns. ((((MEM u) f) /\ ((MEM v) f)) ==> ((sizel ((LET (GABS (\f. (!u. (!v. (!n. ((GEQ (f (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))))) ((nseq n) NONE)))))))))) (u , (v , n)))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))))) = T)
T c= ! c==> c/\ cMEM f0 f1 cMEM f2 f1 c= csizel cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cdest_triple0 f1 cflatten cCONS cNIL cCONS cCONS cSOME b2 cNIL cCONS b5 cCONS cCONS cSOME b3 cNIL cNIL b0 cMAP part cSOME cbetwn f1 b6 b2 cthe cLAST cNIL cnseq b4 cNONE c, f0 c, f2 f3 c+ cSUC f3 csizel cdest_triple0 f1 cCONS cSOME f2 cNIL b0 cT
+ |- (a ==> (hold a))
T c==> f0 chold f0
+ |- ((flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = ((cat ((APPEND ((CONS (SOME u)) NIL)) ns)) ((CONS (SOME v)) NIL)))
T c= cflatten cCONS cNIL cCONS cCONS cSOME f0 cNIL cCONS f1 cCONS cCONS cSOME f2 cNIL cNIL ccat cAPPEND cCONS cSOME f0 cNIL f1 cCONS cSOME f2 cNIL
+ (u0 = (the (LAST NIL))), (b = ((MAP SOME) (((betwn f) u0) u))), (ns = ((nseq n) NONE)), ((MEM u) f), ((MEM v) f) |- ((((sizel ((CONS (SOME u)) NIL)) + (sizel ns)) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))
T c==> c= f0 cthe cLAST cNIL c==> c= f1 cMAP part cSOME cbetwn f2 f0 f3 c==> c= f4 cnseq f5 cNONE c==> cMEM f3 f2 c==> cMEM f6 f2 c= c+ c+ csizel cCONS cSOME f3 cNIL csizel f4 csizel cdest_triple0 f2 cCONS cSOME f6 cNIL f7 c+ cSUC f5 csizel cdest_triple0 f2 cCONS cSOME f6 cNIL f7
- |- ((FILTER = filter) /\ ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all)))))
T c/\ c= part cFILTER part cfilter c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ |- ((!f. (!s. (!s'. (!uvns. (!P. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns)))))))) ==> (!P. (!f. (!s. (!s'. (!uvns. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns)))))))))
T c==> ! ! ! ! ! c==> c/\ c~ c= b2 cNIL * b4 ccat b1 cdest_triple0 b0 b2 b3 * b4 cdest_triple0 b0 ccat b1 b2 b3 ! ! ! ! ! c==> c/\ c~ c= b3 cNIL * b0 ccat b2 cdest_triple0 b1 b3 b4 * b0 cdest_triple0 b1 ccat b2 b3 b4
- (~ F), (~ (P b)), (P c), (b = c) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c/\ c~ cF cF
+ |- (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns)))
T c==> c/\ c~ c= f0 cNIL * f1 ccat f2 cdest_triple0 f3 f0 f4 * f1 cdest_triple0 f3 ccat f2 f0 f4
+ |- ((!n. (!uvns. ((((MEM u) f) /\ ((MEM v) f)) ==> ((sizel ((LET (GABS (\f. (!u. (!v. (!n. ((GEQ (f (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))))) ((nseq n) NONE)))))))))) (u , (v , n)))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))))) = T)
T c= ! ! c==> c/\ cMEM f0 f1 cMEM f2 f1 c= csizel cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cdest_triple0 f1 cflatten cCONS cNIL cCONS cCONS cSOME b3 cNIL cCONS b5 cCONS cCONS cSOME b4 cNIL cNIL b1 cMAP part cSOME cbetwn f1 b6 b3 cthe cLAST cNIL cnseq b5 cNONE c, f0 c, f2 b0 c+ cSUC b0 csizel cdest_triple0 f1 cCONS cSOME f2 cNIL b1 cT
+ |- (((?ns. (ns = ((nseq n) NONE))) ==> ((sizel ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))))) ((nseq n) NONE))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))) = ((sizel ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))))) ((nseq n) NONE))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))))
T c= c==> c? / c= b0 cnseq f0 cNONE c= csizel cLET / cLET_END cLET / cLET_END cLET / cLET_END cdest_triple0 f1 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL f4 cMAP part cSOME cbetwn f1 b1 f2 cthe cLAST cNIL cnseq f0 cNONE c+ cSUC f0 csizel cdest_triple0 f1 cCONS cSOME f3 cNIL f4 c= csizel cLET / cLET_END cLET / cLET_END cLET / cLET_END cdest_triple0 f1 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL f4 cMAP part cSOME cbetwn f1 b1 f2 cthe cLAST cNIL cnseq f0 cNONE c+ cSUC f0 csizel cdest_triple0 f1 cCONS cSOME f3 cNIL f4
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
- |- ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all)))
T c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
+ (ns = ((nseq n) NONE)), ((MEM u) f), ((MEM v) f) |- ((?u0. (u0 = (the (LAST NIL)))) ==> ((sizel ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))))
T c==> c= f0 cnseq f1 cNONE c==> cMEM f2 f3 c==> cMEM f4 f3 c==> c? / c= b0 cthe cLAST cNIL c= csizel cLET / cLET_END cLET / cLET_END cdest_triple0 f3 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS f0 cCONS cCONS cSOME f4 cNIL cNIL f5 cMAP part cSOME cbetwn f3 b0 f2 cthe cLAST cNIL c+ cSUC f1 csizel cdest_triple0 f3 cCONS cSOME f4 cNIL f5
+ |- (((!s'. ((~ (s' = NIL)) ==> ((((dest_triple0 f) ((cat s) s')) uvns) = ((cat s) (((dest_triple0 f) s') uvns))))) ==> ((\s'. ((~ (s' = NIL)) ==> ((((dest_triple0 f) ((cat s) s')) uvns) = ((cat s) (((dest_triple0 f) s') uvns))))) s')) = ((\s'. ((~ (s' = NIL)) ==> ((((dest_triple0 f) ((cat s) s')) uvns) = ((cat s) (((dest_triple0 f) s') uvns))))) s'))
T c= c==> ! c==> c~ c= b0 cNIL c= cdest_triple0 f0 ccat f1 b0 f2 ccat f1 cdest_triple0 f0 b0 f2 * / c==> c~ c= b0 cNIL c= cdest_triple0 f0 ccat f1 b0 f2 ccat f1 cdest_triple0 f0 b0 f2 f3 * / c==> c~ c= b0 cNIL c= cdest_triple0 f0 ccat f1 b0 f2 ccat f1 cdest_triple0 f0 b0 f2 f3
+ |- ((\c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))) c)
T * / c==> c==> f0 c= f1 b0 ! c==> c/\ f0 * b1 b0 * b1 f1 f2
+ |- (((int_add (int_of_num n)) ((int_add (int_of_num (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))) (int_of_num (NUMERAL (BIT1 _0))))) = ((int_add (int_of_num n)) ((int_add (int_of_num (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))) (int_of_num (NUMERAL (BIT1 _0))))))
T c= cint_add cint_of_num f0 cint_add cint_of_num csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f3 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_add cint_of_num csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f3 cint_of_num cNUMERAL cBIT1 c_0
+ (P c), (b = c) |- (P b)
T c==> * f0 f1 c==> c= f2 f1 * f0 f2
+ |- ((~ (x = y)) = (((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y) \/ ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x)))
T c= c~ c= f0 f1 c\/ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((b = c) ==> (!P. ((P c) ==> (P b)))) = T)
T c= c==> c= f0 f1 ! c==> * b0 f1 * b0 f0 cT
+ |- ((T ==> (?ns. (ns = ((nseq n) NONE)))) = (?ns. (ns = ((nseq n) NONE))))
T c= c==> cT c? / c= b0 cnseq f0 cNONE c? / c= b0 cnseq f0 cNONE
+ (u0 = (the (LAST NIL))), (ns = ((nseq n) NONE)), ((MEM u) f), ((MEM v) f) |- (!b. (((\b. (b = ((MAP SOME) (((betwn f) u0) u)))) b) ==> ((sizel ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))))
T c==> c= f0 cthe cLAST cNIL c==> c= f1 cnseq f2 cNONE c==> cMEM f3 f4 c==> cMEM f5 f4 ! c==> * / c= b1 cMAP part cSOME cbetwn f4 f0 f3 b0 c= csizel cLET / cLET_END cdest_triple0 f4 cflatten cCONS cNIL cCONS cCONS cSOME f3 cNIL cCONS f1 cCONS cCONS cSOME f5 cNIL cNIL f6 cMAP part cSOME cbetwn f4 f0 f3 c+ cSUC f2 csizel cdest_triple0 f4 cCONS cSOME f5 cNIL f6
+ |- ((\x. ((sizel ((CONS x) NIL)) = (NUMERAL (BIT1 _0)))) x)
T * / c= csizel cCONS b0 cNIL cNUMERAL cBIT1 c_0 f0
+ |- (n = ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (u , (v , n)))))
T c= f0 c@ / ! ! c= * b0 c, b1 b2 b2 c@ / ! ! c= * b0 c, b1 b2 b2 c, f1 c, f2 f0
+ (u0 = (the (LAST NIL))), (b = ((MAP SOME) (((betwn f) u0) u))), (ns = ((nseq n) NONE)), ((MEM u) f), ((MEM v) f) |- ((sizel ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) b)) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))
T c==> c= f0 cthe cLAST cNIL c==> c= f1 cMAP part cSOME cbetwn f2 f0 f3 c==> c= f4 cnseq f5 cNONE c==> cMEM f3 f2 c==> cMEM f6 f2 c= csizel cLET / cLET_END cdest_triple0 f2 cflatten cCONS cNIL cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f6 cNIL cNIL f7 f1 c+ cSUC f5 csizel cdest_triple0 f2 cCONS cSOME f6 cNIL f7
+ |- ((flatten NIL) = NIL)
T c= cflatten cNIL cNIL
- |- ((\x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s)))) x0)
T * / c==> c~ c= f0 cNIL c= clast b0 f0 cLAST f0 f1
+ ((\u0. (u0 = (the (LAST NIL)))) u0) |- (((u0 = (the (LAST NIL))) ==> ((sizel ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))) = ((sizel ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))))
T c==> * / c= b0 cthe cLAST cNIL f0 c= c==> c= f0 cthe cLAST cNIL c= csizel cLET / cLET_END cLET / cLET_END cdest_triple0 f1 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f5 cMAP part cSOME cbetwn f1 b0 f2 cthe cLAST cNIL c+ cSUC f6 csizel cdest_triple0 f1 cCONS cSOME f4 cNIL f5 c= csizel cLET / cLET_END cLET / cLET_END cdest_triple0 f1 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f5 cMAP part cSOME cbetwn f1 b0 f2 cthe cLAST cNIL c+ cSUC f6 csizel cdest_triple0 f1 cCONS cSOME f4 cNIL f5
+ |- (((MEM u) f) ==> (((MEM v) f) ==> ((((nseq n) NONE) = ((nseq n) NONE)) ==> (((the (LAST NIL)) = u0) ==> ((((MAP SOME) (((betwn f) u0) u)) = b) ==> (hold ((((sizel ((CONS (SOME u)) NIL)) + (sizel ((nseq n) NONE))) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))))))))
T c==> cMEM f0 f1 c==> cMEM f2 f1 c==> c= cnseq f3 cNONE cnseq f3 cNONE c==> c= cthe cLAST cNIL f4 c==> c= cMAP part cSOME cbetwn f1 f4 f0 f5 chold c= c+ c+ csizel cCONS cSOME f0 cNIL csizel cnseq f3 cNONE csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f6 c+ cSUC f3 csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f6
+ |- ((T ==> (?b. (b = ((MAP SOME) (((betwn f) u0) u))))) = (?b. (b = ((MAP SOME) (((betwn f) u0) u)))))
T c= c==> cT c? / c= b0 cMAP part cSOME cbetwn f0 f1 f2 c? / c= b0 cMAP part cSOME cbetwn f0 f1 f2
+ |- ((!s. (!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s))))) /\ ((cat = APPEND) /\ (all = ALL)))
T c/\ ! ! c==> c~ c= b0 cNIL c= clast b1 b0 cLAST b0 c/\ c= part ccat part cAPPEND c= part call part cALL
+ (ns = ((nseq n) NONE)) |- (((sizel ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))))) ((nseq n) NONE))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))) = ((sizel ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))))) ns)) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))))
T c==> c= f0 cnseq f1 cNONE c= c= csizel cLET / cLET_END cLET / cLET_END cLET / cLET_END cdest_triple0 f2 cflatten cCONS cNIL cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL f5 cMAP part cSOME cbetwn f2 b1 f3 cthe cLAST cNIL cnseq f1 cNONE c+ cSUC f1 csizel cdest_triple0 f2 cCONS cSOME f4 cNIL f5 c= csizel cLET / cLET_END cLET / cLET_END cLET / cLET_END cdest_triple0 f2 cflatten cCONS cNIL cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL f5 cMAP part cSOME cbetwn f2 b1 f3 cthe cLAST cNIL f0 c+ cSUC f1 csizel cdest_triple0 f2 cCONS cSOME f4 cNIL f5
+ |- ((((CONS h) t) = NIL) = F)
T c= c= cCONS f0 f1 cNIL cF
+ |- (((!x. ((sizel ((nseq n) x)) = n)) ==> ((\x. ((sizel ((nseq n) x)) = n)) x)) = ((\x. ((sizel ((nseq n) x)) = n)) x))
T c= c==> ! c= csizel cnseq f0 b0 f0 * / c= csizel cnseq f0 b0 f0 f1 * / c= csizel cnseq f0 b0 f0 f1
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (MAP = map)
T c= part cMAP part cmap
- |- (LENGTH = sizel)
T c= part cLENGTH part csizel
+ |- (((!s1. (!s2. ((sizel ((cat s1) s2)) = ((sizel s1) + (sizel s2))))) ==> ((\s1. (!s2. ((sizel ((cat s1) s2)) = ((sizel s1) + (sizel s2))))) s1)) = ((\s1. (!s2. ((sizel ((cat s1) s2)) = ((sizel s1) + (sizel s2))))) s1))
T c= c==> ! ! c= csizel ccat b0 b1 c+ csizel b0 csizel b1 * / ! c= csizel ccat b0 b1 c+ csizel b0 csizel b1 f0 * / ! c= csizel ccat b0 b1 c+ csizel b0 csizel b1 f0
+ |- ((\uvns. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns)))) uvns)
T * / c==> c/\ c~ c= f0 cNIL * f1 ccat f2 cdest_triple0 f3 f0 b0 * f1 cdest_triple0 f3 ccat f2 f0 b0 f4
+ |- (((MEM v) f) ==> ((((nseq n) NONE) = ((nseq n) NONE)) ==> (((the (LAST NIL)) = u0) ==> ((((MAP SOME) (((betwn f) u0) u)) = b) ==> (hold ((((sizel ((CONS (SOME u)) NIL)) + (sizel ((nseq n) NONE))) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))))))))
T c==> cMEM f0 f1 c==> c= cnseq f2 cNONE cnseq f2 cNONE c==> c= cthe cLAST cNIL f3 c==> c= cMAP part cSOME cbetwn f1 f3 f4 f5 chold c= c+ c+ csizel cCONS cSOME f4 cNIL csizel cnseq f2 cNONE csizel cdest_triple0 f1 cCONS cSOME f0 cNIL f6 c+ cSUC f2 csizel cdest_triple0 f1 cCONS cSOME f0 cNIL f6
+ |- (T ==> (?ns. (ns = ((nseq n) NONE))))
T c==> cT c? / c= b0 cnseq f0 cNONE
- |- ((\l. (!m. ((((APPEND l) m) = NIL) = ((l = NIL) /\ (m = NIL))))) l)
T * / ! c= c= cAPPEND b0 b1 cNIL c/\ c= b0 cNIL c= b1 cNIL f0
+ (ns = ((nseq n) NONE)), ((MEM u) f), ((MEM v) f) |- (((!x. (((\u0. (u0 = (the (LAST NIL)))) x) ==> ((sizel ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))))) ==> ((?u0. (u0 = (the (LAST NIL)))) ==> ((sizel ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))))) = ((?u0. (u0 = (the (LAST NIL)))) ==> ((sizel ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))))
T c==> c= f0 cnseq f1 cNONE c==> cMEM f2 f3 c==> cMEM f4 f3 c= c==> ! c==> * / c= b1 cthe cLAST cNIL b0 c= csizel cLET / cLET_END cLET / cLET_END cdest_triple0 f3 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS f0 cCONS cCONS cSOME f4 cNIL cNIL f5 cMAP part cSOME cbetwn f3 b1 f2 cthe cLAST cNIL c+ cSUC f1 csizel cdest_triple0 f3 cCONS cSOME f4 cNIL f5 c==> c? / c= b0 cthe cLAST cNIL c= csizel cLET / cLET_END cLET / cLET_END cdest_triple0 f3 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS f0 cCONS cCONS cSOME f4 cNIL cNIL f5 cMAP part cSOME cbetwn f3 b0 f2 cthe cLAST cNIL c+ cSUC f1 csizel cdest_triple0 f3 cCONS cSOME f4 cNIL f5 c==> c? / c= b0 cthe cLAST cNIL c= csizel cLET / cLET_END cLET / cLET_END cdest_triple0 f3 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS f0 cCONS cCONS cSOME f4 cNIL cNIL f5 cMAP part cSOME cbetwn f3 b0 f2 cthe cLAST cNIL c+ cSUC f1 csizel cdest_triple0 f3 cCONS cSOME f4 cNIL f5
+ |- (((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) (v , n)) = ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (u , (v , n)))))
T c= c@ / ! ! c= * b0 c, b1 b2 b1 c, f0 f1 c@ / ! ! c= * b0 c, b1 b2 b1 c@ / ! ! c= * b0 c, b1 b2 b2 c, f2 c, f0 f1
+ |- (((\x. ((\v. ((sizel v) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))) x)) (((dest_triple0 f) ((cat ((APPEND ((CONS (SOME u)) NIL)) ns)) ((CONS (SOME v)) NIL))) uvns)) = ((\v. ((sizel v) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))) (((dest_triple0 f) ((cat ((APPEND ((CONS (SOME u)) NIL)) ns)) ((CONS (SOME v)) NIL))) uvns)))
T c= * / * / c= csizel b1 c+ cSUC f0 csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f3 b0 cdest_triple0 f1 ccat cAPPEND cCONS cSOME f4 cNIL f5 cCONS cSOME f2 cNIL f3 * / c= csizel b0 c+ cSUC f0 csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f3 cdest_triple0 f1 ccat cAPPEND cCONS cSOME f4 cNIL f5 cCONS cSOME f2 cNIL f3
+ |- (((sizel ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))))) ((nseq n) NONE))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))) = ((sizel ((LET (GABS (\f. (!u. (!v. (!n. ((GEQ (f (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))))) ((nseq n) NONE)))))))))) (u , (v , n)))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))))
T c= c= csizel cLET / cLET_END cLET / cLET_END cLET / cLET_END cdest_triple0 f0 cflatten cCONS cNIL cCONS cCONS cSOME f1 cNIL cCONS b0 cCONS cCONS cSOME f2 cNIL cNIL f3 cMAP part cSOME cbetwn f0 b1 f1 cthe cLAST cNIL cnseq f4 cNONE c+ cSUC f4 csizel cdest_triple0 f0 cCONS cSOME f2 cNIL f3 c= csizel cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cdest_triple0 f0 cflatten cCONS cNIL cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f3 cMAP part cSOME cbetwn f0 b5 b1 cthe cLAST cNIL cnseq b3 cNONE c, f1 c, f2 f4 c+ cSUC f4 csizel cdest_triple0 f0 cCONS cSOME f2 cNIL f3
+ (u0 = (the (LAST NIL))), (ns = ((nseq n) NONE)), ((MEM u) f), ((MEM v) f) |- ((sizel ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) u0)) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))
T c==> c= f0 cthe cLAST cNIL c==> c= f1 cnseq f2 cNONE c==> cMEM f3 f4 c==> cMEM f5 f4 c= csizel cLET / cLET_END cLET / cLET_END cdest_triple0 f4 cflatten cCONS cNIL cCONS cCONS cSOME f3 cNIL cCONS f1 cCONS cCONS cSOME f5 cNIL cNIL f6 cMAP part cSOME cbetwn f4 b0 f3 f0 c+ cSUC f2 csizel cdest_triple0 f4 cCONS cSOME f5 cNIL f6
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((\m. ((((APPEND l) m) = NIL) = ((l = NIL) /\ (m = NIL)))) m)
T * / c= c= cAPPEND f0 b0 cNIL c/\ c= f0 cNIL c= b0 cNIL f1
+ (u0 = (the (LAST NIL))), (b = ((MAP SOME) (((betwn f) u0) u))), (ns = ((nseq n) NONE)), ((MEM u) f), ((MEM v) f) |- (((sizel ((APPEND ((CONS (SOME u)) NIL)) ns)) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))
T c==> c= f0 cthe cLAST cNIL c==> c= f1 cMAP part cSOME cbetwn f2 f0 f3 c==> c= f4 cnseq f5 cNONE c==> cMEM f3 f2 c==> cMEM f6 f2 c= c+ csizel cAPPEND cCONS cSOME f3 cNIL f4 csizel cdest_triple0 f2 cCONS cSOME f6 cNIL f7 c+ cSUC f5 csizel cdest_triple0 f2 cCONS cSOME f6 cNIL f7
+ (!f. (!s. (!s'. (!uvns. (!P. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns)))))))) |- ((!s. (!s'. (!uvns. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns)))))) = T)
T c==> ! ! ! ! ! c==> c/\ c~ c= b2 cNIL * b4 ccat b1 cdest_triple0 b0 b2 b3 * b4 cdest_triple0 b0 ccat b1 b2 b3 c= ! ! ! c==> c/\ c~ c= b1 cNIL * f0 ccat b0 cdest_triple0 f1 b1 b2 * f0 cdest_triple0 f1 ccat b0 b1 b2 cT
- |- ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0)
T * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1
+ |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- |- (((!s. (!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s))))) ==> ((\s. (!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s))))) s)) = ((\s. (!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s))))) s))
T c= c==> ! ! c==> c~ c= b0 cNIL c= clast b1 b0 cLAST b0 * / ! c==> c~ c= b0 cNIL c= clast b1 b0 cLAST b0 f0 * / ! c==> c~ c= b0 cNIL c= clast b1 b0 cLAST b0 f0
- |- ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))
T c==> c~ c= cNIL f0 c= cLAST f0 clast f1 f0
+ |- (((((sizel ((CONS (SOME u)) NIL)) + (sizel ns)) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))) = (((sizel ((APPEND ((CONS (SOME u)) NIL)) ns)) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))))
T c= c= c+ c+ csizel cCONS cSOME f0 cNIL csizel f1 csizel cdest_triple0 f2 cCONS cSOME f3 cNIL f4 c+ cSUC f5 csizel cdest_triple0 f2 cCONS cSOME f3 cNIL f4 c= c+ csizel cAPPEND cCONS cSOME f0 cNIL f1 csizel cdest_triple0 f2 cCONS cSOME f3 cNIL f4 c+ cSUC f5 csizel cdest_triple0 f2 cCONS cSOME f3 cNIL f4
+ |- ((((sizel ((APPEND ((CONS (SOME u)) NIL)) ns)) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))) = ((~ (((CONS (SOME v)) NIL) = NIL)) /\ ((sizel ((cat ((APPEND ((CONS (SOME u)) NIL)) ns)) (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))))
T c= c= c+ csizel cAPPEND cCONS cSOME f0 cNIL f1 csizel cdest_triple0 f2 cCONS cSOME f3 cNIL f4 c+ cSUC f5 csizel cdest_triple0 f2 cCONS cSOME f3 cNIL f4 c/\ c~ c= cCONS cSOME f3 cNIL cNIL c= csizel ccat cAPPEND cCONS cSOME f0 cNIL f1 cdest_triple0 f2 cCONS cSOME f3 cNIL f4 c+ cSUC f5 csizel cdest_triple0 f2 cCONS cSOME f3 cNIL f4
+ ((MEM v) f) |- (((MEM v) f) /\ ((((nseq n) NONE) = ((nseq n) NONE)) ==> (((the (LAST NIL)) = u0) ==> ((((MAP SOME) (((betwn f) u0) u)) = b) ==> (hold ((((sizel ((CONS (SOME u)) NIL)) + (sizel ((nseq n) NONE))) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))))))))
T c==> cMEM f0 f1 c/\ cMEM f0 f1 c==> c= cnseq f2 cNONE cnseq f2 cNONE c==> c= cthe cLAST cNIL f3 c==> c= cMAP part cSOME cbetwn f1 f3 f4 f5 chold c= c+ c+ csizel cCONS cSOME f4 cNIL csizel cnseq f2 cNONE csizel cdest_triple0 f1 cCONS cSOME f0 cNIL f6 c+ cSUC f2 csizel cdest_triple0 f1 cCONS cSOME f0 cNIL f6
+ (u0 = (the (LAST NIL))), (b = ((MAP SOME) (((betwn f) u0) u))), (ns = ((nseq n) NONE)), ((MEM u) f), ((MEM v) f) |- ((sizel ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))
T c==> c= f0 cthe cLAST cNIL c==> c= f1 cMAP part cSOME cbetwn f2 f0 f3 c==> c= f4 cnseq f5 cNONE c==> cMEM f3 f2 c==> cMEM f6 f2 c= csizel cLET / cLET_END cdest_triple0 f2 cflatten cCONS cNIL cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f6 cNIL cNIL f7 cMAP part cSOME cbetwn f2 f0 f3 c+ cSUC f5 csizel cdest_triple0 f2 cCONS cSOME f6 cNIL f7
+ (u0 = (the (LAST NIL))), (b = ((MAP SOME) (((betwn f) u0) u))), (ns = ((nseq n) NONE)), ((MEM u) f), ((MEM v) f) |- ((\x. ((\v. ((sizel v) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))) x)) (((dest_triple0 f) ((cat ((APPEND ((CONS (SOME u)) NIL)) ns)) ((CONS (SOME v)) NIL))) uvns))
T c==> c= f0 cthe cLAST cNIL c==> c= f1 cMAP part cSOME cbetwn f2 f0 f3 c==> c= f4 cnseq f5 cNONE c==> cMEM f3 f2 c==> cMEM f6 f2 * / * / c= csizel b1 c+ cSUC f5 csizel cdest_triple0 f2 cCONS cSOME f6 cNIL f7 b0 cdest_triple0 f2 ccat cAPPEND cCONS cSOME f3 cNIL f4 cCONS cSOME f6 cNIL f7
+ |- ((\s. (!s'. (!uvns. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns)))))) s)
T * / ! ! c==> c/\ c~ c= b1 cNIL * f0 ccat b0 cdest_triple0 f1 b1 b2 * f0 cdest_triple0 f1 ccat b0 b1 b2 f2
+ |- ((\n. ((GEQ ((GABS (\_10633925. (!u. (!v. (!n. ((GEQ (_10633925 (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))))) ((nseq n) NONE))))))))) (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))))) ((nseq n) NONE))))) n)
T * / cGEQ cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cdest_triple0 f0 cflatten cCONS cNIL cCONS cCONS cSOME b2 cNIL cCONS b4 cCONS cCONS cSOME b3 cNIL cNIL f1 cMAP part cSOME cbetwn f0 b5 b2 cthe cLAST cNIL cnseq b4 cNONE c, f2 c, f3 b0 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cdest_triple0 f0 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS b1 cCONS cCONS cSOME f3 cNIL cNIL f1 cMAP part cSOME cbetwn f0 b2 f2 cthe cLAST cNIL cnseq b0 cNONE f4
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (!f. (!s. (!s'. (!uvns. (!P. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns)))))))) |- (!uvns. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns))))
T c==> ! ! ! ! ! c==> c/\ c~ c= b2 cNIL * b4 ccat b1 cdest_triple0 b0 b2 b3 * b4 cdest_triple0 b0 ccat b1 b2 b3 ! c==> c/\ c~ c= f0 cNIL * f1 ccat f2 cdest_triple0 f3 f0 b0 * f1 cdest_triple0 f3 ccat f2 f0 b0
+ |- (!u. (!v. (!n. (((\_10633923. (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10633923))) NIL)) ((CONS ns) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10633923)))) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10633923))))))) (the (LAST NIL)))))) ((nseq ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10633923))) NONE)))) (u , (v , n))) = (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))))) ((nseq n) NONE)))))))
T c= * / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cdest_triple0 f0 cflatten cCONS cNIL cCONS cCONS cSOME c@ / ! ! c= * b4 c, b5 b6 b5 b0 cNIL cCONS b1 cCONS cCONS cSOME c@ / ! ! c= * b4 c, b5 b6 b5 c@ / ! ! c= * b4 c, b5 b6 b6 b0 cNIL cNIL f1 cMAP part cSOME cbetwn f0 b2 c@ / ! ! c= * b3 c, b4 b5 b4 b0 cthe cLAST cNIL cnseq c@ / ! ! c= * b1 c, b2 b3 b3 c@ / ! ! c= * b1 c, b2 b3 b3 b0 cNONE c, f2 c, f3 f4 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cdest_triple0 f0 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL f1 cMAP part cSOME cbetwn f0 b1 f2 cthe cLAST cNIL cnseq f4 cNONE
+ ((MEM u) f), ((MEM v) f) |- ((((\ns. (ns = ((nseq n) NONE))) ns) ==> ((sizel ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))))) ((nseq n) NONE))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))) = T)
T c==> cMEM f0 f1 c==> cMEM f2 f1 c= c==> * / c= b0 cnseq f3 cNONE f4 c= csizel cLET / cLET_END cLET / cLET_END cLET / cLET_END cdest_triple0 f1 cflatten cCONS cNIL cCONS cCONS cSOME f0 cNIL cCONS b0 cCONS cCONS cSOME f2 cNIL cNIL f5 cMAP part cSOME cbetwn f1 b1 f0 cthe cLAST cNIL cnseq f3 cNONE c+ cSUC f3 csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f5 cT
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((sizel (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))) = ((sizel ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) b)) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))))
T c= c= csizel cdest_triple0 f0 cflatten cCONS cNIL cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL f4 c+ cSUC f5 csizel cdest_triple0 f0 cCONS cSOME f3 cNIL f4 c= csizel cLET / cLET_END cdest_triple0 f0 cflatten cCONS cNIL cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL f4 f6 c+ cSUC f5 csizel cdest_triple0 f0 cCONS cSOME f3 cNIL f4
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ |- ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs)))
T c= cflatten cCONS f0 f1 cAPPEND f0 cflatten f1
+ (ns = ((nseq n) NONE)), ((MEM u) f), ((MEM v) f) |- ((u0 = (the (LAST NIL))) ==> ((sizel ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))))
T c==> c= f0 cnseq f1 cNONE c==> cMEM f2 f3 c==> cMEM f4 f3 c==> c= f5 cthe cLAST cNIL c= csizel cLET / cLET_END cLET / cLET_END cdest_triple0 f3 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS f0 cCONS cCONS cSOME f4 cNIL cNIL f6 cMAP part cSOME cbetwn f3 b0 f2 cthe cLAST cNIL c+ cSUC f1 csizel cdest_triple0 f3 cCONS cSOME f4 cNIL f6
+ (u0 = (the (LAST NIL))), (b = ((MAP SOME) (((betwn f) u0) u))), (ns = ((nseq n) NONE)), ((MEM u) f), ((MEM v) f) |- ((((~ (((CONS (SOME v)) NIL) = NIL)) /\ ((\x. ((\v. ((sizel v) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))) x)) ((cat ((APPEND ((CONS (SOME u)) NIL)) ns)) (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))) ==> ((\x. ((\v. ((sizel v) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))) x)) (((dest_triple0 f) ((cat ((APPEND ((CONS (SOME u)) NIL)) ns)) ((CONS (SOME v)) NIL))) uvns))) = ((\x. ((\v. ((sizel v) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))) x)) (((dest_triple0 f) ((cat ((APPEND ((CONS (SOME u)) NIL)) ns)) ((CONS (SOME v)) NIL))) uvns)))
T c==> c= f0 cthe cLAST cNIL c==> c= f1 cMAP part cSOME cbetwn f2 f0 f3 c==> c= f4 cnseq f5 cNONE c==> cMEM f3 f2 c==> cMEM f6 f2 c= c==> c/\ c~ c= cCONS cSOME f6 cNIL cNIL * / * / c= csizel b1 c+ cSUC f5 csizel cdest_triple0 f2 cCONS cSOME f6 cNIL f7 b0 ccat cAPPEND cCONS cSOME f3 cNIL f4 cdest_triple0 f2 cCONS cSOME f6 cNIL f7 * / * / c= csizel b1 c+ cSUC f5 csizel cdest_triple0 f2 cCONS cSOME f6 cNIL f7 b0 cdest_triple0 f2 ccat cAPPEND cCONS cSOME f3 cNIL f4 cCONS cSOME f6 cNIL f7 * / * / c= csizel b1 c+ cSUC f5 csizel cdest_triple0 f2 cCONS cSOME f6 cNIL f7 b0 cdest_triple0 f2 ccat cAPPEND cCONS cSOME f3 cNIL f4 cCONS cSOME f6 cNIL f7
+ |- ((((int_add (int_of_num n)) ((int_add (int_of_num (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))) (int_of_num (NUMERAL (BIT1 _0))))) = ((int_add (int_of_num n)) ((int_add (int_of_num (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))) (int_of_num (NUMERAL (BIT1 _0)))))) = ((((NUMERAL (BIT1 _0)) + n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))))
T c= c= cint_add cint_of_num f0 cint_add cint_of_num csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f3 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_add cint_of_num csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f3 cint_of_num cNUMERAL cBIT1 c_0 c= c+ c+ cNUMERAL cBIT1 c_0 f0 csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f3 c+ cSUC f0 csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f3
+ |- ((\h. (!t. (~ (((CONS h) t) = NIL)))) h)
T * / ! c~ c= cCONS b0 b1 cNIL f0
+ |- (hold ((((sizel ((CONS (SOME u)) NIL)) + (sizel ((nseq n) NONE))) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))))
T chold c= c+ c+ csizel cCONS cSOME f0 cNIL csizel cnseq f1 cNONE csizel cdest_triple0 f2 cCONS cSOME f3 cNIL f4 c+ cSUC f1 csizel cdest_triple0 f2 cCONS cSOME f3 cNIL f4
+ |- ((filter = FILTER) /\ ((rev = REVERSE) /\ ((!s. (!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s))))) /\ ((cat = APPEND) /\ (all = ALL)))))
T c/\ c= part cfilter part cFILTER c/\ c= part crev part cREVERSE c/\ ! ! c==> c~ c= b0 cNIL c= clast b1 b0 cLAST b0 c/\ c= part ccat part cAPPEND c= part call part cALL
+ |- ((!u. (!v. (!n. (!uvns. ((((MEM u) f) /\ ((MEM v) f)) ==> ((sizel ((LET (GABS (\f. (!u. (!v. (!n. ((GEQ (f (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))))) ((nseq n) NONE)))))))))) (u , (v , n)))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))))))) = T)
T c= ! ! ! ! c==> c/\ cMEM b0 f0 cMEM b1 f0 c= csizel cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b5 b5 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cdest_triple0 f0 cflatten cCONS cNIL cCONS cCONS cSOME b5 cNIL cCONS b5 cCONS cCONS cSOME b5 cNIL cNIL b3 cMAP part cSOME cbetwn f0 b6 b5 cthe cLAST cNIL cnseq b5 cNONE c, b0 c, b1 b2 c+ cSUC b2 csizel cdest_triple0 f0 cCONS cSOME b1 cNIL b3 cT
- (!f. (!s. (!s'. (!uvns. (!P. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns)))))))), ((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) |- (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) /\ (P (((dest_triple0 f) ((cat s) s')) uvns)))
T c==> ! ! ! ! ! c==> c/\ c~ c= b2 cNIL * b4 ccat b1 cdest_triple0 b0 b2 b3 * b4 cdest_triple0 b0 ccat b1 b2 b3 c==> c/\ c~ c= f0 cNIL * f1 ccat f2 cdest_triple0 f3 f0 f4 c/\ c/\ c~ c= f0 cNIL * f1 ccat f2 cdest_triple0 f3 f0 f4 * f1 cdest_triple0 f3 ccat f2 f0 f4
+ |- ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))
T c= cint_of_num c+ f0 f1 cint_add cint_of_num f0 cint_of_num f1
+ (u0 = (the (LAST NIL))) |- (((sizel ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) u0)) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))) = ((sizel ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))))
T c==> c= f0 cthe cLAST cNIL c= c= csizel cLET / cLET_END cLET / cLET_END cdest_triple0 f1 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f5 cMAP part cSOME cbetwn f1 b0 f2 f0 c+ cSUC f6 csizel cdest_triple0 f1 cCONS cSOME f4 cNIL f5 c= csizel cLET / cLET_END cLET / cLET_END cdest_triple0 f1 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f5 cMAP part cSOME cbetwn f1 b0 f2 cthe cLAST cNIL c+ cSUC f6 csizel cdest_triple0 f1 cCONS cSOME f4 cNIL f5
- (b = c) |- ((P c) = (P c))
T c==> c= f0 f1 c= * f2 f1 * f2 f1
+ (u0 = (the (LAST NIL))), (ns = ((nseq n) NONE)), ((MEM u) f), ((MEM v) f) |- ((((\b. (b = ((MAP SOME) (((betwn f) u0) u)))) b) ==> ((sizel ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))) = T)
T c==> c= f0 cthe cLAST cNIL c==> c= f1 cnseq f2 cNONE c==> cMEM f3 f4 c==> cMEM f5 f4 c= c==> * / c= b0 cMAP part cSOME cbetwn f4 f0 f3 f6 c= csizel cLET / cLET_END cdest_triple0 f4 cflatten cCONS cNIL cCONS cCONS cSOME f3 cNIL cCONS f1 cCONS cCONS cSOME f5 cNIL cNIL f7 cMAP part cSOME cbetwn f4 f0 f3 c+ cSUC f2 csizel cdest_triple0 f4 cCONS cSOME f5 cNIL f7 cT
- |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- (((!x. (!xs. (((flatten NIL) = NIL) /\ ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs)))))) ==> ((\x. (!xs. (((flatten NIL) = NIL) /\ ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs)))))) x)) = ((\x. (!xs. (((flatten NIL) = NIL) /\ ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs)))))) x))
T c= c==> ! ! c/\ c= cflatten cNIL cNIL c= cflatten cCONS b0 b1 cAPPEND b0 cflatten b1 * / ! c/\ c= cflatten cNIL cNIL c= cflatten cCONS b0 b1 cAPPEND b0 cflatten b1 f0 * / ! c/\ c= cflatten cNIL cNIL c= cflatten cCONS b0 b1 cAPPEND b0 cflatten b1 f0
- |- (((!n. (((APPEND l) ((APPEND m) n)) = ((APPEND ((APPEND l) m)) n))) ==> ((\n. (((APPEND l) ((APPEND m) n)) = ((APPEND ((APPEND l) m)) n))) n)) = ((\n. (((APPEND l) ((APPEND m) n)) = ((APPEND ((APPEND l) m)) n))) n))
T c= c==> ! c= cAPPEND f0 cAPPEND f1 b0 cAPPEND cAPPEND f0 f1 b0 * / c= cAPPEND f0 cAPPEND f1 b0 cAPPEND cAPPEND f0 f1 b0 f2 * / c= cAPPEND f0 cAPPEND f1 b0 cAPPEND cAPPEND f0 f1 b0 f2
+ |- (((((NUMERAL (BIT1 _0)) + n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))) = ((((sizel ((CONS (SOME u)) NIL)) + (sizel ((nseq n) NONE))) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))))
T c= c= c+ c+ cNUMERAL cBIT1 c_0 f0 csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f3 c+ cSUC f0 csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f3 c= c+ c+ csizel cCONS cSOME f4 cNIL csizel cnseq f0 cNONE csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f3 c+ cSUC f0 csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f3
+ (u0 = (the (LAST NIL))) |- ((the (LAST NIL)) = u0)
T c==> c= f0 cthe cLAST cNIL c= cthe cLAST cNIL f0
+ |- ((\_10633918. (\_10633919. (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME _10633918)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))))) ((nseq _10633919) NONE))))) = (\_10633918. (\_10633919. (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) (u , (v , n))))) NIL)) ((CONS ns) ((CONS ((CONS (SOME _10633918)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) (u , (v , n))))))))) (the (LAST NIL)))))) ((nseq _10633919) NONE))))))
T c= / / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cdest_triple0 f0 cflatten cCONS cNIL cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME b0 cNIL cNIL f2 cMAP part cSOME cbetwn f0 b3 f1 cthe cLAST cNIL cnseq b1 cNONE / / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cdest_triple0 f0 cflatten cCONS cNIL cCONS cCONS cSOME c@ / ! ! c= * b5 c, b6 b7 b6 c, f1 c, f3 f4 cNIL cCONS b2 cCONS cCONS cSOME b0 cNIL cNIL f2 cMAP part cSOME cbetwn f0 b3 c@ / ! ! c= * b4 c, b5 b6 b5 c, f1 c, f3 f4 cthe cLAST cNIL cnseq b1 cNONE
+ |- ((int_le (int_of_num (NUMERAL _0))) (int_of_num (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num csizel cdest_triple0 f0 cCONS cSOME f1 cNIL f2
+ |- ((a = b) = ((GEQ a) b))
T c= c= f0 f1 cGEQ f0 f1
- |- (T = ((((NUMERAL (BIT1 _0)) + n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))))
T c= cT c= c+ c+ cNUMERAL cBIT1 c_0 f0 csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f3 c+ cSUC f0 csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f3
+ (ns = ((nseq n) NONE)), ((MEM u) f), ((MEM v) f) |- ((ns = ((nseq n) NONE)) /\ ((sizel ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))))) ((nseq n) NONE))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))))
T c==> c= f0 cnseq f1 cNONE c==> cMEM f2 f3 c==> cMEM f4 f3 c/\ c= f0 cnseq f1 cNONE c= csizel cLET / cLET_END cLET / cLET_END cLET / cLET_END cdest_triple0 f3 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL f5 cMAP part cSOME cbetwn f3 b1 f2 cthe cLAST cNIL cnseq f1 cNONE c+ cSUC f1 csizel cdest_triple0 f3 cCONS cSOME f4 cNIL f5
- |- ((\s. (!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s))))) s)
T * / ! c==> c~ c= b0 cNIL c= clast b1 b0 cLAST b0 f0
+ |- ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))
T * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 csizel cdest_triple0 f0 cCONS cSOME f1 cNIL f2
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ |- ((\s. (!s'. ((~ (s' = NIL)) ==> ((((dest_triple0 f) ((cat s) s')) uvns) = ((cat s) (((dest_triple0 f) s') uvns)))))) s)
T * / ! c==> c~ c= b1 cNIL c= cdest_triple0 f0 ccat b0 b1 f1 ccat b0 cdest_triple0 f0 b1 f1 f2
+ (ns = ((nseq n) NONE)) |- ((\ns. (ns = ((nseq n) NONE))) ns)
T c==> c= f0 cnseq f1 cNONE * / c= b0 cnseq f1 cNONE f0
+ |- ((((~ (s' = NIL)) ==> ((((dest_triple0 f) ((cat s) s')) uvns) = ((cat s) (((dest_triple0 f) s') uvns)))) ==> (!P. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns))))) = (!P. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns)))))
T c= c==> c==> c~ c= f0 cNIL c= cdest_triple0 f1 ccat f2 f0 f3 ccat f2 cdest_triple0 f1 f0 f3 ! c==> c/\ c~ c= f0 cNIL * b0 ccat f2 cdest_triple0 f1 f0 f3 * b0 cdest_triple0 f1 ccat f2 f0 f3 ! c==> c/\ c~ c= f0 cNIL * b0 ccat f2 cdest_triple0 f1 f0 f3 * b0 cdest_triple0 f1 ccat f2 f0 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!uvns. (!P. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns))))) = T)
T c= ! ! c==> c/\ c~ c= f0 cNIL * b1 ccat f1 cdest_triple0 f2 f0 b0 * b1 cdest_triple0 f2 ccat f1 f0 b0 cT
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))) = (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c= c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
+ (!f. (!s. (!s'. (!uvns. (!P. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns)))))))) |- (!s. (!s'. (!uvns. (!P. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns)))))))
T c==> ! ! ! ! ! c==> c/\ c~ c= b2 cNIL * b4 ccat b1 cdest_triple0 b0 b2 b3 * b4 cdest_triple0 b0 ccat b1 b2 b3 ! ! ! ! c==> c/\ c~ c= b1 cNIL * b3 ccat b0 cdest_triple0 f0 b1 b2 * b3 cdest_triple0 f0 ccat b0 b1 b2
+ |- ((\l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))) l)
T * / c= cAPPEND cCONS f0 f1 b0 cCONS f0 cAPPEND f1 b0 f2
- |- (all = ALL)
T c= part call part cALL
+ ((MEM u) f), ((MEM v) f) |- ((sizel ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))))) ((nseq n) NONE))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))
T c==> cMEM f0 f1 c==> cMEM f2 f1 c= csizel cLET / cLET_END cLET / cLET_END cLET / cLET_END cdest_triple0 f1 cflatten cCONS cNIL cCONS cCONS cSOME f0 cNIL cCONS b0 cCONS cCONS cSOME f2 cNIL cNIL f3 cMAP part cSOME cbetwn f1 b1 f0 cthe cLAST cNIL cnseq f4 cNONE c+ cSUC f4 csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f3
+ |- (((!xs. (((flatten NIL) = NIL) /\ ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs))))) ==> ((\xs. (((flatten NIL) = NIL) /\ ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs))))) xs)) = ((\xs. (((flatten NIL) = NIL) /\ ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs))))) xs))
T c= c==> ! c/\ c= cflatten cNIL cNIL c= cflatten cCONS f0 b0 cAPPEND f0 cflatten b0 * / c/\ c= cflatten cNIL cNIL c= cflatten cCONS f0 b0 cAPPEND f0 cflatten b0 f1 * / c/\ c= cflatten cNIL cNIL c= cflatten cCONS f0 b0 cAPPEND f0 cflatten b0 f1
- (!f. (!s. (!s'. (!uvns. (!P. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns)))))))), ((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) |- ((!f. (!s. (!s'. (!uvns. (!P. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns)))))))) /\ (P (((dest_triple0 f) ((cat s) s')) uvns)))
T c==> ! ! ! ! ! c==> c/\ c~ c= b2 cNIL * b4 ccat b1 cdest_triple0 b0 b2 b3 * b4 cdest_triple0 b0 ccat b1 b2 b3 c==> c/\ c~ c= f0 cNIL * f1 ccat f2 cdest_triple0 f3 f0 f4 c/\ ! ! ! ! ! c==> c/\ c~ c= b2 cNIL * b4 ccat b1 cdest_triple0 b0 b2 b3 * b4 cdest_triple0 b0 ccat b1 b2 b3 * f1 cdest_triple0 f3 ccat f2 f0 f4
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((MEM u) f), ((MEM v) f) |- (((\ns. (ns = ((nseq n) NONE))) ns) ==> ((sizel ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))))) ((nseq n) NONE))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))))
T c==> cMEM f0 f1 c==> cMEM f2 f1 c==> * / c= b0 cnseq f3 cNONE f4 c= csizel cLET / cLET_END cLET / cLET_END cLET / cLET_END cdest_triple0 f1 cflatten cCONS cNIL cCONS cCONS cSOME f0 cNIL cCONS b0 cCONS cCONS cSOME f2 cNIL cNIL f5 cMAP part cSOME cbetwn f1 b1 f0 cthe cLAST cNIL cnseq f3 cNONE c+ cSUC f3 csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f5
+ |- (((!h. (!t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))))) ==> ((\h. (!t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))))) h)) = ((\h. (!t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))))) h))
T c= c==> ! ! ! c= cAPPEND cCONS b0 b1 b2 cCONS b0 cAPPEND b1 b2 * / ! ! c= cAPPEND cCONS b0 b1 b2 cCONS b0 cAPPEND b1 b2 f0 * / ! ! c= cAPPEND cCONS b0 b1 b2 cCONS b0 cAPPEND b1 b2 f0
+ (!f. (!s. (!s'. (!uvns. (!P. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns)))))))) |- (((!s. (!s'. (!uvns. (!P. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns))))))) ==> ((\s. (!s'. (!uvns. (!P. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns))))))) s)) = ((\s. (!s'. (!uvns. (!P. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns))))))) s))
T c==> ! ! ! ! ! c==> c/\ c~ c= b2 cNIL * b4 ccat b1 cdest_triple0 b0 b2 b3 * b4 cdest_triple0 b0 ccat b1 b2 b3 c= c==> ! ! ! ! c==> c/\ c~ c= b1 cNIL * b3 ccat b0 cdest_triple0 f0 b1 b2 * b3 cdest_triple0 f0 ccat b0 b1 b2 * / ! ! ! c==> c/\ c~ c= b1 cNIL * b3 ccat b0 cdest_triple0 f0 b1 b2 * b3 cdest_triple0 f0 ccat b0 b1 b2 f1 * / ! ! ! c==> c/\ c~ c= b1 cNIL * b3 ccat b0 cdest_triple0 f0 b1 b2 * b3 cdest_triple0 f0 ccat b0 b1 b2 f1
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num n)) ==> (((int_le (int_of_num (NUMERAL _0))) (int_of_num (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))) ==> (((int_add (int_of_num n)) ((int_add (int_of_num (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))) (int_of_num (NUMERAL (BIT1 _0))))) = ((int_add (int_of_num n)) ((int_add (int_of_num (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))) (int_of_num (NUMERAL (BIT1 _0)))))))) = (((int_le (int_of_num (NUMERAL _0))) (int_of_num (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))) ==> (((int_add (int_of_num n)) ((int_add (int_of_num (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))) (int_of_num (NUMERAL (BIT1 _0))))) = ((int_add (int_of_num n)) ((int_add (int_of_num (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))) (int_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f3 c= cint_add cint_of_num f0 cint_add cint_of_num csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f3 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_add cint_of_num csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f3 cint_of_num cNUMERAL cBIT1 c_0 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f3 c= cint_add cint_of_num f0 cint_add cint_of_num csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f3 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_add cint_of_num csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f3 cint_of_num cNUMERAL cBIT1 c_0
+ (u0 = (the (LAST NIL))), (b = ((MAP SOME) (((betwn f) u0) u))), (ns = ((nseq n) NONE)), ((MEM u) f), ((MEM v) f) |- (((hold ((((sizel ((CONS (SOME u)) NIL)) + (sizel ns)) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))) ==> ((((sizel ((CONS (SOME u)) NIL)) + (sizel ns)) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))) = ((((sizel ((CONS (SOME u)) NIL)) + (sizel ns)) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))))
T c==> c= f0 cthe cLAST cNIL c==> c= f1 cMAP part cSOME cbetwn f2 f0 f3 c==> c= f4 cnseq f5 cNONE c==> cMEM f3 f2 c==> cMEM f6 f2 c= c==> chold c= c+ c+ csizel cCONS cSOME f3 cNIL csizel f4 csizel cdest_triple0 f2 cCONS cSOME f6 cNIL f7 c+ cSUC f5 csizel cdest_triple0 f2 cCONS cSOME f6 cNIL f7 c= c+ c+ csizel cCONS cSOME f3 cNIL csizel f4 csizel cdest_triple0 f2 cCONS cSOME f6 cNIL f7 c+ cSUC f5 csizel cdest_triple0 f2 cCONS cSOME f6 cNIL f7 c= c+ c+ csizel cCONS cSOME f3 cNIL csizel f4 csizel cdest_triple0 f2 cCONS cSOME f6 cNIL f7 c+ cSUC f5 csizel cdest_triple0 f2 cCONS cSOME f6 cNIL f7
+ |- ((\l. (((APPEND NIL) l) = l)) l)
T * / c= cAPPEND cNIL b0 b0 f0
+ |- (!b. (!c. ((b = c) ==> (!P. ((P c) ==> (P b))))))
T c==> c= f0 f1 ! c==> * b0 f1 * b0 f0
+ (u0 = (the (LAST NIL))) |- ((\u0. (u0 = (the (LAST NIL)))) u0)
T c==> c= f0 cthe cLAST cNIL * / c= b0 cthe cLAST cNIL f0
+ |- ((((sizel ((CONS (SOME u)) NIL)) + (sizel ((nseq n) NONE))) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))
T c= c+ c+ csizel cCONS cSOME f0 cNIL csizel cnseq f1 cNONE csizel cdest_triple0 f2 cCONS cSOME f3 cNIL f4 c+ cSUC f1 csizel cdest_triple0 f2 cCONS cSOME f3 cNIL f4
+ (~ (P b)), (P c), (b = c) |- ((~ (P b)) /\ F)
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c/\ c~ * f0 f1 cF
+ |- ((u0 = (the (LAST NIL))) ==> (?u0. (u0 = (the (LAST NIL)))))
T c==> c= f0 cthe cLAST cNIL c? / c= b0 cthe cLAST cNIL
+ |- ((\n. (!x. ((sizel ((nseq n) x)) = n))) n)
T * / ! c= csizel cnseq b0 b1 b0 f0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- (((int_le (int_of_num (NUMERAL _0))) _10633961) ==> (((int_le (int_of_num (NUMERAL _0))) _10633962) ==> (((int_add _10633961) ((int_add _10633962) (int_of_num (NUMERAL (BIT1 _0))))) = ((int_add _10633961) ((int_add _10633962) (int_of_num (NUMERAL (BIT1 _0))))))))
T c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c= cint_add f0 cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 cint_add f0 cint_add f1 cint_of_num cNUMERAL cBIT1 c_0
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ (u0 = (the (LAST NIL))) |- ((u0 = (the (LAST NIL))) /\ (?u0. (u0 = (the (LAST NIL)))))
T c==> c= f0 cthe cLAST cNIL c/\ c= f0 cthe cLAST cNIL c? / c= b0 cthe cLAST cNIL
+ |- ((\x. ((sizel ((nseq n) x)) = n)) x)
T * / c= csizel cnseq f0 b0 f0 f1
+ |- ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))
T c==> c==> f0 c= f1 f2 ! c==> c/\ f0 * b0 f2 * b0 f1
+ |- ((!s'. (!uvns. (!P. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns)))))) = T)
T c= ! ! ! c==> c/\ c~ c= b0 cNIL * b2 ccat f0 cdest_triple0 f1 b0 b1 * b2 cdest_triple0 f1 ccat f0 b0 b1 cT
- (b = ((MAP SOME) (((betwn f) u0) u))) |- ((((nseq n) NONE) = ns) = (((nseq n) NONE) = ns))
T c==> c= f0 cMAP part cSOME cbetwn f1 f2 f3 c= c= cnseq f4 cNONE f5 c= cnseq f4 cNONE f5
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _10633961)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10633962)) /\ (((real_le ((real_add ((real_add (real_of_int _10633961)) ((real_add (real_of_int _10633962)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10633961)) ((real_add (real_of_int _10633962)) (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((real_le ((real_add ((real_add (real_of_int _10633961)) ((real_add (real_of_int _10633962)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10633961)) ((real_add (real_of_int _10633962)) (real_of_num (NUMERAL (BIT1 _0))))))))) = (~ (((int_le (int_of_num (NUMERAL _0))) _10633961) ==> (((int_le (int_of_num (NUMERAL _0))) _10633962) ==> (((int_add _10633961) ((int_add _10633962) (int_of_num (NUMERAL (BIT1 _0))))) = ((int_add _10633961) ((int_add _10633962) (int_of_num (NUMERAL (BIT1 _0))))))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c\/ creal_le creal_add creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c= cint_add f0 cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 cint_add f0 cint_add f1 cint_of_num cNUMERAL cBIT1 c_0
+ |- (((!s2. ((sizel ((cat s1) s2)) = ((sizel s1) + (sizel s2)))) ==> ((\s2. ((sizel ((cat s1) s2)) = ((sizel s1) + (sizel s2)))) s2)) = ((\s2. ((sizel ((cat s1) s2)) = ((sizel s1) + (sizel s2)))) s2))
T c= c==> ! c= csizel ccat f0 b0 c+ csizel f0 csizel b0 * / c= csizel ccat f0 b0 c+ csizel f0 csizel b0 f1 * / c= csizel ccat f0 b0 c+ csizel f0 csizel b0 f1
+ (b = c) |- ((b = c) /\ (!P. ((P c) ==> (P b))))
T c==> c= f0 f1 c/\ c= f0 f1 ! c==> * b0 f1 * b0 f0
+ (u0 = (the (LAST NIL))) |- ((((the (LAST NIL)) = u0) ==> ((((MAP SOME) (((betwn f) u0) u)) = b) ==> (hold ((((sizel ((CONS (SOME u)) NIL)) + (sizel ns)) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))))) = ((((MAP SOME) (((betwn f) u0) u)) = b) ==> (hold ((((sizel ((CONS (SOME u)) NIL)) + (sizel ns)) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))))))
T c==> c= f0 cthe cLAST cNIL c= c==> c= cthe cLAST cNIL f0 c==> c= cMAP part cSOME cbetwn f1 f0 f2 f3 chold c= c+ c+ csizel cCONS cSOME f2 cNIL csizel f4 csizel cdest_triple0 f1 cCONS cSOME f5 cNIL f6 c+ cSUC f7 csizel cdest_triple0 f1 cCONS cSOME f5 cNIL f6 c==> c= cMAP part cSOME cbetwn f1 f0 f2 f3 chold c= c+ c+ csizel cCONS cSOME f2 cNIL csizel f4 csizel cdest_triple0 f1 cCONS cSOME f5 cNIL f6 c+ cSUC f7 csizel cdest_triple0 f1 cCONS cSOME f5 cNIL f6
+ |- ((ns = ((nseq n) NONE)) ==> (?ns. (ns = ((nseq n) NONE))))
T c==> c= f0 cnseq f1 cNONE c? / c= b0 cnseq f1 cNONE
+ (!f. (!s. (!s'. (!uvns. (!P. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns)))))))) |- ((\s. (!s'. (!uvns. (!P. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns))))))) s)
T c==> ! ! ! ! ! c==> c/\ c~ c= b2 cNIL * b4 ccat b1 cdest_triple0 b0 b2 b3 * b4 cdest_triple0 b0 ccat b1 b2 b3 * / ! ! ! c==> c/\ c~ c= b1 cNIL * b3 ccat b0 cdest_triple0 f0 b1 b2 * b3 cdest_triple0 f0 ccat b0 b1 b2 f1
+ |- (((!t. (~ (((CONS h) t) = NIL))) ==> ((\t. (~ (((CONS h) t) = NIL))) t)) = ((\t. (~ (((CONS h) t) = NIL))) t))
T c= c==> ! c~ c= cCONS f0 b0 cNIL * / c~ c= cCONS f0 b0 cNIL f1 * / c~ c= cCONS f0 b0 cNIL f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\f. (!s. (!s'. (!uvns. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns))))))) f)
T * / ! ! ! c==> c/\ c~ c= b2 cNIL * f0 ccat b1 cdest_triple0 b0 b2 b3 * f0 cdest_triple0 b0 ccat b1 b2 b3 f1
+ |- ((rev = REVERSE) /\ ((!s. (!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s))))) /\ ((cat = APPEND) /\ (all = ALL))))
T c/\ c= part crev part cREVERSE c/\ ! ! c==> c~ c= b0 cNIL c= clast b1 b0 cLAST b0 c/\ c= part ccat part cAPPEND c= part call part cALL
+ |- ((\x. (!xs. (((flatten NIL) = NIL) /\ ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs)))))) x)
T * / ! c/\ c= cflatten cNIL cNIL c= cflatten cCONS b0 b1 cAPPEND b0 cflatten b1 f0
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
+ |- (((!s. (!s'. (!uvns. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns)))))) ==> ((\s. (!s'. (!uvns. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns)))))) s)) = ((\s. (!s'. (!uvns. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns)))))) s))
T c= c==> ! ! ! c==> c/\ c~ c= b1 cNIL * f0 ccat b0 cdest_triple0 f1 b1 b2 * f0 cdest_triple0 f1 ccat b0 b1 b2 * / ! ! c==> c/\ c~ c= b1 cNIL * f0 ccat b0 cdest_triple0 f1 b1 b2 * f0 cdest_triple0 f1 ccat b0 b1 b2 f2 * / ! ! c==> c/\ c~ c= b1 cNIL * f0 ccat b0 cdest_triple0 f1 b1 b2 * f0 cdest_triple0 f1 ccat b0 b1 b2 f2
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ (P c), (b = c) |- ((~ (P b)) ==> F)
T c==> * f0 f1 c==> c= f2 f1 c==> c~ * f0 f2 cF
+ (u0 = (the (LAST NIL))), (b = ((MAP SOME) (((betwn f) u0) u))), (ns = ((nseq n) NONE)), ((MEM u) f), ((MEM v) f) |- (hold ((((sizel ((CONS (SOME u)) NIL)) + (sizel ns)) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))))
T c==> c= f0 cthe cLAST cNIL c==> c= f1 cMAP part cSOME cbetwn f2 f0 f3 c==> c= f4 cnseq f5 cNONE c==> cMEM f3 f2 c==> cMEM f6 f2 chold c= c+ c+ csizel cCONS cSOME f3 cNIL csizel f4 csizel cdest_triple0 f2 cCONS cSOME f6 cNIL f7 c+ cSUC f5 csizel cdest_triple0 f2 cCONS cSOME f6 cNIL f7
+ (ns = ((nseq n) NONE)), ((MEM u) f), ((MEM v) f) |- ((((\u0. (u0 = (the (LAST NIL)))) u0) ==> ((sizel ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))) = T)
T c==> c= f0 cnseq f1 cNONE c==> cMEM f2 f3 c==> cMEM f4 f3 c= c==> * / c= b0 cthe cLAST cNIL f5 c= csizel cLET / cLET_END cLET / cLET_END cdest_triple0 f3 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS f0 cCONS cCONS cSOME f4 cNIL cNIL f6 cMAP part cSOME cbetwn f3 b0 f2 cthe cLAST cNIL c+ cSUC f1 csizel cdest_triple0 f3 cCONS cSOME f4 cNIL f6 cT
+ (~ (P b)), (b = c) |- (~ (P c))
T c==> c~ * f0 f1 c==> c= f1 f2 c~ * f0 f2
+ |- ((GEQ ((GABS (\_10633925. (!u. (!v. (!n. ((GEQ (_10633925 (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))))) ((nseq n) NONE))))))))) (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))))) ((nseq n) NONE))))
T cGEQ cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cdest_triple0 f0 cflatten cCONS cNIL cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f1 cMAP part cSOME cbetwn f0 b5 b1 cthe cLAST cNIL cnseq b3 cNONE c, f2 c, f3 f4 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cdest_triple0 f0 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL f1 cMAP part cSOME cbetwn f0 b1 f2 cthe cLAST cNIL cnseq f4 cNONE
+ |- (?_10633925. (!u. (!v. (!n. ((GEQ (_10633925 (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST NIL)))))) ((nseq n) NONE))))))))
T c? / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cdest_triple0 f0 cflatten cCONS cNIL cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f1 cMAP part cSOME cbetwn f0 b5 b1 cthe cLAST cNIL cnseq b3 cNONE
+ |- ((!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))) = ((!b. (!c. ((T ==> (b = c)) ==> (!P. ((T /\ (P c)) ==> (P b)))))) /\ (!b. (!c. ((F ==> (b = c)) ==> (!P. ((F /\ (P c)) ==> (P b))))))))
T c= ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 c/\ ! ! c==> c==> cT c= b0 b1 ! c==> c/\ cT * b2 b1 * b2 b0 ! ! c==> c==> cF c= b0 b1 ! c==> c/\ cF * b2 b1 * b2 b0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ (s = NIL)) ==> (((last x0) s) = (LAST s))) = T)
T c= c==> c~ c= f0 cNIL c= clast f1 f0 cLAST f0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ (NIL = ((CONS h) t))) ==> ((NIL = ((CONS h) t)) = F)) = ((NIL = ((CONS h) t)) = F))
T c= c==> c~ c= cNIL cCONS f0 f1 c= c= cNIL cCONS f0 f1 cF c= c= cNIL cCONS f0 f1 cF
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (b = ((MAP SOME) (((betwn f) u0) u))) |- (((MEM u) f) = ((MEM u) f))
T c==> c= f0 cMAP part cSOME cbetwn f1 f2 f3 c= cMEM f3 f1 cMEM f3 f1
- (NIL = ((CONS h) t)) |- (((CONS h) t) = NIL)
T c==> c= cNIL cCONS f0 f1 c= cCONS f0 f1 cNIL
- |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) |- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) /\ F)
T c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 c/\ c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((CONS h) t) = NIL) |- (NIL = ((CONS h) t))
T c==> c= cCONS f0 f1 cNIL c= cNIL cCONS f0 f1
- ((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) |- ((!f. (!s. (!s'. (!uvns. (!P. (((~ (s' = NIL)) /\ (P ((cat s) (((dest_triple0 f) s') uvns)))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns)))))))) ==> (P (((dest_triple0 f) ((cat s) s')) uvns)))
T c==> c/\ c~ c= f0 cNIL * f1 ccat f2 cdest_triple0 f3 f0 f4 c==> ! ! ! ! ! c==> c/\ c~ c= b2 cNIL * b4 ccat b1 cdest_triple0 b0 b2 b3 * b4 cdest_triple0 b0 ccat b1 b2 b3 * f1 cdest_triple0 f3 ccat f2 f0 f4
- |- (((!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) ==> ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0)) = ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0))
T c= c==> ! c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1 * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1
- |- ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (b = c) |- (F = F)
T c==> c= f0 f1 c= cF cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F), (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- |- (((!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s)))) ==> ((\x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s)))) x0)) = ((\x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s)))) x0))
T c= c==> ! c==> c~ c= f0 cNIL c= clast b0 f0 cLAST f0 * / c==> c~ c= f0 cNIL c= clast b0 f0 cLAST f0 f1 * / c==> c~ c= f0 cNIL c= clast b0 f0 cLAST f0 f1
- (((real_ge (real_of_int _10633961)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10633962)) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))) |- ((real_ge (real_of_int _10633962)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
- |- (((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) ==> ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s)) = ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s))
T c= c==> ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0 * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- (~ (P c)), (P c) |- ((~ (P c)) /\ (P c))
T c==> c~ * f0 f1 c==> * f0 f1 c/\ c~ * f0 f1 * f0 f1
- |- ((\m. (!n. (((APPEND l) ((APPEND m) n)) = ((APPEND ((APPEND l) m)) n)))) m)
T * / ! c= cAPPEND f0 cAPPEND b0 b1 cAPPEND cAPPEND f0 b0 b1 f1
- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) /\ (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))) = T)
T c= c==> c~ c= cNIL f0 c= cLAST f0 clast f1 f0 cT
- |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- ((LENGTH = sizel) /\ ((FILTER = filter) /\ ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all))))))
T c/\ c= part cLENGTH part csizel c/\ c= part cFILTER part cfilter c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
- |- (((NUMERAL (BIT0 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F), (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- ((NIL = ((CONS h) t)) = F)
T c= c= cNIL cCONS f0 f1 cF
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!m. ((((APPEND l) m) = NIL) = ((l = NIL) /\ (m = NIL)))) ==> ((\m. ((((APPEND l) m) = NIL) = ((l = NIL) /\ (m = NIL)))) m)) = ((\m. ((((APPEND l) m) = NIL) = ((l = NIL) /\ (m = NIL)))) m))
T c= c==> ! c= c= cAPPEND f0 b0 cNIL c/\ c= f0 cNIL c= b0 cNIL * / c= c= cAPPEND f0 b0 cNIL c/\ c= f0 cNIL c= b0 cNIL f1 * / c= c= cAPPEND f0 b0 cNIL c/\ c= f0 cNIL c= b0 cNIL f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!l. (!m. ((((APPEND l) m) = NIL) = ((l = NIL) /\ (m = NIL))))) ==> ((\l. (!m. ((((APPEND l) m) = NIL) = ((l = NIL) /\ (m = NIL))))) l)) = ((\l. (!m. ((((APPEND l) m) = NIL) = ((l = NIL) /\ (m = NIL))))) l))
T c= c==> ! ! c= c= cAPPEND b0 b1 cNIL c/\ c= b0 cNIL c= b1 cNIL * / ! c= c= cAPPEND b0 b1 cNIL c/\ c= b0 cNIL c= b1 cNIL f0 * / ! c= c= cAPPEND b0 b1 cNIL c/\ c= b0 cNIL c= b1 cNIL f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (rev = REVERSE)
T c= part crev part cREVERSE
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((((dest_triple0 f) sofar) NIL) = sofar)
T c= cdest_triple0 f0 f1 cNIL f1
- |- (((((NUMERAL (BIT1 _0)) + n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))) = T)
T c= c= c+ c+ cNUMERAL cBIT1 c_0 f0 csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f3 c+ cSUC f0 csizel cdest_triple0 f1 cCONS cSOME f2 cNIL f3 cT
- |- ((APPEND = cat) /\ (ALL = all))
T c/\ c= part cAPPEND part ccat c= part cALL part call
- |- (FILTER = filter)
T c= part cFILTER part cfilter
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (P c) |- ((~ (P c)) ==> (P c))
T c==> * f0 f1 c==> c~ * f0 f1 * f0 f1
- |- ((~ (s = NIL)) ==> (((last x0) s) = (LAST s)))
T c==> c~ c= f0 cNIL c= clast f1 f0 cLAST f0
- |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) = ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c= c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- ((\l. (!m. (!n. (((APPEND l) ((APPEND m) n)) = ((APPEND ((APPEND l) m)) n))))) l)
T * / ! ! c= cAPPEND b0 cAPPEND b1 b2 cAPPEND cAPPEND b0 b1 b2 f0
- |- ((\n. (((APPEND l) ((APPEND m) n)) = ((APPEND ((APPEND l) m)) n))) n)
T * / c= cAPPEND f0 cAPPEND f1 b0 cAPPEND cAPPEND f0 f1 b0 f2
- (b = ((MAP SOME) (((betwn f) u0) u))) |- (((the (LAST NIL)) = u0) = ((the (LAST NIL)) = u0))
T c==> c= f0 cMAP part cSOME cbetwn f1 f2 f3 c= c= cthe cLAST cNIL f2 c= cthe cLAST cNIL f2
- |- (((APPEND l) ((APPEND m) n)) = ((APPEND ((APPEND l) m)) n))
T c= cAPPEND f0 cAPPEND f1 f2 cAPPEND cAPPEND f0 f1 f2
- |- (((!m. (!n. (((APPEND l) ((APPEND m) n)) = ((APPEND ((APPEND l) m)) n)))) ==> ((\m. (!n. (((APPEND l) ((APPEND m) n)) = ((APPEND ((APPEND l) m)) n)))) m)) = ((\m. (!n. (((APPEND l) ((APPEND m) n)) = ((APPEND ((APPEND l) m)) n)))) m))
T c= c==> ! ! c= cAPPEND f0 cAPPEND b0 b1 cAPPEND cAPPEND f0 b0 b1 * / ! c= cAPPEND f0 cAPPEND b0 b1 cAPPEND cAPPEND f0 b0 b1 f1 * / ! c= cAPPEND f0 cAPPEND b0 b1 cAPPEND cAPPEND f0 b0 b1 f1
- |- ((((APPEND l) m) = NIL) = ((l = NIL) /\ (m = NIL)))
T c= c= cAPPEND f0 f1 cNIL c/\ c= f0 cNIL c= f1 cNIL
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- (((sizel (((dest_triple0 f) ((cat ((APPEND ((CONS (SOME u)) NIL)) ns)) ((CONS (SOME v)) NIL))) uvns)) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns)))) = ((\x. ((\v. ((sizel v) = ((SUC n) + (sizel (((dest_triple0 f) ((CONS (SOME v)) NIL)) uvns))))) x)) (((dest_triple0 f) ((cat ((APPEND ((CONS (SOME u)) NIL)) ns)) ((CONS (SOME v)) NIL))) uvns)))
T c= c= csizel cdest_triple0 f0 ccat cAPPEND cCONS cSOME f1 cNIL f2 cCONS cSOME f3 cNIL f4 c+ cSUC f5 csizel cdest_triple0 f0 cCONS cSOME f3 cNIL f4 * / * / c= csizel b1 c+ cSUC f5 csizel cdest_triple0 f0 cCONS cSOME f3 cNIL f4 b0 cdest_triple0 f0 ccat cAPPEND cCONS cSOME f1 cNIL f2 cCONS cSOME f3 cNIL f4
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (s' = NIL)) |- ((~ (s' = NIL)) /\ ((((dest_triple0 f) ((cat s) s')) uvns) = ((cat s) (((dest_triple0 f) s') uvns))))
T c==> c~ c= f0 cNIL c/\ c~ c= f0 cNIL c= cdest_triple0 f1 ccat f2 f0 f3 ccat f2 cdest_triple0 f1 f0 f3
- |- (((!l. (!m. (!n. (((APPEND l) ((APPEND m) n)) = ((APPEND ((APPEND l) m)) n))))) ==> ((\l. (!m. (!n. (((APPEND l) ((APPEND m) n)) = ((APPEND ((APPEND l) m)) n))))) l)) = ((\l. (!m. (!n. (((APPEND l) ((APPEND m) n)) = ((APPEND ((APPEND l) m)) n))))) l))
T c= c==> ! ! ! c= cAPPEND b0 cAPPEND b1 b2 cAPPEND cAPPEND b0 b1 b2 * / ! ! c= cAPPEND b0 cAPPEND b1 b2 cAPPEND cAPPEND b0 b1 b2 f0 * / ! ! c= cAPPEND b0 cAPPEND b1 b2 cAPPEND cAPPEND b0 b1 b2 f0
- (u0 = (the (LAST NIL))) |- ((((nseq n) NONE) = ns) = (((nseq n) NONE) = ns))
T c==> c= f0 cthe cLAST cNIL c= c= cnseq f1 cNONE f2 c= cnseq f1 cNONE f2
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (P b)), (P c), (b = c) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c==> c~ cF cF
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (u0 = (the (LAST NIL))) |- (((MEM v) f) = ((MEM v) f))
T c==> c= f0 cthe cLAST cNIL c= cMEM f1 f2 cMEM f1 f2
- |- ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s)
T * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0
- (b = ((MAP SOME) (((betwn f) u0) u))) |- (((MEM v) f) = ((MEM v) f))
T c==> c= f0 cMAP part cSOME cbetwn f1 f2 f3 c= cMEM f4 f1 cMEM f4 f1
