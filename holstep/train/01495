N Oxlzlez.critical_weight1a
C |- (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((pack_nonlinear_non_ox3q1h /\ (((NUMERAL (BIT1 _0)) < n) /\ ((packing V) /\ ((saturated V) /\ ((((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) /\ ((u0 IN V) /\ ((u1 IN V) /\ (((periodic f) n) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (((((cc_4 V) u0) u1) f) i)) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))))))))))))))) ==> (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0))))))))))))
T c==> c/\ cpack_nonlinear_non_ox3q1h c/\ c< cNUMERAL cBIT1 c_0 f0 c/\ cpacking f1 c/\ csaturated f1 c/\ cHAS_SIZE * * part cs_leaf f1 cCONS f2 cCONS f3 cNIL f0 c/\ cIN f2 f1 c/\ cIN f3 f1 c/\ cperiodic f4 f0 c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c/\ ccritical_edge_y cdistance c, f2 f3 c/\ cleaf_rank f1 cCONS f2 cCONS f3 cNIL f5 f0 f4 c/\ c~ ccc_4 f1 f2 f3 f4 f6 c/\ creal_lt cdistance c, f2 * f4 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f3 * f4 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c= ccritical_weight f1 * * part ccc_cell f1 cCONS f2 cCONS f3 cCONS * f4 f6 cNIL creal_of_num cNUMERAL cBIT1 c_0
D TRUTH
A |- T
T cT
D Oxlzlez.CC_3_PROPS
A |- (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((pack_nonlinear_non_ox3q1h /\ ((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (~ (((((cc_4 V) u0) u1) f) i)))))))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL))))) /\ (((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL _0))) /\ (((((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL))))) = (real_of_num (NUMERAL _0))) /\ ((((cc_ke V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) /\ ((((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) /\ ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) /\ ((~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) /\ (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_lt (hl ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f (SUC i))) NIL)))) /\ (((leaf V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u0 , u1))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u0 , (f i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u0 , (f (SUC i))))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u1 , (f i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u1 , (f (SUC i))))) /\ (((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u1 , (f i))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f (SUC i))))) (distance (u1 , (f (SUC i)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) /\ (((((((azim_mcell V) f) u0) u1) i) = ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (?y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i)))))))))))))))))))))))))))))))))))))))))))))))))))))
T c==> c/\ cpack_nonlinear_non_ox3q1h c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ccritical_edge_y cdistance c, f1 f2 c/\ cHAS_SIZE * * part cs_leaf f0 cCONS f1 cCONS f2 cNIL f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c~ ccc_4 f0 f1 f2 f5 f6 c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT1 cBIT1 c_0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f1 cCONS * f5 cSUC f6 cNIL c/\ c= cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL creal_of_num cNUMERAL c_0 c/\ c= cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f5 cSUC f6 cNIL creal_of_num cNUMERAL c_0 c/\ c= ccc_ke f0 cCONS f2 cCONS f1 cCONS * f5 cSUC f6 cNIL cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * * * part cwedge_ge f1 f2 * f5 f6 * f5 cSUC f6 c/\ cSUBSET * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f5 cSUC f6 cNIL * * * * part cwedge_ge f1 f2 * f5 f6 * f5 cSUC f6 c/\ c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f5 cSUC f6 cNIL c/\ cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * * * part cwedge_ge f1 f2 * f5 f6 * f5 cSUC f6 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 f6 part cEMPTY c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT * f5 cSUC f6 part cEMPTY c/\ creal_lt chl cCONS f1 cCONS f2 cCONS * f5 f6 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt chl cCONS f1 cCONS f2 cCONS * f5 cSUC f6 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt chl cCONS f2 cCONS f1 cCONS * f5 cSUC f6 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 cSUC f6 cNIL c/\ cleaf f0 cCONS f2 cCONS f1 cCONS * f5 cSUC f6 cNIL c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 * f5 f6 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 * f5 cSUC f6 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 * f5 f6 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 * f5 cSUC f6 c/\ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f1 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f1 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f2 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f2 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f5 f6 cdistance c, f2 * f5 f6 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f5 cSUC f6 cdistance c, f2 * f5 cSUC f6 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f5 cSUC f6 cNIL c/\ c= cazim_mcell f0 f5 f1 f2 f6 cazim f1 f2 * f5 f6 * f5 cSUC f6 c? / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f1 f2 cdistance c, f1 * f5 f6 cdistance c, f1 * f5 cSUC f6 b0 cdistance c, f2 * f5 cSUC f6 cdistance c, f2 * f5 f6 c/\ creal_le cdih_y cdistance c, f1 f2 cdistance c, f1 * f5 f6 cdistance c, f1 * f5 cSUC f6 b0 cdistance c, f2 * f5 cSUC f6 cdistance c, f2 * f5 f6 cazim f1 f2 * f5 f6 * f5 cSUC f6 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f1 f2 cdistance c, f1 * f5 f6 cdistance c, f1 * f5 cSUC f6 b0 cdistance c, f2 * f5 cSUC f6 cdistance c, f2 * f5 f6 c==> c/\ creal_lt cazim f1 f2 * f5 f6 * f5 cSUC f6 cpi creal_le cdistance c, * f5 f6 * f5 cSUC f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f5 f6 * f5 cSUC f6
D Oxlzlez.critical_weight1
A |- (!V. (!u0. (!u1. (!u2. (((critical_edge_y (distance (u0 , u1))) /\ (((real_lt (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))))))))) ==> (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = (real_of_num (NUMERAL (BIT1 _0)))))))))
T c==> c/\ ccritical_edge_y cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ c= ccc_ke f3 cCONS f0 cCONS f1 cCONS f2 cNIL cNUMERAL cBIT1 cBIT1 c_0 c/\ cpacking f3 c/\ csaturated f3 c/\ cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS f2 cNIL c/\ cleaf f3 cCONS f0 cCONS f1 cCONS f2 cNIL c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL c= ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS f2 cNIL creal_of_num cNUMERAL cBIT1 c_0
+ pack_nonlinear_non_ox3q1h, ((packing V) /\ ((saturated V) /\ ((((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) /\ ((u0 IN V) /\ ((u1 IN V) /\ (((periodic f) n) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (((((cc_4 V) u0) u1) f) i)) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))))))))))))), ((NUMERAL (BIT1 _0)) < n) |- (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> cpack_nonlinear_non_ox3q1h c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cHAS_SIZE * * part cs_leaf f0 cCONS f1 cCONS f2 cNIL f3 c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cperiodic f4 f3 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c/\ ccritical_edge_y cdistance c, f1 f2 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f5 f3 f4 c/\ c~ ccc_4 f0 f1 f2 f4 f6 c/\ creal_lt cdistance c, f1 * f4 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f2 * f4 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c< cNUMERAL cBIT1 c_0 f3 c= ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f4 f6 cNIL creal_of_num cNUMERAL cBIT1 c_0
- ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u0 , u1))) |- (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u0 , u1))) = T)
T c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c= creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cT
- (((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))
T c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 f4 cNIL c= * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL
+ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- (((((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0))))) = (((critical_edge_y (distance (u0 , u1))) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))))) /\ ((((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cpacking f0 c==> csaturated f0 c==> ccritical_edge_y cdistance c, f1 f2 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= c==> c= ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_of_num cNUMERAL cBIT1 c_0 c= ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ ccritical_edge_y cdistance c, f1 f2 c/\ creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c= ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_of_num cNUMERAL cBIT1 c_0 c= ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_of_num cNUMERAL cBIT1 c_0
+ pack_nonlinear_non_ox3q1h, (packing V), (saturated V), ((u0 IN V) /\ ((u1 IN V) /\ (((periodic f) n) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (((((cc_4 V) u0) u1) f) i)) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)))))))))), ((NUMERAL (BIT1 _0)) < n), (((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) |- (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> cpack_nonlinear_non_ox3q1h c==> cpacking f0 c==> csaturated f0 c==> c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cperiodic f3 f4 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c/\ ccritical_edge_y cdistance c, f1 f2 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f5 f4 f3 c/\ c~ ccc_4 f0 f1 f2 f3 f6 c/\ creal_lt cdistance c, f1 * f3 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f2 * f3 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c< cNUMERAL cBIT1 c_0 f4 c==> cHAS_SIZE * * part cs_leaf f0 cCONS f1 cCONS f2 cNIL f4 c= ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f6 cNIL creal_of_num cNUMERAL cBIT1 c_0
- ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u1 , (f (SUC i))))) |- (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u1 , (f (SUC i))))) = T)
T c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 * f1 cSUC f2 c= creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 * f1 cSUC f2 cT
+ pack_nonlinear_non_ox3q1h, (packing V), (saturated V), ((((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) /\ ((u0 IN V) /\ ((u1 IN V) /\ (((periodic f) n) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (((((cc_4 V) u0) u1) f) i)) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))))))))))), ((NUMERAL (BIT1 _0)) < n) |- (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> cpack_nonlinear_non_ox3q1h c==> cpacking f0 c==> csaturated f0 c==> c/\ cHAS_SIZE * * part cs_leaf f0 cCONS f1 cCONS f2 cNIL f3 c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cperiodic f4 f3 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c/\ ccritical_edge_y cdistance c, f1 f2 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f5 f3 f4 c/\ c~ ccc_4 f0 f1 f2 f4 f6 c/\ creal_lt cdistance c, f1 * f4 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f2 * f4 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c< cNUMERAL cBIT1 c_0 f3 c= ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f4 f6 cNIL creal_of_num cNUMERAL cBIT1 c_0
+ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- (((\y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i)))))))))))) y4) ==> (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cpacking f0 c==> csaturated f0 c==> ccritical_edge_y cdistance c, f1 f2 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> * / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c/\ creal_le cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c==> c/\ creal_lt cazim f1 f2 * f3 f4 * f3 cSUC f4 cpi creal_le cdistance c, * f3 f4 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f3 f4 * f3 cSUC f4 f5 c= ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_of_num cNUMERAL cBIT1 c_0
+ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- ((?y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i)))))))))))) ==> (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cpacking f0 c==> csaturated f0 c==> ccritical_edge_y cdistance c, f1 f2 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c? / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c/\ creal_le cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c==> c/\ creal_lt cazim f1 f2 * f3 f4 * f3 cSUC f4 cpi creal_le cdistance c, * f3 f4 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f3 f4 * f3 cSUC f4 c= ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_of_num cNUMERAL cBIT1 c_0
+ (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) /\ (((((((azim_mcell V) f) u0) u1) i) = ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (?y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i))))))))))))))), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> cpacking f0 c==> csaturated f0 c==> ccritical_edge_y cdistance c, f1 f2 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c/\ c= cazim_mcell f0 f3 f1 f2 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c? / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c/\ creal_le cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c==> c/\ creal_lt cazim f1 f2 * f3 f4 * f3 cSUC f4 cpi creal_le cdistance c, * f3 f4 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f3 f4 * f3 cSUC f4 c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_of_num cNUMERAL cBIT1 c_0
+ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- ((critical_edge_y (distance (u0 , u1))) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))))))))
T c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cpacking f0 c==> csaturated f0 c==> ccritical_edge_y cdistance c, f1 f2 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ ccritical_edge_y cdistance c, f1 f2 c/\ creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ |- ((!n. (!f. (!i. ((pack_nonlinear_non_ox3q1h /\ (((NUMERAL (BIT1 _0)) < n) /\ ((packing V) /\ ((saturated V) /\ ((((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) /\ ((u0 IN V) /\ ((u1 IN V) /\ (((periodic f) n) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (((((cc_4 V) u0) u1) f) i)) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))))))))))))))) ==> (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0)))))))) = T)
T c= ! ! ! c==> c/\ cpack_nonlinear_non_ox3q1h c/\ c< cNUMERAL cBIT1 c_0 b0 c/\ cpacking f0 c/\ csaturated f0 c/\ cHAS_SIZE * * part cs_leaf f0 cCONS f1 cCONS f2 cNIL b0 c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cperiodic b1 b0 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ccritical_edge_y cdistance c, f1 f2 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 b0 b1 c/\ c~ ccc_4 f0 f1 f2 b1 b2 c/\ creal_lt cdistance c, f1 * b1 b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f2 * b1 b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c= ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * b1 b2 cNIL creal_of_num cNUMERAL cBIT1 c_0 cT
+ pack_nonlinear_non_ox3q1h, (packing V), ((saturated V) /\ ((((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) /\ ((u0 IN V) /\ ((u1 IN V) /\ (((periodic f) n) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (((((cc_4 V) u0) u1) f) i)) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)))))))))))), ((NUMERAL (BIT1 _0)) < n) |- (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> cpack_nonlinear_non_ox3q1h c==> cpacking f0 c==> c/\ csaturated f0 c/\ cHAS_SIZE * * part cs_leaf f0 cCONS f1 cCONS f2 cNIL f3 c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cperiodic f4 f3 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c/\ ccritical_edge_y cdistance c, f1 f2 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f5 f3 f4 c/\ c~ ccc_4 f0 f1 f2 f4 f6 c/\ creal_lt cdistance c, f1 * f4 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f2 * f4 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c< cNUMERAL cBIT1 c_0 f3 c= ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f4 f6 cNIL creal_of_num cNUMERAL cBIT1 c_0
- ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u1 , (f i)))) |- (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u1 , (f i)))) = T)
T c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 * f1 f2 c= creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 * f1 f2 cT
+ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- (((critical_edge_y (distance (u0 , u1))) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))))) /\ ((((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cpacking f0 c==> csaturated f0 c==> ccritical_edge_y cdistance c, f1 f2 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c/\ ccritical_edge_y cdistance c, f1 f2 c/\ creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c/\ cpacking f0 c/\ csaturated f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c= ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_of_num cNUMERAL cBIT1 c_0 c= ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_of_num cNUMERAL cBIT1 c_0
- (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) |- (~ (((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))
T c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c~ c= * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), (((real_le (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u1 , (f i))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f (SUC i))))) (distance (u1 , (f (SUC i)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) /\ (((((((azim_mcell V) f) u0) u1) i) = ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (?y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i))))))))))))))))))), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> cpacking f0 c==> csaturated f0 c==> ccritical_edge_y cdistance c, f1 f2 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ creal_le cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f2 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f2 * f3 f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 cSUC f4 cdistance c, f2 * f3 cSUC f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c/\ c= cazim_mcell f0 f3 f1 f2 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c? / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c/\ creal_le cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c==> c/\ creal_lt cazim f1 f2 * f3 f4 * f3 cSUC f4 cpi creal_le cdistance c, * f3 f4 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f3 f4 * f3 cSUC f4 c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_of_num cNUMERAL cBIT1 c_0
+ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = T)
T c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cT
+ |- (((((critical_edge_y (distance (u0 , u1))) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))))) ==> (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0))))) = (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0)))))
T c= c==> c==> c/\ ccritical_edge_y cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 * f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, f1 * f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ c= ccc_ke f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c/\ cpacking f4 c/\ csaturated f4 c/\ cbarV f4 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c/\ cleaf f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c~ cnegligible * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c= ccritical_weight f4 * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL creal_of_num cNUMERAL cBIT1 c_0 c= ccritical_weight f4 * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL creal_of_num cNUMERAL cBIT1 c_0 c= ccritical_weight f4 * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL creal_of_num cNUMERAL cBIT1 c_0
+ (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u0 , (f (SUC i))))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u1 , (f i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u1 , (f (SUC i))))) /\ (((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u1 , (f i))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f (SUC i))))) (distance (u1 , (f (SUC i)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) /\ (((((((azim_mcell V) f) u0) u1) i) = ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (?y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i))))))))))))))))))))))))), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> cpacking f0 c==> csaturated f0 c==> ccritical_edge_y cdistance c, f1 f2 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 * f3 f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 * f3 cSUC f4 c/\ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f2 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f2 * f3 f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 cSUC f4 cdistance c, f2 * f3 cSUC f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c/\ c= cazim_mcell f0 f3 f1 f2 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c? / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c/\ creal_le cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c==> c/\ creal_lt cazim f1 f2 * f3 f4 * f3 cSUC f4 cpi creal_le cdistance c, * f3 f4 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f3 f4 * f3 cSUC f4 c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_of_num cNUMERAL cBIT1 c_0
+ pack_nonlinear_non_ox3q1h, (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (((((cc_4 V) u0) u1) f) i)), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), ((NUMERAL (BIT1 _0)) < n), (((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (T = (pack_nonlinear_non_ox3q1h /\ ((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (~ (((((cc_4 V) u0) u1) f) i)))))))))))
T c==> cpack_nonlinear_non_ox3q1h c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccc_4 f3 f0 f1 f4 f5 c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cHAS_SIZE * * part cs_leaf f3 cCONS f0 cCONS f1 cNIL f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c= cT c/\ cpack_nonlinear_non_ox3q1h c/\ cpacking f3 c/\ csaturated f3 c/\ cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ccritical_edge_y cdistance c, f0 f1 c/\ cHAS_SIZE * * part cs_leaf f3 cCONS f0 cCONS f1 cNIL f6 c/\ c< cNUMERAL cBIT1 c_0 f6 c~ ccc_4 f3 f0 f1 f4 f5
+ (((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) |- ((((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) = T)
T c==> cHAS_SIZE * * part cs_leaf f0 cCONS f1 cCONS f2 cNIL f3 c= cHAS_SIZE * * part cs_leaf f0 cCONS f1 cCONS f2 cNIL f3 cT
+ ((\y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i)))))))))))) y4) |- (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i)))))))))))
T c==> * / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 b0 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 c/\ creal_le cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 b0 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 cazim f0 f1 * f2 f3 * f2 cSUC f3 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 b0 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 c==> c/\ creal_lt cazim f0 f1 * f2 f3 * f2 cSUC f3 cpi creal_le cdistance c, * f2 f3 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f2 f3 * f2 cSUC f3 f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f4 c/\ creal_le f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 f4 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 c/\ creal_le cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 f4 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 cazim f0 f1 * f2 f3 * f2 cSUC f3 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 f4 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 c==> c/\ creal_lt cazim f0 f1 * f2 f3 * f2 cSUC f3 cpi creal_le cdistance c, * f2 f3 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= f4 cdistance c, * f2 f3 * f2 cSUC f3
+ (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f (SUC i))))) (distance (u1 , (f (SUC i)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) /\ (((((((azim_mcell V) f) u0) u1) i) = ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (?y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i)))))))))))))))), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> cpacking f0 c==> csaturated f0 c==> ccritical_edge_y cdistance c, f1 f2 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 cSUC f4 cdistance c, f2 * f3 cSUC f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c/\ c= cazim_mcell f0 f3 f1 f2 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c? / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c/\ creal_le cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c==> c/\ creal_lt cazim f1 f2 * f3 f4 * f3 cSUC f4 cpi creal_le cdistance c, * f3 f4 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f3 f4 * f3 cSUC f4 c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_of_num cNUMERAL cBIT1 c_0
+ pack_nonlinear_non_ox3q1h, (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), ((critical_edge_y (distance (u0 , u1))) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (((((cc_4 V) u0) u1) f) i)) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)))))), ((NUMERAL (BIT1 _0)) < n), (((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) |- (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> cpack_nonlinear_non_ox3q1h c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> c/\ ccritical_edge_y cdistance c, f0 f1 c/\ cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c/\ c~ ccc_4 f3 f0 f1 f5 f6 c/\ creal_lt cdistance c, f0 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f1 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c< cNUMERAL cBIT1 c_0 f4 c==> cHAS_SIZE * * part cs_leaf f3 cCONS f0 cCONS f1 cNIL f4 c= ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL creal_of_num cNUMERAL cBIT1 c_0
+ ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) |- (((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) = T)
T c==> creal_lt cdistance c, f0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c= creal_lt cdistance c, f0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus cT
- ((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f (SUC i))))) (distance (u1 , (f (SUC i)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) |- (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f (SUC i))))) (distance (u1 , (f (SUC i)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = T)
T c==> creal_lt ceta_y cdistance c, f0 f1 cdistance c, f0 * f2 cSUC f3 cdistance c, f1 * f2 cSUC f3 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_lt ceta_y cdistance c, f0 f1 cdistance c, f0 * f2 cSUC f3 cdistance c, f1 * f2 cSUC f3 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
+ (?y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i)))))))))))), (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> c? / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 b0 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 c/\ creal_le cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 b0 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 cazim f0 f1 * f2 f3 * f2 cSUC f3 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 b0 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 c==> c/\ creal_lt cazim f0 f1 * f2 f3 * f2 cSUC f3 cpi creal_le cdistance c, * f2 f3 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f2 f3 * f2 cSUC f3 c==> c~ cnegligible * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> cpacking f4 c==> csaturated f4 c==> ccritical_edge_y cdistance c, f0 f1 c==> c= ccc_ke f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> creal_lt cdistance c, f0 * f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f1 * f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> cbarV f4 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c= ccritical_weight f4 * * part ccc_cell f4 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL creal_of_num cNUMERAL cBIT1 c_0
- (u1 IN V) |- ((u1 IN V) = T)
T c==> cIN f0 f1 c= cIN f0 f1 cT
+ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = T)
T c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cT
+ |- ((\u1. (!u2. (((critical_edge_y (distance (u0 , u1))) /\ (((real_lt (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ (((real_lt (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((packing V) /\ ((saturated V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))) /\ (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL)))))))))))))) ==> (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS u2) NIL))))) = (real_of_num (NUMERAL (BIT1 _0))))))) u1)
T * / ! c==> c/\ ccritical_edge_y cdistance c, f0 b0 c/\ creal_lt cdistance c, f0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ creal_lt cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c/\ c= ccc_ke f1 cCONS f0 cCONS b0 cCONS b1 cNIL cNUMERAL cBIT1 cBIT1 c_0 c/\ cpacking f1 c/\ csaturated f1 c/\ cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f1 cCONS f0 cCONS b0 cCONS b1 cNIL c/\ cleaf f1 cCONS f0 cCONS b0 cCONS b1 cNIL c~ cnegligible * * part ccc_cell f1 cCONS f0 cCONS b0 cCONS b1 cNIL c= ccritical_weight f1 * * part ccc_cell f1 cCONS f0 cCONS b0 cCONS b1 cNIL creal_of_num cNUMERAL cBIT1 c_0 f2
- ((real_le (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) |- (((real_le (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = T)
T c==> creal_le cdistance c, f0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_le cdistance c, f0 * f1 cSUC f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
- ((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) |- (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = T)
T c==> creal_le f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_le f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
+ (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u1 , (f i))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f (SUC i))))) (distance (u1 , (f (SUC i)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) /\ (((((((azim_mcell V) f) u0) u1) i) = ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (?y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i))))))))))))))))), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> cpacking f0 c==> csaturated f0 c==> ccritical_edge_y cdistance c, f1 f2 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f2 * f3 f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 cSUC f4 cdistance c, f2 * f3 cSUC f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c/\ c= cazim_mcell f0 f3 f1 f2 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c? / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c/\ creal_le cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c==> c/\ creal_lt cazim f1 f2 * f3 f4 * f3 cSUC f4 cpi creal_le cdistance c, * f3 f4 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f3 f4 * f3 cSUC f4 c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_of_num cNUMERAL cBIT1 c_0
+ pack_nonlinear_non_ox3q1h, (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (((((cc_4 V) u0) u1) f) i)), (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))), ((NUMERAL (BIT1 _0)) < n), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), (((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> cpack_nonlinear_non_ox3q1h c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccc_4 f3 f0 f1 f4 f5 c==> cpacking f3 c==> csaturated f3 c==> ccritical_edge_y cdistance c, f0 f1 c==> c/\ creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f1 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c< cNUMERAL cBIT1 c_0 f6 c==> creal_lt cdistance c, f0 * f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cHAS_SIZE * * part cs_leaf f3 cCONS f0 cCONS f1 cNIL f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c= ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL creal_of_num cNUMERAL cBIT1 c_0
+ (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u1 , (f i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u1 , (f (SUC i))))) /\ (((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u1 , (f i))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f (SUC i))))) (distance (u1 , (f (SUC i)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) /\ (((((((azim_mcell V) f) u0) u1) i) = ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (?y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i)))))))))))))))))))))))), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> cpacking f0 c==> csaturated f0 c==> ccritical_edge_y cdistance c, f1 f2 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 * f3 f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 * f3 cSUC f4 c/\ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f2 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f2 * f3 f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 cSUC f4 cdistance c, f2 * f3 cSUC f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c/\ c= cazim_mcell f0 f3 f1 f2 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c? / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c/\ creal_le cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c==> c/\ creal_lt cazim f1 f2 * f3 f4 * f3 cSUC f4 cpi creal_le cdistance c, * f3 f4 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f3 f4 * f3 cSUC f4 c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_of_num cNUMERAL cBIT1 c_0
+ (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), (((real_le (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u0 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_le (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u1 , (f i))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f (SUC i))))) (distance (u1 , (f (SUC i)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) /\ (((((((azim_mcell V) f) u0) u1) i) = ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (?y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i))))))))))))))))))))), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> cpacking f0 c==> csaturated f0 c==> ccritical_edge_y cdistance c, f1 f2 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ creal_le cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f1 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, f2 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f2 * f3 f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 cSUC f4 cdistance c, f2 * f3 cSUC f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c/\ c= cazim_mcell f0 f3 f1 f2 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c? / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c/\ creal_le cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c==> c/\ creal_lt cazim f1 f2 * f3 f4 * f3 cSUC f4 cpi creal_le cdistance c, * f3 f4 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f3 f4 * f3 cSUC f4 c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_of_num cNUMERAL cBIT1 c_0
+ pack_nonlinear_non_ox3q1h, (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (((((cc_4 V) u0) u1) f) i)) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))))))), ((NUMERAL (BIT1 _0)) < n), (((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) |- (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> cpack_nonlinear_non_ox3q1h c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ccritical_edge_y cdistance c, f0 f1 c/\ cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c/\ c~ ccc_4 f3 f0 f1 f5 f6 c/\ creal_lt cdistance c, f0 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f1 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c< cNUMERAL cBIT1 c_0 f4 c==> cHAS_SIZE * * part cs_leaf f3 cCONS f0 cCONS f1 cNIL f4 c= ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!w0. (!n. (!f. (!i. ((pack_nonlinear_non_ox3q1h /\ (((NUMERAL (BIT1 _0)) < n) /\ ((packing V) /\ ((saturated V) /\ ((((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) /\ ((u0 IN V) /\ ((u1 IN V) /\ (((periodic f) n) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (((((cc_4 V) u0) u1) f) i)) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))))))))))))))) ==> (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0))))))))) = T)
T c= ! ! ! ! c==> c/\ cpack_nonlinear_non_ox3q1h c/\ c< cNUMERAL cBIT1 c_0 b1 c/\ cpacking f0 c/\ csaturated f0 c/\ cHAS_SIZE * * part cs_leaf f0 cCONS f1 cCONS f2 cNIL b1 c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cperiodic b2 b1 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ ccritical_edge_y cdistance c, f1 f2 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 b2 c/\ c~ ccc_4 f0 f1 f2 b2 b3 c/\ creal_lt cdistance c, f1 * b2 b3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f2 * b2 b3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c= ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * b2 b3 cNIL creal_of_num cNUMERAL cBIT1 c_0 cT
- ((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) |- (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) = T)
T c==> creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 f4 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 c= creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 f4 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 cT
+ pack_nonlinear_non_ox3q1h, (packing V), (saturated V), ((((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) /\ ((u0 IN V) /\ ((u1 IN V) /\ (((periodic f) n) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (((((cc_4 V) u0) u1) f) i)) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))))))))))), ((NUMERAL (BIT1 _0)) < n), (((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) |- (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> cpack_nonlinear_non_ox3q1h c==> cpacking f0 c==> csaturated f0 c==> c/\ cHAS_SIZE * * part cs_leaf f0 cCONS f1 cCONS f2 cNIL f3 c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cperiodic f4 f3 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c/\ ccritical_edge_y cdistance c, f1 f2 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f5 f3 f4 c/\ c~ ccc_4 f0 f1 f2 f4 f6 c/\ creal_lt cdistance c, f1 * f4 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f2 * f4 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c< cNUMERAL cBIT1 c_0 f3 c==> cHAS_SIZE * * part cs_leaf f0 cCONS f1 cCONS f2 cNIL f3 c= ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f4 f6 cNIL creal_of_num cNUMERAL cBIT1 c_0
+ (packing V), (saturated V), (critical_edge_y (distance (u0 , u1))), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT1 (BIT1 _0)))), (((real_le (distance (u1 , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u1 , (f i))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f (SUC i))))) (distance (u1 , (f (SUC i)))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) /\ (((((((azim_mcell V) f) u0) u1) i) = ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (?y4. (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) /\ (((real_le y4) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) /\ ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i)))))))))))))))))), ((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> cpacking f0 c==> csaturated f0 c==> ccritical_edge_y cdistance c, f1 f2 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ creal_le cdistance c, f2 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f2 * f3 f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt ceta_y cdistance c, f1 f2 cdistance c, f1 * f3 cSUC f4 cdistance c, f2 * f3 cSUC f4 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c/\ c= cazim_mcell f0 f3 f1 f2 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c? / c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ creal_le b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c/\ creal_le cdih_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 cazim f1 f2 * f3 f4 * f3 cSUC f4 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f1 f2 cdistance c, f1 * f3 f4 cdistance c, f1 * f3 cSUC f4 b0 cdistance c, f2 * f3 cSUC f4 cdistance c, f2 * f3 f4 c==> c/\ creal_lt cazim f1 f2 * f3 f4 * f3 cSUC f4 cpi creal_le cdistance c, * f3 f4 * f3 cSUC f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 cdistance c, * f3 f4 * f3 cSUC f4 c==> creal_lt cdistance c, f1 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> creal_lt cdistance c, f2 * f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_of_num cNUMERAL cBIT1 c_0
+ pack_nonlinear_non_ox3q1h, (packing V), (saturated V), ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((critical_edge_y (distance (u0 , u1))) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (((((cc_4 V) u0) u1) f) i)) /\ (((real_lt (distance (u0 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus)) /\ ((real_lt (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) hminus))))))), ((NUMERAL (BIT1 _0)) < n), (((s_leaf V) ((CONS u0) ((CONS u1) NIL))) HAS_SIZE n) |- (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> cpack_nonlinear_non_ox3q1h c==> cpacking f0 c==> csaturated f0 c==> c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ccritical_edge_y cdistance c, f1 f2 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccc_4 f0 f1 f2 f5 f6 c/\ creal_lt cdistance c, f1 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus creal_lt cdistance c, f2 * f5 f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 chminus c==> c< cNUMERAL cBIT1 c_0 f4 c==> cHAS_SIZE * * part cs_leaf f0 cCONS f1 cCONS f2 cNIL f4 c= ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL creal_of_num cNUMERAL cBIT1 c_0
- ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) |- (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y4) = T)
T c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 c= creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 cT
- (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) |- (((~ (((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = F)) = ((((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = F))
T c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c= c==> c~ c= * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= c= * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cF c= c= * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cF
- (~ (collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY))))) |- ((collinear (u0 INSERT (u1 INSERT ((f i) INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 f3 part cEMPTY cF
- (~ (negligible ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) |- ((negligible ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL))))) = F)
T c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL c= cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL cF
- ((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i)))))) |- (((((real_lt ((((azim u0) u1) (f i)) (f (SUC i)))) pi) /\ ((real_le (distance ((f i) , (f (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (y4 = (distance ((f i) , (f (SUC i)))))) = T)
T c==> c==> c/\ creal_lt cazim f0 f1 * f2 f3 * f2 cSUC f3 cpi creal_le cdistance c, * f2 f3 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= f4 cdistance c, * f2 f3 * f2 cSUC f3 c= c==> c/\ creal_lt cazim f0 f1 * f2 f3 * f2 cSUC f3 cpi creal_le cdistance c, * f2 f3 * f2 cSUC f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= f4 cdistance c, * f2 f3 * f2 cSUC f3 cT
- (~ (collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY))))) |- ((collinear (u0 INSERT (u1 INSERT ((f (SUC i)) INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT * f2 cSUC f3 part cEMPTY cF
- ((leaf V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) |- (((leaf V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) = T)
T c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL c= cleaf f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL cT
- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL))))) |- (((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))
T c==> c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c= * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
- (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) |- ((((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = F)
T c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c= c= * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cF
- (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL))))) |- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL))))) = T)
T c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL c= cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- ((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u1 , (f i))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) |- (((real_lt (((eta_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u1 , (f i))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = T)
T c==> creal_lt ceta_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f1 * f2 f3 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_lt ceta_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f1 * f2 f3 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
- (((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) |- ((((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) = T)
T c==> cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL * * * * part cwedge_ge f2 f1 * f3 f4 * f3 cSUC f4 c= cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 cSUC f4 cNIL * * * * part cwedge_ge f2 f1 * f3 f4 * f3 cSUC f4 cT
- ((real_le (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) |- (((real_le (distance (u1 , (f i)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = T)
T c==> creal_le cdistance c, f0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_le cdistance c, f0 * f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) = T)
T c==> cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 cT
- ((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) |- (((real_lt (hl ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = T)
T c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f2 f3 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_lt chl cCONS f0 cCONS f1 cCONS * f2 f3 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
- ((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) |- (((real_le ((((((dih_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) ((((azim u0) u1) (f i)) (f (SUC i)))) = T)
T c==> creal_le cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 f4 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 cazim f0 f1 * f2 f3 * f2 cSUC f3 c= creal_le cdih_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 f4 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 cazim f0 f1 * f2 f3 * f2 cSUC f3 cT
- ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) |- (((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = T)
T c==> creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
- ((real_lt (hl ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) |- (((real_lt (hl ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = T)
T c==> creal_lt chl cCONS f0 cCONS f1 cCONS * f2 cSUC f3 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_lt chl cCONS f0 cCONS f1 cCONS * f2 cSUC f3 cNIL csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
- (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL)))))) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((cc_cell V) ((CONS u1) ((CONS u0) ((CONS (f (SUC i))) NIL))))) = F)
T c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL c= c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f1 cCONS * f3 cSUC f4 cNIL cF
- (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0)))) |- (T = (((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c= ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_of_num cNUMERAL cBIT1 c_0 c= cT c= ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL creal_of_num cNUMERAL cBIT1 c_0
- ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) |- (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((rad2_y (distance (u0 , u1))) (distance (u0 , (f i)))) (distance (u0 , (f (SUC i))))) y4) (distance (u1 , (f (SUC i))))) (distance (u1 , (f i))))) = T)
T c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 f4 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 c= creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 crad2_y cdistance c, f0 f1 cdistance c, f0 * f2 f3 cdistance c, f0 * f2 cSUC f3 f4 cdistance c, f1 * f2 cSUC f3 cdistance c, f1 * f2 f3 cT
- ((periodic f) n) |- (((periodic f) n) = T)
T c==> cperiodic f0 f1 c= cperiodic f0 f1 cT
