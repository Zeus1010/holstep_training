N Planarity.exists_point_notxin_convex_in_xfan
C |- (!x. (!V. (!E. (!z. (((FAN (x , (V , E))) /\ ((~ (x = z)) /\ (~ (E = EMPTY)))) ==> (?v. ((v IN (xfan (x , (V , E)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ c~ c= f0 f3 c~ c= f2 part cEMPTY c? / c/\ cIN b0 * part cxfan c, f0 c, f1 f2 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D DISJOINT
A |- (!s. (!t. (((DISJOINT s) t) = ((s INTER t) = EMPTY))))
T c= cDISJOINT f0 f1 c= * * part cINTER f0 f1 part cEMPTY
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D CONVEX_HULL_SUBSET_AFFINE_HULL
A |- (!s. (((hull convex) s) SUBSET ((hull affine) s)))
T cSUBSET * * part chull part cconvex f0 * * part chull part caffine f0
D Sphere.aff
A |- (aff = (hull affine))
T c= part caff * part chull part caffine
D Fan.remark1_fan
A |- (!x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))))
T c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
D Fan.xfan
A |- (!V. (!E. (!x. ((xfan (x , (V , E))) = (GSPEC (\GEN%PVAR%5468. (?v. (((SETSPEC GEN%PVAR%5468) (?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e))))) v))))))))
T c= * part cxfan c, f0 c, f1 f2 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ * f2 b2 cIN b1 * * part caff_ge * * part cINSERT f0 part cEMPTY b2 b1
D Topology.expand_edge_graph_fan
A |- (!x. (!V. (!E. (!e. (((FAN (x , (V , E))) /\ (e IN E)) ==> (?v. (?w. (e = (v INSERT (w INSERT EMPTY))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 cIN f3 f2 c? / c? / c= f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
D Planarity.point_in_aff_ge
A |- (!x. (!v. (!w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
D Planarity.POINT_IN_LINE1
A |- (!x. (!y. (y IN (aff (x INSERT (y INSERT EMPTY))))))
T cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
D Planarity.sym_line_fan
A |- (!x. (!y. (!z. (((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) ==> ((aff (x INSERT (z INSERT EMPTY))) = (aff (x INSERT (y INSERT EMPTY))))))))
T c==> c/\ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- (~ (A y)), ((A y) /\ (!y. (~ (A y)))) |- ((~ (A y)) /\ (A y))
T c==> c~ * f0 f1 c==> c/\ * f0 f1 ! c~ * f0 b0 c/\ c~ * f0 f1 * f0 f1
+ |- ((\w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))) w)
T * / c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2
+ ((A y) /\ (!y. (~ (A y)))) |- ((\y. (~ (A y))) _3016772)
T c==> c/\ * f0 f1 ! c~ * f0 b0 * / c~ * f0 b0 f2
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (w IN (((set_of_edge v) V) E)), (x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))) ==> (E (v INSERT (w INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) |- ((\x. ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull affine) (v INSERT (z INSERT EMPTY))) x))) _3016769)
T c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 * / c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 f3
- (~ (((hull affine) (v INSERT (z INSERT EMPTY))) x)), ((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) |- ((~ (((hull affine) (v INSERT (z INSERT EMPTY))) x)) /\ (((hull affine) (v INSERT (z INSERT EMPTY))) x))
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c/\ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (x = z)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))))))), ((v INSERT (w INSERT EMPTY)) IN E), (w IN (((set_of_edge v) V) E)) |- (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f3 c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f1 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f4 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c? / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
- (!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) |- (((~ (_3016890 = x)) \/ (~ (_3016890 = v))) /\ ((~ (_3016890 = w)) \/ (~ (_3016890 = v))))
T c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c\/ c~ c= f3 f0 c~ c= f3 f2 c\/ c~ c= f3 f1 c~ c= f3 f2
+ |- ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V)
T * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1
+ |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
- |- (((!v. ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F)) ==> ((\v. ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F)) v)) = ((\v. ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F)) v))
T c= c==> ! c==> c~ c==> c/\ chull part cconvex * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 ! c==> chull part cconvex * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 cF * / c==> c~ c==> c/\ chull part cconvex * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 ! c==> chull part cconvex * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 cF f2 * / c==> c~ c==> c/\ chull part cconvex * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 ! c==> chull part cconvex * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 cF f2
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), ((x' = x) /\ ((x' = v) \/ (x' = z))), ((x' = z) ==> F) |- F
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c==> c/\ c= f4 f0 c\/ c= f4 f2 c= f4 f1 c==> c==> c= f4 f1 cF cF
+ (E (v INSERT (w INSERT EMPTY))) |- ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f3 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> * f4 f1 c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> c~ chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f3 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (!y. (((\y. (((A y) /\ (!y. (~ (A y)))) \/ ((!x. (~ (A x))) /\ (A y)))) y) ==> F))
T c==> * / c\/ c/\ * f0 b0 ! c~ * f0 b1 c/\ ! c~ * f0 b1 * f0 b0 f1 cF
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
- (~ F), ((!x. (~ (A x))) /\ (A y)) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ ! c~ * f0 b0 * f0 f1 c/\ c~ cF cF
- |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- (~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) |- ((~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) /\ F)
T c==> c~ c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= * f4 b0 c\/ c= b0 f5 c= b0 f6 c==> * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cset_of_edge f5 f1 f2 f6 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f5 c= b0 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f6 c= b0 f5 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f5 c= b0 f6 c==> c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> * f1 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f5 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f6 c==> c~ chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f0 * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c~ c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= * f4 b0 c\/ c= b0 f5 c= b0 f6 c==> * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cset_of_edge f5 f1 f2 f6 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f5 c= b0 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f6 c= b0 f5 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f5 c= b0 f6 c==> c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> * f1 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f5 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f6 c==> c~ chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f0 * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cF
- |- (((((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F)) ==> (((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F))) = (((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F)))
T c= c==> c==> c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
+ (x' = z), ((x' = x) /\ ((x' = w) \/ (x' = z))) |- (z = x)
T c==> c= f0 f1 c==> c/\ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c= f1 f2
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))), ((v INSERT (w INSERT EMPTY)) IN E), (w IN (((set_of_edge v) V) E)), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f4 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c? / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (w IN (((set_of_edge v) V) E)), (x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c? / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
- |- ((!x''. ((~ (x' = x)) \/ ((~ (x'' = v)) /\ (~ (x'' = w))))) = ((~ (x' = x)) \/ (!x'. ((~ (x' = v)) /\ (~ (x' = w))))))
T c= ! c\/ c~ c= f0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 c\/ c~ c= f0 f1 ! c/\ c~ c= b0 f2 c~ c= b0 f3
- |- (((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))))))) = T)
T c= c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= * f4 b0 c\/ c= b0 f5 c= b0 f6 c==> * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cset_of_edge f5 f1 f2 f6 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f5 c= b0 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f6 c= b0 f5 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f5 c= b0 f6 c==> c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> * f1 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f5 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f6 c==> chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f0 * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cT
+ |- (((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F) = ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x)))
T c= c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
+ (x' = w), ((x' = x) /\ ((x' = w) \/ (x' = z))) |- (w = x)
T c==> c= f0 f1 c==> c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c= f1 f2
- (x' = z), ((x' = x) /\ ((x' = w) \/ (x' = z))) |- (F = F)
T c==> c= f0 f1 c==> c/\ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c= cF cF
- (x' = w), ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), ((x' = x) /\ ((x' = w) \/ (x' = z))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c~ c= f2 f3 c/\ c~ c= f2 f4 c~ c= f2 f1 c==> c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c==> c~ cF cF
- (_3016952 = _3016955), (_3016954 = _3016957) |- ((_3016952 = _3016955) /\ ((~ (_3016953 = _3016956)) \/ ((((aff_ge _3016955) _3016956) _3016957) \/ (~ (((aff_ge _3016952) _3016953) _3016954)))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ c~ c= f4 f5 c\/ caff_ge f1 f5 f3 c~ caff_ge f0 f4 f2
+ (~ (x = z)), (FAN (x , (V , E))), (y IN E) |- (!v. (((\v. (?w. (y = (v INSERT (w INSERT EMPTY))))) v) ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> cIN f4 f3 ! c==> * / c? / c= f4 * * part cINSERT b1 * * part cINSERT b1 part cEMPTY b0 c? / c/\ c? / c/\ * f3 b1 cIN b1 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b1 * * part cINSERT f1 part cEMPTY
+ (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (((hull affine) (x INSERT (z INSERT EMPTY))) = ((hull affine) (x INSERT (v INSERT EMPTY)))), (x IN ((hull affine) (w INSERT (z INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (w INSERT (z INSERT EMPTY))) |- ((((x IN (aff (w INSERT (z INSERT EMPTY)))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (z INSERT EMPTY)))) ==> ((aff (x INSERT (z INSERT EMPTY))) = (aff (x INSERT (w INSERT EMPTY))))) ==> F)
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> c==> c/\ cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= * part caff * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cF
+ (E (v INSERT (w INSERT EMPTY))), ((((set_of_edge v) V) E) w) |- (((((set_of_edge v) V) E) w) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cset_of_edge f1 f3 f0 f2 c/\ cset_of_edge f1 f3 f0 f2 c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f4 f1 c==> c~ c= f4 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f4 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> * f3 f1 c==> c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> c~ chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ (E (v INSERT (w INSERT EMPTY))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) |- (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) /\ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c/\ c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f3 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((!E. (!e. (((FAN (x , (V , E))) /\ (e IN E)) ==> (?v. (?w. (e = (v INSERT (w INSERT EMPTY)))))))) ==> ((\E. (!e. (((FAN (x , (V , E))) /\ (e IN E)) ==> (?v. (?w. (e = (v INSERT (w INSERT EMPTY)))))))) E)) = ((\E. (!e. (((FAN (x , (V , E))) /\ (e IN E)) ==> (?v. (?w. (e = (v INSERT (w INSERT EMPTY)))))))) E))
T c= c==> ! ! c==> c/\ cFAN c, f0 c, f1 b0 cIN b1 b0 c? / c? / c= b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / ! c==> c/\ cFAN c, f0 c, f1 b0 cIN b1 b0 c? / c? / c= b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2 * / ! c==> c/\ cFAN c, f0 c, f1 b0 cIN b1 b0 c? / c? / c= b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2
- |- ((~ (x = x)) ==> (x = x))
T c==> c~ c= f0 f0 c= f0 f0
+ (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (((DISJOINT (x INSERT EMPTY)) (v INSERT (z INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (z INSERT EMPTY)))), (x IN ((hull affine) (v INSERT (z INSERT EMPTY)))), (x IN ((hull affine) (w INSERT (z INSERT EMPTY)))) |- F
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cIN f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cF
+ (!x. ((y x) = ((x = v) \/ (x = w)))) |- ((!x. ((y x) = ((x = v) \/ (x = w)))) /\ ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))
T c==> ! c= * f0 b0 c\/ c= b0 f1 c= b0 f2 c/\ ! c= * f0 b0 c\/ c= b0 f1 c= b0 f2 c==> * f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f3 c==> cset_of_edge f1 f4 f3 f2 c==> c~ ccollinear * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f5 f1 c==> c~ c= f5 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f5 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f5 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f5 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f5 * * part cINSERT f1 part cEMPTY f2 c==> * f4 f1 c==> c= c~ ccollinear * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f5 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f5 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> caff_ge * * part cINSERT f5 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f5 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> c~ chull part cconvex * * part cINSERT f1 * * part cINSERT f6 part cEMPTY f5 * f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
+ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))), (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> F), (((collinear (x INSERT (v INSERT (w INSERT EMPTY)))) /\ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> F) |- F
T c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c==> c/\ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF cF
+ (x' = z), ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), ((x' = x) /\ ((x' = w) \/ (x' = z))) |- ((x' = z) /\ F)
T c==> c= f0 f1 c==> c/\ c~ c= f2 f1 c/\ c~ c= f2 f3 c~ c= f2 f4 c==> c/\ c= f0 f2 c\/ c= f0 f4 c= f0 f1 c/\ c= f0 f1 cF
- |- ((_3016990 = _3016992) ==> ((~ (_3016991 = _3016993)) \/ ((_3016990 , _3016991) = (_3016992 , _3016993))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))), ((v INSERT (w INSERT EMPTY)) IN E), (w IN (((set_of_edge v) V) E)) |- (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f4 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c? / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
- |- ((\w. (!x. (!v. ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F)))) w)
T * / ! ! c==> c~ c==> c/\ c~ c= b1 f0 c/\ c~ c= b1 b2 c~ c= b1 b0 c/\ ! c~ c/\ c= b3 b1 c\/ c= b3 b2 c= b3 f0 ! c~ c/\ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1
+ |- ((\v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge v) V) E))) /\ (((v INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))) v)
T * / c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f4
+ |- ((!V. (!E. (!z. (((FAN (x , (V , E))) /\ ((~ (x = z)) /\ (~ (E = EMPTY)))) ==> (?v. ((v IN (xfan (x , (V , E)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))))) = T)
T c= ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ c~ c= f0 b2 c~ c= b1 part cEMPTY c? / c/\ cIN b3 * part cxfan c, f0 c, b0 b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b3 * * part cINSERT b2 part cEMPTY cT
+ |- (((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) /\ (((hull convex) (v INSERT (z INSERT EMPTY))) SUBSET ((hull affine) (v INSERT (z INSERT EMPTY))))) ==> (x IN ((hull affine) (v INSERT (z INSERT EMPTY)))))
T c==> c/\ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) |- (((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> F) = F)
T c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c= c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF cF
+ (E (v INSERT (w INSERT EMPTY))) |- ((E (v INSERT (w INSERT EMPTY))) /\ ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f3 f0 c==> cset_of_edge f1 f3 f0 f2 c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f4 f1 c==> c~ c= f4 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f4 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> * f3 f1 c==> c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) |- ((\x'. (((~ (x' = x)) \/ (~ (x' = v))) /\ ((~ (x' = x)) \/ (~ (x' = w))))) _3016891)
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * / c/\ c\/ c~ c= b0 f0 c~ c= b0 f1 c\/ c~ c= b0 f0 c~ c= b0 f2 f3
+ (~ (x = z)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E) |- (((FINITE (((set_of_edge v) V) E)) /\ ((w IN (((set_of_edge v) V) E)) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))) ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> c= f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c==> c/\ cFINITE * * * part cset_of_edge f5 f2 f3 c/\ cIN f6 * * * part cset_of_edge f5 f2 f3 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f0 f6 c/\ c~ c= f5 f6 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f6 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c/\ cIN f5 f2 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c? / c/\ c? / c/\ * f3 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f1 part cEMPTY
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ (~ (E (v INSERT (w INSERT EMPTY)))), (E (v INSERT (w INSERT EMPTY))) |- F
T c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN (((set_of_edge v) V) E)), (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))), (x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((\e. ((E e) /\ (w IN ((aff_ge (x INSERT EMPTY)) e)))) y)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY * / c/\ * f5 b0 cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY b0 f6
+ (FINITE (((set_of_edge v) V) E)), (E (v INSERT (w INSERT EMPTY))) |- ((FINITE (((set_of_edge v) V) E)) /\ (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))
T c==> cFINITE * * * part cset_of_edge f0 f1 f2 c==> * f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cFINITE * * * part cset_of_edge f0 f1 f2 c==> cset_of_edge f0 f1 f2 f3 c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f0 c==> c~ c= f4 f3 c==> c~ c= f0 f3 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f0 c= b0 f3 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f3 c= b0 f0 c==> ! c~ c/\ c= b0 f4 c\/ c= b0 f0 c= b0 f3 c==> c~ caff * * part cINSERT f4 * * part cINSERT f0 part cEMPTY f3 c==> * f1 f0 c==> c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c~ caff * * part cINSERT f4 * * part cINSERT f0 part cEMPTY f3 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f0 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f3 c==> c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f4 * f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- (x' = w), ((x' = x) /\ ((x' = w) \/ (x' = z))) |- (F = F)
T c==> c= f0 f1 c==> c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c= cF cF
- (!x. ((y x) = ((x = v) \/ (x = w)))) |- (!x. ((y x) \/ ((~ (x = v)) /\ (~ (x = w)))))
T c==> ! c= * f0 b0 c\/ c= b0 f1 c= b0 f2 ! c\/ * f0 b0 c/\ c~ c= b0 f1 c~ c= b0 f2
+ (~ (E (v INSERT (w INSERT EMPTY)))), (E (v INSERT (w INSERT EMPTY))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))), (((collinear (x INSERT (v INSERT (w INSERT EMPTY)))) /\ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> F) |- F
T c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> c==> c/\ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 cF cF
- |- ((!x''. (((~ (x'' = x)) /\ (~ (x'' = w))) \/ (~ (x' = v)))) = ((!x'. ((~ (x' = x)) /\ (~ (x' = w)))) \/ (~ (x' = v))))
T c= ! c\/ c/\ c~ c= b0 f0 c~ c= b0 f1 c~ c= f2 f3 c\/ ! c/\ c~ c= b0 f0 c~ c= b0 f1 c~ c= f2 f3
+ |- ((~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))) \/ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))
T c\/ c~ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (x' = v), ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), ((x' = x) /\ ((x' = v) \/ (x' = z))) |- ((x' = v) /\ F)
T c==> c= f0 f1 c==> c/\ c~ c= f2 f3 c/\ c~ c= f2 f1 c~ c= f2 f4 c==> c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c= f0 f1 cF
+ ((A y) /\ (!y. (~ (A y)))) |- (((A y) ==> F) = F)
T c==> c/\ * f0 f1 ! c~ * f0 b0 c= c==> * f0 f1 cF cF
+ (~ (x = v)), (E (v INSERT (w INSERT EMPTY))) |- ((~ (x = v)) /\ ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))
T c==> c~ c= f0 f1 c==> * f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f1 c==> c~ c= f0 f3 c==> c~ c= f1 f3 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f3 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f3 c= b0 f1 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f3 c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 c==> * f4 f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f1 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f3 c==> c~ chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f0 * f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY
- |- ((!x'. ((y x) \/ ((~ (x' = v)) /\ (~ (x' = w))))) = ((y x) \/ (!x. ((~ (x = v)) /\ (~ (x = w))))))
T c= ! c\/ * f0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 c\/ * f0 f1 ! c/\ c~ c= b0 f2 c~ c= b0 f3
- (x' = w), ((x' = x) /\ ((x' = w) \/ (x' = z))) |- ((~ (x = z)) = (~ (x = z)))
T c==> c= f0 f1 c==> c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c= c~ c= f2 f3 c~ c= f2 f3
+ (~ (x = z)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (w IN (((set_of_edge v) V) E)) |- ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) ==> ((v IN V) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))
T c==> c~ c= f0 f1 c==> cFINITE * * * part cset_of_edge f2 f3 f4 c==> cFAN c, f0 c, f3 f4 c==> c= f5 * * part cINSERT f2 * * part cINSERT f6 part cEMPTY c==> cIN * * part cINSERT f2 * * part cINSERT f6 part cEMPTY f4 c==> cIN f6 * * * part cset_of_edge f2 f3 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f2 c==> c~ c= f0 f6 c==> c~ c= f2 f6 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f6 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f6 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f6 part cEMPTY c==> c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f2 f3 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f6 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f6 part cEMPTY c==> cIN f6 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f6 part cEMPTY c==> cIN f0 * * part chull part cconvex * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * f4 * * part cINSERT f2 * * part cINSERT f6 part cEMPTY
- (x' = z), ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), ((x' = x) /\ ((x' = w) \/ (x' = z))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c~ c= f2 f1 c/\ c~ c= f2 f3 c~ c= f2 f4 c==> c/\ c= f0 f2 c\/ c= f0 f4 c= f0 f1 c==> c~ cF cF
+ ((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) |- (((hull convex) (v INSERT (z INSERT EMPTY))) x)
T c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
+ |- (((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) /\ (!x. ((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) ==> (x IN ((hull affine) (v INSERT (z INSERT EMPTY))))))) ==> (x IN ((hull affine) (v INSERT (z INSERT EMPTY)))))
T c==> c/\ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (E (v INSERT (w INSERT EMPTY))) |- (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cset_of_edge f1 f3 f0 f2 c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f4 f1 c==> c~ c= f4 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f4 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> * f3 f1 c==> c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((A y) /\ (!y. (~ (A y)))) |- (~ (A _3016772))
T c==> c/\ * f0 f1 ! c~ * f0 b0 c~ * f0 f2
- (~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) |- F
T c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF
+ (x' = w), ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), ((x' = x) /\ ((x' = w) \/ (x' = z))) |- ((x = x) ==> F)
T c==> c= f0 f1 c==> c/\ c~ c= f2 f3 c/\ c~ c= f2 f4 c~ c= f2 f1 c==> c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c==> c= f2 f2 cF
- (~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) |- ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) /\ F)
T c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c/\ c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
- |- (((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F) ==> ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F))
T c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF
+ (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (((DISJOINT (x INSERT EMPTY)) (v INSERT (z INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (z INSERT EMPTY)))), (x IN ((hull affine) (v INSERT (z INSERT EMPTY)))), (x IN ((hull affine) (w INSERT (z INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (z INSERT EMPTY))) |- F
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cIN f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF
+ ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), ((\x'. (((x' = x) /\ ((x' = v) \/ (x' = z))) \/ ((x' = x) /\ ((x' = w) \/ (x' = z))))) x') |- (((\x'. (((x' = x) /\ ((x' = v) \/ (x' = z))) \/ ((x' = x) /\ ((x' = w) \/ (x' = z))))) x') /\ F)
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c==> * / c\/ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 f4 c/\ * / c\/ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 f4 cF
+ (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (x IN ((hull affine) (v INSERT (z INSERT EMPTY)))) |- ((x IN ((hull convex) (w INSERT (z INSERT EMPTY)))) ==> F)
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part chull part cconvex * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))), ((v INSERT (w INSERT EMPTY)) IN E), (w IN (((set_of_edge v) V) E)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) |- (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f4 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c? / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
+ |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ (~ (E (v INSERT (w INSERT EMPTY)))) |- (((I E) (v INSERT (w INSERT EMPTY))) ==> F)
T c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cI f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
+ ((v INSERT (w INSERT EMPTY)) IN E) |- (((v INSERT (w INSERT EMPTY)) IN E) = T)
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c= cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cT
+ (((hull affine) (x INSERT (v INSERT EMPTY))) = ((hull affine) (x INSERT (w INSERT EMPTY)))) |- ((~ (w IN ((hull affine) (x INSERT (v INSERT EMPTY))))) = (~ (w IN ((hull affine) (x INSERT (w INSERT EMPTY))))))
T c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c= c~ cIN f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ cIN f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
+ (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) |- ((((hull convex) (v INSERT (z INSERT EMPTY))) SUBSET ((hull affine) (v INSERT (z INSERT EMPTY)))) ==> (~ (x IN ((hull convex) (w INSERT (z INSERT EMPTY))))))
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cSUBSET * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f0 * * part chull part cconvex * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (_3016947 = _3016950), (_3016948 = _3016951) |- ((_3016947 = _3016950) /\ ((~ (_3016946 = _3016949)) \/ ((((hull _3016949) _3016950) _3016951) \/ (~ (((hull _3016946) _3016947) _3016948)))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ c~ c= f4 f5 c\/ chull f5 f1 f3 c~ chull f4 f0 f2
- (!x. ((y x) = ((x = v) \/ (x = w)))) |- (!x. (((y x) \/ (~ (x = v))) /\ ((y x) \/ (~ (x = w)))))
T c==> ! c= * f0 b0 c\/ c= b0 f1 c= b0 f2 ! c/\ c\/ * f0 b0 c~ c= b0 f1 c\/ * f0 b0 c~ c= b0 f2
+ (~ (x = z)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E) |- (((v INSERT (w INSERT EMPTY)) IN E) /\ (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> c= f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c? / c/\ c? / c/\ * f3 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f1 part cEMPTY
+ (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))), (((hull convex) (v INSERT (z INSERT EMPTY))) SUBSET ((hull affine) (v INSERT (z INSERT EMPTY)))) |- ((((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) /\ (((hull convex) (v INSERT (z INSERT EMPTY))) SUBSET ((hull affine) (v INSERT (z INSERT EMPTY))))) ==> (x IN ((hull affine) (v INSERT (z INSERT EMPTY))))) ==> (~ (x IN ((hull convex) (w INSERT (z INSERT EMPTY))))))
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cSUBSET * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c==> c/\ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cSUBSET * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f0 * * part chull part cconvex * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (E (v INSERT (w INSERT EMPTY))) |- ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> * f4 f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f0 * f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN (((set_of_edge v) V) E)), (x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) ==> (E (v INSERT (w INSERT EMPTY))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (x = v)), (~ (x = w)), (~ (x = z)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (w IN (((set_of_edge v) V) E)) |- ((~ (v = w)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) ==> ((v IN V) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> c~ c= f1 f2 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((\v. ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F)) v)
T * / c==> c~ c==> c/\ chull part cconvex * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 ! c==> chull part cconvex * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 cF f2
+ (~ (x = z)) |- ((~ (x = z)) /\ ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))))))
T c==> c~ c= f0 f1 c/\ c~ c= f0 f1 c==> ! c= * f2 b0 c\/ c= b0 f3 c= b0 f4 c==> * f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cFINITE * * * part cset_of_edge f3 f6 f5 c==> cset_of_edge f3 f6 f5 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f3 c= b0 f4 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f4 c= b0 f3 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f4 c==> c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> * f6 f3 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c==> chull part cconvex * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f0 * f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((\x. (!z. (!v. ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F)))) x)
T * / ! ! c==> c~ c==> c/\ chull part cconvex * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 ! c==> chull part cconvex * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 chull part caffine * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 chull part caffine * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cF f0
- |- ((?y. (P y)) = ((P T) \/ (P F)))
T c= c? / * f0 b0 c\/ * f0 cT * f0 cF
+ |- (((!y. (y IN (aff (x INSERT (y INSERT EMPTY))))) ==> ((\y. (y IN (aff (x INSERT (y INSERT EMPTY))))) w)) = ((\y. (y IN (aff (x INSERT (y INSERT EMPTY))))) w))
T c= c==> ! cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * / cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1 * / cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
+ |- (((!y. (!z. (((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) ==> ((aff (x INSERT (z INSERT EMPTY))) = (aff (x INSERT (y INSERT EMPTY))))))) ==> ((\y. (!z. (((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) ==> ((aff (x INSERT (z INSERT EMPTY))) = (aff (x INSERT (y INSERT EMPTY))))))) v)) = ((\y. (!z. (((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) ==> ((aff (x INSERT (z INSERT EMPTY))) = (aff (x INSERT (y INSERT EMPTY))))))) v))
T c= c==> ! ! c==> c/\ cIN f0 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * / ! c==> c/\ cIN f0 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1 * / ! c==> c/\ cIN f0 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
+ (~ ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z))))))) |- (?x'. (((x' = x) /\ ((x' = v) \/ (x' = z))) \/ ((x' = x) /\ ((x' = w) \/ (x' = z)))))
T c==> c~ c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f2 c? / c\/ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f2
- |- ((!x'. ((~ (y x')) \/ ((x = v) \/ (x = w)))) = ((!x. (~ (y x))) \/ ((x = v) \/ (x = w))))
T c= ! c\/ c~ * f0 b0 c\/ c= f1 f2 c= f1 f3 c\/ ! c~ * f0 b0 c\/ c= f1 f2 c= f1 f3
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))))), ((v INSERT (w INSERT EMPTY)) IN E), (w IN (((set_of_edge v) V) E)) |- (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ c~ c= f1 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f4 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c? / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
+ ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), ((x' = x) /\ ((x' = w) \/ (x' = z))) |- ((x' = w) ==> F)
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c==> c/\ c= f4 f0 c\/ c= f4 f3 c= f4 f1 c==> c= f4 f3 cF
+ (~ (x = z)), (FAN (x , (V , E))) |- ((((\y. (y IN E)) y) ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))) = T)
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c= c==> * / cIN b0 f3 f4 c? / c/\ c? / c/\ * f3 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f1 part cEMPTY cT
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ |- (((!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) ==> ((\u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) w)) = ((\u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) w))
T c= c==> ! ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * / ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY f3 * / ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY f3
- |- ((!x'. ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull affine) (v INSERT (z INSERT EMPTY))) x'))) = ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (!x. (((hull affine) (v INSERT (z INSERT EMPTY))) x))))
T c= ! c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0
- |- ((\V. (!y. ((~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) ==> F))) V)
T * / ! c==> c~ c==> cFAN c, f0 c, b0 f1 c==> c~ c= f0 f2 c==> ! c= * b1 b2 c\/ c= b2 f3 c= b2 f4 c==> * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cFINITE * * * part cset_of_edge f3 b0 f1 c==> cset_of_edge f3 b0 f1 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> ! c~ c/\ c\/ c= b2 f0 c= b2 f3 c= b2 f4 c==> ! c~ c/\ c\/ c= b2 f0 c= b2 f4 c= b2 f3 c==> ! c~ c/\ c= b2 f0 c\/ c= b2 f3 c= b2 f4 c==> c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> * b0 f3 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c==> c~ chull part cconvex * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f0 * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cF f5
- |- ((((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)) = T)
T c= c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cT
+ (x' = w), ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), ((x' = x) /\ ((x' = w) \/ (x' = z))) |- (~ (x = x))
T c==> c= f0 f1 c==> c/\ c~ c= f2 f3 c/\ c~ c= f2 f4 c~ c= f2 f1 c==> c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c~ c= f2 f2
+ |- (((?x. (P x)) /\ Q) = (?x. ((P x) /\ Q)))
T c= c/\ c? / * f0 b0 f1 c? / c/\ * f0 b0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (x' = z), ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), ((x' = x) /\ ((x' = w) \/ (x' = z))) |- (~ (x = x))
T c==> c= f0 f1 c==> c/\ c~ c= f2 f1 c/\ c~ c= f2 f3 c~ c= f2 f4 c==> c/\ c= f0 f2 c\/ c= f0 f4 c= f0 f1 c~ c= f2 f2
+ ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) |- ((((\x'. (((x' = x) /\ ((x' = v) \/ (x' = z))) \/ ((x' = x) /\ ((x' = w) \/ (x' = z))))) x') ==> F) = T)
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c= c==> * / c\/ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 f4 cF cT
+ (((!x. (~ (A x))) /\ (A y)) ==> F), (((A y) /\ (!y. (~ (A y)))) \/ ((!x. (~ (A x))) /\ (A y))) |- F
T c==> c==> c/\ ! c~ * f0 b0 * f0 f1 cF c==> c\/ c/\ * f0 f1 ! c~ * f0 b0 c/\ ! c~ * f0 b0 * f0 f1 cF
+ (~ (E (v INSERT (w INSERT EMPTY)))), (E (v INSERT (w INSERT EMPTY))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) |- ((~ (E (v INSERT (w INSERT EMPTY)))) /\ F)
T c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c/\ c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN (((set_of_edge v) V) E)), (x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c? / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
- |- ((~ (_3016968 = _3016969)) \/ ((FINITE _3016969) \/ (~ (FINITE _3016968))))
T c\/ c~ c= f0 f1 c\/ cFINITE f1 c~ cFINITE f0
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
+ ((\v. (?w. (y = (v INSERT (w INSERT EMPTY))))) v) |- (?w. (y = (v INSERT (w INSERT EMPTY))))
T c==> * / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1 c? / c= f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY
- (_3016970 = _3016972), (_3016971 = _3016973) |- (((((I _3016970) _3016971) = ((I _3016972) _3016973)) ==> (((I _3016972) _3016973) \/ (~ ((I _3016970) _3016971)))) = (((I _3016972) _3016973) \/ (~ ((I _3016970) _3016971))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cI f0 f2 cI f1 f3 c\/ cI f1 f3 c~ cI f0 f2 c\/ cI f1 f3 c~ cI f0 f2
+ (x IN ((hull affine) (w INSERT (z INSERT EMPTY)))) |- ((x IN ((hull affine) (w INSERT (z INSERT EMPTY)))) = T)
T c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (((hull affine) (x INSERT (z INSERT EMPTY))) = ((hull affine) (x INSERT (v INSERT EMPTY)))), (x IN ((hull affine) (w INSERT (z INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (w INSERT (z INSERT EMPTY))) |- ((((hull affine) (x INSERT (z INSERT EMPTY))) = ((hull affine) (x INSERT (v INSERT EMPTY)))) /\ F)
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- |- ((!z. (!V. (!y. ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))))) = T)
T c= ! ! ! c==> cFAN c, f0 c, b1 f1 c==> c~ c= f0 b0 c==> ! c= * b2 b3 c\/ c= b3 f2 c= b3 f3 c==> * f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFINITE * * * part cset_of_edge f2 b1 f1 c==> cset_of_edge f2 b1 f1 f3 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ c= f2 f3 c==> ! c~ c/\ c\/ c= b3 f0 c= b3 f2 c= b3 f3 c==> ! c~ c/\ c\/ c= b3 f0 c= b3 f3 c= b3 f2 c==> ! c~ c/\ c= b3 f0 c\/ c= b3 f2 c= b3 f3 c==> c~ caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f3 c==> * b1 f2 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 c==> chull part cconvex * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f0 * f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ |- (((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))))))) = ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((x IN y) = (x IN (v INSERT (w INSERT EMPTY))))) ==> (((v INSERT (w INSERT EMPTY)) IN E) ==> ((FINITE (((set_of_edge v) V) E)) ==> ((w IN (((set_of_edge v) V) E)) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. ((x' IN ((x INSERT (v INSERT EMPTY)) INTER (w INSERT EMPTY))) = (x' IN EMPTY))) ==> ((!x'. ((x' IN ((x INSERT (w INSERT EMPTY)) INTER (v INSERT EMPTY))) = (x' IN EMPTY))) ==> ((!x'. ((x' IN ((x INSERT EMPTY) INTER (v INSERT (w INSERT EMPTY)))) = (x' IN EMPTY))) ==> ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) ==> ((v IN V) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))))))))
T c= c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= * f4 b0 c\/ c= b0 f5 c= b0 f6 c==> * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cset_of_edge f5 f1 f2 f6 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f5 c= b0 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f6 c= b0 f5 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f5 c= b0 f6 c==> c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> * f1 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f5 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f6 c==> c~ chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f0 * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= cIN b0 f4 cIN b0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cIN f6 * * * part cset_of_edge f5 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY cIN b0 part cEMPTY c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 * * part cINSERT f6 part cEMPTY * * part cINSERT f5 part cEMPTY cIN b0 part cEMPTY c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN b0 part cEMPTY c==> c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> cIN f5 f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f5 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f6 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ cIN f0 * * part chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
- |- (((!x. (!v. ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F))) ==> ((\x. (!v. ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F))) x)) = ((\x. (!v. ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F))) x))
T c= c==> ! ! c==> c~ c==> c/\ c~ c= b0 f0 c/\ c~ c= b0 b1 c~ c= b0 f1 c/\ ! c~ c/\ c= b2 b0 c\/ c= b2 b1 c= b2 f0 ! c~ c/\ c= b2 b0 c\/ c= b2 f1 c= b2 f0 cF * / ! c==> c~ c==> c/\ c~ c= b0 f0 c/\ c~ c= b0 b1 c~ c= b0 f1 c/\ ! c~ c/\ c= b2 b0 c\/ c= b2 b1 c= b2 f0 ! c~ c/\ c= b2 b0 c\/ c= b2 f1 c= b2 f0 cF f2 * / ! c==> c~ c==> c/\ c~ c= b0 f0 c/\ c~ c= b0 b1 c~ c= b0 f1 c/\ ! c~ c/\ c= b2 b0 c\/ c= b2 b1 c= b2 f0 ! c~ c/\ c= b2 b0 c\/ c= b2 f1 c= b2 f0 cF f2
+ |- ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))))))
T c==> c~ c= f0 f1 c==> ! c= * f2 b0 c\/ c= b0 f3 c= b0 f4 c==> * f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cFINITE * * * part cset_of_edge f3 f6 f5 c==> cset_of_edge f3 f6 f5 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f3 c= b0 f4 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f4 c= b0 f3 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f4 c==> c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> * f6 f3 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c==> chull part cconvex * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f0 * f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ |- (((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((x IN y) = (x IN (v INSERT (w INSERT EMPTY))))) ==> (((v INSERT (w INSERT EMPTY)) IN E) ==> ((FINITE (((set_of_edge v) V) E)) ==> ((w IN (((set_of_edge v) V) E)) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. ((x' IN ((x INSERT (v INSERT EMPTY)) INTER (w INSERT EMPTY))) = (x' IN EMPTY))) ==> ((!x'. ((x' IN ((x INSERT (w INSERT EMPTY)) INTER (v INSERT EMPTY))) = (x' IN EMPTY))) ==> ((!x'. ((x' IN ((x INSERT EMPTY) INTER (v INSERT (w INSERT EMPTY)))) = (x' IN EMPTY))) ==> ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) ==> ((v IN V) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))))))) = ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((y = (v INSERT (w INSERT EMPTY))) ==> (((v INSERT (w INSERT EMPTY)) IN E) ==> ((FINITE (((set_of_edge v) V) E)) ==> ((w IN (((set_of_edge v) V) E)) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) ==> ((v IN V) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))))))))
T c= c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= cIN b0 f4 cIN b0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cIN f6 * * * part cset_of_edge f5 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY cIN b0 part cEMPTY c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 * * part cINSERT f6 part cEMPTY * * part cINSERT f5 part cEMPTY cIN b0 part cEMPTY c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN b0 part cEMPTY c==> c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> cIN f5 f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f5 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f6 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f0 * * part chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> c= f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cIN f6 * * * part cset_of_edge f5 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f6 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> cIN f5 f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f5 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f6 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f0 * * part chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
+ |- ((\x. (!V. (!E. (!e. (((FAN (x , (V , E))) /\ (e IN E)) ==> (?v. (?w. (e = (v INSERT (w INSERT EMPTY)))))))))) x)
T * / ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 cIN b3 b2 c? / c? / c= b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f0
- (?y. (y IN E)), (~ (x = z)), (FAN (x , (V , E))) |- ((?y. (y IN E)) /\ (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))
T c==> c? / cIN b0 f0 c==> c~ c= f1 f2 c==> cFAN c, f1 c, f3 f0 c/\ c? / cIN b0 f0 c? / c/\ c? / c/\ * f0 b1 cIN b0 * * part caff_ge * * part cINSERT f1 part cEMPTY b1 c~ cIN f1 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f2 part cEMPTY
- |- ((!x. (!z. (!v. (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))))) = (!x. (!z. (!v. ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F)))))
T c= ! ! ! c==> c/\ chull part cconvex * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 ! c==> chull part cconvex * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 chull part caffine * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 chull part caffine * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 ! ! ! c==> c~ c==> c/\ chull part cconvex * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 ! c==> chull part cconvex * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 chull part caffine * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 chull part caffine * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cF
+ ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) |- (((x' = x) /\ ((x' = w) \/ (x' = z))) ==> F)
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c==> c/\ c= f4 f0 c\/ c= f4 f3 c= f4 f1 cF
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) |- (~ (x = v))
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c~ c= f0 f2
+ (~ (x = w)), (E (v INSERT (w INSERT EMPTY))) |- ((~ (x = w)) /\ ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))
T c==> c~ c= f0 f1 c==> * f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ c~ c= f0 f1 c==> c~ c= f3 f1 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f3 c= b0 f1 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f3 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 c==> c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c==> * f4 f3 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f1 c==> c~ chull part cconvex * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f0 * f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY
+ (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) |- (~ (x IN ((hull convex) (w INSERT (z INSERT EMPTY)))))
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f0 * * part chull part cconvex * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((!V. (!E. (!e. (((FAN (x , (V , E))) /\ (e IN E)) ==> (?v. (?w. (e = (v INSERT (w INSERT EMPTY))))))))) ==> ((\V. (!E. (!e. (((FAN (x , (V , E))) /\ (e IN E)) ==> (?v. (?w. (e = (v INSERT (w INSERT EMPTY))))))))) V)) = ((\V. (!E. (!e. (((FAN (x , (V , E))) /\ (e IN E)) ==> (?v. (?w. (e = (v INSERT (w INSERT EMPTY))))))))) V))
T c= c==> ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 cIN b2 b1 c? / c? / c= b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * / ! ! c==> c/\ cFAN c, f0 c, b0 b1 cIN b2 b1 c? / c? / c= b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f1 * / ! ! c==> c/\ cFAN c, f0 c, b0 b1 cIN b2 b1 c? / c? / c= b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f1
+ (x' = z), ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), ((x' = x) /\ ((x' = w) \/ (x' = z))) |- ((x = x) ==> F)
T c==> c= f0 f1 c==> c/\ c~ c= f2 f1 c/\ c~ c= f2 f3 c~ c= f2 f4 c==> c/\ c= f0 f2 c\/ c= f0 f4 c= f0 f1 c==> c= f2 f2 cF
+ ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) |- (((\x'. (((x' = x) /\ ((x' = v) \/ (x' = z))) \/ ((x' = x) /\ ((x' = w) \/ (x' = z))))) x') ==> F)
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c==> * / c\/ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 f4 cF
+ |- (((!V. (!E. (!x. ((xfan (x , (V , E))) = (GSPEC (\GEN%PVAR%5468. (?v. (((SETSPEC GEN%PVAR%5468) (?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e))))) v)))))))) ==> ((\V. (!E. (!x. ((xfan (x , (V , E))) = (GSPEC (\GEN%PVAR%5468. (?v. (((SETSPEC GEN%PVAR%5468) (?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e))))) v)))))))) V)) = ((\V. (!E. (!x. ((xfan (x , (V , E))) = (GSPEC (\GEN%PVAR%5468. (?v. (((SETSPEC GEN%PVAR%5468) (?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e))))) v)))))))) V))
T c= c==> ! ! ! c= * part cxfan c, b2 c, b0 b1 * part cGSPEC / c? / cSETSPEC b3 c? / c/\ * b1 b5 cIN b4 * * part caff_ge * * part cINSERT b2 part cEMPTY b5 b4 * / ! ! c= * part cxfan c, b2 c, b0 b1 * part cGSPEC / c? / cSETSPEC b3 c? / c/\ * b1 b5 cIN b4 * * part caff_ge * * part cINSERT b2 part cEMPTY b5 b4 f0 * / ! ! c= * part cxfan c, b2 c, b0 b1 * part cGSPEC / c? / cSETSPEC b3 c? / c/\ * b1 b5 cIN b4 * * part caff_ge * * part cINSERT b2 part cEMPTY b5 b4 f0
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ (~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) |- ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> F)
T c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
+ (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (x IN ((hull affine) (v INSERT (z INSERT EMPTY)))), (x IN ((hull affine) (w INSERT (z INSERT EMPTY)))) |- (~ (((DISJOINT (x INSERT EMPTY)) (v INSERT (z INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (z INSERT EMPTY)))))
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c~ c/\ cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (E (v INSERT (w INSERT EMPTY))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) |- ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f3 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F), (((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F)) |- (((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F) /\ ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F))
T c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c/\ c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF
+ ((\x'. (((x' = x) /\ ((x' = v) \/ (x' = z))) \/ ((x' = x) /\ ((x' = w) \/ (x' = z))))) x') |- (((x' = x) /\ ((x' = v) \/ (x' = z))) \/ ((x' = x) /\ ((x' = w) \/ (x' = z))))
T c==> * / c\/ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f2 f4 c\/ c/\ c= f4 f0 c\/ c= f4 f1 c= f4 f2 c/\ c= f4 f0 c\/ c= f4 f3 c= f4 f2
- |- ((!V. t) = t)
T c= ! f0 f0
- (~ (A y)), ((!x. (~ (A x))) /\ (A y)) |- ((~ (A y)) /\ (A y))
T c==> c~ * f0 f1 c==> c/\ ! c~ * f0 b0 * f0 f1 c/\ c~ * f0 f1 * f0 f1
+ (E (v INSERT (w INSERT EMPTY))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))), (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) |- ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) /\ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c/\ caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> c~ chull part cconvex * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f3 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- |- ((_3016954 = _3016957) ==> ((~ (_3016952 = _3016955)) \/ ((~ (_3016953 = _3016956)) \/ ((((aff_ge _3016955) _3016956) _3016957) \/ (~ (((aff_ge _3016952) _3016953) _3016954))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ caff_ge f3 f5 f1 c~ caff_ge f2 f4 f0
- ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F), (((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F)) |- ((((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F)) /\ ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F))
T c==> c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c==> c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c/\ c==> c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
- ((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) |- (((((hull affine) (v INSERT (z INSERT EMPTY))) x) ==> F) = F)
T c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c= c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF cF
+ |- ((((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge v) V) E))) /\ (((v INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))) ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))) = (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))
T c= c==> c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c? / c/\ c? / c/\ * f2 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f5 part cEMPTY c? / c/\ c? / c/\ * f2 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f5 part cEMPTY
- |- ((\w. (!v. (!E. (!x. (!z. (!V. (!y. ((~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) ==> F)))))))) w)
T * / ! ! ! ! ! ! c==> c~ c==> cFAN c, b3 c, b5 b2 c==> c~ c= b3 b4 c==> ! c= * b6 b7 c\/ c= b7 b1 c= b7 b0 c==> * b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> cFINITE * * * part cset_of_edge b1 b5 b2 c==> cset_of_edge b1 b5 b2 b0 c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c~ c= b3 b1 c==> c~ c= b3 b0 c==> c~ c= b1 b0 c==> ! c~ c/\ c\/ c= b7 b3 c= b7 b1 c= b7 b0 c==> ! c~ c/\ c\/ c= b7 b3 c= b7 b0 c= b7 b1 c==> ! c~ c/\ c= b7 b3 c\/ c= b7 b1 c= b7 b0 c==> c~ caff * * part cINSERT b3 * * part cINSERT b1 part cEMPTY b0 c==> * b5 b1 c==> c= c~ ccollinear * * part cINSERT b3 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ caff * * part cINSERT b3 * * part cINSERT b1 part cEMPTY b0 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b1 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b0 c==> c~ chull part cconvex * * part cINSERT b1 * * part cINSERT b4 part cEMPTY b3 * b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cF f0
- |- (((!z. (!v. ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F))) ==> ((\z. (!v. ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F))) z)) = ((\z. (!v. ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F))) z))
T c= c==> ! ! c==> c~ c\/ c~ chull part cconvex * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 chull part cconvex * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cF * / ! c==> c~ c\/ c~ chull part cconvex * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 chull part cconvex * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cF f1 * / ! c==> c~ c\/ c~ chull part cconvex * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 chull part cconvex * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cF f1
- |- ((~ (_3016974 = _3016975)) \/ ((FAN _3016975) \/ (~ (FAN _3016974))))
T c\/ c~ c= f0 f1 c\/ cFAN f1 c~ cFAN f0
+ (x' = z), ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), ((x' = x) /\ ((x' = v) \/ (x' = z))) |- (~ (x = x))
T c==> c= f0 f1 c==> c/\ c~ c= f2 f1 c/\ c~ c= f2 f3 c~ c= f2 f4 c==> c/\ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c~ c= f2 f2
+ (x IN ((hull affine) (v INSERT (z INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (z INSERT EMPTY))) |- ((~ (((hull affine) (x INSERT (z INSERT EMPTY))) = ((hull affine) (x INSERT (v INSERT EMPTY))))) = ((((x IN (aff (v INSERT (z INSERT EMPTY)))) /\ ((DISJOINT (x INSERT EMPTY)) (v INSERT (z INSERT EMPTY)))) ==> ((aff (x INSERT (z INSERT EMPTY))) = (aff (x INSERT (v INSERT EMPTY))))) ==> F))
T c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c~ c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c==> c/\ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cF
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN (((set_of_edge v) V) E)), (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))), (x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (E (v INSERT (w INSERT EMPTY)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY * f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)) = (((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) /\ (!x. ((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) ==> (x IN ((hull affine) (v INSERT (z INSERT EMPTY))))))) ==> (x IN ((hull affine) (v INSERT (z INSERT EMPTY))))))
T c= c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c/\ cIN f2 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> cIN b0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- ((!y. ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) = T)
T c= ! c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= * b0 b1 c\/ c= b1 f4 c= b1 f5 c==> * f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cFINITE * * * part cset_of_edge f4 f1 f2 c==> cset_of_edge f4 f1 f2 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c~ c= f0 f4 c==> c~ c= f0 f5 c==> c~ c= f4 f5 c==> ! c~ c/\ c\/ c= b1 f0 c= b1 f4 c= b1 f5 c==> ! c~ c/\ c\/ c= b1 f0 c= b1 f5 c= b1 f4 c==> ! c~ c/\ c= b1 f0 c\/ c= b1 f4 c= b1 f5 c==> c~ caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY f5 c==> * f1 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY f5 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f4 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f5 c==> c~ chull part cconvex * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f0 * f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cT
+ |- (((~ (!x. (~ (A x)))) = (?y. (A y))) = ((~ (!x. ((x IN A) = (x IN EMPTY)))) = (?y. (y IN A))))
T c= c= c~ ! c~ * f0 b0 c? / * f0 b0 c= c~ ! c= cIN b0 f0 cIN b0 part cEMPTY c? / cIN b0 f0
- |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- (~ F), (x' = w), ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), ((x' = x) /\ ((x' = w) \/ (x' = z))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c~ c= f2 f3 c/\ c~ c= f2 f4 c~ c= f2 f1 c==> c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ cF cF
+ |- ((f x) = ((I f) x))
T c= * f0 f1 cI f0 f1
+ (E (v INSERT (w INSERT EMPTY))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) |- ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> c~ chull part cconvex * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f3 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((\x. (!y. (!z. (((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) ==> ((aff (x INSERT (z INSERT EMPTY))) = (aff (x INSERT (y INSERT EMPTY)))))))) x)
T * / ! ! c==> c/\ cIN b0 * part caff * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * part caff * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0
+ (E (v INSERT (w INSERT EMPTY))) |- ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f3 f1 c==> c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> c~ chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (E (v INSERT (w INSERT EMPTY))) |- ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f3 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> * f4 f1 c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> c~ chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f3 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- (?w. (y = (v INSERT (w INSERT EMPTY)))), (~ (x = z)), (FAN (x , (V , E))), (y IN E) |- ((?w. (y = (v INSERT (w INSERT EMPTY)))) /\ (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))
T c==> c? / c= f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c==> c~ c= f2 f3 c==> cFAN c, f2 c, f4 f5 c==> cIN f0 f5 c/\ c? / c= f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c? / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 c~ cIN f2 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
- |- ((~ (_3016971 = _3016973)) \/ ((~ (_3016970 = _3016972)) \/ (((I _3016972) _3016973) \/ (~ ((I _3016970) _3016971)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
+ (E (v INSERT (w INSERT EMPTY))) |- ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f3 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> * f4 f1 c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f3 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (~ F), (~ (((hull affine) (v INSERT (z INSERT EMPTY))) x)), ((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c/\ c~ cF cF
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (w IN (((set_of_edge v) V) E)), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))) ==> (E (v INSERT (w INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((~ (E (v INSERT (w INSERT EMPTY)))) ==> F) = (E (v INSERT (w INSERT EMPTY))))
T c= c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (x = z)), (FAN (x , (V , E))), (y IN E) |- ((?w. (y = (v INSERT (w INSERT EMPTY)))) ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> cIN f4 f3 c==> c? / c= f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c? / c/\ c? / c/\ * f3 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f1 part cEMPTY
- |- ((\x. (!z. (!V. (!y. ((~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) ==> F))))) x)
T * / ! ! ! c==> c~ c==> cFAN c, b0 c, b2 f0 c==> c~ c= b0 b1 c==> ! c= * b3 b4 c\/ c= b4 f1 c= b4 f2 c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 b2 f0 c==> cset_of_edge f1 b2 f0 f2 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= b0 f1 c==> c~ c= b0 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b4 b0 c= b4 f1 c= b4 f2 c==> ! c~ c/\ c\/ c= b4 b0 c= b4 f2 c= b4 f1 c==> ! c~ c/\ c= b4 b0 c\/ c= b4 f1 c= b4 f2 c==> c~ caff * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f2 c==> * b2 f1 c==> c= c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> c~ chull part cconvex * * part cINSERT f1 * * part cINSERT b1 part cEMPTY b0 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF f3
- |- ((~ (_3016976 = _3016979)) \/ ((~ (_3016977 = _3016980)) \/ ((~ (_3016978 = _3016981)) \/ ((((set_of_edge _3016976) _3016977) _3016978) = (((set_of_edge _3016979) _3016980) _3016981)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c= * * * part cset_of_edge f0 f2 f4 * * * part cset_of_edge f1 f3 f5
- |- (((!x. (!z. (!v. ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F)))) ==> ((\x. (!z. (!v. ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F)))) x)) = ((\x. (!z. (!v. ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F)))) x))
T c= c==> ! ! ! c==> c~ c\/ c~ chull part cconvex * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 chull part cconvex * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cF * / ! ! c==> c~ c\/ c~ chull part cconvex * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 chull part cconvex * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cF f0 * / ! ! c==> c~ c\/ c~ chull part cconvex * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 chull part cconvex * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cF f0
+ |- (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> (((DISJOINT (x INSERT EMPTY)) (v INSERT (z INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (z INSERT EMPTY)))))
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f1 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY
+ (((A y) /\ (!y. (~ (A y)))) \/ ((!x. (~ (A x))) /\ (A y))) |- ((((A y) /\ (!y. (~ (A y)))) \/ ((!x. (~ (A x))) /\ (A y))) /\ F)
T c==> c\/ c/\ * f0 f1 ! c~ * f0 b0 c/\ ! c~ * f0 b0 * f0 f1 c/\ c\/ c/\ * f0 f1 ! c~ * f0 b0 c/\ ! c~ * f0 b0 * f0 f1 cF
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (((hull affine) (x INSERT (v INSERT EMPTY))) = ((hull affine) (x INSERT (w INSERT EMPTY)))) |- (~ (w IN ((hull affine) (x INSERT (w INSERT EMPTY)))))
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
- |- ((?w. t) = t)
T c= c? / f0 f0
+ (E (v INSERT (w INSERT EMPTY))) |- ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f3 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> * f4 f1 c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f3 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((\x'. (((x' = x) /\ ((x' = v) \/ (x' = z))) \/ ((x' = x) /\ ((x' = w) \/ (x' = z))))) x') |- (((((x' = x) /\ ((x' = v) \/ (x' = z))) \/ ((x' = x) /\ ((x' = w) \/ (x' = z)))) ==> F) = F)
T c==> * / c\/ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f2 f4 c= c==> c\/ c/\ c= f4 f0 c\/ c= f4 f1 c= f4 f2 c/\ c= f4 f0 c\/ c= f4 f3 c= f4 f2 cF cF
- |- ((_3016959 = _3016961) ==> ((~ (_3016958 = _3016960)) \/ (((aff _3016960) _3016961) \/ (~ ((aff _3016958) _3016959)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ caff f3 f1 c~ caff f2 f0
- |- (((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))))))) = T)
T c= c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= * f4 b0 c\/ c= b0 f5 c= b0 f6 c==> * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cset_of_edge f5 f1 f2 f6 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f5 c= b0 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f6 c= b0 f5 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f5 c= b0 f6 c==> c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> * f1 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f5 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f6 c==> c~ chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f0 * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cT
+ (!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))), (E (v INSERT (w INSERT EMPTY))) |- ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) /\ ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))
T c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c==> * f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> * f4 f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> c~ chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f0 * f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (x' = w) |- ((~ (x = v)) = (~ (x = v)))
T c==> c= f0 f1 c= c~ c= f2 f3 c~ c= f2 f3
- (~ (((hull affine) (v INSERT (z INSERT EMPTY))) x)) |- ((((hull affine) (v INSERT (z INSERT EMPTY))) x) ==> F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
- |- ((((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F)) = ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F))
T c= c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF
- ((A y) /\ (!y. (~ (A y)))) |- ((~ (A y)) ==> (A y))
T c==> c/\ * f0 f1 ! c~ * f0 b0 c==> c~ * f0 f1 * f0 f1
+ |- ((((\y. (((A y) /\ (!y. (~ (A y)))) \/ ((!x. (~ (A x))) /\ (A y)))) y) ==> F) = T)
T c= c==> * / c\/ c/\ * f0 b0 ! c~ * f0 b1 c/\ ! c~ * f0 b1 * f0 b0 f1 cF cT
- |- ((!v'. ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v' INSERT (z INSERT EMPTY))) x))) = ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (!v. (((hull convex) (v INSERT (z INSERT EMPTY))) x))))
T c= ! c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f2 c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! chull part cconvex * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f2
+ (x' = z), ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), ((x' = x) /\ ((x' = v) \/ (x' = z))) |- F
T c==> c= f0 f1 c==> c/\ c~ c= f2 f1 c/\ c~ c= f2 f3 c~ c= f2 f4 c==> c/\ c= f0 f2 c\/ c= f0 f3 c= f0 f1 cF
- |- ((!x. (!v. (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z))))))))) = T)
T c= ! ! c==> c/\ c~ c= b0 f0 c/\ c~ c= b0 b1 c~ c= b0 f1 c/\ ! c~ c/\ c= b2 b0 c\/ c= b2 b1 c= b2 f0 ! c~ c/\ c= b2 b0 c\/ c= b2 f1 c= b2 f0 cT
- (_3016959 = _3016961) |- ((_3016959 = _3016961) /\ ((~ (_3016958 = _3016960)) \/ (((aff _3016960) _3016961) \/ (~ ((aff _3016958) _3016959)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ caff f3 f1 c~ caff f2 f0
+ ((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) |- (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) /\ (((hull affine) (v INSERT (z INSERT EMPTY))) x))
T c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c/\ c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (w IN (((set_of_edge v) V) E)), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) ==> (E (v INSERT (w INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((_3016968 = _3016969) ==> ((FINITE _3016969) \/ (~ (FINITE _3016968))))
T c==> c= f0 f1 c\/ cFINITE f1 c~ cFINITE f0
+ |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN (((set_of_edge v) V) E)), (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))), (x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((E y) /\ (w IN ((aff_ge (x INSERT EMPTY)) y)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ * f5 f6 cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY f6
- |- ((\y. ((~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) ==> F)) y)
T * / c==> c~ c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= * b0 b1 c\/ c= b1 f4 c= b1 f5 c==> * f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cFINITE * * * part cset_of_edge f4 f1 f2 c==> cset_of_edge f4 f1 f2 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c~ c= f0 f4 c==> c~ c= f0 f5 c==> c~ c= f4 f5 c==> ! c~ c/\ c\/ c= b1 f0 c= b1 f4 c= b1 f5 c==> ! c~ c/\ c\/ c= b1 f0 c= b1 f5 c= b1 f4 c==> ! c~ c/\ c= b1 f0 c\/ c= b1 f4 c= b1 f5 c==> c~ caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY f5 c==> * f1 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY f5 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f4 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f5 c==> chull part cconvex * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f0 * f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF f6
- ((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) |- ((~ (((hull affine) (v INSERT (z INSERT EMPTY))) x)) ==> F)
T c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
- (~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) |- ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (((hull convex) (v INSERT (z INSERT EMPTY))) x))
T c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
+ (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (((hull affine) (x INSERT (z INSERT EMPTY))) = ((hull affine) (x INSERT (v INSERT EMPTY)))), (x IN ((hull affine) (w INSERT (z INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (w INSERT (z INSERT EMPTY))) |- F
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cF
- (!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) |- (((~ (_3016891 = x)) \/ (~ (_3016891 = v))) /\ ((~ (_3016891 = x)) \/ (~ (_3016891 = w))))
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c/\ c\/ c~ c= f3 f0 c~ c= f3 f1 c\/ c~ c= f3 f0 c~ c= f3 f2
- (_3016946 = _3016949), (_3016947 = _3016950), (_3016948 = _3016951) |- ((((((hull _3016946) _3016947) _3016948) = (((hull _3016949) _3016950) _3016951)) ==> ((((hull _3016949) _3016950) _3016951) \/ (~ (((hull _3016946) _3016947) _3016948)))) = ((((hull _3016949) _3016950) _3016951) \/ (~ (((hull _3016946) _3016947) _3016948))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c= c==> c= chull f0 f2 f4 chull f1 f3 f5 c\/ chull f1 f3 f5 c~ chull f0 f2 f4 c\/ chull f1 f3 f5 c~ chull f0 f2 f4
- |- ((~ (_3016990 = _3016992)) \/ ((~ (_3016991 = _3016993)) \/ ((_3016990 , _3016991) = (_3016992 , _3016993))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) = T)
T c==> cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c= cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cT
- |- ((\y. ((~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) ==> F)) y)
T * / c==> c~ c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= * b0 b1 c\/ c= b1 f4 c= b1 f5 c==> * f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cFINITE * * * part cset_of_edge f4 f1 f2 c==> cset_of_edge f4 f1 f2 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c~ c= f0 f4 c==> c~ c= f0 f5 c==> c~ c= f4 f5 c==> ! c~ c/\ c\/ c= b1 f0 c= b1 f4 c= b1 f5 c==> ! c~ c/\ c\/ c= b1 f0 c= b1 f5 c= b1 f4 c==> ! c~ c/\ c= b1 f0 c\/ c= b1 f4 c= b1 f5 c==> c~ caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY f5 c==> * f1 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY f5 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f4 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f5 c==> c~ chull part cconvex * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f0 * f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF f6
+ (~ (x = z)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), ((FINITE (((set_of_edge v) V) E)) /\ ((w IN (((set_of_edge v) V) E)) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))), ((v INSERT (w INSERT EMPTY)) IN E) |- (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> c= f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c/\ cFINITE * * * part cset_of_edge f5 f2 f3 c/\ cIN f6 * * * part cset_of_edge f5 f2 f3 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f0 f6 c/\ c~ c= f5 f6 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f6 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c/\ cIN f5 f2 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c? / c/\ c? / c/\ * f3 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f1 part cEMPTY
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN (((set_of_edge v) V) E)), (x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))) ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c~ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c? / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
+ |- (((!x. (!v. (!w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))))) ==> ((\x. (!v. (!w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))))) x)) = ((\x. (!v. (!w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))))) x))
T c= c==> ! ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN b0 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN b1 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b2 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN b0 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN b1 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b2 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0 * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN b0 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN b1 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b2 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0
- ((!x. (~ (A x))) /\ (A y)) |- ((~ F) ==> F)
T c==> c/\ ! c~ * f0 b0 * f0 f1 c==> c~ cF cF
+ |- (((!x. (~ (A x))) /\ (A y)) ==> F)
T c==> c/\ ! c~ * f0 b0 * f0 f1 cF
+ (~ (w IN (aff (x INSERT (v INSERT EMPTY))))) |- (T = (~ (w IN ((hull affine) (x INSERT (v INSERT EMPTY))))))
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cT c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (x = z)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (w IN (((set_of_edge v) V) E)) |- ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) ==> ((v IN V) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f3 c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f1 f2 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (FAN (x , (V , E))), (y IN E) |- (((?v. (?w. (y = (v INSERT (w INSERT EMPTY))))) ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))) = ((((FAN (x , (V , E))) /\ (y IN E)) ==> (?v. (?w. (y = (v INSERT (w INSERT EMPTY)))))) ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN f3 f2 c= c==> c? / c? / c= f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / c/\ c? / c/\ * f2 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f4 part cEMPTY c==> c==> c/\ cFAN c, f0 c, f1 f2 cIN f3 f2 c? / c? / c= f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / c/\ c? / c/\ * f2 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f4 part cEMPTY
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ (FAN (x , (V , E))) |- ((~ (x = z)) ==> ((y = (v INSERT (w INSERT EMPTY))) ==> (((v INSERT (w INSERT EMPTY)) IN E) ==> ((FINITE (((set_of_edge v) V) E)) ==> ((w IN (((set_of_edge v) V) E)) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) ==> ((v IN V) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))))))
T c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> c= f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cIN f6 * * * part cset_of_edge f5 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f6 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> cIN f5 f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f5 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f6 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ cIN f0 * * part chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
+ (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (x IN ((hull affine) (v INSERT (z INSERT EMPTY)))), (x IN ((hull affine) (w INSERT (z INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (z INSERT EMPTY))), ((DISJOINT (x INSERT EMPTY)) (w INSERT (z INSERT EMPTY))) |- ((((x IN (aff (v INSERT (z INSERT EMPTY)))) /\ ((DISJOINT (x INSERT EMPTY)) (v INSERT (z INSERT EMPTY)))) ==> ((aff (x INSERT (z INSERT EMPTY))) = (aff (x INSERT (v INSERT EMPTY))))) ==> F)
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> c==> c/\ cIN f1 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part caff * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
+ ((\y. (y IN E)) y) |- (y IN E)
T c==> * / cIN b0 f0 f1 cIN f1 f0
+ |- ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))))))
T c==> c~ c= f0 f1 c==> ! c= * f2 b0 c\/ c= b0 f3 c= b0 f4 c==> * f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cFINITE * * * part cset_of_edge f3 f6 f5 c==> cset_of_edge f3 f6 f5 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f3 c= b0 f4 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f4 c= b0 f3 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f4 c==> c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> * f6 f3 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c==> c~ chull part cconvex * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f0 * f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ ((A y) /\ (!y. (~ (A y)))) |- ((A _3016772) ==> F)
T c==> c/\ * f0 f1 ! c~ * f0 b0 c==> * f0 f2 cF
+ (~ (E (v INSERT (w INSERT EMPTY)))), (E (v INSERT (w INSERT EMPTY))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) |- F
T c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 cF
+ |- ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))
T c==> ! c= * f0 b0 c\/ c= b0 f1 c= b0 f2 c==> * f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f3 c==> cset_of_edge f1 f4 f3 f2 c==> c~ ccollinear * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f5 f1 c==> c~ c= f5 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f5 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f5 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f5 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f5 * * part cINSERT f1 part cEMPTY f2 c==> * f4 f1 c==> c= c~ ccollinear * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f5 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f5 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> caff_ge * * part cINSERT f5 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f5 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> c~ chull part cconvex * * part cINSERT f1 * * part cINSERT f6 part cEMPTY f5 * f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (w IN (((set_of_edge v) V) E)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) ==> ((v IN V) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))) ==> (E (v INSERT (w INSERT EMPTY)))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN (((set_of_edge v) V) E)), (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))), (x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((~ (x IN ((hull convex) (w INSERT (z INSERT EMPTY))))) = ((?e. ((E e) /\ (w IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (w INSERT (z INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c= c~ cIN f0 * * part chull part cconvex * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c? / c/\ * f5 b0 cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY b0 c~ cIN f0 * * part chull part cconvex * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((\E. (!x. ((xfan (x , (V , E))) = (GSPEC (\GEN%PVAR%5468. (?v. (((SETSPEC GEN%PVAR%5468) (?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e))))) v))))))) E)
T * / ! c= * part cxfan c, b1 c, f0 b0 * part cGSPEC / c? / cSETSPEC b2 c? / c/\ * b0 b4 cIN b3 * * part caff_ge * * part cINSERT b1 part cEMPTY b4 b3 f1
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (x = v)), (~ (x = z)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (w IN (((set_of_edge v) V) E)) |- ((~ (x = w)) ==> ((~ (v = w)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) ==> ((v IN V) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f3 c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> c~ c= f0 f2 c==> c~ c= f1 f2 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) |- (!x. ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull affine) (v INSERT (z INSERT EMPTY))) x)))
T c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0
- (x' = w) |- ((~ (x = w)) = (~ (x = w)))
T c==> c= f0 f1 c= c~ c= f2 f1 c~ c= f2 f1
+ (~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) |- (((?y. (((A y) /\ (!y. (~ (A y)))) \/ ((!x. (~ (A x))) /\ (A y)))) ==> F) = F)
T c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 c= c==> c? / c\/ c/\ * f0 b0 ! c~ * f0 b1 c/\ ! c~ * f0 b1 * f0 b0 cF cF
+ (~ (x = z)), (FAN (x , (V , E))), (y IN E) |- ((((\w. (y = (v INSERT (w INSERT EMPTY)))) w) ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))) = T)
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> cIN f4 f3 c= c==> * / c= f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY f6 c? / c/\ c? / c/\ * f3 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f1 part cEMPTY cT
- (_3016977 = _3016980), (_3016976 = _3016979) |- ((~ (_3016978 = _3016981)) \/ ((((set_of_edge _3016976) _3016977) _3016978) = (((set_of_edge _3016979) _3016980) _3016981)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c= * * * part cset_of_edge f2 f0 f4 * * * part cset_of_edge f3 f1 f5
+ ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) |- (((!x'. (((\x'. (((x' = x) /\ ((x' = v) \/ (x' = z))) \/ ((x' = x) /\ ((x' = w) \/ (x' = z))))) x') ==> F)) ==> ((?x'. (((x' = x) /\ ((x' = v) \/ (x' = z))) \/ ((x' = x) /\ ((x' = w) \/ (x' = z))))) ==> F)) = ((?x'. (((x' = x) /\ ((x' = v) \/ (x' = z))) \/ ((x' = x) /\ ((x' = w) \/ (x' = z))))) ==> F))
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c= c==> ! c==> * / c\/ c/\ c= b1 f0 c\/ c= b1 f2 c= b1 f1 c/\ c= b1 f0 c\/ c= b1 f3 c= b1 f1 b0 cF c==> c? / c\/ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c? / c\/ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN (((set_of_edge v) V) E)), (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))), (x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c? / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
+ (E (v INSERT (w INSERT EMPTY))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) |- (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) /\ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c/\ c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> c~ chull part cconvex * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f3 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (x' = w), ((x' = x) /\ ((x' = w) \/ (x' = z))) |- ((~ (x = v)) = (~ (x = v)))
T c==> c= f0 f1 c==> c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c= c~ c= f2 f4 c~ c= f2 f4
+ (E (v INSERT (w INSERT EMPTY))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) |- ((~ (E (v INSERT (w INSERT EMPTY)))) ==> F)
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- |- ((\x. (!z. (!v. ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F)))) x)
T * / ! ! c==> c~ c\/ c~ chull part cconvex * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 chull part cconvex * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cF f0
+ (~ (E (v INSERT (w INSERT EMPTY)))), (E (v INSERT (w INSERT EMPTY))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ (~ ((aff (x INSERT (v INSERT EMPTY))) w))) |- (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ (~ ((aff (x INSERT (v INSERT EMPTY))) w))) /\ F)
T c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c/\ c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 cF
+ |- (((((x IN ((hull convex) (w INSERT (z INSERT EMPTY)))) /\ (((hull convex) (w INSERT (z INSERT EMPTY))) SUBSET ((hull affine) (w INSERT (z INSERT EMPTY))))) ==> (x IN ((hull affine) (w INSERT (z INSERT EMPTY))))) ==> F) = F)
T c= c==> c==> c/\ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF cF
+ (~ (x = w)), (E (v INSERT (w INSERT EMPTY))) |- ((~ (x = w)) /\ ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))
T c==> c~ c= f0 f1 c==> * f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ c~ c= f0 f1 c==> c~ c= f3 f1 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f3 c= b0 f1 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f3 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 c==> c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c==> * f4 f3 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f1 c==> chull part cconvex * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f0 * f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY
+ (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (x IN ((hull affine) (v INSERT (z INSERT EMPTY)))) |- ((x IN ((hull affine) (v INSERT (z INSERT EMPTY)))) /\ (~ (x IN ((hull convex) (w INSERT (z INSERT EMPTY))))))
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f0 * * part chull part cconvex * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((!x. (!y. (!z. (((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) ==> ((aff (x INSERT (z INSERT EMPTY))) = (aff (x INSERT (y INSERT EMPTY)))))))) ==> ((\x. (!y. (!z. (((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) ==> ((aff (x INSERT (z INSERT EMPTY))) = (aff (x INSERT (y INSERT EMPTY)))))))) x)) = ((\x. (!y. (!z. (((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) ==> ((aff (x INSERT (z INSERT EMPTY))) = (aff (x INSERT (y INSERT EMPTY)))))))) x))
T c= c==> ! ! ! c==> c/\ cIN b0 * part caff * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * part caff * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! ! c==> c/\ cIN b0 * part caff * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * part caff * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 * / ! ! c==> c/\ cIN b0 * part caff * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * part caff * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0
- (!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) |- ((~ (_3016891 = x)) \/ (~ (_3016891 = w)))
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c~ c= f3 f0 c~ c= f3 f2
- |- ((!x. (!z. (!V. (!y. ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))))))))))) = T)
T c= ! ! ! ! c==> cFAN c, b0 c, b2 f0 c==> c~ c= b0 b1 c==> ! c= * b3 b4 c\/ c= b4 f1 c= b4 f2 c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 b2 f0 c==> cset_of_edge f1 b2 f0 f2 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= b0 f1 c==> c~ c= b0 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b4 b0 c= b4 f1 c= b4 f2 c==> ! c~ c/\ c\/ c= b4 b0 c= b4 f2 c= b4 f1 c==> ! c~ c/\ c= b4 b0 c\/ c= b4 f1 c= b4 f2 c==> c~ caff * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f2 c==> * b2 f1 c==> c= c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT b1 part cEMPTY b0 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ |- ((?y. (((A y) /\ (!y. (~ (A y)))) \/ ((!x. (~ (A x))) /\ (A y)))) ==> F)
T c==> c? / c\/ c/\ * f0 b0 ! c~ * f0 b1 c/\ ! c~ * f0 b1 * f0 b0 cF
- |- ((!w. (!x. (!v. (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))))) = T)
T c= ! ! ! c==> c/\ c~ c= b1 f0 c/\ c~ c= b1 b2 c~ c= b1 b0 c/\ ! c~ c/\ c= b3 b1 c\/ c= b3 b2 c= b3 f0 ! c~ c/\ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cT
+ ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), (((x' = x) /\ ((x' = v) \/ (x' = z))) \/ ((x' = x) /\ ((x' = w) \/ (x' = z)))) |- ((((x' = x) /\ ((x' = v) \/ (x' = z))) \/ ((x' = x) /\ ((x' = w) \/ (x' = z)))) /\ F)
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c==> c\/ c/\ c= f4 f0 c\/ c= f4 f2 c= f4 f1 c/\ c= f4 f0 c\/ c= f4 f3 c= f4 f1 c/\ c\/ c/\ c= f4 f0 c\/ c= f4 f2 c= f4 f1 c/\ c= f4 f0 c\/ c= f4 f3 c= f4 f1 cF
- (~ (v = w)) |- (((~ (w = v)) ==> ((w = v) = F)) = ((w = v) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
+ (FAN (x , (V , E))), ((v INSERT (w INSERT EMPTY)) IN E) |- ((((FINITE (((set_of_edge v) V) E)) /\ ((w IN (((set_of_edge v) V) E)) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))) ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))) = (((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge v) V) E))) /\ (((v INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))) ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c= c==> c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ cIN f4 * * * part cset_of_edge f3 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c? / c/\ c? / c/\ * f2 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f5 part cEMPTY c==> c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c? / c/\ c? / c/\ * f2 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f5 part cEMPTY
+ (~ (E (v INSERT (w INSERT EMPTY)))), (E (v INSERT (w INSERT EMPTY))) |- (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> F)
T c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 cF
+ |- (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. ((x' IN ((x INSERT EMPTY) INTER (v INSERT (z INSERT EMPTY)))) = (x' IN EMPTY))) /\ (!x'. ((x' IN ((x INSERT EMPTY) INTER (w INSERT (z INSERT EMPTY)))) = (x' IN EMPTY)))))
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c= cIN b0 * * part cINTER * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f1 part cEMPTY cIN b0 part cEMPTY ! c= cIN b0 * * part cINTER * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cIN b0 part cEMPTY
+ |- (((!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge v) V) E))) /\ (((v INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))) ==> ((\v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge v) V) E))) /\ (((v INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))) v)) = ((\v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge v) V) E))) /\ (((v INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))) v))
T c= c==> ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * / c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f4 * / c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f4
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN (((set_of_edge v) V) E)), (x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((\v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))) v)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY * / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f1
- |- ((_3016944 = _3016945) ==> ((y _3016945) \/ (~ (y _3016944))))
T c==> c= f0 f1 c\/ * f2 f1 c~ * f2 f0
- (_3016976 = _3016979) |- ((_3016976 = _3016979) /\ ((~ (_3016977 = _3016980)) \/ ((~ (_3016978 = _3016981)) \/ ((((set_of_edge _3016976) _3016977) _3016978) = (((set_of_edge _3016979) _3016980) _3016981)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c= * * * part cset_of_edge f0 f2 f4 * * * part cset_of_edge f1 f3 f5
- |- (((!x. (!z. (!v. ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F)))) ==> ((\x. (!z. (!v. ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F)))) x)) = ((\x. (!z. (!v. ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F)))) x))
T c= c==> ! ! ! c==> c~ c==> c/\ chull part cconvex * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 ! c==> chull part cconvex * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 chull part caffine * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 chull part caffine * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cF * / ! ! c==> c~ c==> c/\ chull part cconvex * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 ! c==> chull part cconvex * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 chull part caffine * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 chull part caffine * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cF f0 * / ! ! c==> c~ c==> c/\ chull part cconvex * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 ! c==> chull part cconvex * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 chull part caffine * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 chull part caffine * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cF f0
+ (!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))), (E (v INSERT (w INSERT EMPTY))) |- ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) /\ ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))
T c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c==> * f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> * f4 f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f0 * f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((\V. (!E. (!x. ((xfan (x , (V , E))) = (GSPEC (\GEN%PVAR%5468. (?v. (((SETSPEC GEN%PVAR%5468) (?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e))))) v)))))))) V)
T * / ! ! c= * part cxfan c, b2 c, b0 b1 * part cGSPEC / c? / cSETSPEC b3 c? / c/\ * b1 b5 cIN b4 * * part caff_ge * * part cINSERT b2 part cEMPTY b5 b4 f0
- |- ((((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F)) ==> (((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F)))
T c==> c==> c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
+ ((\y. (((A y) /\ (!y. (~ (A y)))) \/ ((!x. (~ (A x))) /\ (A y)))) y) |- (((\y. (((A y) /\ (!y. (~ (A y)))) \/ ((!x. (~ (A x))) /\ (A y)))) y) /\ F)
T c==> * / c\/ c/\ * f0 b0 ! c~ * f0 b1 c/\ ! c~ * f0 b1 * f0 b0 f1 c/\ * / c\/ c/\ * f0 b0 ! c~ * f0 b1 c/\ ! c~ * f0 b1 * f0 b0 f1 cF
+ (E (v INSERT (w INSERT EMPTY))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) |- ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f3 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (E (v INSERT (w INSERT EMPTY))) |- ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f3 f1 c==> c~ c= f3 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f3 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> * f4 f1 c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f3 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (E (v INSERT (w INSERT EMPTY))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) |- ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> c~ chull part cconvex * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f3 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (_3016954 = _3016957) |- ((_3016954 = _3016957) /\ ((~ (_3016952 = _3016955)) \/ ((~ (_3016953 = _3016956)) \/ ((((aff_ge _3016955) _3016956) _3016957) \/ (~ (((aff_ge _3016952) _3016953) _3016954))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ caff_ge f3 f5 f1 c~ caff_ge f2 f4 f0
+ (FAN (x , (V , E))) |- ((~ (x = z)) ==> ((y = (v INSERT (w INSERT EMPTY))) ==> (((v INSERT (w INSERT EMPTY)) IN E) ==> ((FINITE (((set_of_edge v) V) E)) ==> ((w IN (((set_of_edge v) V) E)) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) ==> ((v IN V) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))))))
T c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> c= f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cIN f6 * * * part cset_of_edge f5 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f6 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> cIN f5 f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f5 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f6 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f0 * * part chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((\z. (!V. (!y. ((~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) ==> F)))) z)
T * / ! ! c==> c~ c==> cFAN c, f0 c, b1 f1 c==> c~ c= f0 b0 c==> ! c= * b2 b3 c\/ c= b3 f2 c= b3 f3 c==> * f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFINITE * * * part cset_of_edge f2 b1 f1 c==> cset_of_edge f2 b1 f1 f3 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ c= f2 f3 c==> ! c~ c/\ c\/ c= b3 f0 c= b3 f2 c= b3 f3 c==> ! c~ c/\ c\/ c= b3 f0 c= b3 f3 c= b3 f2 c==> ! c~ c/\ c= b3 f0 c\/ c= b3 f2 c= b3 f3 c==> c~ caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f3 c==> * b1 f2 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 c==> c~ chull part cconvex * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f0 * f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF f4
- |- ((!x'. ((P x') \/ Q)) = ((!x'. (P x')) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
- (_3016974 = _3016975) |- ((_3016974 = _3016975) /\ ((FAN _3016975) \/ (~ (FAN _3016974))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ cFAN f1 c~ cFAN f0
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (w IN (((set_of_edge v) V) E)), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((v IN V) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) ==> (E (v INSERT (w INSERT EMPTY)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cIN f1 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN (((set_of_edge v) V) E)), (x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c? / c/\ * f5 b0 cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY b0 c~ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY
+ |- (((((hull convex) (w INSERT (z INSERT EMPTY))) SUBSET ((hull affine) (w INSERT (z INSERT EMPTY)))) ==> F) = F)
T c= c==> cSUBSET * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cF cF
+ ((x' = x) /\ ((x' = w) \/ (x' = z))), ((x' = w) ==> F), ((x' = z) ==> F) |- F
T c==> c/\ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c==> c= f0 f2 cF c==> c==> c= f0 f3 cF cF
- |- ((~ (_3016954 = _3016957)) \/ ((~ (_3016952 = _3016955)) \/ ((~ (_3016953 = _3016956)) \/ ((((aff_ge _3016955) _3016956) _3016957) \/ (~ (((aff_ge _3016952) _3016953) _3016954))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ caff_ge f3 f5 f1 c~ caff_ge f2 f4 f0
+ (FAN (x , (V , E))) |- ((FAN (x , (V , E))) /\ ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))
T c==> cFAN c, f0 c, f1 f2 c/\ cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= * f4 b0 c\/ c= b0 f5 c= b0 f6 c==> * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cset_of_edge f5 f1 f2 f6 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f5 c= b0 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f6 c= b0 f5 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f5 c= b0 f6 c==> c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> * f1 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f5 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f6 c==> chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f0 * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
+ (~ (x = z)), (FAN (x , (V , E))), ((~ (x = z)) /\ (~ (E = EMPTY))) |- (?v. ((v IN (xfan (x , (V , E)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> c/\ c~ c= f0 f1 c~ c= f3 part cEMPTY c? / c/\ cIN b0 * part cxfan c, f0 c, f2 f3 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f1 part cEMPTY
+ ((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) |- ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) _3016769)) \/ (((hull affine) (v INSERT (z INSERT EMPTY))) _3016769))
T c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3
- (~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) |- ((~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) /\ F)
T c==> c~ c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= * f4 b0 c\/ c= b0 f5 c= b0 f6 c==> * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cset_of_edge f5 f1 f2 f6 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f5 c= b0 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f6 c= b0 f5 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f5 c= b0 f6 c==> c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> * f1 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f5 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f6 c==> chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f0 * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c~ c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= * f4 b0 c\/ c= b0 f5 c= b0 f6 c==> * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cset_of_edge f5 f1 f2 f6 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f5 c= b0 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f6 c= b0 f5 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f5 c= b0 f6 c==> c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> * f1 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f5 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f6 c==> chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f0 * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cF
- (_3016974 = _3016975) |- ((((FAN _3016974) = (FAN _3016975)) ==> ((FAN _3016975) \/ (~ (FAN _3016974)))) = ((FAN _3016975) \/ (~ (FAN _3016974))))
T c==> c= f0 f1 c= c==> c= cFAN f0 cFAN f1 c\/ cFAN f1 c~ cFAN f0 c\/ cFAN f1 c~ cFAN f0
- |- ((_3016948 = _3016951) ==> ((~ (_3016947 = _3016950)) \/ ((~ (_3016946 = _3016949)) \/ ((((hull _3016949) _3016950) _3016951) \/ (~ (((hull _3016946) _3016947) _3016948))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ chull f5 f3 f1 c~ chull f4 f2 f0
- |- (((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F) = (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z))))))))
T c= c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1
+ |- (((((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) /\ (((hull convex) (v INSERT (z INSERT EMPTY))) SUBSET ((hull affine) (v INSERT (z INSERT EMPTY))))) ==> (x IN ((hull affine) (v INSERT (z INSERT EMPTY))))) ==> (~ (x IN ((hull convex) (w INSERT (z INSERT EMPTY)))))) = (~ (x IN ((hull convex) (w INSERT (z INSERT EMPTY))))))
T c= c==> c==> c/\ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f0 * * part chull part cconvex * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c~ cIN f0 * * part chull part cconvex * * part cINSERT f3 * * part cINSERT f2 part cEMPTY
- (((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F)) |- ((((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F)) /\ (((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F)))
T c==> c==> c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c/\ c==> c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
- |- ((((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F) ==> ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F)) = ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F))
T c= c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (w IN (((set_of_edge v) V) E)), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c? / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN (((set_of_edge v) V) E)), (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))), (x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) /\ (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c? / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
+ ((A y) /\ (!y. (~ (A y)))) |- (((!y. (~ (A y))) ==> ((\y. (~ (A y))) _3016772)) = ((\y. (~ (A y))) _3016772))
T c==> c/\ * f0 f1 ! c~ * f0 b0 c= c==> ! c~ * f0 b0 * / c~ * f0 b0 f2 * / c~ * f0 b0 f2
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- |- ((!v. (!E. (!x. (!z. (!V. (!y. ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! c==> cFAN c, b2 c, b4 b1 c==> c~ c= b2 b3 c==> ! c= * b5 b6 c\/ c= b6 b0 c= b6 f0 c==> * b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> cFINITE * * * part cset_of_edge b0 b4 b1 c==> cset_of_edge b0 b4 b1 f0 c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c~ c= b2 b0 c==> c~ c= b2 f0 c==> c~ c= b0 f0 c==> ! c~ c/\ c\/ c= b6 b2 c= b6 b0 c= b6 f0 c==> ! c~ c/\ c\/ c= b6 b2 c= b6 f0 c= b6 b0 c==> ! c~ c/\ c= b6 b2 c\/ c= b6 b0 c= b6 f0 c==> c~ caff * * part cINSERT b2 * * part cINSERT b0 part cEMPTY f0 c==> * b4 b0 c==> c= c~ ccollinear * * part cINSERT b2 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c~ caff * * part cINSERT b2 * * part cINSERT b0 part cEMPTY f0 c==> caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 c==> caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b0 c==> caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f0 c==> c~ chull part cconvex * * part cINSERT b0 * * part cINSERT b3 part cEMPTY b2 * b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cT
+ |- (((x = x) ==> F) = F)
T c= c==> c= f0 f0 cF cF
+ (~ (E (v INSERT (w INSERT EMPTY)))), (E (v INSERT (w INSERT EMPTY))) |- (((collinear (x INSERT (v INSERT (w INSERT EMPTY)))) /\ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> F)
T c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 cF
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN (((set_of_edge v) V) E)), (x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((\e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) y)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY * / c/\ * f5 b0 cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY b0 f6
+ (~ (x = z)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), (y IN E) |- (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> c= f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f4 f3 c? / c/\ c? / c/\ * f3 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f1 part cEMPTY
+ (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (((DISJOINT (x INSERT EMPTY)) (v INSERT (z INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (z INSERT EMPTY)))), (x IN ((hull affine) (v INSERT (z INSERT EMPTY)))), (x IN ((hull affine) (w INSERT (z INSERT EMPTY)))) |- ((((DISJOINT (x INSERT EMPTY)) (v INSERT (z INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (z INSERT EMPTY)))) /\ F)
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cIN f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ c/\ cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cF
+ ((!x. (~ (A x))) /\ (A y)) |- (~ (A _3016773))
T c==> c/\ ! c~ * f0 b0 * f0 f1 c~ * f0 f2
+ (E (v INSERT (w INSERT EMPTY))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))), (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) |- ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) /\ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c/\ caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f3 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (E (v INSERT (w INSERT EMPTY))) |- ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c~ c/\ c= b0 f3 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> * f4 f1 c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> c~ chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f3 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (FINITE (((set_of_edge v) V) E)), (E (v INSERT (w INSERT EMPTY))) |- ((FINITE (((set_of_edge v) V) E)) /\ (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))
T c==> cFINITE * * * part cset_of_edge f0 f1 f2 c==> * f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cFINITE * * * part cset_of_edge f0 f1 f2 c==> cset_of_edge f0 f1 f2 f3 c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f0 c==> c~ c= f4 f3 c==> c~ c= f0 f3 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f0 c= b0 f3 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f3 c= b0 f0 c==> ! c~ c/\ c= b0 f4 c\/ c= b0 f0 c= b0 f3 c==> c~ caff * * part cINSERT f4 * * part cINSERT f0 part cEMPTY f3 c==> * f1 f0 c==> c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c~ caff * * part cINSERT f4 * * part cINSERT f0 part cEMPTY f3 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f0 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f3 c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f4 * f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
- ((!x. (~ (A x))) /\ (A y)) |- ((~ (A y)) ==> (A y))
T c==> c/\ ! c~ * f0 b0 * f0 f1 c==> c~ * f0 f1 * f0 f1
- (_3016968 = _3016969) |- ((_3016968 = _3016969) /\ ((FINITE _3016969) \/ (~ (FINITE _3016968))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ cFINITE f1 c~ cFINITE f0
+ |- ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f3 f0 c==> cset_of_edge f1 f3 f0 f2 c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f4 f1 c==> c~ c= f4 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f4 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> * f3 f1 c==> c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> c~ chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> (((DISJOINT (x INSERT EMPTY)) (v INSERT (z INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (z INSERT EMPTY))))) ==> F) = F)
T c= c==> c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f1 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF cF
+ ((FAN (x , (V , E))) /\ ((~ (x = z)) /\ (~ (E = EMPTY)))) |- (((FAN (x , (V , E))) /\ ((~ (x = z)) /\ (~ (E = EMPTY)))) /\ (?v. ((v IN (xfan (x , (V , E)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ c~ c= f0 f3 c~ c= f2 part cEMPTY c/\ c/\ cFAN c, f0 c, f1 f2 c/\ c~ c= f0 f3 c~ c= f2 part cEMPTY c? / c/\ cIN b0 * part cxfan c, f0 c, f1 f2 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (x = v)), (~ (x = w)), (~ (x = z)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (w IN (((set_of_edge v) V) E)) |- ((~ (v = w)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) ==> ((v IN V) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> c~ c= f1 f2 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((\w. (!v. (!E. (!x. (!z. (!V. (!y. ((~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) ==> F)))))))) w)
T * / ! ! ! ! ! ! c==> c~ c==> cFAN c, b3 c, b5 b2 c==> c~ c= b3 b4 c==> ! c= * b6 b7 c\/ c= b7 b1 c= b7 b0 c==> * b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> cFINITE * * * part cset_of_edge b1 b5 b2 c==> cset_of_edge b1 b5 b2 b0 c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c~ c= b3 b1 c==> c~ c= b3 b0 c==> c~ c= b1 b0 c==> ! c~ c/\ c\/ c= b7 b3 c= b7 b1 c= b7 b0 c==> ! c~ c/\ c\/ c= b7 b3 c= b7 b0 c= b7 b1 c==> ! c~ c/\ c= b7 b3 c\/ c= b7 b1 c= b7 b0 c==> c~ caff * * part cINSERT b3 * * part cINSERT b1 part cEMPTY b0 c==> * b5 b1 c==> c= c~ ccollinear * * part cINSERT b3 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ caff * * part cINSERT b3 * * part cINSERT b1 part cEMPTY b0 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b1 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b0 c==> chull part cconvex * * part cINSERT b1 * * part cINSERT b4 part cEMPTY b3 * b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cF f0
+ |- ((((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))) ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))) = (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))
T c= c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ c? / c/\ * f3 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f4 part cEMPTY c? / c/\ c? / c/\ * f3 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f4 part cEMPTY
- |- ((!v. (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) = T)
T c= ! c==> c/\ chull part cconvex * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 ! c==> chull part cconvex * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 cT
+ |- (((?y. (y IN E)) ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))) = ((~ (E = EMPTY)) ==> (?v. ((v IN (xfan (x , (V , E)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))))
T c= c==> c? / cIN b0 f0 c? / c/\ c? / c/\ * f0 b1 cIN b0 * * part caff_ge * * part cINSERT f1 part cEMPTY b1 c~ cIN f1 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 part cEMPTY c? / c/\ cIN b0 * part cxfan c, f1 c, f3 f0 c~ cIN f1 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f2 part cEMPTY
+ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))), (((hull convex) (v INSERT (z INSERT EMPTY))) SUBSET ((hull affine) (v INSERT (z INSERT EMPTY)))) |- (((x IN ((hull affine) (v INSERT (z INSERT EMPTY)))) ==> (~ (x IN ((hull convex) (w INSERT (z INSERT EMPTY)))))) = ((((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) /\ (((hull convex) (v INSERT (z INSERT EMPTY))) SUBSET ((hull affine) (v INSERT (z INSERT EMPTY))))) ==> (x IN ((hull affine) (v INSERT (z INSERT EMPTY))))) ==> (~ (x IN ((hull convex) (w INSERT (z INSERT EMPTY)))))))
T c==> cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cSUBSET * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f0 * * part chull part cconvex * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> c==> c/\ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f0 * * part chull part cconvex * * part cINSERT f3 * * part cINSERT f2 part cEMPTY
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (y = (v INSERT (w INSERT EMPTY))), (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- ((E (v INSERT (w INSERT EMPTY))) = ((E y) /\ (w IN ((aff_ge (x INSERT EMPTY)) y))))
T c==> c= f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ * f4 f0 cIN f2 * * part caff_ge * * part cINSERT f3 part cEMPTY f0
- |- ((!v. (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) = T)
T c= ! c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 b0 c~ c= f0 f2 c/\ ! c~ c/\ c= b1 f0 c\/ c= b1 b0 c= b1 f1 ! c~ c/\ c= b1 f0 c\/ c= b1 f2 c= b1 f1 cT
- |- ((!x''. (((~ (x' = x)) /\ (~ (x' = w))) \/ (~ (x'' = v)))) = (((~ (x' = x)) /\ (~ (x' = w))) \/ (!x'. (~ (x' = v)))))
T c= ! c\/ c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= b0 f3 c\/ c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c= b0 f3
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))), ((v INSERT (w INSERT EMPTY)) IN E), (w IN (((set_of_edge v) V) E)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f4 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c? / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))) |- ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) = ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c~ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c? / c/\ * f3 b0 cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY b0 c/\ c? / c/\ * f3 b0 cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY b0 c~ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F), (((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F)) |- ((((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F)) /\ ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F))
T c==> c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c==> c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c/\ c==> c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
+ ((\y. (((A y) /\ (!y. (~ (A y)))) \/ ((!x. (~ (A x))) /\ (A y)))) y) |- (((((A y) /\ (!y. (~ (A y)))) \/ ((!x. (~ (A x))) /\ (A y))) ==> F) = F)
T c==> * / c\/ c/\ * f0 b0 ! c~ * f0 b1 c/\ ! c~ * f0 b1 * f0 b0 f1 c= c==> c\/ c/\ * f0 f1 ! c~ * f0 b0 c/\ ! c~ * f0 b0 * f0 f1 cF cF
+ (~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) |- (~ (((hull convex) (v INSERT (z INSERT EMPTY))) x))
T c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
+ (x' = v), ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), ((x' = x) /\ ((x' = v) \/ (x' = z))) |- F
T c==> c= f0 f1 c==> c/\ c~ c= f2 f3 c/\ c~ c= f2 f1 c~ c= f2 f4 c==> c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 cF
- (x' = z), ((x' = x) /\ ((x' = w) \/ (x' = z))) |- ((~ (x = v)) = (~ (x = v)))
T c==> c= f0 f1 c==> c/\ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c= c~ c= f2 f4 c~ c= f2 f4
+ |- (((!x. (!y. (y IN (aff (x INSERT (y INSERT EMPTY)))))) ==> ((\x. (!y. (y IN (aff (x INSERT (y INSERT EMPTY)))))) x)) = ((\x. (!y. (y IN (aff (x INSERT (y INSERT EMPTY)))))) x))
T c= c==> ! ! cIN b1 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! cIN b1 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 * / ! cIN b1 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0
+ (~ (x = z)), (FAN (x , (V , E))), (y IN E) |- (((\w. (y = (v INSERT (w INSERT EMPTY)))) w) ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> cIN f4 f3 c==> * / c= f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY f6 c? / c/\ c? / c/\ * f3 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f1 part cEMPTY
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (w IN (((set_of_edge v) V) E)), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((v IN V) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))) ==> (E (v INSERT (w INSERT EMPTY)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cIN f1 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (x' = w), ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), ((x' = x) /\ ((x' = w) \/ (x' = z))) |- ((x' = w) /\ F)
T c==> c= f0 f1 c==> c/\ c~ c= f2 f3 c/\ c~ c= f2 f4 c~ c= f2 f1 c==> c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c= f0 f1 cF
- (!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) |- (!x'. (((~ (x' = x)) \/ (~ (x' = v))) /\ ((~ (x' = x)) \/ (~ (x' = w)))))
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c/\ c\/ c~ c= b0 f0 c~ c= b0 f1 c\/ c~ c= b0 f0 c~ c= b0 f2
+ ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) |- (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) /\ ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1
- |- ((\v. (!E. (!x. (!z. (!V. (!y. ((~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) ==> F))))))) v)
T * / ! ! ! ! ! c==> c~ c==> cFAN c, b2 c, b4 b1 c==> c~ c= b2 b3 c==> ! c= * b5 b6 c\/ c= b6 b0 c= b6 f0 c==> * b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> cFINITE * * * part cset_of_edge b0 b4 b1 c==> cset_of_edge b0 b4 b1 f0 c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c~ c= b2 b0 c==> c~ c= b2 f0 c==> c~ c= b0 f0 c==> ! c~ c/\ c\/ c= b6 b2 c= b6 b0 c= b6 f0 c==> ! c~ c/\ c\/ c= b6 b2 c= b6 f0 c= b6 b0 c==> ! c~ c/\ c= b6 b2 c\/ c= b6 b0 c= b6 f0 c==> c~ caff * * part cINSERT b2 * * part cINSERT b0 part cEMPTY f0 c==> * b4 b0 c==> c= c~ ccollinear * * part cINSERT b2 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c~ caff * * part cINSERT b2 * * part cINSERT b0 part cEMPTY f0 c==> caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 c==> caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b0 c==> caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f0 c==> c~ chull part cconvex * * part cINSERT b0 * * part cINSERT b3 part cEMPTY b2 * b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cF f1
+ (((hull convex) (w INSERT (z INSERT EMPTY))) SUBSET ((hull affine) (w INSERT (z INSERT EMPTY)))) |- ((((hull convex) (w INSERT (z INSERT EMPTY))) SUBSET ((hull affine) (w INSERT (z INSERT EMPTY)))) = T)
T c==> cSUBSET * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= cSUBSET * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cT
- ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F) |- ((((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F)) ==> ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F))
T c==> c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c==> c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
+ (~ (x = v)), (E (v INSERT (w INSERT EMPTY))) |- ((~ (x = v)) /\ ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))
T c==> c~ c= f0 f1 c==> * f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f1 c==> c~ c= f0 f3 c==> c~ c= f1 f3 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f3 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f3 c= b0 f1 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f3 c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 c==> * f4 f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f1 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f3 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f0 * f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY
- ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F) |- (((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F) /\ ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F))
T c==> c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c/\ c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
- |- ((_3016982 = _3016984) ==> ((~ (_3016983 = _3016985)) \/ ((_3016982 INSERT _3016983) = (_3016984 INSERT _3016985))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- |- ((!z. (!v. (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) = T)
T c= ! ! c==> c/\ chull part cconvex * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 ! c==> chull part cconvex * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 chull part caffine * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 chull part caffine * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cT
- (_3016983 = _3016985), (_3016982 = _3016984) |- ((_3016983 = _3016985) /\ ((_3016982 INSERT _3016983) = (_3016984 INSERT _3016985)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cINSERT f2 f0 * * part cINSERT f3 f1
- (_3016976 = _3016979) |- ((_3016977 = _3016980) ==> ((~ (_3016978 = _3016981)) \/ ((((set_of_edge _3016976) _3016977) _3016978) = (((set_of_edge _3016979) _3016980) _3016981))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c= * * * part cset_of_edge f0 f2 f4 * * * part cset_of_edge f1 f3 f5
+ |- ((~ (w IN ((hull affine) (x INSERT (w INSERT EMPTY))))) = ((w IN (aff (x INSERT (w INSERT EMPTY)))) ==> F))
T c= c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cF
+ |- ((!z. (((FAN (x , (V , E))) /\ ((~ (x = z)) /\ (~ (E = EMPTY)))) ==> (?v. ((v IN (xfan (x , (V , E)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))) = T)
T c= ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ c~ c= f0 b0 c~ c= f2 part cEMPTY c? / c/\ cIN b1 * part cxfan c, f0 c, f1 f2 c~ cIN f0 * * part chull part cconvex * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cT
- |- ((x = x) = T)
T c= c= f0 f0 cT
+ (E (v INSERT (w INSERT EMPTY))) |- ((E (v INSERT (w INSERT EMPTY))) /\ ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f3 f0 c==> cset_of_edge f1 f3 f0 f2 c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f4 f1 c==> c~ c= f4 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f4 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> * f3 f1 c==> c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> c~ chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (_3016977 = _3016980), (_3016976 = _3016979) |- ((_3016978 = _3016981) ==> ((((set_of_edge _3016976) _3016977) _3016978) = (((set_of_edge _3016979) _3016980) _3016981)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c= * * * part cset_of_edge f2 f0 f4 * * * part cset_of_edge f3 f1 f5
+ |- (((((hull convex) (v INSERT (z INSERT EMPTY))) SUBSET ((hull affine) (v INSERT (z INSERT EMPTY)))) ==> (~ (x IN ((hull convex) (w INSERT (z INSERT EMPTY)))))) = (~ (x IN ((hull convex) (w INSERT (z INSERT EMPTY))))))
T c= c==> cSUBSET * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ cIN f2 * * part chull part cconvex * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c~ cIN f2 * * part chull part cconvex * * part cINSERT f3 * * part cINSERT f1 part cEMPTY
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (x = z)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (w IN (((set_of_edge v) V) E)) |- ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) ==> ((v IN V) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f3 c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f1 f2 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((!e. (((FAN (x , (V , E))) /\ (e IN E)) ==> (?v. (?w. (e = (v INSERT (w INSERT EMPTY))))))) ==> ((\e. (((FAN (x , (V , E))) /\ (e IN E)) ==> (?v. (?w. (e = (v INSERT (w INSERT EMPTY))))))) y)) = ((\e. (((FAN (x , (V , E))) /\ (e IN E)) ==> (?v. (?w. (e = (v INSERT (w INSERT EMPTY))))))) y))
T c= c==> ! c==> c/\ cFAN c, f0 c, f1 f2 cIN b0 f2 c? / c? / c= b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / c==> c/\ cFAN c, f0 c, f1 f2 cIN b0 f2 c? / c? / c= b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f3 * / c==> c/\ cFAN c, f0 c, f1 f2 cIN b0 f2 c? / c? / c= b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f3
- (_3016970 = _3016972), (_3016971 = _3016973) |- ((_3016970 = _3016972) /\ (((I _3016972) _3016973) \/ (~ ((I _3016970) _3016971))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ cI f1 f3 c~ cI f0 f2
- |- ((!E. (!x. (!z. (!V. (!y. ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))))))) = T)
T c= ! ! ! ! ! c==> cFAN c, b1 c, b3 b0 c==> c~ c= b1 b2 c==> ! c= * b4 b5 c\/ c= b5 f0 c= b5 f1 c==> * b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f0 b3 b0 c==> cset_of_edge f0 b3 b0 f1 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ c= b1 f0 c==> c~ c= b1 f1 c==> c~ c= f0 f1 c==> ! c~ c/\ c\/ c= b5 b1 c= b5 f0 c= b5 f1 c==> ! c~ c/\ c\/ c= b5 b1 c= b5 f1 c= b5 f0 c==> ! c~ c/\ c= b5 b1 c\/ c= b5 f0 c= b5 f1 c==> c~ caff * * part cINSERT b1 * * part cINSERT f0 part cEMPTY f1 c==> * b3 f0 c==> c= c~ ccollinear * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ caff * * part cINSERT b1 * * part cINSERT f0 part cEMPTY f1 c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f1 c==> chull part cconvex * * part cINSERT f0 * * part cINSERT b2 part cEMPTY b1 * b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cT
+ |- (((!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) ==> ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V)) = ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V))
T c= c==> ! ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1 * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1
- |- ((\A. ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F)) A)
T * / c==> c~ c= c~ ! c~ * b0 b1 c? / * b0 b1 cF f0
- (_3016978 = _3016981), (_3016977 = _3016980), (_3016976 = _3016979) |- ((_3016978 = _3016981) /\ ((((set_of_edge _3016976) _3016977) _3016978) = (((set_of_edge _3016979) _3016980) _3016981)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f0 f1 c= * * * part cset_of_edge f4 f2 f0 * * * part cset_of_edge f5 f3 f1
- (~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) |- ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) /\ F)
T c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 c/\ c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF
+ (~ (w IN (aff (x INSERT (v INSERT EMPTY))))) |- ((((hull affine) (x INSERT (v INSERT EMPTY))) = ((hull affine) (x INSERT (w INSERT EMPTY)))) ==> F)
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cF
+ (~ (x = z)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))))))), ((v INSERT (w INSERT EMPTY)) IN E), (w IN (((set_of_edge v) V) E)) |- (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c~ c= f0 f1 c==> cFINITE * * * part cset_of_edge f2 f3 f4 c==> cFAN c, f0 c, f3 f4 c==> c= f5 * * part cINSERT f2 * * part cINSERT f6 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f6 part cEMPTY c/\ c~ c= f0 f2 c/\ c~ c= f0 f6 c/\ c~ c= f2 f6 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f6 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f6 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f6 part cEMPTY c/\ c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ cIN f2 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f2 * * part cINSERT f6 part cEMPTY f4 c==> cIN f6 * * * part cset_of_edge f2 f3 f4 c? / c/\ c? / c/\ * f4 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f1 part cEMPTY
- (w = v) |- (v = w)
T c==> c= f0 f1 c= f1 f0
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
+ (~ (x = z)), (FAN (x , (V , E))), (y IN E) |- ((y IN E) /\ (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> cIN f4 f3 c/\ cIN f4 f3 c? / c/\ c? / c/\ * f3 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f1 part cEMPTY
+ (~ (x = z)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E) |- (((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge v) V) E))) /\ (((v INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))) ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> c= f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c==> c==> cFAN c, f0 c, f2 f3 c/\ cFINITE * * * part cset_of_edge f5 f2 f3 c/\ c= cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 cIN f6 * * * part cset_of_edge f5 f2 f3 c==> cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f0 f6 c/\ c~ c= f5 f6 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f6 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c/\ cIN f5 f2 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c? / c/\ c? / c/\ * f3 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f1 part cEMPTY
- ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F), (((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F)) |- (((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F) /\ ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F))
T c==> c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c==> c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c/\ c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
+ (~ (x = z)), (FAN (x , (V , E))) |- (!y. (((\y. (y IN E)) y) ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 ! c==> * / cIN b1 f3 b0 c? / c/\ c? / c/\ * f3 b2 cIN b1 * * part caff_ge * * part cINSERT f0 part cEMPTY b2 c~ cIN f0 * * part chull part cconvex * * part cINSERT b1 * * part cINSERT f1 part cEMPTY
+ ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) |- (((x' = x) /\ ((x' = v) \/ (x' = z))) ==> F)
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c==> c/\ c= f4 f0 c\/ c= f4 f2 c= f4 f1 cF
- |- (((~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) ==> F) = ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))))))))
T c= c==> c~ c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= * f4 b0 c\/ c= b0 f5 c= b0 f6 c==> * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cset_of_edge f5 f1 f2 f6 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f5 c= b0 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f6 c= b0 f5 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f5 c= b0 f6 c==> c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> * f1 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f5 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f6 c==> c~ chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f0 * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cF c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= * f4 b0 c\/ c= b0 f5 c= b0 f6 c==> * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cset_of_edge f5 f1 f2 f6 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f5 c= b0 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f6 c= b0 f5 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f5 c= b0 f6 c==> c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> * f1 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f5 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f6 c==> c~ chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f0 * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
+ |- (((((x IN (aff (v INSERT (z INSERT EMPTY)))) /\ ((DISJOINT (x INSERT EMPTY)) (v INSERT (z INSERT EMPTY)))) ==> ((aff (x INSERT (z INSERT EMPTY))) = (aff (x INSERT (v INSERT EMPTY))))) ==> F) = F)
T c= c==> c==> c/\ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cF cF
+ (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (x IN ((hull affine) (v INSERT (z INSERT EMPTY)))), (x IN ((hull affine) (w INSERT (z INSERT EMPTY)))) |- ((((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> (((DISJOINT (x INSERT EMPTY)) (v INSERT (z INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (z INSERT EMPTY))))) ==> F)
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c==> c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f2 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))), ((v INSERT (w INSERT EMPTY)) IN E), (w IN (((set_of_edge v) V) E)), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f4 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c? / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
- |- ((_3016976 = _3016979) ==> ((~ (_3016977 = _3016980)) \/ ((~ (_3016978 = _3016981)) \/ ((((set_of_edge _3016976) _3016977) _3016978) = (((set_of_edge _3016979) _3016980) _3016981)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c= * * * part cset_of_edge f0 f2 f4 * * * part cset_of_edge f1 f3 f5
- |- ((!x. (!z. (!V. (!y. ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))))))))))) = T)
T c= ! ! ! ! c==> cFAN c, b0 c, b2 f0 c==> c~ c= b0 b1 c==> ! c= * b3 b4 c\/ c= b4 f1 c= b4 f2 c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 b2 f0 c==> cset_of_edge f1 b2 f0 f2 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= b0 f1 c==> c~ c= b0 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b4 b0 c= b4 f1 c= b4 f2 c==> ! c~ c/\ c\/ c= b4 b0 c= b4 f2 c= b4 f1 c==> ! c~ c/\ c= b4 b0 c\/ c= b4 f1 c= b4 f2 c==> c~ caff * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f2 c==> * b2 f1 c==> c= c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> c~ chull part cconvex * * part cINSERT f1 * * part cINSERT b1 part cEMPTY b0 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ |- ((hull affine) = aff)
T c= * part chull part caffine part caff
+ ((!x. (~ (A x))) /\ (A y)) |- (((!x. (~ (A x))) /\ (A y)) /\ F)
T c==> c/\ ! c~ * f0 b0 * f0 f1 c/\ c/\ ! c~ * f0 b0 * f0 f1 cF
+ (FAN (x , (V , E))), ((FAN (x , (V , E))) /\ ((~ (x = z)) /\ (~ (E = EMPTY)))) |- (?v. ((v IN (xfan (x , (V , E)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ cFAN c, f0 c, f1 f2 c/\ c~ c= f0 f3 c~ c= f2 part cEMPTY c? / c/\ cIN b0 * part cxfan c, f0 c, f1 f2 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (w IN (((set_of_edge v) V) E)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) ==> ((v IN V) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) ==> (E (v INSERT (w INSERT EMPTY)))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (E (v INSERT (w INSERT EMPTY)))), (E (v INSERT (w INSERT EMPTY))), ((collinear (x INSERT (v INSERT (w INSERT EMPTY)))) /\ ((aff (x INSERT (v INSERT EMPTY))) w)) |- (((collinear (x INSERT (v INSERT (w INSERT EMPTY)))) /\ ((aff (x INSERT (v INSERT EMPTY))) w)) /\ F)
T c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c/\ c/\ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 cF
+ (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (x IN ((hull affine) (v INSERT (z INSERT EMPTY)))), (x IN ((hull affine) (w INSERT (z INSERT EMPTY)))) |- ((x IN ((hull affine) (w INSERT (z INSERT EMPTY)))) /\ F)
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF
+ (E (v INSERT (w INSERT EMPTY))) |- ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f3 f1 c==> c~ c= f3 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f3 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> * f4 f1 c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> c~ chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f3 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((~ (_3016982 = _3016984)) \/ ((~ (_3016983 = _3016985)) \/ ((_3016982 INSERT _3016983) = (_3016984 INSERT _3016985))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- |- ((~ (_3016948 = _3016951)) \/ ((~ (_3016947 = _3016950)) \/ ((~ (_3016946 = _3016949)) \/ ((((hull _3016949) _3016950) _3016951) \/ (~ (((hull _3016946) _3016947) _3016948))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ chull f5 f3 f1 c~ chull f4 f2 f0
+ (!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))), (E (v INSERT (w INSERT EMPTY))) |- ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) /\ ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY))))))))))))
T c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c==> * f3 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 c==> c~ caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f1 c==> * f4 f2 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f1 c==> c~ chull part cconvex * * part cINSERT f2 * * part cINSERT f5 part cEMPTY f0 * f3 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN (((set_of_edge v) V) E)), (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))), (x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((\v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))) w)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY * / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2
- |- ((~ (w IN (aff (x INSERT (w INSERT EMPTY))))) = ((w IN (aff (x INSERT (w INSERT EMPTY)))) ==> F))
T c= c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cF
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
- ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F) |- (((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F) /\ ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F))
T c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c/\ c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF
- (_3016954 = _3016957) |- ((_3016952 = _3016955) ==> ((~ (_3016953 = _3016956)) \/ ((((aff_ge _3016955) _3016956) _3016957) \/ (~ (((aff_ge _3016952) _3016953) _3016954)))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ caff_ge f3 f5 f1 c~ caff_ge f2 f4 f0
- |- ((\E. (!x. (!z. (!V. (!y. ((~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) ==> F)))))) E)
T * / ! ! ! ! c==> c~ c==> cFAN c, b1 c, b3 b0 c==> c~ c= b1 b2 c==> ! c= * b4 b5 c\/ c= b5 f0 c= b5 f1 c==> * b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f0 b3 b0 c==> cset_of_edge f0 b3 b0 f1 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ c= b1 f0 c==> c~ c= b1 f1 c==> c~ c= f0 f1 c==> ! c~ c/\ c\/ c= b5 b1 c= b5 f0 c= b5 f1 c==> ! c~ c/\ c\/ c= b5 b1 c= b5 f1 c= b5 f0 c==> ! c~ c/\ c= b5 b1 c\/ c= b5 f0 c= b5 f1 c==> c~ caff * * part cINSERT b1 * * part cINSERT f0 part cEMPTY f1 c==> * b3 f0 c==> c= c~ ccollinear * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ caff * * part cINSERT b1 * * part cINSERT f0 part cEMPTY f1 c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f1 c==> c~ chull part cconvex * * part cINSERT f0 * * part cINSERT b2 part cEMPTY b1 * b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cF f2
+ (~ (E (v INSERT (w INSERT EMPTY)))) |- (~ ((I E) (v INSERT (w INSERT EMPTY))))
T c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cI f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (!x. ((y x) = ((x = v) \/ (x = w)))) |- ((y _3016892) \/ (~ (_3016892 = w)))
T c==> ! c= * f0 b0 c\/ c= b0 f1 c= b0 f2 c\/ * f0 f3 c~ c= f3 f2
+ ((~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))) ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))), ((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))) |- (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c==> c~ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ c? / c/\ * f3 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f2 part cEMPTY c==> c==> cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ c? / c/\ * f3 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f2 part cEMPTY c? / c/\ c? / c/\ * f3 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f2 part cEMPTY
- (x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) = T)
T c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
- ((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) |- ((~ (((hull affine) (v INSERT (z INSERT EMPTY))) x)) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))
T c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
- (_3016991 = _3016993), (_3016990 = _3016992) |- ((_3016991 = _3016993) /\ ((_3016990 , _3016991) = (_3016992 , _3016993)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= c, f2 f0 c, f3 f1
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))), ((v INSERT (w INSERT EMPTY)) IN E), (w IN (((set_of_edge v) V) E)), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ cIN f1 f4 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c? / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
- |- ((!x'. ((~ (y x)) \/ ((x' = v) \/ (x' = w)))) = ((~ (y x)) \/ (!x. ((x = v) \/ (x = w)))))
T c= ! c\/ c~ * f0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c~ * f0 f1 ! c\/ c= b0 f2 c= b0 f3
+ (E (v INSERT (w INSERT EMPTY))) |- ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c~ c/\ c= b0 f3 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> * f4 f1 c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f3 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (?v. (?w. (y = (v INSERT (w INSERT EMPTY))))), (~ (x = z)), (FAN (x , (V , E))), (y IN E) |- (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c==> c~ c= f1 f2 c==> cFAN c, f1 c, f3 f4 c==> cIN f0 f4 c? / c/\ c? / c/\ * f4 b1 cIN b0 * * part caff_ge * * part cINSERT f1 part cEMPTY b1 c~ cIN f1 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f2 part cEMPTY
- (_3016958 = _3016960), (_3016959 = _3016961) |- (((((aff _3016958) _3016959) = ((aff _3016960) _3016961)) ==> (((aff _3016960) _3016961) \/ (~ ((aff _3016958) _3016959)))) = (((aff _3016960) _3016961) \/ (~ ((aff _3016958) _3016959))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= caff f0 f2 caff f1 f3 c\/ caff f1 f3 c~ caff f0 f2 c\/ caff f1 f3 c~ caff f0 f2
- (_3016971 = _3016973) |- ((_3016971 = _3016973) /\ ((~ (_3016970 = _3016972)) \/ (((I _3016972) _3016973) \/ (~ ((I _3016970) _3016971)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
+ (E (v INSERT (w INSERT EMPTY))) |- ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f3 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> * f4 f1 c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> c~ chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f3 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (w IN (((set_of_edge v) V) E)), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) ==> (E (v INSERT (w INSERT EMPTY))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (w IN (((set_of_edge v) V) E)), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))) /\ (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c/\ cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
- |- ((!z. (!v. ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x)))) = T)
T c= ! ! c\/ c~ chull part cconvex * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 chull part cconvex * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cT
- (_3016944 = _3016945) |- ((_3016944 = _3016945) /\ ((y _3016945) \/ (~ (y _3016944))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ * f2 f1 c~ * f2 f0
- (w IN (aff (x INSERT (w INSERT EMPTY)))) |- ((w IN (aff (x INSERT (w INSERT EMPTY)))) = T)
T c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cT
- |- ((?x''. ((x'' = x) /\ ((x' = w) \/ (x' = z)))) = ((?x'. (x' = x)) /\ ((x' = w) \/ (x' = z))))
T c= c? / c/\ c= b0 f0 c\/ c= f1 f2 c= f1 f3 c/\ c? / c= b0 f0 c\/ c= f1 f2 c= f1 f3
- (x' = w) |- (F = F)
T c==> c= f0 f1 c= cF cF
- (!x. ((y x) = ((x = v) \/ (x = w)))) |- (((!x. (((y x) \/ (~ (x = v))) /\ ((y x) \/ (~ (x = w))))) ==> ((\x. (((y x) \/ (~ (x = v))) /\ ((y x) \/ (~ (x = w))))) _3016892)) = ((\x. (((y x) \/ (~ (x = v))) /\ ((y x) \/ (~ (x = w))))) _3016892))
T c==> ! c= * f0 b0 c\/ c= b0 f1 c= b0 f2 c= c==> ! c/\ c\/ * f0 b0 c~ c= b0 f1 c\/ * f0 b0 c~ c= b0 f2 * / c/\ c\/ * f0 b0 c~ c= b0 f1 c\/ * f0 b0 c~ c= b0 f2 f3 * / c/\ c\/ * f0 b0 c~ c= b0 f1 c\/ * f0 b0 c~ c= b0 f2 f3
- (!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) |- ((~ (_3016891 = x)) \/ (~ (_3016891 = v)))
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c~ c= f3 f0 c~ c= f3 f1
+ (~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) |- (((hull convex) (v INSERT (z INSERT EMPTY))) x)
T c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
- |- (((~ (((hull affine) (v INSERT (z INSERT EMPTY))) x)) ==> F) = (((hull affine) (v INSERT (z INSERT EMPTY))) x))
T c= c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
+ ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) |- ((~ ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z))))))) ==> F)
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c==> c~ c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF
+ ((!x. (~ (A x))) /\ (A y)) |- ((\x. (~ (A x))) _3016773)
T c==> c/\ ! c~ * f0 b0 * f0 f1 * / c~ * f0 b0 f2
+ (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (x IN ((hull affine) (v INSERT (z INSERT EMPTY)))), (x IN ((hull convex) (w INSERT (z INSERT EMPTY)))), (((hull convex) (w INSERT (z INSERT EMPTY))) SUBSET ((hull affine) (w INSERT (z INSERT EMPTY)))) |- ((((hull convex) (w INSERT (z INSERT EMPTY))) SUBSET ((hull affine) (w INSERT (z INSERT EMPTY)))) /\ F)
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part chull part cconvex * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cSUBSET * * part chull part cconvex * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cSUBSET * * part chull part cconvex * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF
+ ((!x. (~ (A x))) /\ (A y)) |- (((A y) ==> F) = F)
T c==> c/\ ! c~ * f0 b0 * f0 f1 c= c==> * f0 f1 cF cF
+ |- (((!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) ==> ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)) = ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
- (((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F)) |- ((((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F)) /\ (((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F)))
T c==> c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c/\ c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF
- |- ((\v. ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F)) v)
T * / c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 b0 c~ c= f0 f2 c/\ ! c~ c/\ c= b1 f0 c\/ c= b1 b0 c= b1 f1 ! c~ c/\ c= b1 f0 c\/ c= b1 f2 c= b1 f1 cF f3
+ (~ (x = z)), (FAN (x , (V , E))), (y IN E) |- (((!x'. (((\v. (?w. (y = (v INSERT (w INSERT EMPTY))))) x') ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))) ==> ((?v. (?w. (y = (v INSERT (w INSERT EMPTY))))) ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))) = ((?v. (?w. (y = (v INSERT (w INSERT EMPTY))))) ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> cIN f4 f3 c= c==> ! c==> * / c? / c= f4 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c? / c/\ c? / c/\ * f3 b2 cIN b1 * * part caff_ge * * part cINSERT f0 part cEMPTY b2 c~ cIN f0 * * part chull part cconvex * * part cINSERT b1 * * part cINSERT f1 part cEMPTY c==> c? / c? / c= f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / c/\ c? / c/\ * f3 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c==> c? / c? / c= f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / c/\ c? / c/\ * f3 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f1 part cEMPTY
- (!x. ((y x) = ((x = v) \/ (x = w)))) |- ((\x. (((y x) \/ (~ (x = v))) /\ ((y x) \/ (~ (x = w))))) _3016892)
T c==> ! c= * f0 b0 c\/ c= b0 f1 c= b0 f2 * / c/\ c\/ * f0 b0 c~ c= b0 f1 c\/ * f0 b0 c~ c= b0 f2 f3
+ |- ((\z. (((x IN (aff (v INSERT (z INSERT EMPTY)))) /\ ((DISJOINT (x INSERT EMPTY)) (v INSERT (z INSERT EMPTY)))) ==> ((aff (x INSERT (z INSERT EMPTY))) = (aff (x INSERT (v INSERT EMPTY)))))) z)
T * / c==> c/\ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
- |- ((!v. (!E. (!x. (!z. (!V. (!y. ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! c==> cFAN c, b2 c, b4 b1 c==> c~ c= b2 b3 c==> ! c= * b5 b6 c\/ c= b6 b0 c= b6 f0 c==> * b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> cFINITE * * * part cset_of_edge b0 b4 b1 c==> cset_of_edge b0 b4 b1 f0 c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c~ c= b2 b0 c==> c~ c= b2 f0 c==> c~ c= b0 f0 c==> ! c~ c/\ c\/ c= b6 b2 c= b6 b0 c= b6 f0 c==> ! c~ c/\ c\/ c= b6 b2 c= b6 f0 c= b6 b0 c==> ! c~ c/\ c= b6 b2 c\/ c= b6 b0 c= b6 f0 c==> c~ caff * * part cINSERT b2 * * part cINSERT b0 part cEMPTY f0 c==> * b4 b0 c==> c= c~ ccollinear * * part cINSERT b2 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c~ caff * * part cINSERT b2 * * part cINSERT b0 part cEMPTY f0 c==> caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 c==> caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b0 c==> caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f0 c==> chull part cconvex * * part cINSERT b0 * * part cINSERT b3 part cEMPTY b2 * b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cT
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- ((!v. ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) = T)
T c= ! c\/ c~ chull part cconvex * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 chull part cconvex * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 cT
+ (E (v INSERT (w INSERT EMPTY))), ((((set_of_edge v) V) E) w) |- (((((set_of_edge v) V) E) w) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cset_of_edge f1 f3 f0 f2 c/\ cset_of_edge f1 f3 f0 f2 c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f4 f1 c==> c~ c= f4 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f4 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> * f3 f1 c==> c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN (((set_of_edge v) V) E)), (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))), (x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (?e. ((E e) /\ (w IN ((aff_ge (x INSERT EMPTY)) e))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c? / c/\ * f5 b0 cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY b0
- (w IN (((set_of_edge v) V) E)) |- ((w IN (((set_of_edge v) V) E)) = T)
T c==> cIN f0 * * * part cset_of_edge f1 f2 f3 c= cIN f0 * * * part cset_of_edge f1 f2 f3 cT
- (~ (((hull affine) (v INSERT (z INSERT EMPTY))) x)), ((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) |- ((~ (((hull affine) (v INSERT (z INSERT EMPTY))) x)) /\ F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c/\ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
+ (~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) |- ((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)))
T c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
+ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))) |- ((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) = F)
T c==> c~ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- |- ((!x. (((y x) \/ ((~ (x = v)) /\ (~ (x = w)))) /\ ((~ (y x)) \/ ((x = v) \/ (x = w))))) = ((!x. ((y x) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. ((~ (y x)) \/ ((x = v) \/ (x = w))))))
T c= ! c/\ c\/ * f0 b0 c/\ c~ c= b0 f1 c~ c= b0 f2 c\/ c~ * f0 b0 c\/ c= b0 f1 c= b0 f2 c/\ ! c\/ * f0 b0 c/\ c~ c= b0 f1 c~ c= b0 f2 ! c\/ c~ * f0 b0 c\/ c= b0 f1 c= b0 f2
- (!x. ((y x) = ((x = v) \/ (x = w)))) |- ((\x. ((~ (y x)) \/ ((x = v) \/ (x = w)))) _3016893)
T c==> ! c= * f0 b0 c\/ c= b0 f1 c= b0 f2 * / c\/ c~ * f0 b0 c\/ c= b0 f1 c= b0 f2 f3
+ ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), ((x' = x) /\ ((x' = w) \/ (x' = z))) |- ((x' = z) ==> F)
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c==> c/\ c= f4 f0 c\/ c= f4 f3 c= f4 f1 c==> c= f4 f1 cF
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN (((set_of_edge v) V) E)), (x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c? / c/\ * f5 b0 cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY b0
- |- ((!x''. ((~ (x'' = x)) \/ ((~ (x' = v)) /\ (~ (x' = w))))) = ((!x'. (~ (x' = x))) \/ ((~ (x' = v)) /\ (~ (x' = w)))))
T c= ! c\/ c~ c= b0 f0 c/\ c~ c= f1 f2 c~ c= f1 f3 c\/ ! c~ c= b0 f0 c/\ c~ c= f1 f2 c~ c= f1 f3
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
+ |- (((?x'. ((x' = x) /\ ((x' = v) \/ (x' = z)))) \/ (?x'. ((x' = x) /\ ((x' = w) \/ (x' = z))))) = (?x'. (((x' = x) /\ ((x' = v) \/ (x' = z))) \/ ((x' = x) /\ ((x' = w) \/ (x' = z))))))
T c= c\/ c? / c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c? / c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f2 c? / c\/ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f2
- (?v. (?w. (y = (v INSERT (w INSERT EMPTY))))), (~ (x = z)), (FAN (x , (V , E))), (y IN E) |- ((?v. (?w. (y = (v INSERT (w INSERT EMPTY))))) /\ (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))
T c==> c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c==> c~ c= f1 f2 c==> cFAN c, f1 c, f3 f4 c==> cIN f0 f4 c/\ c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / c/\ c? / c/\ * f4 b1 cIN b0 * * part caff_ge * * part cINSERT f1 part cEMPTY b1 c~ cIN f1 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f2 part cEMPTY
- |- (((~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) ==> F) = ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))))))))
T c= c==> c~ c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= * f4 b0 c\/ c= b0 f5 c= b0 f6 c==> * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cset_of_edge f5 f1 f2 f6 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f5 c= b0 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f6 c= b0 f5 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f5 c= b0 f6 c==> c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> * f1 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f5 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f6 c==> chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f0 * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cF c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= * f4 b0 c\/ c= b0 f5 c= b0 f6 c==> * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cset_of_edge f5 f1 f2 f6 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f5 c= b0 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f6 c= b0 f5 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f5 c= b0 f6 c==> c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> * f1 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f5 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f6 c==> chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f0 * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
+ (y = (v INSERT (w INSERT EMPTY))), (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- ((E (v INSERT (w INSERT EMPTY))) = ((E y) /\ (v IN ((aff_ge (x INSERT EMPTY)) y))))
T c==> c= f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f1 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ * f4 f0 cIN f1 * * part caff_ge * * part cINSERT f3 part cEMPTY f0
+ |- (((!x. (!V. (!E. (!e. (((FAN (x , (V , E))) /\ (e IN E)) ==> (?v. (?w. (e = (v INSERT (w INSERT EMPTY)))))))))) ==> ((\x. (!V. (!E. (!e. (((FAN (x , (V , E))) /\ (e IN E)) ==> (?v. (?w. (e = (v INSERT (w INSERT EMPTY)))))))))) x)) = ((\x. (!V. (!E. (!e. (((FAN (x , (V , E))) /\ (e IN E)) ==> (?v. (?w. (e = (v INSERT (w INSERT EMPTY)))))))))) x))
T c= c==> ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 cIN b3 b2 c? / c? / c= b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * / ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 cIN b3 b2 c? / c? / c= b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f0 * / ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 cIN b3 b2 c? / c? / c= b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f0
- (!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) |- ((~ (_3016889 = v)) \/ (~ (_3016889 = w)))
T c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c~ c= f3 f1 c~ c= f3 f2
+ |- ((\x. (!v. (!w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))))) x)
T * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN b0 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN b1 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b2 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0
+ (~ ((aff (x INSERT (v INSERT EMPTY))) w)), (E (v INSERT (w INSERT EMPTY))) |- ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) /\ ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY))))))))))
T c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> * f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> * f4 f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> c~ chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f0 * f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (((!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- (((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ |- ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((x IN y) = (x IN (v INSERT (w INSERT EMPTY))))) ==> (((v INSERT (w INSERT EMPTY)) IN E) ==> ((FINITE (((set_of_edge v) V) E)) ==> ((w IN (((set_of_edge v) V) E)) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. ((x' IN ((x INSERT (v INSERT EMPTY)) INTER (w INSERT EMPTY))) = (x' IN EMPTY))) ==> ((!x'. ((x' IN ((x INSERT (w INSERT EMPTY)) INTER (v INSERT EMPTY))) = (x' IN EMPTY))) ==> ((!x'. ((x' IN ((x INSERT EMPTY) INTER (v INSERT (w INSERT EMPTY)))) = (x' IN EMPTY))) ==> ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) ==> ((v IN V) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))
T c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= cIN b0 f4 cIN b0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cIN f6 * * * part cset_of_edge f5 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY cIN b0 part cEMPTY c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 * * part cINSERT f6 part cEMPTY * * part cINSERT f5 part cEMPTY cIN b0 part cEMPTY c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN b0 part cEMPTY c==> c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> cIN f5 f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f5 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f6 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f0 * * part chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
- ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F) |- (((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F) /\ ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F))
T c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c/\ c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF
- |- ((((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F)) = ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F))
T c= c==> c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
+ ((!x. (~ (A x))) /\ (A y)) |- ((A _3016773) ==> F)
T c==> c/\ ! c~ * f0 b0 * f0 f1 c==> * f0 f2 cF
- (~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) |- F
T c==> c~ c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= * f4 b0 c\/ c= b0 f5 c= b0 f6 c==> * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cset_of_edge f5 f1 f2 f6 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f5 c= b0 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f6 c= b0 f5 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f5 c= b0 f6 c==> c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> * f1 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f5 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f6 c==> chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f0 * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cF
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN (((set_of_edge v) V) E)), (x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))) /\ (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c~ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c? / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
+ (~ (x = z)), (FAN (x , (V , E))), (y IN E) |- ((?v. (?w. (y = (v INSERT (w INSERT EMPTY))))) ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> cIN f4 f3 c==> c? / c? / c= f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / c/\ c? / c/\ * f3 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f1 part cEMPTY
+ (E (v INSERT (w INSERT EMPTY))) |- ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f3 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> * f4 f1 c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f3 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((!x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))))) ==> ((\x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))))) x)) = ((\x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))))) x))
T c= c==> ! ! ! ! ! c==> cFAN c, b0 c, b1 b2 c/\ cFINITE * * * part cset_of_edge b4 b1 b2 c/\ c= cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 cIN b3 * * * part cset_of_edge b4 b1 b2 c==> cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ c= b0 b4 c/\ c~ c= b0 b3 c/\ c~ c= b4 b3 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b4 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 part cEMPTY * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c/\ cIN b4 b1 c= c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY * / ! ! ! ! c==> cFAN c, b0 c, b1 b2 c/\ cFINITE * * * part cset_of_edge b4 b1 b2 c/\ c= cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 cIN b3 * * * part cset_of_edge b4 b1 b2 c==> cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ c= b0 b4 c/\ c~ c= b0 b3 c/\ c~ c= b4 b3 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b4 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 part cEMPTY * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c/\ cIN b4 b1 c= c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY f0 * / ! ! ! ! c==> cFAN c, b0 c, b1 b2 c/\ cFINITE * * * part cset_of_edge b4 b1 b2 c/\ c= cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 cIN b3 * * * part cset_of_edge b4 b1 b2 c==> cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ c= b0 b4 c/\ c~ c= b0 b3 c/\ c~ c= b4 b3 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b4 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 part cEMPTY * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c/\ cIN b4 b1 c= c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY f0
+ |- (((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((x IN y) = (x IN (v INSERT (w INSERT EMPTY))))) ==> (((v INSERT (w INSERT EMPTY)) IN E) ==> ((FINITE (((set_of_edge v) V) E)) ==> ((w IN (((set_of_edge v) V) E)) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. ((x' IN ((x INSERT (v INSERT EMPTY)) INTER (w INSERT EMPTY))) = (x' IN EMPTY))) ==> ((!x'. ((x' IN ((x INSERT (w INSERT EMPTY)) INTER (v INSERT EMPTY))) = (x' IN EMPTY))) ==> ((!x'. ((x' IN ((x INSERT EMPTY) INTER (v INSERT (w INSERT EMPTY)))) = (x' IN EMPTY))) ==> ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) ==> ((v IN V) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))))))) = ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((y = (v INSERT (w INSERT EMPTY))) ==> (((v INSERT (w INSERT EMPTY)) IN E) ==> ((FINITE (((set_of_edge v) V) E)) ==> ((w IN (((set_of_edge v) V) E)) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) ==> ((v IN V) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))))))))
T c= c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= cIN b0 f4 cIN b0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cIN f6 * * * part cset_of_edge f5 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY cIN b0 part cEMPTY c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 * * part cINSERT f6 part cEMPTY * * part cINSERT f5 part cEMPTY cIN b0 part cEMPTY c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN b0 part cEMPTY c==> c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> cIN f5 f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f5 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f6 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ cIN f0 * * part chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> c= f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cIN f6 * * * part cset_of_edge f5 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f6 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> cIN f5 f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f5 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f6 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ cIN f0 * * part chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
+ (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (x IN ((hull affine) (v INSERT (z INSERT EMPTY)))), (x IN ((hull convex) (w INSERT (z INSERT EMPTY)))) |- ((((hull convex) (w INSERT (z INSERT EMPTY))) SUBSET ((hull affine) (w INSERT (z INSERT EMPTY)))) ==> F)
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part chull part cconvex * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cSUBSET * * part chull part cconvex * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF
+ (~ ((aff (x INSERT (v INSERT EMPTY))) w)), (E (v INSERT (w INSERT EMPTY))) |- ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) /\ ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY))))))))))
T c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> * f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> * f4 f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f0 * f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((v IN (GSPEC (\GEN%PVAR%5468. (?v. (((SETSPEC GEN%PVAR%5468) (?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e))))) v))))) = (?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ * f1 b2 cIN b1 * * part caff_ge * * part cINSERT f2 part cEMPTY b2 b1 c? / c/\ * f1 b0 cIN f0 * * part caff_ge * * part cINSERT f2 part cEMPTY b0
+ |- (((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F) = ((~ (!x. (~ (A x)))) = (?y. (A y))))
T c= c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c= c~ ! c~ * f0 b0 c? / * f0 b0
+ (~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)), (E (v INSERT (w INSERT EMPTY))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) |- ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) /\ (E (v INSERT (w INSERT EMPTY))))
T c==> c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> * f3 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c~ caff * * part cINSERT f2 * * part cINSERT f0 part cEMPTY f4 c/\ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 * f3 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
- (~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) |- ((~ F) ==> F)
T c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c~ cF cF
+ (~ (x = z)), (FAN (x , (V , E))), (y IN E) |- ((((FAN (x , (V , E))) /\ (y IN E)) ==> (?v. (?w. (y = (v INSERT (w INSERT EMPTY)))))) ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> cIN f4 f3 c==> c==> c/\ cFAN c, f0 c, f2 f3 cIN f4 f3 c? / c? / c= f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / c/\ c? / c/\ * f3 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f1 part cEMPTY
- (((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F)) |- ((((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F)) /\ (((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F)))
T c==> c==> c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c/\ c==> c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
- (_3016948 = _3016951) |- ((_3016947 = _3016950) ==> ((~ (_3016946 = _3016949)) \/ ((((hull _3016949) _3016950) _3016951) \/ (~ (((hull _3016946) _3016947) _3016948)))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ chull f5 f3 f1 c~ chull f4 f2 f0
- |- (((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) = T)
T c= c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cT
- (!x. ((y x) = ((x = v) \/ (x = w)))) |- ((~ (y _3016893)) \/ ((_3016893 = v) \/ (_3016893 = w)))
T c==> ! c= * f0 b0 c\/ c= b0 f1 c= b0 f2 c\/ c~ * f0 f3 c\/ c= f3 f1 c= f3 f2
- (~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)), ((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) |- ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) /\ (((hull convex) (v INSERT (z INSERT EMPTY))) x))
T c==> c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c/\ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
+ |- ((\E. (!e. (((FAN (x , (V , E))) /\ (e IN E)) ==> (?v. (?w. (e = (v INSERT (w INSERT EMPTY)))))))) E)
T * / ! c==> c/\ cFAN c, f0 c, f1 b0 cIN b1 b0 c? / c? / c= b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2
- |- ((~ (_3016962 = _3016963)) \/ ((collinear _3016963) \/ (~ (collinear _3016962))))
T c\/ c~ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
+ (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (x IN ((hull affine) (w INSERT (z INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (w INSERT (z INSERT EMPTY))) |- (~ (((hull affine) (x INSERT (z INSERT EMPTY))) = ((hull affine) (x INSERT (v INSERT EMPTY)))))
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN (((set_of_edge v) V) E)), (x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c==> cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c? / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c? / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
+ (!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))), (E (v INSERT (w INSERT EMPTY))) |- ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) /\ ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c==> * f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> * f4 f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f0 * f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (_3016958 = _3016960), (_3016959 = _3016961) |- ((_3016958 = _3016960) /\ (((aff _3016960) _3016961) \/ (~ ((aff _3016958) _3016959))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ caff f1 f3 c~ caff f0 f2
+ (x' = w), ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), ((x' = x) /\ ((x' = w) \/ (x' = z))) |- F
T c==> c= f0 f1 c==> c/\ c~ c= f2 f3 c/\ c~ c= f2 f4 c~ c= f2 f1 c==> c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 cF
+ (E (v INSERT (w INSERT EMPTY))) |- ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f3 f1 c==> c~ c= f3 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f3 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> * f4 f1 c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> c~ chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f3 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (x = z)), (FAN (x , (V , E))), (y IN E), ((\w. (y = (v INSERT (w INSERT EMPTY)))) w) |- (((\w. (y = (v INSERT (w INSERT EMPTY)))) w) /\ (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> cIN f4 f3 c==> * / c= f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY f6 c/\ * / c= f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY f6 c? / c/\ c? / c/\ * f3 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f1 part cEMPTY
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))), ((v INSERT (w INSERT EMPTY)) IN E), (w IN (((set_of_edge v) V) E)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f4 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c? / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))), ((v INSERT (w INSERT EMPTY)) IN E), (w IN (((set_of_edge v) V) E)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) |- (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f4 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c? / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
+ |- ((((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) /\ (!x. ((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) ==> (x IN ((hull affine) (v INSERT (z INSERT EMPTY))))))) ==> (x IN ((hull affine) (v INSERT (z INSERT EMPTY))))) = (((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) /\ (((hull convex) (v INSERT (z INSERT EMPTY))) SUBSET ((hull affine) (v INSERT (z INSERT EMPTY))))) ==> (x IN ((hull affine) (v INSERT (z INSERT EMPTY))))))
T c= c==> c/\ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (_3016952 = _3016955), (_3016953 = _3016956), (_3016954 = _3016957) |- ((_3016953 = _3016956) /\ ((((aff_ge _3016955) _3016956) _3016957) \/ (~ (((aff_ge _3016952) _3016953) _3016954))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f2 f3 c\/ caff_ge f1 f3 f5 c~ caff_ge f0 f2 f4
+ |- (((E y) /\ (w IN ((aff_ge (x INSERT EMPTY)) y))) = ((\e. ((E e) /\ (w IN ((aff_ge (x INSERT EMPTY)) e)))) y))
T c= c/\ * f0 f1 cIN f2 * * part caff_ge * * part cINSERT f3 part cEMPTY f1 * / c/\ * f0 b0 cIN f2 * * part caff_ge * * part cINSERT f3 part cEMPTY b0 f1
+ (E (v INSERT (w INSERT EMPTY))) |- ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f3 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f3 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> * f4 f1 c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f3 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (w IN (aff (x INSERT (v INSERT EMPTY))))) |- ((w IN (aff (x INSERT (v INSERT EMPTY)))) = F)
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
+ (((hull affine) (x INSERT (v INSERT EMPTY))) = ((hull affine) (x INSERT (w INSERT EMPTY)))) |- (((hull affine) (x INSERT (w INSERT EMPTY))) = ((hull affine) (x INSERT (v INSERT EMPTY))))
T c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- (!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) |- (((!x'. (((~ (x' = x)) \/ (~ (x' = v))) /\ ((~ (x' = w)) \/ (~ (x' = v))))) ==> ((\x'. (((~ (x' = x)) \/ (~ (x' = v))) /\ ((~ (x' = w)) \/ (~ (x' = v))))) _3016890)) = ((\x'. (((~ (x' = x)) \/ (~ (x' = v))) /\ ((~ (x' = w)) \/ (~ (x' = v))))) _3016890))
T c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c= c==> ! c/\ c\/ c~ c= b0 f0 c~ c= b0 f2 c\/ c~ c= b0 f1 c~ c= b0 f2 * / c/\ c\/ c~ c= b0 f0 c~ c= b0 f2 c\/ c~ c= b0 f1 c~ c= b0 f2 f3 * / c/\ c\/ c~ c= b0 f0 c~ c= b0 f2 c\/ c~ c= b0 f1 c~ c= b0 f2 f3
- (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) |- ((collinear (x INSERT (v INSERT (w INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- (_3016947 = _3016950), (_3016948 = _3016951) |- ((_3016946 = _3016949) ==> ((((hull _3016949) _3016950) _3016951) \/ (~ (((hull _3016946) _3016947) _3016948))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ chull f5 f1 f3 c~ chull f4 f0 f2
- (~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))), (~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) |- ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) /\ (((hull convex) (v INSERT (z INSERT EMPTY))) x))
T c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c/\ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
- |- ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))
T c= cIN f0 * part cGSPEC / * f1 * part cSETSPEC b0 * f1 / / c/\ b0 c= f0 b1
- (_3016982 = _3016984) |- ((_3016983 = _3016985) ==> ((_3016982 INSERT _3016983) = (_3016984 INSERT _3016985)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ ((\y. (y IN E)) y) |- (((y IN E) ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))) = (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))
T c==> * / cIN b0 f0 f1 c= c==> cIN f1 f0 c? / c/\ c? / c/\ * f0 b1 cIN b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 c~ cIN f2 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c? / c/\ c? / c/\ * f0 b1 cIN b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 c~ cIN f2 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
+ ((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) |- (((!x. ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> ((\x. ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull affine) (v INSERT (z INSERT EMPTY))) x))) _3016769)) = ((\x. ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull affine) (v INSERT (z INSERT EMPTY))) x))) _3016769))
T c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c= c==> ! c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 * / c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 f3 * / c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 f3
- (~ F), (x' = v), ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), ((x' = x) /\ ((x' = v) \/ (x' = z))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c~ c= f2 f3 c/\ c~ c= f2 f1 c~ c= f2 f4 c==> c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ cF cF
- |- (((((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F) ==> ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F)) ==> (((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F) ==> ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F))) = (((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F) ==> ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F)))
T c= c==> c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF
- |- (((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F))
T c==> c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
- |- (((!v. ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F)) ==> ((\v. ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F)) v)) = ((\v. ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F)) v))
T c= c==> ! c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 b0 c~ c= f0 f2 c/\ ! c~ c/\ c= b1 f0 c\/ c= b1 b0 c= b1 f1 ! c~ c/\ c= b1 f0 c\/ c= b1 f2 c= b1 f1 cF * / c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 b0 c~ c= f0 f2 c/\ ! c~ c/\ c= b1 f0 c\/ c= b1 b0 c= b1 f1 ! c~ c/\ c= b1 f0 c\/ c= b1 f2 c= b1 f1 cF f3 * / c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 b0 c~ c= f0 f2 c/\ ! c~ c/\ c= b1 f0 c\/ c= b1 b0 c= b1 f1 ! c~ c/\ c= b1 f0 c\/ c= b1 f2 c= b1 f1 cF f3
+ (~ (x = z)), (FAN (x , (V , E))), ((\y. (y IN E)) y) |- (((\y. (y IN E)) y) /\ (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> * / cIN b0 f3 f4 c/\ * / cIN b0 f3 f4 c? / c/\ c? / c/\ * f3 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f1 part cEMPTY
+ |- ((\y. (!z. (((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) ==> ((aff (x INSERT (z INSERT EMPTY))) = (aff (x INSERT (y INSERT EMPTY))))))) v)
T * / ! c==> c/\ cIN f0 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
+ |- ((\y. (y IN (aff (x INSERT (y INSERT EMPTY))))) w)
T * / cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (x = v)), (~ (x = w)), (~ (x = z)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))))), ((v INSERT (w INSERT EMPTY)) IN E), (w IN (((set_of_edge v) V) E)) |- (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ c~ c= f1 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f4 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c? / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
- |- ((!V. (!y. ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))))))))) = T)
T c= ! ! c==> cFAN c, f0 c, b0 f1 c==> c~ c= f0 f2 c==> ! c= * b1 b2 c\/ c= b2 f3 c= b2 f4 c==> * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cFINITE * * * part cset_of_edge f3 b0 f1 c==> cset_of_edge f3 b0 f1 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> ! c~ c/\ c\/ c= b2 f0 c= b2 f3 c= b2 f4 c==> ! c~ c/\ c\/ c= b2 f0 c= b2 f4 c= b2 f3 c==> ! c~ c/\ c= b2 f0 c\/ c= b2 f3 c= b2 f4 c==> c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> * b0 f3 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c==> c~ chull part cconvex * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f0 * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cT
+ (~ (x = z)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E) |- ((FINITE (((set_of_edge v) V) E)) ==> ((w IN (((set_of_edge v) V) E)) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) ==> ((v IN V) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> c= f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c==> cFINITE * * * part cset_of_edge f5 f2 f3 c==> cIN f6 * * * part cset_of_edge f5 f2 f3 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f6 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> cIN f5 f2 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f5 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f6 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ cIN f0 * * part chull part cconvex * * part cINSERT f5 * * part cINSERT f1 part cEMPTY * f3 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
- |- ((!w. (!v. (!E. (!x. (!z. (!V. (!y. ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))))))))) = (!w. (!v. (!E. (!x. (!z. (!V. (!y. ((~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) ==> F)))))))))
T c= ! ! ! ! ! ! ! c==> cFAN c, b3 c, b5 b2 c==> c~ c= b3 b4 c==> ! c= * b6 b7 c\/ c= b7 b1 c= b7 b0 c==> * b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> cFINITE * * * part cset_of_edge b1 b5 b2 c==> cset_of_edge b1 b5 b2 b0 c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c~ c= b3 b1 c==> c~ c= b3 b0 c==> c~ c= b1 b0 c==> ! c~ c/\ c\/ c= b7 b3 c= b7 b1 c= b7 b0 c==> ! c~ c/\ c\/ c= b7 b3 c= b7 b0 c= b7 b1 c==> ! c~ c/\ c= b7 b3 c\/ c= b7 b1 c= b7 b0 c==> c~ caff * * part cINSERT b3 * * part cINSERT b1 part cEMPTY b0 c==> * b5 b1 c==> c= c~ ccollinear * * part cINSERT b3 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ caff * * part cINSERT b3 * * part cINSERT b1 part cEMPTY b0 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b1 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b0 c==> c~ chull part cconvex * * part cINSERT b1 * * part cINSERT b4 part cEMPTY b3 * b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! ! ! ! ! ! ! c==> c~ c==> cFAN c, b3 c, b5 b2 c==> c~ c= b3 b4 c==> ! c= * b6 b7 c\/ c= b7 b1 c= b7 b0 c==> * b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> cFINITE * * * part cset_of_edge b1 b5 b2 c==> cset_of_edge b1 b5 b2 b0 c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c~ c= b3 b1 c==> c~ c= b3 b0 c==> c~ c= b1 b0 c==> ! c~ c/\ c\/ c= b7 b3 c= b7 b1 c= b7 b0 c==> ! c~ c/\ c\/ c= b7 b3 c= b7 b0 c= b7 b1 c==> ! c~ c/\ c= b7 b3 c\/ c= b7 b1 c= b7 b0 c==> c~ caff * * part cINSERT b3 * * part cINSERT b1 part cEMPTY b0 c==> * b5 b1 c==> c= c~ ccollinear * * part cINSERT b3 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ caff * * part cINSERT b3 * * part cINSERT b1 part cEMPTY b0 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b1 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b0 c==> c~ chull part cconvex * * part cINSERT b1 * * part cINSERT b4 part cEMPTY b3 * b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cF
- |- ((!x'. (P \/ (Q x'))) = (P \/ (!x'. (Q x'))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- |- ((\z. (!v. ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F))) z)
T * / ! c==> c~ c==> c/\ chull part cconvex * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 ! c==> chull part cconvex * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 chull part caffine * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 chull part caffine * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cF f1
+ (E (v INSERT (w INSERT EMPTY))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))), (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) |- ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) /\ ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c/\ caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f3 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (w IN (((set_of_edge v) V) E)), (x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) ==> (E (v INSERT (w INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (E (v INSERT (w INSERT EMPTY))) |- ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> * f4 f1 c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f3 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F) |- (((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F) /\ ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F))
T c==> c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c/\ c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN (((set_of_edge v) V) E)), (x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c? / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
- (_3016946 = _3016949), (_3016947 = _3016950), (_3016948 = _3016951) |- ((((hull _3016949) _3016950) _3016951) \/ (~ (((hull _3016946) _3016947) _3016948)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ chull f1 f3 f5 c~ chull f0 f2 f4
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (E (v INSERT (w INSERT EMPTY))) |- ((((I E) (v INSERT (w INSERT EMPTY))) ==> F) = F)
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> cI f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF cF
+ (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (x IN ((hull affine) (v INSERT (z INSERT EMPTY)))), (x IN ((hull affine) (w INSERT (z INSERT EMPTY)))) |- ((((DISJOINT (x INSERT EMPTY)) (v INSERT (z INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (z INSERT EMPTY)))) ==> F)
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> c/\ cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cF
+ |- (((A y) /\ (!y. (~ (A y)))) ==> F)
T c==> c/\ * f0 f1 ! c~ * f0 b0 cF
+ |- (((?x. ((A x) /\ (!y. (~ (A y))))) \/ (?y. ((!x. (~ (A x))) /\ (A y)))) = (?y. (((A y) /\ (!y. (~ (A y)))) \/ ((!x. (~ (A x))) /\ (A y)))))
T c= c\/ c? / c/\ * f0 b0 ! c~ * f0 b1 c? / c/\ ! c~ * f0 b1 * f0 b0 c? / c\/ c/\ * f0 b0 ! c~ * f0 b1 c/\ ! c~ * f0 b1 * f0 b0
+ (!x. ((y x) = ((x = v) \/ (x = w)))) |- ((!x. ((y x) = ((x = v) \/ (x = w)))) /\ ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))
T c==> ! c= * f0 b0 c\/ c= b0 f1 c= b0 f2 c/\ ! c= * f0 b0 c\/ c= b0 f1 c= b0 f2 c==> * f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f3 c==> cset_of_edge f1 f4 f3 f2 c==> c~ ccollinear * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f5 f1 c==> c~ c= f5 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f5 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f5 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f5 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f5 * * part cINSERT f1 part cEMPTY f2 c==> * f4 f1 c==> c= c~ ccollinear * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f5 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f5 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> caff_ge * * part cINSERT f5 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f5 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT f6 part cEMPTY f5 * f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) |- ((?x'. (((x' = x) /\ ((x' = v) \/ (x' = z))) \/ ((x' = x) /\ ((x' = w) \/ (x' = z))))) ==> F)
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c==> c? / c\/ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF
- |- ((?x''. ((x' = x) /\ ((x'' = w) \/ (x'' = z)))) = ((x' = x) /\ (?x'. ((x' = w) \/ (x' = z)))))
T c= c? / c/\ c= f0 f1 c\/ c= b0 f2 c= b0 f3 c/\ c= f0 f1 c? / c\/ c= b0 f2 c= b0 f3
+ |- (((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))))))) = ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((x IN y) = (x IN (v INSERT (w INSERT EMPTY))))) ==> (((v INSERT (w INSERT EMPTY)) IN E) ==> ((FINITE (((set_of_edge v) V) E)) ==> ((w IN (((set_of_edge v) V) E)) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. ((x' IN ((x INSERT (v INSERT EMPTY)) INTER (w INSERT EMPTY))) = (x' IN EMPTY))) ==> ((!x'. ((x' IN ((x INSERT (w INSERT EMPTY)) INTER (v INSERT EMPTY))) = (x' IN EMPTY))) ==> ((!x'. ((x' IN ((x INSERT EMPTY) INTER (v INSERT (w INSERT EMPTY)))) = (x' IN EMPTY))) ==> ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) ==> ((v IN V) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))))))))
T c= c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= * f4 b0 c\/ c= b0 f5 c= b0 f6 c==> * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cset_of_edge f5 f1 f2 f6 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f5 c= b0 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f6 c= b0 f5 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f5 c= b0 f6 c==> c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> * f1 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f5 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f6 c==> chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f0 * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= cIN b0 f4 cIN b0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cIN f6 * * * part cset_of_edge f5 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY cIN b0 part cEMPTY c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 * * part cINSERT f6 part cEMPTY * * part cINSERT f5 part cEMPTY cIN b0 part cEMPTY c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN b0 part cEMPTY c==> c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> cIN f5 f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f5 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f6 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f0 * * part chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
- (!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) |- (!x'. (((~ (x' = x)) \/ (~ (x' = v))) /\ ((~ (x' = w)) \/ (~ (x' = v)))))
T c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c/\ c\/ c~ c= b0 f0 c~ c= b0 f2 c\/ c~ c= b0 f1 c~ c= b0 f2
+ (E (v INSERT (w INSERT EMPTY))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) |- ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f3 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN (((set_of_edge v) V) E)), (x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((x IN ((hull convex) (v INSERT (z INSERT EMPTY)))) ==> (E (v INSERT (w INSERT EMPTY)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (x' = v), ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), ((x' = x) /\ ((x' = v) \/ (x' = z))) |- ((x = x) ==> F)
T c==> c= f0 f1 c==> c/\ c~ c= f2 f3 c/\ c~ c= f2 f1 c~ c= f2 f4 c==> c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c==> c= f2 f2 cF
+ (E (v INSERT (w INSERT EMPTY))) |- (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> c~ chull part cconvex * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f3 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (E (v INSERT (w INSERT EMPTY))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))), (((hull convex) (v INSERT (z INSERT EMPTY))) x) |- ((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (E (v INSERT (w INSERT EMPTY))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f3 c/\ chull part cconvex * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f3 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- ((((set_of_edge v) V) E) w) |- ((I (((set_of_edge v) V) E)) w)
T c==> cset_of_edge f0 f1 f2 f3 cI * * * part cset_of_edge f0 f1 f2 f3
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((!v. ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F)) ==> ((\v. ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F)) v)) = ((\v. ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F)) v))
T c= c==> ! c==> c~ c\/ c~ chull part cconvex * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 chull part cconvex * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 cF * / c==> c~ c\/ c~ chull part cconvex * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 chull part cconvex * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 cF f2 * / c==> c~ c\/ c~ chull part cconvex * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 chull part cconvex * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 cF f2
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
+ (E (v INSERT (w INSERT EMPTY))) |- (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cset_of_edge f1 f3 f0 f2 c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f4 f1 c==> c~ c= f4 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f4 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> * f3 f1 c==> c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> c~ chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((A y) /\ (!y. (~ (A y)))) |- (((A y) /\ (!y. (~ (A y)))) /\ F)
T c==> c/\ * f0 f1 ! c~ * f0 b0 c/\ c/\ * f0 f1 ! c~ * f0 b0 cF
+ (FAN (x , (V , E))) |- ((FAN (x , (V , E))) = T)
T c==> cFAN c, f0 c, f1 f2 c= cFAN c, f0 c, f1 f2 cT
- (~ F), (~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c/\ c~ cF cF
+ (~ (x = z)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), ((FINITE (((set_of_edge v) V) E)) /\ ((w IN (((set_of_edge v) V) E)) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))), ((v INSERT (w INSERT EMPTY)) IN E) |- (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c~ c= f0 f1 c==> cFINITE * * * part cset_of_edge f2 f3 f4 c==> cFAN c, f0 c, f3 f4 c==> c= f5 * * part cINSERT f2 * * part cINSERT f6 part cEMPTY c==> c/\ cFINITE * * * part cset_of_edge f2 f3 f4 c/\ cIN f6 * * * part cset_of_edge f2 f3 f4 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f6 part cEMPTY c/\ c~ c= f0 f2 c/\ c~ c= f0 f6 c/\ c~ c= f2 f6 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f6 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f6 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f6 part cEMPTY c/\ c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ cIN f2 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f2 * * part cINSERT f6 part cEMPTY f4 c? / c/\ c? / c/\ * f4 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f1 part cEMPTY
- |- ((\x. (!v. ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F))) x)
T * / ! c==> c~ c==> c/\ c~ c= b0 f0 c/\ c~ c= b0 b1 c~ c= b0 f1 c/\ ! c~ c/\ c= b2 b0 c\/ c= b2 b1 c= b2 f0 ! c~ c/\ c= b2 b0 c\/ c= b2 f1 c= b2 f0 cF f2
+ (!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))), (E (v INSERT (w INSERT EMPTY))) |- ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) /\ ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c==> * f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> * f4 f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> c~ chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f0 * f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) |- ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) /\ F)
T c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 c/\ c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF
- |- ((\V. (!y. ((~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) ==> F))) V)
T * / ! c==> c~ c==> cFAN c, f0 c, b0 f1 c==> c~ c= f0 f2 c==> ! c= * b1 b2 c\/ c= b2 f3 c= b2 f4 c==> * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cFINITE * * * part cset_of_edge f3 b0 f1 c==> cset_of_edge f3 b0 f1 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> ! c~ c/\ c\/ c= b2 f0 c= b2 f3 c= b2 f4 c==> ! c~ c/\ c\/ c= b2 f0 c= b2 f4 c= b2 f3 c==> ! c~ c/\ c= b2 f0 c\/ c= b2 f3 c= b2 f4 c==> c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> * b0 f3 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c==> chull part cconvex * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f0 * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cF f5
- (_3016970 = _3016972), (_3016971 = _3016973) |- (((I _3016972) _3016973) \/ (~ ((I _3016970) _3016971)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cI f1 f3 c~ cI f0 f2
- |- ((\z. (!v. ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F))) z)
T * / ! c==> c~ c\/ c~ chull part cconvex * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 chull part cconvex * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cF f1
+ (~ (w IN (aff (x INSERT (v INSERT EMPTY))))) |- (~ (((hull affine) (x INSERT (v INSERT EMPTY))) = ((hull affine) (x INSERT (w INSERT EMPTY)))))
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
- |- ((!z. (!V. (!y. ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))))) = T)
T c= ! ! ! c==> cFAN c, f0 c, b1 f1 c==> c~ c= f0 b0 c==> ! c= * b2 b3 c\/ c= b3 f2 c= b3 f3 c==> * f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFINITE * * * part cset_of_edge f2 b1 f1 c==> cset_of_edge f2 b1 f1 f3 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ c= f2 f3 c==> ! c~ c/\ c\/ c= b3 f0 c= b3 f2 c= b3 f3 c==> ! c~ c/\ c\/ c= b3 f0 c= b3 f3 c= b3 f2 c==> ! c~ c/\ c= b3 f0 c\/ c= b3 f2 c= b3 f3 c==> c~ caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f3 c==> * b1 f2 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 c==> c~ chull part cconvex * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f0 * f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
- |- ((_3016962 = _3016963) ==> ((collinear _3016963) \/ (~ (collinear _3016962))))
T c==> c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
- |- (((!A. ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F)) ==> ((\A. ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F)) A)) = ((\A. ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F)) A))
T c= c==> ! c==> c~ c= c~ ! c~ * b0 b1 c? / * b0 b1 cF * / c==> c~ c= c~ ! c~ * b0 b1 c? / * b0 b1 cF f0 * / c==> c~ c= c~ ! c~ * b0 b1 c? / * b0 b1 cF f0
- ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F) |- ((((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F)) ==> ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F))
T c==> c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c==> c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
- (x' = v), ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), ((x' = x) /\ ((x' = v) \/ (x' = z))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c~ c= f2 f3 c/\ c~ c= f2 f1 c~ c= f2 f4 c==> c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c==> c~ cF cF
- (V v) |- ((I V) v)
T c==> * f0 f1 cI f0 f1
+ (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (x IN ((hull affine) (v INSERT (z INSERT EMPTY)))), (x IN ((hull convex) (w INSERT (z INSERT EMPTY)))) |- ((x IN ((hull convex) (w INSERT (z INSERT EMPTY)))) /\ F)
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part chull part cconvex * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f0 * * part chull part cconvex * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))), (y = (v INSERT (w INSERT EMPTY))), ((v INSERT (w INSERT EMPTY)) IN E), (v IN V), (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (w IN (((set_of_edge v) V) E)), (x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))) ==> (E (v INSERT (w INSERT EMPTY))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c~ cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((x IN y) = (x IN (v INSERT (w INSERT EMPTY))))) ==> (((v INSERT (w INSERT EMPTY)) IN E) ==> ((FINITE (((set_of_edge v) V) E)) ==> ((w IN (((set_of_edge v) V) E)) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. ((x' IN ((x INSERT (v INSERT EMPTY)) INTER (w INSERT EMPTY))) = (x' IN EMPTY))) ==> ((!x'. ((x' IN ((x INSERT (w INSERT EMPTY)) INTER (v INSERT EMPTY))) = (x' IN EMPTY))) ==> ((!x'. ((x' IN ((x INSERT EMPTY) INTER (v INSERT (w INSERT EMPTY)))) = (x' IN EMPTY))) ==> ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) ==> ((v IN V) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> ((~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))
T c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= cIN b0 f4 cIN b0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cIN f6 * * * part cset_of_edge f5 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY cIN b0 part cEMPTY c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 * * part cINSERT f6 part cEMPTY * * part cINSERT f5 part cEMPTY cIN b0 part cEMPTY c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN b0 part cEMPTY c==> c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> cIN f5 f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f5 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f6 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ cIN f0 * * part chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
+ (E (v INSERT (w INSERT EMPTY))) |- ((I E) (v INSERT (w INSERT EMPTY)))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cI f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((!x'. ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x')) \/ (((hull affine) (v INSERT (z INSERT EMPTY))) x))) = ((!x. (~ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) \/ (((hull affine) (v INSERT (z INSERT EMPTY))) x)))
T c= ! c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c\/ ! c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
+ |- ((\v. (!w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))))) v)
T * / ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1
- ((A y) /\ (!y. (~ (A y)))) |- ((~ F) ==> F)
T c==> c/\ * f0 f1 ! c~ * f0 b0 c==> c~ cF cF
- (!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) |- (!x'. (((~ (x' = x)) /\ (~ (x' = w))) \/ (~ (x' = v))))
T c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c\/ c/\ c~ c= b0 f0 c~ c= b0 f1 c~ c= b0 f2
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (x = v)), (~ (x = w)), (~ (x = z)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (y = (v INSERT (w INSERT EMPTY))), ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))))), ((v INSERT (w INSERT EMPTY)) IN E), (w IN (((set_of_edge v) V) E)) |- (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cFAN c, f0 c, f4 f5 c==> c= f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ c~ c= f0 f2 c/\ c~ c= f1 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f4 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c? / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
- |- (((~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) ==> F) ==> ((~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) ==> F))
T c==> c==> c~ c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= * f4 b0 c\/ c= b0 f5 c= b0 f6 c==> * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cset_of_edge f5 f1 f2 f6 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f5 c= b0 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f6 c= b0 f5 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f5 c= b0 f6 c==> c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> * f1 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f5 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f6 c==> c~ chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f0 * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cF c==> c~ c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= * f4 b0 c\/ c= b0 f5 c= b0 f6 c==> * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cset_of_edge f5 f1 f2 f6 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f5 c= b0 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f6 c= b0 f5 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f5 c= b0 f6 c==> c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> * f1 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f5 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f6 c==> c~ chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f0 * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cF
- (_3016990 = _3016992) |- ((_3016990 = _3016992) /\ ((~ (_3016991 = _3016993)) \/ ((_3016990 , _3016991) = (_3016992 , _3016993))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ |- ((~ (A = EMPTY)) = (?y. (y IN A)))
T c= c~ c= f0 part cEMPTY c? / cIN b0 f0
- |- ((!A. ((~ (!x. (~ (A x)))) = (?y. (A y)))) = (!A. ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F)))
T c= ! c= c~ ! c~ * b0 b1 c? / * b0 b1 ! c==> c~ c= c~ ! c~ * b0 b1 c? / * b0 b1 cF
- (~ (v = w)) |- (~ (w = v))
T c==> c~ c= f0 f1 c~ c= f1 f0
- |- (((((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F)) ==> (((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F))) = (((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F)))
T c= c==> c==> c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
- |- ((!w. (!v. (!E. (!x. (!z. (!V. (!y. ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))))))))) = (!w. (!v. (!E. (!x. (!z. (!V. (!y. ((~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) ==> F)))))))))
T c= ! ! ! ! ! ! ! c==> cFAN c, b3 c, b5 b2 c==> c~ c= b3 b4 c==> ! c= * b6 b7 c\/ c= b7 b1 c= b7 b0 c==> * b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> cFINITE * * * part cset_of_edge b1 b5 b2 c==> cset_of_edge b1 b5 b2 b0 c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c~ c= b3 b1 c==> c~ c= b3 b0 c==> c~ c= b1 b0 c==> ! c~ c/\ c\/ c= b7 b3 c= b7 b1 c= b7 b0 c==> ! c~ c/\ c\/ c= b7 b3 c= b7 b0 c= b7 b1 c==> ! c~ c/\ c= b7 b3 c\/ c= b7 b1 c= b7 b0 c==> c~ caff * * part cINSERT b3 * * part cINSERT b1 part cEMPTY b0 c==> * b5 b1 c==> c= c~ ccollinear * * part cINSERT b3 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ caff * * part cINSERT b3 * * part cINSERT b1 part cEMPTY b0 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b1 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b0 c==> chull part cconvex * * part cINSERT b1 * * part cINSERT b4 part cEMPTY b3 * b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! ! ! ! ! ! ! c==> c~ c==> cFAN c, b3 c, b5 b2 c==> c~ c= b3 b4 c==> ! c= * b6 b7 c\/ c= b7 b1 c= b7 b0 c==> * b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> cFINITE * * * part cset_of_edge b1 b5 b2 c==> cset_of_edge b1 b5 b2 b0 c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c~ c= b3 b1 c==> c~ c= b3 b0 c==> c~ c= b1 b0 c==> ! c~ c/\ c\/ c= b7 b3 c= b7 b1 c= b7 b0 c==> ! c~ c/\ c\/ c= b7 b3 c= b7 b0 c= b7 b1 c==> ! c~ c/\ c= b7 b3 c\/ c= b7 b1 c= b7 b0 c==> c~ caff * * part cINSERT b3 * * part cINSERT b1 part cEMPTY b0 c==> * b5 b1 c==> c= c~ ccollinear * * part cINSERT b3 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ caff * * part cINSERT b3 * * part cINSERT b1 part cEMPTY b0 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b1 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b0 c==> chull part cconvex * * part cINSERT b1 * * part cINSERT b4 part cEMPTY b3 * b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cF
+ (~ (w IN (aff (x INSERT (v INSERT EMPTY))))) |- (~ (w IN ((hull affine) (x INSERT (v INSERT EMPTY)))))
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((_3016974 = _3016975) ==> ((FAN _3016975) \/ (~ (FAN _3016974))))
T c==> c= f0 f1 c\/ cFAN f1 c~ cFAN f0
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ ((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) |- ((((hull affine) (v INSERT (z INSERT EMPTY))) _3016769) \/ (~ (((hull convex) (v INSERT (z INSERT EMPTY))) _3016769)))
T c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c\/ chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3
+ (x' = v), ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), ((x' = x) /\ ((x' = v) \/ (x' = z))) |- (~ (x = x))
T c==> c= f0 f1 c==> c/\ c~ c= f2 f3 c/\ c~ c= f2 f1 c~ c= f2 f4 c==> c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c~ c= f2 f2
+ (E (v INSERT (w INSERT EMPTY))), (V v) |- ((V v) /\ (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f3 f1 c/\ * f3 f1 c==> c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (x' = z), ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), ((x' = x) /\ ((x' = v) \/ (x' = z))) |- ((x = x) ==> F)
T c==> c= f0 f1 c==> c/\ c~ c= f2 f1 c/\ c~ c= f2 f3 c~ c= f2 f4 c==> c/\ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c==> c= f2 f2 cF
+ ((\w. (y = (v INSERT (w INSERT EMPTY)))) w) |- (y = (v INSERT (w INSERT EMPTY)))
T c==> * / c= f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2 c= f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (x = z)), (FAN (x , (V , E))), (y IN E) |- ((((\v. (?w. (y = (v INSERT (w INSERT EMPTY))))) v) ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))) = T)
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> cIN f4 f3 c= c==> * / c? / c= f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f5 c? / c/\ c? / c/\ * f3 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f1 part cEMPTY cT
- (!x. ((y x) = ((x = v) \/ (x = w)))) |- (((!x. ((~ (y x)) \/ ((x = v) \/ (x = w)))) ==> ((\x. ((~ (y x)) \/ ((x = v) \/ (x = w)))) _3016893)) = ((\x. ((~ (y x)) \/ ((x = v) \/ (x = w)))) _3016893))
T c==> ! c= * f0 b0 c\/ c= b0 f1 c= b0 f2 c= c==> ! c\/ c~ * f0 b0 c\/ c= b0 f1 c= b0 f2 * / c\/ c~ * f0 b0 c\/ c= b0 f1 c= b0 f2 f3 * / c\/ c~ * f0 b0 c\/ c= b0 f1 c= b0 f2 f3
- |- ((!v'. ((~ (((hull convex) (v' INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) = ((!v. (~ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x)))
T c= ! c\/ c~ chull part cconvex * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 chull part cconvex * * part cINSERT f2 * * part cINSERT f0 part cEMPTY f1 c\/ ! c~ chull part cconvex * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 chull part cconvex * * part cINSERT f2 * * part cINSERT f0 part cEMPTY f1
- (_3016958 = _3016960), (_3016959 = _3016961) |- (((aff _3016960) _3016961) \/ (~ ((aff _3016958) _3016959)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ caff f1 f3 c~ caff f0 f2
- (_3016952 = _3016955), (_3016954 = _3016957) |- ((~ (_3016953 = _3016956)) \/ ((((aff_ge _3016955) _3016956) _3016957) \/ (~ (((aff_ge _3016952) _3016953) _3016954))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ caff_ge f1 f5 f3 c~ caff_ge f0 f4 f2
- |- (((!z. (!v. ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F))) ==> ((\z. (!v. ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F))) z)) = ((\z. (!v. ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F))) z))
T c= c==> ! ! c==> c~ c==> c/\ chull part cconvex * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 ! c==> chull part cconvex * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 chull part caffine * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 chull part caffine * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cF * / ! c==> c~ c==> c/\ chull part cconvex * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 ! c==> chull part cconvex * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 chull part caffine * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 chull part caffine * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cF f1 * / ! c==> c~ c==> c/\ chull part cconvex * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 ! c==> chull part cconvex * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 chull part caffine * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 chull part caffine * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cF f1
- (_3016952 = _3016955), (_3016953 = _3016956), (_3016954 = _3016957) |- ((((aff_ge _3016955) _3016956) _3016957) \/ (~ (((aff_ge _3016952) _3016953) _3016954)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ caff_ge f1 f3 f5 c~ caff_ge f0 f2 f4
+ (x' = w), ((x' = x) /\ ((x' = w) \/ (x' = z))) |- ((~ (x = w)) = (~ (x = x)))
T c==> c= f0 f1 c==> c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c= c~ c= f2 f1 c~ c= f2 f2
+ (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (((hull affine) (x INSERT (v INSERT EMPTY))) = ((hull affine) (x INSERT (w INSERT EMPTY)))) |- ((((hull affine) (x INSERT (v INSERT EMPTY))) = ((hull affine) (x INSERT (w INSERT EMPTY)))) /\ F)
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c/\ c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cF
+ (E (v INSERT (w INSERT EMPTY))) |- ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f3 f1 c==> c~ c= f3 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f3 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> * f4 f1 c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f3 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
+ (~ (x = z)), (FAN (x , (V , E))) |- (((\y. (y IN E)) y) ==> (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY))))))))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> * / cIN b0 f3 f4 c? / c/\ c? / c/\ * f3 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 c~ cIN f0 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f1 part cEMPTY
- |- (((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F))
T c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF
+ |- (((!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))) ==> ((\E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))) E)) = ((\E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))) E))
T c= c==> ! ! ! c==> cFAN c, f0 c, f1 b0 c/\ cFINITE * * * part cset_of_edge b2 f1 b0 c/\ c= cIN * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cIN b1 * * * part cset_of_edge b2 f1 b0 c==> cIN * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c~ c= f0 b2 c/\ c~ c= f0 b1 c/\ c~ c= b2 b1 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b2 part cEMPTY c/\ cIN b2 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * / ! ! c==> cFAN c, f0 c, f1 b0 c/\ cFINITE * * * part cset_of_edge b2 f1 b0 c/\ c= cIN * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cIN b1 * * * part cset_of_edge b2 f1 b0 c==> cIN * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c~ c= f0 b2 c/\ c~ c= f0 b1 c/\ c~ c= b2 b1 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b2 part cEMPTY c/\ cIN b2 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b2 part cEMPTY f2 * / ! ! c==> cFAN c, f0 c, f1 b0 c/\ cFINITE * * * part cset_of_edge b2 f1 b0 c/\ c= cIN * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cIN b1 * * * part cset_of_edge b2 f1 b0 c==> cIN * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c~ c= f0 b2 c/\ c~ c= f0 b1 c/\ c~ c= b2 b1 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b2 part cEMPTY c/\ cIN b2 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b2 part cEMPTY f2
+ |- ((\x. ((xfan (x , (V , E))) = (GSPEC (\GEN%PVAR%5468. (?v. (((SETSPEC GEN%PVAR%5468) (?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e))))) v)))))) x)
T * / c= * part cxfan c, b0 c, f0 f1 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ * f1 b3 cIN b2 * * part caff_ge * * part cINSERT b0 part cEMPTY b3 b2 f2
+ (E (v INSERT (w INSERT EMPTY))), (V v) |- ((V v) /\ (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f3 f1 c/\ * f3 f1 c==> c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> c~ chull part cconvex * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- (((((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F)) ==> (((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F))) = (((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F)))
T c= c==> c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF
- (x' = z), ((x' = x) /\ ((x' = w) \/ (x' = z))) |- ((~ (x = w)) = (~ (x = w)))
T c==> c= f0 f1 c==> c/\ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c= c~ c= f2 f3 c~ c= f2 f3
- (~ (v = w)) |- ((w = v) = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
- |- ((_3016971 = _3016973) ==> ((~ (_3016970 = _3016972)) \/ (((I _3016972) _3016973) \/ (~ ((I _3016970) _3016971)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
- ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F), (((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F)) |- ((((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F)) /\ ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F))
T c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c/\ c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF
- (~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) |- F
T c==> c~ c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= * f4 b0 c\/ c= b0 f5 c= b0 f6 c==> * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cset_of_edge f5 f1 f2 f6 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f5 c= b0 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f6 c= b0 f5 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f5 c= b0 f6 c==> c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> * f1 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f5 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f6 c==> c~ chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f0 * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cF
- (_3016952 = _3016955), (_3016953 = _3016956), (_3016954 = _3016957) |- ((((((aff_ge _3016952) _3016953) _3016954) = (((aff_ge _3016955) _3016956) _3016957)) ==> ((((aff_ge _3016955) _3016956) _3016957) \/ (~ (((aff_ge _3016952) _3016953) _3016954)))) = ((((aff_ge _3016955) _3016956) _3016957) \/ (~ (((aff_ge _3016952) _3016953) _3016954))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c= c==> c= caff_ge f0 f2 f4 caff_ge f1 f3 f5 c\/ caff_ge f1 f3 f5 c~ caff_ge f0 f2 f4 c\/ caff_ge f1 f3 f5 c~ caff_ge f0 f2 f4
- |- ((!E. (!x. (!z. (!V. (!y. ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))))))) = T)
T c= ! ! ! ! ! c==> cFAN c, b1 c, b3 b0 c==> c~ c= b1 b2 c==> ! c= * b4 b5 c\/ c= b5 f0 c= b5 f1 c==> * b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f0 b3 b0 c==> cset_of_edge f0 b3 b0 f1 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ c= b1 f0 c==> c~ c= b1 f1 c==> c~ c= f0 f1 c==> ! c~ c/\ c\/ c= b5 b1 c= b5 f0 c= b5 f1 c==> ! c~ c/\ c\/ c= b5 b1 c= b5 f1 c= b5 f0 c==> ! c~ c/\ c= b5 b1 c\/ c= b5 f0 c= b5 f1 c==> c~ caff * * part cINSERT b1 * * part cINSERT f0 part cEMPTY f1 c==> * b3 f0 c==> c= c~ ccollinear * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ caff * * part cINSERT b1 * * part cINSERT f0 part cEMPTY f1 c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f1 c==> c~ chull part cconvex * * part cINSERT f0 * * part cINSERT b2 part cEMPTY b1 * b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cT
- ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F), (((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F) ==> ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F)) |- ((((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F) ==> ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F)) /\ ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F))
T c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c/\ c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF
- (_3016962 = _3016963) |- ((((collinear _3016962) = (collinear _3016963)) ==> ((collinear _3016963) \/ (~ (collinear _3016962)))) = ((collinear _3016963) \/ (~ (collinear _3016962))))
T c==> c= f0 f1 c= c==> c= ccollinear f0 ccollinear f1 c\/ ccollinear f1 c~ ccollinear f0 c\/ ccollinear f1 c~ ccollinear f0
- |- ((~ (_3016959 = _3016961)) \/ ((~ (_3016958 = _3016960)) \/ (((aff _3016960) _3016961) \/ (~ ((aff _3016958) _3016959)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ caff f3 f1 c~ caff f2 f0
- (!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) |- (!x'. ((~ (x' = x)) \/ ((~ (x' = v)) /\ (~ (x' = w)))))
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c\/ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2
- |- ((((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z))))))) = T)
T c= c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cT
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F), (((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F) ==> ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F)) |- (((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F) /\ ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F))
T c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c/\ c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF
- |- ((((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F)) ==> (((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F)))
T c==> c==> c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
- |- ((\v. ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F)) v)
T * / c==> c~ c\/ c~ chull part cconvex * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 chull part cconvex * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f1 cF f2
- |- ((!V. (!y. ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY))))))))))))))))))))))))) = T)
T c= ! ! c==> cFAN c, f0 c, b0 f1 c==> c~ c= f0 f2 c==> ! c= * b1 b2 c\/ c= b2 f3 c= b2 f4 c==> * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cFINITE * * * part cset_of_edge f3 b0 f1 c==> cset_of_edge f3 b0 f1 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> ! c~ c/\ c\/ c= b2 f0 c= b2 f3 c= b2 f4 c==> ! c~ c/\ c\/ c= b2 f0 c= b2 f4 c= b2 f3 c==> ! c~ c/\ c= b2 f0 c\/ c= b2 f3 c= b2 f4 c==> c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> * b0 f3 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c==> chull part cconvex * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f0 * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cT
- (_3016971 = _3016973) |- ((_3016970 = _3016972) ==> (((I _3016972) _3016973) \/ (~ ((I _3016970) _3016971))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
- |- ((!x. (!z. (!v. ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))))) = (!x. (!z. (!v. ((~ ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) \/ (((hull convex) (v INSERT (z INSERT EMPTY))) x))) ==> F)))))
T c= ! ! ! c\/ c~ chull part cconvex * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 chull part cconvex * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 ! ! ! c==> c~ c\/ c~ chull part cconvex * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 chull part cconvex * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cF
- |- ((!y. (P y)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- (((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F) ==> ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F)) |- ((((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F) ==> ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F)) /\ (((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F) ==> ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c/\ c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF
- (~ (((hull affine) (v INSERT (z INSERT EMPTY))) x)), ((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) |- F
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) = T)
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cT
- (_3016982 = _3016984) |- ((_3016982 = _3016984) /\ ((~ (_3016983 = _3016985)) \/ ((_3016982 INSERT _3016983) = (_3016984 INSERT _3016985))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- (~ (((hull affine) (v INSERT (z INSERT EMPTY))) x)), ((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) |- ((~ F) ==> F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c==> c~ cF cF
- (!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) |- ((~ (_3016889 = x)) \/ (~ (_3016889 = w)))
T c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c~ c= f3 f0 c~ c= f3 f2
- |- ((!x. ((P x) /\ (Q x))) = ((!x. (P x)) /\ (!x. (Q x))))
T c= ! c/\ * f0 b0 * f1 b0 c/\ ! * f0 b0 ! * f1 b0
- (~ (E (v INSERT (w INSERT EMPTY)))), (E (v INSERT (w INSERT EMPTY))) |- ((~ F) ==> F)
T c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cF cF
- (!x. ((y x) = ((x = v) \/ (x = w)))) |- (!x. ((~ (y x)) \/ ((x = v) \/ (x = w))))
T c==> ! c= * f0 b0 c\/ c= b0 f1 c= b0 f2 ! c\/ c~ * f0 b0 c\/ c= b0 f1 c= b0 f2
- |- ((((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F) ==> ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F)) ==> (((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F) ==> ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF
- |- (((!w. (!x. (!v. ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F)))) ==> ((\w. (!x. (!v. ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F)))) w)) = ((\w. (!x. (!v. ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F)))) w))
T c= c==> ! ! ! c==> c~ c==> c/\ c~ c= b1 f0 c/\ c~ c= b1 b2 c~ c= b1 b0 c/\ ! c~ c/\ c= b3 b1 c\/ c= b3 b2 c= b3 f0 ! c~ c/\ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF * / ! ! c==> c~ c==> c/\ c~ c= b1 f0 c/\ c~ c= b1 b2 c~ c= b1 b0 c/\ ! c~ c/\ c= b3 b1 c\/ c= b3 b2 c= b3 f0 ! c~ c/\ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1 * / ! ! c==> c~ c==> c/\ c~ c= b1 f0 c/\ c~ c= b1 b2 c~ c= b1 b0 c/\ ! c~ c/\ c= b3 b1 c\/ c= b3 b2 c= b3 f0 ! c~ c/\ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1
- (~ F), (x' = z), ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), ((x' = x) /\ ((x' = w) \/ (x' = z))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c~ c= f2 f1 c/\ c~ c= f2 f3 c~ c= f2 f4 c==> c/\ c= f0 f2 c\/ c= f0 f4 c= f0 f1 c/\ c~ cF cF
- (!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) |- ((\x'. (((~ (x' = x)) \/ (~ (x' = v))) /\ ((~ (x' = w)) \/ (~ (x' = v))))) _3016890)
T c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 * / c/\ c\/ c~ c= b0 f0 c~ c= b0 f2 c\/ c~ c= b0 f1 c~ c= b0 f2 f3
- (?y. (y IN E)), (~ (x = z)), (FAN (x , (V , E))) |- (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c? / cIN b0 f0 c==> c~ c= f1 f2 c==> cFAN c, f1 c, f3 f0 c? / c/\ c? / c/\ * f0 b1 cIN b0 * * part caff_ge * * part cINSERT f1 part cEMPTY b1 c~ cIN f1 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f2 part cEMPTY
- |- ((?x'. (P /\ (Q x'))) = (P /\ (?x'. (Q x'))))
T c= c? / c/\ f0 * f1 b0 c/\ f0 c? / * f1 b0
- |- ((((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F)) ==> (((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F)))
T c==> c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF
- (!x. ((y x) = ((x = v) \/ (x = w)))) |- (((y _3016892) \/ (~ (_3016892 = v))) /\ ((y _3016892) \/ (~ (_3016892 = w))))
T c==> ! c= * f0 b0 c\/ c= b0 f1 c= b0 f2 c/\ c\/ * f0 f3 c~ c= f3 f1 c\/ * f0 f3 c~ c= f3 f2
- |- ((!z. (!w. (!x. (!v. (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z))))))))))) = (!z. (!w. (!x. (!v. ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F))))))
T c= ! ! ! ! c==> c/\ c~ c= b2 b0 c/\ c~ c= b2 b3 c~ c= b2 b1 c/\ ! c~ c/\ c= b4 b2 c\/ c= b4 b3 c= b4 b0 ! c~ c/\ c= b4 b2 c\/ c= b4 b1 c= b4 b0 ! ! ! ! c==> c~ c==> c/\ c~ c= b2 b0 c/\ c~ c= b2 b3 c~ c= b2 b1 c/\ ! c~ c/\ c= b4 b2 c\/ c= b4 b3 c= b4 b0 ! c~ c/\ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF
- (E (v INSERT (w INSERT EMPTY))) |- ((~ ((I E) (v INSERT (w INSERT EMPTY)))) ==> ((I E) (v INSERT (w INSERT EMPTY))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cI f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cI f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (_3016968 = _3016969) |- ((((FINITE _3016968) = (FINITE _3016969)) ==> ((FINITE _3016969) \/ (~ (FINITE _3016968)))) = ((FINITE _3016969) \/ (~ (FINITE _3016968))))
T c==> c= f0 f1 c= c==> c= cFINITE f0 cFINITE f1 c\/ cFINITE f1 c~ cFINITE f0 c\/ cFINITE f1 c~ cFINITE f0
- |- ((\z. (!w. (!x. (!v. ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F))))) z)
T * / ! ! ! c==> c~ c==> c/\ c~ c= b2 b0 c/\ c~ c= b2 b3 c~ c= b2 b1 c/\ ! c~ c/\ c= b4 b2 c\/ c= b4 b3 c= b4 b0 ! c~ c/\ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0
- (~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) |- F
T c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
- (_3016944 = _3016945) |- ((((y _3016944) = (y _3016945)) ==> ((y _3016945) \/ (~ (y _3016944)))) = ((y _3016945) \/ (~ (y _3016944))))
T c==> c= f0 f1 c= c==> c= * f2 f0 * f2 f1 c\/ * f2 f1 c~ * f2 f0 c\/ * f2 f1 c~ * f2 f0
- |- (T = (((~ (((hull convex) (v INSERT (z INSERT EMPTY))) _3016769)) \/ (((hull affine) (v INSERT (z INSERT EMPTY))) _3016769)) = ((((hull affine) (v INSERT (z INSERT EMPTY))) _3016769) \/ (~ (((hull convex) (v INSERT (z INSERT EMPTY))) _3016769)))))
T c= cT c= c\/ c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c\/ chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
- (~ F), (x' = z), ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), ((x' = x) /\ ((x' = v) \/ (x' = z))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c~ c= f2 f1 c/\ c~ c= f2 f3 c~ c= f2 f4 c==> c/\ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ cF cF
- (~ (x = x)) |- ((~ (x = x)) /\ (x = x))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- (~ (x = v)), (~ (x = w)), (~ (x = z)), (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (x IN ((hull affine) (v INSERT (z INSERT EMPTY)))), (x IN ((hull convex) (w INSERT (z INSERT EMPTY)))) |- (~ (((hull convex) (w INSERT (z INSERT EMPTY))) SUBSET ((hull affine) (w INSERT (z INSERT EMPTY)))))
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part chull part cconvex * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cSUBSET * * part chull part cconvex * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (~ F), ((A y) /\ (!y. (~ (A y)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ * f0 f1 ! c~ * f0 b0 c/\ c~ cF cF
- |- ((~ (_3016944 = _3016945)) \/ ((y _3016945) \/ (~ (y _3016944))))
T c\/ c~ c= f0 f1 c\/ * f2 f1 c~ * f2 f0
- |- (((~ (!x. (~ (A x)))) = (?y. (A y))) = T)
T c= c= c~ ! c~ * f0 b0 c? / * f0 b0 cT
- |- ((\v. (!E. (!x. (!z. (!V. (!y. ((~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) ==> F))))))) v)
T * / ! ! ! ! ! c==> c~ c==> cFAN c, b2 c, b4 b1 c==> c~ c= b2 b3 c==> ! c= * b5 b6 c\/ c= b6 b0 c= b6 f0 c==> * b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> cFINITE * * * part cset_of_edge b0 b4 b1 c==> cset_of_edge b0 b4 b1 f0 c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c~ c= b2 b0 c==> c~ c= b2 f0 c==> c~ c= b0 f0 c==> ! c~ c/\ c\/ c= b6 b2 c= b6 b0 c= b6 f0 c==> ! c~ c/\ c\/ c= b6 b2 c= b6 f0 c= b6 b0 c==> ! c~ c/\ c= b6 b2 c\/ c= b6 b0 c= b6 f0 c==> c~ caff * * part cINSERT b2 * * part cINSERT b0 part cEMPTY f0 c==> * b4 b0 c==> c= c~ ccollinear * * part cINSERT b2 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c~ caff * * part cINSERT b2 * * part cINSERT b0 part cEMPTY f0 c==> caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 c==> caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b0 c==> caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f0 c==> chull part cconvex * * part cINSERT b0 * * part cINSERT b3 part cEMPTY b2 * b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cF f1
- (_3016952 = _3016955), (_3016954 = _3016957) |- ((_3016953 = _3016956) ==> ((((aff_ge _3016955) _3016956) _3016957) \/ (~ (((aff_ge _3016952) _3016953) _3016954))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ caff_ge f1 f5 f3 c~ caff_ge f0 f4 f2
- (_3016962 = _3016963) |- ((_3016962 = _3016963) /\ ((collinear _3016963) \/ (~ (collinear _3016962))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
- (_3016948 = _3016951) |- ((_3016948 = _3016951) /\ ((~ (_3016947 = _3016950)) \/ ((~ (_3016946 = _3016949)) \/ ((((hull _3016949) _3016950) _3016951) \/ (~ (((hull _3016946) _3016947) _3016948))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ chull f5 f3 f1 c~ chull f4 f2 f0
- (_3016977 = _3016980), (_3016976 = _3016979) |- ((_3016977 = _3016980) /\ ((~ (_3016978 = _3016981)) \/ ((((set_of_edge _3016976) _3016977) _3016978) = (((set_of_edge _3016979) _3016980) _3016981))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ c~ c= f4 f5 c= * * * part cset_of_edge f2 f0 f4 * * * part cset_of_edge f3 f1 f5
- (_3016946 = _3016949), (_3016947 = _3016950), (_3016948 = _3016951) |- ((_3016946 = _3016949) /\ ((((hull _3016949) _3016950) _3016951) \/ (~ (((hull _3016946) _3016947) _3016948))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f0 f1 c\/ chull f1 f3 f5 c~ chull f0 f2 f4
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F) |- ((((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F) ==> ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F)) ==> ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F))
T c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF
- (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (((hull affine) (x INSERT (v INSERT EMPTY))) = ((hull affine) (x INSERT (w INSERT EMPTY)))), (w IN (aff (x INSERT (w INSERT EMPTY)))) |- ((w IN (aff (x INSERT (w INSERT EMPTY)))) /\ F)
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c/\ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cF
- |- ((\E. (!x. (!z. (!V. (!y. ((~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) ==> F)))))) E)
T * / ! ! ! ! c==> c~ c==> cFAN c, b1 c, b3 b0 c==> c~ c= b1 b2 c==> ! c= * b4 b5 c\/ c= b5 f0 c= b5 f1 c==> * b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f0 b3 b0 c==> cset_of_edge f0 b3 b0 f1 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ c= b1 f0 c==> c~ c= b1 f1 c==> c~ c= f0 f1 c==> ! c~ c/\ c\/ c= b5 b1 c= b5 f0 c= b5 f1 c==> ! c~ c/\ c\/ c= b5 b1 c= b5 f1 c= b5 f0 c==> ! c~ c/\ c= b5 b1 c\/ c= b5 f0 c= b5 f1 c==> c~ caff * * part cINSERT b1 * * part cINSERT f0 part cEMPTY f1 c==> * b3 f0 c==> c= c~ ccollinear * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ caff * * part cINSERT b1 * * part cINSERT f0 part cEMPTY f1 c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f1 c==> chull part cconvex * * part cINSERT f0 * * part cINSERT b2 part cEMPTY b1 * b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cF f2
- (!x. ((y x) = ((x = v) \/ (x = w)))) |- ((!x. ((y x) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. ((~ (y x)) \/ ((x = v) \/ (x = w)))))
T c==> ! c= * f0 b0 c\/ c= b0 f1 c= b0 f2 c/\ ! c\/ * f0 b0 c/\ c~ c= b0 f1 c~ c= b0 f2 ! c\/ c~ * f0 b0 c\/ c= b0 f1 c= b0 f2
- |- (((~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) ==> F) ==> ((~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) ==> F))
T c==> c==> c~ c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= * f4 b0 c\/ c= b0 f5 c= b0 f6 c==> * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cset_of_edge f5 f1 f2 f6 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f5 c= b0 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f6 c= b0 f5 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f5 c= b0 f6 c==> c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> * f1 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f5 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f6 c==> chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f0 * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cF c==> c~ c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= * f4 b0 c\/ c= b0 f5 c= b0 f6 c==> * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cFINITE * * * part cset_of_edge f5 f1 f2 c==> cset_of_edge f5 f1 f2 f6 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f0 f6 c==> c~ c= f5 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f5 c= b0 f6 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f6 c= b0 f5 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f5 c= b0 f6 c==> c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> * f1 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f6 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f5 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f6 c==> chull part cconvex * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f0 * f2 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cF
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- ((\z. (!V. (!y. ((~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) ==> F)))) z)
T * / ! ! c==> c~ c==> cFAN c, f0 c, b1 f1 c==> c~ c= f0 b0 c==> ! c= * b2 b3 c\/ c= b3 f2 c= b3 f3 c==> * f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFINITE * * * part cset_of_edge f2 b1 f1 c==> cset_of_edge f2 b1 f1 f3 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ c= f2 f3 c==> ! c~ c/\ c\/ c= b3 f0 c= b3 f2 c= b3 f3 c==> ! c~ c/\ c\/ c= b3 f0 c= b3 f3 c= b3 f2 c==> ! c~ c/\ c= b3 f0 c\/ c= b3 f2 c= b3 f3 c==> c~ caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f3 c==> * b1 f2 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 c==> chull part cconvex * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f0 * f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF f4
- (_3016959 = _3016961) |- ((_3016958 = _3016960) ==> (((aff _3016960) _3016961) \/ (~ ((aff _3016958) _3016959))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ caff f3 f1 c~ caff f2 f0
- (_3016990 = _3016992) |- ((_3016991 = _3016993) ==> ((_3016990 , _3016991) = (_3016992 , _3016993)))
T c==> c= f0 f1 c==> c= f2 f3 c= c, f0 f2 c, f1 f3
- (!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) |- (((!x'. (((~ (x' = x)) \/ (~ (x' = v))) /\ ((~ (x' = x)) \/ (~ (x' = w))))) ==> ((\x'. (((~ (x' = x)) \/ (~ (x' = v))) /\ ((~ (x' = x)) \/ (~ (x' = w))))) _3016891)) = ((\x'. (((~ (x' = x)) \/ (~ (x' = v))) /\ ((~ (x' = x)) \/ (~ (x' = w))))) _3016891))
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c= c==> ! c/\ c\/ c~ c= b0 f0 c~ c= b0 f1 c\/ c~ c= b0 f0 c~ c= b0 f2 * / c/\ c\/ c~ c= b0 f0 c~ c= b0 f1 c\/ c~ c= b0 f0 c~ c= b0 f2 f3 * / c/\ c\/ c~ c= b0 f0 c~ c= b0 f1 c\/ c~ c= b0 f0 c~ c= b0 f2 f3
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- (~ (w IN (aff (x INSERT (v INSERT EMPTY))))), (((hull affine) (x INSERT (v INSERT EMPTY))) = ((hull affine) (x INSERT (w INSERT EMPTY)))) |- (~ (w IN (aff (x INSERT (w INSERT EMPTY)))))
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
- ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F), (((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F)) |- (((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F) /\ ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F))
T c==> c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c==> c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c/\ c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
- |- ((((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F)) = ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F))
T c= c==> c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
- (?w. (y = (v INSERT (w INSERT EMPTY)))), (~ (x = z)), (FAN (x , (V , E))), (y IN E) |- (?v. ((?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e)))) /\ (~ (x IN ((hull convex) (v INSERT (z INSERT EMPTY)))))))
T c==> c? / c= f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c==> c~ c= f2 f3 c==> cFAN c, f2 c, f4 f5 c==> cIN f0 f5 c? / c/\ c? / c/\ * f5 b1 cIN b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 c~ cIN f2 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f3 part cEMPTY
- |- ((!y. ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) = T)
T c= ! c==> cFAN c, f0 c, f1 f2 c==> c~ c= f0 f3 c==> ! c= * b0 b1 c\/ c= b1 f4 c= b1 f5 c==> * f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cFINITE * * * part cset_of_edge f4 f1 f2 c==> cset_of_edge f4 f1 f2 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c~ c= f0 f4 c==> c~ c= f0 f5 c==> c~ c= f4 f5 c==> ! c~ c/\ c\/ c= b1 f0 c= b1 f4 c= b1 f5 c==> ! c~ c/\ c\/ c= b1 f0 c= b1 f5 c= b1 f4 c==> ! c~ c/\ c= b1 f0 c\/ c= b1 f4 c= b1 f5 c==> c~ caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY f5 c==> * f1 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY f5 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f4 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f5 c==> chull part cconvex * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f0 * f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cT
- (FINITE (((set_of_edge v) V) E)) |- ((FINITE (((set_of_edge v) V) E)) = T)
T c==> cFINITE * * * part cset_of_edge f0 f1 f2 c= cFINITE * * * part cset_of_edge f0 f1 f2 cT
- (x' = z), ((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))), ((x' = x) /\ ((x' = v) \/ (x' = z))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c~ c= f2 f1 c/\ c~ c= f2 f3 c~ c= f2 f4 c==> c/\ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c==> c~ cF cF
- (_3016947 = _3016950), (_3016948 = _3016951) |- ((~ (_3016946 = _3016949)) \/ ((((hull _3016949) _3016950) _3016951) \/ (~ (((hull _3016946) _3016947) _3016948))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ chull f5 f1 f3 c~ chull f4 f0 f2
- (~ ((I E) (v INSERT (w INSERT EMPTY)))), (E (v INSERT (w INSERT EMPTY))) |- ((~ ((I E) (v INSERT (w INSERT EMPTY)))) /\ ((I E) (v INSERT (w INSERT EMPTY))))
T c==> c~ cI f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cI f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cI f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- ((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) |- ((~ (((hull convex) (v INSERT (z INSERT EMPTY))) x)) ==> (((hull convex) (v INSERT (z INSERT EMPTY))) x))
T c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c==> c~ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
- |- ((\x. (!z. (!V. (!y. ((~ ((FAN (x , (V , E))) ==> ((~ (x = z)) ==> ((!x. ((y x) = ((x = v) \/ (x = w)))) ==> ((E (v INSERT (w INSERT EMPTY))) ==> ((FINITE (((set_of_edge v) V) E)) ==> (((((set_of_edge v) V) E) w) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) ==> ((~ (x = w)) ==> ((~ (v = w)) ==> ((!x'. (~ (((x' = x) \/ (x' = v)) /\ (x' = w)))) ==> ((!x'. (~ (((x' = x) \/ (x' = w)) /\ (x' = v)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = w))))) ==> ((~ ((aff (x INSERT (v INSERT EMPTY))) w)) ==> ((V v) ==> (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ ((aff (x INSERT (v INSERT EMPTY))) w))) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) v) ==> ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) w) ==> ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (E (v INSERT (w INSERT EMPTY)))))))))))))))))))))))) ==> F))))) x)
T * / ! ! ! c==> c~ c==> cFAN c, b0 c, b2 f0 c==> c~ c= b0 b1 c==> ! c= * b3 b4 c\/ c= b4 f1 c= b4 f2 c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 b2 f0 c==> cset_of_edge f1 b2 f0 f2 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= b0 f1 c==> c~ c= b0 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b4 b0 c= b4 f1 c= b4 f2 c==> ! c~ c/\ c\/ c= b4 b0 c= b4 f2 c= b4 f1 c==> ! c~ c/\ c= b4 b0 c\/ c= b4 f1 c= b4 f2 c==> c~ caff * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f2 c==> * b2 f1 c==> c= c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> chull part cconvex * * part cINSERT f1 * * part cINSERT b1 part cEMPTY b0 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF f3
- |- ((?x'. ((P x') /\ Q)) = ((?x'. (P x')) /\ Q))
T c= c? / c/\ * f0 b0 f1 c/\ c? / * f0 b0 f1
- ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F) |- ((((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F)) ==> ((~ ((~ (!x. (~ (A x)))) = (?y. (A y)))) ==> F))
T c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((~ (((hull convex) (w INSERT (z INSERT EMPTY))) SUBSET ((hull affine) (w INSERT (z INSERT EMPTY))))) = ((((hull convex) (w INSERT (z INSERT EMPTY))) SUBSET ((hull affine) (w INSERT (z INSERT EMPTY)))) ==> F))
T c= c~ cSUBSET * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cSUBSET * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cF
- |- (((!z. (!w. (!x. (!v. ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F))))) ==> ((\z. (!w. (!x. (!v. ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F))))) z)) = ((\z. (!w. (!x. (!v. ((~ (((~ (x = z)) /\ ((~ (x = v)) /\ (~ (x = w)))) ==> ((!x'. (~ ((x' = x) /\ ((x' = v) \/ (x' = z))))) /\ (!x'. (~ ((x' = x) /\ ((x' = w) \/ (x' = z)))))))) ==> F))))) z))
T c= c==> ! ! ! ! c==> c~ c==> c/\ c~ c= b2 b0 c/\ c~ c= b2 b3 c~ c= b2 b1 c/\ ! c~ c/\ c= b4 b2 c\/ c= b4 b3 c= b4 b0 ! c~ c/\ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF * / ! ! ! c==> c~ c==> c/\ c~ c= b2 b0 c/\ c~ c= b2 b3 c~ c= b2 b1 c/\ ! c~ c/\ c= b4 b2 c\/ c= b4 b3 c= b4 b0 ! c~ c/\ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0 * / ! ! ! c==> c~ c==> c/\ c~ c= b2 b0 c/\ c~ c= b2 b3 c~ c= b2 b1 c/\ ! c~ c/\ c= b4 b2 c\/ c= b4 b3 c= b4 b0 ! c~ c/\ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0
- |- (((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F) = (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))
T c= c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- |- (((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F) ==> ((~ (((((hull convex) (v INSERT (z INSERT EMPTY))) x) /\ (!x. ((((hull convex) (v INSERT (z INSERT EMPTY))) x) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x)))) ==> (((hull affine) (v INSERT (z INSERT EMPTY))) x))) ==> F))
T c==> c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c~ c==> c/\ chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
- (!x. ((y x) = ((x = v) \/ (x = w)))) |- ((y _3016892) \/ (~ (_3016892 = v)))
T c==> ! c= * f0 b0 c\/ c= b0 f1 c= b0 f2 c\/ * f0 f3 c~ c= f3 f1
- (~ F), (~ (E (v INSERT (w INSERT EMPTY)))), (E (v INSERT (w INSERT EMPTY))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cF cF
