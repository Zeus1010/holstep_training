N Rogers.XYOFCGX
C |- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ ((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))))))
T c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= f2 ccircumcenter f1 creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 f2 cdistance c, b0 f2
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D ADD_CLAUSES
A |- ((!n. (((NUMERAL _0) + n) = n)) /\ ((!m. ((m + (NUMERAL _0)) = m)) /\ ((!m. (!n. (((SUC m) + n) = (SUC (m + n))))) /\ (!m. (!n. ((m + (SUC n)) = (SUC (m + n))))))))
T c/\ ! c= c+ cNUMERAL c_0 b0 b0 c/\ ! c= c+ b0 cNUMERAL c_0 b0 c/\ ! ! c= c+ cSUC b0 b1 cSUC c+ b0 b1 ! ! c= c+ b0 cSUC b1 cSUC c+ b0 b1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LT
A |- ((!m. ((m < (NUMERAL _0)) = F)) /\ (!m. (!n. ((m < (SUC n)) = ((m = n) \/ (m < n))))))
T c/\ ! c= c< b0 cNUMERAL c_0 cF ! ! c= c< b0 cSUC b1 c\/ c= b0 b1 c< b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LE_REFL
A |- (!n. (n <= n))
T c<= f0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_NEG_MINUS1
A |- (!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)))
T c= creal_neg f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_LE
A |- (!x. (!y. ((~ ((int_le x) y)) = ((int_lt y) x))))
T c= c~ cint_le f0 f1 cint_lt f1 f0
D INT_NOT_LT
A |- (!x. (!y. ((~ ((int_lt x) y)) = ((int_le y) x))))
T c= c~ cint_lt f0 f1 cint_le f1 f0
D INT_OF_NUM_LE
A |- (!m. (!n. (((int_le (int_of_num m)) (int_of_num n)) = (m <= n))))
T c= cint_le cint_of_num f0 cint_of_num f1 c<= f0 f1
D INT_OF_NUM_LT
A |- (!m. (!n. (((int_lt (int_of_num m)) (int_of_num n)) = (m < n))))
T c= cint_lt cint_of_num f0 cint_of_num f1 c< f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D IMAGE
A |- (!s. (!f. (((IMAGE f) s) = (GSPEC (\GEN%PVAR%7. (?y. (((SETSPEC GEN%PVAR%7) (?x. ((x IN s) /\ (y = (f x))))) y)))))))
T c= * * part cIMAGE f0 f1 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ cIN b2 f1 c= b1 * f0 b2 b1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_DIFF
A |- (!s. (!t. (!x. ((x IN (s DIFF t)) = ((x IN s) /\ (~ (x IN t)))))))
T c= cIN f0 * * part cDIFF f1 f2 c/\ cIN f0 f1 c~ cIN f0 f2
D IN_IMAGE
A |- (!y. (!s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s)))))))
T c= cIN f0 * * part cIMAGE f1 f2 c? / c/\ c= f0 * f1 b0 cIN b0 f2
D IMAGE_SUBSET
A |- (!f. (!s. (!t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t))))))
T c==> cSUBSET f0 f1 cSUBSET * * part cIMAGE f2 f0 * * part cIMAGE f2 f1
D CARD_EQ_0
A |- (!s. ((FINITE s) ==> (((CARD s) = (NUMERAL _0)) = (s = EMPTY))))
T c==> cFINITE f0 c= c= cCARD f0 cNUMERAL c_0 c= f0 part cEMPTY
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D DIMINDEX_3
A |- ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0))))
T c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0
D vector_add
A |- (!x. (!y. (((vector_add x) y) = (lambdai. ((real_add (x $ i)) (y $ i))))))
T c= cvector_add f0 f1 clambda / creal_add c$ f0 b0 c$ f1 b0
D vector_sub
A |- (!x. (!y. (((vector_sub x) y) = (lambdai. ((real_sub (x $ i)) (y $ i))))))
T c= cvector_sub f0 f1 clambda / creal_sub c$ f0 b0 c$ f1 b0
D vector_neg
A |- (!x. ((vector_neg x) = (lambdai. (real_neg (x $ i)))))
T c= cvector_neg f0 clambda / creal_neg c$ f0 b0
D vec
A |- (!n. ((vec n) = (lambdai. (real_of_num n))))
T c= cvec f0 clambda / creal_of_num f0
D VECTOR_SUB_RZERO
A |- (((vector_sub x) (vec (NUMERAL _0))) = x)
T c= cvector_sub f0 cvec cNUMERAL c_0 f0
D dist
A |- (!x. (!y. ((distance (x , y)) = (vector_norm ((vector_sub x) y)))))
T c= cdistance c, f0 f1 cvector_norm cvector_sub f0 f1
D AFFINE_DEPENDENT_TRANSLATION_EQ
A |- (!a. (!s. ((affine_dependent ((IMAGE (\x. ((vector_add a) x))) s)) = (affine_dependent s))))
T c= caffine_dependent * * part cIMAGE / cvector_add f0 b0 f1 caffine_dependent f1
D AFFINE_INDEPENDENT_IMP_FINITE
A |- (!s. ((~ (affine_dependent s)) ==> (FINITE s)))
T c==> c~ caffine_dependent f0 cFINITE f0
D AFFINE_INDEPENDENT_CARD_LE
A |- (!s. ((~ (affine_dependent s)) ==> ((CARD s) <= ((dimindex UNIV) + (NUMERAL (BIT1 _0))))))
T c==> c~ caffine_dependent f0 c<= cCARD f0 c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0
D Sphere.packing
A |- (!S. ((packing S) = (!u. (!v. (((S u) /\ ((S v) /\ (~ (u = v)))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v))))))))
T c= cpacking f0 ! ! c==> c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1
D Rogers.CIRCUMCENTER_TRANSLATION
A |- (!s. (!a. (((~ (s = EMPTY)) /\ (~ (affine_dependent s))) ==> ((circumcenter ((IMAGE (\x. ((vector_add a) x))) s)) = ((vector_add a) (circumcenter s))))))
T c==> c/\ c~ c= f0 part cEMPTY c~ caffine_dependent f0 c= ccircumcenter * * part cIMAGE / cvector_add f1 b0 f0 cvector_add f1 ccircumcenter f0
D Rogers.RADV_TRANSLATION
A |- (!s. (!a. ((~ (affine_dependent s)) ==> ((radV ((IMAGE (\x. ((vector_add a) x))) s)) = (radV s)))))
T c==> c~ caffine_dependent f0 c= cradV * * part cIMAGE / cvector_add f1 b0 f0 cradV f0
D Rogers.XYOFCGX_1
A |- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))))))
T c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= f2 ccircumcenter f1 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD f1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 f2 cdistance c, b0 f2
D Rogers.XYOFCGX_2
A |- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))))))
T c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= f2 ccircumcenter f1 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 f2 cdistance c, b0 f2
D Rogers.XYOFCGX_3_0
A |- (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))))
T c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= ccircumcenter f1 cvec cNUMERAL c_0 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
D Rogers.XYOFCGX_4_0
A |- (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))))
T c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= ccircumcenter f1 cvec cNUMERAL c_0 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
+ (~ (affine_dependent K)), (packing W), ((circumcenter K) = (vec (NUMERAL _0))), ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (K SUBSET W) |- ((((CARD K) = (NUMERAL (BIT1 (BIT1 _0)))) \/ ((CARD K) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))
T c==> c~ caffine_dependent f0 c==> cpacking f1 c==> c= ccircumcenter f0 cvec cNUMERAL c_0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 c==> c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
+ |- ((\q'. ((((u IN K) /\ (v IN (W DIFF K))) = p') ==> ((p' ==> (((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))) = q')) ==> ((((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cIN f0 f1 cIN f2 * * part cDIFF f3 f1 f4 c==> c==> f4 c= creal_gt cdistance c, f2 cvec cNUMERAL c_0 cdistance c, f0 cvec cNUMERAL c_0 b0 c= c==> c/\ cIN f0 f1 cIN f2 * * part cDIFF f3 f1 creal_gt cdistance c, f2 cvec cNUMERAL c_0 cdistance c, f0 cvec cNUMERAL c_0 c==> f4 b0 f5
+ (~ (affine_dependent S)), (~ (S = EMPTY)), (((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) = K), (p = (circumcenter S)) |- (T = ((((~ (S = EMPTY)) /\ (~ (affine_dependent S))) ==> ((circumcenter ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = ((vector_add (vector_neg p)) (circumcenter S)))) ==> ((circumcenter ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (vec (NUMERAL _0)))))
T c==> c~ caffine_dependent f0 c==> c~ c= f0 part cEMPTY c==> c= * * part cIMAGE / cvector_add cvector_neg f1 b0 f0 f2 c==> c= f1 ccircumcenter f0 c= cT c==> c==> c/\ c~ c= f0 part cEMPTY c~ caffine_dependent f0 c= ccircumcenter * * part cIMAGE / cvector_add cvector_neg f1 b0 f0 cvector_add cvector_neg f1 ccircumcenter f0 c= ccircumcenter * * part cIMAGE / cvector_add cvector_neg f1 b0 f0 cvec cNUMERAL c_0
+ |- (((!p'. (!q'. ((((~ (affine_dependent S)) ==> ((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S))) = p') ==> ((p' ==> (((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((~ (affine_dependent S)) ==> ((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S))) ==> ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((~ (affine_dependent S)) ==> ((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S))) = p') ==> ((p' ==> (((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((~ (affine_dependent S)) ==> ((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S))) ==> ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((~ (affine_dependent S)) ==> ((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S))) = p') ==> ((p' ==> (((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((~ (affine_dependent S)) ==> ((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S))) ==> ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c==> c~ caffine_dependent f0 c= cradV * * part cIMAGE / cvector_add cvector_neg f1 b2 f0 cradV f0 b0 c==> c==> b0 c= creal_lt cradV f2 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c==> c~ caffine_dependent f0 c= cradV * * part cIMAGE / cvector_add cvector_neg f1 b2 f0 cradV f0 creal_lt cradV f2 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 * / ! c==> c= c==> c~ caffine_dependent f0 c= cradV * * part cIMAGE / cvector_add cvector_neg f1 b2 f0 cradV f0 b0 c==> c==> b0 c= creal_lt cradV f2 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c==> c~ caffine_dependent f0 c= cradV * * part cIMAGE / cvector_add cvector_neg f1 b2 f0 cradV f0 creal_lt cradV f2 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f3 * / ! c==> c= c==> c~ caffine_dependent f0 c= cradV * * part cIMAGE / cvector_add cvector_neg f1 b2 f0 cradV f0 b0 c==> c==> b0 c= creal_lt cradV f2 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c==> c~ caffine_dependent f0 c= cradV * * part cIMAGE / cvector_add cvector_neg f1 b2 f0 cradV f0 creal_lt cradV f2 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f3
- (~ (((real_add (real_neg (p $ i))) (p $ i)) = (real_of_num (NUMERAL _0)))) |- ((~ (((real_add (real_neg (p $ i))) (p $ i)) = (real_of_num (NUMERAL _0)))) /\ F)
T c==> c~ c= creal_add creal_neg c$ f0 f1 c$ f0 f1 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_add creal_neg c$ f0 f1 c$ f0 f1 creal_of_num cNUMERAL c_0 cF
+ |- ((!i. ((P i) ==> (Q i))) ==> ((!i. (P i)) ==> (!i. (Q i))))
T c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0
+ |- ((\p'. (!q'. ((((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) = p') ==> ((p' ==> (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x')))) = q')) ==> ((((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x'))))) = (p' ==> q')))))) p')
T * / ! c==> c= c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0 c==> c==> b0 c= creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f2 f0 cvector_add cvector_neg ccircumcenter f2 f1 b1 c= c==> c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f2 f0 cvector_add cvector_neg ccircumcenter f2 f1 c==> b0 b1 f3
+ (~ (affine_dependent K)), (packing W), ((circumcenter K) = (vec (NUMERAL _0))), (((CARD K) = (NUMERAL (BIT1 _0))) \/ (((CARD K) = (NUMERAL (BIT0 (BIT1 _0)))) \/ (((CARD K) = (NUMERAL (BIT1 (BIT1 _0)))) \/ ((CARD K) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))), ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (K SUBSET W) |- ((((CARD K) = (NUMERAL (BIT1 _0))) \/ (((CARD K) = (NUMERAL (BIT0 (BIT1 _0)))) \/ (((CARD K) = (NUMERAL (BIT1 (BIT1 _0)))) \/ ((CARD K) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) /\ (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))
T c==> c~ caffine_dependent f0 c==> cpacking f1 c==> c= ccircumcenter f0 cvec cNUMERAL c_0 c==> c\/ c= cCARD f0 cNUMERAL cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 c/\ c\/ c= cCARD f0 cNUMERAL cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
+ |- ((((k = (SUC (SUC (SUC (SUC (NUMERAL _0)))))) \/ ((k = (SUC (SUC (SUC (NUMERAL _0))))) \/ ((k = (SUC (SUC (NUMERAL _0)))) \/ ((k = (SUC (NUMERAL _0))) \/ (k = (NUMERAL _0)))))) = ((k = (NUMERAL _0)) \/ ((k = (NUMERAL (BIT1 _0))) \/ ((k = (NUMERAL (BIT0 (BIT1 _0)))) \/ ((k = (NUMERAL (BIT1 (BIT1 _0)))) \/ (k = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) = ((k < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((k = (NUMERAL _0)) \/ ((k = (NUMERAL (BIT1 _0))) \/ ((k = (NUMERAL (BIT0 (BIT1 _0)))) \/ ((k = (NUMERAL (BIT1 (BIT1 _0)))) \/ (k = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))
T c= c= c\/ c= f0 cSUC cSUC cSUC cSUC cNUMERAL c_0 c\/ c= f0 cSUC cSUC cSUC cNUMERAL c_0 c\/ c= f0 cSUC cSUC cNUMERAL c_0 c\/ c= f0 cSUC cNUMERAL c_0 c= f0 cNUMERAL c_0 c\/ c= f0 cNUMERAL c_0 c\/ c= f0 cNUMERAL cBIT1 c_0 c\/ c= f0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c= f0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c< f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c\/ c= f0 cNUMERAL c_0 c\/ c= f0 cNUMERAL cBIT1 c_0 c\/ c= f0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c= f0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add (vector_neg a)) b) $ i) = (((vector_sub b) a) $ i))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvector_neg f1 f2 f0 c$ cvector_sub f2 f1 f0 cT
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub v) p) $ i) = (((vector_sub x) p) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (v $ i))))) = ((((vector_sub v) p) = ((vector_sub x) p)) ==> (x = v)))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub f0 f1 b0 c$ cvector_sub f2 f1 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f2 b0 c$ f0 b0 c==> c= cvector_sub f0 f1 cvector_sub f2 f1 c= f2 f0
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((x $ i) = (v $ i)) ==> ((((vector_sub v) p) $ i) = (((vector_sub x) p) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ f1 f0 c$ f2 f0 c= c$ cvector_sub f2 f3 f0 c$ cvector_sub f1 f3 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ ((((lambdai. ((real_sub (v $ i)) (p $ i))) $ i) = ((lambdai. ((real_sub (x $ i)) (p $ i))) $ i)) ==> ((x $ i) = (v $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ clambda / creal_sub c$ f1 b0 c$ f2 b0 f0 c$ clambda / creal_sub c$ f3 b0 c$ f2 b0 f0 c= c$ f3 f0 c$ f1 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((x $ i) = (x' $ i)) ==> (((real_add (real_neg (p $ i))) (x $ i)) = ((real_add (real_neg (p $ i))) (x' $ i)))) = (((x $ i) = (x' $ i)) ==> (((lambdai. ((real_add ((lambdai. (real_neg (p $ i))) $ i)) (x $ i))) $ i) = ((lambdai. ((real_add ((lambdai. (real_neg (p $ i))) $ i)) (x' $ i))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c==> c= c$ f1 f0 c$ f2 f0 c= creal_add creal_neg c$ f3 f0 c$ f1 f0 creal_add creal_neg c$ f3 f0 c$ f2 f0 c==> c= c$ f1 f0 c$ f2 f0 c= c$ clambda / creal_add c$ clambda / creal_neg c$ f3 b1 b0 c$ f1 b0 f0 c$ clambda / creal_add c$ clambda / creal_neg c$ f3 b1 b0 c$ f2 b0 f0
+ |- ((\s. (!f. (((IMAGE f) s) = (GSPEC (\GEN%PVAR%7. (?y. (((SETSPEC GEN%PVAR%7) (?x. ((x IN s) /\ (y = (f x))))) y))))))) s)
T * / ! c= * * part cIMAGE b1 b0 * part cGSPEC / c? / cSETSPEC b2 c? / c/\ cIN b4 b0 c= b3 * b1 b4 b3 f0
+ |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))
T c= c+ cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W), (S SUBSET V) |- (((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) SUBSET W)
T c==> c= * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 f2 c==> cSUBSET f3 f1 cSUBSET * * part cIMAGE / cvector_add cvector_neg f0 b0 f3 f2
+ ((v IN V) /\ (~ (v IN S))) |- (?x. ((((vector_sub v) p) = ((vector_sub x) p)) /\ (x IN V)))
T c==> c/\ cIN f0 f1 c~ cIN f0 f2 c? / c/\ c= cvector_sub f0 f3 cvector_sub b0 f3 cIN b0 f1
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ (!u. (!v. (((u IN ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) /\ (v IN (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) DIFF ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) |- ((((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))) = T)
T c==> ! ! c==> c/\ cIN b0 * * part cIMAGE / cvector_add cvector_neg f0 b2 f1 cIN b1 * * part cDIFF * * part cIMAGE / cvector_add cvector_neg f0 b2 f2 * * part cIMAGE / cvector_add cvector_neg f0 b2 f1 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 c= c==> c/\ cIN f3 f1 cIN f4 * * part cDIFF f2 f1 creal_gt cdistance c, f4 f0 cdistance c, f3 f0 cT
+ |- ((((~ (((real_add (real_neg (a $ i))) (b $ i)) = ((real_sub (b $ i)) (a $ i)))) ==> F) ==> (((real_add (real_neg (a $ i))) (b $ i)) = ((real_sub (b $ i)) (a $ i)))) = (((real_add (real_neg (a $ i))) (b $ i)) = ((real_sub (b $ i)) (a $ i))))
T c= c==> c==> c~ c= creal_add creal_neg c$ f0 f1 c$ f2 f1 creal_sub c$ f2 f1 c$ f0 f1 cF c= creal_add creal_neg c$ f0 f1 c$ f2 f1 creal_sub c$ f2 f1 c$ f0 f1 c= creal_add creal_neg c$ f0 f1 c$ f2 f1 creal_sub c$ f2 f1 c$ f0 f1
+ |- (((!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub v) p) $ i) = (((vector_sub x) p) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (v $ i))))) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub v) p) $ i) = (((vector_sub x) p) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (v $ i)))))) = ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub v) p) $ i) = (((vector_sub x) p) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (v $ i))))))
T c= c==> ! c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub f0 f1 b0 c$ cvector_sub f2 f1 b0 c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f2 b0 c$ f0 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub f0 f1 b0 c$ cvector_sub f2 f1 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f2 b0 c$ f0 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub f0 f1 b0 c$ cvector_sub f2 f1 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f2 b0 c$ f0 b0
+ (!u. (!v. (((u IN ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) /\ (v IN (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) DIFF ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) |- ((!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))) = T)
T c==> ! ! c==> c/\ cIN b0 * * part cIMAGE / cvector_add cvector_neg f0 b2 f1 cIN b1 * * part cDIFF * * part cIMAGE / cvector_add cvector_neg f0 b2 f2 * * part cIMAGE / cvector_add cvector_neg f0 b2 f1 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 c= ! c==> c/\ cIN f3 f1 cIN b0 * * part cDIFF f2 f1 creal_gt cdistance c, b0 f0 cdistance c, f3 f0 cT
+ (~ (affine_dependent S)), (((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) = K) |- ((((circumcenter K) = (vec (NUMERAL _0))) /\ ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((~ (affine_dependent K)) /\ (((circumcenter K) = (vec (NUMERAL _0))) /\ ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> c~ caffine_dependent f0 c==> c= * * part cIMAGE / cvector_add cvector_neg f1 b0 f0 f2 c= c/\ c= ccircumcenter f2 cvec cNUMERAL c_0 creal_lt cradV f2 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ caffine_dependent f2 c/\ c= ccircumcenter f2 cvec cNUMERAL c_0 creal_lt cradV f2 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((a <= ((NUMERAL (BIT1 (BIT1 _0))) + (NUMERAL (BIT1 _0)))) = (a < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))
T c= c<= f0 c+ cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c< f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))), ((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) |- (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= f2 ccircumcenter f1 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD f1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 f2 cdistance c, b0 f2
+ |- (((F ==> (((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))) = ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))) ==> ((((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))) = (F ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) = ((((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))) = (F ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))
T c= c==> c==> cF c= creal_gt cdistance c, f0 cvec cNUMERAL c_0 cdistance c, f1 cvec cNUMERAL c_0 creal_gt cdistance c, f0 cvec cNUMERAL c_0 cdistance c, f1 cvec cNUMERAL c_0 c= c==> c/\ cIN f1 f2 cIN f0 * * part cDIFF f3 f2 creal_gt cdistance c, f0 cvec cNUMERAL c_0 cdistance c, f1 cvec cNUMERAL c_0 c==> cF creal_gt cdistance c, f0 cvec cNUMERAL c_0 cdistance c, f1 cvec cNUMERAL c_0 c= c==> c/\ cIN f1 f2 cIN f0 * * part cDIFF f3 f2 creal_gt cdistance c, f0 cvec cNUMERAL c_0 cdistance c, f1 cvec cNUMERAL c_0 c==> cF creal_gt cdistance c, f0 cvec cNUMERAL c_0 cdistance c, f1 cvec cNUMERAL c_0
- ((((vector_sub u) p) IN ((IMAGE (\x. ((vector_sub x) p))) S)) /\ (((vector_sub v) p) IN (((IMAGE (\x. ((vector_sub x) p))) V) DIFF ((IMAGE (\x. ((vector_sub x) p))) S)))), (((((vector_sub u) p) IN ((IMAGE (\x. ((vector_sub x) p))) S)) /\ (((vector_sub v) p) IN (((IMAGE (\x. ((vector_sub x) p))) V) DIFF ((IMAGE (\x. ((vector_sub x) p))) S)))) ==> ((real_gt (vector_norm ((vector_sub v) p))) (vector_norm ((vector_sub u) p)))) |- ((((((vector_sub u) p) IN ((IMAGE (\x. ((vector_sub x) p))) S)) /\ (((vector_sub v) p) IN (((IMAGE (\x. ((vector_sub x) p))) V) DIFF ((IMAGE (\x. ((vector_sub x) p))) S)))) ==> ((real_gt (vector_norm ((vector_sub v) p))) (vector_norm ((vector_sub u) p)))) /\ ((real_gt (vector_norm ((vector_sub v) p))) (vector_norm ((vector_sub u) p))))
T c==> c/\ cIN cvector_sub f0 f1 * * part cIMAGE / cvector_sub b0 f1 f2 cIN cvector_sub f3 f1 * * part cDIFF * * part cIMAGE / cvector_sub b0 f1 f4 * * part cIMAGE / cvector_sub b0 f1 f2 c==> c==> c/\ cIN cvector_sub f0 f1 * * part cIMAGE / cvector_sub b0 f1 f2 cIN cvector_sub f3 f1 * * part cDIFF * * part cIMAGE / cvector_sub b0 f1 f4 * * part cIMAGE / cvector_sub b0 f1 f2 creal_gt cvector_norm cvector_sub f3 f1 cvector_norm cvector_sub f0 f1 c/\ c==> c/\ cIN cvector_sub f0 f1 * * part cIMAGE / cvector_sub b0 f1 f2 cIN cvector_sub f3 f1 * * part cDIFF * * part cIMAGE / cvector_sub b0 f1 f4 * * part cIMAGE / cvector_sub b0 f1 f2 creal_gt cvector_norm cvector_sub f3 f1 cvector_norm cvector_sub f0 f1 creal_gt cvector_norm cvector_sub f3 f1 cvector_norm cvector_sub f0 f1
+ |- ((!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (v $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub v) p) $ i) = (((vector_sub x) p) $ i))))) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (v $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub v) p) $ i) = (((vector_sub x) p) $ i))))))
T c==> ! c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0 c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub f1 f2 b0 c$ cvector_sub f0 f2 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub f1 f2 b0 c$ cvector_sub f0 f2 b0
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_add (vector_neg p)) x)) ((vector_add (vector_neg p)) x')) $ i) = (((vector_sub x) x') $ i)))) = (((vector_sub ((vector_add (vector_neg p)) x)) ((vector_add (vector_neg p)) x')) = ((vector_sub x) x')))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub cvector_add cvector_neg f0 f1 cvector_add cvector_neg f0 f2 b0 c$ cvector_sub f1 f2 b0 c= cvector_sub cvector_add cvector_neg f0 f1 cvector_add cvector_neg f0 f2 cvector_sub f1 f2
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0
+ |- (((((vector_add (vector_neg p)) x) = ((vector_add (vector_neg p)) x')) ==> (x = x')) /\ ((x = x') ==> (((vector_add (vector_neg p)) x) = ((vector_add (vector_neg p)) x'))))
T c/\ c==> c= cvector_add cvector_neg f0 f1 cvector_add cvector_neg f0 f2 c= f1 f2 c==> c= f1 f2 c= cvector_add cvector_neg f0 f1 cvector_add cvector_neg f0 f2
- (~ (affine_dependent K)) |- (T = (~ (affine_dependent K)))
T c==> c~ caffine_dependent f0 c= cT c~ caffine_dependent f0
+ |- (((!p'. (!q'. (((~ (affine_dependent S)) = p') ==> ((p' ==> (((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S)) = q')) ==> (((~ (affine_dependent S)) ==> ((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((~ (affine_dependent S)) = p') ==> ((p' ==> (((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S)) = q')) ==> (((~ (affine_dependent S)) ==> ((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((~ (affine_dependent S)) = p') ==> ((p' ==> (((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S)) = q')) ==> (((~ (affine_dependent S)) ==> ((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c~ caffine_dependent f0 b0 c==> c==> b0 c= c= cradV * * part cIMAGE / cvector_add cvector_neg f1 b2 f0 cradV f0 b1 c= c==> c~ caffine_dependent f0 c= cradV * * part cIMAGE / cvector_add cvector_neg f1 b2 f0 cradV f0 c==> b0 b1 * / ! c==> c= c~ caffine_dependent f0 b0 c==> c==> b0 c= c= cradV * * part cIMAGE / cvector_add cvector_neg f1 b2 f0 cradV f0 b1 c= c==> c~ caffine_dependent f0 c= cradV * * part cIMAGE / cvector_add cvector_neg f1 b2 f0 cradV f0 c==> b0 b1 f2 * / ! c==> c= c~ caffine_dependent f0 b0 c==> c==> b0 c= c= cradV * * part cIMAGE / cvector_add cvector_neg f1 b2 f0 cradV f0 b1 c= c==> c~ caffine_dependent f0 c= cradV * * part cIMAGE / cvector_add cvector_neg f1 b2 f0 cradV f0 c==> b0 b1 f2
+ |- (((!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) ==> ((\V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) V)) = ((\V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) V))
T c= c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 * / ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 f0 * / ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 f0
+ T, (((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) = K) |- (T /\ (((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S)) = ((radV K) = (radV S))))
T c==> cT c==> c= * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 f2 c/\ cT c= c= cradV * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 cradV f1 c= cradV f2 cradV f1
+ |- ((!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (x' $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add (vector_neg p)) x) $ i) = (((vector_add (vector_neg p)) x') $ i))))) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (x' $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add (vector_neg p)) x) $ i) = (((vector_add (vector_neg p)) x') $ i))))))
T c==> ! c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0 c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add cvector_neg f2 f0 b0 c$ cvector_add cvector_neg f2 f1 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add cvector_neg f2 f0 b0 c$ cvector_add cvector_neg f2 f1 b0
- (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) |- ((\S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))) S)
T c==> ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 * / c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= ccircumcenter b0 cvec cNUMERAL c_0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b0 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b1 b0 cIN b2 * * part cDIFF f0 b0 creal_gt cdistance c, b2 cvec cNUMERAL c_0 cdistance c, b1 cvec cNUMERAL c_0 f1
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ (((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) = K) |- ((~ (affine_dependent K)) = (~ (affine_dependent ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S))))
T c==> c= * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 f2 c= c~ caffine_dependent f2 c~ caffine_dependent * * part cIMAGE / cvector_add cvector_neg f0 b0 f1
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _3496667)) /\ ((((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667)) \/ ((real_le (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_int _3496667))) /\ (((real_le (real_of_int _3496667)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((real_le ((real_add (real_of_int _3496667)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c\/ creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_int f0 c\/ creal_le creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0
+ |- ((((u IN K) /\ (v IN (W DIFF K))) = p') ==> ((p' ==> (((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))) = q')) ==> ((((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))) = (p' ==> q'))))
T c==> c= c/\ cIN f0 f1 cIN f2 * * part cDIFF f3 f1 f4 c==> c==> f4 c= creal_gt cdistance c, f2 cvec cNUMERAL c_0 cdistance c, f0 cvec cNUMERAL c_0 f5 c= c==> c/\ cIN f0 f1 cIN f2 * * part cDIFF f3 f1 creal_gt cdistance c, f2 cvec cNUMERAL c_0 cdistance c, f0 cvec cNUMERAL c_0 c==> f4 f5
- (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) |- (((!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 c==> c==> ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 ! ! c==> c/\ cIN b0 f2 cIN b1 * * part cDIFF f3 f2 creal_gt cdistance c, b1 f4 cdistance c, b0 f4 ! ! c==> c/\ cIN b0 f2 cIN b1 * * part cDIFF f3 f2 creal_gt cdistance c, b1 f4 cdistance c, b0 f4
+ ((\K. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) = K)) K) |- (((((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) = K) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))) = (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))
T c==> * / c= * * part cIMAGE / cvector_add cvector_neg f0 b1 f1 b0 f2 c= c==> c= * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 f2 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f3 f1 creal_gt cdistance c, b1 f0 cdistance c, b0 f0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f3 f1 creal_gt cdistance c, b1 f0 cdistance c, b0 f0
+ ((((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ |- ((\P. ((~ (?x. (P x))) = (!x. (~ (P x))))) P)
T * / c= c~ c? / * b0 b1 ! c~ * b0 b1 f0
+ |- ((m < n) = ((int_lt (int_of_num m)) (int_of_num n)))
T c= c< f0 f1 cint_lt cint_of_num f0 cint_of_num f1
+ |- ((\q'. (((~ (x = x')) = p') ==> ((p' ==> ((((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x'))))) = q')) ==> (((~ (x = x')) ==> (((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x')))))) = (p' ==> q'))))) q')
T * / c==> c= c~ c= f0 f1 f2 c==> c==> f2 c= c==> c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f3 f0 cvector_add cvector_neg ccircumcenter f3 f1 b0 c= c==> c~ c= f0 f1 c==> c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f3 f0 cvector_add cvector_neg ccircumcenter f3 f1 c==> f2 b0 f4
- ((((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0
+ |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) |- ((!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))) = T)
T c==> ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 c= ! c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= ccircumcenter b0 cvec cNUMERAL c_0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b1 b0 cIN b2 * * part cDIFF f0 b0 creal_gt cdistance c, b2 cvec cNUMERAL c_0 cdistance c, b1 cvec cNUMERAL c_0 cT
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0
+ |- (((!t. (t \/ (~ t))) ==> ((\t. (t \/ (~ t))) (S = EMPTY))) = ((\t. (t \/ (~ t))) (S = EMPTY)))
T c= c==> ! c\/ b0 c~ b0 * / c\/ b0 c~ b0 c= f0 part cEMPTY * / c\/ b0 c~ b0 c= f0 part cEMPTY
- (((real_ge (real_of_int _3496667)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496667)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ (affine_dependent K)), (packing W), ((circumcenter K) = (vec (NUMERAL _0))), (((CARD K) = (NUMERAL (BIT0 (BIT1 _0)))) \/ (((CARD K) = (NUMERAL (BIT1 (BIT1 _0)))) \/ ((CARD K) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))), ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (K SUBSET W) |- (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))
T c==> c~ caffine_dependent f0 c==> cpacking f1 c==> c= ccircumcenter f0 cvec cNUMERAL c_0 c==> c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
+ |- (!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add (vector_neg p)) x) $ i) = (((vector_add (vector_neg p)) x') $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (x' $ i)))))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvector_neg f1 f2 f0 c$ cvector_add cvector_neg f1 f3 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f2 f0 c$ f3 f0
- |- ((packing W) ==> ((K SUBSET W) ==> ((~ (affine_dependent K)) ==> (((circumcenter K) = (vec (NUMERAL _0))) ==> (((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))))))
T c==> cpacking f0 c==> cSUBSET f1 f0 c==> c~ caffine_dependent f1 c==> c= ccircumcenter f1 cvec cNUMERAL c_0 c==> creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
+ |- ((real_neg ((real_sub ((real_add (real_neg (a $ i))) (b $ i))) ((real_sub (b $ i)) (a $ i)))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_add creal_neg c$ f0 f1 c$ f2 f1 creal_sub c$ f2 f1 c$ f0 f1 creal_of_num cNUMERAL c_0
+ (~ (x = x')) |- (((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) = (T ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (vector_norm ((vector_sub x) x')))))
T c==> c~ c= f0 f1 c= c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c==> cT creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_norm cvector_sub f0 f1
+ |- ((((K = EMPTY) ==> ((!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) = T)) ==> ((((CARD K) = (NUMERAL _0)) ==> (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))) = ((K = EMPTY) ==> T))) = ((((CARD K) = (NUMERAL _0)) ==> (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))) = ((K = EMPTY) ==> T)))
T c= c==> c==> c= f0 part cEMPTY c= ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 cT c= c==> c= cCARD f0 cNUMERAL c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 c==> c= f0 part cEMPTY cT c= c==> c= cCARD f0 cNUMERAL c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 c==> c= f0 part cEMPTY cT
+ (~ (affine_dependent S)), (~ (S = EMPTY)), (((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) = K), (p = (circumcenter S)), ((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) |- ((~ (affine_dependent K)) /\ (((circumcenter K) = (vec (NUMERAL _0))) /\ ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c~ caffine_dependent f0 c==> c~ c= f0 part cEMPTY c==> c= * * part cIMAGE / cvector_add cvector_neg f1 b0 f0 f2 c==> c= f1 ccircumcenter f0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ caffine_dependent f2 c/\ c= ccircumcenter f2 cvec cNUMERAL c_0 creal_lt cradV f2 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) |- ((\V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) V)
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 * / ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 f0
- (EMPTY = S) |- (S = EMPTY)
T c==> c= part cEMPTY f0 c= f0 part cEMPTY
- (((real_ge (real_of_int _3496667)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496667)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((real_sub ((real_add (real_neg (p $ i))) (x $ i))) ((real_add (real_neg (p $ i))) (x' $ i))) = ((real_sub (x $ i)) (x' $ i)))
T c= creal_sub creal_add creal_neg c$ f0 f1 c$ f2 f1 creal_add creal_neg c$ f0 f1 c$ f3 f1 creal_sub c$ f2 f1 c$ f3 f1
+ (p = (circumcenter S)) |- ((!u. (!v. (((V u) /\ ((V v) /\ (~ (u = v)))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v)))))) ==> (!u. (!v. (((((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) u) /\ ((((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) v) /\ (~ (u = v)))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v)))))))
T c==> c= f0 ccircumcenter f1 c==> ! ! c==> c/\ * f2 b0 c/\ * f2 b1 c~ c= b0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 ! ! c==> c/\ cIMAGE / cvector_add cvector_neg f0 b2 f2 b0 c/\ cIMAGE / cvector_add cvector_neg f0 b2 f2 b1 c~ c= b0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1
+ (~ (affine_dependent S)), (~ (S = EMPTY)), (packing V), (p = (circumcenter S)), ((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (S SUBSET V) |- ((((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))
T c==> c~ caffine_dependent f0 c==> c~ c= f0 part cEMPTY c==> cpacking f1 c==> c= f2 ccircumcenter f0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 c==> c= * * part cIMAGE / cvector_add cvector_neg f2 b0 f1 f3 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 f2 cdistance c, b0 f2
+ ((((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (((!s. ((affine_dependent ((IMAGE (\x. ((vector_add a) x))) s)) = (affine_dependent s))) ==> ((\s. ((affine_dependent ((IMAGE (\x. ((vector_add a) x))) s)) = (affine_dependent s))) s)) = ((\s. ((affine_dependent ((IMAGE (\x. ((vector_add a) x))) s)) = (affine_dependent s))) s))
T c= c==> ! c= caffine_dependent * * part cIMAGE / cvector_add f0 b1 b0 caffine_dependent b0 * / c= caffine_dependent * * part cIMAGE / cvector_add f0 b1 b0 caffine_dependent b0 f1 * / c= caffine_dependent * * part cIMAGE / cvector_add f0 b1 b0 caffine_dependent b0 f1
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((lambdai. ((real_sub (v $ i)) (p $ i))) $ i) = ((lambdai. ((real_sub (x $ i)) (p $ i))) $ i)) ==> ((x $ i) = (v $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ clambda / creal_sub c$ f1 b0 c$ f2 b0 f0 c$ clambda / creal_sub c$ f3 b0 c$ f2 b0 f0 c= c$ f3 f0 c$ f1 f0
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _3496667)) /\ ((((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667)) \/ ((real_le (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_int _3496667))) /\ (((real_le (real_of_int _3496667)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((real_le ((real_add (real_of_int _3496667)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))))) |- (((((real_ge (real_of_int _3496667)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496667)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) \/ (((real_ge (real_of_int _3496667)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496667)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) \/ ((((real_ge (real_of_int _3496667)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496667)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) \/ (((real_ge (real_of_int _3496667)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496667)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))))
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c\/ creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_int f0 c\/ creal_le creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c\/ c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ (affine_dependent K)), (packing W), ((CARD K) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((circumcenter K) = (vec (NUMERAL _0))), ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (K SUBSET W) |- ((((packing W) /\ ((K SUBSET W) /\ ((~ (affine_dependent K)) /\ (((circumcenter K) = (vec (NUMERAL _0))) /\ (((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD K) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))) = (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))
T c==> c~ caffine_dependent f0 c==> cpacking f1 c==> c= cCARD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= ccircumcenter f0 cvec cNUMERAL c_0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 c= c==> c/\ cpacking f1 c/\ cSUBSET f0 f1 c/\ c~ caffine_dependent f0 c/\ c= ccircumcenter f0 cvec cNUMERAL c_0 c/\ creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
+ (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W), (p = (circumcenter S)) |- ((packing V) ==> (packing W))
T c==> c= * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 f2 c==> c= f0 ccircumcenter f3 c==> cpacking f1 cpacking f2
- |- (((!k. ((k < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((k = (NUMERAL _0)) \/ ((k = (NUMERAL (BIT1 _0))) \/ ((k = (NUMERAL (BIT0 (BIT1 _0)))) \/ ((k = (NUMERAL (BIT1 (BIT1 _0)))) \/ (k = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))) ==> ((\k. ((k < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((k = (NUMERAL _0)) \/ ((k = (NUMERAL (BIT1 _0))) \/ ((k = (NUMERAL (BIT0 (BIT1 _0)))) \/ ((k = (NUMERAL (BIT1 (BIT1 _0)))) \/ (k = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))) k)) = ((\k. ((k < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((k = (NUMERAL _0)) \/ ((k = (NUMERAL (BIT1 _0))) \/ ((k = (NUMERAL (BIT0 (BIT1 _0)))) \/ ((k = (NUMERAL (BIT1 (BIT1 _0)))) \/ (k = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))) k))
T c= c==> ! c= c< b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c\/ c= b0 cNUMERAL c_0 c\/ c= b0 cNUMERAL cBIT1 c_0 c\/ c= b0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c= b0 cNUMERAL cBIT1 cBIT1 c_0 c= b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * / c= c< b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c\/ c= b0 cNUMERAL c_0 c\/ c= b0 cNUMERAL cBIT1 c_0 c\/ c= b0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c= b0 cNUMERAL cBIT1 cBIT1 c_0 c= b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0 * / c= c< b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c\/ c= b0 cNUMERAL c_0 c\/ c= b0 cNUMERAL cBIT1 c_0 c\/ c= b0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c= b0 cNUMERAL cBIT1 cBIT1 c_0 c= b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0
- |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
- ((((vector_sub u) p) IN ((IMAGE (\x. ((vector_sub x) p))) S)) /\ (((vector_sub v) p) IN (((IMAGE (\x. ((vector_sub x) p))) V) DIFF ((IMAGE (\x. ((vector_sub x) p))) S)))), (((((vector_sub u) p) IN ((IMAGE (\x. ((vector_sub x) p))) S)) /\ (((vector_sub v) p) IN (((IMAGE (\x. ((vector_sub x) p))) V) DIFF ((IMAGE (\x. ((vector_sub x) p))) S)))) ==> ((real_gt (vector_norm ((vector_sub v) p))) (vector_norm ((vector_sub u) p)))) |- (((((vector_sub u) p) IN ((IMAGE (\x. ((vector_sub x) p))) S)) /\ (((vector_sub v) p) IN (((IMAGE (\x. ((vector_sub x) p))) V) DIFF ((IMAGE (\x. ((vector_sub x) p))) S)))) /\ ((real_gt (vector_norm ((vector_sub v) p))) (vector_norm ((vector_sub u) p))))
T c==> c/\ cIN cvector_sub f0 f1 * * part cIMAGE / cvector_sub b0 f1 f2 cIN cvector_sub f3 f1 * * part cDIFF * * part cIMAGE / cvector_sub b0 f1 f4 * * part cIMAGE / cvector_sub b0 f1 f2 c==> c==> c/\ cIN cvector_sub f0 f1 * * part cIMAGE / cvector_sub b0 f1 f2 cIN cvector_sub f3 f1 * * part cDIFF * * part cIMAGE / cvector_sub b0 f1 f4 * * part cIMAGE / cvector_sub b0 f1 f2 creal_gt cvector_norm cvector_sub f3 f1 cvector_norm cvector_sub f0 f1 c/\ c/\ cIN cvector_sub f0 f1 * * part cIMAGE / cvector_sub b0 f1 f2 cIN cvector_sub f3 f1 * * part cDIFF * * part cIMAGE / cvector_sub b0 f1 f4 * * part cIMAGE / cvector_sub b0 f1 f2 creal_gt cvector_norm cvector_sub f3 f1 cvector_norm cvector_sub f0 f1
+ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (vector_norm ((vector_sub x) x'))) |- (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (vector_norm ((vector_sub x) x'))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x')))) = T))
T c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_norm cvector_sub f0 f1 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_norm cvector_sub f0 f1 c= creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f2 f0 cvector_add cvector_neg ccircumcenter f2 f1 cT
+ |- ((((~ (x = x')) ==> ((((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x'))))) = T)) ==> (((~ (x = x')) ==> (((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x')))))) = ((~ (x = x')) ==> T))) = (((~ (x = x')) ==> (((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x')))))) = ((~ (x = x')) ==> T)))
T c= c==> c==> c~ c= f0 f1 c= c==> c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f2 f0 cvector_add cvector_neg ccircumcenter f2 f1 cT c= c==> c~ c= f0 f1 c==> c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f2 f0 cvector_add cvector_neg ccircumcenter f2 f1 c==> c~ c= f0 f1 cT c= c==> c~ c= f0 f1 c==> c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f2 f0 cvector_add cvector_neg ccircumcenter f2 f1 c==> c~ c= f0 f1 cT
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add (vector_neg p)) p) $ i) = ((vec (NUMERAL _0)) $ i))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvector_neg f1 f1 f0 c$ cvec cNUMERAL c_0 f0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W) = ((\W. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W)) W))
T c= c= * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 f2 * / c= * * part cIMAGE / cvector_add cvector_neg f0 b1 f1 b0 f2
+ ((v IN V) /\ (~ (v IN S))) |- ((((vector_sub v) p) = ((vector_sub v) p)) /\ (v IN V))
T c==> c/\ cIN f0 f1 c~ cIN f0 f2 c/\ c= cvector_sub f0 f3 cvector_sub f0 f3 cIN f0 f1
+ |- ((\p'. (!q'. ((((u IN K) /\ (v IN (W DIFF K))) = p') ==> ((p' ==> (((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))) = q')) ==> ((((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cIN f0 f1 cIN f2 * * part cDIFF f3 f1 b0 c==> c==> b0 c= creal_gt cdistance c, f2 cvec cNUMERAL c_0 cdistance c, f0 cvec cNUMERAL c_0 b1 c= c==> c/\ cIN f0 f1 cIN f2 * * part cDIFF f3 f1 creal_gt cdistance c, f2 cvec cNUMERAL c_0 cdistance c, f0 cvec cNUMERAL c_0 c==> b0 b1 f4
+ |- ((((vector_add (vector_neg p)) x) = ((vector_add (vector_neg p)) x')) = (x = x'))
T c= c= cvector_add cvector_neg f0 f1 cvector_add cvector_neg f0 f2 c= f1 f2
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ (((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) = K) |- ((~ (affine_dependent ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S))) = (~ (affine_dependent K)))
T c==> c= * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 f2 c= c~ caffine_dependent * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 c~ caffine_dependent f2
+ |- ((y = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) y) = (real_of_num (NUMERAL _0)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
+ (!u. (!v. (((V u) /\ ((V v) /\ (~ (u = v)))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v)))))), (~ (u = v)), (V x), (p = (circumcenter S)), (u = ((vector_add (vector_neg p)) x)) |- ((((\x. ((V x) /\ (v = ((vector_add (vector_neg p)) x)))) x') ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v)))) = T)
T c==> ! ! c==> c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 c==> c~ c= f1 f2 c==> * f0 f3 c==> c= f4 ccircumcenter f5 c==> c= f1 cvector_add cvector_neg f4 f3 c= c==> * / c/\ * f0 b0 c= f2 cvector_add cvector_neg f4 b0 f6 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 cT
+ (u IN S), (v IN (V DIFF S)) |- ((?x. ((((vector_sub u) p) = ((vector_sub x) p)) /\ (x IN S))) /\ ((?x. ((((vector_sub v) p) = ((vector_sub x) p)) /\ (x IN V))) /\ (~ (?x. ((((vector_sub v) p) = ((vector_sub x) p)) /\ (x IN S))))))
T c==> cIN f0 f1 c==> cIN f2 * * part cDIFF f3 f1 c/\ c? / c/\ c= cvector_sub f0 f4 cvector_sub b0 f4 cIN b0 f1 c/\ c? / c/\ c= cvector_sub f2 f4 cvector_sub b0 f4 cIN b0 f3 c~ c? / c/\ c= cvector_sub f2 f4 cvector_sub b0 f4 cIN b0 f1
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((x $ i) = (x' $ i)) ==> (((lambdai. ((real_add ((lambdai. (real_neg (p $ i))) $ i)) (x $ i))) $ i) = ((lambdai. ((real_add ((lambdai. (real_neg (p $ i))) $ i)) (x' $ i))) $ i)))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((x $ i) = (x' $ i)) ==> ((((vector_add (vector_neg p)) x) $ i) = (((vector_add (vector_neg p)) x') $ i)))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ f1 f0 c$ f2 f0 c= c$ clambda / creal_add c$ clambda / creal_neg c$ f3 b1 b0 c$ f1 b0 f0 c$ clambda / creal_add c$ clambda / creal_neg c$ f3 b1 b0 c$ f2 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ f1 f0 c$ f2 f0 c= c$ cvector_add cvector_neg f3 f1 f0 c$ cvector_add cvector_neg f3 f2 f0
+ (((((real_ge (real_of_int _3496667)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496667)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) \/ (((real_ge (real_of_int _3496667)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496667)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) \/ ((((real_ge (real_of_int _3496667)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496667)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) \/ (((real_ge (real_of_int _3496667)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496667)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- F
T c==> c\/ c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ (~ (affine_dependent K)) |- (((K = EMPTY) ==> ((!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) = q')) ==> ((((CARD K) = (NUMERAL _0)) ==> (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))) = ((K = EMPTY) ==> q')))
T c==> c~ caffine_dependent f0 c==> c==> c= f0 part cEMPTY c= ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 f2 c= c==> c= cCARD f0 cNUMERAL c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 c==> c= f0 part cEMPTY f2
+ (S SUBSET V) |- (T = (((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) SUBSET ((IMAGE (\x. ((vector_add (vector_neg p)) x))) V)))
T c==> cSUBSET f0 f1 c= cT cSUBSET * * part cIMAGE / cvector_add cvector_neg f2 b0 f0 * * part cIMAGE / cvector_add cvector_neg f2 b0 f1
+ |- ((((~ ((((real_add (real_neg (p $ i))) (x $ i)) = ((real_add (real_neg (p $ i))) (x' $ i))) ==> ((x $ i) = (x' $ i)))) ==> F) ==> ((((real_add (real_neg (p $ i))) (x $ i)) = ((real_add (real_neg (p $ i))) (x' $ i))) ==> ((x $ i) = (x' $ i)))) = ((((real_add (real_neg (p $ i))) (x $ i)) = ((real_add (real_neg (p $ i))) (x' $ i))) ==> ((x $ i) = (x' $ i))))
T c= c==> c==> c~ c==> c= creal_add creal_neg c$ f0 f1 c$ f2 f1 creal_add creal_neg c$ f0 f1 c$ f3 f1 c= c$ f2 f1 c$ f3 f1 cF c==> c= creal_add creal_neg c$ f0 f1 c$ f2 f1 creal_add creal_neg c$ f0 f1 c$ f3 f1 c= c$ f2 f1 c$ f3 f1 c==> c= creal_add creal_neg c$ f0 f1 c$ f2 f1 creal_add creal_neg c$ f0 f1 c$ f3 f1 c= c$ f2 f1 c$ f3 f1
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))), ((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) |- (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) /\ (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))
T c==> ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= ccircumcenter f1 cvec cNUMERAL c_0 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= ccircumcenter f1 cvec cNUMERAL c_0 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) |- (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))))
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 ! c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= b0 ccircumcenter f1 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b1 f1 cIN b2 * * part cDIFF f0 f1 creal_gt cdistance c, b2 b0 cdistance c, b1 b0
+ |- ((\q'. ((((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) = p') ==> ((p' ==> (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x')))) = q')) ==> ((((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x'))))) = (p' ==> q'))))) q')
T * / c==> c= c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 f2 c==> c==> f2 c= creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f3 f0 cvector_add cvector_neg ccircumcenter f3 f1 b0 c= c==> c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f3 f0 cvector_add cvector_neg ccircumcenter f3 f1 c==> f2 b0 f4
- (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W) |- ((\W. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W)) W)
T c==> c= * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 f2 * / c= * * part cIMAGE / cvector_add cvector_neg f0 b1 f1 b0 f2
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- (~ (affine_dependent K)), (packing W), (K SUBSET W) |- ((~ (affine_dependent K)) /\ (((circumcenter K) = (vec (NUMERAL _0))) ==> (((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))))
T c==> c~ caffine_dependent f0 c==> cpacking f1 c==> cSUBSET f0 f1 c/\ c~ caffine_dependent f0 c==> c= ccircumcenter f0 cvec cNUMERAL c_0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((\W. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W)) W) |- (((((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W) ==> (?W. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W))) = (?W. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W)))
T c==> * / c= * * part cIMAGE / cvector_add cvector_neg f0 b1 f1 b0 f2 c= c==> c= * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 f2 c? / c= * * part cIMAGE / cvector_add cvector_neg f0 b1 f1 b0 c? / c= * * part cIMAGE / cvector_add cvector_neg f0 b1 f1 b0
+ |- ((((~ (((real_sub ((real_add (real_neg (p $ i))) (x $ i))) ((real_add (real_neg (p $ i))) (x' $ i))) = ((real_sub (x $ i)) (x' $ i)))) ==> F) ==> (((real_sub ((real_add (real_neg (p $ i))) (x $ i))) ((real_add (real_neg (p $ i))) (x' $ i))) = ((real_sub (x $ i)) (x' $ i)))) = (((real_sub ((real_add (real_neg (p $ i))) (x $ i))) ((real_add (real_neg (p $ i))) (x' $ i))) = ((real_sub (x $ i)) (x' $ i))))
T c= c==> c==> c~ c= creal_sub creal_add creal_neg c$ f0 f1 c$ f2 f1 creal_add creal_neg c$ f0 f1 c$ f3 f1 creal_sub c$ f2 f1 c$ f3 f1 cF c= creal_sub creal_add creal_neg c$ f0 f1 c$ f2 f1 creal_add creal_neg c$ f0 f1 c$ f3 f1 creal_sub c$ f2 f1 c$ f3 f1 c= creal_sub creal_add creal_neg c$ f0 f1 c$ f2 f1 creal_add creal_neg c$ f0 f1 c$ f3 f1 creal_sub c$ f2 f1 c$ f3 f1
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (T ==> (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x'))) = ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (vector_norm ((vector_sub x) x')))))
T c==> cT c= creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_norm cvector_sub f0 f1
+ ((\x. ((V x) /\ (v = ((vector_add (vector_neg p)) x)))) x') |- ((((V x') /\ (v = ((vector_add (vector_neg p)) x'))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v)))) = ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v))))
T c==> * / c/\ * f0 b0 c= f1 cvector_add cvector_neg f2 b0 f3 c= c==> c/\ * f0 f3 c= f1 cvector_add cvector_neg f2 f3 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f4 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f4 f1
+ |- ((a ==> (b ==> c)) ==> ((a ==> b) ==> (a ==> c)))
T c==> c==> f0 c==> f1 f2 c==> c==> f0 f1 c==> f0 f2
+ (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0)))) ==> F), (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) (real_of_num (NUMERAL _0)))) \/ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 cF
+ (~ (affine_dependent S)), (~ (S = EMPTY)), (packing V), (p = (circumcenter S)), ((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (S SUBSET V) |- (!W. (((\W. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W)) W) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))))
T c==> c~ caffine_dependent f0 c==> c~ c= f0 part cEMPTY c==> cpacking f1 c==> c= f2 ccircumcenter f0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 ! c==> * / c= * * part cIMAGE / cvector_add cvector_neg f2 b1 f1 b1 b0 ! ! c==> c/\ cIN b1 f0 cIN b2 * * part cDIFF f1 f0 creal_gt cdistance c, b2 f2 cdistance c, b1 f2
+ (packing V), ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ ((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))), (S SUBSET V) |- (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))
T c==> cpacking f0 c==> c/\ c~ caffine_dependent f1 c/\ c= f2 ccircumcenter f1 creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f1 f0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 f2 cdistance c, b0 f2
+ ((((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ (packing W), ((K SUBSET W) /\ ((~ (affine_dependent K)) /\ (((circumcenter K) = (vec (NUMERAL _0))) /\ ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))), (K SUBSET W) |- (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))
T c==> cpacking f0 c==> c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= ccircumcenter f1 cvec cNUMERAL c_0 creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f1 f0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
+ (!u. (!v. (((u IN ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) /\ (v IN (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) DIFF ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))), ((u IN S) /\ (v IN (V DIFF S))), (u IN S) |- ((real_gt (distance (v , p))) (distance (u , p)))
T c==> ! ! c==> c/\ cIN b0 * * part cIMAGE / cvector_add cvector_neg f0 b2 f1 cIN b1 * * part cDIFF * * part cIMAGE / cvector_add cvector_neg f0 b2 f2 * * part cIMAGE / cvector_add cvector_neg f0 b2 f1 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 c==> c/\ cIN f3 f1 cIN f4 * * part cDIFF f2 f1 c==> cIN f3 f1 creal_gt cdistance c, f4 f0 cdistance c, f3 f0
+ (~ (affine_dependent S)) |- (T = (~ (affine_dependent ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S))))
T c==> c~ caffine_dependent f0 c= cT c~ caffine_dependent * * part cIMAGE / cvector_add cvector_neg f1 b0 f0
+ |- ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) + (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c+ cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0
+ |- (((!s. (!a. (((~ (s = EMPTY)) /\ (~ (affine_dependent s))) ==> ((circumcenter ((IMAGE (\x. ((vector_add a) x))) s)) = ((vector_add a) (circumcenter s)))))) ==> ((\s. (!a. (((~ (s = EMPTY)) /\ (~ (affine_dependent s))) ==> ((circumcenter ((IMAGE (\x. ((vector_add a) x))) s)) = ((vector_add a) (circumcenter s)))))) S)) = ((\s. (!a. (((~ (s = EMPTY)) /\ (~ (affine_dependent s))) ==> ((circumcenter ((IMAGE (\x. ((vector_add a) x))) s)) = ((vector_add a) (circumcenter s)))))) S))
T c= c==> ! ! c==> c/\ c~ c= b0 part cEMPTY c~ caffine_dependent b0 c= ccircumcenter * * part cIMAGE / cvector_add b1 b2 b0 cvector_add b1 ccircumcenter b0 * / ! c==> c/\ c~ c= b0 part cEMPTY c~ caffine_dependent b0 c= ccircumcenter * * part cIMAGE / cvector_add b1 b2 b0 cvector_add b1 ccircumcenter b0 f0 * / ! c==> c/\ c~ c= b0 part cEMPTY c~ caffine_dependent b0 c= ccircumcenter * * part cIMAGE / cvector_add b1 b2 b0 cvector_add b1 ccircumcenter b0 f0
- (((real_ge (real_of_int _3496667)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496667)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _3496667)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (affine_dependent S)), (packing V), ((p = (circumcenter S)) /\ ((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))), (S SUBSET V) |- (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))
T c==> c~ caffine_dependent f0 c==> cpacking f1 c==> c/\ c= f2 ccircumcenter f0 creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 f2 cdistance c, b0 f2
+ |- ((\p'. (!q'. ((((CARD K) = (NUMERAL _0)) = p') ==> ((p' ==> ((!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) = q')) ==> ((((CARD K) = (NUMERAL _0)) ==> (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c= cCARD f0 cNUMERAL c_0 b0 c==> c==> b0 c= ! ! c==> c/\ cIN b2 f0 cIN b3 * * part cDIFF f1 f0 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 b1 c= c==> c= cCARD f0 cNUMERAL c_0 ! ! c==> c/\ cIN b2 f0 cIN b3 * * part cDIFF f1 f0 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 c==> b0 b1 f2
+ (((real_ge (real_of_int _3496667)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496667)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!u. (!v. (((V u) /\ ((V v) /\ (~ (u = v)))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v)))))), (p = (circumcenter S)) |- (((?x. ((V x) /\ (u = ((vector_add (vector_neg p)) x)))) /\ ((?x. ((V x) /\ (v = ((vector_add (vector_neg p)) x)))) /\ (~ (u = v)))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v))))
T c==> ! ! c==> c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 c==> c= f1 ccircumcenter f2 c==> c/\ c? / c/\ * f0 b0 c= f3 cvector_add cvector_neg f1 b0 c/\ c? / c/\ * f0 b0 c= f4 cvector_add cvector_neg f1 b0 c~ c= f3 f4 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f3 f4
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_add ((lambdai. (real_neg (p $ i))) $ i)) (p $ i))) $ i) = ((lambdai. (real_of_num (NUMERAL _0))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_neg c$ f1 b1 b0 c$ f1 b0 f0 c$ clambda / creal_of_num cNUMERAL c_0 f0
+ (~ ((((real_sub (v $ i)) (p $ i)) = ((real_sub (x $ i)) (p $ i))) ==> ((x $ i) = (v $ i)))) |- ((~ ((((real_sub (v $ i)) (p $ i)) = ((real_sub (x $ i)) (p $ i))) ==> ((x $ i) = (v $ i)))) /\ F)
T c==> c~ c==> c= creal_sub c$ f0 f1 c$ f2 f1 creal_sub c$ f3 f1 c$ f2 f1 c= c$ f3 f1 c$ f0 f1 c/\ c~ c==> c= creal_sub c$ f0 f1 c$ f2 f1 creal_sub c$ f3 f1 c$ f2 f1 c= c$ f3 f1 c$ f0 f1 cF
+ (~ (affine_dependent K)), (packing W), ((CARD K) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((circumcenter K) = (vec (NUMERAL _0))), ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (K SUBSET W) |- ((packing W) /\ ((K SUBSET W) /\ ((~ (affine_dependent K)) /\ (((circumcenter K) = (vec (NUMERAL _0))) /\ (((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD K) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))
T c==> c~ caffine_dependent f0 c==> cpacking f1 c==> c= cCARD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= ccircumcenter f0 cvec cNUMERAL c_0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 c/\ cpacking f1 c/\ cSUBSET f0 f1 c/\ c~ caffine_dependent f0 c/\ c= ccircumcenter f0 cvec cNUMERAL c_0 c/\ creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0)))) |- ((((((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (((real_sub ((real_add (real_neg (p $ i))) (x $ i))) ((real_add (real_neg (p $ i))) (x' $ i))) = ((real_sub (x $ i)) (x' $ i)))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_sub creal_add creal_neg c$ f0 f1 c$ f2 f1 creal_add creal_neg c$ f0 f1 c$ f3 f1 creal_sub c$ f2 f1 c$ f3 f1 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (((!q'. ((((CARD K) = (NUMERAL _0)) = p') ==> ((p' ==> ((!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) = q')) ==> ((((CARD K) = (NUMERAL _0)) ==> (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))) = (p' ==> q'))))) ==> ((\q'. ((((CARD K) = (NUMERAL _0)) = p') ==> ((p' ==> ((!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) = q')) ==> ((((CARD K) = (NUMERAL _0)) ==> (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))) = (p' ==> q'))))) q')) = ((\q'. ((((CARD K) = (NUMERAL _0)) = p') ==> ((p' ==> ((!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) = q')) ==> ((((CARD K) = (NUMERAL _0)) ==> (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c= cCARD f0 cNUMERAL c_0 f1 c==> c==> f1 c= ! ! c==> c/\ cIN b1 f0 cIN b2 * * part cDIFF f2 f0 creal_gt cdistance c, b2 cvec cNUMERAL c_0 cdistance c, b1 cvec cNUMERAL c_0 b0 c= c==> c= cCARD f0 cNUMERAL c_0 ! ! c==> c/\ cIN b1 f0 cIN b2 * * part cDIFF f2 f0 creal_gt cdistance c, b2 cvec cNUMERAL c_0 cdistance c, b1 cvec cNUMERAL c_0 c==> f1 b0 * / c==> c= c= cCARD f0 cNUMERAL c_0 f1 c==> c==> f1 c= ! ! c==> c/\ cIN b1 f0 cIN b2 * * part cDIFF f2 f0 creal_gt cdistance c, b2 cvec cNUMERAL c_0 cdistance c, b1 cvec cNUMERAL c_0 b0 c= c==> c= cCARD f0 cNUMERAL c_0 ! ! c==> c/\ cIN b1 f0 cIN b2 * * part cDIFF f2 f0 creal_gt cdistance c, b2 cvec cNUMERAL c_0 cdistance c, b1 cvec cNUMERAL c_0 c==> f1 b0 f3 * / c==> c= c= cCARD f0 cNUMERAL c_0 f1 c==> c==> f1 c= ! ! c==> c/\ cIN b1 f0 cIN b2 * * part cDIFF f2 f0 creal_gt cdistance c, b2 cvec cNUMERAL c_0 cdistance c, b1 cvec cNUMERAL c_0 b0 c= c==> c= cCARD f0 cNUMERAL c_0 ! ! c==> c/\ cIN b1 f0 cIN b2 * * part cDIFF f2 f0 creal_gt cdistance c, b2 cvec cNUMERAL c_0 cdistance c, b1 cvec cNUMERAL c_0 c==> f1 b0 f3
+ (!u. (!v. (((u IN ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) /\ (v IN (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) DIFF ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))), ((u IN S) /\ (v IN (V DIFF S))) |- (((u IN S) /\ (v IN (V DIFF S))) /\ ((real_gt (distance (v , p))) (distance (u , p))))
T c==> ! ! c==> c/\ cIN b0 * * part cIMAGE / cvector_add cvector_neg f0 b2 f1 cIN b1 * * part cDIFF * * part cIMAGE / cvector_add cvector_neg f0 b2 f2 * * part cIMAGE / cvector_add cvector_neg f0 b2 f1 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 c==> c/\ cIN f3 f1 cIN f4 * * part cDIFF f2 f1 c/\ c/\ cIN f3 f1 cIN f4 * * part cDIFF f2 f1 creal_gt cdistance c, f4 f0 cdistance c, f3 f0
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- ((real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) = K), (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W), (S SUBSET V) |- (K SUBSET W)
T c==> c= * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 f2 c==> c= * * part cIMAGE / cvector_add cvector_neg f0 b0 f3 f4 c==> cSUBSET f1 f3 cSUBSET f2 f4
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- ((\a. ((~ (affine_dependent S)) ==> ((radV ((IMAGE (\x. ((vector_add a) x))) S)) = (radV S)))) (vector_neg p))
T * / c==> c~ caffine_dependent f0 c= cradV * * part cIMAGE / cvector_add b0 b1 f0 cradV f0 cvector_neg f1
+ (~ (affine_dependent S)) |- ((T ==> (((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S)) = q')) ==> (((~ (affine_dependent S)) ==> ((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S))) = (T ==> q')))
T c==> c~ caffine_dependent f0 c==> c==> cT c= c= cradV * * part cIMAGE / cvector_add cvector_neg f1 b0 f0 cradV f0 f2 c= c==> c~ caffine_dependent f0 c= cradV * * part cIMAGE / cvector_add cvector_neg f1 b0 f0 cradV f0 c==> cT f2
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((x $ i) = (x' $ i)) ==> (((lambdai. ((real_add ((lambdai. (real_neg (p $ i))) $ i)) (x $ i))) $ i) = ((lambdai. ((real_add ((lambdai. (real_neg (p $ i))) $ i)) (x' $ i))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ f1 f0 c$ f2 f0 c= c$ clambda / creal_add c$ clambda / creal_neg c$ f3 b1 b0 c$ f1 b0 f0 c$ clambda / creal_add c$ clambda / creal_neg c$ f3 b1 b0 c$ f2 b0 f0
+ (~ (x = x')) |- ((((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x'))))) = (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (vector_norm ((vector_sub x) x'))) ==> T))
T c==> c~ c= f0 f1 c= c==> c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f2 f0 cvector_add cvector_neg ccircumcenter f2 f1 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_norm cvector_sub f0 f1 cT
+ (S = EMPTY), (p = (circumcenter S)) |- ((S = EMPTY) /\ (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))
T c==> c= f0 part cEMPTY c==> c= f1 ccircumcenter f0 c/\ c= f0 part cEMPTY ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f2 f0 creal_gt cdistance c, b1 f1 cdistance c, b0 f1
+ (u IN S) |- ((((vector_sub u) p) = ((vector_sub u) p)) /\ (u IN S))
T c==> cIN f0 f1 c/\ c= cvector_sub f0 f2 cvector_sub f0 f2 cIN f0 f1
+ (x = v), ((v IN V) /\ (~ (v IN S))) |- ((x = v) /\ ((~ (x = v)) \/ (~ (x IN S))))
T c==> c= f0 f1 c==> c/\ cIN f1 f2 c~ cIN f1 f3 c/\ c= f0 f1 c\/ c~ c= f0 f1 c~ cIN f0 f3
+ (~ (affine_dependent K)), (packing W), ((CARD K) = (NUMERAL (BIT1 _0))), ((circumcenter K) = (vec (NUMERAL _0))), ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (K SUBSET W) |- (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))
T c==> c~ caffine_dependent f0 c==> cpacking f1 c==> c= cCARD f0 cNUMERAL cBIT1 c_0 c==> c= ccircumcenter f0 cvec cNUMERAL c_0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
- |- (((real_gt ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (x' $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add (vector_neg p)) x) $ i) = (((vector_add (vector_neg p)) x') $ i)))) = T)
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f1 f0 c$ f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvector_neg f3 f1 f0 c$ cvector_add cvector_neg f3 f2 f0 cT
- (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))), ((!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))) |- (((!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))) /\ (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 c==> c==> ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 ! ! c==> c/\ cIN b0 f2 cIN b1 * * part cDIFF f3 f2 creal_gt cdistance c, b1 f4 cdistance c, b0 f4 c/\ c==> ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 ! ! c==> c/\ cIN b0 f2 cIN b1 * * part cDIFF f3 f2 creal_gt cdistance c, b1 f4 cdistance c, b0 f4 ! ! c==> c/\ cIN b0 f2 cIN b1 * * part cDIFF f3 f2 creal_gt cdistance c, b1 f4 cdistance c, b0 f4
+ (~ (affine_dependent K)), (packing W), ((CARD K) = (NUMERAL (BIT0 (BIT1 _0)))), ((circumcenter K) = (vec (NUMERAL _0))), ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (K SUBSET W) |- (((CARD K) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))
T c==> c~ caffine_dependent f0 c==> cpacking f1 c==> c= cCARD f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c= ccircumcenter f0 cvec cNUMERAL c_0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 c/\ c= cCARD f0 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ |- ((~ (x = x')) ==> ((((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x'))))) = T))
T c==> c~ c= f0 f1 c= c==> c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f2 f0 cvector_add cvector_neg ccircumcenter f2 f1 cT
+ ((((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) (real_of_num (NUMERAL _0)))) |- (((((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 c= c==> c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0
+ (((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) = K), (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W) |- ((!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))
T c==> c= * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 f2 c==> c= * * part cIMAGE / cvector_add cvector_neg f0 b0 f3 f4 c==> ! ! c==> c/\ cIN b0 f2 cIN b1 * * part cDIFF f4 f2 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f3 f1 creal_gt cdistance c, b1 f0 cdistance c, b0 f0
- (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) |- ((\S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))) S)
T c==> ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 * / c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= ccircumcenter b0 cvec cNUMERAL c_0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b1 b0 cIN b2 * * part cDIFF f0 b0 creal_gt cdistance c, b2 cvec cNUMERAL c_0 cdistance c, b1 cvec cNUMERAL c_0 f1
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!x. ((~ (x = v)) \/ (~ (x IN S)))) = (~ (?x. ((((vector_sub v) p) = ((vector_sub x) p)) /\ (x IN S)))))
T c= ! c\/ c~ c= b0 f0 c~ cIN b0 f1 c~ c? / c/\ c= cvector_sub f0 f2 cvector_sub b0 f2 cIN b0 f1
+ (!u. (!v. (((V u) /\ ((V v) /\ (~ (u = v)))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v)))))), (~ (u = v)), (V x), (p = (circumcenter S)), (u = ((vector_add (vector_neg p)) x)) |- (!x'. (((\x. ((V x) /\ (v = ((vector_add (vector_neg p)) x)))) x') ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v)))))
T c==> ! ! c==> c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 c==> c~ c= f1 f2 c==> * f0 f3 c==> c= f4 ccircumcenter f5 c==> c= f1 cvector_add cvector_neg f4 f3 ! c==> * / c/\ * f0 b1 c= f2 cvector_add cvector_neg f4 b1 b0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2
+ (!u. (!v. (((V u) /\ ((V v) /\ (~ (u = v)))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v)))))), (p = (circumcenter S)) |- (!v. (((?x. ((V x) /\ (u = ((vector_add (vector_neg p)) x)))) /\ ((?x. ((V x) /\ (v = ((vector_add (vector_neg p)) x)))) /\ (~ (u = v)))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v)))))
T c==> ! ! c==> c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 c==> c= f1 ccircumcenter f2 ! c==> c/\ c? / c/\ * f0 b1 c= f3 cvector_add cvector_neg f1 b1 c/\ c? / c/\ * f0 b1 c= b0 cvector_add cvector_neg f1 b1 c~ c= f3 b0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f3 b0
+ |- ((K = EMPTY) ==> ((!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) = T))
T c==> c= f0 part cEMPTY c= ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 cT
+ |- ((\V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) V)
T * / ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 f0
+ |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_add (vector_neg p)) x)) ((vector_add (vector_neg p)) x')) $ i) = (((vector_sub x) x') $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_sub cvector_add cvector_neg f1 f2 cvector_add cvector_neg f1 f3 f0 c$ cvector_sub f2 f3 f0
+ |- (((!x. ((x IN P) = (P x))) ==> ((\x. ((x IN P) = (P x))) x)) = ((\x. ((x IN P) = (P x))) x))
T c= c==> ! c= cIN b0 f0 * f0 b0 * / c= cIN b0 f0 * f0 b0 f1 * / c= cIN b0 f0 * f0 b0 f1
+ (((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) = K) |- (((T ==> (((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S)) = ((radV K) = (radV S)))) ==> (((~ (affine_dependent S)) ==> ((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S))) = (T ==> ((radV K) = (radV S))))) = (((~ (affine_dependent S)) ==> ((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S))) = (T ==> ((radV K) = (radV S)))))
T c==> c= * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 f2 c= c==> c==> cT c= c= cradV * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 cradV f1 c= cradV f2 cradV f1 c= c==> c~ caffine_dependent f1 c= cradV * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 cradV f1 c==> cT c= cradV f2 cradV f1 c= c==> c~ caffine_dependent f1 c= cradV * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 cradV f1 c==> cT c= cradV f2 cradV f1
+ (!u. (!v. (((u IN ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) /\ (v IN (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) DIFF ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) |- (((((vector_add (vector_neg p)) u) IN ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) /\ (((vector_add (vector_neg p)) v) IN (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) DIFF ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)))) ==> ((real_gt (distance (((vector_add (vector_neg p)) v) , (vec (NUMERAL _0))))) (distance (((vector_add (vector_neg p)) u) , (vec (NUMERAL _0))))))
T c==> ! ! c==> c/\ cIN b0 * * part cIMAGE / cvector_add cvector_neg f0 b2 f1 cIN b1 * * part cDIFF * * part cIMAGE / cvector_add cvector_neg f0 b2 f2 * * part cIMAGE / cvector_add cvector_neg f0 b2 f1 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 c==> c/\ cIN cvector_add cvector_neg f0 f3 * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 cIN cvector_add cvector_neg f0 f4 * * part cDIFF * * part cIMAGE / cvector_add cvector_neg f0 b0 f2 * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 creal_gt cdistance c, cvector_add cvector_neg f0 f4 cvec cNUMERAL c_0 cdistance c, cvector_add cvector_neg f0 f3 cvec cNUMERAL c_0
- |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
- (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))), ((!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))) |- ((!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) /\ (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 c==> c==> ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 ! ! c==> c/\ cIN b0 f2 cIN b1 * * part cDIFF f3 f2 creal_gt cdistance c, b1 f4 cdistance c, b0 f4 c/\ ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 ! ! c==> c/\ cIN b0 f2 cIN b1 * * part cDIFF f3 f2 creal_gt cdistance c, b1 f4 cdistance c, b0 f4
- |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ (((((real_add (x $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))) (x' $ i))) (real_of_num (NUMERAL _0)))) ==> F), (((((real_add (x $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (x $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))) (real_of_num (NUMERAL _0)))) \/ ((((real_add (x $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))) (x' $ i))) (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c/\ c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))) ==> ((\S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))) S)) = ((\S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))) S))
T c= c==> ! c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= ccircumcenter b0 cvec cNUMERAL c_0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b0 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b1 b0 cIN b2 * * part cDIFF f0 b0 creal_gt cdistance c, b2 cvec cNUMERAL c_0 cdistance c, b1 cvec cNUMERAL c_0 * / c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= ccircumcenter b0 cvec cNUMERAL c_0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b0 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b1 b0 cIN b2 * * part cDIFF f0 b0 creal_gt cdistance c, b2 cvec cNUMERAL c_0 cdistance c, b1 cvec cNUMERAL c_0 f1 * / c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= ccircumcenter b0 cvec cNUMERAL c_0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b0 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b1 b0 cIN b2 * * part cDIFF f0 b0 creal_gt cdistance c, b2 cvec cNUMERAL c_0 cdistance c, b1 cvec cNUMERAL c_0 f1
+ (~ ((((real_sub (v $ i)) (p $ i)) = ((real_sub (x $ i)) (p $ i))) ==> ((x $ i) = (v $ i)))) |- (((((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0)))) \/ ((((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) (real_of_num (NUMERAL _0)))))
T c==> c~ c==> c= creal_sub c$ f0 f1 c$ f2 f1 creal_sub c$ f3 f1 c$ f2 f1 c= c$ f3 f1 c$ f0 f1 c\/ c/\ c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f3 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f3 f1 creal_of_num cNUMERAL c_0
+ (!u. (!v. (((V u) /\ ((V v) /\ (~ (u = v)))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v)))))) |- (((!v. (((V x) /\ ((V v) /\ (~ (x = v)))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , v))))) ==> ((\v. (((V x) /\ ((V v) /\ (~ (x = v)))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , v))))) x')) = ((\v. (((V x) /\ ((V v) /\ (~ (x = v)))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , v))))) x'))
T c==> ! ! c==> c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 c= c==> ! c==> c/\ * f0 f1 c/\ * f0 b0 c~ c= f1 b0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 b0 * / c==> c/\ * f0 f1 c/\ * f0 b0 c~ c= f1 b0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 b0 f2 * / c==> c/\ * f0 f1 c/\ * f0 b0 c~ c= f1 b0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 b0 f2
+ (~ (affine_dependent S)), (~ (S = EMPTY)), (packing V), (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W), (p = (circumcenter S)), ((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (S SUBSET V) |- (((!x. (((\K. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) = K)) x) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))) ==> ((?K. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) = K)) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))) = ((?K. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) = K)) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))))
T c==> c~ caffine_dependent f0 c==> c~ c= f0 part cEMPTY c==> cpacking f1 c==> c= * * part cIMAGE / cvector_add cvector_neg f2 b0 f1 f3 c==> c= f2 ccircumcenter f0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 c= c==> ! c==> * / c= * * part cIMAGE / cvector_add cvector_neg f2 b2 f0 b1 b0 ! ! c==> c/\ cIN b1 f0 cIN b2 * * part cDIFF f1 f0 creal_gt cdistance c, b2 f2 cdistance c, b1 f2 c==> c? / c= * * part cIMAGE / cvector_add cvector_neg f2 b1 f0 b0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 f2 cdistance c, b0 f2 c==> c? / c= * * part cIMAGE / cvector_add cvector_neg f2 b1 f0 b0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 f2 cdistance c, b0 f2
+ (~ (affine_dependent S)), (packing V), (p = (circumcenter S)), ((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (S SUBSET V) |- ((~ (S = EMPTY)) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))
T c==> c~ caffine_dependent f0 c==> cpacking f1 c==> c= f2 ccircumcenter f0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 c==> c~ c= f0 part cEMPTY ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 f2 cdistance c, b0 f2
+ (~ (affine_dependent K)) |- ((FINITE K) = T)
T c==> c~ caffine_dependent f0 c= cFINITE f0 cT
+ (~ (affine_dependent S)), (~ (S = EMPTY)), (packing V), (p = (circumcenter S)), ((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (S SUBSET V) |- (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))
T c==> c~ caffine_dependent f0 c==> c~ c= f0 part cEMPTY c==> cpacking f1 c==> c= f2 ccircumcenter f0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 f2 cdistance c, b0 f2
+ (~ (affine_dependent S)), (packing V), ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ ((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))), (S SUBSET V) |- (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))
T c==> c~ caffine_dependent f0 c==> cpacking f1 c==> c/\ c~ caffine_dependent f0 c/\ c= f2 ccircumcenter f0 creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 f2 cdistance c, b0 f2
+ (~ (affine_dependent K)), (packing W), ((CARD K) = (NUMERAL (BIT0 (BIT1 _0)))), ((circumcenter K) = (vec (NUMERAL _0))), ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (K SUBSET W) |- ((((packing W) /\ ((K SUBSET W) /\ ((~ (affine_dependent K)) /\ (((vec (NUMERAL _0)) = (circumcenter K)) /\ (((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD K) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))) = (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))
T c==> c~ caffine_dependent f0 c==> cpacking f1 c==> c= cCARD f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c= ccircumcenter f0 cvec cNUMERAL c_0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 c= c==> c/\ cpacking f1 c/\ cSUBSET f0 f1 c/\ c~ caffine_dependent f0 c/\ c= cvec cNUMERAL c_0 ccircumcenter f0 c/\ creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
+ (!u. (!v. (((u IN ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) /\ (v IN (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) DIFF ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) |- ((\v. (((((vector_add (vector_neg p)) u) IN ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) /\ (v IN (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) DIFF ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (((vector_add (vector_neg p)) u) , (vec (NUMERAL _0))))))) ((vector_add (vector_neg p)) v))
T c==> ! ! c==> c/\ cIN b0 * * part cIMAGE / cvector_add cvector_neg f0 b2 f1 cIN b1 * * part cDIFF * * part cIMAGE / cvector_add cvector_neg f0 b2 f2 * * part cIMAGE / cvector_add cvector_neg f0 b2 f1 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 * / c==> c/\ cIN cvector_add cvector_neg f0 f3 * * part cIMAGE / cvector_add cvector_neg f0 b1 f1 cIN b0 * * part cDIFF * * part cIMAGE / cvector_add cvector_neg f0 b1 f2 * * part cIMAGE / cvector_add cvector_neg f0 b1 f1 creal_gt cdistance c, b0 cvec cNUMERAL c_0 cdistance c, cvector_add cvector_neg f0 f3 cvec cNUMERAL c_0 cvector_add cvector_neg f0 f4
- |- (((!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) ==> (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))))))) = (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))))
T c= c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2
- ((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) |- ((!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))
T c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= ccircumcenter f1 cvec cNUMERAL c_0 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
+ |- (((!s. ((FINITE s) ==> (((CARD s) = (NUMERAL _0)) = (s = EMPTY)))) ==> ((\s. ((FINITE s) ==> (((CARD s) = (NUMERAL _0)) = (s = EMPTY)))) s)) = ((\s. ((FINITE s) ==> (((CARD s) = (NUMERAL _0)) = (s = EMPTY)))) s))
T c= c==> ! c==> cFINITE b0 c= c= cCARD b0 cNUMERAL c_0 c= b0 part cEMPTY * / c==> cFINITE b0 c= c= cCARD b0 cNUMERAL c_0 c= b0 part cEMPTY f0 * / c==> cFINITE b0 c= c= cCARD b0 cNUMERAL c_0 c= b0 part cEMPTY f0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\y. (!s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s))))))) y)
T * / ! ! c= cIN b0 * * part cIMAGE b2 b1 c? / c/\ c= b0 * b2 b3 cIN b3 b1 f0
+ (~ (affine_dependent S)), (~ (S = EMPTY)), (((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) = K), (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W), (p = (circumcenter S)), ((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (S SUBSET V) |- ((K SUBSET W) /\ ((~ (affine_dependent K)) /\ (((circumcenter K) = (vec (NUMERAL _0))) /\ ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> c~ caffine_dependent f0 c==> c~ c= f0 part cEMPTY c==> c= * * part cIMAGE / cvector_add cvector_neg f1 b0 f0 f2 c==> c= * * part cIMAGE / cvector_add cvector_neg f1 b0 f3 f4 c==> c= f1 ccircumcenter f0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f3 c/\ cSUBSET f2 f4 c/\ c~ caffine_dependent f2 c/\ c= ccircumcenter f2 cvec cNUMERAL c_0 creal_lt cradV f2 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (vector_norm ((vector_sub x) x'))) |- (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (vector_norm ((vector_sub x) x'))) = T)
T c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_norm cvector_sub f0 f1 c= creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_norm cvector_sub f0 f1 cT
+ ((v IN V) /\ (~ (v IN S))) |- (!x. ((~ (x = v)) \/ (~ (x IN S))))
T c==> c/\ cIN f0 f1 c~ cIN f0 f2 ! c\/ c~ c= b0 f0 c~ cIN b0 f2
+ (~ (affine_dependent K)), (packing W), ((CARD K) = (NUMERAL (BIT0 (BIT1 _0)))), ((circumcenter K) = (vec (NUMERAL _0))), ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (K SUBSET W) |- (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))
T c==> c~ caffine_dependent f0 c==> cpacking f1 c==> c= cCARD f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c= ccircumcenter f0 cvec cNUMERAL c_0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
- (((vector_add (vector_neg p)) x) = ((vector_add (vector_neg p)) x')) |- ((((vector_add (vector_neg p)) x) = ((vector_add (vector_neg p)) x')) /\ (x = x'))
T c==> c= cvector_add cvector_neg f0 f1 cvector_add cvector_neg f0 f2 c/\ c= cvector_add cvector_neg f0 f1 cvector_add cvector_neg f0 f2 c= f1 f2
- (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))), ((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) |- (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))
T c==> ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= ccircumcenter f1 cvec cNUMERAL c_0 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
- |- ((?y. t) = t)
T c= c? / f0 f0
+ (~ (affine_dependent K)), (packing W), ((circumcenter K) = (vec (NUMERAL _0))), (((CARD K) = (NUMERAL (BIT1 _0))) \/ (((CARD K) = (NUMERAL (BIT0 (BIT1 _0)))) \/ (((CARD K) = (NUMERAL (BIT1 (BIT1 _0)))) \/ ((CARD K) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))), ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (K SUBSET W) |- (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))
T c==> c~ caffine_dependent f0 c==> cpacking f1 c==> c= ccircumcenter f0 cvec cNUMERAL c_0 c==> c\/ c= cCARD f0 cNUMERAL cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
+ |- ((\V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) V)
T * / ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 f0
+ (u IN S) |- ((u IN S) = T)
T c==> cIN f0 f1 c= cIN f0 f1 cT
+ |- (((!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add (vector_neg p)) x) $ i) = (((vector_add (vector_neg p)) x') $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (x' $ i))))) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add (vector_neg p)) x) $ i) = (((vector_add (vector_neg p)) x') $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (x' $ i)))))) = ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add (vector_neg p)) x) $ i) = (((vector_add (vector_neg p)) x') $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (x' $ i))))))
T c= c==> ! c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add cvector_neg f0 f1 b0 c$ cvector_add cvector_neg f0 f2 b0 c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f1 b0 c$ f2 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add cvector_neg f0 f1 b0 c$ cvector_add cvector_neg f0 f2 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f1 b0 c$ f2 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add cvector_neg f0 f1 b0 c$ cvector_add cvector_neg f0 f2 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f1 b0 c$ f2 b0
+ |- (((!s. (!f. (((IMAGE f) s) = (GSPEC (\GEN%PVAR%7. (?y. (((SETSPEC GEN%PVAR%7) (?x. ((x IN s) /\ (y = (f x))))) y))))))) ==> ((\s. (!f. (((IMAGE f) s) = (GSPEC (\GEN%PVAR%7. (?y. (((SETSPEC GEN%PVAR%7) (?x. ((x IN s) /\ (y = (f x))))) y))))))) s)) = ((\s. (!f. (((IMAGE f) s) = (GSPEC (\GEN%PVAR%7. (?y. (((SETSPEC GEN%PVAR%7) (?x. ((x IN s) /\ (y = (f x))))) y))))))) s))
T c= c==> ! ! c= * * part cIMAGE b1 b0 * part cGSPEC / c? / cSETSPEC b2 c? / c/\ cIN b4 b0 c= b3 * b1 b4 b3 * / ! c= * * part cIMAGE b1 b0 * part cGSPEC / c? / cSETSPEC b2 c? / c/\ cIN b4 b0 c= b3 * b1 b4 b3 f0 * / ! c= * * part cIMAGE b1 b0 * part cGSPEC / c? / cSETSPEC b2 c? / c/\ cIN b4 b0 c= b3 * b1 b4 b3 f0
+ (~ (affine_dependent S)), (((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) = K) |- (((((~ (affine_dependent S)) ==> ((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S))) = ((radV K) = (radV S))) ==> ((((radV K) = (radV S)) ==> (((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((~ (affine_dependent S)) ==> ((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S))) ==> ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((radV K) = (radV S)) ==> q')))) = ((((radV K) = (radV S)) ==> (((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((~ (affine_dependent S)) ==> ((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S))) ==> ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((radV K) = (radV S)) ==> q'))))
T c==> c~ caffine_dependent f0 c==> c= * * part cIMAGE / cvector_add cvector_neg f1 b0 f0 f2 c= c==> c= c==> c~ caffine_dependent f0 c= cradV * * part cIMAGE / cvector_add cvector_neg f1 b0 f0 cradV f0 c= cradV f2 cradV f0 c==> c==> c= cradV f2 cradV f0 c= creal_lt cradV f2 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f3 c= c==> c==> c~ caffine_dependent f0 c= cradV * * part cIMAGE / cvector_add cvector_neg f1 b0 f0 cradV f0 creal_lt cradV f2 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= cradV f2 cradV f0 f3 c==> c==> c= cradV f2 cradV f0 c= creal_lt cradV f2 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f3 c= c==> c==> c~ caffine_dependent f0 c= cradV * * part cIMAGE / cvector_add cvector_neg f1 b0 f0 cradV f0 creal_lt cradV f2 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= cradV f2 cradV f0 f3
+ |- (((!x. (!y. ((distance (x , y)) = (vector_norm ((vector_sub x) y))))) ==> ((\x. (!y. ((distance (x , y)) = (vector_norm ((vector_sub x) y))))) x)) = ((\x. (!y. ((distance (x , y)) = (vector_norm ((vector_sub x) y))))) x))
T c= c==> ! ! c= cdistance c, b0 b1 cvector_norm cvector_sub b0 b1 * / ! c= cdistance c, b0 b1 cvector_norm cvector_sub b0 b1 f0 * / ! c= cdistance c, b0 b1 cvector_norm cvector_sub b0 b1 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (x = x')) |- ((~ (x = x')) /\ ((((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x'))))) = T))
T c==> c~ c= f0 f1 c/\ c~ c= f0 f1 c= c==> c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f2 f0 cvector_add cvector_neg ccircumcenter f2 f1 cT
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) |- (((!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))))) ==> ((\S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))))) S)) = ((\S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))))) S))
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 c= c==> ! ! c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= b1 ccircumcenter b0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b0 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b2 b0 cIN b3 * * part cDIFF f0 b0 creal_gt cdistance c, b3 b1 cdistance c, b2 b1 * / ! c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= b1 ccircumcenter b0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b0 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b2 b0 cIN b3 * * part cDIFF f0 b0 creal_gt cdistance c, b3 b1 cdistance c, b2 b1 f1 * / ! c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= b1 ccircumcenter b0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b0 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b2 b0 cIN b3 * * part cDIFF f0 b0 creal_gt cdistance c, b3 b1 cdistance c, b2 b1 f1
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0
+ |- ((\P. (!x. ((x IN P) = (P x)))) P)
T * / ! c= cIN b1 b0 * b0 b1 f0
+ (u IN S), (v IN (V DIFF S)) |- ((((((vector_sub u) p) IN ((IMAGE (\x. ((vector_sub x) p))) S)) /\ (((vector_sub v) p) IN (((IMAGE (\x. ((vector_sub x) p))) V) DIFF ((IMAGE (\x. ((vector_sub x) p))) S)))) ==> ((real_gt (vector_norm ((vector_sub v) p))) (vector_norm ((vector_sub u) p)))) = ((real_gt (vector_norm ((vector_sub v) p))) (vector_norm ((vector_sub u) p))))
T c==> cIN f0 f1 c==> cIN f2 * * part cDIFF f3 f1 c= c==> c/\ cIN cvector_sub f0 f4 * * part cIMAGE / cvector_sub b0 f4 f1 cIN cvector_sub f2 f4 * * part cDIFF * * part cIMAGE / cvector_sub b0 f4 f3 * * part cIMAGE / cvector_sub b0 f4 f1 creal_gt cvector_norm cvector_sub f2 f4 cvector_norm cvector_sub f0 f4 creal_gt cvector_norm cvector_sub f2 f4 cvector_norm cvector_sub f0 f4
+ (~ (affine_dependent K)), (packing W), ((circumcenter K) = (vec (NUMERAL _0))), ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (K SUBSET W) |- (((CARD K) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))
T c==> c~ caffine_dependent f0 c==> cpacking f1 c==> c= ccircumcenter f0 cvec cNUMERAL c_0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 c==> c= cCARD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((x $ i) = (v $ i)) ==> (((lambdai. ((real_sub (v $ i)) (p $ i))) $ i) = ((lambdai. ((real_sub (x $ i)) (p $ i))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ f1 f0 c$ f2 f0 c= c$ clambda / creal_sub c$ f2 b0 c$ f3 b0 f0 c$ clambda / creal_sub c$ f1 b0 c$ f3 b0 f0
+ (~ (affine_dependent K)), (packing W), ((circumcenter K) = (vec (NUMERAL _0))), ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (K SUBSET W) |- (((CARD K) = (NUMERAL (BIT1 (BIT1 _0)))) ==> (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))
T c==> c~ caffine_dependent f0 c==> cpacking f1 c==> c= ccircumcenter f0 cvec cNUMERAL c_0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 c==> c= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
- (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))), ((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) |- (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) /\ (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))
T c==> ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= ccircumcenter f1 cvec cNUMERAL c_0 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT1 cBIT1 c_0 c/\ c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= ccircumcenter f1 cvec cNUMERAL c_0 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
- (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))), ((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) |- (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))
T c==> ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= ccircumcenter f1 cvec cNUMERAL c_0 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
+ (packing W), ((K SUBSET W) /\ ((~ (affine_dependent K)) /\ (((circumcenter K) = (vec (NUMERAL _0))) /\ ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) |- (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))
T c==> cpacking f0 c==> c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= ccircumcenter f1 cvec cNUMERAL c_0 creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
+ (~ (affine_dependent K)), ((((CARD K) = (NUMERAL (BIT1 _0))) \/ (((CARD K) = (NUMERAL (BIT0 (BIT1 _0)))) \/ (((CARD K) = (NUMERAL (BIT1 (BIT1 _0)))) \/ ((CARD K) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ==> (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))), (((CARD K) = (NUMERAL _0)) \/ (((CARD K) = (NUMERAL (BIT1 _0))) \/ (((CARD K) = (NUMERAL (BIT0 (BIT1 _0)))) \/ (((CARD K) = (NUMERAL (BIT1 (BIT1 _0)))) \/ ((CARD K) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))) |- (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))
T c==> c~ caffine_dependent f0 c==> c==> c\/ c= cCARD f0 cNUMERAL cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 c==> c\/ c= cCARD f0 cNUMERAL c_0 c\/ c= cCARD f0 cNUMERAL cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
+ |- (((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (vector_norm ((vector_sub x) x'))) ==> (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x')))) = T)) ==> ((((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x'))))) = (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (vector_norm ((vector_sub x) x'))) ==> T))) = ((((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x'))))) = (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (vector_norm ((vector_sub x) x'))) ==> T)))
T c= c==> c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_norm cvector_sub f0 f1 c= creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f2 f0 cvector_add cvector_neg ccircumcenter f2 f1 cT c= c==> c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f2 f0 cvector_add cvector_neg ccircumcenter f2 f1 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_norm cvector_sub f0 f1 cT c= c==> c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f2 f0 cvector_add cvector_neg ccircumcenter f2 f1 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_norm cvector_sub f0 f1 cT
+ (~ (affine_dependent K)), (packing W), ((CARD K) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((circumcenter K) = (vec (NUMERAL _0))), ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (K SUBSET W) |- (T = ((packing W) /\ ((K SUBSET W) /\ ((~ (affine_dependent K)) /\ (((circumcenter K) = (vec (NUMERAL _0))) /\ (((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD K) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))
T c==> c~ caffine_dependent f0 c==> cpacking f1 c==> c= cCARD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= ccircumcenter f0 cvec cNUMERAL c_0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 c= cT c/\ cpacking f1 c/\ cSUBSET f0 f1 c/\ c~ caffine_dependent f0 c/\ c= ccircumcenter f0 cvec cNUMERAL c_0 c/\ creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ |- (((!f. (((IMAGE f) s) = (GSPEC (\GEN%PVAR%7. (?y. (((SETSPEC GEN%PVAR%7) (?x. ((x IN s) /\ (y = (f x))))) y)))))) ==> ((\f. (((IMAGE f) s) = (GSPEC (\GEN%PVAR%7. (?y. (((SETSPEC GEN%PVAR%7) (?x. ((x IN s) /\ (y = (f x))))) y)))))) f)) = ((\f. (((IMAGE f) s) = (GSPEC (\GEN%PVAR%7. (?y. (((SETSPEC GEN%PVAR%7) (?x. ((x IN s) /\ (y = (f x))))) y)))))) f))
T c= c==> ! c= * * part cIMAGE b0 f0 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ cIN b3 f0 c= b2 * b0 b3 b2 * / c= * * part cIMAGE b0 f0 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ cIN b3 f0 c= b2 * b0 b3 b2 f1 * / c= * * part cIMAGE b0 f0 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ cIN b3 f0 c= b2 * b0 b3 b2 f1
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_sub ((lambdai. ((real_add ((lambdai. (real_neg (p $ i))) $ i)) (x $ i))) $ i)) ((lambdai. ((real_add ((lambdai. (real_neg (p $ i))) $ i)) (x' $ i))) $ i))) $ i) = ((lambdai. ((real_sub (x $ i)) (x' $ i))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_add (vector_neg p)) x)) ((vector_add (vector_neg p)) x')) $ i) = (((vector_sub x) x') $ i))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_sub c$ clambda / creal_add c$ clambda / creal_neg c$ f1 b1 b1 c$ f2 b1 b0 c$ clambda / creal_add c$ clambda / creal_neg c$ f1 b1 b1 c$ f3 b1 b0 f0 c$ clambda / creal_sub c$ f2 b0 c$ f3 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_sub cvector_add cvector_neg f1 f2 cvector_add cvector_neg f1 f3 f0 c$ cvector_sub f2 f3 f0
+ |- ((\s. ((affine_dependent ((IMAGE (\x. ((vector_add a) x))) s)) = (affine_dependent s))) s)
T * / c= caffine_dependent * * part cIMAGE / cvector_add f0 b1 b0 caffine_dependent b0 f1
- |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ ((v IN V) /\ (~ (v IN S))) |- ((~ (?x. ((((vector_sub v) p) = ((vector_sub x) p)) /\ (x IN S)))) = ((?x. ((((vector_sub v) p) = ((vector_sub x) p)) /\ (x IN V))) /\ (~ (?x. ((((vector_sub v) p) = ((vector_sub x) p)) /\ (x IN S))))))
T c==> c/\ cIN f0 f1 c~ cIN f0 f2 c= c~ c? / c/\ c= cvector_sub f0 f3 cvector_sub b0 f3 cIN b0 f2 c/\ c? / c/\ c= cvector_sub f0 f3 cvector_sub b0 f3 cIN b0 f1 c~ c? / c/\ c= cvector_sub f0 f3 cvector_sub b0 f3 cIN b0 f2
+ |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _3496667)) /\ ((((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667)) \/ ((real_le (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_int _3496667))) /\ (((real_le (real_of_int _3496667)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((real_le ((real_add (real_of_int _3496667)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c\/ creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_int f0 c\/ creal_le creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_add ((lambdai. (real_neg (p $ i))) $ i)) (p $ i))) $ i) = ((lambdai. (real_of_num (NUMERAL _0))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add (vector_neg p)) p) $ i) = ((vec (NUMERAL _0)) $ i))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_neg c$ f1 b1 b0 c$ f1 b0 f0 c$ clambda / creal_of_num cNUMERAL c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvector_neg f1 f1 f0 c$ cvec cNUMERAL c_0 f0
+ |- ((\t. (t \/ (~ t))) (S = EMPTY))
T * / c\/ b0 c~ b0 c= f0 part cEMPTY
+ |- (((!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))) ==> ((\t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))) t2)) = ((\t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))) t2))
T c= c==> ! c/\ c= c~ c/\ f0 b0 c\/ c~ f0 c~ b0 c= c~ c\/ f0 b0 c/\ c~ f0 c~ b0 * / c/\ c= c~ c/\ f0 b0 c\/ c~ f0 c~ b0 c= c~ c\/ f0 b0 c/\ c~ f0 c~ b0 f1 * / c/\ c= c~ c/\ f0 b0 c\/ c~ f0 c~ b0 c= c~ c\/ f0 b0 c/\ c~ f0 c~ b0 f1
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) |- ((!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) /\ (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))))
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 c/\ ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((p \/ (q \/ r)) = (q \/ (p \/ r))) /\ (((p \/ p) = p) /\ ((p \/ (p \/ q)) = (p \/ q))))
T c/\ c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2 c/\ c= c\/ f0 f0 f0 c= c\/ f0 c\/ f0 f1 c\/ f0 f1
+ |- ((((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ ((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))) = T)
T c= c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= f2 ccircumcenter f1 creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 f2 cdistance c, b0 f2 cT
+ |- ((~ (((x $ i) = (x' $ i)) ==> (((real_add (real_neg (p $ i))) (x $ i)) = ((real_add (real_neg (p $ i))) (x' $ i))))) ==> F)
T c==> c~ c==> c= c$ f0 f1 c$ f2 f1 c= creal_add creal_neg c$ f3 f1 c$ f0 f1 creal_add creal_neg c$ f3 f1 c$ f2 f1 cF
- (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W) |- ((((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W) /\ (?W. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W)))
T c==> c= * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 f2 c/\ c= * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 f2 c? / c= * * part cIMAGE / cvector_add cvector_neg f0 b1 f1 b0
+ |- (((!p'. (!q'. ((((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) = p') ==> ((p' ==> (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x')))) = q')) ==> ((((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x'))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) = p') ==> ((p' ==> (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x')))) = q')) ==> ((((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x'))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) = p') ==> ((p' ==> (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x')))) = q')) ==> ((((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x'))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0 c==> c==> b0 c= creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f2 f0 cvector_add cvector_neg ccircumcenter f2 f1 b1 c= c==> c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f2 f0 cvector_add cvector_neg ccircumcenter f2 f1 c==> b0 b1 * / ! c==> c= c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0 c==> c==> b0 c= creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f2 f0 cvector_add cvector_neg ccircumcenter f2 f1 b1 c= c==> c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f2 f0 cvector_add cvector_neg ccircumcenter f2 f1 c==> b0 b1 f3 * / ! c==> c= c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0 c==> c==> b0 c= creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f2 f0 cvector_add cvector_neg ccircumcenter f2 f1 b1 c= c==> c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f2 f0 cvector_add cvector_neg ccircumcenter f2 f1 c==> b0 b1 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((real_neg ((real_sub (x $ i)) (x' $ i))) = ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))) (x' $ i)))
T c= creal_neg creal_sub c$ f0 f1 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1
+ |- ((\S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))))) S)
T * / ! c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= b1 ccircumcenter b0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b0 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b2 b0 cIN b3 * * part cDIFF f0 b0 creal_gt cdistance c, b3 b1 cdistance c, b2 b1 f1
+ |- ((\t. (t \/ (~ t))) (x = v))
T * / c\/ b0 c~ b0 c= f0 f1
+ (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W) |- (W = ((IMAGE (\x. ((vector_add (vector_neg p)) x))) V))
T c==> c= * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 f2 c= f2 * * part cIMAGE / cvector_add cvector_neg f0 b0 f1
+ |- (((vector_sub ((vector_add (vector_neg p)) x)) ((vector_add (vector_neg p)) x')) = ((vector_sub x) x'))
T c= cvector_sub cvector_add cvector_neg f0 f1 cvector_add cvector_neg f0 f2 cvector_sub f1 f2
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambdai. ((real_add ((lambdai. (real_neg (p $ i))) $ i)) (p $ i))) $ i) = ((lambdai. (real_of_num (NUMERAL _0))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_neg c$ f1 b1 b0 c$ f1 b0 f0 c$ clambda / creal_of_num cNUMERAL c_0 f0
+ |- ((\V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) V)
T * / ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 f0
+ (((((real_add (x $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (x $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))) (real_of_num (NUMERAL _0)))) \/ ((((real_add (x $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))) (x' $ i))) (real_of_num (NUMERAL _0))))) |- F
T c==> c\/ c/\ c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 cF
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) |- ((!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))))) = T)
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 c= ! ! c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= b1 ccircumcenter b0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b2 b0 cIN b3 * * part cDIFF f0 b0 creal_gt cdistance c, b3 b1 cdistance c, b2 b1 cT
+ (((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) = K) |- (T ==> (((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S)) = ((radV K) = (radV S))))
T c==> c= * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 f2 c==> cT c= c= cradV * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 cradV f1 c= cradV f2 cradV f1
+ |- (!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (x' $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add (vector_neg p)) x) $ i) = (((vector_add (vector_neg p)) x') $ i)))))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f1 f0 c$ f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvector_neg f3 f1 f0 c$ cvector_add cvector_neg f3 f2 f0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0
+ (~ (affine_dependent K)), (packing W), ((circumcenter K) = (vec (NUMERAL _0))), (((CARD K) = (NUMERAL (BIT1 (BIT1 _0)))) \/ ((CARD K) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (K SUBSET W) |- (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))
T c==> c~ caffine_dependent f0 c==> cpacking f1 c==> c= ccircumcenter f0 cvec cNUMERAL c_0 c==> c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
+ (!u. (!v. (((V u) /\ ((V v) /\ (~ (u = v)))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v)))))), (~ (u = v)), (V x), (V x'), (p = (circumcenter S)), (u = ((vector_add (vector_neg p)) x)), ((V x') /\ (v = ((vector_add (vector_neg p)) x'))) |- ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v)))
T c==> ! ! c==> c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 c==> c~ c= f1 f2 c==> * f0 f3 c==> * f0 f4 c==> c= f5 ccircumcenter f6 c==> c= f1 cvector_add cvector_neg f5 f3 c==> c/\ * f0 f4 c= f2 cvector_add cvector_neg f5 f4 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (!u. (!v. (((V u) /\ ((V v) /\ (~ (u = v)))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v)))))), (p = (circumcenter S)) |- ((!u. (!v. (((V u) /\ ((V v) /\ (~ (u = v)))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v)))))) /\ (!u. (!v. (((?x. ((V x) /\ (u = ((vector_add (vector_neg p)) x)))) /\ ((?x. ((V x) /\ (v = ((vector_add (vector_neg p)) x)))) /\ (~ (u = v)))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v)))))))
T c==> ! ! c==> c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 c==> c= f1 ccircumcenter f2 c/\ ! ! c==> c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 ! ! c==> c/\ c? / c/\ * f0 b2 c= b0 cvector_add cvector_neg f1 b2 c/\ c? / c/\ * f0 b2 c= b1 cvector_add cvector_neg f1 b2 c~ c= b0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1
+ |- (((!s. (!t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t))))) ==> ((\s. (!t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t))))) s)) = ((\s. (!t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t))))) s))
T c= c==> ! ! c==> cSUBSET b0 b1 cSUBSET * * part cIMAGE f0 b0 * * part cIMAGE f0 b1 * / ! c==> cSUBSET b0 b1 cSUBSET * * part cIMAGE f0 b0 * * part cIMAGE f0 b1 f1 * / ! c==> cSUBSET b0 b1 cSUBSET * * part cIMAGE f0 b0 * * part cIMAGE f0 b1 f1
+ (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W) |- ((((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) SUBSET ((IMAGE (\x. ((vector_add (vector_neg p)) x))) V)) = (((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) SUBSET W))
T c==> c= * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 f2 c= cSUBSET * * part cIMAGE / cvector_add cvector_neg f0 b0 f3 * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 cSUBSET * * part cIMAGE / cvector_add cvector_neg f0 b0 f3 f2
+ |- (((((real_ge (real_of_int _3496667)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496667)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) \/ (((real_ge (real_of_int _3496667)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496667)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) ==> F)
T c==> c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((vector_sub v) p) $ i) = (((vector_sub x) p) $ i)) ==> ((x $ i) = (v $ i)))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub v) p) $ i) = (((vector_sub x) p) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (v $ i))))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub v) p) $ i) = (((vector_sub x) p) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (v $ i)))))
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ cvector_sub f1 f2 f0 c$ cvector_sub f3 f2 f0 c= c$ f3 f0 c$ f1 f0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_sub f1 f2 f0 c$ cvector_sub f3 f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f3 f0 c$ f1 f0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_sub f1 f2 f0 c$ cvector_sub f3 f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f3 f0 c$ f1 f0
+ |- ((~ (((real_add (real_neg (a $ i))) (b $ i)) = ((real_sub (b $ i)) (a $ i)))) ==> F)
T c==> c~ c= creal_add creal_neg c$ f0 f1 c$ f2 f1 creal_sub c$ f2 f1 c$ f0 f1 cF
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
- |- (((real_ge ((real_add (real_of_int _3496667)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _3496667)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (x' $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add (vector_neg p)) x) $ i) = (((vector_add (vector_neg p)) x') $ i))))) = ((x = x') ==> (((vector_add (vector_neg p)) x) = ((vector_add (vector_neg p)) x'))))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add cvector_neg f2 f0 b0 c$ cvector_add cvector_neg f2 f1 b0 c==> c= f0 f1 c= cvector_add cvector_neg f2 f0 cvector_add cvector_neg f2 f1
+ |- ((\p'. (!q'. (((~ (x = x')) = p') ==> ((p' ==> (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x'))) = q')) ==> (((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) = (p' ==> q')))))) p')
T * / ! c==> c= c~ c= f0 f1 b0 c==> c==> b0 c= creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b1 c= c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c==> b0 b1 f2
+ (~ (affine_dependent S)), (((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) = K), ((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) |- (((~ (affine_dependent S)) ==> ((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S))) ==> ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c~ caffine_dependent f0 c==> c= * * part cIMAGE / cvector_add cvector_neg f1 b0 f0 f2 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c==> c~ caffine_dependent f0 c= cradV * * part cIMAGE / cvector_add cvector_neg f1 b0 f0 cradV f0 creal_lt cradV f2 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- T |- (T = T)
T c==> cT c= cT cT
+ |- (((!n. ((m < (SUC n)) = ((m = n) \/ (m < n)))) ==> ((\n. ((m < (SUC n)) = ((m = n) \/ (m < n)))) n)) = ((\n. ((m < (SUC n)) = ((m = n) \/ (m < n)))) n))
T c= c==> ! c= c< f0 cSUC b0 c\/ c= f0 b0 c< f0 b0 * / c= c< f0 cSUC b0 c\/ c= f0 b0 c< f0 b0 f1 * / c= c< f0 cSUC b0 c\/ c= f0 b0 c< f0 b0 f1
+ |- ((\q'. (((~ (affine_dependent S)) = p') ==> ((p' ==> (((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S)) = q')) ==> (((~ (affine_dependent S)) ==> ((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S))) = (p' ==> q'))))) q')
T * / c==> c= c~ caffine_dependent f0 f1 c==> c==> f1 c= c= cradV * * part cIMAGE / cvector_add cvector_neg f2 b1 f0 cradV f0 b0 c= c==> c~ caffine_dependent f0 c= cradV * * part cIMAGE / cvector_add cvector_neg f2 b1 f0 cradV f0 c==> f1 b0 f3
+ |- (F ==> (((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))) = ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))
T c==> cF c= creal_gt cdistance c, f0 cvec cNUMERAL c_0 cdistance c, f1 cvec cNUMERAL c_0 creal_gt cdistance c, f0 cvec cNUMERAL c_0 cdistance c, f1 cvec cNUMERAL c_0
+ ((\W. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W)) W) |- (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W)
T c==> * / c= * * part cIMAGE / cvector_add cvector_neg f0 b1 f1 b0 f2 c= * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 f2
+ |- (((!u. (!v. (((V u) /\ ((V v) /\ (~ (u = v)))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v)))))) ==> (!u. (!v. (((((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) u) /\ ((((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) v) /\ (~ (u = v)))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v))))))) = ((packing V) ==> (packing ((IMAGE (\x. ((vector_add (vector_neg p)) x))) V))))
T c= c==> ! ! c==> c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 ! ! c==> c/\ cIMAGE / cvector_add cvector_neg f1 b2 f0 b0 c/\ cIMAGE / cvector_add cvector_neg f1 b2 f0 b1 c~ c= b0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 c==> cpacking f0 cpacking * * part cIMAGE / cvector_add cvector_neg f1 b0 f0
+ (u IN S) |- ((\x. ((((vector_sub u) p) = ((vector_sub x) p)) /\ (x IN S))) u)
T c==> cIN f0 f1 * / c/\ c= cvector_sub f0 f2 cvector_sub b0 f2 cIN b0 f1 f0
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) |- ((!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))) = T)
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 c= ! c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= b0 ccircumcenter f1 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b1 f1 cIN b2 * * part cDIFF f0 f1 creal_gt cdistance c, b2 b0 cdistance c, b1 b0 cT
+ |- (((!t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t)))) ==> ((\t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t)))) t)) = ((\t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t)))) t))
T c= c==> ! c==> cSUBSET f0 b0 cSUBSET * * part cIMAGE f1 f0 * * part cIMAGE f1 b0 * / c==> cSUBSET f0 b0 cSUBSET * * part cIMAGE f1 f0 * * part cIMAGE f1 b0 f2 * / c==> cSUBSET f0 b0 cSUBSET * * part cIMAGE f1 f0 * * part cIMAGE f1 b0 f2
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((\s. ((FINITE s) ==> (((CARD s) = (NUMERAL _0)) = (s = EMPTY)))) s)
T * / c==> cFINITE b0 c= c= cCARD b0 cNUMERAL c_0 c= b0 part cEMPTY f0
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub v) p) $ i) = (((vector_sub x) p) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (v $ i)))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub f0 f1 b0 c$ cvector_sub f2 f1 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f2 b0 c$ f0 b0
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (((!x. (~ (x IN EMPTY))) ==> ((\x. (~ (x IN EMPTY))) x)) = ((\x. (~ (x IN EMPTY))) x))
T c= c==> ! c~ cIN b0 part cEMPTY * / c~ cIN b0 part cEMPTY f0 * / c~ cIN b0 part cEMPTY f0
+ (u IN S), (v IN (V DIFF S)) |- ((((vector_sub u) p) IN ((IMAGE (\x. ((vector_sub x) p))) S)) /\ (((vector_sub v) p) IN (((IMAGE (\x. ((vector_sub x) p))) V) DIFF ((IMAGE (\x. ((vector_sub x) p))) S))))
T c==> cIN f0 f1 c==> cIN f2 * * part cDIFF f3 f1 c/\ cIN cvector_sub f0 f4 * * part cIMAGE / cvector_sub b0 f4 f1 cIN cvector_sub f2 f4 * * part cDIFF * * part cIMAGE / cvector_sub b0 f4 f3 * * part cIMAGE / cvector_sub b0 f4 f1
+ (!u. (!v. (((V u) /\ ((V v) /\ (~ (u = v)))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v)))))), (p = (circumcenter S)), ((?x. ((V x) /\ (v = ((vector_add (vector_neg p)) x)))) /\ (~ (u = v))) |- (((!x. (((\x. ((V x) /\ (u = ((vector_add (vector_neg p)) x)))) x) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v))))) ==> ((?x. ((V x) /\ (u = ((vector_add (vector_neg p)) x)))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v))))) = ((?x. ((V x) /\ (u = ((vector_add (vector_neg p)) x)))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v)))))
T c==> ! ! c==> c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 c==> c= f1 ccircumcenter f2 c==> c/\ c? / c/\ * f0 b0 c= f3 cvector_add cvector_neg f1 b0 c~ c= f4 f3 c= c==> ! c==> * / c/\ * f0 b1 c= f4 cvector_add cvector_neg f1 b1 b0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f4 f3 c==> c? / c/\ * f0 b0 c= f4 cvector_add cvector_neg f1 b0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f4 f3 c==> c? / c/\ * f0 b0 c= f4 cvector_add cvector_neg f1 b0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f4 f3
+ |- (((!m. ((m < (NUMERAL _0)) = F)) ==> ((\m. ((m < (NUMERAL _0)) = F)) m)) = ((\m. ((m < (NUMERAL _0)) = F)) m))
T c= c==> ! c= c< b0 cNUMERAL c_0 cF * / c= c< b0 cNUMERAL c_0 cF f0 * / c= c< b0 cNUMERAL c_0 cF f0
+ |- ((\s. (!a. (((~ (s = EMPTY)) /\ (~ (affine_dependent s))) ==> ((circumcenter ((IMAGE (\x. ((vector_add a) x))) s)) = ((vector_add a) (circumcenter s)))))) S)
T * / ! c==> c/\ c~ c= b0 part cEMPTY c~ caffine_dependent b0 c= ccircumcenter * * part cIMAGE / cvector_add b1 b2 b0 cvector_add b1 ccircumcenter b0 f0
+ (~ (affine_dependent K)), (packing W), ((CARD K) = (NUMERAL (BIT1 (BIT1 _0)))), ((circumcenter K) = (vec (NUMERAL _0))), ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (K SUBSET W) |- ((packing W) /\ ((K SUBSET W) /\ ((~ (affine_dependent K)) /\ (((circumcenter K) = (vec (NUMERAL _0))) /\ (((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD K) = (NUMERAL (BIT1 (BIT1 _0)))))))))
T c==> c~ caffine_dependent f0 c==> cpacking f1 c==> c= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c==> c= ccircumcenter f0 cvec cNUMERAL c_0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 c/\ cpacking f1 c/\ cSUBSET f0 f1 c/\ c~ caffine_dependent f0 c/\ c= ccircumcenter f0 cvec cNUMERAL c_0 c/\ creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0
+ |- ((((~ (affine_dependent K)) ==> ((CARD K) <= ((dimindex UNIV) + (NUMERAL (BIT1 _0))))) ==> (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))) = (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))
T c= c==> c==> c~ caffine_dependent f0 c<= cCARD f0 c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
+ |- ((~ (((x $ i) = (v $ i)) ==> (((real_sub (v $ i)) (p $ i)) = ((real_sub (x $ i)) (p $ i))))) ==> F)
T c==> c~ c==> c= c$ f0 f1 c$ f2 f1 c= creal_sub c$ f2 f1 c$ f3 f1 creal_sub c$ f0 f1 c$ f3 f1 cF
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ (packing V), ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ ((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) |- (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))
T c==> cpacking f0 c==> c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= f2 ccircumcenter f1 creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 f2 cdistance c, b0 f2
+ |- ((\s. ((~ (affine_dependent s)) ==> (FINITE s))) s)
T * / c==> c~ caffine_dependent b0 cFINITE b0 f0
+ (~ (affine_dependent K)) |- (((((CARD K) = (NUMERAL _0)) = (K = EMPTY)) ==> (((K = EMPTY) ==> ((!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) = q')) ==> ((((CARD K) = (NUMERAL _0)) ==> (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))) = ((K = EMPTY) ==> q')))) = (((K = EMPTY) ==> ((!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) = q')) ==> ((((CARD K) = (NUMERAL _0)) ==> (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))) = ((K = EMPTY) ==> q'))))
T c==> c~ caffine_dependent f0 c= c==> c= c= cCARD f0 cNUMERAL c_0 c= f0 part cEMPTY c==> c==> c= f0 part cEMPTY c= ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 f2 c= c==> c= cCARD f0 cNUMERAL c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 c==> c= f0 part cEMPTY f2 c==> c==> c= f0 part cEMPTY c= ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 f2 c= c==> c= cCARD f0 cNUMERAL c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 c==> c= f0 part cEMPTY f2
- (~ (affine_dependent S)), (~ (S = EMPTY)), (packing V), (((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) = K), (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W), (p = (circumcenter S)), ((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (S SUBSET V) |- (((!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))
T c==> c~ caffine_dependent f0 c==> c~ c= f0 part cEMPTY c==> cpacking f1 c==> c= * * part cIMAGE / cvector_add cvector_neg f2 b0 f0 f3 c==> c= * * part cIMAGE / cvector_add cvector_neg f2 b0 f1 f4 c==> c= f2 ccircumcenter f0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 c==> c==> ! ! c==> c/\ cIN b0 f3 cIN b1 * * part cDIFF f4 f3 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 f2 cdistance c, b0 f2 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 f2 cdistance c, b0 f2
+ |- (((!q'. (((~ (affine_dependent S)) = p') ==> ((p' ==> (((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S)) = q')) ==> (((~ (affine_dependent S)) ==> ((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S))) = (p' ==> q'))))) ==> ((\q'. (((~ (affine_dependent S)) = p') ==> ((p' ==> (((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S)) = q')) ==> (((~ (affine_dependent S)) ==> ((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S))) = (p' ==> q'))))) q')) = ((\q'. (((~ (affine_dependent S)) = p') ==> ((p' ==> (((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S)) = q')) ==> (((~ (affine_dependent S)) ==> ((radV ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) = (radV S))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c~ caffine_dependent f0 f1 c==> c==> f1 c= c= cradV * * part cIMAGE / cvector_add cvector_neg f2 b1 f0 cradV f0 b0 c= c==> c~ caffine_dependent f0 c= cradV * * part cIMAGE / cvector_add cvector_neg f2 b1 f0 cradV f0 c==> f1 b0 * / c==> c= c~ caffine_dependent f0 f1 c==> c==> f1 c= c= cradV * * part cIMAGE / cvector_add cvector_neg f2 b1 f0 cradV f0 b0 c= c==> c~ caffine_dependent f0 c= cradV * * part cIMAGE / cvector_add cvector_neg f2 b1 f0 cradV f0 c==> f1 b0 f3 * / c==> c= c~ caffine_dependent f0 f1 c==> c==> f1 c= c= cradV * * part cIMAGE / cvector_add cvector_neg f2 b1 f0 cradV f0 b0 c= c==> c~ caffine_dependent f0 c= cradV * * part cIMAGE / cvector_add cvector_neg f2 b1 f0 cradV f0 c==> f1 b0 f3
+ |- (((!x. ((x IN (s DIFF t)) = ((x IN s) /\ (~ (x IN t))))) ==> ((\x. ((x IN (s DIFF t)) = ((x IN s) /\ (~ (x IN t))))) x)) = ((\x. ((x IN (s DIFF t)) = ((x IN s) /\ (~ (x IN t))))) x))
T c= c==> ! c= cIN b0 * * part cDIFF f0 f1 c/\ cIN b0 f0 c~ cIN b0 f1 * / c= cIN b0 * * part cDIFF f0 f1 c/\ cIN b0 f0 c~ cIN b0 f1 f2 * / c= cIN b0 * * part cDIFF f0 f1 c/\ cIN b0 f0 c~ cIN b0 f1 f2
+ |- ((\s. (!t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t))))) s)
T * / ! c==> cSUBSET b0 b1 cSUBSET * * part cIMAGE f0 b0 * * part cIMAGE f0 b1 f1
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((real_add (real_neg (a $ i))) (b $ i)) = ((real_sub (b $ i)) (a $ i))) = (((lambdai. ((real_add ((lambdai. (real_neg (a $ i))) $ i)) (b $ i))) $ i) = ((lambdai. ((real_sub (b $ i)) (a $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= creal_add creal_neg c$ f1 f0 c$ f2 f0 creal_sub c$ f2 f0 c$ f1 f0 c= c$ clambda / creal_add c$ clambda / creal_neg c$ f1 b1 b0 c$ f2 b0 f0 c$ clambda / creal_sub c$ f2 b0 c$ f1 b0 f0
+ |- ((\t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2)))))) t1)
T * / ! c/\ c= c~ c/\ b0 b1 c\/ c~ b0 c~ b1 c= c~ c\/ b0 b1 c/\ c~ b0 c~ b1 f0
+ |- ((((~ (((x $ i) = (x' $ i)) ==> (((real_add (real_neg (p $ i))) (x $ i)) = ((real_add (real_neg (p $ i))) (x' $ i))))) ==> F) ==> (((x $ i) = (x' $ i)) ==> (((real_add (real_neg (p $ i))) (x $ i)) = ((real_add (real_neg (p $ i))) (x' $ i))))) = (((x $ i) = (x' $ i)) ==> (((real_add (real_neg (p $ i))) (x $ i)) = ((real_add (real_neg (p $ i))) (x' $ i)))))
T c= c==> c==> c~ c==> c= c$ f0 f1 c$ f2 f1 c= creal_add creal_neg c$ f3 f1 c$ f0 f1 creal_add creal_neg c$ f3 f1 c$ f2 f1 cF c==> c= c$ f0 f1 c$ f2 f1 c= creal_add creal_neg c$ f3 f1 c$ f0 f1 creal_add creal_neg c$ f3 f1 c$ f2 f1 c==> c= c$ f0 f1 c$ f2 f1 c= creal_add creal_neg c$ f3 f1 c$ f0 f1 creal_add creal_neg c$ f3 f1 c$ f2 f1
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- (~ (x = x')) |- (((~ (x' = x)) ==> ((x' = x) = F)) = ((x' = x) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
+ |- (((x = x') ==> (((vector_add (vector_neg p)) x) = ((vector_add (vector_neg p)) x'))) = (((((vector_add (vector_neg p)) x) = ((vector_add (vector_neg p)) x')) ==> (x = x')) /\ ((x = x') ==> (((vector_add (vector_neg p)) x) = ((vector_add (vector_neg p)) x')))))
T c= c==> c= f0 f1 c= cvector_add cvector_neg f2 f0 cvector_add cvector_neg f2 f1 c/\ c==> c= cvector_add cvector_neg f2 f0 cvector_add cvector_neg f2 f1 c= f0 f1 c==> c= f0 f1 c= cvector_add cvector_neg f2 f0 cvector_add cvector_neg f2 f1
+ (!u. (!v. (((u IN ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) /\ (v IN (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) DIFF ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) |- (!v. (((((vector_add (vector_neg p)) u) IN ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)) /\ (v IN (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) DIFF ((IMAGE (\x. ((vector_add (vector_neg p)) x))) S)))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (((vector_add (vector_neg p)) u) , (vec (NUMERAL _0)))))))
T c==> ! ! c==> c/\ cIN b0 * * part cIMAGE / cvector_add cvector_neg f0 b2 f1 cIN b1 * * part cDIFF * * part cIMAGE / cvector_add cvector_neg f0 b2 f2 * * part cIMAGE / cvector_add cvector_neg f0 b2 f1 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 ! c==> c/\ cIN cvector_add cvector_neg f0 f3 * * part cIMAGE / cvector_add cvector_neg f0 b1 f1 cIN b0 * * part cDIFF * * part cIMAGE / cvector_add cvector_neg f0 b1 f2 * * part cIMAGE / cvector_add cvector_neg f0 b1 f1 creal_gt cdistance c, b0 cvec cNUMERAL c_0 cdistance c, cvector_add cvector_neg f0 f3 cvec cNUMERAL c_0
- |- ((!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) ==> (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))))
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2
+ (!u. (!v. (((V u) /\ ((V v) /\ (~ (u = v)))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v)))))), (p = (circumcenter S)), ((?x. ((V x) /\ (v = ((vector_add (vector_neg p)) x)))) /\ (~ (u = v))) |- (!x. (((\x. ((V x) /\ (u = ((vector_add (vector_neg p)) x)))) x) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v)))))
T c==> ! ! c==> c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 c==> c= f1 ccircumcenter f2 c==> c/\ c? / c/\ * f0 b0 c= f3 cvector_add cvector_neg f1 b0 c~ c= f4 f3 ! c==> * / c/\ * f0 b1 c= f4 cvector_add cvector_neg f1 b1 b0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f4 f3
+ |- ((!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub v) p) $ i) = (((vector_sub x) p) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (v $ i))))) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub v) p) $ i) = (((vector_sub x) p) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (v $ i))))))
T c==> ! c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub f0 f1 b0 c$ cvector_sub f2 f1 b0 c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f2 b0 c$ f0 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub f0 f1 b0 c$ cvector_sub f2 f1 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f2 b0 c$ f0 b0
+ (~ (affine_dependent K)), (packing W), ((CARD K) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((circumcenter K) = (vec (NUMERAL _0))), ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (K SUBSET W) |- (((CARD K) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))
T c==> c~ caffine_dependent f0 c==> cpacking f1 c==> c= cCARD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= ccircumcenter f0 cvec cNUMERAL c_0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 c/\ c= cCARD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
+ (~ (affine_dependent S)), (~ (S = EMPTY)), (packing V), (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W), (p = (circumcenter S)), ((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (S SUBSET V) |- ((((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) = K) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))
T c==> c~ caffine_dependent f0 c==> c~ c= f0 part cEMPTY c==> cpacking f1 c==> c= * * part cIMAGE / cvector_add cvector_neg f2 b0 f1 f3 c==> c= f2 ccircumcenter f0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 c==> c= * * part cIMAGE / cvector_add cvector_neg f2 b0 f0 f4 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 f2 cdistance c, b0 f2
+ (~ (x = x')) |- ((x = x') = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
+ (!u. (!v. (((V u) /\ ((V v) /\ (~ (u = v)))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (u , v)))))) |- (((V x) /\ ((V x') /\ (~ (x = x')))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x'))))
T c==> ! ! c==> c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 c==> c/\ * f0 f1 c/\ * f0 f2 c~ c= f1 f2 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2
+ |- (((!s. (!a. ((~ (affine_dependent s)) ==> ((radV ((IMAGE (\x. ((vector_add a) x))) s)) = (radV s))))) ==> ((\s. (!a. ((~ (affine_dependent s)) ==> ((radV ((IMAGE (\x. ((vector_add a) x))) s)) = (radV s))))) S)) = ((\s. (!a. ((~ (affine_dependent s)) ==> ((radV ((IMAGE (\x. ((vector_add a) x))) s)) = (radV s))))) S))
T c= c==> ! ! c==> c~ caffine_dependent b0 c= cradV * * part cIMAGE / cvector_add b1 b2 b0 cradV b0 * / ! c==> c~ caffine_dependent b0 c= cradV * * part cIMAGE / cvector_add b1 b2 b0 cradV b0 f0 * / ! c==> c~ caffine_dependent b0 c= cradV * * part cIMAGE / cvector_add b1 b2 b0 cradV b0 f0
+ |- ((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0)))
T c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ (~ (affine_dependent S)), (~ (S = EMPTY)), (((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) = K), (p = (circumcenter S)), ((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) |- (((circumcenter K) = (vec (NUMERAL _0))) /\ ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c~ caffine_dependent f0 c==> c~ c= f0 part cEMPTY c==> c= * * part cIMAGE / cvector_add cvector_neg f1 b0 f0 f2 c==> c= f1 ccircumcenter f0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= ccircumcenter f2 cvec cNUMERAL c_0 creal_lt cradV f2 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!p'. (!q'. (((~ (x = x')) = p') ==> ((p' ==> ((((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x'))))) = q')) ==> (((~ (x = x')) ==> (((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x')))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((~ (x = x')) = p') ==> ((p' ==> ((((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x'))))) = q')) ==> (((~ (x = x')) ==> (((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x')))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((~ (x = x')) = p') ==> ((p' ==> ((((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x'))))) = q')) ==> (((~ (x = x')) ==> (((~ (x = x')) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (x , x')))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (((vector_add (vector_neg (circumcenter S))) x) , ((vector_add (vector_neg (circumcenter S))) x')))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c~ c= f0 f1 b0 c==> c==> b0 c= c==> c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f2 f0 cvector_add cvector_neg ccircumcenter f2 f1 b1 c= c==> c~ c= f0 f1 c==> c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f2 f0 cvector_add cvector_neg ccircumcenter f2 f1 c==> b0 b1 * / ! c==> c= c~ c= f0 f1 b0 c==> c==> b0 c= c==> c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f2 f0 cvector_add cvector_neg ccircumcenter f2 f1 b1 c= c==> c~ c= f0 f1 c==> c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f2 f0 cvector_add cvector_neg ccircumcenter f2 f1 c==> b0 b1 f3 * / ! c==> c= c~ c= f0 f1 b0 c==> c==> b0 c= c==> c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f2 f0 cvector_add cvector_neg ccircumcenter f2 f1 b1 c= c==> c~ c= f0 f1 c==> c==> c~ c= f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, cvector_add cvector_neg ccircumcenter f2 f0 cvector_add cvector_neg ccircumcenter f2 f1 c==> b0 b1 f3
- (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))), ((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) |- ((!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) /\ (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))
T c==> ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= ccircumcenter f1 cvec cNUMERAL c_0 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT1 cBIT1 c_0 c/\ ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (v $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub v) p) $ i) = (((vector_sub x) p) $ i)))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub f1 f2 b0 c$ cvector_sub f0 f2 b0
+ ((radV K) = (radV S)), ((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) |- (((radV K) = (radV S)) /\ (((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = T))
T c==> c= cradV f0 cradV f1 c==> creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cradV f0 cradV f1 c= creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
+ |- ((((k = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) \/ ((k = (NUMERAL (BIT1 (BIT1 _0)))) \/ ((k = (NUMERAL (BIT0 (BIT1 _0)))) \/ ((k = (NUMERAL (BIT1 _0))) \/ (k = (NUMERAL _0)))))) = ((k = (NUMERAL _0)) \/ ((k = (NUMERAL (BIT1 _0))) \/ ((k = (NUMERAL (BIT0 (BIT1 _0)))) \/ ((k = (NUMERAL (BIT1 (BIT1 _0)))) \/ (k = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) = (((k = (SUC (SUC (SUC (SUC (NUMERAL _0)))))) \/ ((k = (SUC (SUC (SUC (NUMERAL _0))))) \/ ((k = (SUC (SUC (NUMERAL _0)))) \/ ((k = (SUC (NUMERAL _0))) \/ (k = (NUMERAL _0)))))) = ((k = (NUMERAL _0)) \/ ((k = (NUMERAL (BIT1 _0))) \/ ((k = (NUMERAL (BIT0 (BIT1 _0)))) \/ ((k = (NUMERAL (BIT1 (BIT1 _0)))) \/ (k = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))
T c= c= c\/ c= f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ c= f0 cNUMERAL cBIT1 cBIT1 c_0 c\/ c= f0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c= f0 cNUMERAL cBIT1 c_0 c= f0 cNUMERAL c_0 c\/ c= f0 cNUMERAL c_0 c\/ c= f0 cNUMERAL cBIT1 c_0 c\/ c= f0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c= f0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c\/ c= f0 cSUC cSUC cSUC cSUC cNUMERAL c_0 c\/ c= f0 cSUC cSUC cSUC cNUMERAL c_0 c\/ c= f0 cSUC cSUC cNUMERAL c_0 c\/ c= f0 cSUC cNUMERAL c_0 c= f0 cNUMERAL c_0 c\/ c= f0 cNUMERAL c_0 c\/ c= f0 cNUMERAL cBIT1 c_0 c\/ c= f0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c= f0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ (~ (affine_dependent K)) |- (((((CARD K) = (NUMERAL _0)) \/ (((CARD K) = (NUMERAL (BIT1 _0))) \/ (((CARD K) = (NUMERAL (BIT0 (BIT1 _0)))) \/ (((CARD K) = (NUMERAL (BIT1 (BIT1 _0)))) \/ ((CARD K) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))) = (((~ (affine_dependent K)) ==> ((CARD K) <= ((dimindex UNIV) + (NUMERAL (BIT1 _0))))) ==> (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))
T c==> c~ caffine_dependent f0 c= c==> c\/ c= cCARD f0 cNUMERAL c_0 c\/ c= cCARD f0 cNUMERAL cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 c==> c==> c~ caffine_dependent f0 c<= cCARD f0 c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
+ |- ((\f. (!s. (!t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t)))))) f)
T * / ! ! c==> cSUBSET b1 b2 cSUBSET * * part cIMAGE b0 b1 * * part cIMAGE b0 b2 f0
+ (~ (S = EMPTY)) |- ((S = EMPTY) = F)
T c==> c~ c= f0 part cEMPTY c= c= f0 part cEMPTY cF
- (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) |- ((((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))) = T)
T c==> ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 c= c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= ccircumcenter f1 cvec cNUMERAL c_0 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 cT
- |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x = x') |- ((x = x') /\ (((vector_add (vector_neg p)) x) = ((vector_add (vector_neg p)) x')))
T c==> c= f0 f1 c/\ c= f0 f1 c= cvector_add cvector_neg f2 f0 cvector_add cvector_neg f2 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))), ((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) |- (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) /\ (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= f2 ccircumcenter f1 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT0 cBIT1 c_0 c/\ c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= f2 ccircumcenter f1 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 f2 cdistance c, b0 f2
- ((((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (affine_dependent K)), (packing W), (K SUBSET W) |- (((circumcenter K) = (vec (NUMERAL _0))) ==> (((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))
T c==> c~ caffine_dependent f0 c==> cpacking f1 c==> cSUBSET f0 f1 c==> c= ccircumcenter f0 cvec cNUMERAL c_0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) |- ((!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))) = T)
T c==> ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 c= ! c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= ccircumcenter b0 cvec cNUMERAL c_0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b0 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b1 b0 cIN b2 * * part cDIFF f0 b0 creal_gt cdistance c, b2 cvec cNUMERAL c_0 cdistance c, b1 cvec cNUMERAL c_0 cT
- ((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) |- ((!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))
T c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= f2 ccircumcenter f1 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 f2 cdistance c, b0 f2
- |- (((!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))) ==> ((!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))))
T c==> c==> ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 ! ! c==> c/\ cIN b0 f2 cIN b1 * * part cDIFF f3 f2 creal_gt cdistance c, b1 f4 cdistance c, b0 f4 c==> ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 ! ! c==> c/\ cIN b0 f2 cIN b1 * * part cDIFF f3 f2 creal_gt cdistance c, b1 f4 cdistance c, b0 f4
- (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) |- (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))
T c==> ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 ! c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= ccircumcenter b0 cvec cNUMERAL c_0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b0 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b1 b0 cIN b2 * * part cDIFF f0 b0 creal_gt cdistance c, b2 cvec cNUMERAL c_0 cdistance c, b1 cvec cNUMERAL c_0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0
- (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) |- ((!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) /\ (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))))
T c==> ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 c/\ ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0
- (((vector_sub v) p) = ((vector_sub x) p)) |- ((((vector_sub v) p) = ((vector_sub x) p)) /\ (x = v))
T c==> c= cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= cvector_sub f0 f1 cvector_sub f2 f1 c= f2 f0
- (x' = x) |- (x = x')
T c==> c= f0 f1 c= f1 f0
- (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) |- (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))
T c==> ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 ! c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= ccircumcenter b0 cvec cNUMERAL c_0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b1 b0 cIN b2 * * part cDIFF f0 b0 creal_gt cdistance c, b2 cvec cNUMERAL c_0 cdistance c, b1 cvec cNUMERAL c_0
- F |- (F = T)
T c==> cF c= cF cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))), ((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) |- ((!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) /\ (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))
T c==> ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= ccircumcenter f1 cvec cNUMERAL c_0 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((k < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((k = (NUMERAL _0)) \/ ((k = (NUMERAL (BIT1 _0))) \/ ((k = (NUMERAL (BIT0 (BIT1 _0)))) \/ ((k = (NUMERAL (BIT1 (BIT1 _0)))) \/ (k = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) = T)
T c= c= c< f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c\/ c= f0 cNUMERAL c_0 c\/ c= f0 cNUMERAL cBIT1 c_0 c\/ c= f0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c= f0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cT
- |- ((real_neg ((real_sub ((real_add (real_neg (p $ i))) (p $ i))) (real_of_num (NUMERAL _0)))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_add creal_neg c$ f0 f1 c$ f0 f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) |- (((!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))) ==> ((\p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))) p)) = ((\p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))) p))
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 c= c==> ! c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= b0 ccircumcenter f1 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b1 f1 cIN b2 * * part cDIFF f0 f1 creal_gt cdistance c, b2 b0 cdistance c, b1 b0 * / c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= b0 ccircumcenter f1 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b1 f1 cIN b2 * * part cDIFF f0 f1 creal_gt cdistance c, b2 b0 cdistance c, b1 b0 f2 * / c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= b0 ccircumcenter f1 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b1 f1 cIN b2 * * part cDIFF f0 f1 creal_gt cdistance c, b2 b0 cdistance c, b1 b0 f2
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) |- (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 ! ! c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= b1 ccircumcenter b0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b0 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b2 b0 cIN b3 * * part cDIFF f0 b0 creal_gt cdistance c, b3 b1 cdistance c, b2 b1
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_gt y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul f0 f1 creal_of_num cNUMERAL c_0
- |- ((real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
- |- ((((((vector_sub u) p) IN ((IMAGE (\x. ((vector_sub x) p))) S)) /\ (((vector_sub v) p) IN (((IMAGE (\x. ((vector_sub x) p))) V) DIFF ((IMAGE (\x. ((vector_sub x) p))) S)))) ==> ((real_gt (vector_norm ((vector_sub v) p))) (vector_norm ((vector_sub u) p)))) ==> (((((vector_sub u) p) IN ((IMAGE (\x. ((vector_sub x) p))) S)) /\ (((vector_sub v) p) IN (((IMAGE (\x. ((vector_sub x) p))) V) DIFF ((IMAGE (\x. ((vector_sub x) p))) S)))) ==> ((real_gt (vector_norm ((vector_sub v) p))) (vector_norm ((vector_sub u) p)))))
T c==> c==> c/\ cIN cvector_sub f0 f1 * * part cIMAGE / cvector_sub b0 f1 f2 cIN cvector_sub f3 f1 * * part cDIFF * * part cIMAGE / cvector_sub b0 f1 f4 * * part cIMAGE / cvector_sub b0 f1 f2 creal_gt cvector_norm cvector_sub f3 f1 cvector_norm cvector_sub f0 f1 c==> c/\ cIN cvector_sub f0 f1 * * part cIMAGE / cvector_sub b0 f1 f2 cIN cvector_sub f3 f1 * * part cDIFF * * part cIMAGE / cvector_sub b0 f1 f4 * * part cIMAGE / cvector_sub b0 f1 f2 creal_gt cvector_norm cvector_sub f3 f1 cvector_norm cvector_sub f0 f1
- (((((vector_sub u) p) IN ((IMAGE (\x. ((vector_sub x) p))) S)) /\ (((vector_sub v) p) IN (((IMAGE (\x. ((vector_sub x) p))) V) DIFF ((IMAGE (\x. ((vector_sub x) p))) S)))) ==> ((real_gt (vector_norm ((vector_sub v) p))) (vector_norm ((vector_sub u) p)))) |- ((((((vector_sub u) p) IN ((IMAGE (\x. ((vector_sub x) p))) S)) /\ (((vector_sub v) p) IN (((IMAGE (\x. ((vector_sub x) p))) V) DIFF ((IMAGE (\x. ((vector_sub x) p))) S)))) ==> ((real_gt (vector_norm ((vector_sub v) p))) (vector_norm ((vector_sub u) p)))) /\ (((((vector_sub u) p) IN ((IMAGE (\x. ((vector_sub x) p))) S)) /\ (((vector_sub v) p) IN (((IMAGE (\x. ((vector_sub x) p))) V) DIFF ((IMAGE (\x. ((vector_sub x) p))) S)))) ==> ((real_gt (vector_norm ((vector_sub v) p))) (vector_norm ((vector_sub u) p)))))
T c==> c==> c/\ cIN cvector_sub f0 f1 * * part cIMAGE / cvector_sub b0 f1 f2 cIN cvector_sub f3 f1 * * part cDIFF * * part cIMAGE / cvector_sub b0 f1 f4 * * part cIMAGE / cvector_sub b0 f1 f2 creal_gt cvector_norm cvector_sub f3 f1 cvector_norm cvector_sub f0 f1 c/\ c==> c/\ cIN cvector_sub f0 f1 * * part cIMAGE / cvector_sub b0 f1 f2 cIN cvector_sub f3 f1 * * part cDIFF * * part cIMAGE / cvector_sub b0 f1 f4 * * part cIMAGE / cvector_sub b0 f1 f2 creal_gt cvector_norm cvector_sub f3 f1 cvector_norm cvector_sub f0 f1 c==> c/\ cIN cvector_sub f0 f1 * * part cIMAGE / cvector_sub b0 f1 f2 cIN cvector_sub f3 f1 * * part cDIFF * * part cIMAGE / cvector_sub b0 f1 f4 * * part cIMAGE / cvector_sub b0 f1 f2 creal_gt cvector_norm cvector_sub f3 f1 cvector_norm cvector_sub f0 f1
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) |- ((!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) /\ (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))))
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 c/\ ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2
- ((((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) |- ((\V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) V)
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 * / ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 f0
- ((((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0))) = ((((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0
- |- (((!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) ==> ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)) = ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) |- ((!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))) = T)
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 c= ! c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= b0 ccircumcenter f1 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD f1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b1 f1 cIN b2 * * part cDIFF f0 f1 creal_gt cdistance c, b2 b0 cdistance c, b1 b0 cT
- |- (((p \/ q) \/ r) = (p \/ (q \/ r)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- (~ (S = EMPTY)) |- (((~ (EMPTY = S)) ==> ((EMPTY = S) = F)) = ((EMPTY = S) = F))
T c==> c~ c= f0 part cEMPTY c= c==> c~ c= part cEMPTY f0 c= c= part cEMPTY f0 cF c= c= part cEMPTY f0 cF
- |- ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2)))
T c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
- |- (((!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) ==> (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))))))) = (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))))
T c= c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2
- |- (((!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (g i)))) ==> (((sum (m .. n)) f) = ((sum (m .. n)) g)))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 f2 csum * * part c.. f0 f1 f3
- (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) |- ((!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) /\ (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))))
T c==> ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 c/\ ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0
- |- (((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) |- ((((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))) = T)
T c==> ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 c= c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= ccircumcenter f1 cvec cNUMERAL c_0 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 cT
- (~ (S = EMPTY)) |- (~ (EMPTY = S))
T c==> c~ c= f0 part cEMPTY c~ c= part cEMPTY f0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) |- ((((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))) = T)
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 c= c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= f2 ccircumcenter f1 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD f1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 f2 cdistance c, b0 f2 cT
- |- ((!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) ==> (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))))
T c==> ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W) ==> (?W. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W)))
T c==> c= * * part cIMAGE / cvector_add cvector_neg f0 b0 f1 f2 c? / c= * * part cIMAGE / cvector_add cvector_neg f0 b1 f1 b0
- ((((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))
T c= cIN f0 * part cGSPEC / * f1 * part cSETSPEC b0 * f1 / / c/\ b0 c= f0 b1
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) |- ((\p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))) p)
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 * / c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= b0 ccircumcenter f1 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD f1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b1 f1 cIN b2 * * part cDIFF f0 f1 creal_gt cdistance c, b2 b0 cdistance c, b1 b0 f2
- (packing W), (K SUBSET W) |- ((K SUBSET W) /\ ((~ (affine_dependent K)) ==> (((circumcenter K) = (vec (NUMERAL _0))) ==> (((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))))
T c==> cpacking f0 c==> cSUBSET f1 f0 c/\ cSUBSET f1 f0 c==> c~ caffine_dependent f1 c==> c= ccircumcenter f1 cvec cNUMERAL c_0 c==> creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
- (~ (affine_dependent K)), (packing W), ((circumcenter K) = (vec (NUMERAL _0))), (K SUBSET W) |- (((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))
T c==> c~ caffine_dependent f0 c==> cpacking f1 c==> c= ccircumcenter f0 cvec cNUMERAL c_0 c==> cSUBSET f0 f1 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
- |- ((!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) ==> (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))))
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) |- (((!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))))) ==> ((\S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))))) S)) = ((\S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))))) S))
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 c= c==> ! ! c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= b1 ccircumcenter b0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b2 b0 cIN b3 * * part cDIFF f0 b0 creal_gt cdistance c, b3 b1 cdistance c, b2 b1 * / ! c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= b1 ccircumcenter b0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b2 b0 cIN b3 * * part cDIFF f0 b0 creal_gt cdistance c, b3 b1 cdistance c, b2 b1 f1 * / ! c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= b1 ccircumcenter b0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b2 b0 cIN b3 * * part cDIFF f0 b0 creal_gt cdistance c, b3 b1 cdistance c, b2 b1 f1
- (((real_ge (real_of_int _3496667)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496667)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _3496667)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _3496667)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _3496667)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) |- ((!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))
T c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= ccircumcenter f1 cvec cNUMERAL c_0 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT1 cBIT1 c_0 c==> ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
- (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) |- ((\V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) V)
T c==> ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 * / ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 f0
- (~ (((real_add (real_neg (p $ i))) (p $ i)) = (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_add creal_neg c$ f0 f1 c$ f0 f1 creal_of_num cNUMERAL c_0 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((~ (((real_add (real_neg (p $ i))) (p $ i)) = (real_of_num (NUMERAL _0)))) ==> F)
T c==> c~ c= creal_add creal_neg c$ f0 f1 c$ f0 f1 creal_of_num cNUMERAL c_0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (x = x')) |- (~ (x' = x))
T c==> c~ c= f0 f1 c~ c= f1 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c= c* cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))), ((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) |- ((!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) /\ (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= f2 ccircumcenter f1 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT0 cBIT1 c_0 c/\ ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 f2 cdistance c, b0 f2
- ((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) |- ((!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))
T c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= f2 ccircumcenter f1 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD f1 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 f2 cdistance c, b0 f2
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- |- ((!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) ==> (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))))
T c==> ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0
- (~ (affine_dependent K)), ((CARD K) = (NUMERAL _0)) |- (((CARD K) = (NUMERAL _0)) /\ (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))
T c==> c~ caffine_dependent f0 c==> c= cCARD f0 cNUMERAL c_0 c/\ c= cCARD f0 cNUMERAL c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
- |- (((!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) ==> (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))))) = (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))))
T c= c==> ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0
- (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) |- (((!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))) ==> ((\S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))) S)) = ((\S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))) S))
T c==> ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 c= c==> ! c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= ccircumcenter b0 cvec cNUMERAL c_0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b1 b0 cIN b2 * * part cDIFF f0 b0 creal_gt cdistance c, b2 cvec cNUMERAL c_0 cdistance c, b1 cvec cNUMERAL c_0 * / c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= ccircumcenter b0 cvec cNUMERAL c_0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b1 b0 cIN b2 * * part cDIFF f0 b0 creal_gt cdistance c, b2 cvec cNUMERAL c_0 cdistance c, b1 cvec cNUMERAL c_0 f1 * / c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= ccircumcenter b0 cvec cNUMERAL c_0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b1 b0 cIN b2 * * part cDIFF f0 b0 creal_gt cdistance c, b2 cvec cNUMERAL c_0 cdistance c, b1 cvec cNUMERAL c_0 f1
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) |- ((\S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))))) S)
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 * / ! c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= b1 ccircumcenter b0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b2 b0 cIN b3 * * part cDIFF f0 b0 creal_gt cdistance c, b3 b1 cdistance c, b2 b1 f1
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) |- ((\S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))))) S)
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 * / ! c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= b1 ccircumcenter b0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b0 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b2 b0 cIN b3 * * part cDIFF f0 b0 creal_gt cdistance c, b3 b1 cdistance c, b2 b1 f1
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (x = x')) |- ((x' = x) = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) |- (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 ! ! c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= b1 ccircumcenter b0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b2 b0 cIN b3 * * part cDIFF f0 b0 creal_gt cdistance c, b3 b1 cdistance c, b2 b1
- ((((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0
- (FINITE s) |- ((FINITE s) /\ (((CARD s) = (NUMERAL _0)) = (s = EMPTY)))
T c==> cFINITE f0 c/\ cFINITE f0 c= c= cCARD f0 cNUMERAL c_0 c= f0 part cEMPTY
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) |- ((((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))) = T)
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 c= c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= f2 ccircumcenter f1 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 f2 cdistance c, b0 f2 cT
- (packing W) |- ((packing W) /\ ((K SUBSET W) ==> ((~ (affine_dependent K)) ==> (((circumcenter K) = (vec (NUMERAL _0))) ==> (((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))))))
T c==> cpacking f0 c/\ cpacking f0 c==> cSUBSET f1 f0 c==> c~ caffine_dependent f1 c==> c= ccircumcenter f1 cvec cNUMERAL c_0 c==> creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
- |- ((?W. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W)) ==> (?W. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W)))
T c==> c? / c= * * part cIMAGE / cvector_add cvector_neg f0 b1 f1 b0 c? / c= * * part cIMAGE / cvector_add cvector_neg f0 b1 f1 b0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))) |- (((!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))) /\ ((!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))))
T c==> c==> ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 ! ! c==> c/\ cIN b0 f2 cIN b1 * * part cDIFF f3 f2 creal_gt cdistance c, b1 f4 cdistance c, b0 f4 c/\ c==> ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 ! ! c==> c/\ cIN b0 f2 cIN b1 * * part cDIFF f3 f2 creal_gt cdistance c, b1 f4 cdistance c, b0 f4 c==> ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 ! ! c==> c/\ cIN b0 f2 cIN b1 * * part cDIFF f3 f2 creal_gt cdistance c, b1 f4 cdistance c, b0 f4
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 f2 creal_of_num cNUMERAL c_0
- |- (((!x. (((\W. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W)) x) ==> (?W. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W)))) ==> ((?W. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W)) ==> (?W. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W)))) = ((?W. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W)) ==> (?W. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W))))
T c= c==> ! c==> * / c= * * part cIMAGE / cvector_add cvector_neg f0 b2 f1 b1 b0 c? / c= * * part cIMAGE / cvector_add cvector_neg f0 b2 f1 b1 c==> c? / c= * * part cIMAGE / cvector_add cvector_neg f0 b1 f1 b0 c? / c= * * part cIMAGE / cvector_add cvector_neg f0 b1 f1 b0 c==> c? / c= * * part cIMAGE / cvector_add cvector_neg f0 b1 f1 b0 c? / c= * * part cIMAGE / cvector_add cvector_neg f0 b1 f1 b0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (S SUBSET V) |- (T = (S SUBSET V))
T c==> cSUBSET f0 f1 c= cT cSUBSET f0 f1
- (((real_ge (real_of_int _3496667)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496667)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((((vector_sub u) p) IN ((IMAGE (\x. ((vector_sub x) p))) S)) /\ (((vector_sub v) p) IN (((IMAGE (\x. ((vector_sub x) p))) V) DIFF ((IMAGE (\x. ((vector_sub x) p))) S)))) |- ((((((vector_sub u) p) IN ((IMAGE (\x. ((vector_sub x) p))) S)) /\ (((vector_sub v) p) IN (((IMAGE (\x. ((vector_sub x) p))) V) DIFF ((IMAGE (\x. ((vector_sub x) p))) S)))) ==> ((real_gt (vector_norm ((vector_sub v) p))) (vector_norm ((vector_sub u) p)))) ==> ((real_gt (vector_norm ((vector_sub v) p))) (vector_norm ((vector_sub u) p))))
T c==> c/\ cIN cvector_sub f0 f1 * * part cIMAGE / cvector_sub b0 f1 f2 cIN cvector_sub f3 f1 * * part cDIFF * * part cIMAGE / cvector_sub b0 f1 f4 * * part cIMAGE / cvector_sub b0 f1 f2 c==> c==> c/\ cIN cvector_sub f0 f1 * * part cIMAGE / cvector_sub b0 f1 f2 cIN cvector_sub f3 f1 * * part cDIFF * * part cIMAGE / cvector_sub b0 f1 f4 * * part cIMAGE / cvector_sub b0 f1 f2 creal_gt cvector_norm cvector_sub f3 f1 cvector_norm cvector_sub f0 f1 creal_gt cvector_norm cvector_sub f3 f1 cvector_norm cvector_sub f0 f1
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) |- (((!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))) ==> ((\p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))) p)) = ((\p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))) p))
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 c= c==> ! c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= b0 ccircumcenter f1 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD f1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b1 f1 cIN b2 * * part cDIFF f0 f1 creal_gt cdistance c, b2 b0 cdistance c, b1 b0 * / c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= b0 ccircumcenter f1 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD f1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b1 f1 cIN b2 * * part cDIFF f0 f1 creal_gt cdistance c, b2 b0 cdistance c, b1 b0 f2 * / c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= b0 ccircumcenter f1 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD f1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b1 f1 cIN b2 * * part cDIFF f0 f1 creal_gt cdistance c, b2 b0 cdistance c, b1 b0 f2
- |- ((((\W. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W)) W) ==> (?W. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W))) = T)
T c= c==> * / c= * * part cIMAGE / cvector_add cvector_neg f0 b1 f1 b0 f2 c? / c= * * part cIMAGE / cvector_add cvector_neg f0 b1 f1 b0 cT
- (x = v) |- ((x = v) /\ (((vector_sub v) p) = ((vector_sub x) p)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cvector_sub f1 f2 cvector_sub f0 f2
- ((((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _3496667)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496667)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496667))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _3496667)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (!W. (((\W. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W)) W) ==> (?W. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W))))
T c==> * / c= * * part cIMAGE / cvector_add cvector_neg f0 b1 f1 b0 f2 c? / c= * * part cIMAGE / cvector_add cvector_neg f0 b1 f1 b0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- ((\k. ((k < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((k = (NUMERAL _0)) \/ ((k = (NUMERAL (BIT1 _0))) \/ ((k = (NUMERAL (BIT0 (BIT1 _0)))) \/ ((k = (NUMERAL (BIT1 (BIT1 _0)))) \/ (k = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))) k)
T * / c= c< b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c\/ c= b0 cNUMERAL c_0 c\/ c= b0 cNUMERAL cBIT1 c_0 c\/ c= b0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c= b0 cNUMERAL cBIT1 cBIT1 c_0 c= b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0
- (S = EMPTY) |- (EMPTY = S)
T c==> c= f0 part cEMPTY c= part cEMPTY f0
- (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) |- (((!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))) ==> ((\S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))) S)) = ((\S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT1 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))) S))
T c==> ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 c= c==> ! c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= ccircumcenter b0 cvec cNUMERAL c_0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b0 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b1 b0 cIN b2 * * part cDIFF f0 b0 creal_gt cdistance c, b2 cvec cNUMERAL c_0 cdistance c, b1 cvec cNUMERAL c_0 * / c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= ccircumcenter b0 cvec cNUMERAL c_0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b0 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b1 b0 cIN b2 * * part cDIFF f0 b0 creal_gt cdistance c, b2 cvec cNUMERAL c_0 cdistance c, b1 cvec cNUMERAL c_0 f1 * / c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= ccircumcenter b0 cvec cNUMERAL c_0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b0 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c/\ cIN b1 b0 cIN b2 * * part cDIFF f0 b0 creal_gt cdistance c, b2 cvec cNUMERAL c_0 cdistance c, b1 cvec cNUMERAL c_0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) (real_of_num (NUMERAL _0)))) |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 c= c==> c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0
- |- (((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) ==> ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)) = ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
- (~ (S = EMPTY)) |- ((EMPTY = S) = F)
T c==> c~ c= f0 part cEMPTY c= c= part cEMPTY f0 cF
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- ((((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0)))) |- (((((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 c= c==> c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\x. (((real_mul x) ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))), ((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) |- (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= f2 ccircumcenter f1 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 f2 cdistance c, b0 f2
- |- ((((~ (((real_add (real_neg (p $ i))) (p $ i)) = (real_of_num (NUMERAL _0)))) ==> F) ==> (((real_add (real_neg (p $ i))) (p $ i)) = (real_of_num (NUMERAL _0)))) = (((real_add (real_neg (p $ i))) (p $ i)) = (real_of_num (NUMERAL _0))))
T c= c==> c==> c~ c= creal_add creal_neg c$ f0 f1 c$ f0 f1 creal_of_num cNUMERAL c_0 cF c= creal_add creal_neg c$ f0 f1 c$ f0 f1 creal_of_num cNUMERAL c_0 c= creal_add creal_neg c$ f0 f1 c$ f0 f1 creal_of_num cNUMERAL c_0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))
T c= c* cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) |- (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))))
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 ! c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= b0 ccircumcenter f1 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD f1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b1 f1 cIN b2 * * part cDIFF f0 f1 creal_gt cdistance c, b2 b0 cdistance c, b1 b0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))), ((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) |- (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) /\ (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= f2 ccircumcenter f1 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD f1 cNUMERAL cBIT1 c_0 c/\ c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= f2 ccircumcenter f1 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD f1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 f2 cdistance c, b0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (affine_dependent S)), (~ (S = EMPTY)), (packing V), (((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) = K), (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W), (p = (circumcenter S)), ((!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))), ((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (S SUBSET V) |- (((!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))) /\ (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))
T c==> c~ caffine_dependent f0 c==> c~ c= f0 part cEMPTY c==> cpacking f1 c==> c= * * part cIMAGE / cvector_add cvector_neg f2 b0 f0 f3 c==> c= * * part cIMAGE / cvector_add cvector_neg f2 b0 f1 f4 c==> c= f2 ccircumcenter f0 c==> c==> ! ! c==> c/\ cIN b0 f3 cIN b1 * * part cDIFF f4 f3 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 f2 cdistance c, b0 f2 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 c/\ c==> ! ! c==> c/\ cIN b0 f3 cIN b1 * * part cDIFF f4 f3 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 f2 cdistance c, b0 f2 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 f2 cdistance c, b0 f2
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) (real_of_num (NUMERAL _0))) = ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i)))) (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 c= creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) |- ((\p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))) p)
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 * / c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= b0 ccircumcenter f1 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b1 f1 cIN b2 * * part cDIFF f0 f1 creal_gt cdistance c, b2 b0 cdistance c, b1 b0 f2
- |- ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 * f1 b1 b1 * f1 f0
- (~ (affine_dependent S)), (~ (S = EMPTY)), (packing V), (((IMAGE (\x. ((vector_add (vector_neg p)) x))) S) = K), (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W), (p = (circumcenter S)), ((!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))), ((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (S SUBSET V) |- (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))
T c==> c~ caffine_dependent f0 c==> c~ c= f0 part cEMPTY c==> cpacking f1 c==> c= * * part cIMAGE / cvector_add cvector_neg f2 b0 f0 f3 c==> c= * * part cIMAGE / cvector_add cvector_neg f2 b0 f1 f4 c==> c= f2 ccircumcenter f0 c==> c==> ! ! c==> c/\ cIN b0 f3 cIN b1 * * part cDIFF f4 f3 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 f2 cdistance c, b0 f2 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 f2 cdistance c, b0 f2
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))), ((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) |- ((!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) /\ (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 c==> c/\ cpacking f0 c/\ cSUBSET f1 f0 c/\ c~ caffine_dependent f1 c/\ c= f2 ccircumcenter f1 c/\ creal_lt cradV f1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD f1 cNUMERAL cBIT1 c_0 c/\ ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 ! ! c==> c/\ cIN b0 f1 cIN b1 * * part cDIFF f0 f1 creal_gt cdistance c, b1 f2 cdistance c, b0 f2
- (!V. (!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p)))))))))) |- ((!S. (!p. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ ((p = (circumcenter S)) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) <= (NUMERAL (BIT1 _0)))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , p))) (distance (u , p))))))))) = T)
T c==> ! ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= b2 ccircumcenter b1 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b3 b1 cIN b4 * * part cDIFF b0 b1 creal_gt cdistance c, b4 b2 cdistance c, b3 b2 c= ! ! c==> c/\ cpacking f0 c/\ cSUBSET b0 f0 c/\ c~ caffine_dependent b0 c/\ c= b1 ccircumcenter b0 c/\ creal_lt cradV b0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD b0 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cIN b2 b0 cIN b3 * * part cDIFF f0 b0 creal_gt cdistance c, b3 b1 cdistance c, b2 b1 cT
- (~ (affine_dependent K)), (packing W), ((circumcenter K) = (vec (NUMERAL _0))), ((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (K SUBSET W) |- (((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))
T c==> c~ caffine_dependent f0 c==> cpacking f1 c==> c= ccircumcenter f0 cvec cNUMERAL c_0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 f1 c/\ creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
- |- (((p \/ p) = p) /\ ((p \/ (p \/ q)) = (p \/ q)))
T c/\ c= c\/ f0 f0 f0 c= c\/ f0 c\/ f0 f1 c\/ f0 f1
- ((((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0
- |- (((!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) ==> (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0)))))))))))) = (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))))
T c= c==> ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- ((((real_add (v $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) (x $ i)))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0
- ((\W. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W)) W) |- (((\W. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W)) W) /\ (?W. (((IMAGE (\x. ((vector_add (vector_neg p)) x))) V) = W)))
T c==> * / c= * * part cIMAGE / cvector_add cvector_neg f0 b1 f1 b0 f2 c/\ * / c= * * part cIMAGE / cvector_add cvector_neg f0 b1 f1 b0 f2 c? / c= * * part cIMAGE / cvector_add cvector_neg f0 b1 f1 b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) |- ((\V. (!S. (((packing V) /\ ((S SUBSET V) /\ ((~ (affine_dependent S)) /\ (((circumcenter S) = (vec (NUMERAL _0))) /\ (((real_lt (radV S)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((CARD S) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (!u. (!v. (((u IN S) /\ (v IN (V DIFF S))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))) V)
T c==> ! ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 * / ! c==> c/\ cpacking b0 c/\ cSUBSET b1 b0 c/\ c~ caffine_dependent b1 c/\ c= ccircumcenter b1 cvec cNUMERAL c_0 c/\ creal_lt cradV b1 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCARD b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b2 b1 cIN b3 * * part cDIFF b0 b1 creal_gt cdistance c, b3 cvec cNUMERAL c_0 cdistance c, b2 cvec cNUMERAL c_0 f0
- (~ (affine_dependent K)), (packing W), ((circumcenter K) = (vec (NUMERAL _0))), (K SUBSET W) |- (((circumcenter K) = (vec (NUMERAL _0))) /\ (((real_lt (radV K)) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!u. (!v. (((u IN K) /\ (v IN (W DIFF K))) ==> ((real_gt (distance (v , (vec (NUMERAL _0))))) (distance (u , (vec (NUMERAL _0))))))))))
T c==> c~ caffine_dependent f0 c==> cpacking f1 c==> c= ccircumcenter f0 cvec cNUMERAL c_0 c==> cSUBSET f0 f1 c/\ c= ccircumcenter f0 cvec cNUMERAL c_0 c==> creal_lt cradV f0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ cIN b0 f0 cIN b1 * * part cDIFF f1 f0 creal_gt cdistance c, b1 cvec cNUMERAL c_0 cdistance c, b0 cvec cNUMERAL c_0
