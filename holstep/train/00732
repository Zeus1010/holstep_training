N REAL_POLYNOMIAL_FUNCTION_DROP
C |- (!f. ((real_polynomial_function (drop o f)) = (vector_polynomial_function f)))
T c= creal_polynomial_function * * part co part cdrop f0 cvector_polynomial_function f0
D TRUTH
A |- T
T cT
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D DIMINDEX_1
A |- ((dimindex UNIV) = (NUMERAL (BIT1 _0)))
T c= cdimindex part cUNIV cNUMERAL cBIT1 c_0
D FORALL_1
A |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (P i))) = (P (NUMERAL (BIT1 _0))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 c_0 * f0 b0 * f0 cNUMERAL cBIT1 c_0
D drop
A |- (!x. ((drop x) = (x $ (NUMERAL (BIT1 _0)))))
T c= cdrop f0 c$ f0 cNUMERAL cBIT1 c_0
D vector_polynomial_function
A |- (!f. ((vector_polynomial_function f) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i)))))))
T c= cvector_polynomial_function f0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_polynomial_function / c$ * f0 b1 b0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ |- (((!f. ((vector_polynomial_function f) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))) ==> ((\f. ((vector_polynomial_function f) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))) f)) = ((\f. ((vector_polynomial_function f) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))) f))
T c= c==> ! c= cvector_polynomial_function b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV creal_polynomial_function / c$ * b0 b2 b1 * / c= cvector_polynomial_function b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV creal_polynomial_function / c$ * b0 b2 b1 f0 * / c= cvector_polynomial_function b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV creal_polynomial_function / c$ * b0 b2 b1 f0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
