N CONNECTED_COMPLEMENT_ABSOLUTE_RETRACT
C |- (!s. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((compact s) /\ (AR s))) ==> (connected (UNIV DIFF s))))
T c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ ccompact f0 cAR f0 cconnected * * part cDIFF part cUNIV f0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D IN_UNIV
A |- (!x. (x IN UNIV))
T cIN f0 part cUNIV
D IN_DIFF
A |- (!s. (!t. (!x. ((x IN (s DIFF t)) = ((x IN s) /\ (~ (x IN t)))))))
T c= cIN f0 * * part cDIFF f1 f2 c/\ cIN f0 f1 c~ cIN f0 f2
D COMPACT_IMP_BOUNDED
A |- (!s. ((compact s) ==> (bounded s)))
T c==> ccompact f0 cbounded f0
D CONNECTED_EQ_CONNECTED_COMPONENT_EQ
A |- (!s. ((connected s) = (!x. (!y. (((x IN s) /\ (y IN s)) ==> (((connected_component s) x) = ((connected_component s) y)))))))
T c= cconnected f0 ! ! c==> c/\ cIN b0 f0 cIN b1 f0 c= * * part cconnected_component f0 b0 * * part cconnected_component f0 b1
D IN_COMPONENTS
A |- (!u. (!s. ((s IN (components u)) = (?x. ((x IN u) /\ (s = ((connected_component u) x)))))))
T c= cIN f0 * part ccomponents f1 c? / c/\ cIN b0 f1 c= f0 * * part cconnected_component f1 b0
D COBOUNDED_UNIQUE_UNBOUNDED_COMPONENT
A |- (!s. (!x. (!y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y))))))
T c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV f0 c/\ c~ cbounded * * part cconnected_component f0 f1 c~ cbounded * * part cconnected_component f0 f2 c= * * part cconnected_component f0 f1 * * part cconnected_component f0 f2
D COMPACT_AR
A |- (!s. (((compact s) /\ (AR s)) = ((compact s) /\ ((retract_of s) UNIV))))
T c= c/\ ccompact f0 cAR f0 c/\ ccompact f0 cretract_of f0 part cUNIV
D UNBOUNDED_COMPONENTS_COMPLEMENT_ABSOLUTE_RETRACT
A |- (!s. (!c. (((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s))))) ==> (~ (bounded c)))))
T c==> c/\ ccompact f0 c/\ cAR f0 cIN f1 * part ccomponents * * part cDIFF part cUNIV f0 c~ cbounded f1
+ (compact s), ((x IN (UNIV DIFF s)) /\ (y IN (UNIV DIFF s))), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (x IN (UNIV DIFF s)), ((retract_of s) UNIV) |- (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) y))
T c==> ccompact f0 c==> c/\ cIN f1 * * part cDIFF part cUNIV f0 cIN f2 * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cretract_of f0 part cUNIV c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 f2
+ ((compact s) /\ ((retract_of s) UNIV)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- (connected (UNIV DIFF s))
T c==> c/\ ccompact f0 cretract_of f0 part cUNIV c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV cconnected * * part cDIFF part cUNIV f0
+ |- (((!u. (!s. ((s IN (components u)) = (?x. ((x IN u) /\ (s = ((connected_component u) x))))))) ==> ((\u. (!s. ((s IN (components u)) = (?x. ((x IN u) /\ (s = ((connected_component u) x))))))) u)) = ((\u. (!s. ((s IN (components u)) = (?x. ((x IN u) /\ (s = ((connected_component u) x))))))) u))
T c= c==> ! ! c= cIN b1 * part ccomponents b0 c? / c/\ cIN b2 b0 c= b1 * * part cconnected_component b0 b2 * / ! c= cIN b1 * part ccomponents b0 c? / c/\ cIN b2 b0 c= b1 * * part cconnected_component b0 b2 f0 * / ! c= cIN b1 * part ccomponents b0 c? / c/\ cIN b2 b0 c= b1 * * part cconnected_component b0 b2 f0
+ (compact s), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (x IN (UNIV DIFF s)), (y IN (UNIV DIFF s)), ((retract_of s) UNIV) |- (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))
T c==> ccompact f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> cretract_of f0 part cUNIV c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0
+ (compact s) |- (((compact (UNIV DIFF (UNIV DIFF s))) ==> ((bounded (UNIV DIFF (UNIV DIFF s))) = T)) = ((bounded (UNIV DIFF (UNIV DIFF s))) = T))
T c==> ccompact f0 c= c==> ccompact * * part cDIFF part cUNIV * * part cDIFF part cUNIV f0 c= cbounded * * part cDIFF part cUNIV * * part cDIFF part cUNIV f0 cT c= cbounded * * part cDIFF part cUNIV * * part cDIFF part cUNIV f0 cT
+ |- ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))))
T c==> cIN f0 * * part cDIFF part cUNIV f1 c==> cIN f2 * * part cDIFF part cUNIV f1 c? / c/\ cIN b0 * * part cDIFF part cUNIV f1 c= * * part cconnected_component * * part cDIFF part cUNIV f1 f0 * * part cconnected_component * * part cDIFF part cUNIV f1 b0
+ |- ((\x. (!y. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))))) x)
T * / ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN b0 * * part cDIFF part cUNIV f0 c==> cIN b1 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b2 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 b0 * * part cconnected_component * * part cDIFF part cUNIV f0 b2 cF f1
+ |- ((\u. (!s. ((s IN (components u)) = (?x. ((x IN u) /\ (s = ((connected_component u) x))))))) u)
T * / ! c= cIN b1 * part ccomponents b0 c? / c/\ cIN b2 b0 c= b1 * * part cconnected_component b0 b2 f0
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (_1431981 = _1431982)) \/ ((BIT1 _1431981) = (BIT1 _1431982)))
T c\/ c~ c= f0 f1 c= cBIT1 f0 cBIT1 f1
- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F))))))), (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))) |- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))))
T c==> c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c/\ c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF
+ (compact s), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (x IN (UNIV DIFF s)), (y IN (UNIV DIFF s)), ((retract_of s) UNIV) |- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF (UNIV DIFF s))) /\ ((~ (bounded ((connected_component (UNIV DIFF s)) x))) /\ (~ (bounded ((connected_component (UNIV DIFF s)) y))))))
T c==> ccompact f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> cretract_of f0 part cUNIV c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV * * part cDIFF part cUNIV f0 c/\ c~ cbounded * * part cconnected_component * * part cDIFF part cUNIV f0 f1 c~ cbounded * * part cconnected_component * * part cDIFF part cUNIV f0 f2
+ (?s. ((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s)))))) |- ((!s. (!c. (((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s))))) ==> (~ (bounded c))))) ==> (~ (bounded c)))
T c==> c? / c/\ ccompact b0 c/\ cAR b0 cIN f0 * part ccomponents * * part cDIFF part cUNIV b0 c==> ! ! c==> c/\ ccompact b0 c/\ cAR b0 cIN b1 * part ccomponents * * part cDIFF part cUNIV b0 c~ cbounded b1 c~ cbounded f0
+ (compact s), ((retract_of s) UNIV) |- ((?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x)))) = (((compact s) /\ ((retract_of s) UNIV)) /\ (((connected_component (UNIV DIFF s)) y) IN (components (UNIV DIFF s)))))
T c==> ccompact f0 c==> cretract_of f0 part cUNIV c= c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 c/\ c/\ ccompact f0 cretract_of f0 part cUNIV cIN * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * part ccomponents * * part cDIFF part cUNIV f0
- (_1431974 = _1431976) |- ((_1431973 = _1431975) ==> (((connected_component _1431973) _1431974) = ((connected_component _1431975) _1431976)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cconnected_component f2 f0 * * part cconnected_component f3 f1
- |- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))))
T c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF
+ |- ((\c. ((?s. ((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s)))))) ==> (~ (bounded c)))) c)
T * / c==> c? / c/\ ccompact b1 c/\ cAR b1 cIN b0 * part ccomponents * * part cDIFF part cUNIV b1 c~ cbounded b0 f0
+ (compact s) |- ((compact s) /\ ((bounded s) = T))
T c==> ccompact f0 c/\ ccompact f0 c= cbounded f0 cT
- |- ((_1431977 = _1431979) ==> ((~ (_1431978 = _1431980)) \/ ((_1431977 DIFF _1431978) = (_1431979 DIFF _1431980))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cDIFF f0 f2 * * part cDIFF f1 f3
- |- ((((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F))))))) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))))) = ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F))))))))
T c= c==> c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF
- |- ((?x. (P x)) = ((P T) \/ (P F)))
T c= c? / * f0 b0 c\/ * f0 cT * f0 cF
- (~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))), (compact s), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (x IN (UNIV DIFF s)), (y IN (UNIV DIFF s)), ((retract_of s) UNIV) |- ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) /\ F)
T c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 c==> ccompact f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f2 * * part cDIFF part cUNIV f0 c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cretract_of f0 part cUNIV c/\ c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF
- (_1431960 = _1431962), (_1431959 = _1431961) |- ((((_1431959 IN _1431960) = (_1431961 IN _1431962)) ==> ((_1431961 IN _1431962) \/ (~ (_1431959 IN _1431960)))) = ((_1431961 IN _1431962) \/ (~ (_1431959 IN _1431960))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cIN f2 f0 cIN f3 f1 c\/ cIN f3 f1 c~ cIN f2 f0 c\/ cIN f3 f1 c~ cIN f2 f0
- |- (((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F))))))) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F))))))))
T c==> c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF
+ (!s. (!x. (!y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y)))))) |- ((!y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y)))) = T)
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ c~ cbounded * * part cconnected_component b0 b1 c~ cbounded * * part cconnected_component b0 b2 c= * * part cconnected_component b0 b1 * * part cconnected_component b0 b2 c= ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV f0 c/\ c~ cbounded * * part cconnected_component f0 f1 c~ cbounded * * part cconnected_component f0 b0 c= * * part cconnected_component f0 f1 * * part cconnected_component f0 b0 cT
+ |- (((!s. ((s IN (components u)) = (?x. ((x IN u) /\ (s = ((connected_component u) x)))))) ==> ((\s. ((s IN (components u)) = (?x. ((x IN u) /\ (s = ((connected_component u) x)))))) s)) = ((\s. ((s IN (components u)) = (?x. ((x IN u) /\ (s = ((connected_component u) x)))))) s))
T c= c==> ! c= cIN b0 * part ccomponents f0 c? / c/\ cIN b1 f0 c= b0 * * part cconnected_component f0 b1 * / c= cIN b0 * part ccomponents f0 c? / c/\ cIN b1 f0 c= b0 * * part cconnected_component f0 b1 f1 * / c= cIN b0 * part ccomponents f0 c? / c/\ cIN b1 f0 c= b0 * * part cconnected_component f0 b1 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ ((\s. ((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s)))))) s) |- (((\s. ((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s)))))) s) /\ ((!s. (!c. (((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s))))) ==> (~ (bounded c))))) ==> (~ (bounded c))))
T c==> * / c/\ ccompact b0 c/\ cAR b0 cIN f0 * part ccomponents * * part cDIFF part cUNIV b0 f1 c/\ * / c/\ ccompact b0 c/\ cAR b0 cIN f0 * part ccomponents * * part cDIFF part cUNIV b0 f1 c==> ! ! c==> c/\ ccompact b0 c/\ cAR b0 cIN b1 * part ccomponents * * part cDIFF part cUNIV b0 c~ cbounded b1 c~ cbounded f0
+ |- ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))))))
T c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0
- |- ((~ (_1431963 = _1431965)) \/ ((~ (_1431964 = _1431966)) \/ (((retract_of _1431965) _1431966) \/ (~ ((retract_of _1431963) _1431964)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cretract_of f1 f3 c~ cretract_of f0 f2
+ |- ((!x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x)))))))))) = T)
T c= ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN b0 * * part cDIFF part cUNIV f0 c==> cIN f1 * * part cDIFF part cUNIV f0 c? / c/\ cIN b1 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b1 cT
+ (!s. (!c. (((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s))))) ==> (~ (bounded c))))) |- (!c. (((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s))))) ==> (~ (bounded c))))
T c==> ! ! c==> c/\ ccompact b0 c/\ cAR b0 cIN b1 * part ccomponents * * part cDIFF part cUNIV b0 c~ cbounded b1 ! c==> c/\ ccompact f0 c/\ cAR f0 cIN b0 * part ccomponents * * part cDIFF part cUNIV f0 c~ cbounded b0
+ (!s. (!x. (!y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y)))))) |- ((!s. (!x. (!y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y)))))) /\ (!x. (!s. (!y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y)))))))
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ c~ cbounded * * part cconnected_component b0 b1 c~ cbounded * * part cconnected_component b0 b2 c= * * part cconnected_component b0 b1 * * part cconnected_component b0 b2 c/\ ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ c~ cbounded * * part cconnected_component b0 b1 c~ cbounded * * part cconnected_component b0 b2 c= * * part cconnected_component b0 b1 * * part cconnected_component b0 b2 ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b1 c/\ c~ cbounded * * part cconnected_component b1 b0 c~ cbounded * * part cconnected_component b1 b2 c= * * part cconnected_component b1 b0 * * part cconnected_component b1 b2
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))), (y IN (UNIV DIFF s)) |- F
T c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 c==> cIN f1 * * part cDIFF part cUNIV f0 cF
+ (!s. (!c. (((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s))))) ==> (~ (bounded c))))) |- ((!s. (!c. (((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s))))) ==> (~ (bounded c))))) /\ (!c. ((?s. ((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s)))))) ==> (~ (bounded c)))))
T c==> ! ! c==> c/\ ccompact b0 c/\ cAR b0 cIN b1 * part ccomponents * * part cDIFF part cUNIV b0 c~ cbounded b1 c/\ ! ! c==> c/\ ccompact b0 c/\ cAR b0 cIN b1 * part ccomponents * * part cDIFF part cUNIV b0 c~ cbounded b1 ! c==> c? / c/\ ccompact b1 c/\ cAR b1 cIN b0 * part ccomponents * * part cDIFF part cUNIV b1 c~ cbounded b0
+ |- (((!s. ((connected s) = (!x. (!y. (((x IN s) /\ (y IN s)) ==> (((connected_component s) x) = ((connected_component s) y))))))) ==> ((\s. ((connected s) = (!x. (!y. (((x IN s) /\ (y IN s)) ==> (((connected_component s) x) = ((connected_component s) y))))))) s)) = ((\s. ((connected s) = (!x. (!y. (((x IN s) /\ (y IN s)) ==> (((connected_component s) x) = ((connected_component s) y))))))) s))
T c= c==> ! c= cconnected b0 ! ! c==> c/\ cIN b1 b0 cIN b2 b0 c= * * part cconnected_component b0 b1 * * part cconnected_component b0 b2 * / c= cconnected b0 ! ! c==> c/\ cIN b1 b0 cIN b2 b0 c= * * part cconnected_component b0 b1 * * part cconnected_component b0 b2 f0 * / c= cconnected b0 ! ! c==> c/\ cIN b1 b0 cIN b2 b0 c= * * part cconnected_component b0 b1 * * part cconnected_component b0 b2 f0
+ |- ((\x. (!s. (!y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y)))))) x)
T * / ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b1 c/\ c~ cbounded * * part cconnected_component b1 b0 c~ cbounded * * part cconnected_component b1 b2 c= * * part cconnected_component b1 b0 * * part cconnected_component b1 b2 f0
+ |- (((!x. (!y. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))))) ==> ((\x. (!y. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))))) x)) = ((\x. (!y. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))))) x))
T c= c==> ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN b0 * * part cDIFF part cUNIV f0 c==> cIN b1 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b2 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 b0 * * part cconnected_component * * part cDIFF part cUNIV f0 b2 cF * / ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN b0 * * part cDIFF part cUNIV f0 c==> cIN b1 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b2 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 b0 * * part cconnected_component * * part cDIFF part cUNIV f0 b2 cF f1 * / ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN b0 * * part cDIFF part cUNIV f0 c==> cIN b1 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b2 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 b0 * * part cconnected_component * * part cDIFF part cUNIV f0 b2 cF f1
+ (compact s) |- (compact (UNIV DIFF (UNIV DIFF s)))
T c==> ccompact f0 ccompact * * part cDIFF part cUNIV * * part cDIFF part cUNIV f0
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ |- (T = (!x. ((x IN (UNIV DIFF (UNIV DIFF s))) = (x IN s))))
T c= cT ! c= cIN b0 * * part cDIFF part cUNIV * * part cDIFF part cUNIV f0 cIN b0 f0
- |- ((_1431983 = _1431984) ==> ((BIT0 _1431983) = (BIT0 _1431984)))
T c==> c= f0 f1 c= cBIT0 f0 cBIT0 f1
+ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))
T c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF
+ |- ((!x. ((x IN (UNIV DIFF (UNIV DIFF s))) = (x IN s))) = ((UNIV DIFF (UNIV DIFF s)) = s))
T c= ! c= cIN b0 * * part cDIFF part cUNIV * * part cDIFF part cUNIV f0 cIN b0 f0 c= * * part cDIFF part cUNIV * * part cDIFF part cUNIV f0 f0
+ |- (!s. (((\s. ((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s)))))) s) ==> ((!s. (!c. (((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s))))) ==> (~ (bounded c))))) ==> (~ (bounded c)))))
T c==> * / c/\ ccompact b0 c/\ cAR b0 cIN f0 * part ccomponents * * part cDIFF part cUNIV b0 f1 c==> ! ! c==> c/\ ccompact b0 c/\ cAR b0 cIN b1 * part ccomponents * * part cDIFF part cUNIV b0 c~ cbounded b1 c~ cbounded f0
+ |- (((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s))))) ==> ((!s. (!c. (((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s))))) ==> (~ (bounded c))))) ==> (~ (bounded c))))
T c==> c/\ ccompact f0 c/\ cAR f0 cIN f1 * part ccomponents * * part cDIFF part cUNIV f0 c==> ! ! c==> c/\ ccompact b0 c/\ cAR b0 cIN b1 * part ccomponents * * part cDIFF part cUNIV b0 c~ cbounded b1 c~ cbounded f1
+ |- ((?s. ((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s)))))) ==> (~ (bounded c)))
T c==> c? / c/\ ccompact b0 c/\ cAR b0 cIN f0 * part ccomponents * * part cDIFF part cUNIV b0 c~ cbounded f0
- |- ((~ (_1431959 = _1431961)) \/ ((~ (_1431960 = _1431962)) \/ ((_1431961 IN _1431962) \/ (~ (_1431959 IN _1431960)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- ((!y. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x')))))))))) = T)
T c= ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN b0 * * part cDIFF part cUNIV f0 c? / c/\ cIN b1 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b1 cT
+ |- ((\s. (((compact s) /\ (AR s)) = ((compact s) /\ ((retract_of s) UNIV)))) s)
T * / c= c/\ ccompact b0 cAR b0 c/\ ccompact b0 cretract_of b0 part cUNIV f0
- (_1431960 = _1431962), (_1431959 = _1431961) |- ((_1431961 IN _1431962) \/ (~ (_1431959 IN _1431960)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cIN f3 f1 c~ cIN f2 f0
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?x. t) = t)
T c= c? / f0 f0
+ ((\s. ((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s)))))) s) |- ((((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s))))) ==> ((!s. (!c. (((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s))))) ==> (~ (bounded c))))) ==> (~ (bounded c)))) = ((!s. (!c. (((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s))))) ==> (~ (bounded c))))) ==> (~ (bounded c))))
T c==> * / c/\ ccompact b0 c/\ cAR b0 cIN f0 * part ccomponents * * part cDIFF part cUNIV b0 f1 c= c==> c/\ ccompact f1 c/\ cAR f1 cIN f0 * part ccomponents * * part cDIFF part cUNIV f1 c==> ! ! c==> c/\ ccompact b0 c/\ cAR b0 cIN b1 * part ccomponents * * part cDIFF part cUNIV b0 c~ cbounded b1 c~ cbounded f0 c==> ! ! c==> c/\ ccompact b0 c/\ cAR b0 cIN b1 * part ccomponents * * part cDIFF part cUNIV b0 c~ cbounded b1 c~ cbounded f0
+ |- (!s. (!y. (!x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))))))))))
T c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0
- (_1431977 = _1431979), (_1431978 = _1431980) |- ((_1431978 = _1431980) /\ ((_1431977 DIFF _1431978) = (_1431979 DIFF _1431980)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= * * part cDIFF f0 f2 * * part cDIFF f1 f3
+ |- ((t1 /\ (t2 /\ t3)) = ((t1 /\ t2) /\ t3))
T c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2
+ |- (((!s. (!y. (!x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F))))))))) ==> ((\s. (!y. (!x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F))))))))) s)) = ((\s. (!y. (!x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F))))))))) s))
T c= c==> ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact b0 c==> cretract_of b0 part cUNIV c==> cIN b2 * * part cDIFF part cUNIV b0 c==> cIN b1 * * part cDIFF part cUNIV b0 c==> c~ c? / c/\ cIN b3 * * part cDIFF part cUNIV b0 c= * * part cconnected_component * * part cDIFF part cUNIV b0 b1 * * part cconnected_component * * part cDIFF part cUNIV b0 b3 cF * / ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact b0 c==> cretract_of b0 part cUNIV c==> cIN b2 * * part cDIFF part cUNIV b0 c==> cIN b1 * * part cDIFF part cUNIV b0 c==> c~ c? / c/\ cIN b3 * * part cDIFF part cUNIV b0 c= * * part cconnected_component * * part cDIFF part cUNIV b0 b1 * * part cconnected_component * * part cDIFF part cUNIV b0 b3 cF f0 * / ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact b0 c==> cretract_of b0 part cUNIV c==> cIN b2 * * part cDIFF part cUNIV b0 c==> cIN b1 * * part cDIFF part cUNIV b0 c==> c~ c? / c/\ cIN b3 * * part cDIFF part cUNIV b0 c= * * part cconnected_component * * part cDIFF part cUNIV b0 b1 * * part cconnected_component * * part cDIFF part cUNIV b0 b3 cF f0
+ |- ((\y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y)))) y)
T * / c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV f0 c/\ c~ cbounded * * part cconnected_component f0 f1 c~ cbounded * * part cconnected_component f0 b0 c= * * part cconnected_component f0 f1 * * part cconnected_component f0 b0 f2
+ |- (!s. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((compact s) /\ ((retract_of s) UNIV))) ==> (connected (UNIV DIFF s))))
T c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ ccompact f0 cretract_of f0 part cUNIV cconnected * * part cDIFF part cUNIV f0
- |- (((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F))))))) = (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))))
T c= c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF
+ (compact s), ((x IN (UNIV DIFF s)) /\ (y IN (UNIV DIFF s))), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), ((retract_of s) UNIV) |- (((x IN (UNIV DIFF s)) /\ (y IN (UNIV DIFF s))) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) y)))
T c==> ccompact f0 c==> c/\ cIN f1 * * part cDIFF part cUNIV f0 cIN f2 * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cretract_of f0 part cUNIV c/\ c/\ cIN f1 * * part cDIFF part cUNIV f0 cIN f2 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 f2
+ (y IN (UNIV DIFF s)) |- ((y IN (UNIV DIFF s)) /\ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x)))))
T c==> cIN f0 * * part cDIFF part cUNIV f1 c/\ cIN f0 * * part cDIFF part cUNIV f1 c? / c/\ cIN b0 * * part cDIFF part cUNIV f1 c= * * part cconnected_component * * part cDIFF part cUNIV f1 f0 * * part cconnected_component * * part cDIFF part cUNIV f1 b0
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- (~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))), (y IN (UNIV DIFF s)) |- ((~ F) ==> F)
T c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 c==> cIN f1 * * part cDIFF part cUNIV f0 c==> c~ cF cF
+ (compact s) |- ((compact s) = T)
T c==> ccompact f0 c= ccompact f0 cT
+ (compact s), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), ((retract_of s) UNIV) |- ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))
T c==> ccompact f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF
+ (compact s), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), ((retract_of s) UNIV) |- ((((x IN (UNIV DIFF s)) /\ (y IN (UNIV DIFF s))) ==> (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) y))) = T)
T c==> ccompact f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cretract_of f0 part cUNIV c= c==> c/\ cIN f1 * * part cDIFF part cUNIV f0 cIN f2 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 f2 cT
+ (y IN (UNIV DIFF s)) |- ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)
T c==> cIN f0 * * part cDIFF part cUNIV f1 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f1 c= * * part cconnected_component * * part cDIFF part cUNIV f1 f0 * * part cconnected_component * * part cDIFF part cUNIV f1 b0 cF
- (y IN (UNIV DIFF s)) |- ((~ (y IN (UNIV DIFF s))) ==> (y IN (UNIV DIFF s)))
T c==> cIN f0 * * part cDIFF part cUNIV f1 c==> c~ cIN f0 * * part cDIFF part cUNIV f1 cIN f0 * * part cDIFF part cUNIV f1
- (!s. (!x. (!y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y)))))) |- ((\y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y)))) y)
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ c~ cbounded * * part cconnected_component b0 b1 c~ cbounded * * part cconnected_component b0 b2 c= * * part cconnected_component b0 b1 * * part cconnected_component b0 b2 * / c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV f0 c/\ c~ cbounded * * part cconnected_component f0 f1 c~ cbounded * * part cconnected_component f0 b0 c= * * part cconnected_component f0 f1 * * part cconnected_component f0 b0 f2
- (~ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) y))) |- ((~ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) y))) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) y)))
T c==> c~ c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 f1 c/\ c~ c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 f1 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 f1
+ (!s. (!c. (((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s))))) ==> (~ (bounded c))))), ((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s))))) |- ((!s. (!c. (((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s))))) ==> (~ (bounded c))))) /\ (~ (bounded c)))
T c==> ! ! c==> c/\ ccompact b0 c/\ cAR b0 cIN b1 * part ccomponents * * part cDIFF part cUNIV b0 c~ cbounded b1 c==> c/\ ccompact f0 c/\ cAR f0 cIN f1 * part ccomponents * * part cDIFF part cUNIV f0 c/\ ! ! c==> c/\ ccompact b0 c/\ cAR b0 cIN b1 * part ccomponents * * part cDIFF part cUNIV b0 c~ cbounded b1 c~ cbounded f1
+ (~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) |- ((~ (_1431958 IN (UNIV DIFF s))) \/ (~ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) _1431958))))
T c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 c\/ c~ cIN f2 * * part cDIFF part cUNIV f0 c~ c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 f2
+ |- ((\y. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F))))))) y)
T * / c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN b0 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b1 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b1 cF f2
+ |- (((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F) = (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x)))))
T c= c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0
- |- ((~ (_1431987 = _1431988)) \/ ((dimindex _1431987) = (dimindex _1431988)))
T c\/ c~ c= f0 f1 c= cdimindex f0 cdimindex f1
+ (compact s), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (x IN (UNIV DIFF s)), (y IN (UNIV DIFF s)), ((retract_of s) UNIV) |- ((\s'. ((compact s') /\ ((AR s') /\ (((connected_component (UNIV DIFF s)) y) IN (components (UNIV DIFF s')))))) s)
T c==> ccompact f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> cretract_of f0 part cUNIV * / c/\ ccompact b0 c/\ cAR b0 cIN * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * part ccomponents * * part cDIFF part cUNIV b0 f0
+ |- ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))))))
T c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0
+ (compact s), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (x IN (UNIV DIFF s)), (y IN (UNIV DIFF s)), ((retract_of s) UNIV) |- (?s'. ((compact s') /\ ((AR s') /\ (((connected_component (UNIV DIFF s)) x) IN (components (UNIV DIFF s'))))))
T c==> ccompact f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> cretract_of f0 part cUNIV c? / c/\ ccompact b0 c/\ cAR b0 cIN * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * part ccomponents * * part cDIFF part cUNIV b0
+ |- ((compact s) ==> ((bounded s) = T))
T c==> ccompact f0 c= cbounded f0 cT
+ |- ((!x. (!y. (((x IN (UNIV DIFF s)) /\ (y IN (UNIV DIFF s))) ==> (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) y))))) = (connected (UNIV DIFF s)))
T c= ! ! c==> c/\ cIN b0 * * part cDIFF part cUNIV f0 cIN b1 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 b0 * * part cconnected_component * * part cDIFF part cUNIV f0 b1 cconnected * * part cDIFF part cUNIV f0
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!x. ((P x) \/ Q)) = ((!x. (P x)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ |- (((!x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F))))))) ==> ((\x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F))))))) x)) = ((\x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F))))))) x))
T c= c==> ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN b0 * * part cDIFF part cUNIV f0 c==> cIN f1 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b1 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b1 cF * / c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN b0 * * part cDIFF part cUNIV f0 c==> cIN f1 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b1 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b1 cF f2 * / c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN b0 * * part cDIFF part cUNIV f0 c==> cIN f1 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b1 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b1 cF f2
+ |- ((!x. (!y. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))))))))) = T)
T c= ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN b0 * * part cDIFF part cUNIV f0 c==> cIN b1 * * part cDIFF part cUNIV f0 c? / c/\ cIN b2 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 b0 * * part cconnected_component * * part cDIFF part cUNIV f0 b2 cT
+ |- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))))))) = T)
T c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cT
+ (y IN (UNIV DIFF s)) |- ((((y IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) y))) ==> F) = F)
T c==> cIN f0 * * part cDIFF part cUNIV f1 c= c==> c/\ cIN f0 * * part cDIFF part cUNIV f1 c= * * part cconnected_component * * part cDIFF part cUNIV f1 f0 * * part cconnected_component * * part cDIFF part cUNIV f1 f0 cF cF
+ (x IN (UNIV DIFF s)), (y IN (UNIV DIFF s)) |- ((y IN (UNIV DIFF s)) /\ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x')))))
T c==> cIN f0 * * part cDIFF part cUNIV f1 c==> cIN f2 * * part cDIFF part cUNIV f1 c/\ cIN f2 * * part cDIFF part cUNIV f1 c? / c/\ cIN b0 * * part cDIFF part cUNIV f1 c= * * part cconnected_component * * part cDIFF part cUNIV f1 f0 * * part cconnected_component * * part cDIFF part cUNIV f1 b0
+ (compact s), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (x IN (UNIV DIFF s)), (y IN (UNIV DIFF s)), ((retract_of s) UNIV) |- ((~ (bounded ((connected_component (UNIV DIFF s)) x))) /\ (~ (bounded ((connected_component (UNIV DIFF s)) y))))
T c==> ccompact f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> cretract_of f0 part cUNIV c/\ c~ cbounded * * part cconnected_component * * part cDIFF part cUNIV f0 f1 c~ cbounded * * part cconnected_component * * part cDIFF part cUNIV f0 f2
- |- ((_1431963 = _1431965) ==> ((~ (_1431964 = _1431966)) \/ (((retract_of _1431965) _1431966) \/ (~ ((retract_of _1431963) _1431964)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cretract_of f1 f3 c~ cretract_of f0 f2
+ |- (((!s. (!x. (!y. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F))))))))) ==> ((\s. (!x. (!y. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F))))))))) s)) = ((\s. (!x. (!y. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F))))))))) s))
T c= c==> ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact b0 c==> cretract_of b0 part cUNIV c==> cIN b1 * * part cDIFF part cUNIV b0 c==> cIN b2 * * part cDIFF part cUNIV b0 c==> c~ c? / c/\ cIN b3 * * part cDIFF part cUNIV b0 c= * * part cconnected_component * * part cDIFF part cUNIV b0 b1 * * part cconnected_component * * part cDIFF part cUNIV b0 b3 cF * / ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact b0 c==> cretract_of b0 part cUNIV c==> cIN b1 * * part cDIFF part cUNIV b0 c==> cIN b2 * * part cDIFF part cUNIV b0 c==> c~ c? / c/\ cIN b3 * * part cDIFF part cUNIV b0 c= * * part cconnected_component * * part cDIFF part cUNIV b0 b1 * * part cconnected_component * * part cDIFF part cUNIV b0 b3 cF f0 * / ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact b0 c==> cretract_of b0 part cUNIV c==> cIN b1 * * part cDIFF part cUNIV b0 c==> cIN b2 * * part cDIFF part cUNIV b0 c==> c~ c? / c/\ cIN b3 * * part cDIFF part cUNIV b0 c= * * part cconnected_component * * part cDIFF part cUNIV b0 b1 * * part cconnected_component * * part cDIFF part cUNIV b0 b3 cF f0
+ (compact s), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (x IN (UNIV DIFF s)), (y IN (UNIV DIFF s)), ((retract_of s) UNIV) |- ((~ (bounded ((connected_component (UNIV DIFF s)) y))) = ((~ (bounded ((connected_component (UNIV DIFF s)) x))) /\ (~ (bounded ((connected_component (UNIV DIFF s)) y)))))
T c==> ccompact f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> cretract_of f0 part cUNIV c= c~ cbounded * * part cconnected_component * * part cDIFF part cUNIV f0 f2 c/\ c~ cbounded * * part cconnected_component * * part cDIFF part cUNIV f0 f1 c~ cbounded * * part cconnected_component * * part cDIFF part cUNIV f0 f2
+ (compact s), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (x IN (UNIV DIFF s)), (y IN (UNIV DIFF s)), ((retract_of s) UNIV) |- (~ (bounded ((connected_component (UNIV DIFF s)) x)))
T c==> ccompact f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> cretract_of f0 part cUNIV c~ cbounded * * part cconnected_component * * part cDIFF part cUNIV f0 f1
+ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) = T)
T c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV cT
+ |- (((!x. (((\s. ((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s)))))) x) ==> ((!s. (!c. (((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s))))) ==> (~ (bounded c))))) ==> (~ (bounded c))))) ==> ((?s. ((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s)))))) ==> ((!s. (!c. (((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s))))) ==> (~ (bounded c))))) ==> (~ (bounded c))))) = ((?s. ((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s)))))) ==> ((!s. (!c. (((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s))))) ==> (~ (bounded c))))) ==> (~ (bounded c)))))
T c= c==> ! c==> * / c/\ ccompact b1 c/\ cAR b1 cIN f0 * part ccomponents * * part cDIFF part cUNIV b1 b0 c==> ! ! c==> c/\ ccompact b1 c/\ cAR b1 cIN b2 * part ccomponents * * part cDIFF part cUNIV b1 c~ cbounded b2 c~ cbounded f0 c==> c? / c/\ ccompact b0 c/\ cAR b0 cIN f0 * part ccomponents * * part cDIFF part cUNIV b0 c==> ! ! c==> c/\ ccompact b0 c/\ cAR b0 cIN b1 * part ccomponents * * part cDIFF part cUNIV b0 c~ cbounded b1 c~ cbounded f0 c==> c? / c/\ ccompact b0 c/\ cAR b0 cIN f0 * part ccomponents * * part cDIFF part cUNIV b0 c==> ! ! c==> c/\ ccompact b0 c/\ cAR b0 cIN b1 * part ccomponents * * part cDIFF part cUNIV b0 c~ cbounded b1 c~ cbounded f0
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- (((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((compact s) /\ ((retract_of s) UNIV))) ==> (connected (UNIV DIFF s))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ ccompact f0 cretract_of f0 part cUNIV cconnected * * part cDIFF part cUNIV f0 cT
- |- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))))
T c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF
+ (compact s), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (x IN (UNIV DIFF s)), (y IN (UNIV DIFF s)), ((retract_of s) UNIV) |- ((compact s) /\ ((AR s) /\ (((connected_component (UNIV DIFF s)) x) IN (components (UNIV DIFF s)))))
T c==> ccompact f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> cretract_of f0 part cUNIV c/\ ccompact f0 c/\ cAR f0 cIN * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * part ccomponents * * part cDIFF part cUNIV f0
- |- ((_1431959 = _1431961) ==> ((~ (_1431960 = _1431962)) \/ ((_1431961 IN _1431962) \/ (~ (_1431959 IN _1431960)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
- (_1431985 = _1431986) |- ((_1431985 = _1431986) /\ ((NUMERAL _1431985) = (NUMERAL _1431986)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ (compact s) |- ((compact s) /\ (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))))))
T c==> ccompact f0 c/\ ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0
+ ((retract_of s) UNIV) |- (((retract_of s) UNIV) /\ ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x')))))))
T c==> cretract_of f0 part cUNIV c/\ cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0
- |- ((_1431974 = _1431976) ==> ((~ (_1431973 = _1431975)) \/ (((connected_component _1431973) _1431974) = ((connected_component _1431975) _1431976))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cconnected_component f2 f0 * * part cconnected_component f3 f1
- (_1431981 = _1431982) |- ((_1431981 = _1431982) /\ ((BIT1 _1431981) = (BIT1 _1431982)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ (!s. (!c. (((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s))))) ==> (~ (bounded c))))) |- (((!c. (((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s))))) ==> (~ (bounded c)))) ==> ((\c. (((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s))))) ==> (~ (bounded c)))) c)) = ((\c. (((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s))))) ==> (~ (bounded c)))) c))
T c==> ! ! c==> c/\ ccompact b0 c/\ cAR b0 cIN b1 * part ccomponents * * part cDIFF part cUNIV b0 c~ cbounded b1 c= c==> ! c==> c/\ ccompact f0 c/\ cAR f0 cIN b0 * part ccomponents * * part cDIFF part cUNIV f0 c~ cbounded b0 * / c==> c/\ ccompact f0 c/\ cAR f0 cIN b0 * part ccomponents * * part cDIFF part cUNIV f0 c~ cbounded b0 f1 * / c==> c/\ ccompact f0 c/\ cAR f0 cIN b0 * part ccomponents * * part cDIFF part cUNIV f0 c~ cbounded b0 f1
- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))) |- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))))
T c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c/\ c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF
- |- ((~ (_1431985 = _1431986)) \/ ((NUMERAL _1431985) = (NUMERAL _1431986)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- (_1431987 = _1431988) |- ((_1431987 = _1431988) /\ ((dimindex _1431987) = (dimindex _1431988)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cdimindex f0 cdimindex f1
- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) |- ((!s. (!x. (!y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y)))
T c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV f0 c/\ c~ cbounded * * part cconnected_component f0 f1 c~ cbounded * * part cconnected_component f0 f2 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ c~ cbounded * * part cconnected_component b0 b1 c~ cbounded * * part cconnected_component b0 b2 c= * * part cconnected_component b0 b1 * * part cconnected_component b0 b2 c= * * part cconnected_component f0 f1 * * part cconnected_component f0 f2
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((!s. (!y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y))))) ==> ((\s. (!y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y))))) s)) = ((\s. (!y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y))))) s))
T c= c==> ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ c~ cbounded * * part cconnected_component b0 f0 c~ cbounded * * part cconnected_component b0 b1 c= * * part cconnected_component b0 f0 * * part cconnected_component b0 b1 * / ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ c~ cbounded * * part cconnected_component b0 f0 c~ cbounded * * part cconnected_component b0 b1 c= * * part cconnected_component b0 f0 * * part cconnected_component b0 b1 f1 * / ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ c~ cbounded * * part cconnected_component b0 f0 c~ cbounded * * part cconnected_component b0 b1 c= * * part cconnected_component b0 f0 * * part cconnected_component b0 b1 f1
- |- ((!x'. ((~ (x IN (UNIV DIFF s))) \/ (~ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x'))))) = ((~ (x IN (UNIV DIFF s))) \/ (!x. (~ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))))
T c= ! c\/ c~ cIN f0 * * part cDIFF part cUNIV f1 c~ c= * * part cconnected_component * * part cDIFF part cUNIV f1 f2 * * part cconnected_component * * part cDIFF part cUNIV f1 b0 c\/ c~ cIN f0 * * part cDIFF part cUNIV f1 ! c~ c= * * part cconnected_component * * part cDIFF part cUNIV f1 f2 * * part cconnected_component * * part cDIFF part cUNIV f1 b0
+ (compact s), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (x IN (UNIV DIFF s)), (y IN (UNIV DIFF s)), ((retract_of s) UNIV) |- (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) y))
T c==> ccompact f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> cretract_of f0 part cUNIV c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 f2
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- |- ((~ (_1431977 = _1431979)) \/ ((~ (_1431978 = _1431980)) \/ ((_1431977 DIFF _1431978) = (_1431979 DIFF _1431980))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cDIFF f0 f2 * * part cDIFF f1 f3
+ (x IN (UNIV DIFF s)) |- ((x IN (UNIV DIFF s)) /\ ((y IN (UNIV DIFF s)) ==> (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))))
T c==> cIN f0 * * part cDIFF part cUNIV f1 c/\ cIN f0 * * part cDIFF part cUNIV f1 c==> cIN f2 * * part cDIFF part cUNIV f1 c? / c/\ cIN b0 * * part cDIFF part cUNIV f1 c= * * part cconnected_component * * part cDIFF part cUNIV f1 f2 * * part cconnected_component * * part cDIFF part cUNIV f1 b0
+ (compact s), ((x IN (UNIV DIFF s)) /\ (y IN (UNIV DIFF s))), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), ((retract_of s) UNIV) |- (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) y))
T c==> ccompact f0 c==> c/\ cIN f1 * * part cDIFF part cUNIV f0 cIN f2 * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cretract_of f0 part cUNIV c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 f2
+ |- ((!s. (!x. (!y. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x')))))))))))) = (!s. (!x. (!y. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F))))))))))
T c= ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact b0 c==> cretract_of b0 part cUNIV c==> cIN b1 * * part cDIFF part cUNIV b0 c==> cIN b2 * * part cDIFF part cUNIV b0 c? / c/\ cIN b3 * * part cDIFF part cUNIV b0 c= * * part cconnected_component * * part cDIFF part cUNIV b0 b1 * * part cconnected_component * * part cDIFF part cUNIV b0 b3 ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact b0 c==> cretract_of b0 part cUNIV c==> cIN b1 * * part cDIFF part cUNIV b0 c==> cIN b2 * * part cDIFF part cUNIV b0 c==> c~ c? / c/\ cIN b3 * * part cDIFF part cUNIV b0 c= * * part cconnected_component * * part cDIFF part cUNIV b0 b1 * * part cconnected_component * * part cDIFF part cUNIV b0 b3 cF
- |- ((_1431985 = _1431986) ==> ((NUMERAL _1431985) = (NUMERAL _1431986)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ |- (((~ a) \/ (~ b)) = (~ (a /\ b)))
T c= c\/ c~ f0 c~ f1 c~ c/\ f0 f1
+ |- ((x IN UNIV) = T)
T c= cIN f0 part cUNIV cT
- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))) |- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))))
T c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c/\ c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF
+ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((compact s) /\ ((retract_of s) UNIV))), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- (connected (UNIV DIFF s))
T c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ ccompact f0 cretract_of f0 part cUNIV c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV cconnected * * part cDIFF part cUNIV f0
- (_1431969 = _1431971) |- ((_1431969 = _1431971) /\ ((~ (_1431970 = _1431972)) \/ ((_1431971 <= _1431972) \/ (~ (_1431969 <= _1431970)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c<= f1 f3 c~ c<= f0 f2
+ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x')))))))))
T c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0
+ |- (((!y. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F))))))) ==> ((\y. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F))))))) y)) = ((\y. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F))))))) y))
T c= c==> ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN b0 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b1 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b1 cF * / c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN b0 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b1 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b1 cF f2 * / c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN b0 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b1 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b1 cF f2
+ |- (((!s. ((compact s) ==> (bounded s))) ==> ((\s. ((compact s) ==> (bounded s))) s)) = ((\s. ((compact s) ==> (bounded s))) s))
T c= c==> ! c==> ccompact b0 cbounded b0 * / c==> ccompact b0 cbounded b0 f0 * / c==> ccompact b0 cbounded b0 f0
+ (compact s), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (x IN (UNIV DIFF s)), (y IN (UNIV DIFF s)), ((retract_of s) UNIV) |- ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)
T c==> ccompact f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> cretract_of f0 part cUNIV c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF
- |- (((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F))))))) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F))))))))
T c==> c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF
+ (compact s), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), ((retract_of s) UNIV) |- (connected (UNIV DIFF s))
T c==> ccompact f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cretract_of f0 part cUNIV cconnected * * part cDIFF part cUNIV f0
+ (y IN (UNIV DIFF s)) |- ((y IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) y)))
T c==> cIN f0 * * part cDIFF part cUNIV f1 c/\ cIN f0 * * part cDIFF part cUNIV f1 c= * * part cconnected_component * * part cDIFF part cUNIV f1 f0 * * part cconnected_component * * part cDIFF part cUNIV f1 f0
- (_1431963 = _1431965) |- ((_1431963 = _1431965) /\ ((~ (_1431964 = _1431966)) \/ (((retract_of _1431965) _1431966) \/ (~ ((retract_of _1431963) _1431964)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cretract_of f1 f3 c~ cretract_of f0 f2
- |- ((_1431981 = _1431982) ==> ((BIT1 _1431981) = (BIT1 _1431982)))
T c==> c= f0 f1 c= cBIT1 f0 cBIT1 f1
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- (_1431963 = _1431965) |- ((_1431964 = _1431966) ==> (((retract_of _1431965) _1431966) \/ (~ ((retract_of _1431963) _1431964))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cretract_of f1 f3 c~ cretract_of f0 f2
+ (!s. (!c. (((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s))))) ==> (~ (bounded c))))) |- ((\c. (((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s))))) ==> (~ (bounded c)))) c)
T c==> ! ! c==> c/\ ccompact b0 c/\ cAR b0 cIN b1 * part ccomponents * * part cDIFF part cUNIV b0 c~ cbounded b1 * / c==> c/\ ccompact f0 c/\ cAR f0 cIN b0 * part ccomponents * * part cDIFF part cUNIV f0 c~ cbounded b0 f1
+ (compact s), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), ((retract_of s) UNIV) |- ((!y. (((x IN (UNIV DIFF s)) /\ (y IN (UNIV DIFF s))) ==> (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) y)))) = T)
T c==> ccompact f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cretract_of f0 part cUNIV c= ! c==> c/\ cIN f1 * * part cDIFF part cUNIV f0 cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cT
+ |- ((\y. (!x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))))) y)
T * / ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN b1 * * part cDIFF part cUNIV f0 c==> cIN b0 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b2 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 b0 * * part cconnected_component * * part cDIFF part cUNIV f0 b2 cF f1
+ |- ((\s. ((compact s) ==> (bounded s))) s)
T * / c==> ccompact b0 cbounded b0 f0
- (_1431959 = _1431961) |- ((_1431959 = _1431961) /\ ((~ (_1431960 = _1431962)) \/ ((_1431961 IN _1431962) \/ (~ (_1431959 IN _1431960)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
+ (compact s), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (x IN (UNIV DIFF s)), (y IN (UNIV DIFF s)), ((retract_of s) UNIV) |- (((?s'. ((compact s') /\ ((AR s') /\ (((connected_component (UNIV DIFF s)) y) IN (components (UNIV DIFF s')))))) ==> (~ (bounded ((connected_component (UNIV DIFF s)) y)))) = (~ (bounded ((connected_component (UNIV DIFF s)) y))))
T c==> ccompact f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> cretract_of f0 part cUNIV c= c==> c? / c/\ ccompact b0 c/\ cAR b0 cIN * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * part ccomponents * * part cDIFF part cUNIV b0 c~ cbounded * * part cconnected_component * * part cDIFF part cUNIV f0 f2 c~ cbounded * * part cconnected_component * * part cDIFF part cUNIV f0 f2
+ |- (((!y. (!x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))))) ==> ((\y. (!x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))))) y)) = ((\y. (!x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))))) y))
T c= c==> ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN b1 * * part cDIFF part cUNIV f0 c==> cIN b0 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b2 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 b0 * * part cconnected_component * * part cDIFF part cUNIV f0 b2 cF * / ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN b1 * * part cDIFF part cUNIV f0 c==> cIN b0 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b2 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 b0 * * part cconnected_component * * part cDIFF part cUNIV f0 b2 cF f1 * / ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN b1 * * part cDIFF part cUNIV f0 c==> cIN b0 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b2 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 b0 * * part cconnected_component * * part cDIFF part cUNIV f0 b2 cF f1
+ |- (((!t3. ((t1 /\ (t2 /\ t3)) = ((t1 /\ t2) /\ t3))) ==> ((\t3. ((t1 /\ (t2 /\ t3)) = ((t1 /\ t2) /\ t3))) t3)) = ((\t3. ((t1 /\ (t2 /\ t3)) = ((t1 /\ t2) /\ t3))) t3))
T c= c==> ! c= c/\ f0 c/\ f1 b0 c/\ c/\ f0 f1 b0 * / c= c/\ f0 c/\ f1 b0 c/\ c/\ f0 f1 b0 f2 * / c= c/\ f0 c/\ f1 b0 c/\ c/\ f0 f1 b0 f2
+ (compact s), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (x IN (UNIV DIFF s)), (y IN (UNIV DIFF s)), ((retract_of s) UNIV) |- (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))
T c==> ccompact f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> cretract_of f0 part cUNIV c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0
+ |- (((!y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y)))) ==> ((\y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y)))) y)) = ((\y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y)))) y))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV f0 c/\ c~ cbounded * * part cconnected_component f0 f1 c~ cbounded * * part cconnected_component f0 b0 c= * * part cconnected_component f0 f1 * * part cconnected_component f0 b0 * / c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV f0 c/\ c~ cbounded * * part cconnected_component f0 f1 c~ cbounded * * part cconnected_component f0 b0 c= * * part cconnected_component f0 f1 * * part cconnected_component f0 b0 f2 * / c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV f0 c/\ c~ cbounded * * part cconnected_component f0 f1 c~ cbounded * * part cconnected_component f0 b0 c= * * part cconnected_component f0 f1 * * part cconnected_component f0 b0 f2
- |- ((_1431967 = _1431968) ==> ((compact _1431968) \/ (~ (compact _1431967))))
T c==> c= f0 f1 c\/ ccompact f1 c~ ccompact f0
- (_1431960 = _1431962), (_1431959 = _1431961) |- ((_1431960 = _1431962) /\ ((_1431961 IN _1431962) \/ (~ (_1431959 IN _1431960))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ cIN f3 f1 c~ cIN f2 f0
+ (compact s), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (x IN (UNIV DIFF s)), ((retract_of s) UNIV) |- ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F))
T c==> ccompact f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cretract_of f0 part cUNIV c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF
- |- ((!x'. ((~ (x' IN (UNIV DIFF s))) \/ (~ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) = ((!x. (~ (x IN (UNIV DIFF s)))) \/ (~ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x)))))
T c= ! c\/ c~ cIN b0 * * part cDIFF part cUNIV f0 c~ c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 f2 c\/ ! c~ cIN b0 * * part cDIFF part cUNIV f0 c~ c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 f2
- (y IN (UNIV DIFF s)) |- ((y IN (UNIV DIFF s)) = T)
T c==> cIN f0 * * part cDIFF part cUNIV f1 c= cIN f0 * * part cDIFF part cUNIV f1 cT
+ (compact s), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), ((retract_of s) UNIV) |- (!y. (((x IN (UNIV DIFF s)) /\ (y IN (UNIV DIFF s))) ==> (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) y))))
T c==> ccompact f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cretract_of f0 part cUNIV ! c==> c/\ cIN f1 * * part cDIFF part cUNIV f0 cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0
- (~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))), (compact s), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (x IN (UNIV DIFF s)), (y IN (UNIV DIFF s)), ((retract_of s) UNIV) |- F
T c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 c==> ccompact f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f2 * * part cDIFF part cUNIV f0 c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cretract_of f0 part cUNIV cF
+ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x)))))))))
T c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0
+ (compact s), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (x IN (UNIV DIFF s)), (y IN (UNIV DIFF s)), ((retract_of s) UNIV) |- (((compact s) /\ ((retract_of s) UNIV)) /\ (((connected_component (UNIV DIFF s)) x) IN (components (UNIV DIFF s))))
T c==> ccompact f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> cretract_of f0 part cUNIV c/\ c/\ ccompact f0 cretract_of f0 part cUNIV cIN * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * part ccomponents * * part cDIFF part cUNIV f0
+ |- (!s. (!x. (!y. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))))))))))
T c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0
- |- ((!x. (P \/ (Q x))) = (P \/ (!x. (Q x))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
+ |- ((!s. (!x. (!y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y)))))) ==> (!x. (!s. (!y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y)))))))
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ c~ cbounded * * part cconnected_component b0 b1 c~ cbounded * * part cconnected_component b0 b2 c= * * part cconnected_component b0 b1 * * part cconnected_component b0 b2 ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b1 c/\ c~ cbounded * * part cconnected_component b1 b0 c~ cbounded * * part cconnected_component b1 b2 c= * * part cconnected_component b1 b0 * * part cconnected_component b1 b2
+ (!s. (!c. (((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s))))) ==> (~ (bounded c))))), (?s. ((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s)))))) |- ((?s. ((compact s) /\ ((AR s) /\ (c IN (components (UNIV DIFF s)))))) /\ (~ (bounded c)))
T c==> ! ! c==> c/\ ccompact b0 c/\ cAR b0 cIN b1 * part ccomponents * * part cDIFF part cUNIV b0 c~ cbounded b1 c==> c? / c/\ ccompact b0 c/\ cAR b0 cIN f0 * part ccomponents * * part cDIFF part cUNIV b0 c/\ c? / c/\ ccompact b0 c/\ cAR b0 cIN f0 * part ccomponents * * part cDIFF part cUNIV b0 c~ cbounded f0
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- ((((compact s) /\ ((retract_of s) UNIV)) /\ (((connected_component (UNIV DIFF s)) y) IN (components (UNIV DIFF s)))) = ((compact s) /\ ((AR s) /\ (((connected_component (UNIV DIFF s)) y) IN (components (UNIV DIFF s))))))
T c= c/\ c/\ ccompact f0 cretract_of f0 part cUNIV cIN * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * part ccomponents * * part cDIFF part cUNIV f0 c/\ ccompact f0 c/\ cAR f0 cIN * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * part ccomponents * * part cDIFF part cUNIV f0
- (_1431977 = _1431979) |- ((_1431977 = _1431979) /\ ((~ (_1431978 = _1431980)) \/ ((_1431977 DIFF _1431978) = (_1431979 DIFF _1431980))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cDIFF f0 f2 * * part cDIFF f1 f3
- |- ((?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x)))) = ((?x. (x IN (UNIV DIFF s))) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))
T c= c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 f2 c/\ c? / cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 f2
+ |- ((\t3. ((t1 /\ (t2 /\ t3)) = ((t1 /\ t2) /\ t3))) t3)
T * / c= c/\ f0 c/\ f1 b0 c/\ c/\ f0 f1 b0 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
+ (~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) |- (!x. ((~ (x IN (UNIV DIFF s))) \/ (~ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x)))))
T c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 ! c\/ c~ cIN b0 * * part cDIFF part cUNIV f0 c~ c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))) |- (((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F))))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))))
T c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF
- (!s. (!x. (!y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y)))))) |- (((!y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y)))) ==> ((\y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y)))) y)) = ((\y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y)))) y))
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ c~ cbounded * * part cconnected_component b0 b1 c~ cbounded * * part cconnected_component b0 b2 c= * * part cconnected_component b0 b1 * * part cconnected_component b0 b2 c= c==> ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV f0 c/\ c~ cbounded * * part cconnected_component f0 f1 c~ cbounded * * part cconnected_component f0 b0 c= * * part cconnected_component f0 f1 * * part cconnected_component f0 b0 * / c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV f0 c/\ c~ cbounded * * part cconnected_component f0 f1 c~ cbounded * * part cconnected_component f0 b0 c= * * part cconnected_component f0 f1 * * part cconnected_component f0 b0 f2 * / c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV f0 c/\ c~ cbounded * * part cconnected_component f0 f1 c~ cbounded * * part cconnected_component f0 b0 c= * * part cconnected_component f0 f1 * * part cconnected_component f0 b0 f2
- (_1431969 = _1431971) |- ((_1431970 = _1431972) ==> ((_1431971 <= _1431972) \/ (~ (_1431969 <= _1431970))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c<= f1 f3 c~ c<= f0 f2
- (_1431967 = _1431968) |- ((((compact _1431967) = (compact _1431968)) ==> ((compact _1431968) \/ (~ (compact _1431967)))) = ((compact _1431968) \/ (~ (compact _1431967))))
T c==> c= f0 f1 c= c==> c= ccompact f0 ccompact f1 c\/ ccompact f1 c~ ccompact f0 c\/ ccompact f1 c~ ccompact f0
- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F))))))), (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))) |- (((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F))))))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))))
T c==> c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c/\ c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF
- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F))))))), (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))) |- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))))
T c==> c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c/\ c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF
- (_1431969 = _1431971), (_1431970 = _1431972) |- ((_1431970 = _1431972) /\ ((_1431971 <= _1431972) \/ (~ (_1431969 <= _1431970))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ c<= f1 f3 c~ c<= f0 f2
- (_1431963 = _1431965), (_1431964 = _1431966) |- ((_1431964 = _1431966) /\ (((retract_of _1431965) _1431966) \/ (~ ((retract_of _1431963) _1431964))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ cretract_of f1 f3 c~ cretract_of f0 f2
- |- ((_1431987 = _1431988) ==> ((dimindex _1431987) = (dimindex _1431988)))
T c==> c= f0 f1 c= cdimindex f0 cdimindex f1
- (!s. (!x. (!y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y)))))), (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) |- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) /\ (((connected_component s) x) = ((connected_component s) y)))
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ c~ cbounded * * part cconnected_component b0 b1 c~ cbounded * * part cconnected_component b0 b2 c= * * part cconnected_component b0 b1 * * part cconnected_component b0 b2 c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV f0 c/\ c~ cbounded * * part cconnected_component f0 f1 c~ cbounded * * part cconnected_component f0 f2 c/\ c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV f0 c/\ c~ cbounded * * part cconnected_component f0 f1 c~ cbounded * * part cconnected_component f0 f2 c= * * part cconnected_component f0 f1 * * part cconnected_component f0 f2
- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F))))))) |- (((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F))))))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F))))))))
T c==> c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c/\ c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF
- (_1431973 = _1431975), (_1431974 = _1431976) |- ((_1431973 = _1431975) /\ (((connected_component _1431973) _1431974) = ((connected_component _1431975) _1431976)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cconnected_component f0 f2 * * part cconnected_component f1 f3
- (!s. (!x. (!y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y)))))), (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) |- (((connected_component s) x) = ((connected_component s) y))
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ c~ cbounded * * part cconnected_component b0 b1 c~ cbounded * * part cconnected_component b0 b2 c= * * part cconnected_component b0 b1 * * part cconnected_component b0 b2 c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV f0 c/\ c~ cbounded * * part cconnected_component f0 f1 c~ cbounded * * part cconnected_component f0 f2 c= * * part cconnected_component f0 f1 * * part cconnected_component f0 f2
- |- ((((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F))))))) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))))) = ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F))))))))
T c= c==> c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF
- |- ((!y. (P y)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- (~ F), (~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))), (y IN (UNIV DIFF s)) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 c==> cIN f1 * * part cDIFF part cUNIV f0 c/\ c~ cF cF
- (_1431969 = _1431971), (_1431970 = _1431972) |- ((((_1431969 <= _1431970) = (_1431971 <= _1431972)) ==> ((_1431971 <= _1431972) \/ (~ (_1431969 <= _1431970)))) = ((_1431971 <= _1431972) \/ (~ (_1431969 <= _1431970))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= c<= f0 f2 c<= f1 f3 c\/ c<= f1 f3 c~ c<= f0 f2 c\/ c<= f1 f3 c~ c<= f0 f2
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (!s. (!x. (!y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y)))))), (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) |- ((!s. (!x. (!y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y)))))) /\ (((connected_component s) x) = ((connected_component s) y)))
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ c~ cbounded * * part cconnected_component b0 b1 c~ cbounded * * part cconnected_component b0 b2 c= * * part cconnected_component b0 b1 * * part cconnected_component b0 b2 c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV f0 c/\ c~ cbounded * * part cconnected_component f0 f1 c~ cbounded * * part cconnected_component f0 f2 c/\ ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ c~ cbounded * * part cconnected_component b0 b1 c~ cbounded * * part cconnected_component b0 b2 c= * * part cconnected_component b0 b1 * * part cconnected_component b0 b2 c= * * part cconnected_component f0 f1 * * part cconnected_component f0 f2
- (_1431983 = _1431984) |- ((_1431983 = _1431984) /\ ((BIT0 _1431983) = (BIT0 _1431984)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- |- ((?x'. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x')))) = ((x IN (UNIV DIFF s)) /\ (?x. (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x)))))
T c= c? / c/\ cIN f0 * * part cDIFF part cUNIV f1 c= * * part cconnected_component * * part cDIFF part cUNIV f1 f2 * * part cconnected_component * * part cDIFF part cUNIV f1 b0 c/\ cIN f0 * * part cDIFF part cUNIV f1 c? / c= * * part cconnected_component * * part cDIFF part cUNIV f1 f2 * * part cconnected_component * * part cDIFF part cUNIV f1 b0
- (_1431967 = _1431968) |- ((_1431967 = _1431968) /\ ((compact _1431968) \/ (~ (compact _1431967))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ ccompact f1 c~ ccompact f0
- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F))))))), (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))) |- (((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F))))))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))))
T c==> c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c/\ c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF
- |- ((~ (_1431983 = _1431984)) \/ ((BIT0 _1431983) = (BIT0 _1431984)))
T c\/ c~ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- |- ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x))))
T c= c? / c/\ f0 * f1 b0 c/\ f0 c? / * f1 b0
- (_1431977 = _1431979) |- ((_1431978 = _1431980) ==> ((_1431977 DIFF _1431978) = (_1431979 DIFF _1431980)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cDIFF f0 f2 * * part cDIFF f1 f3
- |- ((_1431969 = _1431971) ==> ((~ (_1431970 = _1431972)) \/ ((_1431971 <= _1431972) \/ (~ (_1431969 <= _1431970)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c<= f1 f3 c~ c<= f0 f2
- (~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))), (compact s), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (x IN (UNIV DIFF s)), (y IN (UNIV DIFF s)), ((retract_of s) UNIV) |- ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) /\ F)
T c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 c==> ccompact f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> cretract_of f0 part cUNIV c/\ c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF
- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))) |- (((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F))))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x. ((x IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) x))))) ==> F)))))))
T c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f2 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF
- (_1431974 = _1431976) |- ((_1431974 = _1431976) /\ ((~ (_1431973 = _1431975)) \/ (((connected_component _1431973) _1431974) = ((connected_component _1431975) _1431976))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cconnected_component f2 f0 * * part cconnected_component f3 f1
- |- ((~ (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) y))) ==> (((connected_component (UNIV DIFF s)) y) = ((connected_component (UNIV DIFF s)) y)))
T c==> c~ c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 f1 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 f1
- |- ((~ (_1431974 = _1431976)) \/ ((~ (_1431973 = _1431975)) \/ (((connected_component _1431973) _1431974) = ((connected_component _1431975) _1431976))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cconnected_component f2 f0 * * part cconnected_component f3 f1
- |- ((~ (_1431969 = _1431971)) \/ ((~ (_1431970 = _1431972)) \/ ((_1431971 <= _1431972) \/ (~ (_1431969 <= _1431970)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c<= f1 f3 c~ c<= f0 f2
- (!s. (!x. (!y. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y)))))) |- (((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((~ (bounded ((connected_component s) x))) /\ (~ (bounded ((connected_component s) y)))))) ==> (((connected_component s) x) = ((connected_component s) y))) = T)
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ c~ cbounded * * part cconnected_component b0 b1 c~ cbounded * * part cconnected_component b0 b2 c= * * part cconnected_component b0 b1 * * part cconnected_component b0 b2 c= c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV f0 c/\ c~ cbounded * * part cconnected_component f0 f1 c~ cbounded * * part cconnected_component f0 f2 c= * * part cconnected_component f0 f1 * * part cconnected_component f0 f2 cT
- (~ (y IN (UNIV DIFF s))), (y IN (UNIV DIFF s)) |- ((~ (y IN (UNIV DIFF s))) /\ (y IN (UNIV DIFF s)))
T c==> c~ cIN f0 * * part cDIFF part cUNIV f1 c==> cIN f0 * * part cDIFF part cUNIV f1 c/\ c~ cIN f0 * * part cDIFF part cUNIV f1 cIN f0 * * part cDIFF part cUNIV f1
- |- ((?x. ((P x) /\ Q)) = ((?x. (P x)) /\ Q))
T c= c? / c/\ * f0 b0 f1 c/\ c? / * f0 b0 f1
- |- (((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F))))))) = (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))))
T c= c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF
- |- ((~ (_1431967 = _1431968)) \/ ((compact _1431968) \/ (~ (compact _1431967))))
T c\/ c~ c= f0 f1 c\/ ccompact f1 c~ ccompact f0
- (_1431959 = _1431961) |- ((_1431960 = _1431962) ==> ((_1431961 IN _1431962) \/ (~ (_1431959 IN _1431960))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F))))))) |- (((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F))))))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((compact s) ==> (((retract_of s) UNIV) ==> ((x IN (UNIV DIFF s)) ==> ((y IN (UNIV DIFF s)) ==> ((~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))) ==> F))))))))
T c==> c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c/\ c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ccompact f0 c==> cretract_of f0 part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 cF
- (_1431963 = _1431965), (_1431964 = _1431966) |- (((((retract_of _1431963) _1431964) = ((retract_of _1431965) _1431966)) ==> (((retract_of _1431965) _1431966) \/ (~ ((retract_of _1431963) _1431964)))) = (((retract_of _1431965) _1431966) \/ (~ ((retract_of _1431963) _1431964))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cretract_of f0 f2 cretract_of f1 f3 c\/ cretract_of f1 f3 c~ cretract_of f0 f2 c\/ cretract_of f1 f3 c~ cretract_of f0 f2
- (~ (?x'. ((x' IN (UNIV DIFF s)) /\ (((connected_component (UNIV DIFF s)) x) = ((connected_component (UNIV DIFF s)) x'))))), (compact s), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (x IN (UNIV DIFF s)), (y IN (UNIV DIFF s)), ((retract_of s) UNIV) |- F
T c==> c~ c? / c/\ cIN b0 * * part cDIFF part cUNIV f0 c= * * part cconnected_component * * part cDIFF part cUNIV f0 f1 * * part cconnected_component * * part cDIFF part cUNIV f0 b0 c==> ccompact f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * * part cDIFF part cUNIV f0 c==> cIN f2 * * part cDIFF part cUNIV f0 c==> cretract_of f0 part cUNIV cF
