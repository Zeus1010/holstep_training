N Ardbzye.EDGE_4I2_LE_2H0
C |- (((BBs_v39 scs_4I2) v) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))))
T c==> cBBs_v39 cscs_4I2 f0 c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D ADD1
A |- (!m. ((SUC m) = (m + (NUMERAL (BIT1 _0)))))
T c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D Appendix.scs_a_v39_explicit
A |- (!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))))))
T c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 f9 f2
D Appendix.scs_b_v39_explicit
A |- (!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))))))
T c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 f9 f5
D Appendix.BBs_v39
A |- (!s. (!vv. (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV)))))
T c= cBBs_v39 f0 f1 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b0 part cball_annulus c/\ cperiodic f1 cscs_k_v39 f0 c/\ ! ! c/\ creal_le cscs_a_v39 f0 b3 b4 cdistance c, * f1 b3 * f1 b4 creal_le cdistance c, * f1 b3 * f1 b4 cscs_b_v39 f0 b3 b4 c\/ c<= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b0 c, b1 b2 * * part cIMAGE / c, * f1 b2 * f1 cSUC b2 part cUNIV * * part cIMAGE / * * part cINSERT * f1 b1 * * part cINSERT * f1 cSUC b1 part cEMPTY part cUNIV * * part cIMAGE f1 part cUNIV
D Appendix.mk_unadorned_v39
A |- (!k. (!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))))))
T c= cmk_unadorned_v39 f0 f1 f2 f3 cscs_v39 c, f0 c, f1 c, f2 c, f2 c, f3 c, f3 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY
D Appendix.scs_4I2
A |- (scs_4I2 = ((((mk_unadorned_v39 (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (((cs_adj (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))
T c= cscs_4I2 cmk_unadorned_v39 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
D Zithlqn.CS_ADJ
A |- (cs_adj = (\k. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))
T c= part ccs_adj / / / / / cCOND c= cMOD b3 b0 cMOD b4 b0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD b4 b0 cMOD cSUC b3 b0 c= cMOD cSUC b4 b0 cMOD b3 b0 b1 b2
D Qknvmlb.SUC_MOD_NOT_EQ
A |- (((NUMERAL (BIT1 _0)) < k) ==> (!i. (~ ((i MOD k) = ((SUC i) MOD k)))))
T c==> c< cNUMERAL cBIT1 c_0 f0 ! c~ c= cMOD b0 f0 cMOD cSUC b0 f0
D Ardbzye.K_SCS_4I2
A |- ((scs_k_v39 scs_4I2) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c= cscs_k_v39 cscs_4I2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)
T c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 f9 f0
- |- ((\mkj. (!q. (!p. (!s. ((((((scs_half_slice_v39 s) p) q) d') mkj) = ((LET (\p'. (LET_END ((LET (\k'. (LET_END ((LET (\mod2. (LET_END ((LET (\mod2b. (LET_END ((LET (\a1. (LET_END ((LET (\b1. (LET_END ((LET (\J. (LET_END (scs_v39 (k' , (d' , (a1 , (a1 , (b1 , (b1 , (J , (EMPTY , (EMPTY , EMPTY))))))))))))) (\i''. (\j''. (((COND (((i'' MOD k') INSERT ((j'' MOD k') INSERT EMPTY)) = ((NUMERAL _0) INSERT ((k' - (NUMERAL (BIT1 _0))) INSERT EMPTY)))) mkj) (((mod2b (scs_J_v39 s)) i'') j'')))))))) (\i''. (\j''. (((COND (((i'' MOD k') INSERT ((j'' MOD k') INSERT EMPTY)) = ((NUMERAL _0) INSERT ((k' - (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (((scs_bm_v39 s) p) q)) (((mod2 (scs_b_v39 s)) i'') j'')))))))) (\i''. (\j''. (((COND (((i'' MOD k') INSERT ((j'' MOD k') INSERT EMPTY)) = ((NUMERAL _0) INSERT ((k' - (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (((scs_am_v39 s) p) q)) (((mod2 (scs_a_v39 s)) i'') j'')))))))) (\f. (\j. (\j'. ((f ((j MOD k') + p')) ((j' MOD k') + p'))))))))) (\f. (\j. (\j'. ((f ((j MOD k') + p')) ((j' MOD k') + p'))))))))) ((q + ((NUMERAL (BIT1 _0)) + ((scs_k_v39 s) - p'))) MOD (scs_k_v39 s)))))) (p MOD (scs_k_v39 s)))))))) mkj)
T * / ! ! ! c= cscs_half_slice_v39 b3 b2 b1 f0 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cscs_v39 c, b5 c, f0 c, b8 c, b8 c, b9 c, b9 c, b10 c, part cEMPTY c, part cEMPTY part cEMPTY / / cCOND c= * * part cINSERT cMOD b10 b5 * * part cINSERT cMOD b11 b5 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT c- b5 cNUMERAL cBIT1 c_0 part cEMPTY b0 * * * b7 * part cscs_J_v39 b3 b10 b11 / / cCOND c= * * part cINSERT cMOD b9 b5 * * part cINSERT cMOD b10 b5 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT c- b5 cNUMERAL cBIT1 c_0 part cEMPTY cscs_bm_v39 b3 b2 b1 * * * b6 * part cscs_b_v39 b3 b9 b10 / / cCOND c= * * part cINSERT cMOD b8 b5 * * part cINSERT cMOD b9 b5 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT c- b5 cNUMERAL cBIT1 c_0 part cEMPTY cscs_am_v39 b3 b2 b1 * * * b6 * part cscs_a_v39 b3 b8 b9 / / / * * b7 c+ cMOD b8 b5 b4 c+ cMOD b9 b5 b4 / / / * * b6 c+ cMOD b7 b5 b4 c+ cMOD b8 b5 b4 cMOD c+ b1 c+ cNUMERAL cBIT1 c_0 c- cscs_k_v39 b3 b4 cscs_k_v39 b3 cMOD b2 cscs_k_v39 b3 f1
- |- (((NUMERAL _0) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = F)
T c= c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF
- ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) |- (((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) /\ (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))
T c==> c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0
- |- ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha)))))) alpha)
T * / ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b0 f5
- |- (((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0)))
T c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((NUMERAL _0) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = F)
T c= c= cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cF
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((!s. ((scs_basic_v39 s) = ((unadorned_v39 s) /\ (!i. (!j. ((((scs_J_v39 s) i) j) = F)))))) ==> ((\s. ((scs_basic_v39 s) = ((unadorned_v39 s) /\ (!i. (!j. ((((scs_J_v39 s) i) j) = F)))))) s)) = ((\s. ((scs_basic_v39 s) = ((unadorned_v39 s) /\ (!i. (!j. ((((scs_J_v39 s) i) j) = F)))))) s))
T c= c==> ! c= cscs_basic_v39 b0 c/\ cunadorned_v39 b0 ! ! c= cscs_J_v39 b0 b1 b2 cF * / c= cscs_basic_v39 b0 c/\ cunadorned_v39 b0 ! ! c= cscs_J_v39 b0 b1 b2 cF f0 * / c= cscs_basic_v39 b0 c/\ cunadorned_v39 b0 ! ! c= cscs_J_v39 b0 b1 b2 cF f0
- |- ((((NUMERAL _0) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0)) /\ (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) /\ (((a + (NUMERAL _0)) = a) /\ ((((NUMERAL _0) + a) = a) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL _0)) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0))))))))))))))))
T c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c+ f0 cNUMERAL c_0 f0 c/\ c= c+ cNUMERAL c_0 f0 f0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
+ |- ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))) alpha)
T * / ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f2 f5
- |- (((!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))))))))) ==> ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))))))))) k)) = ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))))))))) k))
T c= c==> ! ! ! ! ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b7 * / ! ! ! ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b7 f1 * / ! ! ! ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b7 f1
- |- ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))))))
T c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- (~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))
T c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
+ |- ((F ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ F) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND F) t') e'))))
T c==> c==> cF c= creal_of_num cNUMERAL c_0 f0 c==> c==> c~ cF c= cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c= cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND cF f0 f2
- |- ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))
T c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
- |- ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((!a. (!b. (!c. (!d. (((a , b) = (c , d)) = ((a = c) /\ (b = d))))))) /\ ((!a. (!d. ((((ASSOCD_v39 a) NIL) d) = d))) /\ ((!a. (!d. (!h. (!t. ((((ASSOCD_v39 a) ((CONS h) t)) d) = (((COND (a = (FST h))) (SND h)) (((ASSOCD_v39 a) t) d))))))) /\ ((!k. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) NIL) = NIL)) /\ ((!p. (!d. ((((ASSOCD_v39 p) NIL) d) = d))) /\ (!k. (!i. (!j. (!r. (!t. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) ((CONS ((i , j) , r)) t)) = ((CONS (((psort k) (i , j)) , r)) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) t))))))))))))))))))))))))
T c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ ! ! ! ! c= c= c, b0 b1 c, b2 b3 c/\ c= b0 b2 c= b1 b3 c/\ ! ! c= cASSOCD_v39 b0 cNIL b1 b1 c/\ ! ! ! ! c= cASSOCD_v39 b0 cCONS b2 b3 b1 cCOND c= b0 cFST b2 cSND b2 cASSOCD_v39 b0 b3 b1 c/\ ! c= cMAP * part cGABS / ! ! cGEQ * b1 c, b2 b3 c, cpsort b0 b2 b3 cNIL cNIL c/\ ! ! c= cASSOCD_v39 b0 cNIL b1 b1 ! ! ! ! ! c= cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b0 b6 b7 cCONS c, c, b1 b2 b3 b4 cCONS c, cpsort b0 c, b1 b2 b3 cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b0 b6 b7 b4
+ |- ((((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = g') ==> ((g' ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ g') ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (((COND g') t') e')))))
T c==> c= c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL c_0 f2 c==> c==> c~ f1 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 f3 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND f1 f2 f3
- |- ((~ (k = (NUMERAL _0))) ==> (((psort k) ((i + k) , j)) = ((psort k) (i , j))))
T c==> c~ c= f0 cNUMERAL c_0 c= cpsort f0 c, c+ f1 f0 f2 cpsort f0 c, f1 f2
- |- (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))))))))))))))))))))))))))))))))))))))))))))
T c/\ c<= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
- ((NUMERAL _0) = (NUMERAL (BIT1 _0))) |- ((NUMERAL (BIT1 _0)) = (NUMERAL _0))
T c==> c= cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cNUMERAL cBIT1 c_0 cNUMERAL c_0
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ |- ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (((COND T) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))
T c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND cT creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
- |- (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0)))))))))))))))))))))
T c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- ((((~ (~ F)) = F) ==> (F ==> (~ (~ F)))) = (F ==> (~ (~ F))))
T c= c==> c= c~ c~ cF cF c==> cF c~ c~ cF c==> cF c~ c~ cF
- ((NUMERAL _0) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) |- ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))
T c==> c= cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- (((!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))) ==> ((\lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))) lo)) = ((\lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))) lo))
T c= c==> ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f6 * / ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f6 f8 * / ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f6 f8
+ |- (((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) = ((real_le (distance ((v i) , (v (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))) ==> ((((real_le (distance ((v i) , (v (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) ==> ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))) = q')) ==> ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))) = (((real_le (distance ((v i) , (v (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) ==> q')))) = ((((real_le (distance ((v i) , (v (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) ==> ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))) = q')) ==> ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))) = (((real_le (distance ((v i) , (v (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) ==> q'))))
T c= c==> c= creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 f1 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c==> c==> creal_le cdistance c, * f0 f1 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c= c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 f2 c= c==> creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 c==> creal_le cdistance c, * f0 f1 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 f2 c==> c==> creal_le cdistance c, * f0 f1 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c= c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 f2 c= c==> creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 c==> creal_le cdistance c, * f0 f1 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 f2
- |- (((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0)))) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF
- |- ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))
T c<= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- (~ ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))))
T c~ c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = F)) = (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = F))
T c= c==> c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF
+ (~ T) |- ((~ T) /\ ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))
T c==> c~ cT c/\ c~ cT c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- (~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0)))
T c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- ((\beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo))))) beta)
T * / ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b2 f6
- |- ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0))))))))))))
T c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
+ |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
- |- (((((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((real_of_num (NUMERAL _0)) = (real_of_num (NUMERAL _0)))) ==> (((~ ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) e')))) = (((~ ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) e'))))
T c= c==> c==> c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c==> c==> c~ c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 f1 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 c==> c==> c~ c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 f1 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 f1
- |- (((!x. (x = x)) ==> ((\x. (x = x)) x)) = ((\x. (x = x)) x))
T c= c==> ! c= b0 b0 * / c= b0 b0 f0 * / c= b0 b0 f0
- |- ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT1 (BIT1 _0)))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) , (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL (BIT1 _0)) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL _0))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL _0))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) /\ (((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 _0)))))))))))))))))))
T c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0)))))))))))))))))))))))))))))))))))))
T c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
- ((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((scs_b_v39 scs_4I2) i) (i + (NUMERAL (BIT1 _0))))) |- (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((scs_b_v39 scs_4I2) i) (i + (NUMERAL (BIT1 _0))))) = T)
T c==> creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cscs_b_v39 cscs_4I2 f1 c+ f1 cNUMERAL cBIT1 c_0 c= creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cscs_b_v39 cscs_4I2 f1 c+ f1 cNUMERAL cBIT1 c_0 cT
- |- ((scs_basic_v39 s) = ((unadorned_v39 s) /\ (!i. (!j. ((((scs_J_v39 s) i) j) = F)))))
T c= cscs_basic_v39 f0 c/\ cunadorned_v39 f0 ! ! c= cscs_J_v39 f0 b0 b1 cF
- |- ((\u'. (!k. (!i. (!j. (((((((funlistA_v39 data) u) u') k) i) j) = (((COND ((i MOD k) = (j MOD k))) u) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) u'))))))) u')
T * / ! ! ! c= cfunlistA_v39 f0 f1 b0 b1 b2 b3 cCOND c= cMOD b2 b1 cMOD b3 b1 f1 cASSOCD_v39 cpsort b1 c, b2 b3 cMAP * part cGABS / ! ! cGEQ * b4 c, b5 b6 c, cpsort b1 b5 b6 f0 b0 f2
- |- (((!k. ((((scs_diag k) i) j) = ((~ ((i MOD k) = (j MOD k))) /\ ((~ (((SUC i) MOD k) = (j MOD k))) /\ (~ ((i MOD k) = ((SUC j) MOD k))))))) ==> ((\k. ((((scs_diag k) i) j) = ((~ ((i MOD k) = (j MOD k))) /\ ((~ (((SUC i) MOD k) = (j MOD k))) /\ (~ ((i MOD k) = ((SUC j) MOD k))))))) k)) = ((\k. ((((scs_diag k) i) j) = ((~ ((i MOD k) = (j MOD k))) /\ ((~ (((SUC i) MOD k) = (j MOD k))) /\ (~ ((i MOD k) = ((SUC j) MOD k))))))) k))
T c= c==> ! c= cscs_diag b0 f0 f1 c/\ c~ c= cMOD f0 b0 cMOD f1 b0 c/\ c~ c= cMOD cSUC f0 b0 cMOD f1 b0 c~ c= cMOD f0 b0 cMOD cSUC f1 b0 * / c= cscs_diag b0 f0 f1 c/\ c~ c= cMOD f0 b0 cMOD f1 b0 c/\ c~ c= cMOD cSUC f0 b0 cMOD f1 b0 c~ c= cMOD f0 b0 cMOD cSUC f1 b0 f2 * / c= cscs_diag b0 f0 f1 c/\ c~ c= cMOD f0 b0 cMOD f1 b0 c/\ c~ c= cMOD cSUC f0 b0 cMOD f1 b0 c~ c= cMOD f0 b0 cMOD cSUC f1 b0 f2
- |- ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))
T c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0))))))))))))))))))))))
T c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
+ |- (((~ F) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (((COND F) (real_of_num (NUMERAL _0))) e')))
T c==> c==> c~ cF c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 f1 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND cF creal_of_num cNUMERAL c_0 f1
- |- ((((NUMERAL _0) + a) = a) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL _0)) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0))))))
T c/\ c= c+ cNUMERAL c_0 f0 f0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- (~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0)))
T c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
+ |- (((!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)) ==> ((\str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)) str)) = ((\str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)) str))
T c= c==> ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f2 * / c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f2 f9 * / c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f2 f9
- |- (((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 cF
- |- ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0)))))))
T c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))))
T c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- ((real_le (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) |- (((real_le (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) = T)
T c==> creal_le cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 c= creal_le cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cT
- (((SUC i) MOD k) = (i MOD k)) |- ((i MOD k) = ((SUC i) MOD k))
T c==> c= cMOD cSUC f0 f1 cMOD f0 f1 c= cMOD f0 f1 cMOD cSUC f0 f1
- |- (((!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))) ==> ((\lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))) lo)) = ((\lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))) lo))
T c= c==> ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f0 * / ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f0 f8 * / ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f0 f8
- |- (~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0)))
T c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
+ |- ((((real_le (distance ((v i) , (v (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) ==> ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))) = q')) ==> ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))) = (((real_le (distance ((v i) , (v (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) ==> q')))
T c==> c==> creal_le cdistance c, * f0 f1 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c= c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 f2 c= c==> creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 c==> creal_le cdistance c, * f0 f1 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 f2
+ |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
- |- (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0))))))))
T c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta))))))))) d)
T * / ! ! ! ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b4 f2
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))))))))))))))))
T c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- ((!a. (!d. ((((ASSOCD_v39 a) NIL) d) = d))) /\ ((!a. (!d. (!h. (!t. ((((ASSOCD_v39 a) ((CONS h) t)) d) = (((COND (a = (FST h))) (SND h)) (((ASSOCD_v39 a) t) d))))))) /\ ((!k. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) NIL) = NIL)) /\ ((!p. (!d. ((((ASSOCD_v39 p) NIL) d) = d))) /\ (!k. (!i. (!j. (!r. (!t. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) ((CONS ((i , j) , r)) t)) = ((CONS (((psort k) (i , j)) , r)) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) t))))))))))))
T c/\ ! ! c= cASSOCD_v39 b0 cNIL b1 b1 c/\ ! ! ! ! c= cASSOCD_v39 b0 cCONS b2 b3 b1 cCOND c= b0 cFST b2 cSND b2 cASSOCD_v39 b0 b3 b1 c/\ ! c= cMAP * part cGABS / ! ! cGEQ * b1 c, b2 b3 c, cpsort b0 b2 b3 cNIL cNIL c/\ ! ! c= cASSOCD_v39 b0 cNIL b1 b1 ! ! ! ! ! c= cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b0 b6 b7 cCONS c, c, b1 b2 b3 b4 cCONS c, cpsort b0 c, b1 b2 b3 cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b0 b6 b7 b4
- |- ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))))) alpha)
T * / ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b3 f5
- |- ((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) = F)) = (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) = F))
T c= c==> c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF
- |- (((!i. (!j. ((((((funlist_v39 data) d) k) i) j) = (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) d))))) ==> ((\i. (!j. ((((((funlist_v39 data) d) k) i) j) = (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) d))))) i)) = ((\i. (!j. ((((((funlist_v39 data) d) k) i) j) = (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) d))))) i))
T c= c==> ! ! c= cfunlist_v39 f0 f1 f2 b0 b1 cCOND c= cMOD b0 f2 cMOD b1 f2 creal_of_num cNUMERAL c_0 cASSOCD_v39 cpsort f2 c, b0 b1 cMAP * part cGABS / ! ! cGEQ * b2 c, b3 b4 c, cpsort f2 b3 b4 f0 f1 * / ! c= cfunlist_v39 f0 f1 f2 b0 b1 cCOND c= cMOD b0 f2 cMOD b1 f2 creal_of_num cNUMERAL c_0 cASSOCD_v39 cpsort f2 c, b0 b1 cMAP * part cGABS / ! ! cGEQ * b2 c, b3 b4 c, cpsort f2 b3 b4 f0 f1 f3 * / ! c= cfunlist_v39 f0 f1 f2 b0 b1 cCOND c= cMOD b0 f2 cMOD b1 f2 creal_of_num cNUMERAL c_0 cASSOCD_v39 cpsort f2 c, b0 b1 cMAP * part cGABS / ! ! cGEQ * b2 c, b3 b4 c, cpsort f2 b3 b4 f0 f1 f3
- |- ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- ((\k. (!i. (!j. (((((((funlistA_v39 data) u) u') k) i) j) = (((COND ((i MOD k) = (j MOD k))) u) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) u')))))) k)
T * / ! ! c= cfunlistA_v39 f0 f1 f2 b0 b1 b2 cCOND c= cMOD b1 b0 cMOD b2 b0 f1 cASSOCD_v39 cpsort b0 c, b1 b2 cMAP * part cGABS / ! ! cGEQ * b3 c, b4 b5 c, cpsort b0 b4 b5 f0 f2 f3
- |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = T)
T c= c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cT
+ |- (((real_le (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))))
T c==> creal_le cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 c==> creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = F)
T c= c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF
- |- ((a + (NUMERAL _0)) = a)
T c= c+ f0 cNUMERAL c_0 f0
- |- ((\J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta)))) J)
T * / ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f4 f7
- |- (((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) ==> (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0)))) = F)) = (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0)))) = F))
T c= c==> c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c= c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cF c= c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cF
+ |- (((!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))))) ==> ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))))) d)) = ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))))) d))
T c= c==> ! ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b2 * / ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b2 f2 * / ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b2 f2
- |- (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0))) = F)
T c= c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cF
- |- ((((~ ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))) = ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))
T c= c==> c==> c~ c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- ((\str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)) str)
T * / c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f0 f9
- |- ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((!a. (!b. (!c. (!d. (((a , b) = (c , d)) = ((a = c) /\ (b = d))))))) /\ ((!a. (!d. ((((ASSOCD_v39 a) NIL) d) = d))) /\ ((!a. (!d. (!h. (!t. ((((ASSOCD_v39 a) ((CONS h) t)) d) = (((COND (a = (FST h))) (SND h)) (((ASSOCD_v39 a) t) d))))))) /\ ((!k. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) NIL) = NIL)) /\ ((!p. (!d. ((((ASSOCD_v39 p) NIL) d) = d))) /\ (!k. (!i. (!j. (!r. (!t. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) ((CONS ((i , j) , r)) t)) = ((CONS (((psort k) (i , j)) , r)) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) t))))))))))))))))
T c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ ! ! ! ! c= c= c, b0 b1 c, b2 b3 c/\ c= b0 b2 c= b1 b3 c/\ ! ! c= cASSOCD_v39 b0 cNIL b1 b1 c/\ ! ! ! ! c= cASSOCD_v39 b0 cCONS b2 b3 b1 cCOND c= b0 cFST b2 cSND b2 cASSOCD_v39 b0 b3 b1 c/\ ! c= cMAP * part cGABS / ! ! cGEQ * b1 c, b2 b3 c, cpsort b0 b2 b3 cNIL cNIL c/\ ! ! c= cASSOCD_v39 b0 cNIL b1 b1 ! ! ! ! ! c= cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b0 b6 b7 cCONS c, c, b1 b2 b3 b4 cCONS c, cpsort b0 c, b1 b2 b3 cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b0 b6 b7 b4
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = F)
T c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF
- |- ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0)) /\ (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) /\ (((a + (NUMERAL _0)) = a) /\ ((((NUMERAL _0) + a) = a) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL _0)) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0))))))))))))))
T c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c+ f0 cNUMERAL c_0 f0 c/\ c= c+ cNUMERAL c_0 f0 f0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- ((unadorned_v39 s) = (((scs_lo_v39 s) = EMPTY) /\ (((scs_hi_v39 s) = EMPTY) /\ (((scs_str_v39 s) = EMPTY) /\ (((scs_a_v39 s) = (scs_am_v39 s)) /\ ((scs_b_v39 s) = (scs_bm_v39 s)))))))
T c= cunadorned_v39 f0 c/\ c= * part cscs_lo_v39 f0 part cEMPTY c/\ c= * part cscs_hi_v39 f0 part cEMPTY c/\ c= * part cscs_str_v39 f0 part cEMPTY c/\ c= * part cscs_a_v39 f0 * part cscs_am_v39 f0 c= * part cscs_b_v39 f0 * part cscs_bm_v39 f0
- |- (((!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))) ==> ((\y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))) y)) = ((\y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))) y))
T c= c==> ! ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 * / ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 f1 * / ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 f1
- |- ((((NUMERAL (BIT1 _0)) + (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0)))))))))))))))))))))))))
T c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) , (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 _0))))
T c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- (((!a. (!d. ((((ASSOCD_v39 a) NIL) d) = d))) ==> ((\a. (!d. ((((ASSOCD_v39 a) NIL) d) = d))) a)) = ((\a. (!d. ((((ASSOCD_v39 a) NIL) d) = d))) a))
T c= c==> ! ! c= cASSOCD_v39 b0 cNIL b1 b1 * / ! c= cASSOCD_v39 b0 cNIL b1 b1 f0 * / ! c= cASSOCD_v39 b0 cNIL b1 b1 f0
- |- (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))))))))))))))))))))))))))))))))))))))
T c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c==> c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- (((!k. (!f. (((periodic2 f) k) = (!i. (!j. ((((f (i + k)) j) = ((f i) j)) /\ (((f i) (j + k)) = ((f i) j)))))))) ==> ((\k. (!f. (((periodic2 f) k) = (!i. (!j. ((((f (i + k)) j) = ((f i) j)) /\ (((f i) (j + k)) = ((f i) j)))))))) k)) = ((\k. (!f. (((periodic2 f) k) = (!i. (!j. ((((f (i + k)) j) = ((f i) j)) /\ (((f i) (j + k)) = ((f i) j)))))))) k))
T c= c==> ! ! c= cperiodic2 b1 b0 ! ! c/\ c= * * b1 c+ b2 b0 b3 * * b1 b2 b3 c= * * b1 b2 c+ b3 b0 * * b1 b2 b3 * / ! c= cperiodic2 b1 b0 ! ! c/\ c= * * b1 c+ b2 b0 b3 * * b1 b2 b3 c= * * b1 b2 c+ b3 b0 * * b1 b2 b3 f0 * / ! c= cperiodic2 b1 b0 ! ! c/\ c= * * b1 c+ b2 b0 b3 * * b1 b2 b3 c= * * b1 b2 c+ b3 b0 * * b1 b2 b3 f0
+ |- ((\J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))) J)
T * / ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f5 f7
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL _0)))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL c_0
+ |- ((\p'. (!q'. ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) = p') ==> ((p' ==> ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))) = q')) ==> ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))) = (p' ==> q')))))) p')
T * / ! c==> c= creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 b1 c= c==> creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 c==> b0 b1 f2
- |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) = T)
T c= c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cT
+ |- ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))))) d)
T * / ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b2 f2
- ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c==> c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = T)
T c= c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cT
- |- ((\k. (!i. (!j. ((((((funlist_v39 data) d) k) i) j) = (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) d)))))) k)
T * / ! ! c= cfunlist_v39 f0 f1 b0 b1 b2 cCOND c= cMOD b1 b0 cMOD b2 b0 creal_of_num cNUMERAL c_0 cASSOCD_v39 cpsort b0 c, b1 b2 cMAP * part cGABS / ! ! cGEQ * b3 c, b4 b5 c, cpsort b0 b4 b5 f0 f1 f2
- |- ((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))
T c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- (((~ ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> (((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = F)) = (((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = F))
T c= c==> c~ c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF
- |- ((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))
T c/\ c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) ==> (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0)) = F)) = (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0)) = F))
T c= c==> c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 cF c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 cF
+ |- ((\g'. (!t'. (!e'. ((((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = g') ==> ((g' ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ g') ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_of_num cNUMERAL c_0 b1 c==> c==> c~ b0 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 b2 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND b0 b1 b2 f1
- |- (((!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))) ==> ((\J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))) J)) = ((\J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))) J))
T c= c==> ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 b0 * / ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 b0 f7 * / ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 b0 f7
- |- (((!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))))))) ==> ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))))))) a)) = ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))))))) a))
T c= c==> ! ! ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b4 * / ! ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b4 f3 * / ! ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b4 f3
- |- (((scs_prop_equ_v39 s) i) = ((LET (\shift1. (LET_END ((LET (\shift2. (LET_END ((LET (\shift2b. (LET_END (scs_v39 ((scs_k_v39 s) , ((scs_d_v39 s) , ((shift2 (scs_a_v39 s)) , ((shift2 (scs_am_v39 s)) , ((shift2 (scs_bm_v39 s)) , ((shift2 (scs_b_v39 s)) , ((shift2b (scs_J_v39 s)) , ((shift1 (scs_lo_v39 s)) , ((shift1 (scs_hi_v39 s)) , (shift1 (scs_str_v39 s))))))))))))))) (\f. (\j. (\j'. ((f (i + j)) (i + j'))))))))) (\f. (\j. (\j'. ((f (i + j)) (i + j'))))))))) (\f. (\j. (f (i + j))))))
T c= cscs_prop_equ_v39 f0 f1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cscs_v39 c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * b1 * part cscs_a_v39 f0 c, * b1 * part cscs_am_v39 f0 c, * b1 * part cscs_bm_v39 f0 c, * b1 * part cscs_b_v39 f0 c, * b2 * part cscs_J_v39 f0 c, * b0 * part cscs_lo_v39 f0 c, * b0 * part cscs_hi_v39 f0 * b0 * part cscs_str_v39 f0 / / / * * b2 c+ f1 b3 c+ f1 b4 / / / * * b1 c+ f1 b2 c+ f1 b3 / / * b0 c+ f1 b1
- |- (((!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi)))) ==> ((\J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi)))) J)) = ((\J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi)))) J))
T c= c==> ! ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f6 * / ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f6 f7 * / ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f6 f7
- |- (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))))
T c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- (((!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo))))))))) ==> ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo))))))))) d)) = ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo))))))))) d))
T c= c==> ! ! ! ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b6 * / ! ! ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b6 f2 * / ! ! ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b6 f2
- |- ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi))))))) b)
T * / ! ! ! ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f3 f4
+ ((!i. (!j. (((real_le (((scs_a_v39 scs_4I2) i) j)) (distance ((v i) , (v j)))) /\ ((real_le (distance ((v i) , (v j)))) (((scs_b_v39 scs_4I2) i) j))))) /\ (convex_local_fan (((IMAGE v) UNIV) , (((IMAGE (\i. ((v i) INSERT ((v (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((v i) , (v (SUC i))))) UNIV))))) |- (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))
T c==> c/\ ! ! c/\ creal_le cscs_a_v39 cscs_4I2 b0 b1 cdistance c, * f0 b0 * f0 b1 creal_le cdistance c, * f0 b0 * f0 b1 cscs_b_v39 cscs_4I2 b0 b1 cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0
- |- (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) /\ (((a + (NUMERAL _0)) = a) /\ ((((NUMERAL _0) + a) = a) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL _0)) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0))))))))))))
T c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c+ f0 cNUMERAL c_0 f0 c/\ c= c+ cNUMERAL c_0 f0 f0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- ((\J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str)))) J)
T * / ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 b2 f7
+ |- ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))) b)
T * / ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f2 f4
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
- |- (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) /\ ((SUC (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))
T c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c= cSUC cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 c_0
- |- ((((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((!a. (!b. (!c. (!d. (((a , b) = (c , d)) = ((a = c) /\ (b = d))))))) /\ ((!a. (!d. ((((ASSOCD_v39 a) NIL) d) = d))) /\ ((!a. (!d. (!h. (!t. ((((ASSOCD_v39 a) ((CONS h) t)) d) = (((COND (a = (FST h))) (SND h)) (((ASSOCD_v39 a) t) d))))))) /\ ((!k. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) NIL) = NIL)) /\ ((!p. (!d. ((((ASSOCD_v39 p) NIL) d) = d))) /\ (!k. (!i. (!j. (!r. (!t. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) ((CONS ((i , j) , r)) t)) = ((CONS (((psort k) (i , j)) , r)) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) t))))))))))))))))))))))))))))
T c/\ c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ ! ! ! ! c= c= c, b0 b1 c, b2 b3 c/\ c= b0 b2 c= b1 b3 c/\ ! ! c= cASSOCD_v39 b0 cNIL b1 b1 c/\ ! ! ! ! c= cASSOCD_v39 b0 cCONS b2 b3 b1 cCOND c= b0 cFST b2 cSND b2 cASSOCD_v39 b0 b3 b1 c/\ ! c= cMAP * part cGABS / ! ! cGEQ * b1 c, b2 b3 c, cpsort b0 b2 b3 cNIL cNIL c/\ ! ! c= cASSOCD_v39 b0 cNIL b1 b1 ! ! ! ! ! c= cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b0 b6 b7 cCONS c, c, b1 b2 b3 b4 cCONS c, cpsort b0 c, b1 b2 b3 cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b0 b6 b7 b4
- |- (((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\q'. ((((real_le (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) = p') ==> ((p' ==> ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))) = q')) ==> ((((real_le (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))))) = (p' ==> q'))))) q')
T * / c==> c= creal_le cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= c==> creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 b0 c= c==> creal_le cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 c==> creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 c==> f2 b0 f3
- |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) = F)
T c= c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF
- |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))))))))))))))))))))))))))))))))
T c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))) ==> ((\J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))) J)) = ((\J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))) J))
T c= c==> ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 b1 * / ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 b1 f7 * / ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 b1 f7
- |- (((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))) ==> ((\beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))) beta)) = ((\beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))) beta))
T c= c==> ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b1 * / ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b1 f6 * / ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b1 f6
- |- (((!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str)))) ==> ((\J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str)))) J)) = ((\J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str)))) J))
T c= c==> ! ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 b2 * / ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 b2 f7 * / ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 b2 f7
- |- ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))))))))))))))))))))))))))))))
T c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))))) b)
T * / ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b3 f4
- |- ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) /\ (((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 _0)))))))
T c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- ((((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = g') ==> ((g' ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ g') ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND g') t') e')))))
T c==> c= c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL c_0 f2 c==> c==> c~ f1 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f3 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND f1 f2 f3
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL _0)) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0)))))
T c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))))))))))))))))))
T c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0)))))))))))))))))))))))))))))
T c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
+ |- (((!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))) ==> ((\J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))) J)) = ((\J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))) J))
T c= c==> ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f5 * / ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f5 f7 * / ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f5 f7
+ (((real_le (((scs_a_v39 scs_4I2) i) (i + (NUMERAL (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) /\ ((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((scs_b_v39 scs_4I2) i) (i + (NUMERAL (BIT1 _0)))))) |- ((((real_le (((scs_a_v39 scs_4I2) i) (i + (NUMERAL (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) /\ ((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((scs_b_v39 scs_4I2) i) (i + (NUMERAL (BIT1 _0)))))) /\ (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))))
T c==> c/\ creal_le cscs_a_v39 cscs_4I2 f0 c+ f0 cNUMERAL cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cscs_b_v39 cscs_4I2 f0 c+ f0 cNUMERAL cBIT1 c_0 c/\ c/\ creal_le cscs_a_v39 cscs_4I2 f0 c+ f0 cNUMERAL cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cscs_b_v39 cscs_4I2 f0 c+ f0 cNUMERAL cBIT1 c_0 c/\ creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- (((!n. ((d_tame n) = (((COND (n = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL _0))) (((COND (n = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((COND (n = (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ((DECIMAL (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))))))) (((COND (n = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) tgt)))))) ==> ((\n. ((d_tame n) = (((COND (n = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL _0))) (((COND (n = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((COND (n = (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ((DECIMAL (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))))))) (((COND (n = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) tgt)))))) n)) = ((\n. ((d_tame n) = (((COND (n = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL _0))) (((COND (n = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((COND (n = (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ((DECIMAL (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))))))) (((COND (n = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) tgt)))))) n))
T c= c==> ! c= cd_tame b0 cCOND c= b0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c= b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cCOND c= b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cCOND c= b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 ctgt * / c= cd_tame b0 cCOND c= b0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c= b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cCOND c= b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cCOND c= b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 ctgt f0 * / c= cd_tame b0 cCOND c= b0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c= b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cCOND c= b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cCOND c= b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 ctgt f0
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- ((\s. ((unadorned_v39 s) = (((scs_lo_v39 s) = EMPTY) /\ (((scs_hi_v39 s) = EMPTY) /\ (((scs_str_v39 s) = EMPTY) /\ (((scs_a_v39 s) = (scs_am_v39 s)) /\ ((scs_b_v39 s) = (scs_bm_v39 s)))))))) s)
T * / c= cunadorned_v39 b0 c/\ c= * part cscs_lo_v39 b0 part cEMPTY c/\ c= * part cscs_hi_v39 b0 part cEMPTY c/\ c= * part cscs_str_v39 b0 part cEMPTY c/\ c= * part cscs_a_v39 b0 * part cscs_am_v39 b0 c= * part cscs_b_v39 b0 * part cscs_bm_v39 b0 f0
- |- (((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = F)
T c= c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF
- |- (~ ((NUMERAL _0) = (NUMERAL (BIT1 _0))))
T c~ c= cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- (((((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> ((((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) t') e'))))) = ((((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) t') e')))))
T c= c==> c= c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c==> c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= creal_of_num cNUMERAL c_0 f1 c==> c==> c~ c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 f2 c==> c==> c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= creal_of_num cNUMERAL c_0 f1 c==> c==> c~ c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 f2
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- |- (((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF
- (~ ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) |- ((~ ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) /\ ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))
T c==> c~ c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- (((!alpha. (!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta)))))) ==> ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta)))))) alpha)) = ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta)))))) alpha))
T c= c==> ! ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b1 * / ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b1 f5 * / ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b1 f5
+ |- ((((NUMERAL (BIT1 _0)) < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = F)) = (((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = F))
T c= c==> c< cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF c= c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF
- ((NUMERAL (BIT1 _0)) < k) |- (~ (((SUC i) MOD k) = (i MOD k)))
T c==> c< cNUMERAL cBIT1 c_0 f0 c~ c= cMOD cSUC f1 f0 cMOD f1 f0
- |- (((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo))))))))) d)
T * / ! ! ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b6 f2
- |- (((!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)) ==> ((\str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)) str)) = ((\str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)) str))
T c= c==> ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f1 * / c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f1 f9 * / c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f1 f9
- |- (((!j. (!r. (!t. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) ((CONS ((i , j) , r)) t)) = ((CONS (((psort k) (i , j)) , r)) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) t)))))) ==> ((\j. (!r. (!t. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) ((CONS ((i , j) , r)) t)) = ((CONS (((psort k) (i , j)) , r)) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) t)))))) j)) = ((\j. (!r. (!t. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) ((CONS ((i , j) , r)) t)) = ((CONS (((psort k) (i , j)) , r)) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) t)))))) j))
T c= c==> ! ! ! c= cMAP * part cGABS / ! ! cGEQ * b3 c, b4 b5 c, cpsort f0 b4 b5 cCONS c, c, f1 b0 b1 b2 cCONS c, cpsort f0 c, f1 b0 b1 cMAP * part cGABS / ! ! cGEQ * b3 c, b4 b5 c, cpsort f0 b4 b5 b2 * / ! ! c= cMAP * part cGABS / ! ! cGEQ * b3 c, b4 b5 c, cpsort f0 b4 b5 cCONS c, c, f1 b0 b1 b2 cCONS c, cpsort f0 c, f1 b0 b1 cMAP * part cGABS / ! ! cGEQ * b3 c, b4 b5 c, cpsort f0 b4 b5 b2 f2 * / ! ! c= cMAP * part cGABS / ! ! cGEQ * b3 c, b4 b5 c, cpsort f0 b4 b5 cCONS c, c, f1 b0 b1 b2 cCONS c, cpsort f0 c, f1 b0 b1 cMAP * part cGABS / ! ! cGEQ * b3 c, b4 b5 c, cpsort f0 b4 b5 b2 f2
- |- ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0)))))))))))))))))))))))))))))
T c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- (((!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi))) ==> ((\lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi))) lo)) = ((\lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi))) lo))
T c= c==> ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f7 * / ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f7 f8 * / ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f7 f8
+ |- (((!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))) ==> ((\beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))) beta)) = ((\beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))) beta))
T c= c==> ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f2 * / ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f2 f6 * / ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f2 f6
- |- ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0)) /\ (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) /\ (((a + (NUMERAL _0)) = a) /\ ((((NUMERAL _0) + a) = a) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL _0)) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0)))))))))))))
T c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c+ f0 cNUMERAL c_0 f0 c/\ c= c+ cNUMERAL c_0 f0 f0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- ((\J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi)))) J)
T * / ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f6 f7
- |- (((NUMERAL _0) = (NUMERAL (BIT0 (BIT1 _0)))) = F)
T c= c= cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 cF
- |- (~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))))
T c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((~ ((NUMERAL _0) = (NUMERAL (BIT0 (BIT1 _0))))) ==> (((NUMERAL _0) = (NUMERAL (BIT0 (BIT1 _0)))) = F)) = (((NUMERAL _0) = (NUMERAL (BIT0 (BIT1 _0)))) = F))
T c= c==> c~ c= cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c= c= cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 cF c= c= cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 cF
- |- ((((scs_diag k) i) j) = ((~ ((i MOD k) = (j MOD k))) /\ ((~ (((SUC i) MOD k) = (j MOD k))) /\ (~ ((i MOD k) = ((SUC j) MOD k))))))
T c= cscs_diag f0 f1 f2 c/\ c~ c= cMOD f1 f0 cMOD f2 f0 c/\ c~ c= cMOD cSUC f1 f0 cMOD f2 f0 c~ c= cMOD f1 f0 cMOD cSUC f2 f0
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))))))
T c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha))))))) ==> ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha))))))) b)) = ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha))))))) b))
T c= c==> ! ! ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b1 * / ! ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b1 f4 * / ! ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b1 f4
- |- ((((~ (~ F)) = F) ==> ((~ (~ F)) ==> F)) = ((~ (~ F)) ==> F))
T c= c==> c= c~ c~ cF cF c==> c~ c~ cF cF c==> c~ c~ cF cF
- |- (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) NIL) = NIL)
T c= cMAP * part cGABS / ! ! cGEQ * b0 c, b1 b2 c, cpsort f0 b1 b2 cNIL cNIL
- |- ((\s. ((((((scs_half_slice_v39 s) p) q) d') mkj) = ((LET (\p'. (LET_END ((LET (\k'. (LET_END ((LET (\mod2. (LET_END ((LET (\mod2b. (LET_END ((LET (\a1. (LET_END ((LET (\b1. (LET_END ((LET (\J. (LET_END (scs_v39 (k' , (d' , (a1 , (a1 , (b1 , (b1 , (J , (EMPTY , (EMPTY , EMPTY))))))))))))) (\i''. (\j''. (((COND (((i'' MOD k') INSERT ((j'' MOD k') INSERT EMPTY)) = ((NUMERAL _0) INSERT ((k' - (NUMERAL (BIT1 _0))) INSERT EMPTY)))) mkj) (((mod2b (scs_J_v39 s)) i'') j'')))))))) (\i''. (\j''. (((COND (((i'' MOD k') INSERT ((j'' MOD k') INSERT EMPTY)) = ((NUMERAL _0) INSERT ((k' - (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (((scs_bm_v39 s) p) q)) (((mod2 (scs_b_v39 s)) i'') j'')))))))) (\i''. (\j''. (((COND (((i'' MOD k') INSERT ((j'' MOD k') INSERT EMPTY)) = ((NUMERAL _0) INSERT ((k' - (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (((scs_am_v39 s) p) q)) (((mod2 (scs_a_v39 s)) i'') j'')))))))) (\f. (\j. (\j'. ((f ((j MOD k') + p')) ((j' MOD k') + p'))))))))) (\f. (\j. (\j'. ((f ((j MOD k') + p')) ((j' MOD k') + p'))))))))) ((q + ((NUMERAL (BIT1 _0)) + ((scs_k_v39 s) - p'))) MOD (scs_k_v39 s)))))) (p MOD (scs_k_v39 s))))) s)
T * / c= cscs_half_slice_v39 b0 f0 f1 f2 f3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cscs_v39 c, b2 c, f2 c, b5 c, b5 c, b6 c, b6 c, b7 c, part cEMPTY c, part cEMPTY part cEMPTY / / cCOND c= * * part cINSERT cMOD b7 b2 * * part cINSERT cMOD b8 b2 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT c- b2 cNUMERAL cBIT1 c_0 part cEMPTY f3 * * * b4 * part cscs_J_v39 b0 b7 b8 / / cCOND c= * * part cINSERT cMOD b6 b2 * * part cINSERT cMOD b7 b2 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT c- b2 cNUMERAL cBIT1 c_0 part cEMPTY cscs_bm_v39 b0 f0 f1 * * * b3 * part cscs_b_v39 b0 b6 b7 / / cCOND c= * * part cINSERT cMOD b5 b2 * * part cINSERT cMOD b6 b2 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT c- b2 cNUMERAL cBIT1 c_0 part cEMPTY cscs_am_v39 b0 f0 f1 * * * b3 * part cscs_a_v39 b0 b5 b6 / / / * * b4 c+ cMOD b5 b2 b1 c+ cMOD b6 b2 b1 / / / * * b3 c+ cMOD b4 b2 b1 c+ cMOD b5 b2 b1 cMOD c+ f1 c+ cNUMERAL cBIT1 c_0 c- cscs_k_v39 b0 b1 cscs_k_v39 b0 cMOD f0 cscs_k_v39 b0 f4
- |- (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))))))))))))))))))))))))))
T c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ T |- (T /\ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c==> cT c/\ cT c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0)))))))))))))))))))))
T c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- (((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ==> ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) = t')) ==> (((~ ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) t') e'))))) = ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) = t')) ==> (((~ ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) t') e')))))
T c= c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c==> c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 f1 c==> c==> c~ c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 f2 c==> c==> c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 f1 c==> c==> c~ c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 f2
- |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))))))))
T c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- (((!u. (!u'. (!k. (!i. (!j. (((((((funlistA_v39 data) u) u') k) i) j) = (((COND ((i MOD k) = (j MOD k))) u) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) u')))))))) ==> ((\u. (!u'. (!k. (!i. (!j. (((((((funlistA_v39 data) u) u') k) i) j) = (((COND ((i MOD k) = (j MOD k))) u) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) u')))))))) u)) = ((\u. (!u'. (!k. (!i. (!j. (((((((funlistA_v39 data) u) u') k) i) j) = (((COND ((i MOD k) = (j MOD k))) u) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) u')))))))) u))
T c= c==> ! ! ! ! ! c= cfunlistA_v39 f0 b0 b1 b2 b3 b4 cCOND c= cMOD b3 b2 cMOD b4 b2 b0 cASSOCD_v39 cpsort b2 c, b3 b4 cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b2 b6 b7 f0 b1 * / ! ! ! ! c= cfunlistA_v39 f0 b0 b1 b2 b3 b4 cCOND c= cMOD b3 b2 cMOD b4 b2 b0 cASSOCD_v39 cpsort b2 c, b3 b4 cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b2 b6 b7 f0 b1 f1 * / ! ! ! ! c= cfunlistA_v39 f0 b0 b1 b2 b3 b4 cCOND c= cMOD b3 b2 cMOD b4 b2 b0 cASSOCD_v39 cpsort b2 c, b3 b4 cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b2 b6 b7 f0 b1 f1
- |- (((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) ==> (((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0)) = F)) = (((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0)) = F))
T c= c==> c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c= c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 cF c= c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 cF
- |- (((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0))
T c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL _0))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) /\ (((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 _0))))))))
T c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0))
T c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (~ ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c~ c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- ((i MOD k) = ((SUC i) MOD k)) |- (((SUC i) MOD k) = (i MOD k))
T c==> c= cMOD f0 f1 cMOD cSUC f0 f1 c= cMOD cSUC f0 f1 cMOD f0 f1
- |- (((!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))) ==> ((\a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))) a)) = ((\a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))) a))
T c= c==> ! ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 * / ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 f2 * / ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 f2
- |- (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) = F)
T c= c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF
- |- (((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0))
T c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) /\ ((SUC (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))
T c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c= cSUC cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 c_0
- |- (((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0))))
T c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- ((!j. t) = t)
T c= ! f0 f0
+ |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
- |- ((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0)))
T c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str))))))) b)
T * / ! ! ! ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b5 f4
+ |- ((((real_le (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))))) = (((real_le (((scs_a_v39 scs_4I2) i) (i + (NUMERAL (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((scs_b_v39 scs_4I2) i) (i + (NUMERAL (BIT1 _0))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))))))
T c= c==> creal_le cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 c==> creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 c==> creal_le cscs_a_v39 cscs_4I2 f0 c+ f0 cNUMERAL cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 c==> creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cscs_b_v39 cscs_4I2 f0 c+ f0 cNUMERAL cBIT1 c_0 c/\ creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0
- |- ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL (BIT1 _0)) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL _0))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL _0))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) /\ (((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 _0)))))))))))))))))
T c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- (~ ((NUMERAL _0) = (NUMERAL (BIT0 (BIT1 _0)))))
T c~ c= cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0)))))
T c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))))))
T c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((!i. (!j. (((((((funlistA_v39 data) u) u') k) i) j) = (((COND ((i MOD k) = (j MOD k))) u) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) u'))))) ==> ((\i. (!j. (((((((funlistA_v39 data) u) u') k) i) j) = (((COND ((i MOD k) = (j MOD k))) u) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) u'))))) i)) = ((\i. (!j. (((((((funlistA_v39 data) u) u') k) i) j) = (((COND ((i MOD k) = (j MOD k))) u) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) u'))))) i))
T c= c==> ! ! c= cfunlistA_v39 f0 f1 f2 f3 b0 b1 cCOND c= cMOD b0 f3 cMOD b1 f3 f1 cASSOCD_v39 cpsort f3 c, b0 b1 cMAP * part cGABS / ! ! cGEQ * b2 c, b3 b4 c, cpsort f3 b3 b4 f0 f2 * / ! c= cfunlistA_v39 f0 f1 f2 f3 b0 b1 cCOND c= cMOD b0 f3 cMOD b1 f3 f1 cASSOCD_v39 cpsort f3 c, b0 b1 cMAP * part cGABS / ! ! cGEQ * b2 c, b3 b4 c, cpsort f3 b3 b4 f0 f2 f4 * / ! c= cfunlistA_v39 f0 f1 f2 f3 b0 b1 cCOND c= cMOD b0 f3 cMOD b1 f3 f1 cASSOCD_v39 cpsort f3 c, b0 b1 cMAP * part cGABS / ! ! cGEQ * b2 c, b3 b4 c, cpsort f3 b3 b4 f0 f2 f4
- |- (((!i. (((scs_prop_equ_v39 s) i) = ((LET (\shift1. (LET_END ((LET (\shift2. (LET_END ((LET (\shift2b. (LET_END (scs_v39 ((scs_k_v39 s) , ((scs_d_v39 s) , ((shift2 (scs_a_v39 s)) , ((shift2 (scs_am_v39 s)) , ((shift2 (scs_bm_v39 s)) , ((shift2 (scs_b_v39 s)) , ((shift2b (scs_J_v39 s)) , ((shift1 (scs_lo_v39 s)) , ((shift1 (scs_hi_v39 s)) , (shift1 (scs_str_v39 s))))))))))))))) (\f. (\j. (\j'. ((f (i + j)) (i + j'))))))))) (\f. (\j. (\j'. ((f (i + j)) (i + j'))))))))) (\f. (\j. (f (i + j))))))) ==> ((\i. (((scs_prop_equ_v39 s) i) = ((LET (\shift1. (LET_END ((LET (\shift2. (LET_END ((LET (\shift2b. (LET_END (scs_v39 ((scs_k_v39 s) , ((scs_d_v39 s) , ((shift2 (scs_a_v39 s)) , ((shift2 (scs_am_v39 s)) , ((shift2 (scs_bm_v39 s)) , ((shift2 (scs_b_v39 s)) , ((shift2b (scs_J_v39 s)) , ((shift1 (scs_lo_v39 s)) , ((shift1 (scs_hi_v39 s)) , (shift1 (scs_str_v39 s))))))))))))))) (\f. (\j. (\j'. ((f (i + j)) (i + j'))))))))) (\f. (\j. (\j'. ((f (i + j)) (i + j'))))))))) (\f. (\j. (f (i + j))))))) i)) = ((\i. (((scs_prop_equ_v39 s) i) = ((LET (\shift1. (LET_END ((LET (\shift2. (LET_END ((LET (\shift2b. (LET_END (scs_v39 ((scs_k_v39 s) , ((scs_d_v39 s) , ((shift2 (scs_a_v39 s)) , ((shift2 (scs_am_v39 s)) , ((shift2 (scs_bm_v39 s)) , ((shift2 (scs_b_v39 s)) , ((shift2b (scs_J_v39 s)) , ((shift1 (scs_lo_v39 s)) , ((shift1 (scs_hi_v39 s)) , (shift1 (scs_str_v39 s))))))))))))))) (\f. (\j. (\j'. ((f (i + j)) (i + j'))))))))) (\f. (\j. (\j'. ((f (i + j)) (i + j'))))))))) (\f. (\j. (f (i + j))))))) i))
T c= c==> ! c= cscs_prop_equ_v39 f0 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cscs_v39 c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * b2 * part cscs_a_v39 f0 c, * b2 * part cscs_am_v39 f0 c, * b2 * part cscs_bm_v39 f0 c, * b2 * part cscs_b_v39 f0 c, * b3 * part cscs_J_v39 f0 c, * b1 * part cscs_lo_v39 f0 c, * b1 * part cscs_hi_v39 f0 * b1 * part cscs_str_v39 f0 / / / * * b3 c+ b0 b4 c+ b0 b5 / / / * * b2 c+ b0 b3 c+ b0 b4 / / * b1 c+ b0 b2 * / c= cscs_prop_equ_v39 f0 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cscs_v39 c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * b2 * part cscs_a_v39 f0 c, * b2 * part cscs_am_v39 f0 c, * b2 * part cscs_bm_v39 f0 c, * b2 * part cscs_b_v39 f0 c, * b3 * part cscs_J_v39 f0 c, * b1 * part cscs_lo_v39 f0 c, * b1 * part cscs_hi_v39 f0 * b1 * part cscs_str_v39 f0 / / / * * b3 c+ b0 b4 c+ b0 b5 / / / * * b2 c+ b0 b3 c+ b0 b4 / / * b1 c+ b0 b2 f1 * / c= cscs_prop_equ_v39 f0 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cscs_v39 c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * b2 * part cscs_a_v39 f0 c, * b2 * part cscs_am_v39 f0 c, * b2 * part cscs_bm_v39 f0 c, * b2 * part cscs_b_v39 f0 c, * b3 * part cscs_J_v39 f0 c, * b1 * part cscs_lo_v39 f0 c, * b1 * part cscs_hi_v39 f0 * b1 * part cscs_str_v39 f0 / / / * * b3 c+ b0 b4 c+ b0 b5 / / / * * b2 c+ b0 b3 c+ b0 b4 / / * b1 c+ b0 b2 f1
- |- (((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cF
- |- (((!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))) ==> ((\beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))) beta)) = ((\beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))) beta))
T c= c==> ! ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f0 * / ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f0 f6 * / ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f0 f6
+ |- (((!e'. ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (((COND g') t') e')))))) ==> ((\e'. ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (((COND g') t') e')))))) e')) = ((\e'. ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f2 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 b0 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND f1 f2 b0 * / c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f2 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 b0 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND f1 f2 b0 f3 * / c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f2 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 b0 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND f1 f2 b0 f3
- |- (((!x. ((x IN P) = (P x))) ==> ((\x. ((x IN P) = (P x))) x)) = ((\x. ((x IN P) = (P x))) x))
T c= c==> ! c= cIN b0 f0 * f0 b0 * / c= cIN b0 f0 * f0 b0 f1 * / c= cIN b0 f0 * f0 b0 f1
- ((NUMERAL _0) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) |- ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))
T c==> c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- (((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ ((((IMAGE v) UNIV) SUBSET ball_annulus) /\ (((periodic v) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((!i. (!j. (((real_le (((scs_a_v39 scs_4I2) i) j)) (distance ((v i) , (v j)))) /\ ((real_le (distance ((v i) , (v j)))) (((scs_b_v39 scs_4I2) i) j))))) /\ (convex_local_fan (((IMAGE v) UNIV) , (((IMAGE (\i. ((v i) INSERT ((v (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((v i) , (v (SUC i))))) UNIV))))))) |- (((((IMAGE v) UNIV) SUBSET ball_annulus) /\ (((periodic v) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((!i. (!j. (((real_le (((scs_a_v39 scs_4I2) i) j)) (distance ((v i) , (v j)))) /\ ((real_le (distance ((v i) , (v j)))) (((scs_b_v39 scs_4I2) i) j))))) /\ (convex_local_fan (((IMAGE v) UNIV) , (((IMAGE (\i. ((v i) INSERT ((v (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((v i) , (v (SUC i))))) UNIV))))))) /\ (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))))
T c==> c/\ cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c/\ cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ ! ! c/\ creal_le cscs_a_v39 cscs_4I2 b0 b1 cdistance c, * f0 b0 * f0 b1 creal_le cdistance c, * f0 b0 * f0 b1 cscs_b_v39 cscs_4I2 b0 b1 cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV c/\ c/\ cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c/\ cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ ! ! c/\ creal_le cscs_a_v39 cscs_4I2 b0 b1 cdistance c, * f0 b0 * f0 b1 creal_le cdistance c, * f0 b0 * f0 b1 cscs_b_v39 cscs_4I2 b0 b1 cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0
+ |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
+ |- ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))))) k)
T * / ! ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b2 f1
- |- (((!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta))))) ==> ((\beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta))))) beta)) = ((\beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta))))) beta))
T c= c==> ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b0 * / ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b0 f6 * / ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b0 f6
- |- (((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = F)) = (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = F))
T c= c==> c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF c= c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF
- |- (((!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)) ==> ((\str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)) str)) = ((\str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)) str))
T c= c==> ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f7 * / c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f7 f9 * / c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f7 f9
- |- ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0)))))))))))))))))))
T c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo))))))) b)
T * / ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b4 f4
- ((NUMERAL (BIT1 _0)) = (NUMERAL _0)) |- ((NUMERAL _0) = (NUMERAL (BIT1 _0)))
T c==> c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c= cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- (((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0))))
T c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- (F ==> (~ (~ F)))
T c==> cF c~ c~ cF
+ ((real_le (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) |- (((real_le (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) /\ ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))) = (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))))))
T c==> creal_le cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 c/\ creal_le cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 c= c==> creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 c==> creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0
- |- ((\J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))) J)
T * / ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f1 f7
+ |- ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND T) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))
T c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND cT creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- (((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))))))))))))))))))))))))))))))))
T c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ |- (((~ F) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND F) (real_of_num (NUMERAL _0))) e')))
T c==> c==> c~ cF c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f1 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND cF creal_of_num cNUMERAL c_0 f1
- ((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) |- (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) = T)
T c==> creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cT
+ (!i. (!j. (((real_le (((scs_a_v39 scs_4I2) i) j)) (distance ((v i) , (v j)))) /\ ((real_le (distance ((v i) , (v j)))) (((scs_b_v39 scs_4I2) i) j))))) |- ((\i. (!j. (((real_le (((scs_a_v39 scs_4I2) i) j)) (distance ((v i) , (v j)))) /\ ((real_le (distance ((v i) , (v j)))) (((scs_b_v39 scs_4I2) i) j))))) i)
T c==> ! ! c/\ creal_le cscs_a_v39 cscs_4I2 b0 b1 cdistance c, * f0 b0 * f0 b1 creal_le cdistance c, * f0 b0 * f0 b1 cscs_b_v39 cscs_4I2 b0 b1 * / ! c/\ creal_le cscs_a_v39 cscs_4I2 b0 b1 cdistance c, * f0 b0 * f0 b1 creal_le cdistance c, * f0 b0 * f0 b1 cscs_b_v39 cscs_4I2 b0 b1 f1
+ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (SUC i))))) |- ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))) = (((real_le (distance ((v i) , (v (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) ==> T))
T c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 cSUC f1 c= c==> creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 c==> creal_le cdistance c, * f0 f1 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cT
+ |- ((\beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))) beta)
T * / ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f4 f6
+ ((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((scs_b_v39 scs_4I2) i) (i + (NUMERAL (BIT1 _0))))), ((real_le (((scs_a_v39 scs_4I2) i) (i + (NUMERAL (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) |- (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))
T c==> creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cscs_b_v39 cscs_4I2 f1 c+ f1 cNUMERAL cBIT1 c_0 c==> creal_le cscs_a_v39 cscs_4I2 f1 c+ f1 cNUMERAL cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0
+ |- (((!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))) ==> ((\J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))) J)) = ((\J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))) J))
T c= c==> ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f2 * / ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f2 f7 * / ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f2 f7
+ ((NUMERAL (BIT1 _0)) < k) |- (((~ ((i MOD k) = ((SUC i) MOD k))) ==> (((i MOD k) = ((SUC i) MOD k)) = F)) = (((i MOD k) = ((SUC i) MOD k)) = F))
T c==> c< cNUMERAL cBIT1 c_0 f0 c= c==> c~ c= cMOD f1 f0 cMOD cSUC f1 f0 c= c= cMOD f1 f0 cMOD cSUC f1 f0 cF c= c= cMOD f1 f0 cMOD cSUC f1 f0 cF
+ |- (((NUMERAL (BIT1 _0)) < k) ==> (((i MOD k) = ((SUC i) MOD k)) = F))
T c==> c< cNUMERAL cBIT1 c_0 f0 c= c= cMOD f1 f0 cMOD cSUC f1 f0 cF
+ |- ((((~ F) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (((COND F) (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (((COND F) (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c= c==> c==> c~ cF c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND cF creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND cF creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\p'. (!q'. ((((real_le (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) = p') ==> ((p' ==> ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))) = q')) ==> ((((real_le (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))))) = (p' ==> q')))))) p')
T * / ! c==> c= creal_le cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c==> creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 b1 c= c==> creal_le cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 c==> creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 c==> b0 b1 f2
+ ((real_le (((scs_a_v39 scs_4I2) i) (i + (NUMERAL (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) |- (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((scs_b_v39 scs_4I2) i) (i + (NUMERAL (BIT1 _0))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))))
T c==> creal_le cscs_a_v39 cscs_4I2 f0 c+ f0 cNUMERAL cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 c==> creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cscs_b_v39 cscs_4I2 f0 c+ f0 cNUMERAL cBIT1 c_0 c/\ creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0
+ |- ((\g'. (!t'. (!e'. ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b2 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND b0 b1 b2 f1
+ |- (((F ==> ((real_of_num (NUMERAL _0)) = (real_of_num (NUMERAL _0)))) ==> (((~ F) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (((COND F) (real_of_num (NUMERAL _0))) e')))) = (((~ F) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (((COND F) (real_of_num (NUMERAL _0))) e'))))
T c= c==> c==> cF c= creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c==> c==> c~ cF c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 f1 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND cF creal_of_num cNUMERAL c_0 f1 c==> c==> c~ cF c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 f1 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND cF creal_of_num cNUMERAL c_0 f1
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- ((\g'. (!t'. (!e'. ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 b2 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND b0 b1 b2 f1
+ |- ((\t'. (!e'. ((((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = g') ==> ((g' ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ g') ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL c_0 b0 c==> c==> c~ f1 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b1 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND f1 b0 b1 f2
+ |- (((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = T) ==> ((T ==> ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = t')) ==> (((~ T) ==> ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (((COND T) t') e'))))) = ((T ==> ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = t')) ==> (((~ T) ==> ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (((COND T) t') e')))))
T c= c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cT c==> c==> cT c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> c~ cT c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 f2 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND cT f1 f2 c==> c==> cT c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> c~ cT c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 f2 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND cT f1 f2
+ |- ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND F) (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))
T c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND cF creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0
+ |- ((((~ F) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND F) (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))) = ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND F) (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))
T c= c==> c==> c~ cF c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND cF creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND cF creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
+ (!i. (!j. (((real_le (((scs_a_v39 scs_4I2) i) j)) (distance ((v i) , (v j)))) /\ ((real_le (distance ((v i) , (v j)))) (((scs_b_v39 scs_4I2) i) j))))) |- (((((real_le (((scs_a_v39 scs_4I2) i) (i + (NUMERAL (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) /\ ((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((scs_b_v39 scs_4I2) i) (i + (NUMERAL (BIT1 _0)))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))) = (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))))
T c==> ! ! c/\ creal_le cscs_a_v39 cscs_4I2 b0 b1 cdistance c, * f0 b0 * f0 b1 creal_le cdistance c, * f0 b0 * f0 b1 cscs_b_v39 cscs_4I2 b0 b1 c= c==> c/\ creal_le cscs_a_v39 cscs_4I2 f1 c+ f1 cNUMERAL cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cscs_b_v39 cscs_4I2 f1 c+ f1 cNUMERAL cBIT1 c_0 c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0
+ |- (((!m. ((m + (NUMERAL (BIT1 _0))) = (SUC m))) ==> ((\m. ((m + (NUMERAL (BIT1 _0))) = (SUC m))) m)) = ((\m. ((m + (NUMERAL (BIT1 _0))) = (SUC m))) m))
T c= c==> ! c= c+ b0 cNUMERAL cBIT1 c_0 cSUC b0 * / c= c+ b0 cNUMERAL cBIT1 c_0 cSUC b0 f0 * / c= c+ b0 cNUMERAL cBIT1 c_0 cSUC b0 f0
+ |- (((T ==> (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))) ==> (((~ T) ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND T) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) e')))) = (((~ T) ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND T) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) e'))))
T c= c==> c==> cT c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c==> c==> c~ cT c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c= cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND cT creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 f0 c==> c==> c~ cT c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c= cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND cT creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 f0
+ |- ((\d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))))) d)
T * / ! ! c= cmk_unadorned_v39 f0 b0 b1 b2 cscs_v39 c, f0 c, b0 c, b1 c, b1 c, b2 c, b2 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f1
+ |- (((!f. (!x. (((LET f) x) = (f x)))) ==> ((\f. (!x. (((LET f) x) = (f x)))) f)) = ((\f. (!x. (((LET f) x) = (f x)))) f))
T c= c==> ! ! c= cLET b0 b1 * b0 b1 * / ! c= cLET b0 b1 * b0 b1 f0 * / ! c= cLET b0 b1 * b0 b1 f0
+ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (SUC i))))) |- (((real_le (distance ((v i) , (v (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) ==> ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))) = T))
T c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 cSUC f1 c==> creal_le cdistance c, * f0 f1 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c= c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cT
+ |- ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))) b)
T * / ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b0 f4
+ F |- (F /\ ((real_of_num (NUMERAL _0)) = (real_of_num (NUMERAL _0))))
T c==> cF c/\ cF c= creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (((!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))))) ==> ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))))) d)) = ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))))) d))
T c= c==> ! ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b1 * / ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b1 f2 * / ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b1 f2
+ |- (((!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))))) ==> ((\d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))))) d)) = ((\d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))))) d))
T c= c==> ! ! ! c= cmk_unadorned_v39 f0 b0 b1 b2 cscs_v39 c, f0 c, b0 c, b1 c, b1 c, b2 c, b2 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY * / ! ! c= cmk_unadorned_v39 f0 b0 b1 b2 cscs_v39 c, f0 c, b0 c, b1 c, b1 c, b2 c, b2 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f1 * / ! ! c= cmk_unadorned_v39 f0 b0 b1 b2 cscs_v39 c, f0 c, b0 c, b1 c, b1 c, b2 c, b2 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f1
+ (!i. (!j. (((real_le (((scs_a_v39 scs_4I2) i) j)) (distance ((v i) , (v j)))) /\ ((real_le (distance ((v i) , (v j)))) (((scs_b_v39 scs_4I2) i) j))))) |- (((real_le (((scs_a_v39 scs_4I2) i) (i + (NUMERAL (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) /\ ((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((scs_b_v39 scs_4I2) i) (i + (NUMERAL (BIT1 _0))))))
T c==> ! ! c/\ creal_le cscs_a_v39 cscs_4I2 b0 b1 cdistance c, * f0 b0 * f0 b1 creal_le cdistance c, * f0 b0 * f0 b1 cscs_b_v39 cscs_4I2 b0 b1 c/\ creal_le cscs_a_v39 cscs_4I2 f1 c+ f1 cNUMERAL cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cscs_b_v39 cscs_4I2 f1 c+ f1 cNUMERAL cBIT1 c_0
+ (!i. (!j. (((real_le (((scs_a_v39 scs_4I2) i) j)) (distance ((v i) , (v j)))) /\ ((real_le (distance ((v i) , (v j)))) (((scs_b_v39 scs_4I2) i) j))))), ((!i. (!j. (((real_le (((scs_a_v39 scs_4I2) i) j)) (distance ((v i) , (v j)))) /\ ((real_le (distance ((v i) , (v j)))) (((scs_b_v39 scs_4I2) i) j))))) /\ (convex_local_fan (((IMAGE v) UNIV) , (((IMAGE (\i. ((v i) INSERT ((v (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((v i) , (v (SUC i))))) UNIV))))) |- (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))
T c==> ! ! c/\ creal_le cscs_a_v39 cscs_4I2 b0 b1 cdistance c, * f0 b0 * f0 b1 creal_le cdistance c, * f0 b0 * f0 b1 cscs_b_v39 cscs_4I2 b0 b1 c==> c/\ ! ! c/\ creal_le cscs_a_v39 cscs_4I2 b0 b1 cdistance c, * f0 b0 * f0 b1 creal_le cdistance c, * f0 b0 * f0 b1 cscs_b_v39 cscs_4I2 b0 b1 cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0
+ |- ((\t'. (!e'. ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 b1 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND f1 b0 b1 f2
+ |- (((!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))))) ==> ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))))) k)) = ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))))) k))
T c= c==> ! ! ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b3 * / ! ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b3 f1 * / ! ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b3 f1
+ |- ((T ==> (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) = t')) ==> (((~ T) ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND T) t') e'))))
T c==> c==> cT c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 f0 c==> c==> c~ cT c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f1 c= cCOND c\/ c= cMOD c+ f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND cT f0 f1
+ |- (((F ==> ((real_of_num (NUMERAL _0)) = (real_of_num (NUMERAL _0)))) ==> (((~ F) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND F) (real_of_num (NUMERAL _0))) e')))) = (((~ F) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND F) (real_of_num (NUMERAL _0))) e'))))
T c= c==> c==> cF c= creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c==> c==> c~ cF c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f1 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND cF creal_of_num cNUMERAL c_0 f1 c==> c==> c~ cF c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f1 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND cF creal_of_num cNUMERAL c_0 f1
+ |- ((\lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))) lo)
T * / ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f5 f8
+ |- ((\q'. ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) = p') ==> ((p' ==> ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))) = q')) ==> ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))) = (p' ==> q'))))) q')
T * / c==> c= creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> c==> f2 c= c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 b0 c= c==> creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 c==> f2 b0 f3
+ |- ((\e'. ((((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = g') ==> ((g' ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ g') ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (((COND g') t') e')))))) e')
T * / c==> c= c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL c_0 f2 c==> c==> c~ f1 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 b0 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND f1 f2 b0 f3
+ |- (((!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))) ==> ((\lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))) lo)) = ((\lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))) lo))
T c= c==> ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f2 * / ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f2 f8 * / ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f2 f8
+ (~ T) |- ((~ T) /\ ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))
T c==> c~ cT c/\ c~ cT c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
+ |- ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) = p') ==> ((p' ==> ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))) = q')) ==> ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))) = (p' ==> q'))))
T c==> c= creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> c==> f2 c= c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 f3 c= c==> creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 c==> f2 f3
+ |- (((T ==> ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((~ T) ==> ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (((COND T) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) e')))) = (((~ T) ==> ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (((COND T) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) e'))))
T c= c==> c==> cT c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c==> c~ cT c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 f0 c= cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND cT creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c==> c~ cT c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 f0 c= cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND cT creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0
+ |- (((!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)) ==> ((\str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)) str)) = ((\str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)) str))
T c= c==> ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f5 * / c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f5 f9 * / c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f5 f9
+ (((real_le (((scs_a_v39 scs_4I2) i) (i + (NUMERAL (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) /\ ((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((scs_b_v39 scs_4I2) i) (i + (NUMERAL (BIT1 _0)))))), ((real_le (((scs_a_v39 scs_4I2) i) (i + (NUMERAL (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) |- (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))
T c==> c/\ creal_le cscs_a_v39 cscs_4I2 f0 c+ f0 cNUMERAL cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cscs_b_v39 cscs_4I2 f0 c+ f0 cNUMERAL cBIT1 c_0 c==> creal_le cscs_a_v39 cscs_4I2 f0 c+ f0 cNUMERAL cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 c/\ creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0
+ (!i. (!j. (((real_le (((scs_a_v39 scs_4I2) i) j)) (distance ((v i) , (v j)))) /\ ((real_le (distance ((v i) , (v j)))) (((scs_b_v39 scs_4I2) i) j))))), (convex_local_fan (((IMAGE v) UNIV) , (((IMAGE (\i. ((v i) INSERT ((v (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((v i) , (v (SUC i))))) UNIV)))) |- ((convex_local_fan (((IMAGE v) UNIV) , (((IMAGE (\i. ((v i) INSERT ((v (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((v i) , (v (SUC i))))) UNIV)))) /\ (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))))
T c==> ! ! c/\ creal_le cscs_a_v39 cscs_4I2 b0 b1 cdistance c, * f0 b0 * f0 b1 creal_le cdistance c, * f0 b0 * f0 b1 cscs_b_v39 cscs_4I2 b0 b1 c==> cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV c/\ cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0
+ |- (T ==> (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))
T c==> cT c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0
+ |- ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))) a)
T * / ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b0 f3
+ (!i. (!j. (((real_le (((scs_a_v39 scs_4I2) i) j)) (distance ((v i) , (v j)))) /\ ((real_le (distance ((v i) , (v j)))) (((scs_b_v39 scs_4I2) i) j))))), (convex_local_fan (((IMAGE v) UNIV) , (((IMAGE (\i. ((v i) INSERT ((v (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((v i) , (v (SUC i))))) UNIV)))) |- (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))
T c==> ! ! c/\ creal_le cscs_a_v39 cscs_4I2 b0 b1 cdistance c, * f0 b0 * f0 b1 creal_le cdistance c, * f0 b0 * f0 b1 cscs_b_v39 cscs_4I2 b0 b1 c==> cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0
+ |- ((\vv. (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV)))) vv)
T * / c= cBBs_v39 f0 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b1 part cball_annulus c/\ cperiodic b0 cscs_k_v39 f0 c/\ ! ! c/\ creal_le cscs_a_v39 f0 b4 b5 cdistance c, * b0 b4 * b0 b5 creal_le cdistance c, * b0 b4 * b0 b5 cscs_b_v39 f0 b4 b5 c\/ c<= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b1 c, b2 b3 * * part cIMAGE / c, * b0 b3 * b0 cSUC b3 part cUNIV * * part cIMAGE / * * part cINSERT * b0 b2 * * part cINSERT * b0 cSUC b2 part cEMPTY part cUNIV * * part cIMAGE b0 part cUNIV f1
+ |- (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))) = (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))))
T c==> creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0
+ |- ((\e'. ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (((COND g') t') e')))))) e')
T * / c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f2 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 b0 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND f1 f2 b0 f3
+ |- ((((real_le (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))))) = (((real_le (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))))))
T c= c==> creal_le cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 c==> creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 c==> creal_le cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 c==> creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0
+ (~ F) |- ((~ F) /\ ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))
T c==> c~ cF c/\ c~ cF c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0
+ |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
+ |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT1 _0)))) = F)
T c= c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF
+ |- (((!e'. ((((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = g') ==> ((g' ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ g') ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (((COND g') t') e')))))) ==> ((\e'. ((((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = g') ==> ((g' ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ g') ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (((COND g') t') e')))))) e')) = ((\e'. ((((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = g') ==> ((g' ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ g') ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL c_0 f2 c==> c==> c~ f1 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 b0 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND f1 f2 b0 * / c==> c= c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL c_0 f2 c==> c==> c~ f1 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 b0 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND f1 f2 b0 f3 * / c==> c= c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL c_0 f2 c==> c==> c~ f1 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 b0 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND f1 f2 b0 f3
+ |- (((((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = F) ==> ((F ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ F) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (((COND F) t') e'))))) = ((F ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ F) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (((COND F) t') e')))))
T c= c==> c= c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF c==> c==> cF c= creal_of_num cNUMERAL c_0 f1 c==> c==> c~ cF c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 f2 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND cF f1 f2 c==> c==> cF c= creal_of_num cNUMERAL c_0 f1 c==> c==> c~ cF c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 f2 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND cF f1 f2
+ |- (((!k. (!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))))) ==> ((\k. (!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))))) k)) = ((\k. (!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))))) k))
T c= c==> ! ! ! ! c= cmk_unadorned_v39 b0 b1 b2 b3 cscs_v39 c, b0 c, b1 c, b2 c, b2 c, b3 c, b3 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY * / ! ! ! c= cmk_unadorned_v39 b0 b1 b2 b3 cscs_v39 c, b0 c, b1 c, b2 c, b2 c, b3 c, b3 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f0 * / ! ! ! c= cmk_unadorned_v39 b0 b1 b2 b3 cscs_v39 c, b0 c, b1 c, b2 c, b2 c, b3 c, b3 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f0
+ |- ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (((COND g') t') e')))))
T c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f2 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 f3 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND f1 f2 f3
+ |- ((\e'. ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND g') t') e')))))) e')
T * / c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 f2 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b0 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND f1 f2 b0 f3
+ |- (((!s. (!vv. (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV))))) ==> ((\s. (!vv. (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV))))) s)) = ((\s. (!vv. (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV))))) s))
T c= c==> ! ! c= cBBs_v39 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b2 part cball_annulus c/\ cperiodic b1 cscs_k_v39 b0 c/\ ! ! c/\ creal_le cscs_a_v39 b0 b5 b6 cdistance c, * b1 b5 * b1 b6 creal_le cdistance c, * b1 b5 * b1 b6 cscs_b_v39 b0 b5 b6 c\/ c<= cscs_k_v39 b0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b2 c, b3 b4 * * part cIMAGE / c, * b1 b4 * b1 cSUC b4 part cUNIV * * part cIMAGE / * * part cINSERT * b1 b3 * * part cINSERT * b1 cSUC b3 part cEMPTY part cUNIV * * part cIMAGE b1 part cUNIV * / ! c= cBBs_v39 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b2 part cball_annulus c/\ cperiodic b1 cscs_k_v39 b0 c/\ ! ! c/\ creal_le cscs_a_v39 b0 b5 b6 cdistance c, * b1 b5 * b1 b6 creal_le cdistance c, * b1 b5 * b1 b6 cscs_b_v39 b0 b5 b6 c\/ c<= cscs_k_v39 b0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b2 c, b3 b4 * * part cIMAGE / c, * b1 b4 * b1 cSUC b4 part cUNIV * * part cIMAGE / * * part cINSERT * b1 b3 * * part cINSERT * b1 cSUC b3 part cEMPTY part cUNIV * * part cIMAGE b1 part cUNIV f0 * / ! c= cBBs_v39 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b2 part cball_annulus c/\ cperiodic b1 cscs_k_v39 b0 c/\ ! ! c/\ creal_le cscs_a_v39 b0 b5 b6 cdistance c, * b1 b5 * b1 b6 creal_le cdistance c, * b1 b5 * b1 b6 cscs_b_v39 b0 b5 b6 c\/ c<= cscs_k_v39 b0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b2 c, b3 b4 * * part cIMAGE / c, * b1 b4 * b1 cSUC b4 part cUNIV * * part cIMAGE / * * part cINSERT * b1 b3 * * part cINSERT * b1 cSUC b3 part cEMPTY part cUNIV * * part cIMAGE b1 part cUNIV f0
+ ((real_le (distance ((v i) , (v (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) |- (((real_le (distance ((v i) , (v (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) = T)
T c==> creal_le cdistance c, * f0 f1 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c= creal_le cdistance c, * f0 f1 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cT
+ |- ((\k. (!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))))) k)
T * / ! ! ! c= cmk_unadorned_v39 b0 b1 b2 b3 cscs_v39 c, b0 c, b1 c, b2 c, b2 c, b3 c, b3 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f0
+ (~ F) |- ((~ F) /\ ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c~ cF c/\ c~ cF c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))) = (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))))
T c= c==> creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 c==> creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0
+ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (SUC i))))) |- (((((real_le (distance ((v i) , (v (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) ==> ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))) = T)) ==> ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))) = (((real_le (distance ((v i) , (v (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) ==> T))) = ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))) = (((real_le (distance ((v i) , (v (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) ==> T)))
T c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 cSUC f1 c= c==> c==> creal_le cdistance c, * f0 f1 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c= c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cT c= c==> creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 c==> creal_le cdistance c, * f0 f1 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cT c= c==> creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 c==> creal_le cdistance c, * f0 f1 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cT
+ |- ((\str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)) str)
T * / c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f2 f9
+ |- ((((COND F) t1) t2) = t2)
T c= cCOND cF f0 f1 f1
+ |- (((!t'. (!e'. ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b1 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND f1 b0 b1 * / ! c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b1 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND f1 b0 b1 f2 * / ! c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b1 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND f1 b0 b1 f2
+ |- ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND g') t') e')))))
T c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 f2 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f3 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND f1 f2 f3
+ |- (((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = F)
T c= c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF
+ |- (((!g'. (!t'. (!e'. ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 b2 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND b0 b1 b2 * / ! ! c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 b2 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND b0 b1 b2 f1 * / ! ! c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 b2 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND b0 b1 b2 f1
+ ((NUMERAL (BIT1 _0)) < k) |- ((\i. (~ ((i MOD k) = ((SUC i) MOD k)))) i)
T c==> c< cNUMERAL cBIT1 c_0 f0 * / c~ c= cMOD b0 f0 cMOD cSUC b0 f0 f1
+ |- (((!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))) ==> ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))) alpha)) = ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))) alpha))
T c= c==> ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f2 * / ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f2 f5 * / ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f2 f5
+ (!i. (!j. (((real_le (((scs_a_v39 scs_4I2) i) j)) (distance ((v i) , (v j)))) /\ ((real_le (distance ((v i) , (v j)))) (((scs_b_v39 scs_4I2) i) j))))) |- (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))
T c==> ! ! c/\ creal_le cscs_a_v39 cscs_4I2 b0 b1 cdistance c, * f0 b0 * f0 b1 creal_le cdistance c, * f0 b0 * f0 b1 cscs_b_v39 cscs_4I2 b0 b1 c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0
+ |- ((T \/ t) = T)
T c= c\/ cT f0 cT
+ |- (((!vv. (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV)))) ==> ((\vv. (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV)))) vv)) = ((\vv. (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV)))) vv))
T c= c==> ! c= cBBs_v39 f0 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b1 part cball_annulus c/\ cperiodic b0 cscs_k_v39 f0 c/\ ! ! c/\ creal_le cscs_a_v39 f0 b4 b5 cdistance c, * b0 b4 * b0 b5 creal_le cdistance c, * b0 b4 * b0 b5 cscs_b_v39 f0 b4 b5 c\/ c<= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b1 c, b2 b3 * * part cIMAGE / c, * b0 b3 * b0 cSUC b3 part cUNIV * * part cIMAGE / * * part cINSERT * b0 b2 * * part cINSERT * b0 cSUC b2 part cEMPTY part cUNIV * * part cIMAGE b0 part cUNIV * / c= cBBs_v39 f0 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b1 part cball_annulus c/\ cperiodic b0 cscs_k_v39 f0 c/\ ! ! c/\ creal_le cscs_a_v39 f0 b4 b5 cdistance c, * b0 b4 * b0 b5 creal_le cdistance c, * b0 b4 * b0 b5 cscs_b_v39 f0 b4 b5 c\/ c<= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b1 c, b2 b3 * * part cIMAGE / c, * b0 b3 * b0 cSUC b3 part cUNIV * * part cIMAGE / * * part cINSERT * b0 b2 * * part cINSERT * b0 cSUC b2 part cEMPTY part cUNIV * * part cIMAGE b0 part cUNIV f1 * / c= cBBs_v39 f0 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b1 part cball_annulus c/\ cperiodic b0 cscs_k_v39 f0 c/\ ! ! c/\ creal_le cscs_a_v39 f0 b4 b5 cdistance c, * b0 b4 * b0 b5 creal_le cdistance c, * b0 b4 * b0 b5 cscs_b_v39 f0 b4 b5 c\/ c<= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b1 c, b2 b3 * * part cIMAGE / c, * b0 b3 * b0 cSUC b3 part cUNIV * * part cIMAGE / * * part cINSERT * b0 b2 * * part cINSERT * b0 cSUC b2 part cEMPTY part cUNIV * * part cIMAGE b0 part cUNIV f1
+ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (SUC i))))) |- (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (SUC i))))) = T)
T c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 cSUC f1 c= creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 cSUC f1 cT
+ |- (((!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))) ==> ((\lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))) lo)) = ((\lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))) lo))
T c= c==> ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f5 * / ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f5 f8 * / ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f5 f8
+ |- (((!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))))) ==> ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))))) k)) = ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))))) k))
T c= c==> ! ! ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b2 * / ! ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b2 f1 * / ! ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b2 f1
+ |- ((!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e')))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 cT
+ |- ((((real_le (((scs_a_v39 scs_4I2) i) (i + (NUMERAL (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) /\ ((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((scs_b_v39 scs_4I2) i) (i + (NUMERAL (BIT1 _0)))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))))
T c==> c/\ creal_le cscs_a_v39 cscs_4I2 f0 c+ f0 cNUMERAL cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cscs_b_v39 cscs_4I2 f0 c+ f0 cNUMERAL cBIT1 c_0 c/\ creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0
+ |- (T ==> ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c==> cT c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((~ F) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c~ cF c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((T ==> ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = t')) ==> (((~ T) ==> ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (((COND T) t') e'))))
T c==> c==> cT c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c==> c~ cT c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 f1 c= cCOND c\/ c= cMOD c+ f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND cT f0 f1
+ |- ((\e'. ((((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = g') ==> ((g' ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ g') ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND g') t') e')))))) e')
T * / c==> c= c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL c_0 f2 c==> c==> c~ f1 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b0 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND f1 f2 b0 f3
+ |- ((\b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))) b)
T * / c= cmk_unadorned_v39 f0 f1 f2 b0 cscs_v39 c, f0 c, f1 c, f2 c, f2 c, b0 c, b0 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f3
+ |- ((((~ T) ==> ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (((COND T) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (((COND T) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))
T c= c==> c==> c~ cT c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND cT creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND cT creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
+ |- ((m + (NUMERAL (BIT1 _0))) = (SUC m))
T c= c+ f0 cNUMERAL cBIT1 c_0 cSUC f0
+ |- ((\m. ((m + (NUMERAL (BIT1 _0))) = (SUC m))) m)
T * / c= c+ b0 cNUMERAL cBIT1 c_0 cSUC b0 f0
+ |- (((~ T) ==> ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (((COND T) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) e')))
T c==> c==> c~ cT c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 f0 c= cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND cT creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0
+ |- ((\lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))) lo)
T * / ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f2 f8
+ |- ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (((COND F) (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND cF creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (((NUMERAL (BIT1 _0)) < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = T)
T c= c< cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cT
+ |- ((NUMERAL (BIT1 _0)) < (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c< cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ |- ((F \/ t) = t)
T c= c\/ cF f0 f0
+ |- ((\s. (!vv. (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV))))) s)
T * / ! c= cBBs_v39 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b2 part cball_annulus c/\ cperiodic b1 cscs_k_v39 b0 c/\ ! ! c/\ creal_le cscs_a_v39 b0 b5 b6 cdistance c, * b1 b5 * b1 b6 creal_le cdistance c, * b1 b5 * b1 b6 cscs_b_v39 b0 b5 b6 c\/ c<= cscs_k_v39 b0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b2 c, b3 b4 * * part cIMAGE / c, * b1 b4 * b1 cSUC b4 part cUNIV * * part cIMAGE / * * part cINSERT * b1 b3 * * part cINSERT * b1 cSUC b3 part cEMPTY part cUNIV * * part cIMAGE b1 part cUNIV f0
+ ((NUMERAL (BIT1 _0)) < k) |- (~ ((i MOD k) = ((SUC i) MOD k)))
T c==> c< cNUMERAL cBIT1 c_0 f0 c~ c= cMOD f1 f0 cMOD cSUC f1 f0
+ T |- (T /\ (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))
T c==> cT c/\ cT c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0
+ ((m + (NUMERAL (BIT1 _0))) = (SUC m)) |- ((SUC m) = (m + (NUMERAL (BIT1 _0))))
T c==> c= c+ f0 cNUMERAL cBIT1 c_0 cSUC f0 c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
+ ((NUMERAL (BIT1 _0)) < k) |- (((NUMERAL (BIT1 _0)) < k) /\ (((i MOD k) = ((SUC i) MOD k)) = F))
T c==> c< cNUMERAL cBIT1 c_0 f0 c/\ c< cNUMERAL cBIT1 c_0 f0 c= c= cMOD f1 f0 cMOD cSUC f1 f0 cF
+ |- ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))))) k)
T * / ! ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b3 f1
+ |- (((!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))) ==> ((\a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))) a)) = ((\a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))) a))
T c= c==> ! ! c= cmk_unadorned_v39 f0 f1 b0 b1 cscs_v39 c, f0 c, f1 c, b0 c, b0 c, b1 c, b1 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY * / ! c= cmk_unadorned_v39 f0 f1 b0 b1 cscs_v39 c, f0 c, f1 c, b0 c, b0 c, b1 c, b1 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f2 * / ! c= cmk_unadorned_v39 f0 f1 b0 b1 cscs_v39 c, f0 c, f1 c, b0 c, b0 c, b1 c, b1 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f2
+ |- (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (SUC i))))) ==> ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))) = T))
T c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 cSUC f1 c= c==> creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cT
+ |- (((!e'. ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND g') t') e')))))) ==> ((\e'. ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND g') t') e')))))) e')) = ((\e'. ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 f2 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b0 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND f1 f2 b0 * / c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 f2 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b0 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND f1 f2 b0 f3 * / c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 f2 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b0 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND f1 f2 b0 f3
+ |- ((\a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))) a)
T * / ! c= cmk_unadorned_v39 f0 f1 b0 b1 cscs_v39 c, f0 c, f1 c, b0 c, b0 c, b1 c, b1 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f2
+ |- ((F ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ F) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (((COND F) t') e'))))
T c==> c==> cF c= creal_of_num cNUMERAL c_0 f0 c==> c==> c~ cF c= cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 f2 c= cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND cF f0 f2
+ ((NUMERAL (BIT1 _0)) < k) |- (((!i. (~ ((i MOD k) = ((SUC i) MOD k)))) ==> ((\i. (~ ((i MOD k) = ((SUC i) MOD k)))) i)) = ((\i. (~ ((i MOD k) = ((SUC i) MOD k)))) i))
T c==> c< cNUMERAL cBIT1 c_0 f0 c= c==> ! c~ c= cMOD b0 f0 cMOD cSUC b0 f0 * / c~ c= cMOD b0 f0 cMOD cSUC b0 f0 f1 * / c~ c= cMOD b0 f0 cMOD cSUC b0 f0 f1
+ (((periodic v) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((!i. (!j. (((real_le (((scs_a_v39 scs_4I2) i) j)) (distance ((v i) , (v j)))) /\ ((real_le (distance ((v i) , (v j)))) (((scs_b_v39 scs_4I2) i) j))))) /\ (convex_local_fan (((IMAGE v) UNIV) , (((IMAGE (\i. ((v i) INSERT ((v (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((v i) , (v (SUC i))))) UNIV)))))) |- (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))
T c==> c/\ cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ ! ! c/\ creal_le cscs_a_v39 cscs_4I2 b0 b1 cdistance c, * f0 b0 * f0 b1 creal_le cdistance c, * f0 b0 * f0 b1 cscs_b_v39 cscs_4I2 b0 b1 cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0
+ |- (((!t'. (!e'. ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 b1 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND f1 b0 b1 * / ! c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 b1 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND f1 b0 b1 f2 * / ! c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 b1 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND f1 b0 b1 f2
+ |- ((\t'. (!e'. ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b1 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND f1 b0 b1 f2
+ |- ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))) = q')) ==> ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))) = (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> q')))
T c==> c==> creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 f2 c= c==> creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 c==> creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2
+ |- (((!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))) ==> ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))) alpha)) = ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))) alpha))
T c= c==> ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f3 * / ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f3 f5 * / ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f3 f5
+ |- (((real_le (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ==> ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))) = (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))))))
T c==> creal_le cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 c= c==> creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 c==> creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0
+ |- (((!g'. (!t'. (!e'. ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b2 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND b0 b1 b2 * / ! ! c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b2 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND b0 b1 b2 f1 * / ! ! c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b2 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND b0 b1 b2 f1
+ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (SUC i))))), ((real_le (distance ((v i) , (v (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) |- (((real_le (distance ((v i) , (v (SUC i))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))) = T))
T c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 cSUC f1 c==> creal_le cdistance c, * f0 f1 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ creal_le cdistance c, * f0 f1 * f0 cSUC f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c= c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cT
+ (!i. (!j. (((real_le (((scs_a_v39 scs_4I2) i) j)) (distance ((v i) , (v j)))) /\ ((real_le (distance ((v i) , (v j)))) (((scs_b_v39 scs_4I2) i) j))))) |- (((!j. (((real_le (((scs_a_v39 scs_4I2) i) j)) (distance ((v i) , (v j)))) /\ ((real_le (distance ((v i) , (v j)))) (((scs_b_v39 scs_4I2) i) j)))) ==> ((\j. (((real_le (((scs_a_v39 scs_4I2) i) j)) (distance ((v i) , (v j)))) /\ ((real_le (distance ((v i) , (v j)))) (((scs_b_v39 scs_4I2) i) j)))) (i + (NUMERAL (BIT1 _0))))) = ((\j. (((real_le (((scs_a_v39 scs_4I2) i) j)) (distance ((v i) , (v j)))) /\ ((real_le (distance ((v i) , (v j)))) (((scs_b_v39 scs_4I2) i) j)))) (i + (NUMERAL (BIT1 _0)))))
T c==> ! ! c/\ creal_le cscs_a_v39 cscs_4I2 b0 b1 cdistance c, * f0 b0 * f0 b1 creal_le cdistance c, * f0 b0 * f0 b1 cscs_b_v39 cscs_4I2 b0 b1 c= c==> ! c/\ creal_le cscs_a_v39 cscs_4I2 f1 b0 cdistance c, * f0 f1 * f0 b0 creal_le cdistance c, * f0 f1 * f0 b0 cscs_b_v39 cscs_4I2 f1 b0 * / c/\ creal_le cscs_a_v39 cscs_4I2 f1 b0 cdistance c, * f0 f1 * f0 b0 creal_le cdistance c, * f0 f1 * f0 b0 cscs_b_v39 cscs_4I2 f1 b0 c+ f1 cNUMERAL cBIT1 c_0 * / c/\ creal_le cscs_a_v39 cscs_4I2 f1 b0 cdistance c, * f0 f1 * f0 b0 creal_le cdistance c, * f0 f1 * f0 b0 cscs_b_v39 cscs_4I2 f1 b0 c+ f1 cNUMERAL cBIT1 c_0
+ ((SUC m) = (m + (NUMERAL (BIT1 _0)))) |- ((m + (NUMERAL (BIT1 _0))) = (SUC m))
T c==> c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0 c= c+ f0 cNUMERAL cBIT1 c_0 cSUC f0
+ |- (F ==> ((real_of_num (NUMERAL _0)) = (real_of_num (NUMERAL _0))))
T c==> cF c= creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((\g'. (!t'. (!e'. ((((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = g') ==> ((g' ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ g') ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_of_num cNUMERAL c_0 b1 c==> c==> c~ b0 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b2 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND b0 b1 b2 f1
+ |- (!p'. (!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3
+ |- (T = (((real_le (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))))))
T c= cT c==> creal_le cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 c==> creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0
+ (!i. (!j. (((real_le (((scs_a_v39 scs_4I2) i) j)) (distance ((v i) , (v j)))) /\ ((real_le (distance ((v i) , (v j)))) (((scs_b_v39 scs_4I2) i) j))))) |- ((\j. (((real_le (((scs_a_v39 scs_4I2) i) j)) (distance ((v i) , (v j)))) /\ ((real_le (distance ((v i) , (v j)))) (((scs_b_v39 scs_4I2) i) j)))) (i + (NUMERAL (BIT1 _0))))
T c==> ! ! c/\ creal_le cscs_a_v39 cscs_4I2 b0 b1 cdistance c, * f0 b0 * f0 b1 creal_le cdistance c, * f0 b0 * f0 b1 cscs_b_v39 cscs_4I2 b0 b1 * / c/\ creal_le cscs_a_v39 cscs_4I2 f1 b0 cdistance c, * f0 f1 * f0 b0 creal_le cdistance c, * f0 f1 * f0 b0 cscs_b_v39 cscs_4I2 f1 b0 c+ f1 cNUMERAL cBIT1 c_0
+ |- (((((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = T) ==> ((T ==> (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) = t')) ==> (((~ T) ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND T) t') e'))))) = ((T ==> (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) = t')) ==> (((~ T) ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND T) t') e')))))
T c= c==> c= c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cT c==> c==> cT c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 f1 c==> c==> c~ cT c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND cT f1 f2 c==> c==> cT c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 f1 c==> c==> c~ cT c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND cT f1 f2
+ |- ((\t. ((LET_END t) = t)) t)
T * / c= cLET_END b0 b0 f0
+ |- (((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q')))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3 cT
+ |- ((((~ T) ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND T) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) = ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND T) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))
T c= c==> c==> c~ cT c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND cT creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND cT creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
+ |- ((\t'. (!e'. ((((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = g') ==> ((g' ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ g') ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL c_0 b0 c==> c==> c~ f1 c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 b1 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cCOND f1 b0 b1 f2
+ |- (((!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))) ==> ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))) a)) = ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))) a))
T c= c==> ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b0 * / ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b0 f3 * / ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b0 f3
+ |- ((\J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))) J)
T * / ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f2 f7
+ ((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) |- (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) /\ ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))) = (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))))
T c==> creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0
+ |- ((T /\ t) = t)
T c= c/\ cT f0 f0
+ |- ((~ F) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))
T c==> c~ cF c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0
+ |- (((!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))) ==> ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))) a)) = ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))) a))
T c= c==> ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b1 * / ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b1 f3 * / ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b1 f3
+ |- ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (SUC i))))) ==> ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))) = q')) ==> ((((real_le (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))))) = (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (SUC i))))) ==> q')))
T c==> c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 cSUC f1 c= c==> creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 f2 c= c==> creal_le cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 c==> creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 cSUC f1 f2
+ |- ((~ T) ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))
T c==> c~ cT c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
+ |- ((~ T) ==> ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))
T c==> c~ cT c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
+ |- ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))) alpha)
T * / ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f3 f5
+ |- (((((IMAGE v) UNIV) SUBSET ball_annulus) /\ (((periodic v) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((!i. (!j. (((real_le (((scs_a_v39 scs_4I2) i) j)) (distance ((v i) , (v j)))) /\ ((real_le (distance ((v i) , (v j)))) (((scs_b_v39 scs_4I2) i) j))))) /\ (convex_local_fan (((IMAGE v) UNIV) , (((IMAGE (\i. ((v i) INSERT ((v (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((v i) , (v (SUC i))))) UNIV))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))))
T c==> c/\ cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c/\ cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ ! ! c/\ creal_le cscs_a_v39 cscs_4I2 b0 b1 cdistance c, * f0 b0 * f0 b1 creal_le cdistance c, * f0 b0 * f0 b1 cscs_b_v39 cscs_4I2 b0 b1 cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0
+ |- (T = ((NUMERAL (BIT1 _0)) < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c= cT c< cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ |- ((((real_le (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))))) = (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (SUC i))))) ==> T))
T c= c==> creal_le cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 c==> creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f1 f0 * f1 cSUC f0 cT
+ |- ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))) a)
T * / ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b1 f3
+ |- (((!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))) ==> ((\b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))) b)) = ((\b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))) b))
T c= c==> ! c= cmk_unadorned_v39 f0 f1 f2 b0 cscs_v39 c, f0 c, f1 c, f2 c, f2 c, b0 c, b0 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY * / c= cmk_unadorned_v39 f0 f1 f2 b0 cscs_v39 c, f0 c, f1 c, f2 c, f2 c, b0 c, b0 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f3 * / c= cmk_unadorned_v39 f0 f1 f2 b0 cscs_v39 c, f0 c, f1 c, f2 c, f2 c, b0 c, b0 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f3
+ |- ((((real_le (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) = p') ==> ((p' ==> ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))) = q')) ==> ((((real_le (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0)))))))))) = (p' ==> q'))))
T c==> c= creal_le cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= c==> creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 f3 c= c==> creal_le cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 c==> creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f1 f0 * f1 c+ f0 cNUMERAL cBIT1 c_0 c==> f2 f3
+ |- ((\beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))) beta)
T * / ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f2 f6
+ |- (((!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))) ==> ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))) b)) = ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))) b))
T c= c==> ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b0 * / ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b0 f4 * / ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b0 f4
+ |- (((~ T) ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = e')) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND T) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) e')))
T c==> c==> c~ cT c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c= cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND cT creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 f0
+ (!i. (!j. (((real_le (((scs_a_v39 scs_4I2) i) j)) (distance ((v i) , (v j)))) /\ ((real_le (distance ((v i) , (v j)))) (((scs_b_v39 scs_4I2) i) j))))) |- (!j. (((real_le (((scs_a_v39 scs_4I2) i) j)) (distance ((v i) , (v j)))) /\ ((real_le (distance ((v i) , (v j)))) (((scs_b_v39 scs_4I2) i) j))))
T c==> ! ! c/\ creal_le cscs_a_v39 cscs_4I2 b0 b1 cdistance c, * f0 b0 * f0 b1 creal_le cdistance c, * f0 b0 * f0 b1 cscs_b_v39 cscs_4I2 b0 b1 ! c/\ creal_le cscs_a_v39 cscs_4I2 f1 b0 cdistance c, * f0 f1 * f0 b0 creal_le cdistance c, * f0 f1 * f0 b0 cscs_b_v39 cscs_4I2 f1 b0
+ |- (((((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = F) ==> ((F ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ F) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND F) t') e'))))) = ((F ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ F) ==> ((((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND F) t') e')))))
T c= c==> c= c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF c==> c==> cF c= creal_of_num cNUMERAL c_0 f1 c==> c==> c~ cF c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND cF f1 f2 c==> c==> cF c= creal_of_num cNUMERAL c_0 f1 c==> c==> c~ cF c= cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c= cCOND c= cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND cF f1 f2
+ |- ((\str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)) str)
T * / c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f5 f9
+ |- ((!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))) = T)
T c= ! ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c==> c==> c~ f1 c= f3 b1 c= cCOND f0 f2 f3 cCOND f1 b0 b1 cT
+ |- ((((((IMAGE v) UNIV) SUBSET ball_annulus) /\ (((periodic v) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((!i. (!j. (((real_le (((scs_a_v39 scs_4I2) i) j)) (distance ((v i) , (v j)))) /\ ((real_le (distance ((v i) , (v j)))) (((scs_b_v39 scs_4I2) i) j))))) /\ (convex_local_fan (((IMAGE v) UNIV) , (((IMAGE (\i. ((v i) INSERT ((v (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((v i) , (v (SUC i))))) UNIV))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))) = (((BBs_v39 scs_4I2) v) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))))
T c= c==> c/\ cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c/\ cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ ! ! c/\ creal_le cscs_a_v39 cscs_4I2 b0 b1 cdistance c, * f0 b0 * f0 b1 creal_le cdistance c, * f0 b0 * f0 b1 cscs_b_v39 cscs_4I2 b0 b1 cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 c==> cBBs_v39 cscs_4I2 f0 c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0
+ |- ((((COND T) t1) t2) = t1)
T c= cCOND cT f0 f1 f0
+ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (SUC i))))) |- (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (SUC i))))) /\ ((((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) (((COND ((i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((SUC (i + (NUMERAL (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_le (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) /\ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((v i) , (v (i + (NUMERAL (BIT1 _0))))))))) = T))
T c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 cSUC f1 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 cSUC f1 c= c==> creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cMOD cSUC c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 c+ f1 cNUMERAL cBIT1 c_0 cT
+ |- (((!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))) ==> ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))) b)) = ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))) b))
T c= c==> ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f2 * / ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f2 f4 * / ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f2 f4
+ |- ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))))) d)
T * / ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b1 f2
+ |- (((!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))) ==> ((\beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))) beta)) = ((\beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))) beta))
T c= c==> ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f4 * / ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f4 f6 * / ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f4 f6
