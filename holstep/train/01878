N CONTINUOUS_CX_DROP
C |- (!net. (!f. (((continuous f) net) ==> ((continuous (\x. (Cx (drop (f x))))) net))))
T c==> ccontinuous f0 f1 ccontinuous / cCx cdrop * f0 b0 f1
D TRUTH
A |- T
T cT
D dist
A |- (!x. (!y. ((distance (x , y)) = (vector_norm ((vector_sub x) y)))))
T c= cdistance c, f0 f1 cvector_norm cvector_sub f0 f1
D DROP_SUB
A |- (!x. (!y. ((drop ((vector_sub x) y)) = ((real_sub (drop x)) (drop y)))))
T c= cdrop cvector_sub f0 f1 creal_sub cdrop f0 cdrop f1
D ABS_DROP
A |- (!x. ((vector_norm x) = (real_abs (drop x))))
T c= cvector_norm f0 creal_abs cdrop f0
D tendsto
A |- (!f. (!l. (!net. ((((--> f) l) net) = (!e. (((real_lt (real_of_num (NUMERAL _0))) e) ==> ((eventually (\x. ((real_lt (distance ((f x) , l))) e))) net)))))))
T c= c--> f0 f1 f2 ! c==> creal_lt creal_of_num cNUMERAL c_0 b0 ceventually / creal_lt cdistance c, * f0 b1 f1 b0 f2
D continuous
A |- (!f. (!net. (((continuous f) net) = (((--> f) (f (netlimit net))) net))))
T c= ccontinuous f0 f1 c--> f0 * f0 cnetlimit f1 f1
D CX_SUB
A |- (!x. (!y. ((Cx ((real_sub x) y)) = ((vector_sub (Cx x)) (Cx y)))))
T c= cCx creal_sub f0 f1 cvector_sub cCx f0 cCx f1
D COMPLEX_NORM_CX
A |- (!x. ((vector_norm (Cx x)) = (real_abs x)))
T c= cvector_norm cCx f0 creal_abs f0
+ ((real_abs (drop x)) = (vector_norm x)) |- ((vector_norm x) = (real_abs (drop x)))
T c==> c= creal_abs cdrop f0 cvector_norm f0 c= cvector_norm f0 creal_abs cdrop f0
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
