N OPEN_SEGMENT_LINEAR_IMAGE
C |- (!f. (!a. (!b. (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) ==> ((open_segment ((f a) , (f b))) = ((IMAGE f) (open_segment (a , b))))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= * part copen_segment c, * f0 f1 * f0 f2 * * part cIMAGE f0 * part copen_segment c, f1 f2
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D LEFT_OR_FORALL_THM
A |- (!P. (!Q. (((!x. (P x)) \/ Q) = (!x. ((P x) \/ Q)))))
T c= c\/ ! * f0 b0 f1 ! c\/ * f0 b0 f1
D RIGHT_OR_FORALL_THM
A |- (!P. (!Q. ((P \/ (!x. (Q x))) = (!x. (P \/ (Q x))))))
T c= c\/ f0 ! * f1 b0 ! c\/ f0 * f1 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D SKOLEM_THM
A |- (!P. ((!x. (?y. ((P x) y))) = (?y. (!x. ((P x) (y x))))))
T c= ! c? / * * f0 b0 b1 c? / ! * * f0 b1 * b0 b1
D o_THM
A |- (!f. (!g. (!x. (((f o g) x) = (f (g x))))))
T c= co f0 f1 f2 * f0 * f1 f2
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D PSUBSET
A |- (!s. (!t. ((s PSUBSET t) = ((s SUBSET t) /\ (~ (s = t))))))
T c= cPSUBSET f0 f1 c/\ cSUBSET f0 f1 c~ c= f0 f1
D DISJOINT
A |- (!s. (!t. (((DISJOINT s) t) = ((s INTER t) = EMPTY))))
T c= cDISJOINT f0 f1 c= * * part cINTER f0 f1 part cEMPTY
D INFINITE
A |- (!s. ((INFINITE s) = (~ (FINITE s))))
T c= cINFINITE f0 c~ cFINITE f0
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_UNION
A |- (!s. (!t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t))))))
T c= cIN f0 * * part cUNION f1 f2 c\/ cIN f0 f1 cIN f0 f2
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D IN_DIFF
A |- (!s. (!t. (!x. ((x IN (s DIFF t)) = ((x IN s) /\ (~ (x IN t)))))))
T c= cIN f0 * * part cDIFF f1 f2 c/\ cIN f0 f1 c~ cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D IN_DELETE
A |- (!s. (!x. (!y. ((x IN (s DELETE y)) = ((x IN s) /\ (~ (x = y)))))))
T c= cIN f0 * * part cDELETE f1 f2 c/\ cIN f0 f1 c~ c= f0 f2
D IN_IMAGE
A |- (!y. (!s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s)))))))
T c= cIN f0 * * part cIMAGE f1 f2 c? / c/\ c= f0 * f1 b0 cIN b0 f2
D IMAGE_CLAUSES
A |- ((((IMAGE f) EMPTY) = EMPTY) /\ (((IMAGE f) (x INSERT s)) = ((f x) INSERT ((IMAGE f) s))))
T c/\ c= * * part cIMAGE f0 part cEMPTY part cEMPTY c= * * part cIMAGE f0 * * part cINSERT f1 f2 * * part cINSERT * f0 f1 * * part cIMAGE f0 f2
D IMAGE_o
A |- (!f. (!g. (!s. (((IMAGE (f o g)) s) = ((IMAGE f) ((IMAGE g) s))))))
T c= * * part cIMAGE * * part co f0 f1 f2 * * part cIMAGE f0 * * part cIMAGE f1 f2
D IMAGE_UNIONS
A |- (!f. (!s. (((IMAGE f) (UNIONS s)) = (UNIONS ((IMAGE (IMAGE f)) s)))))
T c= * * part cIMAGE f0 * part cUNIONS f1 * part cUNIONS * * part cIMAGE * part cIMAGE f0 f1
D FINITE_IMAGE_INJ_EQ
A |- (!f. (!s. ((!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f x) = (f y)))) ==> (x = y)))) ==> ((FINITE ((IMAGE f) s)) = (FINITE s)))))
T c==> ! ! c==> c/\ cIN b0 f0 c/\ cIN b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c= cFINITE * * part cIMAGE f1 f0 cFINITE f0
D HAS_SIZE
A |- (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))))
T c= cHAS_SIZE f0 f1 c/\ cFINITE f0 c= cCARD f0 f1
D CARD_IMAGE_INJ
A |- (!f. (!s. (((!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f x) = (f y)))) ==> (x = y)))) /\ (FINITE s)) ==> ((CARD ((IMAGE f) s)) = (CARD s)))))
T c==> c/\ ! ! c==> c/\ cIN b0 f0 c/\ cIN b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 cFINITE f0 c= cCARD * * part cIMAGE f1 f0 cCARD f0
D COUNTABLE_IMAGE_INJ_EQ
A |- (!f. (!s. ((!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f x) = (f y)))) ==> (x = y)))) ==> ((COUNTABLE ((IMAGE f) s)) = (COUNTABLE s)))))
T c==> ! ! c==> c/\ cIN b0 f0 c/\ cIN b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c= cCOUNTABLE * * part cIMAGE f1 f0 cCOUNTABLE f0
D LINEAR_0
A |- (!f. ((linear f) ==> ((f (vec (NUMERAL _0))) = (vec (NUMERAL _0)))))
T c==> clinear f0 c= * f0 cvec cNUMERAL c_0 cvec cNUMERAL c_0
D open_segment
A |- (!a. (!b. ((open_segment (a , b)) = ((closed_segment ((CONS (a , b)) NIL)) DIFF (a INSERT (b INSERT EMPTY))))))
T c= * part copen_segment c, f0 f1 * * part cDIFF * part cclosed_segment cCONS c, f0 f1 cNIL * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
D CLOSED_SEGMENT_LINEAR_IMAGE
A |- (!f. (!a. (!b. ((linear f) ==> ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL))))))))
T c==> clinear f0 c= * part cclosed_segment cCONS c, * f0 f1 * f0 f2 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, f1 f2 cNIL
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!t. ((((IMAGE (IMAGE f)) s) UNION ((IMAGE (IMAGE f)) t)) = ((IMAGE (IMAGE f)) (s UNION t)))) ==> ((\t. ((((IMAGE (IMAGE f)) s) UNION ((IMAGE (IMAGE f)) t)) = ((IMAGE (IMAGE f)) (s UNION t)))) t)) = ((\t. ((((IMAGE (IMAGE f)) s) UNION ((IMAGE (IMAGE f)) t)) = ((IMAGE (IMAGE f)) (s UNION t)))) t))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! c= * * part cUNION * * part cIMAGE * part cIMAGE f0 f1 * * part cIMAGE * part cIMAGE f0 b0 * * part cIMAGE * part cIMAGE f0 * * part cUNION f1 b0 * / c= * * part cUNION * * part cIMAGE * part cIMAGE f0 f1 * * part cIMAGE * part cIMAGE f0 b0 * * part cIMAGE * part cIMAGE f0 * * part cUNION f1 b0 f2 * / c= * * part cUNION * * part cIMAGE * part cIMAGE f0 f1 * * part cIMAGE * part cIMAGE f0 b0 * * part cIMAGE * part cIMAGE f0 * * part cUNION f1 b0 f2
- |- ((\f. (!u. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((UNIONS ((IMAGE (IMAGE (IMAGE f))) u)) = ((IMAGE (IMAGE f)) (UNIONS u)))))) f)
T * / ! c==> ! ! c==> c= * b0 b2 * b0 b3 c= b2 b3 c= * part cUNIONS * * part cIMAGE * part cIMAGE * part cIMAGE b0 b1 * * part cIMAGE * part cIMAGE b0 * part cUNIONS b1 f0
- |- ((!t. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((((IMAGE (IMAGE f)) s) DIFF ((IMAGE (IMAGE f)) t)) = ((IMAGE (IMAGE f)) (s DIFF t))))) = ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!t. ((((IMAGE (IMAGE f)) s) DIFF ((IMAGE (IMAGE f)) t)) = ((IMAGE (IMAGE f)) (s DIFF t))))))
T c= ! c==> ! ! c==> c= * f0 b1 * f0 b2 c= b1 b2 c= * * part cDIFF * * part cIMAGE * part cIMAGE f0 f1 * * part cIMAGE * part cIMAGE f0 b0 * * part cIMAGE * part cIMAGE f0 * * part cDIFF f1 b0 c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! c= * * part cDIFF * * part cIMAGE * part cIMAGE f0 f1 * * part cIMAGE * part cIMAGE f0 b0 * * part cIMAGE * part cIMAGE f0 * * part cDIFF f1 b0
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!s. (!t. ((((IMAGE (IMAGE f)) s) SUBSET ((IMAGE (IMAGE f)) t)) = (s SUBSET t))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= cSUBSET * * part cIMAGE * part cIMAGE f0 b0 * * part cIMAGE * part cIMAGE f0 b1 cSUBSET b0 b1
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!x. (!s. (((f x) IN ((IMAGE f) s)) = (x IN s))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= cIN * f0 b0 * * part cIMAGE f0 b1 cIN b0 b1
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((\s. (!P. ((!y. ((y IN ((IMAGE f) s)) ==> (P y))) = (!x. ((x IN s) ==> (P (f x))))))) s)
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 * / ! c= ! c==> cIN b2 * * part cIMAGE f0 b0 * b1 b2 ! c==> cIN b2 b0 * b1 * f0 b2 f1
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((\g. (!k. (((IMAGE (f o g)) k) = ((IMAGE f) ((IMAGE g) k))))) g)
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 * / ! c= * * part cIMAGE * * part co f0 b0 b1 * * part cIMAGE f0 * * part cIMAGE b0 b1 f1
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!s. (!x. ((((IMAGE f) s) (f x)) = (s x))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= cIMAGE f0 b0 * f0 b1 * b0 b1
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!s. (!t. ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t)))))) = (!s. (!t. ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= * * part cDIFF * * part cIMAGE f0 b0 * * part cIMAGE f0 b1 * * part cIMAGE f0 * * part cDIFF b0 b1 ! ! c= * * part cDIFF * * part cIMAGE f0 b0 * * part cIMAGE f0 b1 * * part cIMAGE f0 * * part cDIFF b0 b1
- |- ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!u. ((UNIONS ((IMAGE (IMAGE (IMAGE f))) u)) = ((IMAGE (IMAGE f)) (UNIONS u)))))
T c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! c= * part cUNIONS * * part cIMAGE * part cIMAGE * part cIMAGE f0 b0 * * part cIMAGE * part cIMAGE f0 * part cUNIONS b0
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!x. ((((IMAGE f) s) DELETE (f x)) = ((IMAGE f) (s DELETE x))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! c= * * part cDELETE * * part cIMAGE f0 f1 * f0 b0 * * part cIMAGE f0 * * part cDELETE f1 b0
+ |- ((!t. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t))))) = ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!t. ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t))))))
T c= ! c==> ! ! c==> c= * f0 b1 * f0 b2 c= b1 b2 c= * * part cDIFF * * part cIMAGE f0 f1 * * part cIMAGE f0 b0 * * part cIMAGE f0 * * part cDIFF f1 b0 c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! c= * * part cDIFF * * part cIMAGE f0 f1 * * part cIMAGE f0 b0 * * part cIMAGE f0 * * part cDIFF f1 b0
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!a. (!b. ((midpoint ((f a) , (f b))) = (f (midpoint (a , b)))))) /\ ((!x. (!y. (((f x) = (f y)) = (x = y)))) /\ ((!s. ((subspace ((IMAGE f) s)) = (subspace s))) /\ ((!s. ((span ((IMAGE f) s)) = ((IMAGE f) (span s)))) /\ ((!s. ((dependent ((IMAGE f) s)) = (dependent s))) /\ ((!s. ((independent ((IMAGE f) s)) = (independent s))) /\ ((!s. ((dim ((IMAGE f) s)) = (dim s))) /\ ((!x. (!l. (((MEM (f x)) ((MAP f) l)) = ((MEM x) l)))) /\ ((!l. ((LENGTH ((MAP f) l)) = (LENGTH l))) /\ ((!h. (!t. (((CONS (f h)) ((MAP f) t)) = ((MAP f) ((CONS h) t))))) /\ ((!l1. (!l2. (((APPEND ((MAP f) l1)) ((MAP f) l2)) = ((MAP f) ((APPEND l1) l2))))) /\ ((!l. ((REVERSE ((MAP f) l)) = ((MAP f) (REVERSE l)))) /\ ((!s. ((collinear ((IMAGE f) s)) = (collinear s))) /\ ((!s. (!t. (((open_in ((subtopology euclidean) ((IMAGE f) t))) ((IMAGE f) s)) = ((open_in ((subtopology euclidean) t)) s)))) /\ ((!s. (!t. (((closed_in ((subtopology euclidean) ((IMAGE f) t))) ((IMAGE f) s)) = ((closed_in ((subtopology euclidean) t)) s)))) /\ (!a. (!b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL))))))))))))))))))))) = ((!x. ((vector_neg (f x)) = (f (vector_neg x)))) /\ ((!a. (!b. ((midpoint ((f a) , (f b))) = (f (midpoint (a , b)))))) /\ ((!x. (!y. (((f x) = (f y)) = (x = y)))) /\ ((!s. ((subspace ((IMAGE f) s)) = (subspace s))) /\ ((!s. ((span ((IMAGE f) s)) = ((IMAGE f) (span s)))) /\ ((!s. ((dependent ((IMAGE f) s)) = (dependent s))) /\ ((!s. ((independent ((IMAGE f) s)) = (independent s))) /\ ((!s. ((dim ((IMAGE f) s)) = (dim s))) /\ ((!x. (!l. (((MEM (f x)) ((MAP f) l)) = ((MEM x) l)))) /\ ((!l. ((LENGTH ((MAP f) l)) = (LENGTH l))) /\ ((!h. (!t. (((CONS (f h)) ((MAP f) t)) = ((MAP f) ((CONS h) t))))) /\ ((!l1. (!l2. (((APPEND ((MAP f) l1)) ((MAP f) l2)) = ((MAP f) ((APPEND l1) l2))))) /\ ((!l. ((REVERSE ((MAP f) l)) = ((MAP f) (REVERSE l)))) /\ ((!s. ((collinear ((IMAGE f) s)) = (collinear s))) /\ ((!s. (!t. (((open_in ((subtopology euclidean) ((IMAGE f) t))) ((IMAGE f) s)) = ((open_in ((subtopology euclidean) t)) s)))) /\ ((!s. (!t. (((closed_in ((subtopology euclidean) ((IMAGE f) t))) ((IMAGE f) s)) = ((closed_in ((subtopology euclidean) t)) s)))) /\ (!a. (!b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL)))))))))))))))))))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c/\ ! ! c= cmidpoint c, * f0 b0 * f0 b1 * f0 cmidpoint c, b0 b1 c/\ ! ! c= c= * f0 b0 * f0 b1 c= b0 b1 c/\ ! c= csubspace * * part cIMAGE f0 b0 csubspace b0 c/\ ! c= * part cspan * * part cIMAGE f0 b0 * * part cIMAGE f0 * part cspan b0 c/\ ! c= cdependent * * part cIMAGE f0 b0 cdependent b0 c/\ ! c= cindependent * * part cIMAGE f0 b0 cindependent b0 c/\ ! c= cdim * * part cIMAGE f0 b0 cdim b0 c/\ ! ! c= cMEM * f0 b0 cMAP f0 b1 cMEM b0 b1 c/\ ! c= cLENGTH cMAP f0 b0 cLENGTH b0 c/\ ! ! c= cCONS * f0 b0 cMAP f0 b1 cMAP f0 cCONS b0 b1 c/\ ! ! c= cAPPEND cMAP f0 b0 cMAP f0 b1 cMAP f0 cAPPEND b0 b1 c/\ ! c= cREVERSE cMAP f0 b0 cMAP f0 cREVERSE b0 c/\ ! c= ccollinear * * part cIMAGE f0 b0 ccollinear b0 c/\ ! ! c= copen_in csubtopology ceuclidean * * part cIMAGE f0 b1 * * part cIMAGE f0 b0 copen_in csubtopology ceuclidean b1 b0 c/\ ! ! c= cclosed_in csubtopology ceuclidean * * part cIMAGE f0 b1 * * part cIMAGE f0 b0 cclosed_in csubtopology ceuclidean b1 b0 ! ! c= * part cclosed_segment cCONS c, * f0 b0 * f0 b1 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, b0 b1 cNIL c/\ ! c= cvector_neg * f0 b0 * f0 cvector_neg b0 c/\ ! ! c= cmidpoint c, * f0 b0 * f0 b1 * f0 cmidpoint c, b0 b1 c/\ ! ! c= c= * f0 b0 * f0 b1 c= b0 b1 c/\ ! c= csubspace * * part cIMAGE f0 b0 csubspace b0 c/\ ! c= * part cspan * * part cIMAGE f0 b0 * * part cIMAGE f0 * part cspan b0 c/\ ! c= cdependent * * part cIMAGE f0 b0 cdependent b0 c/\ ! c= cindependent * * part cIMAGE f0 b0 cindependent b0 c/\ ! c= cdim * * part cIMAGE f0 b0 cdim b0 c/\ ! ! c= cMEM * f0 b0 cMAP f0 b1 cMEM b0 b1 c/\ ! c= cLENGTH cMAP f0 b0 cLENGTH b0 c/\ ! ! c= cCONS * f0 b0 cMAP f0 b1 cMAP f0 cCONS b0 b1 c/\ ! ! c= cAPPEND cMAP f0 b0 cMAP f0 b1 cMAP f0 cAPPEND b0 b1 c/\ ! c= cREVERSE cMAP f0 b0 cMAP f0 cREVERSE b0 c/\ ! c= ccollinear * * part cIMAGE f0 b0 ccollinear b0 c/\ ! ! c= copen_in csubtopology ceuclidean * * part cIMAGE f0 b1 * * part cIMAGE f0 b0 copen_in csubtopology ceuclidean b1 b0 c/\ ! ! c= cclosed_in csubtopology ceuclidean * * part cIMAGE f0 b1 * * part cIMAGE f0 b0 cclosed_in csubtopology ceuclidean b1 b0 ! ! c= * part cclosed_segment cCONS c, * f0 b0 * f0 b1 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, b0 b1 cNIL
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((FINITE ((IMAGE (IMAGE f)) s)) = (FINITE s))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= cFINITE * * part cIMAGE * part cIMAGE f0 f1 cFINITE f1
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((span ((IMAGE f) s)) = ((IMAGE f) (span s)))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= * part cspan * * part cIMAGE f0 f1 * * part cIMAGE f0 * part cspan f1
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!l. (((MEM (f x)) ((MAP f) l)) = ((MEM x) l))) ==> ((\l. (((MEM (f x)) ((MAP f) l)) = ((MEM x) l))) l)) = ((\l. (((MEM (f x)) ((MAP f) l)) = ((MEM x) l))) l))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! c= cMEM * f0 f1 cMAP f0 b0 cMEM f1 b0 * / c= cMEM * f0 f1 cMAP f0 b0 cMEM f1 b0 f2 * / c= cMEM * f0 f1 cMAP f0 b0 cMEM f1 b0 f2
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((\s. (!t. ((((IMAGE f) s) PSUBSET ((IMAGE f) t)) = (s PSUBSET t)))) s)
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 * / ! c= cPSUBSET * * part cIMAGE f0 b0 * * part cIMAGE f0 b1 cPSUBSET b0 b1 f1
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!a. (!b. ((midpoint ((f a) , (f b))) = (f (midpoint (a , b))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= cmidpoint c, * f0 b0 * f0 b1 * f0 cmidpoint c, b0 b1
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!p. (!x. (!y. ((((COND p) (f x)) (f y)) = (f (((COND p) x) y))))))) = (!p. (!x. (!y. ((((COND p) (f x)) (f y)) = (f (((COND p) x) y)))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! ! c= cCOND b0 * f0 b1 * f0 b2 * f0 cCOND b0 b1 b2 ! ! ! c= cCOND b0 * f0 b1 * f0 b2 * f0 cCOND b0 b1 b2
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!t. ((((IMAGE (IMAGE f)) s) DIFF ((IMAGE (IMAGE f)) t)) = ((IMAGE (IMAGE f)) (s DIFF t)))) ==> ((\t. ((((IMAGE (IMAGE f)) s) DIFF ((IMAGE (IMAGE f)) t)) = ((IMAGE (IMAGE f)) (s DIFF t)))) t)) = ((\t. ((((IMAGE (IMAGE f)) s) DIFF ((IMAGE (IMAGE f)) t)) = ((IMAGE (IMAGE f)) (s DIFF t)))) t))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! c= * * part cDIFF * * part cIMAGE * part cIMAGE f0 f1 * * part cIMAGE * part cIMAGE f0 b0 * * part cIMAGE * part cIMAGE f0 * * part cDIFF f1 b0 * / c= * * part cDIFF * * part cIMAGE * part cIMAGE f0 f1 * * part cIMAGE * part cIMAGE f0 b0 * * part cIMAGE * part cIMAGE f0 * * part cDIFF f1 b0 f2 * / c= * * part cDIFF * * part cIMAGE * part cIMAGE f0 f1 * * part cIMAGE * part cIMAGE f0 b0 * * part cIMAGE * part cIMAGE f0 * * part cDIFF f1 b0 f2
- |- (((!f. (!x. (!r. (((linear f) /\ ((!y. (?x. ((f x) = y))) /\ (!x. ((vector_norm (f x)) = (vector_norm x))))) ==> ((ball ((f x) , r)) = ((IMAGE f) (ball (x , r)))))))) ==> ((\f. (!x. (!r. (((linear f) /\ ((!y. (?x. ((f x) = y))) /\ (!x. ((vector_norm (f x)) = (vector_norm x))))) ==> ((ball ((f x) , r)) = ((IMAGE f) (ball (x , r)))))))) f)) = ((\f. (!x. (!r. (((linear f) /\ ((!y. (?x. ((f x) = y))) /\ (!x. ((vector_norm (f x)) = (vector_norm x))))) ==> ((ball ((f x) , r)) = ((IMAGE f) (ball (x , r)))))))) f))
T c= c==> ! ! ! c==> c/\ clinear b0 c/\ ! c? / c= * b0 b4 b3 ! c= cvector_norm * b0 b3 cvector_norm b3 c= * part cball c, * b0 b1 b2 * * part cIMAGE b0 * part cball c, b1 b2 * / ! ! c==> c/\ clinear b0 c/\ ! c? / c= * b0 b4 b3 ! c= cvector_norm * b0 b3 cvector_norm b3 c= * part cball c, * b0 b1 b2 * * part cIMAGE b0 * part cball c, b1 b2 f0 * / ! ! c==> c/\ clinear b0 c/\ ! c? / c= * b0 b4 b3 ! c= cvector_norm * b0 b3 cvector_norm b3 c= * part cball c, * b0 b1 b2 * * part cIMAGE b0 * part cball c, b1 b2 f0
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!s. (!x. ((((IMAGE f) s) DELETE (f x)) = ((IMAGE f) (s DELETE x)))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= * * part cDELETE * * part cIMAGE f0 b0 * f0 b1 * * part cIMAGE f0 * * part cDELETE b0 b1
- |- ((\f. (!s. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((INFINITE ((IMAGE f) s)) = (INFINITE s))))) f)
T * / ! c==> ! ! c==> c= * b0 b2 * b0 b3 c= b2 b3 c= cINFINITE * * part cIMAGE b0 b1 cINFINITE b1 f0
- |- (((!f. (!s. ((linear f) ==> ((span ((IMAGE f) s)) = ((IMAGE f) (span s)))))) ==> ((\f. (!s. ((linear f) ==> ((span ((IMAGE f) s)) = ((IMAGE f) (span s)))))) f)) = ((\f. (!s. ((linear f) ==> ((span ((IMAGE f) s)) = ((IMAGE f) (span s)))))) f))
T c= c==> ! ! c==> clinear b0 c= * part cspan * * part cIMAGE b0 b1 * * part cIMAGE b0 * part cspan b1 * / ! c==> clinear b0 c= * part cspan * * part cIMAGE b0 b1 * * part cIMAGE b0 * part cspan b1 f0 * / ! c==> clinear b0 c= * part cspan * * part cIMAGE b0 b1 * * part cIMAGE b0 * part cspan b1 f0
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!n. ((((IMAGE f) o xs) n) = ((IMAGE f) (xs n))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! c= * * * part co * part cIMAGE f0 f1 b0 * * part cIMAGE f0 * f1 b0
- |- ((!r. (((linear f) /\ ((!y. (?x. ((f x) = y))) /\ (!x. ((vector_norm (f x)) = (vector_norm x))))) ==> ((sphere ((f x) , r)) = ((IMAGE f) (sphere (x , r)))))) = (((linear f) /\ ((!y. (?x. ((f x) = y))) /\ (!x. ((vector_norm (f x)) = (vector_norm x))))) ==> (!r. ((sphere ((f x) , r)) = ((IMAGE f) (sphere (x , r)))))))
T c= ! c==> c/\ clinear f0 c/\ ! c? / c= * f0 b2 b1 ! c= cvector_norm * f0 b1 cvector_norm b1 c= * part csphere c, * f0 f1 b0 * * part cIMAGE f0 * part csphere c, f1 b0 c==> c/\ clinear f0 c/\ ! c? / c= * f0 b1 b0 ! c= cvector_norm * f0 b0 cvector_norm b0 ! c= * part csphere c, * f0 f1 b0 * * part cIMAGE f0 * part csphere c, f1 b0
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((vector_sub (f x)) (f y)) = (f ((vector_sub x) y)))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= cvector_sub * f0 f1 * f0 f2 * f0 cvector_sub f1 f2
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((\s. (!t. ((((COND p) ((IMAGE (IMAGE f)) s)) ((IMAGE (IMAGE f)) t)) = ((IMAGE (IMAGE f)) (((COND p) s) t))))) s)
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 * / ! c= * * * part cCOND f1 * * part cIMAGE * part cIMAGE f0 b0 * * part cIMAGE * part cIMAGE f0 b1 * * part cIMAGE * part cIMAGE f0 * * * part cCOND f1 b0 b1 f2
- |- (!s. (!t. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (((DISJOINT ((IMAGE (IMAGE f)) s)) ((IMAGE (IMAGE f)) t)) = ((DISJOINT s) t)))))
T c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= cDISJOINT * * part cIMAGE * part cIMAGE f0 f1 * * part cIMAGE * part cIMAGE f0 f2 cDISJOINT f1 f2
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) /\ (!s. (!P. ((!y. ((y IN ((IMAGE f) s)) ==> (P y))) = (!x. ((x IN s) ==> (P (f x))))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c/\ c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= ! c==> cIN b2 * * part cIMAGE f0 b0 * b1 b2 ! c==> cIN b2 b0 * b1 * f0 b2
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!s. ((COUNTABLE ((IMAGE (IMAGE f)) s)) = (COUNTABLE s)))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! c= cCOUNTABLE * * part cIMAGE * part cIMAGE f0 b0 cCOUNTABLE b0
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((!a. (!b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL)))))) = ((!s. (!t. (((closed_in ((subtopology euclidean) ((IMAGE f) t))) ((IMAGE f) s)) = ((closed_in ((subtopology euclidean) t)) s)))) /\ (!a. (!b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL))))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= ! ! c= * part cclosed_segment cCONS c, * f0 b0 * f0 b1 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, b0 b1 cNIL c/\ ! ! c= cclosed_in csubtopology ceuclidean * * part cIMAGE f0 b1 * * part cIMAGE f0 b0 cclosed_in csubtopology ceuclidean b1 b0 ! ! c= * part cclosed_segment cCONS c, * f0 b0 * f0 b1 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, b0 b1 cNIL
- |- (!s. (!t. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((((IMAGE (IMAGE f)) s) UNION ((IMAGE (IMAGE f)) t)) = ((IMAGE (IMAGE f)) (s UNION t))))))
T c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= * * part cUNION * * part cIMAGE * part cIMAGE f0 f1 * * part cIMAGE * part cIMAGE f0 f2 * * part cIMAGE * part cIMAGE f0 * * part cUNION f1 f2
- |- (((!f. (!s. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((INFINITE ((IMAGE f) s)) = (INFINITE s))))) ==> ((\f. (!s. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((INFINITE ((IMAGE f) s)) = (INFINITE s))))) f)) = ((\f. (!s. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((INFINITE ((IMAGE f) s)) = (INFINITE s))))) f))
T c= c==> ! ! c==> ! ! c==> c= * b0 b2 * b0 b3 c= b2 b3 c= cINFINITE * * part cIMAGE b0 b1 cINFINITE b1 * / ! c==> ! ! c==> c= * b0 b2 * b0 b3 c= b2 b3 c= cINFINITE * * part cIMAGE b0 b1 cINFINITE b1 f0 * / ! c==> ! ! c==> c= * b0 b2 * b0 b3 c= b2 b3 c= cINFINITE * * part cIMAGE b0 b1 cINFINITE b1 f0
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((!x. ((vector_neg (f x)) = (f (vector_neg x)))) /\ ((!a. (!b. ((midpoint ((f a) , (f b))) = (f (midpoint (a , b)))))) /\ ((!x. (!y. (((f x) = (f y)) = (x = y)))) /\ ((!s. ((subspace ((IMAGE f) s)) = (subspace s))) /\ ((!s. ((span ((IMAGE f) s)) = ((IMAGE f) (span s)))) /\ ((!s. ((dependent ((IMAGE f) s)) = (dependent s))) /\ ((!s. ((independent ((IMAGE f) s)) = (independent s))) /\ ((!s. ((dim ((IMAGE f) s)) = (dim s))) /\ ((!x. (!l. (((MEM (f x)) ((MAP f) l)) = ((MEM x) l)))) /\ ((!l. ((LENGTH ((MAP f) l)) = (LENGTH l))) /\ ((!h. (!t. (((CONS (f h)) ((MAP f) t)) = ((MAP f) ((CONS h) t))))) /\ ((!l1. (!l2. (((APPEND ((MAP f) l1)) ((MAP f) l2)) = ((MAP f) ((APPEND l1) l2))))) /\ ((!l. ((REVERSE ((MAP f) l)) = ((MAP f) (REVERSE l)))) /\ ((!s. ((collinear ((IMAGE f) s)) = (collinear s))) /\ ((!s. (!t. (((open_in ((subtopology euclidean) ((IMAGE f) t))) ((IMAGE f) s)) = ((open_in ((subtopology euclidean) t)) s)))) /\ ((!s. (!t. (((closed_in ((subtopology euclidean) ((IMAGE f) t))) ((IMAGE f) s)) = ((closed_in ((subtopology euclidean) t)) s)))) /\ (!a. (!b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL))))))))))))))))))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c/\ ! c= cvector_neg * f0 b0 * f0 cvector_neg b0 c/\ ! ! c= cmidpoint c, * f0 b0 * f0 b1 * f0 cmidpoint c, b0 b1 c/\ ! ! c= c= * f0 b0 * f0 b1 c= b0 b1 c/\ ! c= csubspace * * part cIMAGE f0 b0 csubspace b0 c/\ ! c= * part cspan * * part cIMAGE f0 b0 * * part cIMAGE f0 * part cspan b0 c/\ ! c= cdependent * * part cIMAGE f0 b0 cdependent b0 c/\ ! c= cindependent * * part cIMAGE f0 b0 cindependent b0 c/\ ! c= cdim * * part cIMAGE f0 b0 cdim b0 c/\ ! ! c= cMEM * f0 b0 cMAP f0 b1 cMEM b0 b1 c/\ ! c= cLENGTH cMAP f0 b0 cLENGTH b0 c/\ ! ! c= cCONS * f0 b0 cMAP f0 b1 cMAP f0 cCONS b0 b1 c/\ ! ! c= cAPPEND cMAP f0 b0 cMAP f0 b1 cMAP f0 cAPPEND b0 b1 c/\ ! c= cREVERSE cMAP f0 b0 cMAP f0 cREVERSE b0 c/\ ! c= ccollinear * * part cIMAGE f0 b0 ccollinear b0 c/\ ! ! c= copen_in csubtopology ceuclidean * * part cIMAGE f0 b1 * * part cIMAGE f0 b0 copen_in csubtopology ceuclidean b1 b0 c/\ ! ! c= cclosed_in csubtopology ceuclidean * * part cIMAGE f0 b1 * * part cIMAGE f0 b0 cclosed_in csubtopology ceuclidean b1 b0 ! ! c= * part cclosed_segment cCONS c, * f0 b0 * f0 b1 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, b0 b1 cNIL
- |- (((!f. (!s. (!P. ((!u. ((u IN ((IMAGE (IMAGE f)) s)) ==> (P u))) = (!t. ((t IN s) ==> (P ((IMAGE f) t)))))))) ==> ((\f. (!s. (!P. ((!u. ((u IN ((IMAGE (IMAGE f)) s)) ==> (P u))) = (!t. ((t IN s) ==> (P ((IMAGE f) t)))))))) f)) = ((\f. (!s. (!P. ((!u. ((u IN ((IMAGE (IMAGE f)) s)) ==> (P u))) = (!t. ((t IN s) ==> (P ((IMAGE f) t)))))))) f))
T c= c==> ! ! ! c= ! c==> cIN b3 * * part cIMAGE * part cIMAGE b0 b1 * b2 b3 ! c==> cIN b3 b1 * b2 * * part cIMAGE b0 b3 * / ! ! c= ! c==> cIN b3 * * part cIMAGE * part cIMAGE b0 b1 * b2 b3 ! c==> cIN b3 b1 * b2 * * part cIMAGE b0 b3 f0 * / ! ! c= ! c==> cIN b3 * * part cIMAGE * part cIMAGE b0 b1 * b2 b3 ! c==> cIN b3 b1 * b2 * * part cIMAGE b0 b3 f0
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((((IMAGE f) s) PSUBSET ((IMAGE f) t)) = (s PSUBSET t))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= cPSUBSET * * part cIMAGE f0 f1 * * part cIMAGE f0 f2 cPSUBSET f1 f2
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!h. (!t. (((CONS (f h)) ((MAP f) t)) = ((MAP f) ((CONS h) t))))) /\ ((!l1. (!l2. (((APPEND ((MAP f) l1)) ((MAP f) l2)) = ((MAP f) ((APPEND l1) l2))))) /\ ((!l. ((REVERSE ((MAP f) l)) = ((MAP f) (REVERSE l)))) /\ ((!s. ((collinear ((IMAGE f) s)) = (collinear s))) /\ ((!s. (!t. (((open_in ((subtopology euclidean) ((IMAGE f) t))) ((IMAGE f) s)) = ((open_in ((subtopology euclidean) t)) s)))) /\ ((!s. (!t. (((closed_in ((subtopology euclidean) ((IMAGE f) t))) ((IMAGE f) s)) = ((closed_in ((subtopology euclidean) t)) s)))) /\ (!a. (!b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL)))))))))))) = ((!l. ((LENGTH ((MAP f) l)) = (LENGTH l))) /\ ((!h. (!t. (((CONS (f h)) ((MAP f) t)) = ((MAP f) ((CONS h) t))))) /\ ((!l1. (!l2. (((APPEND ((MAP f) l1)) ((MAP f) l2)) = ((MAP f) ((APPEND l1) l2))))) /\ ((!l. ((REVERSE ((MAP f) l)) = ((MAP f) (REVERSE l)))) /\ ((!s. ((collinear ((IMAGE f) s)) = (collinear s))) /\ ((!s. (!t. (((open_in ((subtopology euclidean) ((IMAGE f) t))) ((IMAGE f) s)) = ((open_in ((subtopology euclidean) t)) s)))) /\ ((!s. (!t. (((closed_in ((subtopology euclidean) ((IMAGE f) t))) ((IMAGE f) s)) = ((closed_in ((subtopology euclidean) t)) s)))) /\ (!a. (!b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL))))))))))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c/\ ! ! c= cCONS * f0 b0 cMAP f0 b1 cMAP f0 cCONS b0 b1 c/\ ! ! c= cAPPEND cMAP f0 b0 cMAP f0 b1 cMAP f0 cAPPEND b0 b1 c/\ ! c= cREVERSE cMAP f0 b0 cMAP f0 cREVERSE b0 c/\ ! c= ccollinear * * part cIMAGE f0 b0 ccollinear b0 c/\ ! ! c= copen_in csubtopology ceuclidean * * part cIMAGE f0 b1 * * part cIMAGE f0 b0 copen_in csubtopology ceuclidean b1 b0 c/\ ! ! c= cclosed_in csubtopology ceuclidean * * part cIMAGE f0 b1 * * part cIMAGE f0 b0 cclosed_in csubtopology ceuclidean b1 b0 ! ! c= * part cclosed_segment cCONS c, * f0 b0 * f0 b1 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, b0 b1 cNIL c/\ ! c= cLENGTH cMAP f0 b0 cLENGTH b0 c/\ ! ! c= cCONS * f0 b0 cMAP f0 b1 cMAP f0 cCONS b0 b1 c/\ ! ! c= cAPPEND cMAP f0 b0 cMAP f0 b1 cMAP f0 cAPPEND b0 b1 c/\ ! c= cREVERSE cMAP f0 b0 cMAP f0 cREVERSE b0 c/\ ! c= ccollinear * * part cIMAGE f0 b0 ccollinear b0 c/\ ! ! c= copen_in csubtopology ceuclidean * * part cIMAGE f0 b1 * * part cIMAGE f0 b0 copen_in csubtopology ceuclidean b1 b0 c/\ ! ! c= cclosed_in csubtopology ceuclidean * * part cIMAGE f0 b1 * * part cIMAGE f0 b0 cclosed_in csubtopology ceuclidean b1 b0 ! ! c= * part cclosed_segment cCONS c, * f0 b0 * f0 b1 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, b0 b1 cNIL
- |- (!s. (!t. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (((DISJOINT ((IMAGE f) s)) ((IMAGE f) t)) = ((DISJOINT s) t)))))
T c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= cDISJOINT * * part cIMAGE f0 f1 * * part cIMAGE f0 f2 cDISJOINT f1 f2
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((((IMAGE f) s) DELETE (f x)) = ((IMAGE f) (s DELETE x)))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= * * part cDELETE * * part cIMAGE f0 f1 * f0 f2 * * part cIMAGE f0 * * part cDELETE f1 f2
- |- ((!s. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((FINITE ((IMAGE (IMAGE f)) s)) = (FINITE s)))) = ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!s. ((FINITE ((IMAGE (IMAGE f)) s)) = (FINITE s)))))
T c= ! c==> ! ! c==> c= * f0 b1 * f0 b2 c= b1 b2 c= cFINITE * * part cIMAGE * part cIMAGE f0 b0 cFINITE b0 c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! c= cFINITE * * part cIMAGE * part cIMAGE f0 b0 cFINITE b0
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!s. ((dim ((IMAGE f) s)) = (dim s))) /\ ((!x. (!l. (((MEM (f x)) ((MAP f) l)) = ((MEM x) l)))) /\ ((!l. ((LENGTH ((MAP f) l)) = (LENGTH l))) /\ ((!h. (!t. (((CONS (f h)) ((MAP f) t)) = ((MAP f) ((CONS h) t))))) /\ ((!l1. (!l2. (((APPEND ((MAP f) l1)) ((MAP f) l2)) = ((MAP f) ((APPEND l1) l2))))) /\ ((!l. ((REVERSE ((MAP f) l)) = ((MAP f) (REVERSE l)))) /\ ((!s. ((collinear ((IMAGE f) s)) = (collinear s))) /\ ((!s. (!t. (((open_in ((subtopology euclidean) ((IMAGE f) t))) ((IMAGE f) s)) = ((open_in ((subtopology euclidean) t)) s)))) /\ ((!s. (!t. (((closed_in ((subtopology euclidean) ((IMAGE f) t))) ((IMAGE f) s)) = ((closed_in ((subtopology euclidean) t)) s)))) /\ (!a. (!b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL))))))))))))))) = ((!s. ((independent ((IMAGE f) s)) = (independent s))) /\ ((!s. ((dim ((IMAGE f) s)) = (dim s))) /\ ((!x. (!l. (((MEM (f x)) ((MAP f) l)) = ((MEM x) l)))) /\ ((!l. ((LENGTH ((MAP f) l)) = (LENGTH l))) /\ ((!h. (!t. (((CONS (f h)) ((MAP f) t)) = ((MAP f) ((CONS h) t))))) /\ ((!l1. (!l2. (((APPEND ((MAP f) l1)) ((MAP f) l2)) = ((MAP f) ((APPEND l1) l2))))) /\ ((!l. ((REVERSE ((MAP f) l)) = ((MAP f) (REVERSE l)))) /\ ((!s. ((collinear ((IMAGE f) s)) = (collinear s))) /\ ((!s. (!t. (((open_in ((subtopology euclidean) ((IMAGE f) t))) ((IMAGE f) s)) = ((open_in ((subtopology euclidean) t)) s)))) /\ ((!s. (!t. (((closed_in ((subtopology euclidean) ((IMAGE f) t))) ((IMAGE f) s)) = ((closed_in ((subtopology euclidean) t)) s)))) /\ (!a. (!b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL)))))))))))))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c/\ ! c= cdim * * part cIMAGE f0 b0 cdim b0 c/\ ! ! c= cMEM * f0 b0 cMAP f0 b1 cMEM b0 b1 c/\ ! c= cLENGTH cMAP f0 b0 cLENGTH b0 c/\ ! ! c= cCONS * f0 b0 cMAP f0 b1 cMAP f0 cCONS b0 b1 c/\ ! ! c= cAPPEND cMAP f0 b0 cMAP f0 b1 cMAP f0 cAPPEND b0 b1 c/\ ! c= cREVERSE cMAP f0 b0 cMAP f0 cREVERSE b0 c/\ ! c= ccollinear * * part cIMAGE f0 b0 ccollinear b0 c/\ ! ! c= copen_in csubtopology ceuclidean * * part cIMAGE f0 b1 * * part cIMAGE f0 b0 copen_in csubtopology ceuclidean b1 b0 c/\ ! ! c= cclosed_in csubtopology ceuclidean * * part cIMAGE f0 b1 * * part cIMAGE f0 b0 cclosed_in csubtopology ceuclidean b1 b0 ! ! c= * part cclosed_segment cCONS c, * f0 b0 * f0 b1 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, b0 b1 cNIL c/\ ! c= cindependent * * part cIMAGE f0 b0 cindependent b0 c/\ ! c= cdim * * part cIMAGE f0 b0 cdim b0 c/\ ! ! c= cMEM * f0 b0 cMAP f0 b1 cMEM b0 b1 c/\ ! c= cLENGTH cMAP f0 b0 cLENGTH b0 c/\ ! ! c= cCONS * f0 b0 cMAP f0 b1 cMAP f0 cCONS b0 b1 c/\ ! ! c= cAPPEND cMAP f0 b0 cMAP f0 b1 cMAP f0 cAPPEND b0 b1 c/\ ! c= cREVERSE cMAP f0 b0 cMAP f0 cREVERSE b0 c/\ ! c= ccollinear * * part cIMAGE f0 b0 ccollinear b0 c/\ ! ! c= copen_in csubtopology ceuclidean * * part cIMAGE f0 b1 * * part cIMAGE f0 b0 copen_in csubtopology ceuclidean b1 b0 c/\ ! ! c= cclosed_in csubtopology ceuclidean * * part cIMAGE f0 b1 * * part cIMAGE f0 b0 cclosed_in csubtopology ceuclidean b1 b0 ! ! c= * part cclosed_segment cCONS c, * f0 b0 * f0 b1 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, b0 b1 cNIL
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!x. (!y. (((vector_sub (f x)) (f y)) = (f ((vector_sub x) y))))) /\ ((!x. ((vector_neg (f x)) = (f (vector_neg x)))) /\ ((!a. (!b. ((midpoint ((f a) , (f b))) = (f (midpoint (a , b)))))) /\ ((!x. (!y. (((f x) = (f y)) = (x = y)))) /\ ((!s. ((subspace ((IMAGE f) s)) = (subspace s))) /\ ((!s. ((span ((IMAGE f) s)) = ((IMAGE f) (span s)))) /\ ((!s. ((dependent ((IMAGE f) s)) = (dependent s))) /\ ((!s. ((independent ((IMAGE f) s)) = (independent s))) /\ ((!s. ((dim ((IMAGE f) s)) = (dim s))) /\ ((!x. (!l. (((MEM (f x)) ((MAP f) l)) = ((MEM x) l)))) /\ ((!l. ((LENGTH ((MAP f) l)) = (LENGTH l))) /\ ((!h. (!t. (((CONS (f h)) ((MAP f) t)) = ((MAP f) ((CONS h) t))))) /\ ((!l1. (!l2. (((APPEND ((MAP f) l1)) ((MAP f) l2)) = ((MAP f) ((APPEND l1) l2))))) /\ ((!l. ((REVERSE ((MAP f) l)) = ((MAP f) (REVERSE l)))) /\ ((!s. ((collinear ((IMAGE f) s)) = (collinear s))) /\ ((!s. (!t. (((open_in ((subtopology euclidean) ((IMAGE f) t))) ((IMAGE f) s)) = ((open_in ((subtopology euclidean) t)) s)))) /\ ((!s. (!t. (((closed_in ((subtopology euclidean) ((IMAGE f) t))) ((IMAGE f) s)) = ((closed_in ((subtopology euclidean) t)) s)))) /\ (!a. (!b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL))))))))))))))))))))))) = ((!c. (!x. (((% c) (f x)) = (f ((% c) x))))) /\ ((!x. (!y. (((vector_sub (f x)) (f y)) = (f ((vector_sub x) y))))) /\ ((!x. ((vector_neg (f x)) = (f (vector_neg x)))) /\ ((!a. (!b. ((midpoint ((f a) , (f b))) = (f (midpoint (a , b)))))) /\ ((!x. (!y. (((f x) = (f y)) = (x = y)))) /\ ((!s. ((subspace ((IMAGE f) s)) = (subspace s))) /\ ((!s. ((span ((IMAGE f) s)) = ((IMAGE f) (span s)))) /\ ((!s. ((dependent ((IMAGE f) s)) = (dependent s))) /\ ((!s. ((independent ((IMAGE f) s)) = (independent s))) /\ ((!s. ((dim ((IMAGE f) s)) = (dim s))) /\ ((!x. (!l. (((MEM (f x)) ((MAP f) l)) = ((MEM x) l)))) /\ ((!l. ((LENGTH ((MAP f) l)) = (LENGTH l))) /\ ((!h. (!t. (((CONS (f h)) ((MAP f) t)) = ((MAP f) ((CONS h) t))))) /\ ((!l1. (!l2. (((APPEND ((MAP f) l1)) ((MAP f) l2)) = ((MAP f) ((APPEND l1) l2))))) /\ ((!l. ((REVERSE ((MAP f) l)) = ((MAP f) (REVERSE l)))) /\ ((!s. ((collinear ((IMAGE f) s)) = (collinear s))) /\ ((!s. (!t. (((open_in ((subtopology euclidean) ((IMAGE f) t))) ((IMAGE f) s)) = ((open_in ((subtopology euclidean) t)) s)))) /\ ((!s. (!t. (((closed_in ((subtopology euclidean) ((IMAGE f) t))) ((IMAGE f) s)) = ((closed_in ((subtopology euclidean) t)) s)))) /\ (!a. (!b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL)))))))))))))))))))))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c/\ ! ! c= cvector_sub * f0 b0 * f0 b1 * f0 cvector_sub b0 b1 c/\ ! c= cvector_neg * f0 b0 * f0 cvector_neg b0 c/\ ! ! c= cmidpoint c, * f0 b0 * f0 b1 * f0 cmidpoint c, b0 b1 c/\ ! ! c= c= * f0 b0 * f0 b1 c= b0 b1 c/\ ! c= csubspace * * part cIMAGE f0 b0 csubspace b0 c/\ ! c= * part cspan * * part cIMAGE f0 b0 * * part cIMAGE f0 * part cspan b0 c/\ ! c= cdependent * * part cIMAGE f0 b0 cdependent b0 c/\ ! c= cindependent * * part cIMAGE f0 b0 cindependent b0 c/\ ! c= cdim * * part cIMAGE f0 b0 cdim b0 c/\ ! ! c= cMEM * f0 b0 cMAP f0 b1 cMEM b0 b1 c/\ ! c= cLENGTH cMAP f0 b0 cLENGTH b0 c/\ ! ! c= cCONS * f0 b0 cMAP f0 b1 cMAP f0 cCONS b0 b1 c/\ ! ! c= cAPPEND cMAP f0 b0 cMAP f0 b1 cMAP f0 cAPPEND b0 b1 c/\ ! c= cREVERSE cMAP f0 b0 cMAP f0 cREVERSE b0 c/\ ! c= ccollinear * * part cIMAGE f0 b0 ccollinear b0 c/\ ! ! c= copen_in csubtopology ceuclidean * * part cIMAGE f0 b1 * * part cIMAGE f0 b0 copen_in csubtopology ceuclidean b1 b0 c/\ ! ! c= cclosed_in csubtopology ceuclidean * * part cIMAGE f0 b1 * * part cIMAGE f0 b0 cclosed_in csubtopology ceuclidean b1 b0 ! ! c= * part cclosed_segment cCONS c, * f0 b0 * f0 b1 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, b0 b1 cNIL c/\ ! ! c= c% b0 * f0 b1 * f0 c% b0 b1 c/\ ! ! c= cvector_sub * f0 b0 * f0 b1 * f0 cvector_sub b0 b1 c/\ ! c= cvector_neg * f0 b0 * f0 cvector_neg b0 c/\ ! ! c= cmidpoint c, * f0 b0 * f0 b1 * f0 cmidpoint c, b0 b1 c/\ ! ! c= c= * f0 b0 * f0 b1 c= b0 b1 c/\ ! c= csubspace * * part cIMAGE f0 b0 csubspace b0 c/\ ! c= * part cspan * * part cIMAGE f0 b0 * * part cIMAGE f0 * part cspan b0 c/\ ! c= cdependent * * part cIMAGE f0 b0 cdependent b0 c/\ ! c= cindependent * * part cIMAGE f0 b0 cindependent b0 c/\ ! c= cdim * * part cIMAGE f0 b0 cdim b0 c/\ ! ! c= cMEM * f0 b0 cMAP f0 b1 cMEM b0 b1 c/\ ! c= cLENGTH cMAP f0 b0 cLENGTH b0 c/\ ! ! c= cCONS * f0 b0 cMAP f0 b1 cMAP f0 cCONS b0 b1 c/\ ! ! c= cAPPEND cMAP f0 b0 cMAP f0 b1 cMAP f0 cAPPEND b0 b1 c/\ ! c= cREVERSE cMAP f0 b0 cMAP f0 cREVERSE b0 c/\ ! c= ccollinear * * part cIMAGE f0 b0 ccollinear b0 c/\ ! ! c= copen_in csubtopology ceuclidean * * part cIMAGE f0 b1 * * part cIMAGE f0 b0 copen_in csubtopology ceuclidean b1 b0 c/\ ! ! c= cclosed_in csubtopology ceuclidean * * part cIMAGE f0 b1 * * part cIMAGE f0 b0 cclosed_in csubtopology ceuclidean b1 b0 ! ! c= * part cclosed_segment cCONS c, * f0 b0 * f0 b1 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, b0 b1 cNIL
+ |- ((!x. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!s. (((f x) INSERT ((IMAGE f) s)) = ((IMAGE f) (x INSERT s)))))) = ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!x. (!s. (((f x) INSERT ((IMAGE f) s)) = ((IMAGE f) (x INSERT s)))))))
T c= ! c==> ! ! c==> c= * f0 b1 * f0 b1 c= b1 b1 ! c= * * part cINSERT * f0 b0 * * part cIMAGE f0 b1 * * part cIMAGE f0 * * part cINSERT b0 b1 c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= * * part cINSERT * f0 b0 * * part cIMAGE f0 b1 * * part cIMAGE f0 * * part cINSERT b0 b1
- |- ((!s. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((INFINITE ((IMAGE (IMAGE f)) s)) = (INFINITE s)))) = ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!s. ((INFINITE ((IMAGE (IMAGE f)) s)) = (INFINITE s)))))
T c= ! c==> ! ! c==> c= * f0 b1 * f0 b2 c= b1 b2 c= cINFINITE * * part cIMAGE * part cIMAGE f0 b0 cINFINITE b0 c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! c= cINFINITE * * part cIMAGE * part cIMAGE f0 b0 cINFINITE b0
- |- (!s. (!x. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((((IMAGE (IMAGE f)) s) ((IMAGE f) x)) = (s x)))))
T c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= cIMAGE * part cIMAGE f0 f1 * * part cIMAGE f0 f2 * f1 f2
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((\s. ((((IMAGE f) x) IN ((IMAGE (IMAGE f)) s)) = (x IN s))) s)
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 * / c= cIN * * part cIMAGE f0 f1 * * part cIMAGE * part cIMAGE f0 b0 cIN f1 b0 f2
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!t. (((CONS (f h)) ((MAP f) t)) = ((MAP f) ((CONS h) t))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! c= cCONS * f0 f1 cMAP f0 b0 cMAP f0 cCONS f1 b0
- |- ((!x. (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) ==> (!l. (((MEM (f x)) ((MAP f) l)) = ((MEM x) l))))) = (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) ==> (!x. (!l. (((MEM (f x)) ((MAP f) l)) = ((MEM x) l))))))
T c= ! c==> c/\ clinear f0 ! ! c==> c= * f0 b1 * f0 b1 c= b1 b1 ! c= cMEM * f0 b0 cMAP f0 b1 cMEM b0 b1 c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= cMEM * f0 b0 cMAP f0 b1 cMEM b0 b1
- |- (((!f. (!s. (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) ==> ((subspace ((IMAGE f) s)) = (subspace s))))) ==> ((\f. (!s. (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) ==> ((subspace ((IMAGE f) s)) = (subspace s))))) f)) = ((\f. (!s. (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) ==> ((subspace ((IMAGE f) s)) = (subspace s))))) f))
T c= c==> ! ! c==> c/\ clinear b0 ! ! c==> c= * b0 b2 * b0 b3 c= b2 b3 c= csubspace * * part cIMAGE b0 b1 csubspace b1 * / ! c==> c/\ clinear b0 ! ! c==> c= * b0 b2 * b0 b3 c= b2 b3 c= csubspace * * part cIMAGE b0 b1 csubspace b1 f0 * / ! c==> c/\ clinear b0 ! ! c==> c= * b0 b2 * b0 b3 c= b2 b3 c= csubspace * * part cIMAGE b0 b1 csubspace b1 f0
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!u. ((UNIONS ((IMAGE (IMAGE (IMAGE f))) u)) = ((IMAGE (IMAGE f)) (UNIONS u)))) ==> ((\u. ((UNIONS ((IMAGE (IMAGE (IMAGE f))) u)) = ((IMAGE (IMAGE f)) (UNIONS u)))) u)) = ((\u. ((UNIONS ((IMAGE (IMAGE (IMAGE f))) u)) = ((IMAGE (IMAGE f)) (UNIONS u)))) u))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! c= * part cUNIONS * * part cIMAGE * part cIMAGE * part cIMAGE f0 b0 * * part cIMAGE * part cIMAGE f0 * part cUNIONS b0 * / c= * part cUNIONS * * part cIMAGE * part cIMAGE * part cIMAGE f0 b0 * * part cIMAGE * part cIMAGE f0 * part cUNIONS b0 f1 * / c= * part cUNIONS * * part cIMAGE * part cIMAGE * part cIMAGE f0 b0 * * part cIMAGE * part cIMAGE f0 * part cUNIONS b0 f1
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!s. (!P. ((?y. ((y IN ((IMAGE f) s)) /\ (P y))) = (?x. ((x IN s) /\ (P (f x)))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= c? / c/\ cIN b2 * * part cIMAGE f0 b0 * b1 b2 c? / c/\ cIN b2 b0 * b1 * f0 b2
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((\s. (!n. ((((IMAGE (IMAGE f)) s) HAS_SIZE n) = (s HAS_SIZE n)))) s)
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 * / ! c= cHAS_SIZE * * part cIMAGE * part cIMAGE f0 b0 b1 cHAS_SIZE b0 b1 f1
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((\b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL))))) b)
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 * / c= * part cclosed_segment cCONS c, * f0 f1 * f0 b0 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, f1 b0 cNIL f2
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!P. ((?y. ((y IN ((IMAGE f) s)) /\ (P y))) = (?x. ((x IN s) /\ (P (f x)))))) ==> ((\P. ((?y. ((y IN ((IMAGE f) s)) /\ (P y))) = (?x. ((x IN s) /\ (P (f x)))))) P)) = ((\P. ((?y. ((y IN ((IMAGE f) s)) /\ (P y))) = (?x. ((x IN s) /\ (P (f x)))))) P))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! c= c? / c/\ cIN b1 * * part cIMAGE f0 f1 * b0 b1 c? / c/\ cIN b1 f1 * b0 * f0 b1 * / c= c? / c/\ cIN b1 * * part cIMAGE f0 f1 * b0 b1 c? / c/\ cIN b1 f1 * b0 * f0 b1 f2 * / c= c? / c/\ cIN b1 * * part cIMAGE f0 f1 * b0 b1 c? / c/\ cIN b1 f1 * b0 * f0 b1 f2
- |- ((!y. (?x. ((f x) = y))) ==> ((UNIV = ((IMAGE f) UNIV)) /\ (UNIV = ((IMAGE (IMAGE f)) UNIV))))
T c==> ! c? / c= * f0 b1 b0 c/\ c= part cUNIV * * part cIMAGE f0 part cUNIV c= part cUNIV * * part cIMAGE * part cIMAGE f0 part cUNIV
+ |- ((\f. ((linear f) ==> (((vec (NUMERAL _0)) = (f (vec (NUMERAL _0)))) /\ ((EMPTY = ((IMAGE f) EMPTY)) /\ (EMPTY = ((IMAGE (IMAGE f)) EMPTY)))))) f)
T * / c==> clinear b0 c/\ c= cvec cNUMERAL c_0 * b0 cvec cNUMERAL c_0 c/\ c= part cEMPTY * * part cIMAGE b0 part cEMPTY c= part cEMPTY * * part cIMAGE * part cIMAGE b0 part cEMPTY f0
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((\x. (!l. (((MEM (f x)) ((MAP f) l)) = ((MEM x) l)))) x)
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 * / ! c= cMEM * f0 b0 cMAP f0 b1 cMEM b0 b1 f1
- |- ((\f. (!s. (!t. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((((IMAGE (IMAGE f)) s) INTER ((IMAGE (IMAGE f)) t)) = ((IMAGE (IMAGE f)) (s INTER t))))))) f)
T * / ! ! c==> ! ! c==> c= * b0 b3 * b0 b4 c= b3 b4 c= * * part cINTER * * part cIMAGE * part cIMAGE b0 b1 * * part cIMAGE * part cIMAGE b0 b2 * * part cIMAGE * part cIMAGE b0 * * part cINTER b1 b2 f0
- |- ((\f. (!s. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((COUNTABLE ((IMAGE (IMAGE f)) s)) = (COUNTABLE s))))) f)
T * / ! c==> ! ! c==> c= * b0 b2 * b0 b3 c= b2 b3 c= cCOUNTABLE * * part cIMAGE * part cIMAGE b0 b1 cCOUNTABLE b1 f0
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) /\ (!s. (!P. ((?u. ((u IN ((IMAGE (IMAGE f)) s)) /\ (P u))) = (?t. ((t IN s) /\ (P ((IMAGE f) t))))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c/\ c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= c? / c/\ cIN b2 * * part cIMAGE * part cIMAGE f0 b0 * b1 b2 c? / c/\ cIN b2 b0 * b1 * * part cIMAGE f0 b2
- |- ((!s. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!n. ((((IMAGE f) s) HAS_SIZE n) = (s HAS_SIZE n))))) = ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!s. (!n. ((((IMAGE f) s) HAS_SIZE n) = (s HAS_SIZE n))))))
T c= ! c==> ! ! c==> c= * f0 b1 * f0 b2 c= b1 b2 ! c= cHAS_SIZE * * part cIMAGE f0 b0 b1 cHAS_SIZE b0 b1 c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= cHAS_SIZE * * part cIMAGE f0 b0 b1 cHAS_SIZE b0 b1
- |- (((!f. (!x. (!s. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((((IMAGE f) x) IN ((IMAGE (IMAGE f)) s)) = (x IN s)))))) ==> ((\f. (!x. (!s. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((((IMAGE f) x) IN ((IMAGE (IMAGE f)) s)) = (x IN s)))))) f)) = ((\f. (!x. (!s. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((((IMAGE f) x) IN ((IMAGE (IMAGE f)) s)) = (x IN s)))))) f))
T c= c==> ! ! ! c==> ! ! c==> c= * b0 b3 * b0 b4 c= b3 b4 c= cIN * * part cIMAGE b0 b1 * * part cIMAGE * part cIMAGE b0 b2 cIN b1 b2 * / ! ! c==> ! ! c==> c= * b0 b3 * b0 b4 c= b3 b4 c= cIN * * part cIMAGE b0 b1 * * part cIMAGE * part cIMAGE b0 b2 cIN b1 b2 f0 * / ! ! c==> ! ! c==> c= * b0 b3 * b0 b4 c= b3 b4 c= cIN * * part cIMAGE b0 b1 * * part cIMAGE * part cIMAGE b0 b2 cIN b1 b2 f0
- |- ((\f. (!s. (!t. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((((IMAGE f) s) SUBSET ((IMAGE f) t)) = (s SUBSET t)))))) f)
T * / ! ! c==> ! ! c==> c= * b0 b3 * b0 b4 c= b3 b4 c= cSUBSET * * part cIMAGE b0 b1 * * part cIMAGE b0 b2 cSUBSET b1 b2 f0
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!s. ((FINITE ((IMAGE f) s)) = (FINITE s))) ==> ((\s. ((FINITE ((IMAGE f) s)) = (FINITE s))) s)) = ((\s. ((FINITE ((IMAGE f) s)) = (FINITE s))) s))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! c= cFINITE * * part cIMAGE f0 b0 cFINITE b0 * / c= cFINITE * * part cIMAGE f0 b0 cFINITE b0 f1 * / c= cFINITE * * part cIMAGE f0 b0 cFINITE b0 f1
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((\s. ((COUNTABLE ((IMAGE f) s)) = (COUNTABLE s))) s)
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 * / c= cCOUNTABLE * * part cIMAGE f0 b0 cCOUNTABLE b0 f1
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((((IMAGE f) s) SUBSET ((IMAGE f) t)) = (s SUBSET t))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= cSUBSET * * part cIMAGE f0 f1 * * part cIMAGE f0 f2 cSUBSET f1 f2
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!k. (((IMAGE ((IMAGE f) o g)) k) = ((IMAGE (IMAGE f)) ((IMAGE g) k))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! c= * * part cIMAGE * * part co * part cIMAGE f0 f1 b0 * * part cIMAGE * part cIMAGE f0 * * part cIMAGE f1 b0
+ |- (((!f. (!a. (!b. ((linear f) ==> ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL)))))))) ==> ((\f. (!a. (!b. ((linear f) ==> ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL)))))))) f)) = ((\f. (!a. (!b. ((linear f) ==> ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL)))))))) f))
T c= c==> ! ! ! c==> clinear b0 c= * part cclosed_segment cCONS c, * b0 b1 * b0 b2 cNIL * * part cIMAGE b0 * part cclosed_segment cCONS c, b1 b2 cNIL * / ! ! c==> clinear b0 c= * part cclosed_segment cCONS c, * b0 b1 * b0 b2 cNIL * * part cIMAGE b0 * part cclosed_segment cCONS c, b1 b2 cNIL f0 * / ! ! c==> clinear b0 c= * part cclosed_segment cCONS c, * b0 b1 * b0 b2 cNIL * * part cIMAGE b0 * part cclosed_segment cCONS c, b1 b2 cNIL f0
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL)))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! c= * part cclosed_segment cCONS c, * f0 f1 * f0 b0 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, f1 b0 cNIL
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((\s. (((f x) INSERT ((IMAGE f) s)) = ((IMAGE f) (x INSERT s)))) s)
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 * / c= * * part cINSERT * f0 f1 * * part cIMAGE f0 b0 * * part cIMAGE f0 * * part cINSERT f1 b0 f2
+ |- ((linear f) ==> (((vec (NUMERAL _0)) = (f (vec (NUMERAL _0)))) /\ ((EMPTY = ((IMAGE f) EMPTY)) /\ (EMPTY = ((IMAGE (IMAGE f)) EMPTY)))))
T c==> clinear f0 c/\ c= cvec cNUMERAL c_0 * f0 cvec cNUMERAL c_0 c/\ c= part cEMPTY * * part cIMAGE f0 part cEMPTY c= part cEMPTY * * part cIMAGE * part cIMAGE f0 part cEMPTY
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!s. (((f x) INSERT ((IMAGE f) s)) = ((IMAGE f) (x INSERT s))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! c= * * part cINSERT * f0 f1 * * part cIMAGE f0 b0 * * part cIMAGE f0 * * part cINSERT f1 b0
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((linear f) ==> (!a. (!b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL))))))) = (!a. (!b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL)))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> clinear f0 ! ! c= * part cclosed_segment cCONS c, * f0 b0 * f0 b1 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, b0 b1 cNIL ! ! c= * part cclosed_segment cCONS c, * f0 b0 * f0 b1 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, b0 b1 cNIL
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!t. ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t)))) ==> ((\t. ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t)))) t)) = ((\t. ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t)))) t))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! c= * * part cDIFF * * part cIMAGE f0 f1 * * part cIMAGE f0 b0 * * part cIMAGE f0 * * part cDIFF f1 b0 * / c= * * part cDIFF * * part cIMAGE f0 f1 * * part cIMAGE f0 b0 * * part cIMAGE f0 * * part cDIFF f1 b0 f2 * / c= * * part cDIFF * * part cIMAGE f0 f1 * * part cIMAGE f0 b0 * * part cIMAGE f0 * * part cDIFF f1 b0 f2
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!s. (!t. ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t)))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= * * part cDIFF * * part cIMAGE f0 b0 * * part cIMAGE f0 b1 * * part cIMAGE f0 * * part cDIFF b0 b1
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (EMPTY = ((IMAGE f) EMPTY))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= part cEMPTY * * part cIMAGE f0 part cEMPTY
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!s. (!t. ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t))))) ==> ((\s. (!t. ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t))))) s)) = ((\s. (!t. ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t))))) s))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! ! c= * * part cDIFF * * part cIMAGE f0 b0 * * part cIMAGE f0 b1 * * part cIMAGE f0 * * part cDIFF b0 b1 * / ! c= * * part cDIFF * * part cIMAGE f0 b0 * * part cIMAGE f0 b1 * * part cIMAGE f0 * * part cDIFF b0 b1 f1 * / ! c= * * part cDIFF * * part cIMAGE f0 b0 * * part cIMAGE f0 b1 * * part cIMAGE f0 * * part cDIFF b0 b1 f1
+ |- ((\f. (!x. (!s. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (((f x) INSERT ((IMAGE f) s)) = ((IMAGE f) (x INSERT s))))))) f)
T * / ! ! c==> ! ! c==> c= * b0 b3 * b0 b3 c= b3 b3 c= * * part cINSERT * b0 b1 * * part cIMAGE b0 b2 * * part cIMAGE b0 * * part cINSERT b1 b2 f0
+ |- ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!x. (!s. (((f x) INSERT ((IMAGE f) s)) = ((IMAGE f) (x INSERT s))))))
T c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= * * part cINSERT * f0 b0 * * part cIMAGE f0 b1 * * part cIMAGE f0 * * part cINSERT b0 b1
+ |- ((!s. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!t. ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t)))))) = ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!s. (!t. ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t)))))))
T c= ! c==> ! ! c==> c= * f0 b1 * f0 b2 c= b1 b2 ! c= * * part cDIFF * * part cIMAGE f0 b0 * * part cIMAGE f0 b1 * * part cIMAGE f0 * * part cDIFF b0 b1 c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= * * part cDIFF * * part cIMAGE f0 b0 * * part cIMAGE f0 b1 * * part cIMAGE f0 * * part cDIFF b0 b1
+ |- (((!P. (!Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))))) ==> ((\P. (!Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))))) P)) = ((\P. (!Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))))) P))
T c= c==> ! ! c= ! c==> b0 * b1 b2 c==> b0 ! * b1 b2 * / ! c= ! c==> b0 * b1 b2 c==> b0 ! * b1 b2 f0 * / ! c= ! c==> b0 * b1 b2 c==> b0 ! * b1 b2 f0
+ |- (((!f. ((linear f) ==> (((vec (NUMERAL _0)) = (f (vec (NUMERAL _0)))) /\ ((EMPTY = ((IMAGE f) EMPTY)) /\ (EMPTY = ((IMAGE (IMAGE f)) EMPTY)))))) ==> ((\f. ((linear f) ==> (((vec (NUMERAL _0)) = (f (vec (NUMERAL _0)))) /\ ((EMPTY = ((IMAGE f) EMPTY)) /\ (EMPTY = ((IMAGE (IMAGE f)) EMPTY)))))) f)) = ((\f. ((linear f) ==> (((vec (NUMERAL _0)) = (f (vec (NUMERAL _0)))) /\ ((EMPTY = ((IMAGE f) EMPTY)) /\ (EMPTY = ((IMAGE (IMAGE f)) EMPTY)))))) f))
T c= c==> ! c==> clinear b0 c/\ c= cvec cNUMERAL c_0 * b0 cvec cNUMERAL c_0 c/\ c= part cEMPTY * * part cIMAGE b0 part cEMPTY c= part cEMPTY * * part cIMAGE * part cIMAGE b0 part cEMPTY * / c==> clinear b0 c/\ c= cvec cNUMERAL c_0 * b0 cvec cNUMERAL c_0 c/\ c= part cEMPTY * * part cIMAGE b0 part cEMPTY c= part cEMPTY * * part cIMAGE * part cIMAGE b0 part cEMPTY f0 * / c==> clinear b0 c/\ c= cvec cNUMERAL c_0 * b0 cvec cNUMERAL c_0 c/\ c= part cEMPTY * * part cIMAGE b0 part cEMPTY c= part cEMPTY * * part cIMAGE * part cIMAGE b0 part cEMPTY f0
+ |- ((!b. ((linear f) ==> ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL)))))) = ((linear f) ==> (!b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL)))))))
T c= ! c==> clinear f0 c= * part cclosed_segment cCONS c, * f0 f1 * f0 b0 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, f1 b0 cNIL c==> clinear f0 ! c= * part cclosed_segment cCONS c, * f0 f1 * f0 b0 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, f1 b0 cNIL
+ |- ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!s. (!t. ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t))))))
T c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= * * part cDIFF * * part cIMAGE f0 b0 * * part cIMAGE f0 b1 * * part cIMAGE f0 * * part cDIFF b0 b1
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!a. (!b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL)))))) ==> ((\a. (!b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL)))))) a)) = ((\a. (!b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL)))))) a))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! ! c= * part cclosed_segment cCONS c, * f0 b0 * f0 b1 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, b0 b1 cNIL * / ! c= * part cclosed_segment cCONS c, * f0 b0 * f0 b1 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, b0 b1 cNIL f1 * / ! c= * part cclosed_segment cCONS c, * f0 b0 * f0 b1 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, b0 b1 cNIL f1
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((\t. ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t)))) t)
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 * / c= * * part cDIFF * * part cIMAGE f0 f1 * * part cIMAGE f0 b0 * * part cIMAGE f0 * * part cDIFF f1 b0 f2
+ |- (((!a. (!b. ((open_segment (a , b)) = ((closed_segment ((CONS (a , b)) NIL)) DIFF (a INSERT (b INSERT EMPTY)))))) ==> ((\a. (!b. ((open_segment (a , b)) = ((closed_segment ((CONS (a , b)) NIL)) DIFF (a INSERT (b INSERT EMPTY)))))) a)) = ((\a. (!b. ((open_segment (a , b)) = ((closed_segment ((CONS (a , b)) NIL)) DIFF (a INSERT (b INSERT EMPTY)))))) a))
T c= c==> ! ! c= * part copen_segment c, b0 b1 * * part cDIFF * part cclosed_segment cCONS c, b0 b1 cNIL * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! c= * part copen_segment c, b0 b1 * * part cDIFF * part cclosed_segment cCONS c, b0 b1 cNIL * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 * / ! c= * part copen_segment c, b0 b1 * * part cDIFF * part cclosed_segment cCONS c, b0 b1 cNIL * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0
+ |- ((!s. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (((f x) INSERT ((IMAGE f) s)) = ((IMAGE f) (x INSERT s))))) = ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!s. (((f x) INSERT ((IMAGE f) s)) = ((IMAGE f) (x INSERT s))))))
T c= ! c==> ! ! c==> c= * f0 b1 * f0 b2 c= b1 b2 c= * * part cINSERT * f0 f1 * * part cIMAGE f0 b0 * * part cIMAGE f0 * * part cINSERT f1 b0 c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! c= * * part cINSERT * f0 f1 * * part cIMAGE f0 b0 * * part cIMAGE f0 * * part cINSERT f1 b0
+ |- ((!f. (!a. (!b. (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) ==> (((closed_segment ((CONS ((f a) , (f b))) NIL)) DIFF ((f a) INSERT ((f b) INSERT EMPTY))) = ((IMAGE f) ((closed_segment ((CONS (a , b)) NIL)) DIFF (a INSERT (b INSERT EMPTY))))))))) = (!f. (!a. (!b. (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) ==> ((open_segment ((f a) , (f b))) = ((IMAGE f) (open_segment (a , b)))))))))
T c= ! ! ! c==> c/\ clinear b0 ! ! c==> c= * b0 b3 * b0 b4 c= b3 b4 c= * * part cDIFF * part cclosed_segment cCONS c, * b0 b1 * b0 b2 cNIL * * part cINSERT * b0 b1 * * part cINSERT * b0 b2 part cEMPTY * * part cIMAGE b0 * * part cDIFF * part cclosed_segment cCONS c, b1 b2 cNIL * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! ! ! c==> c/\ clinear b0 ! ! c==> c= * b0 b3 * b0 b4 c= b3 b4 c= * part copen_segment c, * b0 b1 * b0 b2 * * part cIMAGE b0 * part copen_segment c, b1 b2
+ |- (!s. (!t. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t))))))
T c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= * * part cDIFF * * part cIMAGE f0 f1 * * part cIMAGE f0 f2 * * part cIMAGE f0 * * part cDIFF f1 f2
+ |- ((!a. (!b. (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) ==> (((closed_segment ((CONS ((f a) , (f b))) NIL)) DIFF ((f a) INSERT ((f b) INSERT EMPTY))) = ((IMAGE f) ((closed_segment ((CONS (a , b)) NIL)) DIFF (a INSERT (b INSERT EMPTY)))))))) = T)
T c= ! ! c==> c/\ clinear f0 ! ! c==> c= * f0 b2 * f0 b3 c= b2 b3 c= * * part cDIFF * part cclosed_segment cCONS c, * f0 b0 * f0 b1 cNIL * * part cINSERT * f0 b0 * * part cINSERT * f0 b1 part cEMPTY * * part cIMAGE f0 * * part cDIFF * part cclosed_segment cCONS c, b0 b1 cNIL * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cT
+ |- ((\b. ((open_segment (a , b)) = ((closed_segment ((CONS (a , b)) NIL)) DIFF (a INSERT (b INSERT EMPTY))))) b)
T * / c= * part copen_segment c, f0 b0 * * part cDIFF * part cclosed_segment cCONS c, f0 b0 cNIL * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
+ |- ((\f. (!s. (!t. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t))))))) f)
T * / ! ! c==> ! ! c==> c= * b0 b3 * b0 b4 c= b3 b4 c= * * part cDIFF * * part cIMAGE b0 b1 * * part cIMAGE b0 b2 * * part cIMAGE b0 * * part cDIFF b1 b2 f0
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= * part cclosed_segment cCONS c, * f0 f1 * f0 f2 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, f1 f2 cNIL
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((\x. (!s. (((f x) INSERT ((IMAGE f) s)) = ((IMAGE f) (x INSERT s))))) x)
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 * / ! c= * * part cINSERT * f0 b0 * * part cIMAGE f0 b1 * * part cIMAGE f0 * * part cINSERT b0 b1 f1
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL))))) ==> ((\b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL))))) b)) = ((\b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL))))) b))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! c= * part cclosed_segment cCONS c, * f0 f1 * f0 b0 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, f1 b0 cNIL * / c= * part cclosed_segment cCONS c, * f0 f1 * f0 b0 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, f1 b0 cNIL f2 * / c= * part cclosed_segment cCONS c, * f0 f1 * f0 b0 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, f1 b0 cNIL f2
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((EMPTY = ((IMAGE f) EMPTY)) /\ (EMPTY = ((IMAGE (IMAGE f)) EMPTY)))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c/\ c= part cEMPTY * * part cIMAGE f0 part cEMPTY c= part cEMPTY * * part cIMAGE * part cIMAGE f0 part cEMPTY
+ |- (((!f. (!s. (!t. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t))))))) ==> ((\f. (!s. (!t. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t))))))) f)) = ((\f. (!s. (!t. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t))))))) f))
T c= c==> ! ! ! c==> ! ! c==> c= * b0 b3 * b0 b4 c= b3 b4 c= * * part cDIFF * * part cIMAGE b0 b1 * * part cIMAGE b0 b2 * * part cIMAGE b0 * * part cDIFF b1 b2 * / ! ! c==> ! ! c==> c= * b0 b3 * b0 b4 c= b3 b4 c= * * part cDIFF * * part cIMAGE b0 b1 * * part cIMAGE b0 b2 * * part cIMAGE b0 * * part cDIFF b1 b2 f0 * / ! ! c==> ! ! c==> c= * b0 b3 * b0 b4 c= b3 b4 c= * * part cDIFF * * part cIMAGE b0 b1 * * part cIMAGE b0 b2 * * part cIMAGE b0 * * part cDIFF b1 b2 f0
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) /\ (((closed_segment ((CONS ((f a) , (f b))) NIL)) DIFF ((f a) INSERT ((f b) INSERT EMPTY))) = ((IMAGE f) ((closed_segment ((CONS (a , b)) NIL)) DIFF (a INSERT (b INSERT EMPTY))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c/\ c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= * * part cDIFF * part cclosed_segment cCONS c, * f0 f1 * f0 f2 cNIL * * part cINSERT * f0 f1 * * part cINSERT * f0 f2 part cEMPTY * * part cIMAGE f0 * * part cDIFF * part cclosed_segment cCONS c, f1 f2 cNIL * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((\f. (!a. (!b. ((linear f) ==> ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL)))))))) f)
T * / ! ! c==> clinear b0 c= * part cclosed_segment cCONS c, * b0 b1 * b0 b2 cNIL * * part cIMAGE b0 * part cclosed_segment cCONS c, b1 b2 cNIL f0
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((\a. (!b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL)))))) a)
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 * / ! c= * part cclosed_segment cCONS c, * f0 b0 * f0 b1 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, b0 b1 cNIL f1
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((vec (NUMERAL _0)) = (f (vec (NUMERAL _0)))) /\ ((EMPTY = ((IMAGE f) EMPTY)) /\ (EMPTY = ((IMAGE (IMAGE f)) EMPTY))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c/\ c= cvec cNUMERAL c_0 * f0 cvec cNUMERAL c_0 c/\ c= part cEMPTY * * part cIMAGE f0 part cEMPTY c= part cEMPTY * * part cIMAGE * part cIMAGE f0 part cEMPTY
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!s. (((f x) INSERT ((IMAGE f) s)) = ((IMAGE f) (x INSERT s)))) ==> ((\s. (((f x) INSERT ((IMAGE f) s)) = ((IMAGE f) (x INSERT s)))) s)) = ((\s. (((f x) INSERT ((IMAGE f) s)) = ((IMAGE f) (x INSERT s)))) s))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! c= * * part cINSERT * f0 f1 * * part cIMAGE f0 b0 * * part cIMAGE f0 * * part cINSERT f1 b0 * / c= * * part cINSERT * f0 f1 * * part cIMAGE f0 b0 * * part cIMAGE f0 * * part cINSERT f1 b0 f2 * / c= * * part cINSERT * f0 f1 * * part cIMAGE f0 b0 * * part cIMAGE f0 * * part cINSERT f1 b0 f2
+ |- ((\a. (!b. ((open_segment (a , b)) = ((closed_segment ((CONS (a , b)) NIL)) DIFF (a INSERT (b INSERT EMPTY)))))) a)
T * / ! c= * part copen_segment c, b0 b1 * * part cDIFF * part cclosed_segment cCONS c, b0 b1 cNIL * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((\s. (!t. ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t))))) s)
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 * / ! c= * * part cDIFF * * part cIMAGE f0 b0 * * part cIMAGE f0 b1 * * part cIMAGE f0 * * part cDIFF b0 b1 f1
+ |- (((!b. ((open_segment (a , b)) = ((closed_segment ((CONS (a , b)) NIL)) DIFF (a INSERT (b INSERT EMPTY))))) ==> ((\b. ((open_segment (a , b)) = ((closed_segment ((CONS (a , b)) NIL)) DIFF (a INSERT (b INSERT EMPTY))))) b)) = ((\b. ((open_segment (a , b)) = ((closed_segment ((CONS (a , b)) NIL)) DIFF (a INSERT (b INSERT EMPTY))))) b))
T c= c==> ! c= * part copen_segment c, f0 b0 * * part cDIFF * part cclosed_segment cCONS c, f0 b0 cNIL * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * / c= * part copen_segment c, f0 b0 * * part cDIFF * part cclosed_segment cCONS c, f0 b0 cNIL * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1 * / c= * part copen_segment c, f0 b0 * * part cDIFF * part cclosed_segment cCONS c, f0 b0 cNIL * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
+ |- ((!b. (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) ==> (((closed_segment ((CONS ((f a) , (f b))) NIL)) DIFF ((f a) INSERT ((f b) INSERT EMPTY))) = ((IMAGE f) ((closed_segment ((CONS (a , b)) NIL)) DIFF (a INSERT (b INSERT EMPTY))))))) = T)
T c= ! c==> c/\ clinear f0 ! ! c==> c= * f0 b1 * f0 b2 c= b1 b2 c= * * part cDIFF * part cclosed_segment cCONS c, * f0 f1 * f0 b0 cNIL * * part cINSERT * f0 f1 * * part cINSERT * f0 b0 part cEMPTY * * part cIMAGE f0 * * part cDIFF * part cclosed_segment cCONS c, f1 b0 cNIL * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cT
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((((closed_segment ((CONS ((f a) , (f b))) NIL)) DIFF ((f a) INSERT ((f b) INSERT ((IMAGE f) EMPTY)))) = ((IMAGE f) ((closed_segment ((CONS (a , b)) NIL)) DIFF (a INSERT (b INSERT EMPTY))))) = (((closed_segment ((CONS ((f a) , (f b))) NIL)) DIFF ((f a) INSERT ((f b) INSERT EMPTY))) = ((IMAGE f) ((closed_segment ((CONS (a , b)) NIL)) DIFF (a INSERT (b INSERT EMPTY))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c= * * part cDIFF * part cclosed_segment cCONS c, * f0 f1 * f0 f2 cNIL * * part cINSERT * f0 f1 * * part cINSERT * f0 f2 * * part cIMAGE f0 part cEMPTY * * part cIMAGE f0 * * part cDIFF * part cclosed_segment cCONS c, f1 f2 cNIL * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part cDIFF * part cclosed_segment cCONS c, * f0 f1 * f0 f2 cNIL * * part cINSERT * f0 f1 * * part cINSERT * f0 f2 part cEMPTY * * part cIMAGE f0 * * part cDIFF * part cclosed_segment cCONS c, f1 f2 cNIL * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((!a. ((linear f) ==> (!b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL))))))) = ((linear f) ==> (!a. (!b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL))))))))
T c= ! c==> clinear f0 ! c= * part cclosed_segment cCONS c, * f0 b0 * f0 b1 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, b0 b1 cNIL c==> clinear f0 ! ! c= * part cclosed_segment cCONS c, * f0 b0 * f0 b1 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, b0 b1 cNIL
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t)))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= * * part cDIFF * * part cIMAGE f0 f1 * * part cIMAGE f0 f2 * * part cIMAGE f0 * * part cDIFF f1 f2
+ |- (!x. (!s. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (((f x) INSERT ((IMAGE f) s)) = ((IMAGE f) (x INSERT s))))))
T c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= * * part cINSERT * f0 f1 * * part cIMAGE f0 f2 * * part cIMAGE f0 * * part cINSERT f1 f2
+ |- ((((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) ==> (((closed_segment ((CONS ((f a) , (f b))) NIL)) DIFF ((f a) INSERT ((f b) INSERT EMPTY))) = ((IMAGE f) ((closed_segment ((CONS (a , b)) NIL)) DIFF (a INSERT (b INSERT EMPTY)))))) = T)
T c= c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= * * part cDIFF * part cclosed_segment cCONS c, * f0 f1 * f0 f2 cNIL * * part cINSERT * f0 f1 * * part cINSERT * f0 f2 part cEMPTY * * part cIMAGE f0 * * part cDIFF * part cclosed_segment cCONS c, f1 f2 cNIL * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!x. (!s. (((f x) INSERT ((IMAGE f) s)) = ((IMAGE f) (x INSERT s))))) ==> ((\x. (!s. (((f x) INSERT ((IMAGE f) s)) = ((IMAGE f) (x INSERT s))))) x)) = ((\x. (!s. (((f x) INSERT ((IMAGE f) s)) = ((IMAGE f) (x INSERT s))))) x))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! ! c= * * part cINSERT * f0 b0 * * part cIMAGE f0 b1 * * part cIMAGE f0 * * part cINSERT b0 b1 * / ! c= * * part cINSERT * f0 b0 * * part cIMAGE f0 b1 * * part cIMAGE f0 * * part cINSERT b0 b1 f1 * / ! c= * * part cINSERT * f0 b0 * * part cIMAGE f0 b1 * * part cIMAGE f0 * * part cINSERT b0 b1 f1
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!x. (!s. (((f x) INSERT ((IMAGE f) s)) = ((IMAGE f) (x INSERT s)))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= * * part cINSERT * f0 b0 * * part cIMAGE f0 b1 * * part cIMAGE f0 * * part cINSERT b0 b1
+ |- (((!Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))) ==> ((\Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))) Q)) = ((\Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))) Q))
T c= c==> ! c= ! c==> f0 * b0 b1 c==> f0 ! * b0 b1 * / c= ! c==> f0 * b0 b1 c==> f0 ! * b0 b1 f1 * / c= ! c==> f0 * b0 b1 c==> f0 ! * b0 b1 f1
+ |- ((\Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))) Q)
T * / c= ! c==> f0 * b0 b1 c==> f0 ! * b0 b1 f1
+ |- ((\P. (!Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))))) P)
T * / ! c= ! c==> b0 * b1 b2 c==> b0 ! * b1 b2 f0
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((f x) INSERT ((IMAGE f) s)) = ((IMAGE f) (x INSERT s)))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= * * part cINSERT * f0 f1 * * part cIMAGE f0 f2 * * part cIMAGE f0 * * part cINSERT f1 f2
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!t. ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! c= * * part cDIFF * * part cIMAGE f0 f1 * * part cIMAGE f0 b0 * * part cIMAGE f0 * * part cDIFF f1 b0
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!a. (!b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= * part cclosed_segment cCONS c, * f0 b0 * f0 b1 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, b0 b1 cNIL
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((linear f) ==> (((vec (NUMERAL _0)) = (f (vec (NUMERAL _0)))) /\ ((EMPTY = ((IMAGE f) EMPTY)) /\ (EMPTY = ((IMAGE (IMAGE f)) EMPTY))))) = (((vec (NUMERAL _0)) = (f (vec (NUMERAL _0)))) /\ ((EMPTY = ((IMAGE f) EMPTY)) /\ (EMPTY = ((IMAGE (IMAGE f)) EMPTY)))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> clinear f0 c/\ c= cvec cNUMERAL c_0 * f0 cvec cNUMERAL c_0 c/\ c= part cEMPTY * * part cIMAGE f0 part cEMPTY c= part cEMPTY * * part cIMAGE * part cIMAGE f0 part cEMPTY c/\ c= cvec cNUMERAL c_0 * f0 cvec cNUMERAL c_0 c/\ c= part cEMPTY * * part cIMAGE f0 part cEMPTY c= part cEMPTY * * part cIMAGE * part cIMAGE f0 part cEMPTY
+ |- ((linear f) ==> (!a. (!b. ((closed_segment ((CONS ((f a) , (f b))) NIL)) = ((IMAGE f) (closed_segment ((CONS (a , b)) NIL)))))))
T c==> clinear f0 ! ! c= * part cclosed_segment cCONS c, * f0 b0 * f0 b1 cNIL * * part cIMAGE f0 * part cclosed_segment cCONS c, b0 b1 cNIL
+ |- (!f. (!a. (!b. (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) ==> (((closed_segment ((CONS ((f a) , (f b))) NIL)) DIFF ((f a) INSERT ((f b) INSERT EMPTY))) = ((IMAGE f) ((closed_segment ((CONS (a , b)) NIL)) DIFF (a INSERT (b INSERT EMPTY)))))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= * * part cDIFF * part cclosed_segment cCONS c, * f0 f1 * f0 f2 cNIL * * part cINSERT * f0 f1 * * part cINSERT * f0 f2 part cEMPTY * * part cIMAGE f0 * * part cDIFF * part cclosed_segment cCONS c, f1 f2 cNIL * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!x. (!s. (((f x) INSERT ((IMAGE f) s)) = ((IMAGE f) (x INSERT s)))))) = (!x. (!s. (((f x) INSERT ((IMAGE f) s)) = ((IMAGE f) (x INSERT s))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= * * part cINSERT * f0 b0 * * part cIMAGE f0 b1 * * part cIMAGE f0 * * part cINSERT b0 b1 ! ! c= * * part cINSERT * f0 b0 * * part cIMAGE f0 b1 * * part cIMAGE f0 * * part cINSERT b0 b1
+ |- (((!f. (!x. (!s. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (((f x) INSERT ((IMAGE f) s)) = ((IMAGE f) (x INSERT s))))))) ==> ((\f. (!x. (!s. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (((f x) INSERT ((IMAGE f) s)) = ((IMAGE f) (x INSERT s))))))) f)) = ((\f. (!x. (!s. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (((f x) INSERT ((IMAGE f) s)) = ((IMAGE f) (x INSERT s))))))) f))
T c= c==> ! ! ! c==> ! ! c==> c= * b0 b3 * b0 b3 c= b3 b3 c= * * part cINSERT * b0 b1 * * part cIMAGE b0 b2 * * part cIMAGE b0 * * part cINSERT b1 b2 * / ! ! c==> ! ! c==> c= * b0 b3 * b0 b3 c= b3 b3 c= * * part cINSERT * b0 b1 * * part cIMAGE b0 b2 * * part cIMAGE b0 * * part cINSERT b1 b2 f0 * / ! ! c==> ! ! c==> c= * b0 b3 * b0 b3 c= b3 b3 c= * * part cINSERT * b0 b1 * * part cIMAGE b0 b2 * * part cIMAGE b0 * * part cINSERT b1 b2 f0
