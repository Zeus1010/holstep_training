N List_hypermap.f_list_ext_inverse_works
C |- (!L. ((uniq (list_of_darts L)) ==> ((((f_list_ext L) o (inverse (f_list_ext L))) = I) /\ (((inverse (f_list_ext L)) o (f_list_ext L)) = I))))
T c==> cuniq clist_of_darts f0 c/\ c= * * part co * part cf_list_ext f0 * part cinverse * part cf_list_ext f0 part cI c= * * part co * part cinverse * part cf_list_ext f0 * part cf_list_ext f0 part cI
D PERMUTES_INVERSES_o
A |- (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I)))))
T c==> cpermutes f0 f1 c/\ c= * * part co f0 * part cinverse f0 part cI c= * * part co * part cinverse f0 f0 part cI
D List_hypermap.f_list_ext_permutes_darts
A |- (!L. ((uniq (list_of_darts L)) ==> ((permutes (f_list_ext L)) (darts_of_list L))))
T c==> cuniq clist_of_darts f0 cpermutes * part cf_list_ext f0 * part cdarts_of_list f0
+ |- (((uniq (list_of_darts L)) ==> ((((f_list_ext L) o (inverse (f_list_ext L))) = I) /\ (((inverse (f_list_ext L)) o (f_list_ext L)) = I))) = T)
T c= c==> cuniq clist_of_darts f0 c/\ c= * * part co * part cf_list_ext f0 * part cinverse * part cf_list_ext f0 part cI c= * * part co * part cinverse * part cf_list_ext f0 * part cf_list_ext f0 part cI cT
+ (uniq (list_of_darts L)) |- ((uniq (list_of_darts L)) /\ ((((f_list_ext L) o (inverse (f_list_ext L))) = I) /\ (((inverse (f_list_ext L)) o (f_list_ext L)) = I)))
T c==> cuniq clist_of_darts f0 c/\ cuniq clist_of_darts f0 c/\ c= * * part co * part cf_list_ext f0 * part cinverse * part cf_list_ext f0 part cI c= * * part co * part cinverse * part cf_list_ext f0 * part cf_list_ext f0 part cI
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (uniq (list_of_darts L)) |- ((((((f_list_ext L) o (inverse (f_list_ext L))) = I) /\ (((inverse (f_list_ext L)) o (f_list_ext L)) = I)) ==> ((((f_list_ext L) o (inverse (f_list_ext L))) = I) /\ (((inverse (f_list_ext L)) o (f_list_ext L)) = I))) = ((((f_list_ext L) o (inverse (f_list_ext L))) = I) /\ (((inverse (f_list_ext L)) o (f_list_ext L)) = I)))
T c==> cuniq clist_of_darts f0 c= c==> c/\ c= * * part co * part cf_list_ext f0 * part cinverse * part cf_list_ext f0 part cI c= * * part co * part cinverse * part cf_list_ext f0 * part cf_list_ext f0 part cI c/\ c= * * part co * part cf_list_ext f0 * part cinverse * part cf_list_ext f0 part cI c= * * part co * part cinverse * part cf_list_ext f0 * part cf_list_ext f0 part cI c/\ c= * * part co * part cf_list_ext f0 * part cinverse * part cf_list_ext f0 part cI c= * * part co * part cinverse * part cf_list_ext f0 * part cf_list_ext f0 part cI
- |- (((((f_list_ext L) o (inverse (f_list_ext L))) = I) /\ (((inverse (f_list_ext L)) o (f_list_ext L)) = I)) ==> ((((f_list_ext L) o (inverse (f_list_ext L))) = I) /\ (((inverse (f_list_ext L)) o (f_list_ext L)) = I)))
T c==> c/\ c= * * part co * part cf_list_ext f0 * part cinverse * part cf_list_ext f0 part cI c= * * part co * part cinverse * part cf_list_ext f0 * part cf_list_ext f0 part cI c/\ c= * * part co * part cf_list_ext f0 * part cinverse * part cf_list_ext f0 part cI c= * * part co * part cinverse * part cf_list_ext f0 * part cf_list_ext f0 part cI
- |- (T = (((((f_list_ext L) o (inverse (f_list_ext L))) = I) /\ (((inverse (f_list_ext L)) o (f_list_ext L)) = I)) ==> ((((f_list_ext L) o (inverse (f_list_ext L))) = I) /\ (((inverse (f_list_ext L)) o (f_list_ext L)) = I))))
T c= cT c==> c/\ c= * * part co * part cf_list_ext f0 * part cinverse * part cf_list_ext f0 part cI c= * * part co * part cinverse * part cf_list_ext f0 * part cf_list_ext f0 part cI c/\ c= * * part co * part cf_list_ext f0 * part cinverse * part cf_list_ext f0 part cI c= * * part co * part cinverse * part cf_list_ext f0 * part cf_list_ext f0 part cI
+ |- ((\p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) p)
T * / ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI f0
+ (uniq (list_of_darts L)) |- ((((permutes (f_list_ext L)) (darts_of_list L)) ==> ((((f_list_ext L) o (inverse (f_list_ext L))) = I) /\ (((inverse (f_list_ext L)) o (f_list_ext L)) = I))) = ((((f_list_ext L) o (inverse (f_list_ext L))) = I) /\ (((inverse (f_list_ext L)) o (f_list_ext L)) = I)))
T c==> cuniq clist_of_darts f0 c= c==> cpermutes * part cf_list_ext f0 * part cdarts_of_list f0 c/\ c= * * part co * part cf_list_ext f0 * part cinverse * part cf_list_ext f0 part cI c= * * part co * part cinverse * part cf_list_ext f0 * part cf_list_ext f0 part cI c/\ c= * * part co * part cf_list_ext f0 * part cinverse * part cf_list_ext f0 part cI c= * * part co * part cinverse * part cf_list_ext f0 * part cf_list_ext f0 part cI
+ |- (((!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I)))) ==> ((\s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I)))) s)) = ((\s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I)))) s))
T c= c==> ! c==> cpermutes f0 b0 c/\ c= * * part co f0 * part cinverse f0 part cI c= * * part co * part cinverse f0 f0 part cI * / c==> cpermutes f0 b0 c/\ c= * * part co f0 * part cinverse f0 part cI c= * * part co * part cinverse f0 f0 part cI f1 * / c==> cpermutes f0 b0 c/\ c= * * part co f0 * part cinverse f0 part cI c= * * part co * part cinverse f0 f0 part cI f1
- (uniq (list_of_darts L)) |- ((uniq (list_of_darts L)) = T)
T c==> cuniq clist_of_darts f0 c= cuniq clist_of_darts f0 cT
