N Aq12.one_step_last_y_e_list
C |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (((one_step_list L) (e_list lp)) ((next_el r) lp)))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cl'y f0 f2 f3 f4 c/\ c~ cfinal_list f0 f2 c/\ cMEM f5 cparts f0 f2 c/\ cMEM f4 f5 c= cLAST f5 f6 cone_step_list f0 ce_list f6 cnext_el f2 f6
D FST
A |- (!x. (!y. ((FST (x , y)) = x)))
T c= cFST c, f0 f1 f0
D SND
A |- (!x. (!y. ((SND (x , y)) = y)))
T c= cSND c, f0 f1 f1
D PAIR
A |- (!x. (((FST x) , (SND x)) = x))
T c= c, cFST f0 cSND f0 f0
D Hypermap.is_restricted
A |- (!H. ((is_restricted H) = ((~ ((dart H) = EMPTY)) /\ ((planar_hypermap H) /\ ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x)))))))))))))))
T c= cis_restricted f0 c/\ c~ c= * part cdart f0 part cEMPTY c/\ cplanar_hypermap f0 c/\ cplain_hypermap f0 c/\ cconnected_hypermap f0 c/\ csimple_hypermap f0 c/\ cis_no_double_joins f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0
D Seq.allP
A |- (!a. (!s. ((!x. (((MEM x) s) ==> (a x))) = ((all a) s))))
T c= ! c==> cMEM b0 f0 * f1 b0 call f1 f0
D List_hypermap.e_list
A |- (!d. ((e_list d) = ((SND d) , (FST d))))
T c= ce_list f0 c, cSND f0 cFST f0
D Tame_defs2.one_step_list
A |- (!y. (!L. (!x. ((((one_step_list L) x) y) = ((y = ((f_list L) x)) \/ (y = ((f_list L) (e_list x))))))))
T c= cone_step_list f0 f1 f2 c\/ c= f2 cf_list f0 f1 c= f2 cf_list f0 ce_list f1
D Tame_defs2.loop_list
A |- (!L. (!s. (((loop_list L) s) = ((all (\x. (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el s) x))))) s))))
T c= cloop_list f0 f1 call / c/\ cMEM b0 clist_of_darts f0 cone_step_list f0 b0 cnext_el f1 b0 f1
D Tame_defs2.normal_list
A |- (!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))))))
T c= cnormal_list f0 f1 c/\ cuniq cflatten f1 c/\ call / c~ c= b0 cNIL f1 c/\ call * part cf_last f0 f1 c/\ call * part cloop_list f0 f1 ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1
D Tame_defs2.marked_list
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))))
T c= cmarked_list f0 f1 f2 f3 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3
D Tame_list.MEM_LAST
A |- (!s. ((~ (s = NIL)) ==> ((MEM (LAST s)) s)))
T c==> c~ c= f0 cNIL cMEM cLAST f0 f0
D Tame_list.uniq_flatten_uniq
A |- (!L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s))))
T c==> c/\ cuniq cflatten f0 cMEM f1 f0 cuniq f1
D Tame_list.normal_list_parts_next_last_not
A |- (!L. (!N. (!r. (((good_list L) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (is_edge_nondegenerate (hypermap_of_list L)))))) ==> (~ (((next_el r) (LAST p)) = ((f_list L) (e_list (LAST p)))))))))
T c==> c/\ cgood_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 cis_edge_nondegenerate chypermap_of_list f0 c~ c= cnext_el f2 cLAST f3 cf_list f0 ce_list cLAST f3
D Dangeyj.mem_imp_not_nil
A |- (!s. (!x. (((MEM x) s) ==> (~ (s = NIL)))))
T c==> cMEM f0 f1 c~ c= f1 cNIL
D Aq8.MEM_PARTS_IMP
A |- (((uniq r) /\ ((~ (r = NIL)) /\ ((MEM p) ((parts L) r)))) ==> (!a. (((MEM a) p) ==> ((MEM a) r))))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL cMEM f1 cparts f2 f0 ! c==> cMEM b0 f1 cMEM b0 f0
+ (~ (r = NIL)), (uniq r), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (loop_list L)) N) |- ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((~ (((next_el r) lp) = ((f_list L) (e_list lp)))) ==> (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))))))))))
T c==> c~ c= f0 cNIL c==> cuniq f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f4 f0 c==> cMEM f0 f5 c==> call * part cloop_list f4 f5 c==> cplanar_hypermap chypermap_of_list f4 c==> cplain_hypermap chypermap_of_list f4 c==> cconnected_hypermap chypermap_of_list f4 c==> csimple_hypermap chypermap_of_list f4 c==> cis_no_double_joins chypermap_of_list f4 c==> cis_edge_nondegenerate chypermap_of_list f4 c==> cis_node_nondegenerate chypermap_of_list f4 c==> ! c==> cIN b0 * part cdart chypermap_of_list f4 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f4 b0 c==> c~ c= cnext_el f0 f2 cf_list f4 ce_list f2 c= cnext_el f0 f2 cf_list f4 ce_list ce_list f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (loop_list L)) N), ((normal_list L) N) |- ((uniq r) /\ ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cgood_list f1 c==> c= cLAST f3 f4 c==> cMEM f5 f3 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cloop_list f1 f0 c==> cnormal_list f1 f0 c/\ cuniq f2 c\/ c= cnext_el f2 f4 cf_list f1 ce_list f4 c= cnext_el f2 f4 cf_list f1 ce_list ce_list f4
+ (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (good_list L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))))))
T c==> c~ c= f0 cNIL c==> cis_restricted chypermap_of_list f1 c==> cgood_list f1 c==> c= cLAST f2 f3 c==> cMEM f4 f2 c==> cMEM f2 cparts f1 f0 c==> cMEM f0 f5 c==> cnormal_list f1 f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f1 f5 c==> call * part cloop_list f1 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f5 c==> cuniq f0 c\/ c= cnext_el f0 f3 cf_list f1 ce_list f3 c= cnext_el f0 f3 cf_list f1 ce_list ce_list f3
+ |- (((!x. (((MEM x) N) ==> (!x. (((MEM x) x) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el x) x))))))) ==> (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))) = (((all (loop_list L)) N) ==> (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))
T c= c==> ! c==> cMEM b0 f0 ! c==> cMEM b1 b0 c/\ cMEM b1 clist_of_darts f1 cone_step_list f1 b1 cnext_el b0 b1 c= cnext_el f2 f3 cf_list f1 ce_list ce_list f3 c==> call * part cloop_list f1 f0 c= cnext_el f2 f3 cf_list f1 ce_list ce_list f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ (r = NIL)), (uniq r), (good_list L), ((LAST p) = lp), ((~ ((dart (hypermap_of_list L)) = EMPTY)) /\ ((planar_hypermap (hypermap_of_list L)) /\ ((plain_hypermap (hypermap_of_list L)) /\ ((connected_hypermap (hypermap_of_list L)) /\ ((simple_hypermap (hypermap_of_list L)) /\ ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))))))))))), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (loop_list L)) N), ((normal_list L) N) |- (((~ ((dart (hypermap_of_list L)) = EMPTY)) /\ ((planar_hypermap (hypermap_of_list L)) /\ ((plain_hypermap (hypermap_of_list L)) /\ ((connected_hypermap (hypermap_of_list L)) /\ ((simple_hypermap (hypermap_of_list L)) /\ ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))))))))))) /\ ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ c= f2 cNIL c==> cuniq f2 c==> cgood_list f1 c==> c= cLAST f3 f4 c==> c/\ c~ c= * part cdart chypermap_of_list f1 part cEMPTY c/\ cplanar_hypermap chypermap_of_list f1 c/\ cplain_hypermap chypermap_of_list f1 c/\ cconnected_hypermap chypermap_of_list f1 c/\ csimple_hypermap chypermap_of_list f1 c/\ cis_no_double_joins chypermap_of_list f1 c/\ cis_edge_nondegenerate chypermap_of_list f1 c/\ cis_node_nondegenerate chypermap_of_list f1 ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> cMEM f5 f3 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cloop_list f1 f0 c==> cnormal_list f1 f0 c/\ c/\ c~ c= * part cdart chypermap_of_list f1 part cEMPTY c/\ cplanar_hypermap chypermap_of_list f1 c/\ cplain_hypermap chypermap_of_list f1 c/\ cconnected_hypermap chypermap_of_list f1 c/\ csimple_hypermap chypermap_of_list f1 c/\ cis_no_double_joins chypermap_of_list f1 c/\ cis_edge_nondegenerate chypermap_of_list f1 c/\ cis_node_nondegenerate chypermap_of_list f1 ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c\/ c= cnext_el f2 f4 cf_list f1 ce_list f4 c= cnext_el f2 f4 cf_list f1 ce_list ce_list f4
+ |- (((!d. ((e_list d) = ((SND d) , (FST d)))) ==> ((\d. ((e_list d) = ((SND d) , (FST d)))) d)) = ((\d. ((e_list d) = ((SND d) , (FST d)))) d))
T c= c==> ! c= ce_list b0 c, cSND b0 cFST b0 * / c= ce_list b0 c, cSND b0 cFST b0 f0 * / c= ce_list b0 c, cSND b0 cFST b0 f0
+ (~ (((next_el r) lp) = ((f_list L) (e_list lp)))), (~ (r = NIL)), (uniq r), ((MEM lp) p), ((MEM p) ((parts L) r)), ((MEM r) N) |- ((((uniq r) /\ ((~ (r = NIL)) /\ ((MEM p) ((parts L) r)))) ==> (!a. (((MEM a) p) ==> ((MEM a) r)))) ==> ((!x. (((MEM x) N) ==> (!x. (((MEM x) x) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el x) x))))))) ==> (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))
T c==> c~ c= cnext_el f0 f1 cf_list f2 ce_list f1 c==> c~ c= f0 cNIL c==> cuniq f0 c==> cMEM f1 f3 c==> cMEM f3 cparts f2 f0 c==> cMEM f0 f4 c==> c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL cMEM f3 cparts f2 f0 ! c==> cMEM b0 f3 cMEM b0 f0 c==> ! c==> cMEM b0 f4 ! c==> cMEM b1 b0 c/\ cMEM b1 clist_of_darts f2 cone_step_list f2 b1 cnext_el b0 b1 c= cnext_el f0 f1 cf_list f2 ce_list ce_list f1
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ |- (((all a) s) = (!x. (((MEM x) s) ==> (a x))))
T c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((uniq r) /\ ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> c= cLAST f3 f4 c==> c= cnext_el f2 f5 cf_list f1 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f6 f3 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f5 c/\ cuniq f2 c\/ c= cnext_el f2 f4 cf_list f1 ce_list f4 c= cnext_el f2 f4 cf_list f1 ce_list ce_list f4
+ (good_list L), (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))), ((((marked_list L) N) r) x) |- ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))
T c==> cgood_list f0 c==> c/\ cmarked_list f0 f1 f2 f3 c/\ c= cl'y f0 f2 f3 f4 c/\ c~ cfinal_list f0 f2 c/\ cMEM f5 cparts f0 f2 c/\ cMEM f4 f5 c= cLAST f5 f6 c==> cmarked_list f0 f1 f2 f3 c\/ c= cnext_el f2 f6 cf_list f0 ce_list f6 c= cnext_el f2 f6 cf_list f0 ce_list ce_list f6
+ |- ((((MEM lp) (list_of_darts L)) /\ (((next_el r) lp) = ((f_list L) lp))) ==> (((next_el r) lp) = ((f_list L) lp)))
T c==> c/\ cMEM f0 clist_of_darts f1 c= cnext_el f2 f0 cf_list f1 f0 c= cnext_el f2 f0 cf_list f1 f0
- (~ (p = NIL)) |- ((NIL = p) = F)
T c==> c~ c= f0 cNIL c= c= cNIL f0 cF
+ (~ ((final_list L) r)) |- ((((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))))) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))) = (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))))
T c==> c~ cfinal_list f0 f1 c= c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cs_flag_list f0 f2 f1 f3 c\/ c= cnext_el f1 f4 cf_list f0 ce_list f4 c= cnext_el f1 f4 cf_list f0 ce_list ce_list f4 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c/\ c==> cfinal_list f0 f1 cflag_list f0 f2 c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 c\/ c= cnext_el f1 f4 cf_list f0 ce_list f4 c= cnext_el f1 f4 cf_list f0 ce_list ce_list f4
+ (((all a) s) = (!x. (((MEM x) s) ==> (a x)))) |- ((!x. (((MEM x) s) ==> (a x))) = ((all a) s))
T c==> c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0 c= ! c==> cMEM b0 f1 * f0 b0 call f0 f1
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L))
T c= c==> ! ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0
- ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (uniq r), (good_list L), ((LAST p) = lp), ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x)))))), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (loop_list L)) N), ((normal_list L) N) |- ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cuniq f2 c==> cgood_list f1 c==> c= cLAST f3 f4 c==> c/\ cis_node_nondegenerate chypermap_of_list f1 ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> cMEM f5 f3 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cloop_list f1 f0 c==> cnormal_list f1 f0 c\/ c= cnext_el f2 f4 cf_list f1 ce_list f4 c= cnext_el f2 f4 cf_list f1 ce_list ce_list f4
+ (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))
T c==> c~ c= f0 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f2 c==> cgood_list f1 c==> c= cLAST f3 f4 c==> c= cnext_el f0 f5 cf_list f1 f5 c==> c/\ call * part cf_last f1 f2 c/\ call * part cloop_list f1 f2 ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f2 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f2 c==> cMEM f5 f0 c==> cMEM f6 f3 c==> cMEM f3 cparts f1 f0 c==> cMEM f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f1 f2 c==> cs_flag_list f1 f2 f0 f5 c\/ c= cnext_el f0 f4 cf_list f1 ce_list f4 c= cnext_el f0 f4 cf_list f1 ce_list ce_list f4
+ (~ (r = NIL)), (planar_hypermap (hypermap_of_list L)), (uniq r), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (loop_list L)) N) |- ((planar_hypermap (hypermap_of_list L)) /\ ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((~ (((next_el r) lp) = ((f_list L) (e_list lp)))) ==> (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))))))))))
T c==> c~ c= f0 cNIL c==> cplanar_hypermap chypermap_of_list f1 c==> cuniq f0 c==> c= cLAST f2 f3 c==> cMEM f4 f2 c==> cMEM f2 cparts f1 f0 c==> cMEM f0 f5 c==> call * part cloop_list f1 f5 c/\ cplanar_hypermap chypermap_of_list f1 c==> cplain_hypermap chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= cnext_el f0 f3 cf_list f1 ce_list f3 c= cnext_el f0 f3 cf_list f1 ce_list ce_list f3
- (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) = T)
T c==> cis_restricted chypermap_of_list f0 c= cis_restricted chypermap_of_list f0 cT
- (is_no_double_joins (hypermap_of_list L)) |- ((is_no_double_joins (hypermap_of_list L)) = T)
T c==> cis_no_double_joins chypermap_of_list f0 c= cis_no_double_joins chypermap_of_list f0 cT
+ |- (((!r. (((good_list L) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (is_edge_nondegenerate (hypermap_of_list L)))))) ==> (~ (((next_el r) (LAST p)) = ((f_list L) (e_list (LAST p))))))) ==> ((\r. (((good_list L) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (is_edge_nondegenerate (hypermap_of_list L)))))) ==> (~ (((next_el r) (LAST p)) = ((f_list L) (e_list (LAST p))))))) r)) = ((\r. (((good_list L) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (is_edge_nondegenerate (hypermap_of_list L)))))) ==> (~ (((next_el r) (LAST p)) = ((f_list L) (e_list (LAST p))))))) r))
T c= c==> ! c==> c/\ cgood_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM f2 cparts f0 b0 cis_edge_nondegenerate chypermap_of_list f0 c~ c= cnext_el b0 cLAST f2 cf_list f0 ce_list cLAST f2 * / c==> c/\ cgood_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM f2 cparts f0 b0 cis_edge_nondegenerate chypermap_of_list f0 c~ c= cnext_el b0 cLAST f2 cf_list f0 ce_list cLAST f2 f3 * / c==> c/\ cgood_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM f2 cparts f0 b0 cis_edge_nondegenerate chypermap_of_list f0 c~ c= cnext_el b0 cLAST f2 cf_list f0 ce_list cLAST f2 f3
+ |- ((\s. ((~ (s = NIL)) ==> ((MEM (LAST s)) s))) p)
T * / c==> c~ c= b0 cNIL cMEM cLAST b0 b0 f0
+ (!a. (((MEM a) p) ==> ((MEM a) r))), (~ (((next_el r) lp) = ((f_list L) (e_list lp)))), ((MEM lp) p), ((MEM r) N) |- ((!a. (((MEM a) p) ==> ((MEM a) r))) /\ ((!x. (((MEM x) N) ==> (!x. (((MEM x) x) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el x) x))))))) ==> (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 c==> c~ c= cnext_el f1 f2 cf_list f3 ce_list f2 c==> cMEM f2 f0 c==> cMEM f1 f4 c/\ ! c==> cMEM b0 f0 cMEM b0 f1 c==> ! c==> cMEM b0 f4 ! c==> cMEM b1 b0 c/\ cMEM b1 clist_of_darts f3 cone_step_list f3 b1 cnext_el b0 b1 c= cnext_el f1 f2 cf_list f3 ce_list ce_list f2
+ (is_restricted (hypermap_of_list L)), (good_list L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- ((~ (r = NIL)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f0 f4 c==> cMEM f4 f5 c==> cnormal_list f0 f5 c==> c~ c= f4 cNIL c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f4 c\/ c= cnext_el f4 f2 cf_list f0 ce_list f2 c= cnext_el f4 f2 cf_list f0 ce_list ce_list f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (uniq r), (good_list L), ((LAST p) = lp), ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x)))))), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (loop_list L)) N), ((normal_list L) N) |- ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cuniq f2 c==> cgood_list f1 c==> c= cLAST f3 f4 c==> c/\ cis_node_nondegenerate chypermap_of_list f1 ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> cMEM f5 f3 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cloop_list f1 f0 c==> cnormal_list f1 f0 c\/ c= cnext_el f2 f4 cf_list f1 ce_list f4 c= cnext_el f2 f4 cf_list f1 ce_list ce_list f4
+ |- ((\L. (!p. (!r. (((uniq r) /\ ((~ (r = NIL)) /\ ((MEM p) ((parts L) r)))) ==> (!a. (((MEM a) p) ==> ((MEM a) r))))))) L)
T * / ! ! c==> c/\ cuniq b2 c/\ c~ c= b2 cNIL cMEM b1 cparts b0 b2 ! c==> cMEM b3 b1 cMEM b3 b2 f0
+ (~ ((final_list L) r)), (good_list L), ((((marked_list L) N) r) x) |- (((MEM p) ((parts L) r)) ==> (((MEM y) p) ==> (((LAST p) = lp) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cmarked_list f0 f2 f1 f3 c==> cMEM f4 cparts f0 f1 c==> cMEM f5 f4 c==> c= cLAST f4 f6 c\/ c= cnext_el f1 f6 cf_list f0 ce_list f6 c= cnext_el f1 f6 cf_list f0 ce_list ce_list f6
+ (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (good_list L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (loop_list L)) N), ((normal_list L) N) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))))
T c==> c~ c= f0 cNIL c==> cis_restricted chypermap_of_list f1 c==> cgood_list f1 c==> c= cLAST f2 f3 c==> cMEM f4 f2 c==> cMEM f2 cparts f1 f0 c==> cMEM f0 f5 c==> call * part cloop_list f1 f5 c==> cnormal_list f1 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f5 c==> cuniq f0 c\/ c= cnext_el f0 f3 cf_list f1 ce_list f3 c= cnext_el f0 f3 cf_list f1 ce_list ce_list f3
+ |- (((!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) ==> ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L)) = ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L))
T c= c==> ! ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0
+ (good_list L), ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) |- ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))
T c==> cgood_list f0 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cl'y f0 f2 f3 f4 c/\ c~ cfinal_list f0 f2 c/\ cMEM f5 cparts f0 f2 c/\ cMEM f4 f5 c= cLAST f5 f6 c\/ c= cnext_el f2 f6 cf_list f0 ce_list f6 c= cnext_el f2 f6 cf_list f0 ce_list ce_list f6
+ (~ (r = NIL)), (uniq r), ((MEM p) ((parts L) r)) |- (((!a. (((MEM a) p) ==> ((MEM a) r))) ==> ((!x. (((MEM x) N) ==> (!x. (((MEM x) x) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el x) x))))))) ==> (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))) = ((((uniq r) /\ ((~ (r = NIL)) /\ ((MEM p) ((parts L) r)))) ==> (!a. (((MEM a) p) ==> ((MEM a) r)))) ==> ((!x. (((MEM x) N) ==> (!x. (((MEM x) x) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el x) x))))))) ==> (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))))
T c==> c~ c= f0 cNIL c==> cuniq f0 c==> cMEM f1 cparts f2 f0 c= c==> ! c==> cMEM b0 f1 cMEM b0 f0 c==> ! c==> cMEM b0 f3 ! c==> cMEM b1 b0 c/\ cMEM b1 clist_of_darts f2 cone_step_list f2 b1 cnext_el b0 b1 c= cnext_el f0 f4 cf_list f2 ce_list ce_list f4 c==> c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL cMEM f1 cparts f2 f0 ! c==> cMEM b0 f1 cMEM b0 f0 c==> ! c==> cMEM b0 f3 ! c==> cMEM b1 b0 c/\ cMEM b1 clist_of_darts f2 cone_step_list f2 b1 cnext_el b0 b1 c= cnext_el f0 f4 cf_list f2 ce_list ce_list f4
+ (uniq (flatten N)) |- ((uniq (flatten N)) = T)
T c==> cuniq cflatten f0 c= cuniq cflatten f0 cT
- (~ ((dart (hypermap_of_list L)) = EMPTY)) |- (((~ (EMPTY = (dart (hypermap_of_list L)))) ==> ((EMPTY = (dart (hypermap_of_list L))) = F)) = ((EMPTY = (dart (hypermap_of_list L))) = F))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c= c==> c~ c= part cEMPTY * part cdart chypermap_of_list f0 c= c= part cEMPTY * part cdart chypermap_of_list f0 cF c= c= part cEMPTY * part cdart chypermap_of_list f0 cF
+ |- (((!p. (!r. (((uniq r) /\ ((~ (r = NIL)) /\ ((MEM p) ((parts L) r)))) ==> (!a. (((MEM a) p) ==> ((MEM a) r)))))) ==> ((\p. (!r. (((uniq r) /\ ((~ (r = NIL)) /\ ((MEM p) ((parts L) r)))) ==> (!a. (((MEM a) p) ==> ((MEM a) r)))))) p)) = ((\p. (!r. (((uniq r) /\ ((~ (r = NIL)) /\ ((MEM p) ((parts L) r)))) ==> (!a. (((MEM a) p) ==> ((MEM a) r)))))) p))
T c= c==> ! ! c==> c/\ cuniq b1 c/\ c~ c= b1 cNIL cMEM b0 cparts f0 b1 ! c==> cMEM b2 b0 cMEM b2 b1 * / ! c==> c/\ cuniq b1 c/\ c~ c= b1 cNIL cMEM b0 cparts f0 b1 ! c==> cMEM b2 b0 cMEM b2 b1 f1 * / ! c==> c/\ cuniq b1 c/\ c~ c= b1 cNIL cMEM b0 cparts f0 b1 ! c==> cMEM b2 b0 cMEM b2 b1 f1
+ (is_restricted (hypermap_of_list L)), (good_list L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((~ (r = NIL)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cLAST f1 f2 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f4 f3 c==> cMEM f6 f1 c==> cMEM f1 cparts f0 f3 c==> cMEM f3 f5 c==> cnormal_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f4 c==> cs_flag_list f0 f5 f3 f4 c==> c~ c= f3 cNIL c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f3 c\/ c= cnext_el f3 f2 cf_list f0 ce_list f2 c= cnext_el f3 f2 cf_list f0 ce_list ce_list f2
+ (~ (((next_el r) lp) = ((f_list L) (e_list lp)))), ((MEM lp) r), ((MEM r) N) |- ((!x. (((MEM x) N) ==> (!x. (((MEM x) x) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el x) x))))))) ==> (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))
T c==> c~ c= cnext_el f0 f1 cf_list f2 ce_list f1 c==> cMEM f1 f0 c==> cMEM f0 f3 c==> ! c==> cMEM b0 f3 ! c==> cMEM b1 b0 c/\ cMEM b1 clist_of_darts f2 cone_step_list f2 b1 cnext_el b0 b1 c= cnext_el f0 f1 cf_list f2 ce_list ce_list f1
+ (((MEM lp) (list_of_darts L)) /\ (((next_el r) lp) = ((f_list L) lp))) |- ((((MEM lp) (list_of_darts L)) /\ (((next_el r) lp) = ((f_list L) lp))) /\ (((next_el r) lp) = ((f_list L) lp)))
T c==> c/\ cMEM f0 clist_of_darts f1 c= cnext_el f2 f0 cf_list f1 f0 c/\ c/\ cMEM f0 clist_of_darts f1 c= cnext_el f2 f0 cf_list f1 f0 c= cnext_el f2 f0 cf_list f1 f0
+ |- ((\s. (((uniq (flatten N)) /\ ((MEM s) N)) ==> (uniq s))) r)
T * / c==> c/\ cuniq cflatten f0 cMEM b0 f0 cuniq b0 f1
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (loop_list L)) N), ((normal_list L) N) |- ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cgood_list f1 c==> c= cLAST f3 f4 c==> cMEM f5 f3 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cloop_list f1 f0 c==> cnormal_list f1 f0 c\/ c= cnext_el f2 f4 cf_list f1 ce_list f4 c= cnext_el f2 f4 cf_list f1 ce_list ce_list f4
+ (~ (((next_el r) lp) = ((f_list L) (e_list lp)))), ((MEM lp) r) |- ((!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))) ==> (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))
T c==> c~ c= cnext_el f0 f1 cf_list f2 ce_list f1 c==> cMEM f1 f0 c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f2 cone_step_list f2 b0 cnext_el f0 b0 c= cnext_el f0 f1 cf_list f2 ce_list ce_list f1
+ |- ((\L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s)))) N)
T * / ! c==> c/\ cuniq cflatten b0 cMEM b1 b0 cuniq b1 f0
+ (!x. (((MEM x) N) ==> (!x. (((MEM x) x) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el x) x))))))), (~ (((next_el r) lp) = ((f_list L) (e_list lp)))), ((MEM lp) r), ((MEM r) N) |- (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))
T c==> ! c==> cMEM b0 f0 ! c==> cMEM b1 b0 c/\ cMEM b1 clist_of_darts f1 cone_step_list f1 b1 cnext_el b0 b1 c==> c~ c= cnext_el f2 f3 cf_list f1 ce_list f3 c==> cMEM f3 f2 c==> cMEM f2 f0 c= cnext_el f2 f3 cf_list f1 ce_list ce_list f3
+ |- ((!r. (((uniq r) /\ ((~ (r = NIL)) /\ ((MEM p) ((parts L) r)))) ==> (!a. (((MEM a) p) ==> ((MEM a) r))))) = T)
T c= ! c==> c/\ cuniq b0 c/\ c~ c= b0 cNIL cMEM f0 cparts f1 b0 ! c==> cMEM b1 f0 cMEM b1 b0 cT
+ |- (((!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) ==> ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s)) = ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s))
T c= c==> ! c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1
+ (~ (((next_el r) lp) = ((f_list L) (e_list lp)))), ((MEM lp) r), ((MEM r) N) |- (((MEM lp) r) /\ ((!x. (((MEM x) N) ==> (!x. (((MEM x) x) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el x) x))))))) ==> (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))
T c==> c~ c= cnext_el f0 f1 cf_list f2 ce_list f1 c==> cMEM f1 f0 c==> cMEM f0 f3 c/\ cMEM f1 f0 c==> ! c==> cMEM b0 f3 ! c==> cMEM b1 b0 c/\ cMEM b1 clist_of_darts f2 cone_step_list f2 b1 cnext_el b0 b1 c= cnext_el f0 f1 cf_list f2 ce_list ce_list f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (is_restricted (hypermap_of_list L)), (good_list L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((~ (r = NIL)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f0 f4 c==> cMEM f4 f5 c==> cnormal_list f0 f5 c==> c= cnext_el f4 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f6 c==> cs_flag_list f0 f5 f4 f6 c==> c~ c= f4 cNIL c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f4 c\/ c= cnext_el f4 f2 cf_list f0 ce_list f2 c= cnext_el f4 f2 cf_list f0 ce_list ce_list f2
+ (~ (((next_el r) lp) = ((f_list L) (e_list lp)))), (~ (p = NIL)), (~ (r = NIL)), (uniq r), ((LAST p) = lp), ((MEM p) ((parts L) r)), ((MEM r) N) |- ((!x. (((MEM x) N) ==> (!x. (((MEM x) x) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el x) x))))))) ==> (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))
T c==> c~ c= cnext_el f0 f1 cf_list f2 ce_list f1 c==> c~ c= f3 cNIL c==> c~ c= f0 cNIL c==> cuniq f0 c==> c= cLAST f3 f1 c==> cMEM f3 cparts f2 f0 c==> cMEM f0 f4 c==> ! c==> cMEM b0 f4 ! c==> cMEM b1 b0 c/\ cMEM b1 clist_of_darts f2 cone_step_list f2 b1 cnext_el b0 b1 c= cnext_el f0 f1 cf_list f2 ce_list ce_list f1
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))
T c==> c~ c= f0 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f2 c==> cgood_list f1 c==> c= cLAST f3 f4 c==> c= cnext_el f0 f5 cf_list f1 f5 c==> c/\ cuniq cflatten f2 c/\ call / c~ c= b0 cNIL f2 c/\ call * part cf_last f1 f2 c/\ call * part cloop_list f1 f2 ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f2 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f2 c==> cMEM f5 f0 c==> cMEM f6 f3 c==> cMEM f3 cparts f1 f0 c==> cMEM f0 f2 c==> cnormal_list f1 f2 c==> cs_flag_list f1 f2 f0 f5 c\/ c= cnext_el f0 f4 cf_list f1 ce_list f4 c= cnext_el f0 f4 cf_list f1 ce_list ce_list f4
- (is_restricted (hypermap_of_list L)), (good_list L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((~ (r = NIL)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f0 f4 c==> cMEM f4 f5 c==> cnormal_list f0 f5 c/\ cMEM f4 f5 c==> cMEM f6 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f4 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f6 c==> cs_flag_list f0 f5 f4 f6 c==> c~ c= f4 cNIL c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f4 c\/ c= cnext_el f4 f2 cf_list f0 ce_list f2 c= cnext_el f4 f2 cf_list f0 ce_list ce_list f2
+ (is_restricted (hypermap_of_list L)), (good_list L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((~ (r = NIL)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cLAST f1 f2 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f4 f3 c==> cMEM f6 f1 c==> cMEM f1 cparts f0 f3 c==> cMEM f3 f5 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f3 f4 c==> c~ c= f3 cNIL c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f3 c\/ c= cnext_el f3 f2 cf_list f0 ce_list f2 c= cnext_el f3 f2 cf_list f0 ce_list ce_list f2
+ (~ ((final_list L) r)), (good_list L), ((((l'y L) r) x) = y), ((MEM y) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((LAST p) = lp) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> c= cl'y f0 f1 f2 f3 c==> cMEM f3 f4 c==> cMEM f4 cparts f0 f1 c==> cmarked_list f0 f5 f1 f2 c==> c= cLAST f4 f6 c\/ c= cnext_el f1 f6 cf_list f0 ce_list f6 c= cnext_el f1 f6 cf_list f0 ce_list ce_list f6
+ (~ (((next_el r) lp) = ((f_list L) (e_list lp)))), (~ (p = NIL)), (~ (r = NIL)), (uniq r), ((LAST p) = lp), ((MEM p) ((parts L) r)), ((MEM r) N) |- ((~ (p = NIL)) /\ ((!x. (((MEM x) N) ==> (!x. (((MEM x) x) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el x) x))))))) ==> (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))
T c==> c~ c= cnext_el f0 f1 cf_list f2 ce_list f1 c==> c~ c= f3 cNIL c==> c~ c= f0 cNIL c==> cuniq f0 c==> c= cLAST f3 f1 c==> cMEM f3 cparts f2 f0 c==> cMEM f0 f4 c/\ c~ c= f3 cNIL c==> ! c==> cMEM b0 f4 ! c==> cMEM b1 b0 c/\ cMEM b1 clist_of_darts f2 cone_step_list f2 b1 cnext_el b0 b1 c= cnext_el f0 f1 cf_list f2 ce_list ce_list f1
+ |- ((\L. (!x. ((((one_step_list L) x) y) = ((y = ((f_list L) x)) \/ (y = ((f_list L) (e_list x))))))) L)
T * / ! c= cone_step_list b0 b1 f0 c\/ c= f0 cf_list b0 b1 c= f0 cf_list b0 ce_list b1 f1
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((uniq (flatten N)) /\ ((MEM r) N)) ==> (uniq r)) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cgood_list f1 c==> c= cLAST f3 f4 c==> c= cnext_el f2 f5 cf_list f1 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f6 f3 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f5 c==> c==> c/\ cuniq cflatten f0 cMEM f2 f0 cuniq f2 c\/ c= cnext_el f2 f4 cf_list f1 ce_list f4 c= cnext_el f2 f4 cf_list f1 ce_list ce_list f4
+ (~ (r = NIL)), (uniq r), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (loop_list L)) N) |- ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((~ (((next_el r) lp) = ((f_list L) (e_list lp)))) ==> (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))))))))
T c==> c~ c= f0 cNIL c==> cuniq f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f4 f0 c==> cMEM f0 f5 c==> call * part cloop_list f4 f5 c==> cplain_hypermap chypermap_of_list f4 c==> cconnected_hypermap chypermap_of_list f4 c==> csimple_hypermap chypermap_of_list f4 c==> cis_no_double_joins chypermap_of_list f4 c==> cis_edge_nondegenerate chypermap_of_list f4 c==> cis_node_nondegenerate chypermap_of_list f4 c==> ! c==> cIN b0 * part cdart chypermap_of_list f4 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f4 b0 c==> c~ c= cnext_el f0 f2 cf_list f4 ce_list f2 c= cnext_el f0 f2 cf_list f4 ce_list ce_list f2
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))) = T)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c= c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0 cT
+ (!x. (((MEM x) N) ==> (!x. (((MEM x) x) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el x) x))))))) |- (((MEM r) N) ==> (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))))
T c==> ! c==> cMEM b0 f0 ! c==> cMEM b1 b0 c/\ cMEM b1 clist_of_darts f1 cone_step_list f1 b1 cnext_el b0 b1 c==> cMEM f2 f0 ! c==> cMEM b0 f2 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f2 b0
+ (good_list L), ((LAST p) = lp), ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))))), ((MEM y) p), ((MEM p) ((parts L) r)) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))))) /\ ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))
T c==> cgood_list f0 c==> c= cLAST f1 f2 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f3 c/\ cMEM f4 f3 c/\ cMEM f5 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c/\ c= cnext_el f4 f5 cf_list f0 f5 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f5 cs_flag_list f0 f3 f4 f5 c==> cMEM f6 f1 c==> cMEM f1 cparts f0 f4 c/\ c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f3 c/\ cMEM f4 f3 c/\ cMEM f5 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c/\ c= cnext_el f4 f5 cf_list f0 f5 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f5 cs_flag_list f0 f3 f4 f5 c\/ c= cnext_el f4 f2 cf_list f0 ce_list f2 c= cnext_el f4 f2 cf_list f0 ce_list ce_list f2
+ |- ((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))))) = T)
T c= ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c= cl'y f0 b1 b2 f1 c/\ c~ cfinal_list f0 b1 c/\ cMEM f2 cparts f0 b1 c/\ cMEM f1 f2 c= cLAST f2 f3 c\/ c= cnext_el b1 f3 cf_list f0 ce_list f3 c= cnext_el b1 f3 cf_list f0 ce_list ce_list f3 cT
+ (is_edge_nondegenerate (hypermap_of_list L)), (good_list L), ((LAST p) = lp), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- (((~ (((next_el r) lp) = ((f_list L) (e_list lp)))) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))) = ((((good_list L) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (is_edge_nondegenerate (hypermap_of_list L)))))) ==> (~ (((next_el r) (LAST p)) = ((f_list L) (e_list (LAST p)))))) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cgood_list f0 c==> c= cLAST f1 f2 c==> cMEM f1 cparts f0 f3 c==> cMEM f3 f4 c==> cnormal_list f0 f4 c= c==> c~ c= cnext_el f3 f2 cf_list f0 ce_list f2 c\/ c= cnext_el f3 f2 cf_list f0 ce_list f2 c= cnext_el f3 f2 cf_list f0 ce_list ce_list f2 c==> c==> c/\ cgood_list f0 c/\ cnormal_list f0 f4 c/\ cMEM f3 f4 c/\ cMEM f1 cparts f0 f3 cis_edge_nondegenerate chypermap_of_list f0 c~ c= cnext_el f3 cLAST f1 cf_list f0 ce_list cLAST f1 c\/ c= cnext_el f3 f2 cf_list f0 ce_list f2 c= cnext_el f3 f2 cf_list f0 ce_list ce_list f2
- |- ((!a. t) = t)
T c= ! f0 f0
+ |- ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)
T * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
- (~ ((dart (hypermap_of_list L)) = EMPTY)) |- ((EMPTY = (dart (hypermap_of_list L))) = F)
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c= c= part cEMPTY * part cdart chypermap_of_list f0 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (r = NIL)), (planar_hypermap (hypermap_of_list L)), (uniq r), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (loop_list L)) N) |- ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((~ (((next_el r) lp) = ((f_list L) (e_list lp)))) ==> (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> cplanar_hypermap chypermap_of_list f1 c==> cuniq f2 c==> c= cLAST f3 f4 c==> cMEM f5 f3 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cloop_list f1 f0 c==> cplain_hypermap chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= cnext_el f2 f4 cf_list f1 ce_list f4 c= cnext_el f2 f4 cf_list f1 ce_list ce_list f4
+ |- ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)
T * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ (~ (((next_el r) lp) = ((f_list L) (e_list lp)))), ((MEM lp) r) |- ((((MEM lp) r) ==> (((MEM lp) (list_of_darts L)) /\ (((one_step_list L) lp) ((next_el r) lp)))) ==> (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))
T c==> c~ c= cnext_el f0 f1 cf_list f2 ce_list f1 c==> cMEM f1 f0 c==> c==> cMEM f1 f0 c/\ cMEM f1 clist_of_darts f2 cone_step_list f2 f1 cnext_el f0 f1 c= cnext_el f0 f1 cf_list f2 ce_list ce_list f1
+ (~ (r = NIL)), (is_node_nondegenerate (hypermap_of_list L)), (uniq r), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (loop_list L)) N) |- ((is_node_nondegenerate (hypermap_of_list L)) /\ ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((~ (((next_el r) lp) = ((f_list L) (e_list lp)))) ==> (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))))
T c==> c~ c= f0 cNIL c==> cis_node_nondegenerate chypermap_of_list f1 c==> cuniq f0 c==> c= cLAST f2 f3 c==> cMEM f4 f2 c==> cMEM f2 cparts f1 f0 c==> cMEM f0 f5 c==> call * part cloop_list f1 f5 c/\ cis_node_nondegenerate chypermap_of_list f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= cnext_el f0 f3 cf_list f1 ce_list f3 c= cnext_el f0 f3 cf_list f1 ce_list ce_list f3
+ (is_restricted (hypermap_of_list L)), (good_list L), ((LAST p) = lp), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((~ (r = NIL)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cLAST f1 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f4 f1 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f3 c==> cnormal_list f0 f3 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f5 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f6 c==> cs_flag_list f0 f3 f5 f6 c==> c~ c= f5 cNIL c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f0 f3 c==> call * part cloop_list f0 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c==> cuniq f5 c\/ c= cnext_el f5 f2 cf_list f0 ce_list f2 c= cnext_el f5 f2 cf_list f0 ce_list ce_list f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (uniq r), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (loop_list L)) N) |- ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((~ (((next_el r) lp) = ((f_list L) (e_list lp)))) ==> (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cuniq f2 c==> c= cLAST f3 f4 c==> cMEM f5 f3 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cloop_list f1 f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= cnext_el f2 f4 cf_list f1 ce_list f4 c= cnext_el f2 f4 cf_list f1 ce_list ce_list f4
- (is_restricted (hypermap_of_list L)), (good_list L), ((LAST p) = lp), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((~ (r = NIL)) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cLAST f1 f2 c==> cMEM f3 f4 c==> cMEM f5 f1 c==> cMEM f1 cparts f0 f4 c==> cMEM f4 f6 c==> cnormal_list f0 f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f4 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f4 f3 c==> c~ c= f4 cNIL c\/ c= cnext_el f4 f2 cf_list f0 ce_list f2 c= cnext_el f4 f2 cf_list f0 ce_list ce_list f2
- (((next_el r) lp) = ((f_list L) (e_list lp))) |- (((f_list L) (e_list lp)) = ((next_el r) lp))
T c==> c= cnext_el f0 f1 cf_list f2 ce_list f1 c= cf_list f2 ce_list f1 cnext_el f0 f1
- (~ (((next_el r) lp) = ((f_list L) (e_list lp)))) |- ((((f_list L) (e_list lp)) = ((next_el r) lp)) = F)
T c==> c~ c= cnext_el f0 f1 cf_list f2 ce_list f1 c= c= cf_list f2 ce_list f1 cnext_el f0 f1 cF
- ((all (loop_list L)) N) |- (((all (loop_list L)) N) = T)
T c==> call * part cloop_list f0 f1 c= call * part cloop_list f0 f1 cT
- ((all (\s. (~ (s = NIL)))) N) |- (((all (\s. (~ (s = NIL)))) N) = T)
T c==> call / c~ c= b0 cNIL f0 c= call / c~ c= b0 cNIL f0 cT
- (((f_list L) (e_list lp)) = ((next_el r) lp)) |- (((next_el r) lp) = ((f_list L) (e_list lp)))
T c==> c= cf_list f0 ce_list f1 cnext_el f2 f1 c= cnext_el f2 f1 cf_list f0 ce_list f1
- (planar_hypermap (hypermap_of_list L)) |- ((planar_hypermap (hypermap_of_list L)) = T)
T c==> cplanar_hypermap chypermap_of_list f0 c= cplanar_hypermap chypermap_of_list f0 cT
- (is_node_nondegenerate (hypermap_of_list L)) |- ((is_node_nondegenerate (hypermap_of_list L)) = T)
T c==> cis_node_nondegenerate chypermap_of_list f0 c= cis_node_nondegenerate chypermap_of_list f0 cT
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) |- ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> cIN f1 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 f1
- (is_restricted (hypermap_of_list L)), (good_list L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((~ (r = NIL)) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f0 f4 c==> cMEM f4 f5 c==> cnormal_list f0 f5 c/\ cMEM f4 f5 c==> cMEM f6 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f4 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f6 c==> cs_flag_list f0 f5 f4 f6 c==> c~ c= f4 cNIL c\/ c= cnext_el f4 f2 cf_list f0 ce_list f2 c= cnext_el f4 f2 cf_list f0 ce_list ce_list f2
- (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))) |- ((((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x)))) = T)
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c= c==> cMEM f2 f0 c/\ cMEM f2 clist_of_darts f1 cone_step_list f1 f2 cnext_el f0 f2 cT
- (connected_hypermap (hypermap_of_list L)) |- ((connected_hypermap (hypermap_of_list L)) = T)
T c==> cconnected_hypermap chypermap_of_list f0 c= cconnected_hypermap chypermap_of_list f0 cT
- (NIL = p) |- (p = NIL)
T c==> c= cNIL f0 c= f0 cNIL
- (is_restricted (hypermap_of_list L)), (good_list L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((~ (r = NIL)) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cLAST f1 f2 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f4 f3 c==> cMEM f6 f1 c==> cMEM f1 cparts f0 f3 c==> cMEM f3 f5 c==> cnormal_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f4 c==> cs_flag_list f0 f5 f3 f4 c==> c~ c= f3 cNIL c\/ c= cnext_el f3 f2 cf_list f0 ce_list f2 c= cnext_el f3 f2 cf_list f0 ce_list ce_list f2
- (good_list_nodes L) |- ((good_list_nodes L) = T)
T c==> cgood_list_nodes f0 c= cgood_list_nodes f0 cT
- |- ((x = x) = T)
T c= c= f0 f0 cT
- (!a. (((MEM a) p) ==> ((MEM a) r))) |- ((((MEM a) p) ==> ((MEM a) r)) = T)
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 c= c==> cMEM f2 f0 cMEM f2 f1 cT
- (~ (p = NIL)) |- (~ (NIL = p))
T c==> c~ c= f0 cNIL c~ c= cNIL f0
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) |- (((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x)))) = T)
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c= c==> cIN f1 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 f1 cT
- (is_restricted (hypermap_of_list L)), (good_list L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((normal_list L) N) |- (((normal_list L) N) /\ (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((~ (r = NIL)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f0 f4 c==> cnormal_list f0 f5 c/\ cnormal_list f0 f5 c==> cMEM f4 f5 c==> cMEM f6 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f4 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f6 c==> cs_flag_list f0 f5 f4 f6 c==> c~ c= f4 cNIL c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f4 c\/ c= cnext_el f4 f2 cf_list f0 ce_list f2 c= cnext_el f4 f2 cf_list f0 ce_list ce_list f2
- ((dart (hypermap_of_list L)) = EMPTY) |- (EMPTY = (dart (hypermap_of_list L)))
T c==> c= * part cdart chypermap_of_list f0 part cEMPTY c= part cEMPTY * part cdart chypermap_of_list f0
- (~ ((dart (hypermap_of_list L)) = EMPTY)) |- (~ (EMPTY = (dart (hypermap_of_list L))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c~ c= part cEMPTY * part cdart chypermap_of_list f0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((\d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) d)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 * / c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 f2
- (plain_hypermap (hypermap_of_list L)) |- ((plain_hypermap (hypermap_of_list L)) = T)
T c==> cplain_hypermap chypermap_of_list f0 c= cplain_hypermap chypermap_of_list f0 cT
- ((((s_flag_list L) N) r) x) |- (((((s_flag_list L) N) r) x) = T)
T c==> cs_flag_list f0 f1 f2 f3 c= cs_flag_list f0 f1 f2 f3 cT
- (~ (p = NIL)) |- (((~ (NIL = p)) ==> ((NIL = p) = F)) = ((NIL = p) = F))
T c==> c~ c= f0 cNIL c= c==> c~ c= cNIL f0 c= c= cNIL f0 cF c= c= cNIL f0 cF
- (is_restricted (hypermap_of_list L)), (good_list L), ((LAST p) = lp), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((~ (r = NIL)) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cLAST f1 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f4 f5 c==> cMEM f6 f1 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f3 c==> cnormal_list f0 f3 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> cs_flag_list f0 f3 f5 f4 c==> c~ c= f5 cNIL c\/ c= cnext_el f5 f2 cf_list f0 ce_list f2 c= cnext_el f5 f2 cf_list f0 ce_list ce_list f2
- (is_restricted (hypermap_of_list L)), (good_list L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((((s_flag_list L) N) r) x) /\ ((~ (r = NIL)) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cLAST f1 f2 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f4 f3 c==> cMEM f6 f1 c==> cMEM f1 cparts f0 f3 c==> cMEM f3 f5 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f3 f4 c/\ cs_flag_list f0 f5 f3 f4 c==> c~ c= f3 cNIL c\/ c= cnext_el f3 f2 cf_list f0 ce_list f2 c= cnext_el f3 f2 cf_list f0 ce_list ce_list f2
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) |- ((\x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) x)
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 * / c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 f1
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (is_restricted (hypermap_of_list L)), (good_list L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ (((((s_flag_list L) N) r) x) ==> ((~ (r = NIL)) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cLAST f1 f2 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f4 f3 c==> cMEM f6 f1 c==> cMEM f1 cparts f0 f3 c==> cMEM f3 f5 c==> cnormal_list f0 f5 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f4 c==> cs_flag_list f0 f5 f3 f4 c==> c~ c= f3 cNIL c\/ c= cnext_el f3 f2 cf_list f0 ce_list f2 c= cnext_el f3 f2 cf_list f0 ce_list ce_list f2
- (is_restricted (hypermap_of_list L)), (good_list L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)) |- (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((~ (r = NIL)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f0 f4 c==> cnormal_list f0 f5 c==> cMEM f4 f5 c==> cMEM f6 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f4 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f6 c==> cs_flag_list f0 f5 f4 f6 c==> c~ c= f4 cNIL c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f4 c\/ c= cnext_el f4 f2 cf_list f0 ce_list f2 c= cnext_el f4 f2 cf_list f0 ce_list ce_list f2
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0
- (simple_hypermap (hypermap_of_list L)) |- ((simple_hypermap (hypermap_of_list L)) = T)
T c==> csimple_hypermap chypermap_of_list f0 c= csimple_hypermap chypermap_of_list f0 cT
- (is_restricted (hypermap_of_list L)), (good_list L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((normal_list L) N) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((~ (r = NIL)) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f0 f4 c==> cnormal_list f0 f5 c==> cMEM f4 f5 c==> cMEM f6 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f4 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f6 c==> cs_flag_list f0 f5 f4 f6 c==> c~ c= f4 cNIL c\/ c= cnext_el f4 f2 cf_list f0 ce_list f2 c= cnext_el f4 f2 cf_list f0 ce_list ce_list f2
- (is_restricted (hypermap_of_list L)), (good_list L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((~ (r = NIL)) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f0 f4 c==> cMEM f4 f5 c==> cnormal_list f0 f5 c==> cMEM f6 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f4 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f6 c==> cs_flag_list f0 f5 f4 f6 c==> c~ c= f4 cNIL c\/ c= cnext_el f4 f2 cf_list f0 ce_list f2 c= cnext_el f4 f2 cf_list f0 ce_list ce_list f2
- (~ ((dart (hypermap_of_list L)) = EMPTY)) |- (((dart (hypermap_of_list L)) = EMPTY) = F)
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c= c= * part cdart chypermap_of_list f0 part cEMPTY cF
- (~ (((next_el r) lp) = ((f_list L) (e_list lp)))) |- (((~ (((f_list L) (e_list lp)) = ((next_el r) lp))) ==> ((((f_list L) (e_list lp)) = ((next_el r) lp)) = F)) = ((((f_list L) (e_list lp)) = ((next_el r) lp)) = F))
T c==> c~ c= cnext_el f0 f1 cf_list f2 ce_list f1 c= c==> c~ c= cf_list f2 ce_list f1 cnext_el f0 f1 c= c= cf_list f2 ce_list f1 cnext_el f0 f1 cF c= c= cf_list f2 ce_list f1 cnext_el f0 f1 cF
- (is_restricted (hypermap_of_list L)), (good_list L), ((LAST p) = lp), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((~ (r = NIL)) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cLAST f1 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f4 f5 c==> cMEM f6 f1 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f3 c==> cnormal_list f0 f3 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> cs_flag_list f0 f3 f5 f4 c==> c~ c= f5 cNIL c\/ c= cnext_el f5 f2 cf_list f0 ce_list f2 c= cnext_el f5 f2 cf_list f0 ce_list ce_list f2
- ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) = T)
T c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c= cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 cT
- ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) = T)
T c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c= cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 cT
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- ((all (f_last L)) N) |- (((all (f_last L)) N) = T)
T c==> call * part cf_last f0 f1 c= call * part cf_last f0 f1 cT
- (is_restricted (hypermap_of_list L)), (good_list L), ((LAST p) = lp), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((~ (r = NIL)) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cLAST f1 f2 c==> cMEM f3 f4 c==> cMEM f5 f1 c==> cMEM f1 cparts f0 f4 c==> cMEM f4 f6 c==> cnormal_list f0 f6 c/\ cMEM f3 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f4 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f4 f3 c==> c~ c= f4 cNIL c\/ c= cnext_el f4 f2 cf_list f0 ce_list f2 c= cnext_el f4 f2 cf_list f0 ce_list ce_list f2
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> c= cLAST f3 f4 c==> c= cnext_el f2 f5 cf_list f1 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f6 f3 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f5 c\/ c= cnext_el f2 f4 cf_list f1 ce_list f4 c= cnext_el f2 f4 cf_list f1 ce_list ce_list f4
- (is_restricted (hypermap_of_list L)), (good_list L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((~ (r = NIL)) ==> ((((next_el r) lp) = ((f_list L) (e_list lp))) \/ (((next_el r) lp) = ((f_list L) (e_list (e_list lp)))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cLAST f1 f2 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f4 f3 c==> cMEM f6 f1 c==> cMEM f1 cparts f0 f3 c==> cMEM f3 f5 c==> cnormal_list f0 f5 c/\ c= cnext_el f3 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f4 c==> cs_flag_list f0 f5 f3 f4 c==> c~ c= f3 cNIL c\/ c= cnext_el f3 f2 cf_list f0 ce_list f2 c= cnext_el f3 f2 cf_list f0 ce_list ce_list f2
- (p = NIL) |- (NIL = p)
T c==> c= f0 cNIL c= cNIL f0
- (EMPTY = (dart (hypermap_of_list L))) |- ((dart (hypermap_of_list L)) = EMPTY)
T c==> c= part cEMPTY * part cdart chypermap_of_list f0 c= * part cdart chypermap_of_list f0 part cEMPTY
- (~ (((next_el r) lp) = ((f_list L) (e_list lp)))) |- (~ (((f_list L) (e_list lp)) = ((next_el r) lp)))
T c==> c~ c= cnext_el f0 f1 cf_list f2 ce_list f1 c~ c= cf_list f2 ce_list f1 cnext_el f0 f1
