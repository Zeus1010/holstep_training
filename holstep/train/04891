N Yxionxl2.GRAPH_SYM_0
C |- ((graph ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ==> (graph ((IMAGE (\i. ((vector_neg (vv i)) INSERT ((vector_neg (vv (SUC i))) INSERT EMPTY)))) UNIV)))
T c==> cgraph * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV cgraph * * part cIMAGE / * * part cINSERT cvector_neg * f0 b0 * * part cINSERT cvector_neg * f0 cSUC b0 part cEMPTY part cUNIV
D TRUTH
A |- T
T cT
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D IMAGE
A |- (!s. (!f. (((IMAGE f) s) = (GSPEC (\GEN%PVAR%7. (?y. (((SETSPEC GEN%PVAR%7) (?x. ((x IN s) /\ (y = (f x))))) y)))))))
T c= * * part cIMAGE f0 f1 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ cIN b2 f1 c= b1 * f0 b2 b1
D HAS_SIZE
A |- (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))))
T c= cHAS_SIZE f0 f1 c/\ cFINITE f0 c= cCARD f0 f1
D Fan.GRAPH
A |- (!E. ((graph E) = (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0))))))))
T c= cgraph f0 ! c==> cIN b0 f0 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0
D Yxionxl2.FINITE_SYM_0
A |- ((FINITE A) ==> (FINITE ((IMAGE (\x. (vector_neg x))) A)))
T c==> cFINITE f0 cFINITE * * part cIMAGE / cvector_neg b0 f0
D Yxionxl2.CARD_SYM_0
A |- ((FINITE A) ==> ((CARD ((IMAGE (\x. (vector_neg x))) A)) = (CARD A)))
T c==> cFINITE f0 c= cCARD * * part cIMAGE / cvector_neg b0 f0 cCARD f0
D Yxionxl2.ELEMENT2_SYM_0
A |- (((vector_neg a) INSERT ((vector_neg b) INSERT EMPTY)) = ((IMAGE (\x. (vector_neg x))) (a INSERT (b INSERT EMPTY))))
T c= * * part cINSERT cvector_neg f0 * * part cINSERT cvector_neg f1 part cEMPTY * * part cIMAGE / cvector_neg b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (?x'. ((x' IN UNIV) /\ (((vv x) INSERT ((vv (SUC x)) INSERT EMPTY)) = ((vv x') INSERT ((vv (SUC x')) INSERT EMPTY))))) |- ((?x'. ((x' IN UNIV) /\ (((vv x) INSERT ((vv (SUC x)) INSERT EMPTY)) = ((vv x') INSERT ((vv (SUC x')) INSERT EMPTY))))) = T)
T c==> c? / c/\ cIN b0 part cUNIV c= * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY c= c? / c/\ cIN b0 part cUNIV c= * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY cT
+ (!e. ((?x. ((x IN UNIV) /\ (e = ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))), (e = ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))), (x IN UNIV) |- ((?x'. ((x' IN UNIV) /\ (((vv x) INSERT ((vv (SUC x)) INSERT EMPTY)) = ((vv x') INSERT ((vv (SUC x')) INSERT EMPTY))))) ==> ((FINITE ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))) /\ ((CARD ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! c==> c? / c/\ cIN b1 part cUNIV c= b0 * * part cINSERT * f0 b1 * * part cINSERT * f0 cSUC b1 part cEMPTY c/\ cFINITE b0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 c==> c= f1 * * part cINSERT cvector_neg * f0 f2 * * part cINSERT cvector_neg * f0 cSUC f2 part cEMPTY c==> cIN f2 part cUNIV c==> c? / c/\ cIN b0 part cUNIV c= * * part cINSERT * f0 f2 * * part cINSERT * f0 cSUC f2 part cEMPTY * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY c/\ cFINITE * * part cINSERT cvector_neg * f0 f2 * * part cINSERT cvector_neg * f0 cSUC f2 part cEMPTY c= cCARD * * part cINSERT cvector_neg * f0 f2 * * part cINSERT cvector_neg * f0 cSUC f2 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\s. (!f. (((IMAGE f) s) = (GSPEC (\GEN%PVAR%7. (?y. (((SETSPEC GEN%PVAR%7) (?x. ((x IN s) /\ (y = (f x))))) y))))))) s)
T * / ! c= * * part cIMAGE b1 b0 * part cGSPEC / c? / cSETSPEC b2 c? / c/\ cIN b4 b0 c= b3 * b1 b4 b3 f0
- |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- (FINITE ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))) |- (T = (FINITE ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))))
T c==> cFINITE * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c= cT cFINITE * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
+ (?x'. ((x' IN UNIV) /\ (((vv x) INSERT ((vv (SUC x)) INSERT EMPTY)) = ((vv x') INSERT ((vv (SUC x')) INSERT EMPTY))))) |- ((((FINITE ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))) /\ ((CARD ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0))))) ==> ((FINITE ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))) /\ ((CARD ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0)))))) = (((?x'. ((x' IN UNIV) /\ (((vv x) INSERT ((vv (SUC x)) INSERT EMPTY)) = ((vv x') INSERT ((vv (SUC x')) INSERT EMPTY))))) ==> ((FINITE ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))) /\ ((CARD ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((FINITE ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))) /\ ((CARD ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c? / c/\ cIN b0 part cUNIV c= * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY c= c==> c/\ cFINITE * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c= cCARD * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c/\ cFINITE * * part cINSERT cvector_neg * f0 f1 * * part cINSERT cvector_neg * f0 cSUC f1 part cEMPTY c= cCARD * * part cINSERT cvector_neg * f0 f1 * * part cINSERT cvector_neg * f0 cSUC f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c==> c==> c? / c/\ cIN b0 part cUNIV c= * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY c/\ cFINITE * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c= cCARD * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c/\ cFINITE * * part cINSERT cvector_neg * f0 f1 * * part cINSERT cvector_neg * f0 cSUC f1 part cEMPTY c= cCARD * * part cINSERT cvector_neg * f0 f1 * * part cINSERT cvector_neg * f0 cSUC f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ (!e. ((?x. ((x IN UNIV) /\ (e = ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))), (e = ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))), (x IN UNIV) |- ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0)))))
T c==> ! c==> c? / c/\ cIN b1 part cUNIV c= b0 * * part cINSERT * f0 b1 * * part cINSERT * f0 cSUC b1 part cEMPTY c/\ cFINITE b0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 c==> c= f1 * * part cINSERT cvector_neg * f0 f2 * * part cINSERT cvector_neg * f0 cSUC f2 part cEMPTY c==> cIN f2 part cUNIV c/\ cFINITE f1 c= cCARD f1 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((\s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) s)) = ((\s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) s))
T c= c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 * / ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 f0 * / ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 f0
+ |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ (FINITE ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))), ((CARD ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0)))) |- (T = ((FINITE ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))) /\ ((CARD ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0))))))
T c==> cFINITE * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c==> c= cCARD * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c= cT c/\ cFINITE * * part cINSERT cvector_neg * f0 f1 * * part cINSERT cvector_neg * f0 cSUC f1 part cEMPTY c= cCARD * * part cINSERT cvector_neg * f0 f1 * * part cINSERT cvector_neg * f0 cSUC f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0
+ (!e. ((?x. ((x IN UNIV) /\ (e = ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))) |- ((?x'. ((x' IN UNIV) /\ (((vv x) INSERT ((vv (SUC x)) INSERT EMPTY)) = ((vv x') INSERT ((vv (SUC x')) INSERT EMPTY))))) ==> ((FINITE ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))) /\ ((CARD ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! c==> c? / c/\ cIN b1 part cUNIV c= b0 * * part cINSERT * f0 b1 * * part cINSERT * f0 cSUC b1 part cEMPTY c/\ cFINITE b0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 c==> c? / c/\ cIN b0 part cUNIV c= * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY c/\ cFINITE * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c= cCARD * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (!e. ((?x. ((x IN UNIV) /\ (e = ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))) |- ((!e. ((?x. ((x IN UNIV) /\ (e = ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))) /\ (!e. ((?x. ((x IN UNIV) /\ (e = ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> ! c==> c? / c/\ cIN b1 part cUNIV c= b0 * * part cINSERT * f0 b1 * * part cINSERT * f0 cSUC b1 part cEMPTY c/\ cFINITE b0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 c/\ ! c==> c? / c/\ cIN b1 part cUNIV c= b0 * * part cINSERT * f0 b1 * * part cINSERT * f0 cSUC b1 part cEMPTY c/\ cFINITE b0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c? / c/\ cIN b1 part cUNIV c= b0 * * part cINSERT cvector_neg * f0 b1 * * part cINSERT cvector_neg * f0 cSUC b1 part cEMPTY c/\ cFINITE b0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0
- (!e. ((?x. ((x IN UNIV) /\ (e = ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))), (?x. ((x IN UNIV) /\ (e = ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))))) |- ((?x. ((x IN UNIV) /\ (e = ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))))) /\ ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! c==> c? / c/\ cIN b1 part cUNIV c= b0 * * part cINSERT * f0 b1 * * part cINSERT * f0 cSUC b1 part cEMPTY c/\ cFINITE b0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 c==> c? / c/\ cIN b0 part cUNIV c= f1 * * part cINSERT cvector_neg * f0 b0 * * part cINSERT cvector_neg * f0 cSUC b0 part cEMPTY c/\ c? / c/\ cIN b0 part cUNIV c= f1 * * part cINSERT cvector_neg * f0 b0 * * part cINSERT cvector_neg * f0 cSUC b0 part cEMPTY c/\ cFINITE f1 c= cCARD f1 cNUMERAL cBIT0 cBIT1 c_0
+ (!e. ((?x. ((x IN UNIV) /\ (e = ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))) |- ((\e. ((?x. ((x IN UNIV) /\ (e = ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))) ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY)))
T c==> ! c==> c? / c/\ cIN b1 part cUNIV c= b0 * * part cINSERT * f0 b1 * * part cINSERT * f0 cSUC b1 part cEMPTY c/\ cFINITE b0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 * / c==> c? / c/\ cIN b1 part cUNIV c= b0 * * part cINSERT * f0 b1 * * part cINSERT * f0 cSUC b1 part cEMPTY c/\ cFINITE b0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY
- |- ((!e. t) = t)
T c= ! f0 f0
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ (!e. ((?x. ((x IN UNIV) /\ (e = ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))) |- (((x IN UNIV) /\ (e = ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY)))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! c==> c? / c/\ cIN b1 part cUNIV c= b0 * * part cINSERT * f0 b1 * * part cINSERT * f0 cSUC b1 part cEMPTY c/\ cFINITE b0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cIN f1 part cUNIV c= f2 * * part cINSERT cvector_neg * f0 f1 * * part cINSERT cvector_neg * f0 cSUC f1 part cEMPTY c/\ cFINITE f2 c= cCARD f2 cNUMERAL cBIT0 cBIT1 c_0
- |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ |- ((\n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) n)
T * / c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 f1
+ (FINITE ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))), ((FINITE ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))) /\ ((CARD ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0))))) |- ((FINITE ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))) /\ ((CARD ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0)))))
T c==> cFINITE * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c==> c/\ cFINITE * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c= cCARD * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c/\ cFINITE * * part cINSERT cvector_neg * f0 f1 * * part cINSERT cvector_neg * f0 cSUC f1 part cEMPTY c= cCARD * * part cINSERT cvector_neg * f0 f1 * * part cINSERT cvector_neg * f0 cSUC f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0
- (!e. ((?x. ((x IN UNIV) /\ (e = ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))) |- (((?x. ((x IN UNIV) /\ (e = ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0)))))) = T)
T c==> ! c==> c? / c/\ cIN b1 part cUNIV c= b0 * * part cINSERT * f0 b1 * * part cINSERT * f0 cSUC b1 part cEMPTY c/\ cFINITE b0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c? / c/\ cIN b0 part cUNIV c= f1 * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY c/\ cFINITE f1 c= cCARD f1 cNUMERAL cBIT0 cBIT1 c_0 cT
- |- ((?x. t) = t)
T c= c? / f0 f0
+ |- (((!s. (!f. (((IMAGE f) s) = (GSPEC (\GEN%PVAR%7. (?y. (((SETSPEC GEN%PVAR%7) (?x. ((x IN s) /\ (y = (f x))))) y))))))) ==> ((\s. (!f. (((IMAGE f) s) = (GSPEC (\GEN%PVAR%7. (?y. (((SETSPEC GEN%PVAR%7) (?x. ((x IN s) /\ (y = (f x))))) y))))))) s)) = ((\s. (!f. (((IMAGE f) s) = (GSPEC (\GEN%PVAR%7. (?y. (((SETSPEC GEN%PVAR%7) (?x. ((x IN s) /\ (y = (f x))))) y))))))) s))
T c= c==> ! ! c= * * part cIMAGE b1 b0 * part cGSPEC / c? / cSETSPEC b2 c? / c/\ cIN b4 b0 c= b3 * b1 b4 b3 * / ! c= * * part cIMAGE b1 b0 * part cGSPEC / c? / cSETSPEC b2 c? / c/\ cIN b4 b0 c= b3 * b1 b4 b3 f0 * / ! c= * * part cIMAGE b1 b0 * part cGSPEC / c? / cSETSPEC b2 c? / c/\ cIN b4 b0 c= b3 * b1 b4 b3 f0
+ (?x'. ((x' IN UNIV) /\ (((vv x) INSERT ((vv (SUC x)) INSERT EMPTY)) = ((vv x') INSERT ((vv (SUC x')) INSERT EMPTY))))) |- (((?x'. ((x' IN UNIV) /\ (((vv x) INSERT ((vv (SUC x)) INSERT EMPTY)) = ((vv x') INSERT ((vv (SUC x')) INSERT EMPTY))))) ==> ((FINITE ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))) /\ ((CARD ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((FINITE ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))) /\ ((CARD ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c? / c/\ cIN b0 part cUNIV c= * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY c==> c==> c? / c/\ cIN b0 part cUNIV c= * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY c/\ cFINITE * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c= cCARD * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c/\ cFINITE * * part cINSERT cvector_neg * f0 f1 * * part cINSERT cvector_neg * f0 cSUC f1 part cEMPTY c= cCARD * * part cINSERT cvector_neg * f0 f1 * * part cINSERT cvector_neg * f0 cSUC f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!f. (((IMAGE f) s) = (GSPEC (\GEN%PVAR%7. (?y. (((SETSPEC GEN%PVAR%7) (?x. ((x IN s) /\ (y = (f x))))) y)))))) ==> ((\f. (((IMAGE f) s) = (GSPEC (\GEN%PVAR%7. (?y. (((SETSPEC GEN%PVAR%7) (?x. ((x IN s) /\ (y = (f x))))) y)))))) f)) = ((\f. (((IMAGE f) s) = (GSPEC (\GEN%PVAR%7. (?y. (((SETSPEC GEN%PVAR%7) (?x. ((x IN s) /\ (y = (f x))))) y)))))) f))
T c= c==> ! c= * * part cIMAGE b0 f0 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ cIN b3 f0 c= b2 * b0 b3 b2 * / c= * * part cIMAGE b0 f0 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ cIN b3 f0 c= b2 * b0 b3 b2 f1 * / c= * * part cIMAGE b0 f0 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ cIN b3 f0 c= b2 * b0 b3 b2 f1
+ (x IN UNIV) |- (T = ((x IN UNIV) /\ (((vv x) INSERT ((vv (SUC x)) INSERT EMPTY)) = ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY)))))
T c==> cIN f0 part cUNIV c= cT c/\ cIN f0 part cUNIV c= * * part cINSERT * f1 f0 * * part cINSERT * f1 cSUC f0 part cEMPTY * * part cINSERT * f1 f0 * * part cINSERT * f1 cSUC f0 part cEMPTY
+ |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ (x IN UNIV) |- ((\x'. ((x' IN UNIV) /\ (((vv x) INSERT ((vv (SUC x)) INSERT EMPTY)) = ((vv x') INSERT ((vv (SUC x')) INSERT EMPTY))))) x)
T c==> cIN f0 part cUNIV * / c/\ cIN b0 part cUNIV c= * * part cINSERT * f1 f0 * * part cINSERT * f1 cSUC f0 part cEMPTY * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY f0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (!e. ((?x. ((x IN UNIV) /\ (e = ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))) |- ((((\x. ((x IN UNIV) /\ (e = ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))))) x) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0)))))) = T)
T c==> ! c==> c? / c/\ cIN b1 part cUNIV c= b0 * * part cINSERT * f0 b1 * * part cINSERT * f0 cSUC b1 part cEMPTY c/\ cFINITE b0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> * / c/\ cIN b0 part cUNIV c= f1 * * part cINSERT cvector_neg * f0 b0 * * part cINSERT cvector_neg * f0 cSUC b0 part cEMPTY f2 c/\ cFINITE f1 c= cCARD f1 cNUMERAL cBIT0 cBIT1 c_0 cT
+ (!e. ((?x. ((x IN UNIV) /\ (e = ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))) |- (((!x. (((\x. ((x IN UNIV) /\ (e = ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))))) x) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((?x. ((x IN UNIV) /\ (e = ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))) = ((?x. ((x IN UNIV) /\ (e = ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> ! c==> c? / c/\ cIN b1 part cUNIV c= b0 * * part cINSERT * f0 b1 * * part cINSERT * f0 cSUC b1 part cEMPTY c/\ cFINITE b0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> ! c==> * / c/\ cIN b1 part cUNIV c= f1 * * part cINSERT cvector_neg * f0 b1 * * part cINSERT cvector_neg * f0 cSUC b1 part cEMPTY b0 c/\ cFINITE f1 c= cCARD f1 cNUMERAL cBIT0 cBIT1 c_0 c==> c? / c/\ cIN b0 part cUNIV c= f1 * * part cINSERT cvector_neg * f0 b0 * * part cINSERT cvector_neg * f0 cSUC b0 part cEMPTY c/\ cFINITE f1 c= cCARD f1 cNUMERAL cBIT0 cBIT1 c_0 c==> c? / c/\ cIN b0 part cUNIV c= f1 * * part cINSERT cvector_neg * f0 b0 * * part cINSERT cvector_neg * f0 cSUC b0 part cEMPTY c/\ cFINITE f1 c= cCARD f1 cNUMERAL cBIT0 cBIT1 c_0
+ (!e. ((?x. ((x IN UNIV) /\ (e = ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))), ((x IN UNIV) /\ (e = ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY)))), (x IN UNIV) |- ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0)))))
T c==> ! c==> c? / c/\ cIN b1 part cUNIV c= b0 * * part cINSERT * f0 b1 * * part cINSERT * f0 cSUC b1 part cEMPTY c/\ cFINITE b0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cIN f1 part cUNIV c= f2 * * part cINSERT cvector_neg * f0 f1 * * part cINSERT cvector_neg * f0 cSUC f1 part cEMPTY c==> cIN f1 part cUNIV c/\ cFINITE f2 c= cCARD f2 cNUMERAL cBIT0 cBIT1 c_0
+ (!e. ((?x. ((x IN UNIV) /\ (e = ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))) |- (((\x. ((x IN UNIV) /\ (e = ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))))) x) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! c==> c? / c/\ cIN b1 part cUNIV c= b0 * * part cINSERT * f0 b1 * * part cINSERT * f0 cSUC b1 part cEMPTY c/\ cFINITE b0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 c==> * / c/\ cIN b0 part cUNIV c= f1 * * part cINSERT cvector_neg * f0 b0 * * part cINSERT cvector_neg * f0 cSUC b0 part cEMPTY f2 c/\ cFINITE f1 c= cCARD f1 cNUMERAL cBIT0 cBIT1 c_0
- (!e. ((?x. ((x IN UNIV) /\ (e = ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))) |- ((?x. ((x IN UNIV) /\ (e = ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! c==> c? / c/\ cIN b1 part cUNIV c= b0 * * part cINSERT * f0 b1 * * part cINSERT * f0 cSUC b1 part cEMPTY c/\ cFINITE b0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 c==> c? / c/\ cIN b0 part cUNIV c= f1 * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY c/\ cFINITE f1 c= cCARD f1 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) ==> ((\n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) n)) = ((\n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) n))
T c= c==> ! c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 * / c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 f1 * / c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 f1
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
+ (!e. ((?x. ((x IN UNIV) /\ (e = ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))) |- ((((?x'. ((x' IN UNIV) /\ (((vv x) INSERT ((vv (SUC x)) INSERT EMPTY)) = ((vv x') INSERT ((vv (SUC x')) INSERT EMPTY))))) ==> ((FINITE ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))) /\ ((CARD ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((FINITE ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))) /\ ((CARD ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0)))))) = ((FINITE ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))) /\ ((CARD ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! c==> c? / c/\ cIN b1 part cUNIV c= b0 * * part cINSERT * f0 b1 * * part cINSERT * f0 cSUC b1 part cEMPTY c/\ cFINITE b0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c==> c? / c/\ cIN b0 part cUNIV c= * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY c/\ cFINITE * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c= cCARD * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c/\ cFINITE * * part cINSERT cvector_neg * f0 f1 * * part cINSERT cvector_neg * f0 cSUC f1 part cEMPTY c= cCARD * * part cINSERT cvector_neg * f0 f1 * * part cINSERT cvector_neg * f0 cSUC f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c/\ cFINITE * * part cINSERT cvector_neg * f0 f1 * * part cINSERT cvector_neg * f0 cSUC f1 part cEMPTY c= cCARD * * part cINSERT cvector_neg * f0 f1 * * part cINSERT cvector_neg * f0 cSUC f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0
+ |- ((!e. ((?x. ((x IN UNIV) /\ (e = ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))) ==> (!e. ((?x. ((x IN UNIV) /\ (e = ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> ! c==> c? / c/\ cIN b1 part cUNIV c= b0 * * part cINSERT * f0 b1 * * part cINSERT * f0 cSUC b1 part cEMPTY c/\ cFINITE b0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c? / c/\ cIN b1 part cUNIV c= b0 * * part cINSERT cvector_neg * f0 b1 * * part cINSERT cvector_neg * f0 cSUC b1 part cEMPTY c/\ cFINITE b0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0
+ (FINITE ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))) |- ((CARD ((IMAGE (\x. (vector_neg x))) ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY)))) = (CARD ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))))
T c==> cFINITE * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c= cCARD * * part cIMAGE / cvector_neg b0 * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY cCARD * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY
+ (!e. ((?x. ((x IN UNIV) /\ (e = ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))), (?x'. ((x' IN UNIV) /\ (((vv x) INSERT ((vv (SUC x)) INSERT EMPTY)) = ((vv x') INSERT ((vv (SUC x')) INSERT EMPTY))))) |- ((?x'. ((x' IN UNIV) /\ (((vv x) INSERT ((vv (SUC x)) INSERT EMPTY)) = ((vv x') INSERT ((vv (SUC x')) INSERT EMPTY))))) /\ ((FINITE ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))) /\ ((CARD ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! c==> c? / c/\ cIN b1 part cUNIV c= b0 * * part cINSERT * f0 b1 * * part cINSERT * f0 cSUC b1 part cEMPTY c/\ cFINITE b0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 c==> c? / c/\ cIN b0 part cUNIV c= * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY c/\ c? / c/\ cIN b0 part cUNIV c= * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY c/\ cFINITE * * part cINSERT cvector_neg * f0 f1 * * part cINSERT cvector_neg * f0 cSUC f1 part cEMPTY c= cCARD * * part cINSERT cvector_neg * f0 f1 * * part cINSERT cvector_neg * f0 cSUC f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0
- (!e. ((?x. ((x IN UNIV) /\ (e = ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))) |- ((\e. ((?x. ((x IN UNIV) /\ (e = ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))) e)
T c==> ! c==> c? / c/\ cIN b1 part cUNIV c= b0 * * part cINSERT * f0 b1 * * part cINSERT * f0 cSUC b1 part cEMPTY c/\ cFINITE b0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 * / c==> c? / c/\ cIN b1 part cUNIV c= b0 * * part cINSERT * f0 b1 * * part cINSERT * f0 cSUC b1 part cEMPTY c/\ cFINITE b0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 f1
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ (!e. ((?x. ((x IN UNIV) /\ (e = ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))) |- (((?x. ((x IN UNIV) /\ (e = ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0)))))) = T)
T c==> ! c==> c? / c/\ cIN b1 part cUNIV c= b0 * * part cINSERT * f0 b1 * * part cINSERT * f0 cSUC b1 part cEMPTY c/\ cFINITE b0 c= cCARD b0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c? / c/\ cIN b0 part cUNIV c= f1 * * part cINSERT cvector_neg * f0 b0 * * part cINSERT cvector_neg * f0 cSUC b0 part cEMPTY c/\ cFINITE f1 c= cCARD f1 cNUMERAL cBIT0 cBIT1 c_0 cT
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((\f. (((IMAGE f) s) = (GSPEC (\GEN%PVAR%7. (?y. (((SETSPEC GEN%PVAR%7) (?x. ((x IN s) /\ (y = (f x))))) y)))))) f)
T * / c= * * part cIMAGE b0 f0 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ cIN b3 f0 c= b2 * b0 b3 b2 f1
+ ((\x. ((x IN UNIV) /\ (e = ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY))))) x) |- ((((x IN UNIV) /\ (e = ((vector_neg (vv x)) INSERT ((vector_neg (vv (SUC x))) INSERT EMPTY)))) ==> ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0)))))) = ((FINITE e) /\ ((CARD e) = (NUMERAL (BIT0 (BIT1 _0))))))
T c==> * / c/\ cIN b0 part cUNIV c= f0 * * part cINSERT cvector_neg * f1 b0 * * part cINSERT cvector_neg * f1 cSUC b0 part cEMPTY f2 c= c==> c/\ cIN f2 part cUNIV c= f0 * * part cINSERT cvector_neg * f1 f2 * * part cINSERT cvector_neg * f1 cSUC f2 part cEMPTY c/\ cFINITE f0 c= cCARD f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ cFINITE f0 c= cCARD f0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- (((!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- (((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- |- ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))
T c= cIN f0 * part cGSPEC / * f1 * part cSETSPEC b0 * f1 / / c/\ b0 c= f0 b1
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- (FINITE ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))) |- ((FINITE ((vv x) INSERT ((vv (SUC x)) INSERT EMPTY))) = T)
T c==> cFINITE * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c= cFINITE * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY cT
- (FINITE A) |- ((FINITE A) /\ ((CARD ((IMAGE (\x. (vector_neg x))) A)) = (CARD A)))
T c==> cFINITE f0 c/\ cFINITE f0 c= cCARD * * part cIMAGE / cvector_neg b0 f0 cCARD f0
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- |- (((\i. (f i)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
