N Reduction3.flatten_rcons_flatten
C |- (!A. (!B. ((flatten ((rcons A) (flatten B))) = (flatten ((CONS (flatten A)) B)))))
T c= cflatten crcons f0 cflatten f1 cflatten cCONS cflatten f0 f1
D TRUTH
A |- T
T cT
D list_INDUCT
A |- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x))))
T c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0
D APPEND
A |- ((!l. (((APPEND NIL) l) = l)) /\ (!h. (!t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))))))
T c/\ ! c= cAPPEND cNIL b0 b0 ! ! ! c= cAPPEND cCONS b0 b1 b2 cCONS b0 cAPPEND b1 b2
D APPEND_NIL
A |- (!l. (((APPEND l) NIL) = l))
T c= cAPPEND f0 cNIL f0
D APPEND_ASSOC
A |- (!l. (!m. (!n. (((APPEND l) ((APPEND m) n)) = ((APPEND ((APPEND l) m)) n)))))
T c= cAPPEND f0 cAPPEND f1 f2 cAPPEND cAPPEND f0 f1 f2
D Seq.rcons
A |- (!x. (!t. (!z. ((((rcons NIL) z) = ((CONS z) NIL)) /\ (((rcons ((CONS x) t)) z) = ((CONS x) ((rcons t) z)))))))
T c/\ c= crcons cNIL f0 cCONS f0 cNIL c= crcons cCONS f1 f2 f0 cCONS f1 crcons f2 f0
D Tame_list.concat_flatten
A |- (!x. (!xs. (((flatten NIL) = NIL) /\ ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs))))))
T c/\ c= cflatten cNIL cNIL c= cflatten cCONS f0 f1 cAPPEND f0 cflatten f1
+ |- (T = (!B. ((flatten ((rcons NIL) (flatten B))) = (flatten ((CONS (flatten NIL)) B)))))
T c= cT ! c= cflatten crcons cNIL cflatten b0 cflatten cCONS cflatten cNIL b0
+ |- (((rcons ((CONS x) t)) z) = ((CONS x) ((rcons t) z)))
T c= crcons cCONS f0 f1 f2 cCONS f0 crcons f1 f2
+ (!B. ((flatten ((rcons t) (flatten B))) = (flatten ((CONS (flatten t)) B)))) |- ((flatten ((rcons t) (flatten B))) = (flatten ((CONS (flatten t)) B)))
T c==> ! c= cflatten crcons f0 cflatten b0 cflatten cCONS cflatten f0 b0 c= cflatten crcons f0 cflatten f1 cflatten cCONS cflatten f0 f1
+ |- ((flatten NIL) = NIL)
T c= cflatten cNIL cNIL
+ |- ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs)))
T c= cflatten cCONS f0 f1 cAPPEND f0 cflatten f1
+ |- ((!B. t) = t)
T c= ! f0 f0
+ |- (((!B. ((flatten ((rcons t) (flatten B))) = (flatten ((CONS (flatten t)) B)))) ==> (!B. ((flatten ((rcons ((CONS h) t)) (flatten B))) = (flatten ((CONS (flatten ((CONS h) t))) B))))) = T)
T c= c==> ! c= cflatten crcons f0 cflatten b0 cflatten cCONS cflatten f0 b0 ! c= cflatten crcons cCONS f1 f0 cflatten b0 cflatten cCONS cflatten cCONS f1 f0 b0 cT
- |- ((\l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))) l)
T * / c= cAPPEND cCONS f0 f1 b0 cCONS f0 cAPPEND f1 b0 f2
- |- (((!h. (!t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))))) ==> ((\h. (!t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))))) h)) = ((\h. (!t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))))) h))
T c= c==> ! ! ! c= cAPPEND cCONS b0 b1 b2 cCONS b0 cAPPEND b1 b2 * / ! ! c= cAPPEND cCONS b0 b1 b2 cCONS b0 cAPPEND b1 b2 f0 * / ! ! c= cAPPEND cCONS b0 b1 b2 cCONS b0 cAPPEND b1 b2 f0
- |- (((!t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l))))) ==> ((\t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l))))) t)) = ((\t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l))))) t))
T c= c==> ! ! c= cAPPEND cCONS f0 b0 b1 cCONS f0 cAPPEND b0 b1 * / ! c= cAPPEND cCONS f0 b0 b1 cCONS f0 cAPPEND b0 b1 f1 * / ! c= cAPPEND cCONS f0 b0 b1 cCONS f0 cAPPEND b0 b1 f1
- |- ((\h. (!t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))))) h)
T * / ! ! c= cAPPEND cCONS b0 b1 b2 cCONS b0 cAPPEND b1 b2 f0
- |- (((!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))) ==> ((\l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))) l)) = ((\l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))) l))
T c= c==> ! c= cAPPEND cCONS f0 f1 b0 cCONS f0 cAPPEND f1 b0 * / c= cAPPEND cCONS f0 f1 b0 cCONS f0 cAPPEND f1 b0 f2 * / c= cAPPEND cCONS f0 f1 b0 cCONS f0 cAPPEND f1 b0 f2
- |- (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))
T c= cAPPEND cCONS f0 f1 f2 cCONS f0 cAPPEND f1 f2
- |- ((\t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l))))) t)
T * / ! c= cAPPEND cCONS f0 b0 b1 cCONS f0 cAPPEND b0 b1 f1
