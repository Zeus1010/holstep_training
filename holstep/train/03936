N COMPLEX_DERIVATIVE_JACOBIAN
C |- (!f. (!z. (((complex_differentiable f) (at z)) ==> (((complex_derivative f) z) = (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))))))
T c==> ccomplex_differentiable f0 cat f1 c= ccomplex_derivative f0 f1 ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D FUN_EQ_THM
A |- (!f. (!g. ((f = g) = (!x. ((f x) = (g x))))))
T c= c= f0 f1 ! c= * f0 b0 * f1 b0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_NEG_MINUS1
A |- (!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)))
T c= creal_neg f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D DIMINDEX_2
A |- ((dimindex UNIV) = (NUMERAL (BIT0 (BIT1 _0))))
T c= cdimindex part cUNIV cNUMERAL cBIT0 cBIT1 c_0
D FORALL_2
A |- (!P. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (P i))) = ((P (NUMERAL (BIT1 _0))) /\ (P (NUMERAL (BIT0 (BIT1 _0)))))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT0 cBIT1 c_0 * f0 b0 c/\ * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0
D SUM_2
A |- (!t. (((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT0 (BIT1 _0))))) t) = ((real_add (t (NUMERAL (BIT1 _0)))) (t (NUMERAL (BIT0 (BIT1 _0)))))))
T c= csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 f0 creal_add * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0
D matrix_vector_mul
A |- (!A. (!x. (((matrix_vector_mul A) x) = (lambdai. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\j. ((real_mul ((A $ i) $ j)) (x $ j))))))))
T c= cmatrix_vector_mul f0 f1 clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ f1 b1
D JACOBIAN_WORKS
A |- (!f. (!net. (((differentiable f) net) = (((has_derivative f) (\h. ((matrix_vector_mul ((jacobian f) net)) h))) net))))
T c= cdifferentiable f0 f1 chas_derivative f0 / cmatrix_vector_mul cjacobian f0 f1 b0 f1
D RE_DEF
A |- (!z. ((Re z) = (z $ (NUMERAL (BIT1 _0)))))
T c= cRe f0 c$ f0 cNUMERAL cBIT1 c_0
D IM_DEF
A |- (!z. ((Im z) = (z $ (NUMERAL (BIT0 (BIT1 _0))))))
T c= cIm f0 c$ f0 cNUMERAL cBIT0 cBIT1 c_0
D complex_mul
A |- (!w. (!z. (((complex_mul w) z) = (complex (((real_sub ((real_mul (Re w)) (Re z))) ((real_mul (Im w)) (Im z))) , ((real_add ((real_mul (Re w)) (Im z))) ((real_mul (Im w)) (Re z))))))))
T c= ccomplex_mul f0 f1 ccomplex c, creal_sub creal_mul cRe f0 cRe f1 creal_mul cIm f0 cIm f1 creal_add creal_mul cRe f0 cIm f1 creal_mul cIm f0 cRe f1
D RE
A |- ((Re (complex (x , y))) = x)
T c= cRe ccomplex c, f0 f1 f0
D IM
A |- ((Im (complex (x , y))) = y)
T c= cIm ccomplex c, f0 f1 f1
D has_complex_derivative
A |- (!f. (!f'. (!net. ((((has_complex_derivative f) f') net) = (((has_derivative f) (\x. ((complex_mul f') x))) net)))))
T c= chas_complex_derivative f0 f1 f2 chas_derivative f0 / ccomplex_mul f1 b0 f2
D COMPLEX_DERIVATIVE_UNIQUE_AT
A |- (!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f''))))))
T c==> c/\ chas_complex_derivative f0 f1 cat f2 chas_complex_derivative f0 f3 cat f2 c= f1 f3
D HAS_COMPLEX_DERIVATIVE_DIFFERENTIABLE
A |- (!f. (!x. ((((has_complex_derivative f) ((complex_derivative f) x)) (at x)) = ((complex_differentiable f) (at x)))))
T c= chas_complex_derivative f0 ccomplex_derivative f0 f1 cat f1 ccomplex_differentiable f0 cat f1
D CAUCHY_RIEMANN
A |- (!f. (!z. (((complex_differentiable f) (at z)) = (((differentiable f) (at z)) /\ ((((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) /\ (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))))))))
T c= ccomplex_differentiable f0 cat f1 c/\ cdifferentiable f0 cat f1 c/\ c= c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\j. ((real_mul ((((jacobian f) (at z)) $ i) $ j)) (x $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul ((((jacobian f) (at z)) $ i) $ x)) (x $ x)))))
T c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cjacobian f0 cat f1 f2 b0 c$ f3 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cjacobian f0 cat f1 f2 b0 c$ f3 b0
- (((NUMERAL (BIT1 _0)) <= j) /\ (j <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= j) /\ (j <= (dimindex UNIV))) /\ (((real_mul ((((jacobian f) (at z)) $ i) $ j)) (x $ j)) = ((real_mul ((((jacobian f) (at z)) $ i) $ j)) (x $ j))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ c$ cjacobian f1 cat f2 f3 f0 c$ f4 f0 creal_mul c$ c$ cjacobian f1 cat f2 f3 f0 c$ f4 f0
- |- ((\m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) m)
T * / ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 f0
- |- (((!n. (((BIT0 n) + _0) = (BIT0 n))) ==> ((\n. (((BIT0 n) + _0) = (BIT0 n))) n)) = ((\n. (((BIT0 n) + _0) = (BIT0 n))) n))
T c= c==> ! c= c+ cBIT0 b0 c_0 cBIT0 b0 * / c= c+ cBIT0 b0 c_0 cBIT0 b0 f0 * / c= c+ cBIT0 b0 c_0 cBIT0 b0 f0
+ |- (((!net. (((differentiable f) net) = (((has_derivative f) (\h. ((matrix_vector_mul ((jacobian f) net)) h))) net))) ==> ((\net. (((differentiable f) net) = (((has_derivative f) (\h. ((matrix_vector_mul ((jacobian f) net)) h))) net))) net)) = ((\net. (((differentiable f) net) = (((has_derivative f) (\h. ((matrix_vector_mul ((jacobian f) net)) h))) net))) net))
T c= c==> ! c= cdifferentiable f0 b0 chas_derivative f0 / cmatrix_vector_mul cjacobian f0 b0 b1 b0 * / c= cdifferentiable f0 b0 chas_derivative f0 / cmatrix_vector_mul cjacobian f0 b0 b1 b0 f1 * / c= cdifferentiable f0 b0 chas_derivative f0 / cmatrix_vector_mul cjacobian f0 b0 b1 b0 f1
+ |- (((!z. ((z $ (NUMERAL (BIT1 _0))) = (Re z))) ==> ((\z. ((z $ (NUMERAL (BIT1 _0))) = (Re z))) z)) = ((\z. ((z $ (NUMERAL (BIT1 _0))) = (Re z))) z))
T c= c==> ! c= c$ b0 cNUMERAL cBIT1 c_0 cRe b0 * / c= c$ b0 cNUMERAL cBIT1 c_0 cRe b0 f0 * / c= c$ b0 cNUMERAL cBIT1 c_0 cRe b0 f0
- |- (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))
T c= cEXP cBIT0 f0 cBIT0 f1 c* cEXP cBIT0 f0 f1 cEXP cBIT0 f0 f1
- |- (((!m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) ==> ((\m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) m)) = ((\m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) m))
T c= c==> ! ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 * / ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 f0 * / ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 f0
- |- ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))
T c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- |- (((!n. (((BIT1 n) * _0) = _0)) ==> ((\n. (((BIT1 n) * _0) = _0)) n)) = ((\n. (((BIT1 n) * _0) = _0)) n))
T c= c==> ! c= c* cBIT1 b0 c_0 c_0 * / c= c* cBIT1 b0 c_0 c_0 f0 * / c= c* cBIT1 b0 c_0 c_0 f0
- |- (((BIT0 m) = (BIT1 n)) = F)
T c= c= cBIT0 f0 cBIT1 f1 cF
- |- (((!n. (((BIT0 n) * _0) = _0)) ==> ((\n. (((BIT0 n) * _0) = _0)) n)) = ((\n. (((BIT0 n) * _0) = _0)) n))
T c= c==> ! c= c* cBIT0 b0 c_0 c_0 * / c= c* cBIT0 b0 c_0 c_0 f0 * / c= c* cBIT0 b0 c_0 c_0 f0
- |- (((!n. ((BIT1 n) > _0)) ==> ((\n. ((BIT1 n) > _0)) n)) = ((\n. ((BIT1 n) > _0)) n))
T c= c==> ! c> cBIT1 b0 c_0 * / c> cBIT1 b0 c_0 f0 * / c> cBIT1 b0 c_0 f0
- |- (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))
T c= c+ cBIT0 f0 cBIT1 f1 cBIT1 c+ f0 f1
+ |- ((((\z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z)))) z) ==> ((!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) ==> (f' = f''))) = T)
T c= c==> * / c/\ chas_complex_derivative f0 f1 cat b0 chas_complex_derivative f0 f2 cat b0 f3 c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c= f1 f2 cT
- |- ((SUC _0) = (BIT1 _0))
T c= cSUC c_0 cBIT1 c_0
+ ((z $ (NUMERAL (BIT0 (BIT1 _0)))) = (Im z)) |- ((Im z) = (z $ (NUMERAL (BIT0 (BIT1 _0)))))
T c==> c= c$ f0 cNUMERAL cBIT0 cBIT1 c_0 cIm f0 c= cIm f0 c$ f0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) ==> ((\m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) m)) = ((\m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) m))
T c= c==> ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 * / ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 f0 * / ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 f0
- |- ((_0 <= (BIT0 n)) = T)
T c= c<= c_0 cBIT0 f0 cT
- |- (((BIT1 m) = (BIT0 n)) = F)
T c= c= cBIT1 f0 cBIT0 f1 cF
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((real_add ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x) $ i)) = (((real_add ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= creal_add creal_mul c$ c$ cjacobian f1 cat f2 f0 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cjacobian f1 cat f2 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ f3 cNUMERAL cBIT0 cBIT1 c_0 c$ ccomplex_mul ccomplex c, c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f3 f0 c= creal_add creal_mul c$ c$ cjacobian f1 cat f2 f0 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cjacobian f1 cat f2 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ f3 cNUMERAL cBIT0 cBIT1 c_0 c$ ccomplex_mul ccomplex c, c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f3 f0
- |- ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))))))
T c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
- |- (((PRE _0) = _0) /\ ((!n. ((PRE (BIT0 n)) = (((COND (n = _0)) _0) (BIT1 (PRE n))))) /\ (!n. ((PRE (BIT1 n)) = (BIT0 n)))))
T c/\ c= cPRE c_0 c_0 c/\ ! c= cPRE cBIT0 b0 cCOND c= b0 c_0 c_0 cBIT1 cPRE b0 ! c= cPRE cBIT1 b0 cBIT0 b0
- |- (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n))))
T c= c* cBIT0 f0 cBIT0 f1 cBIT0 cBIT0 c* f0 f1
- |- (((((NUMERAL (BIT1 _0)) <= j) /\ (j <= (dimindex UNIV))) ==> (((real_mul ((((jacobian f) (at z)) $ i) $ j)) (x $ j)) = ((real_mul ((((jacobian f) (at z)) $ i) $ j)) (x $ j)))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ c$ cjacobian f1 cat f2 f3 f0 c$ f4 f0 creal_mul c$ c$ cjacobian f1 cat f2 f3 f0 c$ f4 f0 cT
+ |- (((!z. ((z $ (NUMERAL (BIT0 (BIT1 _0)))) = (Im z))) ==> ((\z. ((z $ (NUMERAL (BIT0 (BIT1 _0)))) = (Im z))) z)) = ((\z. ((z $ (NUMERAL (BIT0 (BIT1 _0)))) = (Im z))) z))
T c= c==> ! c= c$ b0 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 * / c= c$ b0 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 f0 * / c= c$ b0 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 f0
+ (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))), (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) |- ((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) = (\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)))
T c==> c= c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c= / cmatrix_vector_mul cjacobian f0 cat f1 b0 / ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0
- |- ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))))
T c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- (((BIT1 m) < (BIT0 n)) = (m < n))
T c= c< cBIT1 f0 cBIT0 f1 c< f0 f1
+ |- ((\x. ((((has_complex_derivative f) ((complex_derivative f) x)) (at x)) = ((complex_differentiable f) (at x)))) x)
T * / c= chas_complex_derivative f0 ccomplex_derivative f0 b0 cat b0 ccomplex_differentiable f0 cat b0 f1
- |- ((\m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) m)
T * / ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 f0
- |- (((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) ==> ((\m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) m)) = ((\m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) m))
T c= c==> ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 * / ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 f0 * / ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 f0
+ |- (((!z. (((complex_differentiable f) (at z)) = (((differentiable f) (at z)) /\ ((((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) /\ (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))))))) ==> ((\z. (((complex_differentiable f) (at z)) = (((differentiable f) (at z)) /\ ((((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) /\ (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))))))) z)) = ((\z. (((complex_differentiable f) (at z)) = (((differentiable f) (at z)) /\ ((((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) /\ (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))))))) z))
T c= c==> ! c= ccomplex_differentiable f0 cat b0 c/\ cdifferentiable f0 cat b0 c/\ c= c$ c$ cjacobian f0 cat b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat b0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ c$ cjacobian f0 cat b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cjacobian f0 cat b0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 * / c= ccomplex_differentiable f0 cat b0 c/\ cdifferentiable f0 cat b0 c/\ c= c$ c$ cjacobian f0 cat b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat b0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ c$ cjacobian f0 cat b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cjacobian f0 cat b0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 * / c= ccomplex_differentiable f0 cat b0 c/\ cdifferentiable f0 cat b0 c/\ c= c$ c$ cjacobian f0 cat b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat b0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ c$ cjacobian f0 cat b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cjacobian f0 cat b0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f1
- |- ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))
T c= cEXP c_0 cBIT0 f0 c* cEXP c_0 f0 cEXP c_0 f0
+ (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))), (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))), ((differentiable f) (at z)) |- (((has_derivative f) (\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x))) (at z))
T c==> c= c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c==> cdifferentiable f0 cat f1 chas_derivative f0 / ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 cat f1
+ |- (((!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) ==> (!f'. (!f''. ((?f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) ==> (f' = f''))))) = (!f'. (!f''. ((?f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) ==> (f' = f'')))))
T c= c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 ! ! c==> c? / c? / c/\ chas_complex_derivative b2 b0 cat b3 chas_complex_derivative b2 b1 cat b3 c= b0 b1 ! ! c==> c? / c? / c/\ chas_complex_derivative b2 b0 cat b3 chas_complex_derivative b2 b1 cat b3 c= b0 b1
- |- (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))
T c= cEXP cNUMERAL f0 cNUMERAL f1 cNUMERAL cEXP f0 f1
+ ((Re z) = (z $ (NUMERAL (BIT1 _0)))) |- ((z $ (NUMERAL (BIT1 _0))) = (Re z))
T c==> c= cRe f0 c$ f0 cNUMERAL cBIT1 c_0 c= c$ f0 cNUMERAL cBIT1 c_0 cRe f0
- |- (((!n. ((SUC (BIT0 n)) = (BIT1 n))) ==> ((\n. ((SUC (BIT0 n)) = (BIT1 n))) n)) = ((\n. ((SUC (BIT0 n)) = (BIT1 n))) n))
T c= c==> ! c= cSUC cBIT0 b0 cBIT1 b0 * / c= cSUC cBIT0 b0 cBIT1 b0 f0 * / c= cSUC cBIT0 b0 cBIT1 b0 f0
- |- ((!n. ((EVEN (BIT0 n)) = T)) /\ (!n. ((EVEN (BIT1 n)) = F)))
T c/\ ! c= cEVEN cBIT0 b0 cT ! c= cEVEN cBIT1 b0 cF
- |- (((!n. ((ODD (BIT0 n)) = F)) ==> ((\n. ((ODD (BIT0 n)) = F)) n)) = ((\n. ((ODD (BIT0 n)) = F)) n))
T c= c==> ! c= cODD cBIT0 b0 cF * / c= cODD cBIT0 b0 cF f0 * / c= cODD cBIT0 b0 cF f0
- |- ((\m. (((BIT1 m) EXP _0) = (BIT1 _0))) m)
T * / c= cEXP cBIT1 b0 c_0 cBIT1 c_0 f0
- |- (((!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) ==> ((\n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) n)) = ((\n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) n))
T c= c==> ! c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 * / c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1 * / c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1
+ |- ((((has_derivative f) (\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x))) (at z)) = (((has_complex_derivative f) (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) (at z)))
T c= chas_derivative f0 / ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 cat f1 chas_complex_derivative f0 ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cat f1
+ |- (((!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i))) = (p' ==> q'))))) ==> ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i))) = (p' ==> q'))))) q')) = ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ * / cmatrix_vector_mul cjacobian f2 cat f3 b1 f4 f0 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f2 cat f3 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f2 cat f3 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b1 f4 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ * / cmatrix_vector_mul cjacobian f2 cat f3 b1 f4 f0 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f2 cat f3 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f2 cat f3 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b1 f4 f0 c==> f1 b0 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ * / cmatrix_vector_mul cjacobian f2 cat f3 b1 f4 f0 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f2 cat f3 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f2 cat f3 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b1 f4 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ * / cmatrix_vector_mul cjacobian f2 cat f3 b1 f4 f0 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f2 cat f3 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f2 cat f3 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b1 f4 f0 c==> f1 b0 f5 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ * / cmatrix_vector_mul cjacobian f2 cat f3 b1 f4 f0 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f2 cat f3 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f2 cat f3 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b1 f4 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ * / cmatrix_vector_mul cjacobian f2 cat f3 b1 f4 f0 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f2 cat f3 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f2 cat f3 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b1 f4 f0 c==> f1 b0 f5
- |- (((!n. ((_0 * (BIT0 n)) = _0)) ==> ((\n. ((_0 * (BIT0 n)) = _0)) n)) = ((\n. ((_0 * (BIT0 n)) = _0)) n))
T c= c==> ! c= c* c_0 cBIT0 b0 c_0 * / c= c* c_0 cBIT0 b0 c_0 f0 * / c= c* c_0 cBIT0 b0 c_0 f0
- |- (((!n. ((EVEN (BIT1 n)) = F)) ==> ((\n. ((EVEN (BIT1 n)) = F)) n)) = ((\n. ((EVEN (BIT1 n)) = F)) n))
T c= c==> ! c= cEVEN cBIT1 b0 cF * / c= cEVEN cBIT1 b0 cF f0 * / c= cEVEN cBIT1 b0 cF f0
- |- (((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) ==> ((\m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) m)) = ((\m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) m))
T c= c==> ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 * / ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 f0 * / ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 f0
- |- (((!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) ==> ((\m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) m)) = ((\m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) m))
T c= c==> ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 * / ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0 * / ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q')))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ * / cmatrix_vector_mul cjacobian f1 cat f2 b0 f3 f0 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 f3 f0 f4 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ * / cmatrix_vector_mul cjacobian f1 cat f2 b0 f3 f0 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 f3 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f4
- |- ((\n. (((BIT0 m) < (BIT0 n)) = (m < n))) n)
T * / c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 f1
- |- ((\n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))) n)
T * / c= c* cNUMERAL f0 cNUMERAL b0 cNUMERAL c* f0 b0 f1
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((NUMERAL (BIT1 _0)) <= i) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c<= cNUMERAL cBIT1 c_0 f0 cT
- |- ((\n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) n)
T * / c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 f0
- |- ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))
T c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- |- ((!n. ((_0 >= (BIT0 n)) = (_0 >= n))) /\ ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))))))
T c/\ ! c= c>= c_0 cBIT0 b0 c>= c_0 b0 c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
+ (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))), (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) |- ((!x. ((((real_add ((real_mul ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT1 _0))))) ((real_mul (real_neg ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x) $ (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_mul ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_mul ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x) $ (NUMERAL (BIT0 (BIT1 _0))))))) = ((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) = (\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x))))
T c==> c= c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c= ! c/\ c= creal_add creal_mul c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_neg c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT0 cBIT1 c_0 c$ ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 c_0 c= creal_add creal_mul c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ b0 cNUMERAL cBIT0 cBIT1 c_0 c$ ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT0 cBIT1 c_0 c= / cmatrix_vector_mul cjacobian f0 cat f1 b0 / ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0
- |- ((_0 < _0) = F)
T c= c< c_0 c_0 cF
- |- (((!n. (((BIT1 n) < _0) = F)) ==> ((\n. (((BIT1 n) < _0) = F)) n)) = ((\n. (((BIT1 n) < _0) = F)) n))
T c= c==> ! c= c< cBIT1 b0 c_0 cF * / c= c< cBIT1 b0 c_0 cF f0 * / c= c< cBIT1 b0 c_0 cF f0
- |- ((_0 + (BIT0 n)) = (BIT0 n))
T c= c+ c_0 cBIT0 f0 cBIT0 f0
- |- ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))
T c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))
T c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- |- ((\n. ((BIT0 n) >= _0)) n)
T * / c>= cBIT0 b0 c_0 f0
+ |- ((!x. ((((real_add ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (real_neg (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0))))))) (Im x))) = ((real_sub ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x)))) /\ (((real_add ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x))) = ((real_add ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x))) ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x)))))) = ((!x. (((real_add ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (real_neg (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0))))))) (Im x))) = ((real_sub ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x))))) /\ (!x. (((real_add ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x))) = ((real_add ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x))) ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x)))))))
T c= ! c/\ c= creal_add creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul creal_neg cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_sub creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 c= creal_add creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_add creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 c/\ ! c= creal_add creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul creal_neg cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_sub creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 ! c= creal_add creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_add creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0
- |- (((BIT1 n) - _0) = (BIT1 n))
T c= c- cBIT1 f0 c_0 cBIT1 f0
+ (!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) |- ((?f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) ==> (f' = f''))
T c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c==> c? / c? / c/\ chas_complex_derivative b0 f0 cat b1 chas_complex_derivative b0 f1 cat b1 c= f0 f1
- |- (((!n. ((_0 - (BIT0 n)) = _0)) ==> ((\n. ((_0 - (BIT0 n)) = _0)) n)) = ((\n. ((_0 - (BIT0 n)) = _0)) n))
T c= c==> ! c= c- c_0 cBIT0 b0 c_0 * / c= c- c_0 cBIT0 b0 c_0 f0 * / c= c- c_0 cBIT0 b0 c_0 f0
+ |- ((\net. ((((has_complex_derivative f) f') net) = (((has_derivative f) (\x. ((complex_mul f') x))) net))) net)
T * / c= chas_complex_derivative f0 f1 b0 chas_derivative f0 / ccomplex_mul f1 b1 b0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) ==> ((\n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) n)) = ((\n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) n))
T c= c==> ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 * / c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 f0 * / c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 f0
- |- ((\m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) m)
T * / ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- |- ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))))))
T c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- |- (((!n. (((BIT1 n) <= _0) = F)) ==> ((\n. (((BIT1 n) <= _0) = F)) n)) = ((\n. (((BIT1 n) <= _0) = F)) n))
T c= c==> ! c= c<= cBIT1 b0 c_0 cF * / c= c<= cBIT1 b0 c_0 cF f0 * / c= c<= cBIT1 b0 c_0 cF f0
- |- ((\n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) n)
T * / c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 f1
- |- ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))
T c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((\n. (~ (_0 >= (BIT1 n)))) n)
T * / c~ c>= c_0 cBIT1 b0 f0
- |- (((!n. ((_0 + (BIT0 n)) = (BIT0 n))) ==> ((\n. ((_0 + (BIT0 n)) = (BIT0 n))) n)) = ((\n. ((_0 + (BIT0 n)) = (BIT0 n))) n))
T c= c==> ! c= c+ c_0 cBIT0 b0 cBIT0 b0 * / c= c+ c_0 cBIT0 b0 cBIT0 b0 f0 * / c= c+ c_0 cBIT0 b0 cBIT0 b0 f0
- |- (((!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) ==> ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n)) = ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n))
T c= c==> ! c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1 * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1
- |- (((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) ==> ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m)) = ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m))
T c= c==> ! ! c= c= cBIT1 b0 cBIT0 b1 cF * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0 * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0
+ |- ((\f. (!net. (((differentiable f) net) = (((has_derivative f) (\h. ((matrix_vector_mul ((jacobian f) net)) h))) net)))) f)
T * / ! c= cdifferentiable b0 b1 chas_derivative b0 / cmatrix_vector_mul cjacobian b0 b1 b2 b1 f0
- |- ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n)
T * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x) $ i)))) = ((((real_add ((real_mul ((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_mul ((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x) $ (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_mul ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_mul ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x) $ (NUMERAL (BIT0 (BIT1 _0)))))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cjacobian f0 cat f1 b0 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cjacobian f0 cat f1 b0 cNUMERAL cBIT0 cBIT1 c_0 c$ f2 cNUMERAL cBIT0 cBIT1 c_0 c$ ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f2 b0 c/\ c= creal_add creal_mul c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ f2 cNUMERAL cBIT0 cBIT1 c_0 c$ ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f2 cNUMERAL cBIT1 c_0 c= creal_add creal_mul c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ f2 cNUMERAL cBIT0 cBIT1 c_0 c$ ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f2 cNUMERAL cBIT0 cBIT1 c_0
- |- ((SUC (BIT1 n)) = (BIT0 (SUC n)))
T c= cSUC cBIT1 f0 cBIT0 cSUC f0
+ |- ((((complex_differentiable f) (at z)) ==> (((complex_derivative f) z) = (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))))) = T)
T c= c==> ccomplex_differentiable f0 cat f1 c= ccomplex_derivative f0 f1 ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cT
- |- (((BIT1 m) < (BIT1 n)) = (m < n))
T c= c< cBIT1 f0 cBIT1 f1 c< f0 f1
+ ((differentiable f) (at z)) |- (((((has_derivative f) (\h. ((matrix_vector_mul ((jacobian f) (at z))) h))) (at z)) ==> (((has_derivative f) (\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x))) (at z))) = (((has_derivative f) (\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x))) (at z)))
T c==> cdifferentiable f0 cat f1 c= c==> chas_derivative f0 / cmatrix_vector_mul cjacobian f0 cat f1 b0 cat f1 chas_derivative f0 / ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 cat f1 chas_derivative f0 / ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 cat f1
+ |- ((\f'. (!f''. ((?f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) ==> (f' = f'')))) f')
T * / ! c==> c? / c? / c/\ chas_complex_derivative b2 b0 cat b3 chas_complex_derivative b2 b1 cat b3 c= b0 b1 f0
+ |- ((\t. (((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT0 (BIT1 _0))))) t) = ((real_add (t (NUMERAL (BIT1 _0)))) (t (NUMERAL (BIT0 (BIT1 _0))))))) t)
T * / c= csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 b0 creal_add * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 f0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m)
T * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0
- |- (((!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) ==> ((\m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) m)) = ((\m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) m))
T c= c==> ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- |- ((NUMERAL (NUMERAL _0)) = (NUMERAL _0))
T c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0
- |- (((!n. ((PRE (BIT1 n)) = (BIT0 n))) ==> ((\n. ((PRE (BIT1 n)) = (BIT0 n))) n)) = ((\n. ((PRE (BIT1 n)) = (BIT0 n))) n))
T c= c==> ! c= cPRE cBIT1 b0 cBIT0 b0 * / c= cPRE cBIT1 b0 cBIT0 b0 f0 * / c= cPRE cBIT1 b0 cBIT0 b0 f0
+ (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))), (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) |- ((((has_derivative f) (\h. ((matrix_vector_mul ((jacobian f) (at z))) h))) (at z)) ==> (((has_derivative f) (\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x))) (at z)))
T c==> c= c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c==> chas_derivative f0 / cmatrix_vector_mul cjacobian f0 cat f1 b0 cat f1 chas_derivative f0 / ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 cat f1
- |- ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul ((((jacobian f) (at z)) $ i) $ x)) (x $ x)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\j. ((real_mul ((((jacobian f) (at z)) $ i) $ j)) (x $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ cjacobian f0 cat f1 f2 b0 c$ f3 b0 * f4 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cjacobian f0 cat f1 f2 b0 c$ f3 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f4
- |- (((!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) ==> ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n)) = ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n))
T c= c==> ! c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1 * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1
+ ((complex_differentiable f) (at z)) |- (?f'. (?z'. ((((has_complex_derivative f') ((complex_derivative f) z)) (at z')) /\ (((has_complex_derivative f') (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) (at z')))))
T c==> ccomplex_differentiable f0 cat f1 c? / c? / c/\ chas_complex_derivative b0 ccomplex_derivative f0 f1 cat b1 chas_complex_derivative b0 ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cat b1
- |- (((BIT1 m) <= (BIT1 n)) = (m <= n))
T c= c<= cBIT1 f0 cBIT1 f1 c<= f0 f1
+ (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))), ((((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) /\ (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))), ((differentiable f) (at z)) |- (((has_derivative f) (\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x))) (at z))
T c==> c= c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ c= c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> cdifferentiable f0 cat f1 chas_derivative f0 / ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 cat f1
- |- (((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) ==> ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m)) = ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m))
T c= c==> ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0 * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0
+ |- (((!f'. (!net. ((((has_complex_derivative f) f') net) = (((has_derivative f) (\x. ((complex_mul f') x))) net)))) ==> ((\f'. (!net. ((((has_complex_derivative f) f') net) = (((has_derivative f) (\x. ((complex_mul f') x))) net)))) f')) = ((\f'. (!net. ((((has_complex_derivative f) f') net) = (((has_derivative f) (\x. ((complex_mul f') x))) net)))) f'))
T c= c==> ! ! c= chas_complex_derivative f0 b0 b1 chas_derivative f0 / ccomplex_mul b0 b2 b1 * / ! c= chas_complex_derivative f0 b0 b1 chas_derivative f0 / ccomplex_mul b0 b2 b1 f1 * / ! c= chas_complex_derivative f0 b0 b1 chas_derivative f0 / ccomplex_mul b0 b2 b1 f1
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((EVEN _0) = T) /\ ((!n. ((EVEN (BIT0 n)) = T)) /\ (!n. ((EVEN (BIT1 n)) = F))))
T c/\ c= cEVEN c_0 cT c/\ ! c= cEVEN cBIT0 b0 cT ! c= cEVEN cBIT1 b0 cF
- |- (((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) ==> ((\m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) m)) = ((\m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) m))
T c= c==> ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- |- ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul ((((jacobian f) (at z)) $ i) $ x)) (x $ x)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\j. ((real_mul ((((jacobian f) (at z)) $ i) $ j)) (x $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)
T * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ cjacobian f0 cat f1 f2 b1 c$ f3 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cjacobian f0 cat f1 f2 b1 c$ f3 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f4
- |- ((\n. (((BIT0 m) <= (BIT0 n)) = (m <= n))) n)
T * / c= c<= cBIT0 f0 cBIT0 b0 c<= f0 b0 f1
+ |- ((?x. (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))) = ((?x. ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) \/ (?x. ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))))
T c= c? / c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c\/ c? / creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((NUMERAL n) > (NUMERAL m)) = (n > m))
T c= c> cNUMERAL f0 cNUMERAL f1 c> f0 f1
- |- ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))
T c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
- |- (((BIT0 m) < (BIT0 n)) = (m < n))
T c= c< cBIT0 f0 cBIT0 f1 c< f0 f1
- |- ((PRE (NUMERAL n)) = (NUMERAL (PRE n)))
T c= cPRE cNUMERAL f0 cNUMERAL cPRE f0
- (x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) |- ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) = T)
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV cT
+ ((\z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z)))) z) |- ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z)))
T c==> * / c/\ chas_complex_derivative f0 f1 cat b0 chas_complex_derivative f0 f2 cat b0 f3 c/\ chas_complex_derivative f0 f1 cat f3 chas_complex_derivative f0 f2 cat f3
- |- (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))
T c= c+ cBIT1 f0 cBIT1 f1 cBIT0 cSUC c+ f0 f1
- |- (((!n. ((_0 EXP (BIT1 n)) = _0)) ==> ((\n. ((_0 EXP (BIT1 n)) = _0)) n)) = ((\n. ((_0 EXP (BIT1 n)) = _0)) n))
T c= c==> ! c= cEXP c_0 cBIT1 b0 c_0 * / c= cEXP c_0 cBIT1 b0 c_0 f0 * / c= cEXP c_0 cBIT1 b0 c_0 f0
- |- ((!i. t) = t)
T c= ! f0 f0
- |- ((_0 >= (BIT0 n)) = (_0 >= n))
T c= c>= c_0 cBIT0 f0 c>= c_0 f0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ |- ((((~ (!x. ((((real_add ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (real_neg (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0))))))) (Im x))) = ((real_sub ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x)))) /\ (((real_add ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x))) = ((real_add ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x))) ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))))))) ==> F) ==> (!x. ((((real_add ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (real_neg (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0))))))) (Im x))) = ((real_sub ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x)))) /\ (((real_add ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x))) = ((real_add ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x))) ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))))))) = (!x. ((((real_add ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (real_neg (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0))))))) (Im x))) = ((real_sub ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x)))) /\ (((real_add ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x))) = ((real_add ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x))) ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x)))))))
T c= c==> c==> c~ ! c/\ c= creal_add creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul creal_neg cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_sub creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 c= creal_add creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_add creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 cF ! c/\ c= creal_add creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul creal_neg cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_sub creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 c= creal_add creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_add creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 ! c/\ c= creal_add creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul creal_neg cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_sub creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 c= creal_add creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_add creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0
- |- ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul ((((jacobian f) (at z)) $ i) $ x)) (x $ x)) = ((real_mul ((((jacobian f) (at z)) $ i) $ x)) (x $ x))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\j. ((real_mul ((((jacobian f) (at z)) $ i) $ j)) (x $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul ((((jacobian f) (at z)) $ i) $ x)) (x $ x))))))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ cjacobian f0 cat f1 f2 b0 c$ f3 b0 creal_mul c$ c$ cjacobian f0 cat f1 f2 b0 c$ f3 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cjacobian f0 cat f1 f2 b0 c$ f3 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cjacobian f0 cat f1 f2 b0 c$ f3 b0
- |- (((_0 = _0) = T) /\ ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))))))
T c/\ c= c= c_0 c_0 cT c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- (((BIT0 n) - _0) = (BIT0 n))
T c= c- cBIT0 f0 c_0 cBIT0 f0
- (((NUMERAL (BIT1 _0)) <= j) /\ (j <= (dimindex UNIV))) |- (((NUMERAL (BIT1 _0)) <= j) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c<= cNUMERAL cBIT1 c_0 f0 cT
- |- (((!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) ==> ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n)) = ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n))
T c= c==> ! c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1 * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1
+ ((differentiable f) (at z)), ((complex_differentiable f) (at z)) |- (((has_derivative f) (\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x))) (at z))
T c==> cdifferentiable f0 cat f1 c==> ccomplex_differentiable f0 cat f1 chas_derivative f0 / ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 cat f1
- |- ((\m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) m)
T * / ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 f0
- |- (((BIT1 n) <= _0) = F)
T c= c<= cBIT1 f0 c_0 cF
+ |- ((\z. ((z $ (NUMERAL (BIT1 _0))) = (Re z))) z)
T * / c= c$ b0 cNUMERAL cBIT1 c_0 cRe b0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))
T c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ |- ((\f. (!x. ((((has_complex_derivative f) ((complex_derivative f) x)) (at x)) = ((complex_differentiable f) (at x))))) f)
T * / ! c= chas_complex_derivative b0 ccomplex_derivative b0 b1 cat b1 ccomplex_differentiable b0 cat b1 f0
- |- ((\n. (((NUMERAL m) = (NUMERAL n)) = (m = n))) n)
T * / c= c= cNUMERAL f0 cNUMERAL b0 c= f0 b0 f1
+ |- (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> ((!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) ==> (f' = f'')))
T c==> c/\ chas_complex_derivative f0 f1 cat f2 chas_complex_derivative f0 f3 cat f2 c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c= f1 f3
+ |- (((!net. ((((has_complex_derivative f) f') net) = (((has_derivative f) (\x. ((complex_mul f') x))) net))) ==> ((\net. ((((has_complex_derivative f) f') net) = (((has_derivative f) (\x. ((complex_mul f') x))) net))) net)) = ((\net. ((((has_complex_derivative f) f') net) = (((has_derivative f) (\x. ((complex_mul f') x))) net))) net))
T c= c==> ! c= chas_complex_derivative f0 f1 b0 chas_derivative f0 / ccomplex_mul f1 b1 b0 * / c= chas_complex_derivative f0 f1 b0 chas_derivative f0 / ccomplex_mul f1 b1 b0 f2 * / c= chas_complex_derivative f0 f1 b0 chas_derivative f0 / ccomplex_mul f1 b1 b0 f2
- |- ((\n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) n)
T * / c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 f1
- |- ((\n. ((EVEN (BIT0 n)) = T)) n)
T * / c= cEVEN cBIT0 b0 cT f0
- |- ((_0 + _0) = _0)
T c= c+ c_0 c_0 c_0
- |- (((!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) ==> ((\n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) n)) = ((\n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) n))
T c= c==> ! c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 * / c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 f1 * / c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 f1
- |- ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))))
T c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((_0 * (BIT0 n)) = _0)
T c= c* c_0 cBIT0 f0 c_0
- |- (((!n. (((BIT0 n) > (BIT1 m)) = (n > m))) ==> ((\n. (((BIT0 n) > (BIT1 m)) = (n > m))) n)) = ((\n. (((BIT0 n) > (BIT1 m)) = (n > m))) n))
T c= c==> ! c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 * / c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 f1 * / c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 f1
- |- (((BIT0 n) >= (BIT0 m)) = (n >= m))
T c= c>= cBIT0 f0 cBIT0 f1 c>= f0 f1
- ((a = b) ==> (a ==> b)) |- (((a = b) ==> (a ==> b)) /\ ((a = b) ==> (a ==> b)))
T c==> c==> c= f0 f1 c==> f0 f1 c/\ c==> c= f0 f1 c==> f0 f1 c==> c= f0 f1 c==> f0 f1
- |- (((BIT0 m) <= (BIT1 n)) = (m <= n))
T c= c<= cBIT0 f0 cBIT1 f1 c<= f0 f1
- |- ((\m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) m)
T * / ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 f0
- |- (((!n. ((_0 * (BIT1 n)) = _0)) ==> ((\n. ((_0 * (BIT1 n)) = _0)) n)) = ((\n. ((_0 * (BIT1 n)) = _0)) n))
T c= c==> ! c= c* c_0 cBIT1 b0 c_0 * / c= c* c_0 cBIT1 b0 c_0 f0 * / c= c* c_0 cBIT1 b0 c_0 f0
- |- ((\m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) m)
T * / ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 f0
- |- ((EVEN (BIT1 n)) = F)
T c= cEVEN cBIT1 f0 cF
+ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- ((\m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) m)
T * / ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 f0
+ |- ((!x. ((((real_add ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (real_neg (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0))))))) (Im x))) = ((real_sub ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x)))) /\ (((real_add ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x))) = ((real_add ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x))) ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x)))))) = (!x. ((((real_add ((real_mul ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT1 _0))))) ((real_mul (real_neg ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x) $ (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_mul ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_mul ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x) $ (NUMERAL (BIT0 (BIT1 _0))))))))
T c= ! c/\ c= creal_add creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul creal_neg cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_sub creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 c= creal_add creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_add creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 ! c/\ c= creal_add creal_mul c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_neg c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT0 cBIT1 c_0 c$ ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 c_0 c= creal_add creal_mul c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ b0 cNUMERAL cBIT0 cBIT1 c_0 c$ ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((PRE _0) = _0)
T c= cPRE c_0 c_0
+ |- ((?x. t) = t)
T c= c? / f0 f0
- |- (((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul ((((jacobian f) (at z)) $ i) $ x)) (x $ x)) = ((real_mul ((((jacobian f) (at z)) $ i) $ x)) (x $ x))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\j. ((real_mul ((((jacobian f) (at z)) $ i) $ j)) (x $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul ((((jacobian f) (at z)) $ i) $ x)) (x $ x)))))) = (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\j. ((real_mul ((((jacobian f) (at z)) $ i) $ j)) (x $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul ((((jacobian f) (at z)) $ i) $ x)) (x $ x))))))
T c= c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ cjacobian f0 cat f1 f2 b0 c$ f3 b0 creal_mul c$ c$ cjacobian f0 cat f1 f2 b0 c$ f3 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cjacobian f0 cat f1 f2 b0 c$ f3 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cjacobian f0 cat f1 f2 b0 c$ f3 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cjacobian f0 cat f1 f2 b0 c$ f3 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cjacobian f0 cat f1 f2 b0 c$ f3 b0
- |- ((\n. (((BIT0 m) < (BIT1 n)) = (m <= n))) n)
T * / c= c< cBIT0 f0 cBIT1 b0 c<= f0 b0 f1
- |- ((\n. ((BIT1 n) > _0)) n)
T * / c> cBIT1 b0 c_0 f0
- |- (((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) ==> ((\m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) m)) = ((\m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) m))
T c= c==> ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 * / ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 f0 * / ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 f0
- |- (((!n. ((BIT1 n) >= _0)) ==> ((\n. ((BIT1 n) >= _0)) n)) = ((\n. ((BIT1 n) >= _0)) n))
T c= c==> ! c>= cBIT1 b0 c_0 * / c>= cBIT1 b0 c_0 f0 * / c>= cBIT1 b0 c_0 f0
- |- (((!n. (((BIT1 n) > (BIT0 m)) = (n >= m))) ==> ((\n. (((BIT1 n) > (BIT0 m)) = (n >= m))) n)) = ((\n. (((BIT1 n) > (BIT0 m)) = (n >= m))) n))
T c= c==> ! c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 * / c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 f1 * / c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 f1
- |- ((_0 > (BIT0 n)) = F)
T c= c> c_0 cBIT0 f0 cF
- |- (((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((sum s) (\j. (f j))) = ((sum s) g))) = T)
T c= c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= csum f0 / * f1 b0 csum f0 f2 cT
- |- (((!n. (((BIT1 n) - _0) = (BIT1 n))) ==> ((\n. (((BIT1 n) - _0) = (BIT1 n))) n)) = ((\n. (((BIT1 n) - _0) = (BIT1 n))) n))
T c= c==> ! c= c- cBIT1 b0 c_0 cBIT1 b0 * / c= c- cBIT1 b0 c_0 cBIT1 b0 f0 * / c= c- cBIT1 b0 c_0 cBIT1 b0 f0
+ (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x) $ i))))
T c==> c= c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f2 c<= f2 cdimindex part cUNIV c= c$ * / cmatrix_vector_mul cjacobian f0 cat f1 b0 f3 f2 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 f3 f2 c==> c/\ c<= cNUMERAL cBIT1 c_0 f2 c<= f2 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cjacobian f0 cat f1 f2 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cjacobian f0 cat f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ f3 cNUMERAL cBIT0 cBIT1 c_0 c$ ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f3 f2
- |- (((!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) ==> ((\n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) n)) = ((\n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) n))
T c= c==> ! c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 * / c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1 * / c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
- |- ((EVEN _0) = T)
T c= cEVEN c_0 cT
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambda g) $ i) = (g i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q')))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q'))))
T c= c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ * / cmatrix_vector_mul cjacobian f1 cat f2 b0 f3 f0 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 f3 f0 f4 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ * / cmatrix_vector_mul cjacobian f1 cat f2 b0 f3 f0 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 f3 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f4 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ * / cmatrix_vector_mul cjacobian f1 cat f2 b0 f3 f0 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 f3 f0 f4 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ * / cmatrix_vector_mul cjacobian f1 cat f2 b0 f3 f0 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 f3 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f4
- |- (((!m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) ==> ((\m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) m)) = ((\m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) m))
T c= c==> ! ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 * / ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 f0 * / ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 f0
+ |- ((\z. ((z $ (NUMERAL (BIT0 (BIT1 _0)))) = (Im z))) z)
T * / c= c$ b0 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 f0
- |- ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))))))
T c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- |- ((\n. (((BIT1 n) > (BIT1 m)) = (n > m))) n)
T * / c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 f1
- |- (((!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))) ==> ((\m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))) m)) = ((\m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))) m))
T c= c==> ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1 * / ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1 f0 * / ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1 f0
- |- (((!n. (((BIT0 n) > _0) = (n > _0))) ==> ((\n. (((BIT0 n) > _0) = (n > _0))) n)) = ((\n. (((BIT0 n) > _0) = (n > _0))) n))
T c= c==> ! c= c> cBIT0 b0 c_0 c> b0 c_0 * / c= c> cBIT0 b0 c_0 c> b0 c_0 f0 * / c= c> cBIT0 b0 c_0 c> b0 c_0 f0
- |- ((_0 = (BIT1 n)) = F)
T c= c= c_0 cBIT1 f0 cF
- |- (((!n. (~ (_0 > (BIT0 n)))) ==> ((\n. (~ (_0 > (BIT0 n)))) n)) = ((\n. (~ (_0 > (BIT0 n)))) n))
T c= c==> ! c~ c> c_0 cBIT0 b0 * / c~ c> c_0 cBIT0 b0 f0 * / c~ c> c_0 cBIT0 b0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((SUC (BIT0 n)) = (BIT1 n))
T c= cSUC cBIT0 f0 cBIT1 f0
- |- ((\n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) n)
T * / c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 f1
- |- ((\n. ((_0 = (BIT1 n)) = F)) n)
T * / c= c= c_0 cBIT1 b0 cF f0
- |- ((\n. (((BIT1 n) - _0) = (BIT1 n))) n)
T * / c= c- cBIT1 b0 c_0 cBIT1 b0 f0
- |- ((!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j <= (dimindex UNIV))) ==> (((real_mul ((((jacobian f) (at z)) $ i) $ j)) (x $ j)) = (g j)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\j. ((real_mul ((((jacobian f) (at z)) $ i) $ j)) (x $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_mul c$ c$ cjacobian f0 cat f1 f2 b0 c$ f3 b0 * f4 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cjacobian f0 cat f1 f2 b0 c$ f3 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f4
- |- (((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) ==> ((\m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) m)) = ((\m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) m))
T c= c==> ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- |- ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))))))
T c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
- |- ((\n. ((BIT1 n) >= _0)) n)
T * / c>= cBIT1 b0 c_0 f0
- |- ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m)
T * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0
+ ((complex_differentiable f) (at z)) |- ((((has_complex_derivative f) ((complex_derivative f) z)) (at z)) /\ (((has_complex_derivative f) (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) (at z)))
T c==> ccomplex_differentiable f0 cat f1 c/\ chas_complex_derivative f0 ccomplex_derivative f0 f1 cat f1 chas_complex_derivative f0 ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cat f1
- |- (((BIT0 n) > (BIT0 m)) = (n > m))
T c= c> cBIT0 f0 cBIT0 f1 c> f0 f1
- |- ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))
T c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
- |- ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n)
T * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1
+ |- ((?z'. ((((has_complex_derivative f) ((complex_derivative f) z)) (at z')) /\ (((has_complex_derivative f) (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) (at z')))) = ((\f'. (?z'. ((((has_complex_derivative f') ((complex_derivative f) z)) (at z')) /\ (((has_complex_derivative f') (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) (at z'))))) f))
T c= c? / c/\ chas_complex_derivative f0 ccomplex_derivative f0 f1 cat b0 chas_complex_derivative f0 ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cat b0 * / c? / c/\ chas_complex_derivative b0 ccomplex_derivative f0 f1 cat b1 chas_complex_derivative b0 ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cat b1 f0
- |- (((!m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) /\ (((_0 < _0) = F) /\ ((!n. (((BIT0 n) < _0) = F)) /\ ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))))))))) /\ (((!m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) /\ ((_0 >= _0) /\ ((!n. ((_0 >= (BIT0 n)) = (_0 >= n))) /\ ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))))))) /\ (((!m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) /\ ((~ (_0 > _0)) /\ ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))))) /\ ((!m. (!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n))))) /\ (((_0 - _0) = _0) /\ ((!n. ((_0 - (BIT0 n)) = _0)) /\ ((!n. ((_0 - (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))))))))))))))))
T c/\ c/\ ! ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 c/\ c= c< c_0 c_0 cF c/\ ! c= c< cBIT0 b0 c_0 cF c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1 c/\ c/\ ! ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 c/\ c>= c_0 c_0 c/\ ! c= c>= c_0 cBIT0 b0 c>= c_0 b0 c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0 c/\ c/\ ! ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 c/\ c~ c> c_0 c_0 c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 c/\ ! ! c= c- cNUMERAL b0 cNUMERAL b1 cNUMERAL c- b0 b1 c/\ c= c- c_0 c_0 c_0 c/\ ! c= c- c_0 cBIT0 b0 c_0 c/\ ! c= c- c_0 cBIT1 b0 c_0 c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
- |- ((\n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))) n)
T * / c= cEXP cNUMERAL f0 cNUMERAL b0 cNUMERAL cEXP f0 b0 f1
- |- (((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) ==> ((\m. (!n. (((BIT0 m) = (BIT1 n)) = F))) m)) = ((\m. (!n. (((BIT0 m) = (BIT1 n)) = F))) m))
T c= c==> ! ! c= c= cBIT0 b0 cBIT1 b1 cF * / ! c= c= cBIT0 b0 cBIT1 b1 cF f0 * / ! c= c= cBIT0 b0 cBIT1 b1 cF f0
+ ((complex_differentiable f) (at z)) |- (((complex_differentiable f) (at z)) = T)
T c==> ccomplex_differentiable f0 cat f1 c= ccomplex_differentiable f0 cat f1 cT
- |- (((ODD _0) = F) /\ ((!n. ((ODD (BIT0 n)) = F)) /\ (!n. ((ODD (BIT1 n)) = T))))
T c/\ c= cODD c_0 cF c/\ ! c= cODD cBIT0 b0 cF ! c= cODD cBIT1 b0 cT
- |- (((!n. (((BIT1 n) > (BIT1 m)) = (n > m))) ==> ((\n. (((BIT1 n) > (BIT1 m)) = (n > m))) n)) = ((\n. (((BIT1 n) > (BIT1 m)) = (n > m))) n))
T c= c==> ! c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 * / c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 f1 * / c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 f1
+ (!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) |- (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))
T c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 ! ! ! c==> c/\ chas_complex_derivative f0 b1 cat b0 chas_complex_derivative f0 b2 cat b0 c= b1 b2
+ |- (((!w. (!z. (((complex_mul w) z) = (complex (((real_sub ((real_mul (Re w)) (Re z))) ((real_mul (Im w)) (Im z))) , ((real_add ((real_mul (Re w)) (Im z))) ((real_mul (Im w)) (Re z)))))))) ==> ((\w. (!z. (((complex_mul w) z) = (complex (((real_sub ((real_mul (Re w)) (Re z))) ((real_mul (Im w)) (Im z))) , ((real_add ((real_mul (Re w)) (Im z))) ((real_mul (Im w)) (Re z)))))))) w)) = ((\w. (!z. (((complex_mul w) z) = (complex (((real_sub ((real_mul (Re w)) (Re z))) ((real_mul (Im w)) (Im z))) , ((real_add ((real_mul (Re w)) (Im z))) ((real_mul (Im w)) (Re z)))))))) w))
T c= c==> ! ! c= ccomplex_mul b0 b1 ccomplex c, creal_sub creal_mul cRe b0 cRe b1 creal_mul cIm b0 cIm b1 creal_add creal_mul cRe b0 cIm b1 creal_mul cIm b0 cRe b1 * / ! c= ccomplex_mul b0 b1 ccomplex c, creal_sub creal_mul cRe b0 cRe b1 creal_mul cIm b0 cIm b1 creal_add creal_mul cRe b0 cIm b1 creal_mul cIm b0 cRe b1 f0 * / ! c= ccomplex_mul b0 b1 ccomplex c, creal_sub creal_mul cRe b0 cRe b1 creal_mul cIm b0 cIm b1 creal_add creal_mul cRe b0 cIm b1 creal_mul cIm b0 cRe b1 f0
- |- ((~ (_0 > _0)) /\ ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))))
T c/\ c~ c> c_0 c_0 c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
- |- (((~ (_0 >= (BIT1 n))) ==> ((_0 >= (BIT1 n)) = F)) = ((_0 >= (BIT1 n)) = F))
T c= c==> c~ c>= c_0 cBIT1 f0 c= c>= c_0 cBIT1 f0 cF c= c>= c_0 cBIT1 f0 cF
- |- ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))
T c= cSUC cNUMERAL f0 cNUMERAL cSUC f0
- |- (((BIT0 n) >= _0) = T)
T c= c>= cBIT0 f0 c_0 cT
- |- ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))))
T c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
- |- (((!n. (((BIT1 n) = _0) = F)) ==> ((\n. (((BIT1 n) = _0) = F)) n)) = ((\n. (((BIT1 n) = _0) = F)) n))
T c= c==> ! c= c= cBIT1 b0 c_0 cF * / c= c= cBIT1 b0 c_0 cF f0 * / c= c= cBIT1 b0 c_0 cF f0
+ (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) |- ((((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- ((\m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) m)
T * / ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 f0
- |- (((!m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) /\ ((~ (_0 > _0)) /\ ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))))) /\ ((!m. (!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n))))) /\ (((_0 - _0) = _0) /\ ((!n. ((_0 - (BIT0 n)) = _0)) /\ ((!n. ((_0 - (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))))))))))))))
T c/\ c/\ ! ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 c/\ c~ c> c_0 c_0 c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 c/\ ! ! c= c- cNUMERAL b0 cNUMERAL b1 cNUMERAL c- b0 b1 c/\ c= c- c_0 c_0 c_0 c/\ ! c= c- c_0 cBIT0 b0 c_0 c/\ ! c= c- c_0 cBIT1 b0 c_0 c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) ==> ((\n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) n)) = ((\n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) n))
T c= c==> ! c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 * / c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 f1 * / c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 f1
- |- (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))))))))))))
T c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
+ |- ((\z. (((complex_differentiable f) (at z)) = (((differentiable f) (at z)) /\ ((((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) /\ (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))))))) z)
T * / c= ccomplex_differentiable f0 cat b0 c/\ cdifferentiable f0 cat b0 c/\ c= c$ c$ cjacobian f0 cat b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat b0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ c$ cjacobian f0 cat b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cjacobian f0 cat b0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f1
- |- (((!n. (((BIT0 n) = _0) = (n = _0))) ==> ((\n. (((BIT0 n) = _0) = (n = _0))) n)) = ((\n. (((BIT0 n) = _0) = (n = _0))) n))
T c= c==> ! c= c= cBIT0 b0 c_0 c= b0 c_0 * / c= c= cBIT0 b0 c_0 c= b0 c_0 f0 * / c= c= cBIT0 b0 c_0 c= b0 c_0 f0
- |- (((BIT0 n) > (BIT1 m)) = (n > m))
T c= c> cBIT0 f0 cBIT1 f1 c> f0 f1
- |- ((\n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) n)
T * / c= cSUC cBIT1 b0 cBIT0 cSUC b0 f0
+ (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))), (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) |- ((((((has_derivative f) (\h. ((matrix_vector_mul ((jacobian f) (at z))) h))) (at z)) = (((has_derivative f) (\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x))) (at z))) ==> ((((has_derivative f) (\h. ((matrix_vector_mul ((jacobian f) (at z))) h))) (at z)) ==> (((has_derivative f) (\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x))) (at z)))) = ((((has_derivative f) (\h. ((matrix_vector_mul ((jacobian f) (at z))) h))) (at z)) ==> (((has_derivative f) (\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x))) (at z))))
T c==> c= c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c= chas_derivative f0 / cmatrix_vector_mul cjacobian f0 cat f1 b0 cat f1 chas_derivative f0 / ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 cat f1 c==> chas_derivative f0 / cmatrix_vector_mul cjacobian f0 cat f1 b0 cat f1 chas_derivative f0 / ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 cat f1 c==> chas_derivative f0 / cmatrix_vector_mul cjacobian f0 cat f1 b0 cat f1 chas_derivative f0 / ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 cat f1
- |- (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))))))))
T c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ (!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) |- ((\f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f''))) f'')
T c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 * / c==> c/\ chas_complex_derivative f0 f1 cat f2 chas_complex_derivative f0 b0 cat f2 c= f1 b0 f3
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ |- (!x. ((((real_add ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (real_neg (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0))))))) (Im x))) = ((real_sub ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x)))) /\ (((real_add ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x))) = ((real_add ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x))) ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))))))
T c/\ c= creal_add creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe f2 creal_mul creal_neg cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm f2 creal_sub creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe f2 creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm f2 c= creal_add creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe f2 creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm f2 creal_add creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm f2 creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe f2
+ |- ((!z. (((complex_differentiable f) (at z)) ==> (((complex_derivative f) z) = (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))))) = T)
T c= ! c==> ccomplex_differentiable f0 cat b0 c= ccomplex_derivative f0 b0 ccomplex c, c$ c$ cjacobian f0 cat b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat b0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cT
+ ((complex_differentiable f) (at z)) |- (((?f'. (?z'. ((((has_complex_derivative f') ((complex_derivative f) z)) (at z')) /\ (((has_complex_derivative f') (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) (at z'))))) ==> (((complex_derivative f) z) = (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))))) = (((complex_derivative f) z) = (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))))
T c==> ccomplex_differentiable f0 cat f1 c= c==> c? / c? / c/\ chas_complex_derivative b0 ccomplex_derivative f0 f1 cat b1 chas_complex_derivative b0 ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cat b1 c= ccomplex_derivative f0 f1 ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= ccomplex_derivative f0 f1 ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- (((!g. ((f = g) = (!x. ((f x) = (g x))))) ==> ((\g. ((f = g) = (!x. ((f x) = (g x))))) g)) = ((\g. ((f = g) = (!x. ((f x) = (g x))))) g))
T c= c==> ! c= c= f0 b0 ! c= * f0 b1 * b0 b1 * / c= c= f0 b0 ! c= * f0 b1 * b0 b1 f1 * / c= c= f0 b0 ! c= * f0 b1 * b0 b1 f1
+ |- (((!p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ * / cmatrix_vector_mul cjacobian f1 cat f2 b2 f3 f0 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b2 f3 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ * / cmatrix_vector_mul cjacobian f1 cat f2 b2 f3 f0 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b2 f3 f0 c==> b0 b1 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ * / cmatrix_vector_mul cjacobian f1 cat f2 b2 f3 f0 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b2 f3 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ * / cmatrix_vector_mul cjacobian f1 cat f2 b2 f3 f0 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b2 f3 f0 c==> b0 b1 f4 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ * / cmatrix_vector_mul cjacobian f1 cat f2 b2 f3 f0 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b2 f3 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ * / cmatrix_vector_mul cjacobian f1 cat f2 b2 f3 f0 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b2 f3 f0 c==> b0 b1 f4
+ (!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))), ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) |- ((!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) /\ (f' = f''))
T c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c==> c/\ chas_complex_derivative f0 f1 cat f2 chas_complex_derivative f0 f3 cat f2 c/\ ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c= f1 f3
+ ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) |- (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) /\ ((!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) ==> (f' = f'')))
T c==> c/\ chas_complex_derivative f0 f1 cat f2 chas_complex_derivative f0 f3 cat f2 c/\ c/\ chas_complex_derivative f0 f1 cat f2 chas_complex_derivative f0 f3 cat f2 c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c= f1 f3
+ |- ((\A. (!x. (((matrix_vector_mul A) x) = (lambdai. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\j. ((real_mul ((A $ i) $ j)) (x $ j)))))))) A)
T * / ! c= cmatrix_vector_mul b0 b1 clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ b0 b2 b3 c$ b1 b3 f0
+ |- (((!f''. ((?f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) ==> (f' = f''))) ==> ((\f''. ((?f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) ==> (f' = f''))) f'')) = ((\f''. ((?f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) ==> (f' = f''))) f''))
T c= c==> ! c==> c? / c? / c/\ chas_complex_derivative b1 f0 cat b2 chas_complex_derivative b1 b0 cat b2 c= f0 b0 * / c==> c? / c? / c/\ chas_complex_derivative b1 f0 cat b2 chas_complex_derivative b1 b0 cat b2 c= f0 b0 f1 * / c==> c? / c? / c/\ chas_complex_derivative b1 f0 cat b2 chas_complex_derivative b1 b0 cat b2 c= f0 b0 f1
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i))) = (p' ==> q'))))
T c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ * / cmatrix_vector_mul cjacobian f2 cat f3 b0 f4 f0 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f2 cat f3 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f2 cat f3 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 f4 f0 f5 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ * / cmatrix_vector_mul cjacobian f2 cat f3 b0 f4 f0 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f2 cat f3 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f2 cat f3 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 f4 f0 c==> f1 f5
+ (!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) |- (((!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))) ==> ((\f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))) f')) = ((\f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))) f'))
T c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c= c==> ! ! c==> c/\ chas_complex_derivative f0 b0 cat f1 chas_complex_derivative f0 b1 cat f1 c= b0 b1 * / ! c==> c/\ chas_complex_derivative f0 b0 cat f1 chas_complex_derivative f0 b1 cat f1 c= b0 b1 f2 * / ! c==> c/\ chas_complex_derivative f0 b0 cat f1 chas_complex_derivative f0 b1 cat f1 c= b0 b1 f2
+ ((complex_differentiable f) (at z)) |- (((has_derivative f) (\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x))) (at z))
T c==> ccomplex_differentiable f0 cat f1 chas_derivative f0 / ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 cat f1
+ (!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) |- (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))
T c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 ! c==> c/\ chas_complex_derivative f0 f1 cat f2 chas_complex_derivative f0 b0 cat f2 c= f1 b0
+ ((complex_differentiable f) (at z)) |- (?z'. ((((has_complex_derivative f) ((complex_derivative f) z)) (at z')) /\ (((has_complex_derivative f) (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) (at z'))))
T c==> ccomplex_differentiable f0 cat f1 c? / c/\ chas_complex_derivative f0 ccomplex_derivative f0 f1 cat b0 chas_complex_derivative f0 ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cat b0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((\f. (!f'. (!net. ((((has_complex_derivative f) f') net) = (((has_derivative f) (\x. ((complex_mul f') x))) net))))) f)
T * / ! ! c= chas_complex_derivative b0 b1 b2 chas_derivative b0 / ccomplex_mul b1 b3 b2 f0
+ |- (((!x. (((\z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z)))) x) ==> ((!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) ==> (f' = f'')))) ==> ((?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z)))) ==> ((!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) ==> (f' = f'')))) = ((?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z)))) ==> ((!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) ==> (f' = f''))))
T c= c==> ! c==> * / c/\ chas_complex_derivative f0 f1 cat b1 chas_complex_derivative f0 f2 cat b1 b0 c==> ! ! ! ! c==> c/\ chas_complex_derivative b1 b3 cat b2 chas_complex_derivative b1 b4 cat b2 c= b3 b4 c= f1 f2 c==> c? / c/\ chas_complex_derivative f0 f1 cat b0 chas_complex_derivative f0 f2 cat b0 c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c= f1 f2 c==> c? / c/\ chas_complex_derivative f0 f1 cat b0 chas_complex_derivative f0 f2 cat b0 c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c= f1 f2
+ ((((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) \/ (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))) |- F
T c==> c\/ c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ ((\z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z)))) z) |- ((((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> ((!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) ==> (f' = f''))) = ((!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) ==> (f' = f'')))
T c==> * / c/\ chas_complex_derivative f0 f1 cat b0 chas_complex_derivative f0 f2 cat b0 f3 c= c==> c/\ chas_complex_derivative f0 f1 cat f3 chas_complex_derivative f0 f2 cat f3 c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c= f1 f2 c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c= f1 f2
+ ((complex_differentiable f) (at z)) |- ((\f'. (?z'. ((((has_complex_derivative f') ((complex_derivative f) z)) (at z')) /\ (((has_complex_derivative f') (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) (at z'))))) f)
T c==> ccomplex_differentiable f0 cat f1 * / c? / c/\ chas_complex_derivative b0 ccomplex_derivative f0 f1 cat b1 chas_complex_derivative b0 ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cat b1 f0
+ |- (((((has_complex_derivative f) ((complex_derivative f) z)) (at z)) /\ (((has_complex_derivative f) (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) (at z))) = ((\z'. ((((has_complex_derivative f) ((complex_derivative f) z)) (at z')) /\ (((has_complex_derivative f) (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) (at z')))) z))
T c= c/\ chas_complex_derivative f0 ccomplex_derivative f0 f1 cat f1 chas_complex_derivative f0 ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cat f1 * / c/\ chas_complex_derivative f0 ccomplex_derivative f0 f1 cat b0 chas_complex_derivative f0 ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cat b0 f1
+ (!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) |- (!f''. ((?f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) ==> (f' = f'')))
T c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 ! c==> c? / c? / c/\ chas_complex_derivative b1 f0 cat b2 chas_complex_derivative b1 b0 cat b2 c= f0 b0
+ |- (((!f'. (!f''. ((?f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) ==> (f' = f'')))) ==> ((\f'. (!f''. ((?f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) ==> (f' = f'')))) f')) = ((\f'. (!f''. ((?f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) ==> (f' = f'')))) f'))
T c= c==> ! ! c==> c? / c? / c/\ chas_complex_derivative b2 b0 cat b3 chas_complex_derivative b2 b1 cat b3 c= b0 b1 * / ! c==> c? / c? / c/\ chas_complex_derivative b2 b0 cat b3 chas_complex_derivative b2 b1 cat b3 c= b0 b1 f0 * / ! c==> c? / c? / c/\ chas_complex_derivative b2 b0 cat b3 chas_complex_derivative b2 b1 cat b3 c= b0 b1 f0
+ (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i)) = (((real_add ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x) $ i))))
T c==> c= c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f2 c<= f2 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ * / cmatrix_vector_mul cjacobian f0 cat f1 b0 f3 f2 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 f3 f2 c= creal_add creal_mul c$ c$ cjacobian f0 cat f1 f2 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cjacobian f0 cat f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ f3 cNUMERAL cBIT0 cBIT1 c_0 c$ ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f3 f2
+ |- (((!f. (!g. ((f = g) = (!x. ((f x) = (g x)))))) ==> ((\f. (!g. ((f = g) = (!x. ((f x) = (g x)))))) f)) = ((\f. (!g. ((f = g) = (!x. ((f x) = (g x)))))) f))
T c= c==> ! ! c= c= b0 b1 ! c= * b0 b2 * b1 b2 * / ! c= c= b0 b1 ! c= * b0 b2 * b1 b2 f0 * / ! c= c= b0 b1 ! c= * b0 b2 * b1 b2 f0
+ |- ((((\f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) f) ==> ((!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) ==> (f' = f''))) = T)
T c= c==> * / c? / c/\ chas_complex_derivative b0 f0 cat b1 chas_complex_derivative b0 f1 cat b1 f2 c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c= f0 f1 cT
+ ((z $ (NUMERAL (BIT1 _0))) = (Re z)) |- ((Re z) = (z $ (NUMERAL (BIT1 _0))))
T c==> c= c$ f0 cNUMERAL cBIT1 c_0 cRe f0 c= cRe f0 c$ f0 cNUMERAL cBIT1 c_0
+ |- ((\g. ((f = g) = (!x. ((f x) = (g x))))) g)
T * / c= c= f0 b0 ! c= * f0 b1 * b0 b1 f1
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV
+ |- (!z. (((\z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z)))) z) ==> ((!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) ==> (f' = f''))))
T c==> * / c/\ chas_complex_derivative f0 f1 cat b0 chas_complex_derivative f0 f2 cat b0 f3 c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c= f1 f2
+ |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) ==> F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((z $ (NUMERAL (BIT1 _0))) = (Re z))
T c= c$ f0 cNUMERAL cBIT1 c_0 cRe f0
+ (!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) |- (((!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f''))) ==> ((\f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f''))) f'')) = ((\f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f''))) f''))
T c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c= c==> ! c==> c/\ chas_complex_derivative f0 f1 cat f2 chas_complex_derivative f0 b0 cat f2 c= f1 b0 * / c==> c/\ chas_complex_derivative f0 f1 cat f2 chas_complex_derivative f0 b0 cat f2 c= f1 b0 f3 * / c==> c/\ chas_complex_derivative f0 f1 cat f2 chas_complex_derivative f0 b0 cat f2 c= f1 b0 f3
+ (~ (!x. ((((real_add ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (real_neg (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0))))))) (Im x))) = ((real_sub ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x)))) /\ (((real_add ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x))) = ((real_add ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x))) ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))))))) |- ((((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) \/ (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))))
T c==> c~ ! c/\ c= creal_add creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul creal_neg cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_sub creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 c= creal_add creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_add creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 c\/ c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (((!x. ((((has_complex_derivative f) ((complex_derivative f) x)) (at x)) = ((complex_differentiable f) (at x)))) ==> ((\x. ((((has_complex_derivative f) ((complex_derivative f) x)) (at x)) = ((complex_differentiable f) (at x)))) x)) = ((\x. ((((has_complex_derivative f) ((complex_derivative f) x)) (at x)) = ((complex_differentiable f) (at x)))) x))
T c= c==> ! c= chas_complex_derivative f0 ccomplex_derivative f0 b0 cat b0 ccomplex_differentiable f0 cat b0 * / c= chas_complex_derivative f0 ccomplex_derivative f0 b0 cat b0 ccomplex_differentiable f0 cat b0 f1 * / c= chas_complex_derivative f0 ccomplex_derivative f0 b0 cat b0 ccomplex_differentiable f0 cat b0 f1
+ |- ((real_neg ((real_sub ((real_add ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (real_neg (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0))))))) (Im x)))) ((real_sub ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x))))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_add creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe f2 creal_mul creal_neg cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm f2 creal_sub creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe f2 creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm f2 creal_of_num cNUMERAL c_0
+ |- (((!z. (((complex_mul w) z) = (complex (((real_sub ((real_mul (Re w)) (Re z))) ((real_mul (Im w)) (Im z))) , ((real_add ((real_mul (Re w)) (Im z))) ((real_mul (Im w)) (Re z))))))) ==> ((\z. (((complex_mul w) z) = (complex (((real_sub ((real_mul (Re w)) (Re z))) ((real_mul (Im w)) (Im z))) , ((real_add ((real_mul (Re w)) (Im z))) ((real_mul (Im w)) (Re z))))))) z)) = ((\z. (((complex_mul w) z) = (complex (((real_sub ((real_mul (Re w)) (Re z))) ((real_mul (Im w)) (Im z))) , ((real_add ((real_mul (Re w)) (Im z))) ((real_mul (Im w)) (Re z))))))) z))
T c= c==> ! c= ccomplex_mul f0 b0 ccomplex c, creal_sub creal_mul cRe f0 cRe b0 creal_mul cIm f0 cIm b0 creal_add creal_mul cRe f0 cIm b0 creal_mul cIm f0 cRe b0 * / c= ccomplex_mul f0 b0 ccomplex c, creal_sub creal_mul cRe f0 cRe b0 creal_mul cIm f0 cIm b0 creal_add creal_mul cRe f0 cIm b0 creal_mul cIm f0 cRe b0 f1 * / c= ccomplex_mul f0 b0 ccomplex c, creal_sub creal_mul cRe f0 cRe b0 creal_mul cIm f0 cIm b0 creal_add creal_mul cRe f0 cIm b0 creal_mul cIm f0 cRe b0 f1
+ ((complex_differentiable f) (at z)) |- ((\z'. ((((has_complex_derivative f) ((complex_derivative f) z)) (at z')) /\ (((has_complex_derivative f) (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) (at z')))) z)
T c==> ccomplex_differentiable f0 cat f1 * / c/\ chas_complex_derivative f0 ccomplex_derivative f0 f1 cat b0 chas_complex_derivative f0 ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cat b0 f1
+ (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i)) = (((real_add ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x) $ i)))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x) $ i))))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x) $ i)))))
T c==> c= c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f2 c<= f2 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ * / cmatrix_vector_mul cjacobian f0 cat f1 b0 f3 f2 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 f3 f2 c= creal_add creal_mul c$ c$ cjacobian f0 cat f1 f2 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cjacobian f0 cat f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ f3 cNUMERAL cBIT0 cBIT1 c_0 c$ ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f3 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f2 c<= f2 cdimindex part cUNIV c= c$ * / cmatrix_vector_mul cjacobian f0 cat f1 b0 f3 f2 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 f3 f2 c==> c/\ c<= cNUMERAL cBIT1 c_0 f2 c<= f2 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cjacobian f0 cat f1 f2 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cjacobian f0 cat f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ f3 cNUMERAL cBIT0 cBIT1 c_0 c$ ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f3 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f2 c<= f2 cdimindex part cUNIV c= c$ * / cmatrix_vector_mul cjacobian f0 cat f1 b0 f3 f2 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 f3 f2 c==> c/\ c<= cNUMERAL cBIT1 c_0 f2 c<= f2 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cjacobian f0 cat f1 f2 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cjacobian f0 cat f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ f3 cNUMERAL cBIT0 cBIT1 c_0 c$ ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f3 f2
+ |- ((\f. (!g. ((f = g) = (!x. ((f x) = (g x)))))) f)
T * / ! c= c= b0 b1 ! c= * b0 b2 * b1 b2 f0
+ ((complex_differentiable f) (at z)) |- ((differentiable f) (at z))
T c==> ccomplex_differentiable f0 cat f1 cdifferentiable f0 cat f1
+ (!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) |- ((\f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) f)
T c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 * / ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 f0
+ |- ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ * / cmatrix_vector_mul cjacobian f1 cat f2 b2 f3 f0 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b2 f3 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ * / cmatrix_vector_mul cjacobian f1 cat f2 b2 f3 f0 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f1 cat f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b2 f3 f0 c==> b0 b1 f4
+ |- (((!P. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (P i))) = ((P (NUMERAL (BIT1 _0))) /\ (P (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((\P. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (P i))) = ((P (NUMERAL (BIT1 _0))) /\ (P (NUMERAL (BIT0 (BIT1 _0))))))) P)) = ((\P. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (P i))) = ((P (NUMERAL (BIT1 _0))) /\ (P (NUMERAL (BIT0 (BIT1 _0))))))) P))
T c= c==> ! c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cNUMERAL cBIT0 cBIT1 c_0 * b0 b1 c/\ * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 * / c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cNUMERAL cBIT0 cBIT1 c_0 * b0 b1 c/\ * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 f0 * / c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cNUMERAL cBIT0 cBIT1 c_0 * b0 b1 c/\ * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- (T = (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= cT c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV
+ ((\f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) f) |- (((?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z)))) ==> ((!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) ==> (f' = f''))) = ((!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) ==> (f' = f'')))
T c==> * / c? / c/\ chas_complex_derivative b0 f0 cat b1 chas_complex_derivative b0 f1 cat b1 f2 c= c==> c? / c/\ chas_complex_derivative f2 f0 cat b0 chas_complex_derivative f2 f1 cat b0 c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c= f0 f1 c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c= f0 f1
+ (!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) |- ((\z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f''))))) z)
T c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 * / ! ! c==> c/\ chas_complex_derivative f0 b1 cat b0 chas_complex_derivative f0 b2 cat b0 c= b1 b2 f1
+ |- (!f. (((\f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) f) ==> ((!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) ==> (f' = f''))))
T c==> * / c? / c/\ chas_complex_derivative b0 f0 cat b1 chas_complex_derivative b0 f1 cat b1 f2 c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c= f0 f1
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- ((!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) ==> (!f'. (!f''. ((?f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) ==> (f' = f'')))))
T c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 ! ! c==> c? / c? / c/\ chas_complex_derivative b2 b0 cat b3 chas_complex_derivative b2 b1 cat b3 c= b0 b1
+ |- ((\f. (!z. (((complex_differentiable f) (at z)) = (((differentiable f) (at z)) /\ ((((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) /\ (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))))))) f)
T * / ! c= ccomplex_differentiable b0 cat b1 c/\ cdifferentiable b0 cat b1 c/\ c= c$ c$ cjacobian b0 cat b1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian b0 cat b1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ c$ cjacobian b0 cat b1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cjacobian b0 cat b1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- ((i <= (NUMERAL (BIT0 (BIT1 _0)))) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c<= f0 cNUMERAL cBIT0 cBIT1 c_0 cT
+ ((Im z) = (z $ (NUMERAL (BIT0 (BIT1 _0))))) |- ((z $ (NUMERAL (BIT0 (BIT1 _0)))) = (Im z))
T c==> c= cIm f0 c$ f0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ f0 cNUMERAL cBIT0 cBIT1 c_0 cIm f0
+ (!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))), ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) |- (f' = f'')
T c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c==> c/\ chas_complex_derivative f0 f1 cat f2 chas_complex_derivative f0 f3 cat f2 c= f1 f3
+ (!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) |- (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f''))))
T c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 ! ! c==> c/\ chas_complex_derivative f0 b0 cat f1 chas_complex_derivative f0 b1 cat f1 c= b0 b1
+ ((complex_differentiable f) (at z)) |- (((has_complex_derivative f) (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) (at z))
T c==> ccomplex_differentiable f0 cat f1 chas_complex_derivative f0 ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cat f1
+ |- ((~ (!x. ((((real_add ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (real_neg (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0))))))) (Im x))) = ((real_sub ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x)))) /\ (((real_add ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x))) = ((real_add ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x))) ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))))))) ==> F)
T c==> c~ ! c/\ c= creal_add creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul creal_neg cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_sub creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 c= creal_add creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_add creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 cF
+ |- ((\w. (!z. (((complex_mul w) z) = (complex (((real_sub ((real_mul (Re w)) (Re z))) ((real_mul (Im w)) (Im z))) , ((real_add ((real_mul (Re w)) (Im z))) ((real_mul (Im w)) (Re z)))))))) w)
T * / ! c= ccomplex_mul b0 b1 ccomplex c, creal_sub creal_mul cRe b0 cRe b1 creal_mul cIm b0 cIm b1 creal_add creal_mul cRe b0 cIm b1 creal_mul cIm b0 cRe b1 f0
+ |- ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ * / cmatrix_vector_mul cjacobian f2 cat f3 b1 f4 f0 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f2 cat f3 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f2 cat f3 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b1 f4 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ * / cmatrix_vector_mul cjacobian f2 cat f3 b1 f4 f0 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f2 cat f3 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f2 cat f3 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b1 f4 f0 c==> f1 b0 f5
+ |- (((!f. (!x. ((((has_complex_derivative f) ((complex_derivative f) x)) (at x)) = ((complex_differentiable f) (at x))))) ==> ((\f. (!x. ((((has_complex_derivative f) ((complex_derivative f) x)) (at x)) = ((complex_differentiable f) (at x))))) f)) = ((\f. (!x. ((((has_complex_derivative f) ((complex_derivative f) x)) (at x)) = ((complex_differentiable f) (at x))))) f))
T c= c==> ! ! c= chas_complex_derivative b0 ccomplex_derivative b0 b1 cat b1 ccomplex_differentiable b0 cat b1 * / ! c= chas_complex_derivative b0 ccomplex_derivative b0 b1 cat b1 ccomplex_differentiable b0 cat b1 f0 * / ! c= chas_complex_derivative b0 ccomplex_derivative b0 b1 cat b1 ccomplex_differentiable b0 cat b1 f0
+ |- (((!t. (((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT0 (BIT1 _0))))) t) = ((real_add (t (NUMERAL (BIT1 _0)))) (t (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((\t. (((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT0 (BIT1 _0))))) t) = ((real_add (t (NUMERAL (BIT1 _0)))) (t (NUMERAL (BIT0 (BIT1 _0))))))) t)) = ((\t. (((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT0 (BIT1 _0))))) t) = ((real_add (t (NUMERAL (BIT1 _0)))) (t (NUMERAL (BIT0 (BIT1 _0))))))) t))
T c= c==> ! c= csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 b0 creal_add * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 * / c= csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 b0 creal_add * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 f0 * / c= csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 b0 creal_add * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 f0
+ |- (((!f. (!f'. (!net. ((((has_complex_derivative f) f') net) = (((has_derivative f) (\x. ((complex_mul f') x))) net))))) ==> ((\f. (!f'. (!net. ((((has_complex_derivative f) f') net) = (((has_derivative f) (\x. ((complex_mul f') x))) net))))) f)) = ((\f. (!f'. (!net. ((((has_complex_derivative f) f') net) = (((has_derivative f) (\x. ((complex_mul f') x))) net))))) f))
T c= c==> ! ! ! c= chas_complex_derivative b0 b1 b2 chas_derivative b0 / ccomplex_mul b1 b3 b2 * / ! ! c= chas_complex_derivative b0 b1 b2 chas_derivative b0 / ccomplex_mul b1 b3 b2 f0 * / ! ! c= chas_complex_derivative b0 b1 b2 chas_derivative b0 / ccomplex_mul b1 b3 b2 f0
+ (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))), (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) /\ (((((\h. ((matrix_vector_mul ((jacobian f) (at z))) h)) x) $ i) = (((\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x)) x) $ i)) = (((real_add ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x) $ i))))
T c==> c= c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f2 c<= f2 cNUMERAL cBIT0 cBIT1 c_0 c/\ c/\ c<= cNUMERAL cBIT1 c_0 f2 c<= f2 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ * / cmatrix_vector_mul cjacobian f0 cat f1 b0 f3 f2 c$ * / ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 f3 f2 c= creal_add creal_mul c$ c$ cjacobian f0 cat f1 f2 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cjacobian f0 cat f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ f3 cNUMERAL cBIT0 cBIT1 c_0 c$ ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f3 f2
+ ((((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) /\ (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))), ((differentiable f) (at z)) |- (((has_derivative f) (\x. ((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x))) (at z))
T c==> c/\ c= c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> cdifferentiable f0 cat f1 chas_derivative f0 / ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 cat f1
+ (?f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) |- ((!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) ==> (f' = f''))
T c==> c? / c? / c/\ chas_complex_derivative b0 f0 cat b1 chas_complex_derivative b0 f1 cat b1 c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c= f0 f1
+ |- ((real_neg ((real_sub ((real_add ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x)))) ((real_add ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x))) ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_add creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe f2 creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm f2 creal_add creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm f2 creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe f2 creal_of_num cNUMERAL c_0
+ |- ((\f''. ((?f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) ==> (f' = f''))) f'')
T * / c==> c? / c? / c/\ chas_complex_derivative b1 f0 cat b2 chas_complex_derivative b1 b0 cat b2 c= f0 b0 f1
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((lambdai. ((real_add ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0))))))) $ i) = ((\i. ((real_add ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0))))))) i))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ clambda / creal_add creal_mul c$ c$ cjacobian f1 cat f2 b0 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cjacobian f1 cat f2 b0 cNUMERAL cBIT0 cBIT1 c_0 c$ f3 cNUMERAL cBIT0 cBIT1 c_0 f0 * / creal_add creal_mul c$ c$ cjacobian f1 cat f2 b0 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cjacobian f1 cat f2 b0 cNUMERAL cBIT0 cBIT1 c_0 c$ f3 cNUMERAL cBIT0 cBIT1 c_0 f0
+ |- ((\x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i))))))) x)
T * / ! c= c= b0 b1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV c= c$ b0 b2 c$ b1 b2 f0
+ ((complex_differentiable f) (at z)) |- ((((has_complex_derivative f) (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) (at z)) = ((((has_complex_derivative f) ((complex_derivative f) z)) (at z)) /\ (((has_complex_derivative f) (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) (at z))))
T c==> ccomplex_differentiable f0 cat f1 c= chas_complex_derivative f0 ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cat f1 c/\ chas_complex_derivative f0 ccomplex_derivative f0 f1 cat f1 chas_complex_derivative f0 ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cat f1
+ |- ((((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ ((complex_differentiable f) (at z)) |- (((differentiable f) (at z)) /\ ((((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) /\ (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))))
T c==> ccomplex_differentiable f0 cat f1 c/\ cdifferentiable f0 cat f1 c/\ c= c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- ((\y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))) y)
T * / c= c= f0 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ f0 b1 c$ b0 b1 f1
+ |- ((?f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) ==> (f' = f''))
T c==> c? / c? / c/\ chas_complex_derivative b0 f0 cat b1 chas_complex_derivative b0 f1 cat b1 c= f0 f1
+ ((differentiable f) (at z)) |- (((has_derivative f) (\h. ((matrix_vector_mul ((jacobian f) (at z))) h))) (at z))
T c==> cdifferentiable f0 cat f1 chas_derivative f0 / cmatrix_vector_mul cjacobian f0 cat f1 b0 cat f1
+ |- (((!A. (!x. (((matrix_vector_mul A) x) = (lambdai. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\j. ((real_mul ((A $ i) $ j)) (x $ j)))))))) ==> ((\A. (!x. (((matrix_vector_mul A) x) = (lambdai. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\j. ((real_mul ((A $ i) $ j)) (x $ j)))))))) A)) = ((\A. (!x. (((matrix_vector_mul A) x) = (lambdai. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\j. ((real_mul ((A $ i) $ j)) (x $ j)))))))) A))
T c= c==> ! ! c= cmatrix_vector_mul b0 b1 clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ b0 b2 b3 c$ b1 b3 * / ! c= cmatrix_vector_mul b0 b1 clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ b0 b2 b3 c$ b1 b3 f0 * / ! c= cmatrix_vector_mul b0 b1 clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ b0 b2 b3 c$ b1 b3 f0
+ |- ((!x. ((P x) /\ (Q x))) = ((!x. (P x)) /\ (!x. (Q x))))
T c= ! c/\ * f0 b0 * f1 b0 c/\ ! * f0 b0 ! * f1 b0
+ (!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) |- ((!f''. ((?f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) ==> (f' = f''))) = T)
T c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c= ! c==> c? / c? / c/\ chas_complex_derivative b1 f0 cat b2 chas_complex_derivative b1 b0 cat b2 c= f0 b0 cT
+ ((\f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) f) |- (((\f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) f) /\ ((!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) ==> (f' = f'')))
T c==> * / c? / c/\ chas_complex_derivative b0 f0 cat b1 chas_complex_derivative b0 f1 cat b1 f2 c/\ * / c? / c/\ chas_complex_derivative b0 f0 cat b1 chas_complex_derivative b0 f1 cat b1 f2 c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c= f0 f1
+ ((complex_differentiable f) (at z)) |- (((complex_differentiable f) (at z)) /\ (((complex_derivative f) z) = (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))))
T c==> ccomplex_differentiable f0 cat f1 c/\ ccomplex_differentiable f0 cat f1 c= ccomplex_derivative f0 f1 ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- (((!x. (((\f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) x) ==> ((!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) ==> (f' = f'')))) ==> ((?f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) ==> ((!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) ==> (f' = f'')))) = ((?f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) ==> ((!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) ==> (f' = f''))))
T c= c==> ! c==> * / c? / c/\ chas_complex_derivative b1 f0 cat b2 chas_complex_derivative b1 f1 cat b2 b0 c==> ! ! ! ! c==> c/\ chas_complex_derivative b1 b3 cat b2 chas_complex_derivative b1 b4 cat b2 c= b3 b4 c= f0 f1 c==> c? / c? / c/\ chas_complex_derivative b0 f0 cat b1 chas_complex_derivative b0 f1 cat b1 c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c= f0 f1 c==> c? / c? / c/\ chas_complex_derivative b0 f0 cat b1 chas_complex_derivative b0 f1 cat b1 c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c= f0 f1
+ |- ((?x. ((P x) \/ (Q x))) = ((?x. (P x)) \/ (?x. (Q x))))
T c= c? / c\/ * f0 b0 * f1 b0 c\/ c? / * f0 b0 c? / * f1 b0
+ |- ((\net. (((differentiable f) net) = (((has_derivative f) (\h. ((matrix_vector_mul ((jacobian f) net)) h))) net))) net)
T * / c= cdifferentiable f0 b0 chas_derivative f0 / cmatrix_vector_mul cjacobian f0 b0 b1 b0 f1
+ |- ((\z. (((complex_mul w) z) = (complex (((real_sub ((real_mul (Re w)) (Re z))) ((real_mul (Im w)) (Im z))) , ((real_add ((real_mul (Re w)) (Im z))) ((real_mul (Im w)) (Re z))))))) z)
T * / c= ccomplex_mul f0 b0 ccomplex c, creal_sub creal_mul cRe f0 cRe b0 creal_mul cIm f0 cIm b0 creal_add creal_mul cRe f0 cIm b0 creal_mul cIm f0 cRe b0 f1
+ |- ((\P. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (P i))) = ((P (NUMERAL (BIT1 _0))) /\ (P (NUMERAL (BIT0 (BIT1 _0))))))) P)
T * / c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cNUMERAL cBIT0 cBIT1 c_0 * b0 b1 c/\ * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 f0
+ |- (((!f. (!net. (((differentiable f) net) = (((has_derivative f) (\h. ((matrix_vector_mul ((jacobian f) net)) h))) net)))) ==> ((\f. (!net. (((differentiable f) net) = (((has_derivative f) (\h. ((matrix_vector_mul ((jacobian f) net)) h))) net)))) f)) = ((\f. (!net. (((differentiable f) net) = (((has_derivative f) (\h. ((matrix_vector_mul ((jacobian f) net)) h))) net)))) f))
T c= c==> ! ! c= cdifferentiable b0 b1 chas_derivative b0 / cmatrix_vector_mul cjacobian b0 b1 b2 b1 * / ! c= cdifferentiable b0 b1 chas_derivative b0 / cmatrix_vector_mul cjacobian b0 b1 b2 b1 f0 * / ! c= cdifferentiable b0 b1 chas_derivative b0 / cmatrix_vector_mul cjacobian b0 b1 b2 b1 f0
+ |- (!p'. (!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3
+ |- (((!x. (((matrix_vector_mul A) x) = (lambdai. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\j. ((real_mul ((A $ i) $ j)) (x $ j))))))) ==> ((\x. (((matrix_vector_mul A) x) = (lambdai. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\j. ((real_mul ((A $ i) $ j)) (x $ j))))))) x)) = ((\x. (((matrix_vector_mul A) x) = (lambdai. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\j. ((real_mul ((A $ i) $ j)) (x $ j))))))) x))
T c= c==> ! c= cmatrix_vector_mul f0 b0 clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b1 b2 c$ b0 b2 * / c= cmatrix_vector_mul f0 b0 clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b1 b2 c$ b0 b2 f1 * / c= cmatrix_vector_mul f0 b0 clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b1 b2 c$ b0 b2 f1
+ |- (((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q')))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3 cT
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_add ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0))))))) $ i) = ((\i. ((real_add ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0))))))) i))) = (((lambdai. ((real_add ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0))))))) $ i) = ((\i. ((real_add ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_mul ((((jacobian f) (at z)) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0))))))) i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add creal_mul c$ c$ cjacobian f1 cat f2 b0 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cjacobian f1 cat f2 b0 cNUMERAL cBIT0 cBIT1 c_0 c$ f3 cNUMERAL cBIT0 cBIT1 c_0 f0 * / creal_add creal_mul c$ c$ cjacobian f1 cat f2 b0 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cjacobian f1 cat f2 b0 cNUMERAL cBIT0 cBIT1 c_0 c$ f3 cNUMERAL cBIT0 cBIT1 c_0 f0 c= c$ clambda / creal_add creal_mul c$ c$ cjacobian f1 cat f2 b0 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cjacobian f1 cat f2 b0 cNUMERAL cBIT0 cBIT1 c_0 c$ f3 cNUMERAL cBIT0 cBIT1 c_0 f0 * / creal_add creal_mul c$ c$ cjacobian f1 cat f2 b0 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cjacobian f1 cat f2 b0 cNUMERAL cBIT0 cBIT1 c_0 c$ f3 cNUMERAL cBIT0 cBIT1 c_0 f0
+ |- ((T /\ t) = t)
T c= c/\ cT f0 f0
+ |- ((z $ (NUMERAL (BIT0 (BIT1 _0)))) = (Im z))
T c= c$ f0 cNUMERAL cBIT0 cBIT1 c_0 cIm f0
+ |- ((\f'. (!net. ((((has_complex_derivative f) f') net) = (((has_derivative f) (\x. ((complex_mul f') x))) net)))) f')
T * / ! c= chas_complex_derivative f0 b0 b1 chas_derivative f0 / ccomplex_mul b0 b2 b1 f1
+ |- (((!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))) ==> ((\y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))) y)) = ((\y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))) y))
T c= c==> ! c= c= f0 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ f0 b1 c$ b0 b1 * / c= c= f0 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ f0 b1 c$ b0 b1 f1 * / c= c= f0 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ f0 b1 c$ b0 b1 f1
+ ((\z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z)))) z) |- (((\z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z)))) z) /\ ((!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) ==> (f' = f'')))
T c==> * / c/\ chas_complex_derivative f0 f1 cat b0 chas_complex_derivative f0 f2 cat b0 f3 c/\ * / c/\ chas_complex_derivative f0 f1 cat b0 chas_complex_derivative f0 f2 cat b0 f3 c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c= f1 f2
+ (!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) |- (((!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f''))))) ==> ((\z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f''))))) z)) = ((\z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f''))))) z))
T c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c= c==> ! ! ! c==> c/\ chas_complex_derivative f0 b1 cat b0 chas_complex_derivative f0 b2 cat b0 c= b1 b2 * / ! ! c==> c/\ chas_complex_derivative f0 b1 cat b0 chas_complex_derivative f0 b2 cat b0 c= b1 b2 f1 * / ! ! c==> c/\ chas_complex_derivative f0 b1 cat b0 chas_complex_derivative f0 b2 cat b0 c= b1 b2 f1
+ ((complex_differentiable f) (at z)) |- ((((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) /\ (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))))
T c==> ccomplex_differentiable f0 cat f1 c/\ c= c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
+ (!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) |- (((?f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) ==> (f' = f'')) = T)
T c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c= c==> c? / c? / c/\ chas_complex_derivative b0 f0 cat b1 chas_complex_derivative b0 f1 cat b1 c= f0 f1 cT
+ |- (((!f. (!z. (((complex_differentiable f) (at z)) = (((differentiable f) (at z)) /\ ((((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) /\ (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))))))) ==> ((\f. (!z. (((complex_differentiable f) (at z)) = (((differentiable f) (at z)) /\ ((((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) /\ (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))))))) f)) = ((\f. (!z. (((complex_differentiable f) (at z)) = (((differentiable f) (at z)) /\ ((((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) /\ (((((jacobian f) (at z)) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))))))) f))
T c= c==> ! ! c= ccomplex_differentiable b0 cat b1 c/\ cdifferentiable b0 cat b1 c/\ c= c$ c$ cjacobian b0 cat b1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian b0 cat b1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ c$ cjacobian b0 cat b1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cjacobian b0 cat b1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 * / ! c= ccomplex_differentiable b0 cat b1 c/\ cdifferentiable b0 cat b1 c/\ c= c$ c$ cjacobian b0 cat b1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian b0 cat b1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ c$ cjacobian b0 cat b1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cjacobian b0 cat b1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * / ! c= ccomplex_differentiable b0 cat b1 c/\ cdifferentiable b0 cat b1 c/\ c= c$ c$ cjacobian b0 cat b1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cjacobian b0 cat b1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ c$ cjacobian b0 cat b1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cjacobian b0 cat b1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f0
+ (~ (!x. ((((real_add ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (real_neg (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0))))))) (Im x))) = ((real_sub ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x)))) /\ (((real_add ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x))) = ((real_add ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x))) ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))))))) |- ((~ (!x. ((((real_add ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (real_neg (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0))))))) (Im x))) = ((real_sub ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x)))) /\ (((real_add ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))) ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x))) = ((real_add ((real_mul (Im (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Im x))) ((real_mul (Re (((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))))) (Re x))))))) /\ F)
T c==> c~ ! c/\ c= creal_add creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul creal_neg cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_sub creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 c= creal_add creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_add creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 c/\ c~ ! c/\ c= creal_add creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul creal_neg cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_sub creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 c= creal_add creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_add creal_mul cIm c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cIm b0 creal_mul cRe c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cRe b0 cF
+ ((\f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) f) |- (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))
T c==> * / c? / c/\ chas_complex_derivative b0 f0 cat b1 chas_complex_derivative b0 f1 cat b1 f2 c? / c/\ chas_complex_derivative f2 f0 cat b0 chas_complex_derivative f2 f1 cat b0
+ (!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) |- ((\f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))) f')
T c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 * / ! c==> c/\ chas_complex_derivative f0 b0 cat f1 chas_complex_derivative f0 b1 cat f1 c= b0 b1 f2
+ (!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) |- ((!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))) /\ (!f'. (!f''. ((?f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) ==> (f' = f'')))))
T c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c/\ ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 ! ! c==> c? / c? / c/\ chas_complex_derivative b2 b0 cat b3 chas_complex_derivative b2 b1 cat b3 c= b0 b1
+ (!f. (!z. (!f'. (!f''. (((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))) ==> (f' = f'')))))), (?f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) |- ((?f. (?z. ((((has_complex_derivative f) f') (at z)) /\ (((has_complex_derivative f) f'') (at z))))) /\ (f' = f''))
T c==> ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b1 chas_complex_derivative b0 b3 cat b1 c= b2 b3 c==> c? / c? / c/\ chas_complex_derivative b0 f0 cat b1 chas_complex_derivative b0 f1 cat b1 c/\ c? / c? / c/\ chas_complex_derivative b0 f0 cat b1 chas_complex_derivative b0 f1 cat b1 c= f0 f1
+ |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
+ |- (((!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i))))))) ==> ((\x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i))))))) x)) = ((\x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i))))))) x))
T c= c==> ! ! c= c= b0 b1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV c= c$ b0 b2 c$ b1 b2 * / ! c= c= b0 b1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV c= c$ b0 b2 c$ b1 b2 f0 * / ! c= c= b0 b1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV c= c$ b0 b2 c$ b1 b2 f0
+ |- ((\x. (((matrix_vector_mul A) x) = (lambdai. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\j. ((real_mul ((A $ i) $ j)) (x $ j))))))) x)
T * / c= cmatrix_vector_mul f0 b0 clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b1 b2 c$ b0 b2 f1
+ |- (!x. ((((real_add ((real_mul ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT1 _0))))) ((real_mul (real_neg ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x) $ (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_mul ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_mul ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((complex_mul (complex (((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) , ((((jacobian f) (at z)) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) x) $ (NUMERAL (BIT0 (BIT1 _0)))))))
T c/\ c= creal_add creal_mul c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_neg c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT0 cBIT1 c_0 c$ ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f2 cNUMERAL cBIT1 c_0 c= creal_add creal_mul c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ f2 cNUMERAL cBIT0 cBIT1 c_0 c$ ccomplex_mul ccomplex c, c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cjacobian f0 cat f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f2 cNUMERAL cBIT0 cBIT1 c_0
