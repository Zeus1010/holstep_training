N Tame_opposite.tuple_opposite_hypermap
C |- (!H. ((tuple_hypermap (opposite_hypermap H)) = ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H)))))))
T c= ctuple_hypermap copposite_hypermap f0 c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0
D TRUTH
A |- T
T cT
D FUN_EQ_THM
A |- (!f. (!g. ((f = g) = (!x. ((f x) = (g x))))))
T c= c= f0 f1 ! c= * f0 b0 * f1 b0
D o_THM
A |- (!f. (!g. (!x. (((f o g) x) = (f (g x))))))
T c= co f0 f1 f2 * f0 * f1 f2
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D FST
A |- (!x. (!y. ((FST (x , y)) = x)))
T c= cFST c, f0 f1 f0
D SND
A |- (!x. (!y. ((SND (x , y)) = y)))
T c= cSND c, f0 f1 f1
D PERMUTES_INVERSES_o
A |- (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I)))))
T c==> cpermutes f0 f1 c/\ c= * * part co f0 * part cinverse f0 part cI c= * * part co * part cinverse f0 f0 part cI
D PERMUTES_COMPOSE
A |- (!p. (!q. (!s. ((((permutes p) s) /\ ((permutes q) s)) ==> ((permutes (q o p)) s)))))
T c==> c/\ cpermutes f0 f1 cpermutes f2 f1 cpermutes * * part co f2 f0 f1
D PERMUTES_INVERSE
A |- (!p. (!s. (((permutes p) s) ==> ((permutes (inverse p)) s))))
T c==> cpermutes f0 f1 cpermutes * part cinverse f0 f1
D Hypermap.hypermap_tybij
A |- ((!a. ((hypermap (tuple_hypermap a)) = a)) /\ (!r. (((FINITE (FST r)) /\ (((permutes (FST (SND r))) (FST r)) /\ (((permutes (FST (SND (SND r)))) (FST r)) /\ (((permutes (SND (SND (SND r)))) (FST r)) /\ (((FST (SND r)) o ((FST (SND (SND r))) o (SND (SND (SND r))))) = I))))) = ((tuple_hypermap (hypermap r)) = r))))
T c/\ ! c= chypermap ctuple_hypermap b0 b0 ! c= c/\ cFINITE * part cFST b0 c/\ cpermutes * part cFST cSND b0 * part cFST b0 c/\ cpermutes * part cFST cSND cSND b0 * part cFST b0 c/\ cpermutes * part cSND cSND cSND b0 * part cFST b0 c= * * part co * part cFST cSND b0 * * part co * part cFST cSND cSND b0 * part cSND cSND cSND b0 part cI c= ctuple_hypermap chypermap b0 b0
D Hypermap.hypermap_lemma
A |- (!H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))))
T c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
D Tame_defs.opposite_hypermap
A |- (!H. ((opposite_hypermap H) = (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))))
T c= copposite_hypermap f0 chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0
+ |- (((!x. ((I x) = x)) ==> ((\x. ((I x) = x)) x)) = ((\x. ((I x) = x)) x))
T c= c==> ! c= cI b0 b0 * / c= cI b0 b0 f0 * / c= cI b0 b0 f0
- ((!x. (((face_map H) ((inverse (face_map H)) x)) = x)) /\ (!x. (((inverse (face_map H)) ((face_map H) x)) = x))) |- (((!x. (((inverse (face_map H)) ((face_map H) x)) = x)) ==> ((\x. (((inverse (face_map H)) ((face_map H) x)) = x)) x)) = ((\x. (((inverse (face_map H)) ((face_map H) x)) = x)) x))
T c==> c/\ ! c= cface_map f0 cinverse * part cface_map f0 b0 b0 ! c= cinverse * part cface_map f0 cface_map f0 b0 b0 c= c==> ! c= cinverse * part cface_map f0 cface_map f0 b0 b0 * / c= cinverse * part cface_map f0 cface_map f0 b0 b0 f1 * / c= cinverse * part cface_map f0 cface_map f0 b0 b0 f1
+ |- ((\p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I))))) (node_map H))
T * / ! c==> cpermutes b0 b1 c/\ c= * * part co b0 * part cinverse b0 part cI c= * * part co * part cinverse b0 b0 part cI * part cnode_map f0
+ ((!x. (((node_map H) ((inverse (node_map H)) x)) = x)) /\ (!x. (((inverse (node_map H)) ((node_map H) x)) = x))) |- (((!x. (((node_map H) ((inverse (node_map H)) x)) = x)) ==> ((\x. (((node_map H) ((inverse (node_map H)) x)) = x)) x)) = ((\x. (((node_map H) ((inverse (node_map H)) x)) = x)) x))
T c==> c/\ ! c= cnode_map f0 cinverse * part cnode_map f0 b0 b0 ! c= cinverse * part cnode_map f0 cnode_map f0 b0 b0 c= c==> ! c= cnode_map f0 cinverse * part cnode_map f0 b0 b0 * / c= cnode_map f0 cinverse * part cnode_map f0 b0 b0 f1 * / c= cnode_map f0 cinverse * part cnode_map f0 b0 b0 f1
+ (FINITE (dart H)), (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))), ((permutes (node_map H)) (dart H)) |- ((FINITE (dart H)) /\ (((permutes ((face_map H) o (node_map H))) (dart H)) /\ (((permutes (inverse (node_map H))) (dart H)) /\ (((permutes (inverse (face_map H))) (dart H)) /\ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = I)))))
T c==> cFINITE * part cdart f0 c==> c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> cpermutes * part cnode_map f0 * part cdart f0 c/\ cFINITE * part cdart f0 c/\ cpermutes * * part co * part cface_map f0 * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cinverse * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cinverse * part cface_map f0 * part cdart f0 c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI
+ |- ((\q'. (((((permutes (face_map H)) (dart H)) ==> ((((face_map H) o (inverse (face_map H))) = I) /\ (((inverse (face_map H)) o (face_map H)) = I))) = p') ==> ((p' ==> (((((permutes (node_map H)) (dart H)) ==> ((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I))) ==> (!x. (((face_map H) ((node_map H) ((inverse (node_map H)) ((inverse (face_map H)) x)))) = x))) = q')) ==> (((((permutes (face_map H)) (dart H)) ==> ((((face_map H) o (inverse (face_map H))) = I) /\ (((inverse (face_map H)) o (face_map H)) = I))) ==> ((((permutes (node_map H)) (dart H)) ==> ((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I))) ==> (!x. (((face_map H) ((node_map H) ((inverse (node_map H)) ((inverse (face_map H)) x)))) = x)))) = (p' ==> q'))))) q')
T * / c==> c= c==> cpermutes * part cface_map f0 * part cdart f0 c/\ c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c= * * part co * part cinverse * part cface_map f0 * part cface_map f0 part cI f1 c==> c==> f1 c= c==> c==> cpermutes * part cnode_map f0 * part cdart f0 c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI ! c= cface_map f0 cnode_map f0 cinverse * part cnode_map f0 cinverse * part cface_map f0 b1 b1 b0 c= c==> c==> cpermutes * part cface_map f0 * part cdart f0 c/\ c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c= * * part co * part cinverse * part cface_map f0 * part cface_map f0 part cI c==> c==> cpermutes * part cnode_map f0 * part cdart f0 c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI ! c= cface_map f0 cnode_map f0 cinverse * part cnode_map f0 cinverse * part cface_map f0 b1 b1 c==> f1 b0 f2
+ ((!x. (((face_map H) ((inverse (face_map H)) x)) = x)) /\ (!x. (((inverse (face_map H)) ((face_map H) x)) = x))) |- ((\x. (((face_map H) ((inverse (face_map H)) x)) = x)) x)
T c==> c/\ ! c= cface_map f0 cinverse * part cface_map f0 b0 b0 ! c= cinverse * part cface_map f0 cface_map f0 b0 b0 * / c= cface_map f0 cinverse * part cface_map f0 b0 b0 f1
+ ((permutes p) s) |- (((permutes p) s) /\ (((permutes (inverse p)) s) = T))
T c==> cpermutes f0 f1 c/\ cpermutes f0 f1 c= cpermutes * part cinverse f0 f1 cT
+ ((permutes (node_map H)) (dart H)) |- (((permutes (inverse (node_map H))) (dart H)) = T)
T c==> cpermutes * part cnode_map f0 * part cdart f0 c= cpermutes * part cinverse * part cnode_map f0 * part cdart f0 cT
+ |- ((\p'. (!q'. (((((permutes (face_map H)) (dart H)) ==> ((((face_map H) o (inverse (face_map H))) = I) /\ (((inverse (face_map H)) o (face_map H)) = I))) = p') ==> ((p' ==> (((((permutes (node_map H)) (dart H)) ==> ((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I))) ==> (!x. (((face_map H) ((node_map H) ((inverse (node_map H)) ((inverse (face_map H)) x)))) = x))) = q')) ==> (((((permutes (face_map H)) (dart H)) ==> ((((face_map H) o (inverse (face_map H))) = I) /\ (((inverse (face_map H)) o (face_map H)) = I))) ==> ((((permutes (node_map H)) (dart H)) ==> ((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I))) ==> (!x. (((face_map H) ((node_map H) ((inverse (node_map H)) ((inverse (face_map H)) x)))) = x)))) = (p' ==> q')))))) p')
T * / ! c==> c= c==> cpermutes * part cface_map f0 * part cdart f0 c/\ c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c= * * part co * part cinverse * part cface_map f0 * part cface_map f0 part cI b0 c==> c==> b0 c= c==> c==> cpermutes * part cnode_map f0 * part cdart f0 c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI ! c= cface_map f0 cnode_map f0 cinverse * part cnode_map f0 cinverse * part cface_map f0 b2 b2 b1 c= c==> c==> cpermutes * part cface_map f0 * part cdart f0 c/\ c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c= * * part co * part cinverse * part cface_map f0 * part cface_map f0 part cI c==> c==> cpermutes * part cnode_map f0 * part cdart f0 c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI ! c= cface_map f0 cnode_map f0 cinverse * part cnode_map f0 cinverse * part cface_map f0 b2 b2 c==> b0 b1 f1
+ T |- (T /\ (((((node_map H) o (inverse (node_map H))) = I) /\ (((inverse (node_map H)) o (node_map H)) = I)) = ((!x. (((node_map H) ((inverse (node_map H)) x)) = x)) /\ (!x. (((inverse (node_map H)) ((node_map H) x)) = x)))))
T c==> cT c/\ cT c= c/\ c= * * part co * part cnode_map f0 * part cinverse * part cnode_map f0 part cI c= * * part co * part cinverse * part cnode_map f0 * part cnode_map f0 part cI c/\ ! c= cnode_map f0 cinverse * part cnode_map f0 b0 b0 ! c= cinverse * part cnode_map f0 cnode_map f0 b0 b0
+ |- (((!r. (((tuple_hypermap (hypermap r)) = r) = ((FINITE (FST r)) /\ (((permutes (FST (SND r))) (FST r)) /\ (((permutes (FST (SND (SND r)))) (FST r)) /\ (((permutes (SND (SND (SND r)))) (FST r)) /\ (((FST (SND r)) o ((FST (SND (SND r))) o (SND (SND (SND r))))) = I))))))) ==> ((\r. (((tuple_hypermap (hypermap r)) = r) = ((FINITE (FST r)) /\ (((permutes (FST (SND r))) (FST r)) /\ (((permutes (FST (SND (SND r)))) (FST r)) /\ (((permutes (SND (SND (SND r)))) (FST r)) /\ (((FST (SND r)) o ((FST (SND (SND r))) o (SND (SND (SND r))))) = I))))))) r)) = ((\r. (((tuple_hypermap (hypermap r)) = r) = ((FINITE (FST r)) /\ (((permutes (FST (SND r))) (FST r)) /\ (((permutes (FST (SND (SND r)))) (FST r)) /\ (((permutes (SND (SND (SND r)))) (FST r)) /\ (((FST (SND r)) o ((FST (SND (SND r))) o (SND (SND (SND r))))) = I))))))) r))
T c= c==> ! c= c= ctuple_hypermap chypermap b0 b0 c/\ cFINITE * part cFST b0 c/\ cpermutes * part cFST cSND b0 * part cFST b0 c/\ cpermutes * part cFST cSND cSND b0 * part cFST b0 c/\ cpermutes * part cSND cSND cSND b0 * part cFST b0 c= * * part co * part cFST cSND b0 * * part co * part cFST cSND cSND b0 * part cSND cSND cSND b0 part cI * / c= c= ctuple_hypermap chypermap b0 b0 c/\ cFINITE * part cFST b0 c/\ cpermutes * part cFST cSND b0 * part cFST b0 c/\ cpermutes * part cFST cSND cSND b0 * part cFST b0 c/\ cpermutes * part cSND cSND cSND b0 * part cFST b0 c= * * part co * part cFST cSND b0 * * part co * part cFST cSND cSND b0 * part cSND cSND cSND b0 part cI f0 * / c= c= ctuple_hypermap chypermap b0 b0 c/\ cFINITE * part cFST b0 c/\ cpermutes * part cFST cSND b0 * part cFST b0 c/\ cpermutes * part cFST cSND cSND b0 * part cFST b0 c/\ cpermutes * part cSND cSND cSND b0 * part cFST b0 c= * * part co * part cFST cSND b0 * * part co * part cFST cSND cSND b0 * part cSND cSND cSND b0 part cI f0
+ (FINITE (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- ((FINITE (dart H)) /\ (((permutes ((face_map H) o (node_map H))) (dart H)) /\ (((permutes (inverse (node_map H))) (dart H)) /\ (((permutes (inverse (face_map H))) (dart H)) /\ ((((face_map H) o (node_map H)) o ((inverse (node_map H)) o (inverse (face_map H)))) = I)))))
T c==> cFINITE * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c/\ cFINITE * part cdart f0 c/\ cpermutes * * part co * part cface_map f0 * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cinverse * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cinverse * part cface_map f0 * part cdart f0 c= * * part co * * part co * part cface_map f0 * part cnode_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 part cI
- |- ((\a. (a = (hypermap (tuple_hypermap a)))) a)
T * / c= b0 chypermap ctuple_hypermap b0 f0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- (((tuple_hypermap (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H)))))) = ((tuple_hypermap (opposite_hypermap H)) = ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H)))))))
T c= c= ctuple_hypermap chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c= ctuple_hypermap copposite_hypermap f0 c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0
+ ((permutes (face_map H)) (dart H)) |- (((permutes (inverse (face_map H))) (dart H)) = T)
T c==> cpermutes * part cface_map f0 * part cdart f0 c= cpermutes * part cinverse * part cface_map f0 * part cdart f0 cT
+ |- ((tuple_hypermap (hypermap ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))) = ((dart H) , (((face_map H) o (node_map H)) , ((inverse (node_map H)) , (inverse (face_map H))))))
T c= ctuple_hypermap chypermap c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0 c, * part cdart f0 c, * * part co * part cface_map f0 * part cnode_map f0 c, * part cinverse * part cnode_map f0 * part cinverse * part cface_map f0
+ |- (((!s. (((permutes (face_map H)) s) ==> ((((face_map H) o (inverse (face_map H))) = I) /\ (((inverse (face_map H)) o (face_map H)) = I)))) ==> ((\s. (((permutes (face_map H)) s) ==> ((((face_map H) o (inverse (face_map H))) = I) /\ (((inverse (face_map H)) o (face_map H)) = I)))) (dart H))) = ((\s. (((permutes (face_map H)) s) ==> ((((face_map H) o (inverse (face_map H))) = I) /\ (((inverse (face_map H)) o (face_map H)) = I)))) (dart H)))
T c= c==> ! c==> cpermutes * part cface_map f0 b0 c/\ c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c= * * part co * part cinverse * part cface_map f0 * part cface_map f0 part cI * / c==> cpermutes * part cface_map f0 b0 c/\ c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c= * * part co * part cinverse * part cface_map f0 * part cface_map f0 part cI * part cdart f0 * / c==> cpermutes * part cface_map f0 b0 c/\ c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI c= * * part co * part cinverse * part cface_map f0 * part cface_map f0 part cI * part cdart f0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- ((!x. (((face_map H) ((inverse (face_map H)) x)) = x)) /\ (!x. (((inverse (face_map H)) ((face_map H) x)) = x))) |- ((\x. (((inverse (face_map H)) ((face_map H) x)) = x)) x)
T c==> c/\ ! c= cface_map f0 cinverse * part cface_map f0 b0 b0 ! c= cinverse * part cface_map f0 cface_map f0 b0 b0 * / c= cinverse * part cface_map f0 cface_map f0 b0 b0 f1
- ((!x. (((node_map H) ((inverse (node_map H)) x)) = x)) /\ (!x. (((inverse (node_map H)) ((node_map H) x)) = x))) |- (((inverse (node_map H)) ((node_map H) x)) = x)
T c==> c/\ ! c= cnode_map f0 cinverse * part cnode_map f0 b0 b0 ! c= cinverse * part cnode_map f0 cnode_map f0 b0 b0 c= cinverse * part cnode_map f0 cnode_map f0 f1 f1
- ((!x. (((node_map H) ((inverse (node_map H)) x)) = x)) /\ (!x. (((inverse (node_map H)) ((node_map H) x)) = x))) |- ((\x. (((inverse (node_map H)) ((node_map H) x)) = x)) x)
T c==> c/\ ! c= cnode_map f0 cinverse * part cnode_map f0 b0 b0 ! c= cinverse * part cnode_map f0 cnode_map f0 b0 b0 * / c= cinverse * part cnode_map f0 cnode_map f0 b0 b0 f1
- ((!x. (((face_map H) ((inverse (face_map H)) x)) = x)) /\ (!x. (((inverse (face_map H)) ((face_map H) x)) = x))) |- (((inverse (face_map H)) ((face_map H) x)) = x)
T c==> c/\ ! c= cface_map f0 cinverse * part cface_map f0 b0 b0 ! c= cinverse * part cface_map f0 cface_map f0 b0 b0 c= cinverse * part cface_map f0 cface_map f0 f1 f1
- ((!x. (((node_map H) ((inverse (node_map H)) x)) = x)) /\ (!x. (((inverse (node_map H)) ((node_map H) x)) = x))) |- (((!x. (((inverse (node_map H)) ((node_map H) x)) = x)) ==> ((\x. (((inverse (node_map H)) ((node_map H) x)) = x)) x)) = ((\x. (((inverse (node_map H)) ((node_map H) x)) = x)) x))
T c==> c/\ ! c= cnode_map f0 cinverse * part cnode_map f0 b0 b0 ! c= cinverse * part cnode_map f0 cnode_map f0 b0 b0 c= c==> ! c= cinverse * part cnode_map f0 cnode_map f0 b0 b0 * / c= cinverse * part cnode_map f0 cnode_map f0 b0 b0 f1 * / c= cinverse * part cnode_map f0 cnode_map f0 b0 b0 f1
- ((permutes (face_map H)) (dart H)) |- (T = ((permutes (face_map H)) (dart H)))
T c==> cpermutes * part cface_map f0 * part cdart f0 c= cT cpermutes * part cface_map f0 * part cdart f0
- T |- (T = T)
T c==> cT c= cT cT
- |- ((a = (hypermap (tuple_hypermap a))) = T)
T c= c= f0 chypermap ctuple_hypermap f0 cT
- |- (a = (hypermap (tuple_hypermap a)))
T c= f0 chypermap ctuple_hypermap f0
- ((permutes (edge_map H)) (dart H)) |- (((permutes (edge_map H)) (dart H)) = T)
T c==> cpermutes * part cedge_map f0 * part cdart f0 c= cpermutes * part cedge_map f0 * part cdart f0 cT
- |- (((!a. (a = (hypermap (tuple_hypermap a)))) ==> ((\a. (a = (hypermap (tuple_hypermap a)))) a)) = ((\a. (a = (hypermap (tuple_hypermap a)))) a))
T c= c==> ! c= b0 chypermap ctuple_hypermap b0 * / c= b0 chypermap ctuple_hypermap b0 f0 * / c= b0 chypermap ctuple_hypermap b0 f0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- ((permutes (node_map H)) (dart H)) |- (T = ((permutes (node_map H)) (dart H)))
T c==> cpermutes * part cnode_map f0 * part cdart f0 c= cT cpermutes * part cnode_map f0 * part cdart f0
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
