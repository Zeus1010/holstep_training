N Tame_list.fgraph_seed
C |- (!p. ((fgraph (Seed p)) = ((CONS ((iota (NUMERAL _0)) (maxGon p))) ((CONS (rev ((iota (NUMERAL _0)) (maxGon p)))) NIL))))
T c= cfgraph cSeed f0 cCONS ciota cNUMERAL c_0 cmaxGon f0 cCONS crev ciota cNUMERAL c_0 cmaxGon f0 cNIL
D TRUTH
A |- T
T cT
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D FST
A |- (!x. (!y. ((FST (x , y)) = x)))
T c= cFST c, f0 f1 f0
D MAP
A |- ((!f. (((MAP f) NIL) = NIL)) /\ (!f. (!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))))))
T c/\ ! c= cMAP b0 cNIL cNIL ! ! ! c= cMAP b0 cCONS b1 b2 cCONS * b0 b1 cMAP b0 b2
D Tame_defs.faces
A |- (faces = FST)
T c= part cfaces part cFST
D Tame_defs.GRAPH
A |- (!fs. (!n. (!f. (!h. (((((Graph fs) n) f) h) = (fs , (n , (f , h))))))))
T c= cGraph f0 f1 f2 f3 c, f0 c, f1 c, f2 f3
D Tame_defs.graphl
A |- (!n. ((graphl n) = ((LET (\vs. (LET_END ((LET (\fs. (LET_END ((((Graph fs) n) ((REPLICATE n) fs)) ((REPLICATE n) (NUMERAL _0)))))) ((CONS (vs , T)) ((CONS ((REVERSE vs) , F)) NIL)))))) ((upt (NUMERAL _0)) n))))
T c= cgraphl f0 cLET / cLET_END cLET / cLET_END cGraph b1 f0 cREPLICATE f0 b1 cREPLICATE f0 cNUMERAL c_0 cCONS c, b0 cT cCONS c, cREVERSE b0 cF cNIL cupt cNUMERAL c_0 f0
D Tame_defs.fgraph
A |- (!g. ((fgraph g) = ((MAP FST) (faces g))))
T c= cfgraph f0 cMAP part cFST cfaces f0
D Tame_defs.SEED
A |- (!p. ((Seed p) = (graphl (maxGon p))))
T c= cSeed f0 cgraphl cmaxGon f0
D Tame_list.upt0
A |- (!i. (((upt (NUMERAL _0)) i) = ((iota (NUMERAL _0)) i)))
T c= cupt cNUMERAL c_0 f0 ciota cNUMERAL c_0 f0
D Tame_list.REVERSE_rev
A |- (REVERSE = rev)
T c= part cREVERSE part crev
- |- ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all))))
T c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
+ |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
+ |- (((!n. ((graphl n) = ((LET (\vs. (LET_END ((LET (\fs. (LET_END ((((Graph fs) n) ((REPLICATE n) fs)) ((REPLICATE n) (NUMERAL _0)))))) ((CONS (vs , T)) ((CONS ((REVERSE vs) , F)) NIL)))))) ((upt (NUMERAL _0)) n)))) ==> ((\n. ((graphl n) = ((LET (\vs. (LET_END ((LET (\fs. (LET_END ((((Graph fs) n) ((REPLICATE n) fs)) ((REPLICATE n) (NUMERAL _0)))))) ((CONS (vs , T)) ((CONS ((REVERSE vs) , F)) NIL)))))) ((upt (NUMERAL _0)) n)))) n)) = ((\n. ((graphl n) = ((LET (\vs. (LET_END ((LET (\fs. (LET_END ((((Graph fs) n) ((REPLICATE n) fs)) ((REPLICATE n) (NUMERAL _0)))))) ((CONS (vs , T)) ((CONS ((REVERSE vs) , F)) NIL)))))) ((upt (NUMERAL _0)) n)))) n))
T c= c==> ! c= cgraphl b0 cLET / cLET_END cLET / cLET_END cGraph b2 b0 cREPLICATE b0 b2 cREPLICATE b0 cNUMERAL c_0 cCONS c, b1 cT cCONS c, cREVERSE b1 cF cNIL cupt cNUMERAL c_0 b0 * / c= cgraphl b0 cLET / cLET_END cLET / cLET_END cGraph b2 b0 cREPLICATE b0 b2 cREPLICATE b0 cNUMERAL c_0 cCONS c, b1 cT cCONS c, cREVERSE b1 cF cNIL cupt cNUMERAL c_0 b0 f0 * / c= cgraphl b0 cLET / cLET_END cLET / cLET_END cGraph b2 b0 cREPLICATE b0 b2 cREPLICATE b0 cNUMERAL c_0 cCONS c, b1 cT cCONS c, cREVERSE b1 cF cNIL cupt cNUMERAL c_0 b0 f0
- |- ((FILTER = filter) /\ ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all)))))
T c/\ c= part cFILTER part cfilter c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
+ |- (((!f. (!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))))) ==> ((\f. (!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))))) f)) = ((\f. (!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))))) f))
T c= c==> ! ! ! c= cMAP b0 cCONS b1 b2 cCONS * b0 b1 cMAP b0 b2 * / ! ! c= cMAP b0 cCONS b1 b2 cCONS * b0 b1 cMAP b0 b2 f0 * / ! ! c= cMAP b0 cCONS b1 b2 cCONS * b0 b1 cMAP b0 b2 f0
+ |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
- |- ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all)))
T c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
- |- (MAP = map)
T c= part cMAP part cmap
- |- (LENGTH = sizel)
T c= part cLENGTH part csizel
- |- ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0)
T * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1
- |- ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))
T c==> c~ c= cNIL f0 c= cLAST f0 clast f1 f0
+ |- ((!p. t) = t)
T c= ! f0 f0
+ |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
+ |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
+ |- (((!n. (!f. (!h. (((((Graph fs) n) f) h) = (fs , (n , (f , h))))))) ==> ((\n. (!f. (!h. (((((Graph fs) n) f) h) = (fs , (n , (f , h))))))) n)) = ((\n. (!f. (!h. (((((Graph fs) n) f) h) = (fs , (n , (f , h))))))) n))
T c= c==> ! ! ! c= cGraph f0 b0 b1 b2 c, f0 c, b0 c, b1 b2 * / ! ! c= cGraph f0 b0 b1 b2 c, f0 c, b0 c, b1 b2 f1 * / ! ! c= cGraph f0 b0 b1 b2 c, f0 c, b0 c, b1 b2 f1
+ |- (((!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t))))) ==> ((\h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t))))) h)) = ((\h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t))))) h))
T c= c==> ! ! c= cMAP f0 cCONS b0 b1 cCONS * f0 b0 cMAP f0 b1 * / ! c= cMAP f0 cCONS b0 b1 cCONS * f0 b0 cMAP f0 b1 f1 * / ! c= cMAP f0 cCONS b0 b1 cCONS * f0 b0 cMAP f0 b1 f1
+ |- ((\n. (!f. (!h. (((((Graph fs) n) f) h) = (fs , (n , (f , h))))))) n)
T * / ! ! c= cGraph f0 b0 b1 b2 c, f0 c, b0 c, b1 b2 f1
+ |- ((\n. ((graphl n) = ((LET (\vs. (LET_END ((LET (\fs. (LET_END ((((Graph fs) n) ((REPLICATE n) fs)) ((REPLICATE n) (NUMERAL _0)))))) ((CONS (vs , T)) ((CONS ((REVERSE vs) , F)) NIL)))))) ((upt (NUMERAL _0)) n)))) n)
T * / c= cgraphl b0 cLET / cLET_END cLET / cLET_END cGraph b2 b0 cREPLICATE b0 b2 cREPLICATE b0 cNUMERAL c_0 cCONS c, b1 cT cCONS c, cREVERSE b1 cF cNIL cupt cNUMERAL c_0 b0 f0
+ |- (((!f. (!x. (((LET f) x) = (f x)))) ==> ((\f. (!x. (((LET f) x) = (f x)))) f)) = ((\f. (!x. (((LET f) x) = (f x)))) f))
T c= c==> ! ! c= cLET b0 b1 * b0 b1 * / ! c= cLET b0 b1 * b0 b1 f0 * / ! c= cLET b0 b1 * b0 b1 f0
+ |- (((!i. (((upt (NUMERAL _0)) i) = ((iota (NUMERAL _0)) i))) ==> ((\i. (((upt (NUMERAL _0)) i) = ((iota (NUMERAL _0)) i))) i)) = ((\i. (((upt (NUMERAL _0)) i) = ((iota (NUMERAL _0)) i))) i))
T c= c==> ! c= cupt cNUMERAL c_0 b0 ciota cNUMERAL c_0 b0 * / c= cupt cNUMERAL c_0 b0 ciota cNUMERAL c_0 b0 f0 * / c= cupt cNUMERAL c_0 b0 ciota cNUMERAL c_0 b0 f0
+ |- ((!p. (((CONS ((upt (NUMERAL _0)) (maxGon p))) ((CONS (REVERSE ((upt (NUMERAL _0)) (maxGon p)))) NIL)) = ((CONS ((iota (NUMERAL _0)) (maxGon p))) ((CONS (rev ((iota (NUMERAL _0)) (maxGon p)))) NIL)))) = (!p. ((fgraph (Seed p)) = ((CONS ((iota (NUMERAL _0)) (maxGon p))) ((CONS (rev ((iota (NUMERAL _0)) (maxGon p)))) NIL)))))
T c= ! c= cCONS cupt cNUMERAL c_0 cmaxGon b0 cCONS cREVERSE cupt cNUMERAL c_0 cmaxGon b0 cNIL cCONS ciota cNUMERAL c_0 cmaxGon b0 cCONS crev ciota cNUMERAL c_0 cmaxGon b0 cNIL ! c= cfgraph cSeed b0 cCONS ciota cNUMERAL c_0 cmaxGon b0 cCONS crev ciota cNUMERAL c_0 cmaxGon b0 cNIL
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- |- (((!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) ==> ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0)) = ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0))
T c= c==> ! c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1 * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1
- |- (((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) ==> ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s)) = ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s))
T c= c==> ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0 * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0
- |- (((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))) = T)
T c= c==> c~ c= cNIL f0 c= cLAST f0 clast f1 f0 cT
- |- ((LENGTH = sizel) /\ ((FILTER = filter) /\ ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all))))))
T c/\ c= part cLENGTH part csizel c/\ c= part cFILTER part cfilter c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
- |- ((APPEND = cat) /\ (ALL = all))
T c/\ c= part cAPPEND part ccat c= part cALL part call
- |- (FILTER = filter)
T c= part cFILTER part cfilter
- |- (((\fs. (f fs)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s)
T * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0
