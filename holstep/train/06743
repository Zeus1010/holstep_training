N Xwitccn.TAUSTAR_EQ_TAU_STAR_5_sqrt8
C |- (((((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s) /\ ((vv IN (BBs_v39 s)) /\ (((scs_k_v39 s) = (dimindex UNIV)) /\ (((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v) /\ (((matvec v) = a) /\ ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1)))))) ==> (((taustar_v39 s) vv) = ((tau_star s1) a)))
T c==> c/\ c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c/\ cIN f1 * part cBBs_v39 f0 c/\ c= cscs_k_v39 f0 cdimindex part cUNIV c/\ c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f2 c/\ c= cmatvec f2 f3 c= cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f0 f4 c= ctaustar_v39 f0 f1 ctau_star f4 f3
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_NEG_MINUS1
A |- (!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)))
T c= creal_neg f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D Misc_defs_and_lemmas.IN_ELIM_THM'
A |- ((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_UNIV
A |- (!x. (x IN UNIV))
T cIN f0 part cUNIV
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D IN_IMAGE
A |- (!y. (!s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s)))))))
T c= cIN f0 * * part cIMAGE f1 f2 c? / c/\ c= f0 * f1 b0 cIN b0 f2
D SUM_CLAUSES
A |- ((!f. (((sum EMPTY) f) = (real_of_num (NUMERAL _0)))) /\ (!x. (!f. (!s. ((FINITE s) ==> (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f)))))))))
T c/\ ! c= csum part cEMPTY b0 creal_of_num cNUMERAL c_0 ! ! ! c==> cFINITE b2 c= csum * * part cINSERT b0 b2 b1 cCOND cIN b0 b2 csum b2 b1 creal_add * b1 b0 csum b2 b1
D Dih2k_hypermap.VECMATS_MATVEC_ID
A |- ((vecmats (matvec A)) = A)
T c= cvecmats cmatvec f0 f0
D Hdplygy.J1_SY
A |- (!s. ((J1_SY s) = (GSPEC (\GEN%PVAR%7598. (?x. (((SETSPEC GEN%PVAR%7598) (?i. ((((i MOD (k_sy s)) INSERT (((f_sy s) (i MOD (k_sy s))) INSERT EMPTY)) IN (J_SY s)) /\ ((i IN ((NUMERAL (BIT1 _0)) .. (k_sy s))) /\ (x = (i , (SUC (i MOD (k_sy s))))))))) x))))))
T c= * part cJ1_SY f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ cIN * * part cINSERT cMOD b2 ck_sy f0 * * part cINSERT cf_sy f0 cMOD b2 ck_sy f0 part cEMPTY * part cJ_SY f0 c/\ cIN b2 * * part c.. cNUMERAL cBIT1 c_0 ck_sy f0 c= b1 c, b2 cSUC cMOD b2 ck_sy f0 b1
D Hdplygy.d_fun
A |- (!s. (!l. ((d_fun (s , l)) = ((real_add (d_sy s)) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) ((real_mul (sigma_sy s)) ((sum (J1_SY s)) (\x. ((real_sub cstab) (vector_norm ((vector_sub ((row (FST x)) (vecmats l))) ((row (SND x)) (vecmats l)))))))))))))
T c= cd_fun c, f0 f1 creal_add cd_sy f0 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 creal_mul csigma_sy f0 csum * part cJ1_SY f0 / creal_sub ccstab cvector_norm cvector_sub crow cFST b0 cvecmats f1 crow cSND b0 cvecmats f1
D Hdplygy.tau_star
A |- (!s. (!l. (((tau_star s) l) = ((real_sub (((tau_fun (V_SY (vecmats l))) (E_SY (vecmats l))) (F_SY (vecmats l)))) (d_fun (s , l))))))
T c= ctau_star f0 f1 creal_sub ctau_fun * part cV_SY cvecmats f1 * part cE_SY cvecmats f1 * part cF_SY cvecmats f1 cd_fun c, f0 f1
D Appendix.scs_k_v39_explicit
A |- (!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))))))))
T c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 f9 f0
D Appendix.scs_J_v39_explicit
A |- (!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))))))))
T c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 f9 f6
D Appendix.dsv_J_empty
A |- (!s. (!vv. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s)))))
T c==> c= * part cscs_J_v39 f0 / / cF c= cdsv_v39 f0 f1 cscs_d_v39 f0
D Appendix.taustar_v39
A |- (!s. (!vv. (((taustar_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END (((COND ((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0))))) ((real_sub (((tau3 (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0)))))) ((dsv_v39 s) vv))) ((real_sub (((tau_fun V) E) FF)) ((dsv_v39 s) vv)))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV)))))
T c= ctaustar_v39 f0 f1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c<= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT1 c_0 creal_sub ctau3 * f1 cNUMERAL c_0 * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL cBIT0 cBIT1 c_0 cdsv_v39 f0 f1 creal_sub ctau_fun b0 b1 b2 cdsv_v39 f0 f1 * * part cIMAGE / c, * f1 b2 * f1 cSUC b2 part cUNIV * * part cIMAGE / * * part cINSERT * f1 b1 * * part cINSERT * f1 cSUC b1 part cEMPTY part cUNIV * * part cIMAGE f1 part cUNIV
D Appendix.mk_unadorned_v39
A |- (!k. (!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))))))
T c= cmk_unadorned_v39 f0 f1 f2 f3 cscs_v39 c, f0 c, f1 c, f2 c, f2 c, f3 c, f3 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY
D Xwitccn.change_type_v2
A |- (!a. (!k. (((change_type_v2 a) k) = (GSPEC (\GEN%PVAR%7711. (?i. (?j. (((SETSPEC GEN%PVAR%7711) (((a i) j) = T)) ((i MOD k) INSERT ((j MOD k) INSERT EMPTY))))))))))
T c= * * part cchange_type_v2 f0 f1 * part cGSPEC / c? / c? / cSETSPEC b0 c= * * f0 b1 b2 cT * * part cINSERT cMOD b1 f1 * * part cINSERT cMOD b2 f1 part cEMPTY
D Xwitccn.SCS_5_sqrt8_IS_TRI_STABLE
A |- ((s = ((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) ==> (((((((stable_system (scs_k_v39 s)) (scs_d_v39 s)) ((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) (change_type_v3 (scs_b_v39 s))) ((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s))) (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))
T c==> c= f0 cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cstable_system cscs_k_v39 f0 cscs_d_v39 f0 * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f0 * part cchange_type_v3 * part cscs_b_v39 f0 * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f0
D Xwitccn.stable_sy_explicit
A |- (!k. (!d. (!s. (!a. (!b. (!J. (!f. ((((((((stable_system k) d) s) a) b) J) f) ==> (((k_sy (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = k) /\ (((d_sy (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = d) /\ (((a_sy (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = a) /\ (((b_sy (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = b) /\ (((J_SY (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = J) /\ (((I_SY (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = s) /\ ((f_sy (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = f)))))))))))))))
T c==> cstable_system f0 f1 f2 f3 f4 f5 f6 c/\ c= ck_sy cstable_sy c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 f6 f0 c/\ c= cd_sy cstable_sy c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 f6 f1 c/\ c= * part ca_sy cstable_sy c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 f6 f3 c/\ c= * part cb_sy cstable_sy c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 f6 f4 c/\ c= * part cJ_SY cstable_sy c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 f6 f5 c/\ c= * part cI_SY cstable_sy c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 f6 f2 c= * part cf_sy cstable_sy c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 f6 f6
D Xwitccn.V_E_FF_CASE_5_sqrt8
A |- (((s = ((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) /\ ((vv IN (BBs_v39 s)) /\ (((scs_k_v39 s) = (dimindex UNIV)) /\ (((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v) /\ ((matvec v) = a))))) ==> (((V_SY v) = ((IMAGE vv) UNIV)) /\ (((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) /\ ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))))
T c==> c/\ c= f0 cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ cIN f1 * part cBBs_v39 f0 c/\ c= cscs_k_v39 f0 cdimindex part cUNIV c/\ c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f2 c= cmatvec f2 f3 c/\ c= * part cV_SY f2 * * part cIMAGE f1 part cUNIV c/\ c= * part cE_SY f2 * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV c= * part cF_SY f2 * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV
+ (((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) |- (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((!k. (!d. (!s. (!a. (!b. (!J. (!f. ((((((((stable_system k) d) s) a) b) J) f) ==> (((k_sy (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = k) /\ (((d_sy (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = d) /\ (((a_sy (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = a) /\ (((b_sy (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = b) /\ (((J_SY (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = J) /\ (((I_SY (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = s) /\ ((f_sy (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = f))))))))))))))) ==> ((\k. (!d. (!s. (!a. (!b. (!J. (!f. ((((((((stable_system k) d) s) a) b) J) f) ==> (((k_sy (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = k) /\ (((d_sy (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = d) /\ (((a_sy (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = a) /\ (((b_sy (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = b) /\ (((J_SY (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = J) /\ (((I_SY (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = s) /\ ((f_sy (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = f))))))))))))))) (scs_k_v39 s))) = ((\k. (!d. (!s. (!a. (!b. (!J. (!f. ((((((((stable_system k) d) s) a) b) J) f) ==> (((k_sy (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = k) /\ (((d_sy (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = d) /\ (((a_sy (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = a) /\ (((b_sy (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = b) /\ (((J_SY (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = J) /\ (((I_SY (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = s) /\ ((f_sy (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = f))))))))))))))) (scs_k_v39 s)))
T c= c==> ! ! ! ! ! ! ! c==> cstable_system b0 b1 b2 b3 b4 b5 b6 c/\ c= ck_sy cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b0 c/\ c= cd_sy cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b1 c/\ c= * part ca_sy cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b3 c/\ c= * part cb_sy cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b4 c/\ c= * part cJ_SY cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b5 c/\ c= * part cI_SY cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b2 c= * part cf_sy cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b6 * / ! ! ! ! ! ! c==> cstable_system b0 b1 b2 b3 b4 b5 b6 c/\ c= ck_sy cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b0 c/\ c= cd_sy cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b1 c/\ c= * part ca_sy cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b3 c/\ c= * part cb_sy cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b4 c/\ c= * part cJ_SY cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b5 c/\ c= * part cI_SY cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b2 c= * part cf_sy cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b6 cscs_k_v39 f0 * / ! ! ! ! ! ! c==> cstable_system b0 b1 b2 b3 b4 b5 b6 c/\ c= ck_sy cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b0 c/\ c= cd_sy cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b1 c/\ c= * part ca_sy cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b3 c/\ c= * part cb_sy cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b4 c/\ c= * part cJ_SY cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b5 c/\ c= * part cI_SY cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b2 c= * part cf_sy cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b6 cscs_k_v39 f0
+ (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), ((((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s) /\ ((vv IN (BBs_v39 s)) /\ (((scs_k_v39 s) = (dimindex UNIV)) /\ (((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v) /\ (((matvec v) = a) /\ ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1)))))) |- (((taustar_v39 s) vv) = ((tau_star s1) a))
T c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c==> c/\ c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c/\ cIN f1 * part cBBs_v39 f0 c/\ c= cscs_k_v39 f0 cdimindex part cUNIV c/\ c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f2 c/\ c= cmatvec f2 f3 c= cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f0 f4 c= ctaustar_v39 f0 f1 ctau_star f4 f3
- (((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((real_neg ((real_sub B) C)) = ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C))
T c= creal_neg creal_sub f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1
- |- ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))) alpha)
T * / ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f2 f5
- |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
+ |- (((!s. (!l. ((d_fun (s , l)) = ((real_add (d_sy s)) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) ((real_mul (sigma_sy s)) ((sum (J1_SY s)) (\x. ((real_sub cstab) (vector_norm ((vector_sub ((row (FST x)) (vecmats l))) ((row (SND x)) (vecmats l))))))))))))) ==> ((\s. (!l. ((d_fun (s , l)) = ((real_add (d_sy s)) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) ((real_mul (sigma_sy s)) ((sum (J1_SY s)) (\x. ((real_sub cstab) (vector_norm ((vector_sub ((row (FST x)) (vecmats l))) ((row (SND x)) (vecmats l))))))))))))) s)) = ((\s. (!l. ((d_fun (s , l)) = ((real_add (d_sy s)) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) ((real_mul (sigma_sy s)) ((sum (J1_SY s)) (\x. ((real_sub cstab) (vector_norm ((vector_sub ((row (FST x)) (vecmats l))) ((row (SND x)) (vecmats l))))))))))))) s))
T c= c==> ! ! c= cd_fun c, b0 b1 creal_add cd_sy b0 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 creal_mul csigma_sy b0 csum * part cJ1_SY b0 / creal_sub ccstab cvector_norm cvector_sub crow cFST b2 cvecmats b1 crow cSND b2 cvecmats b1 * / ! c= cd_fun c, b0 b1 creal_add cd_sy b0 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 creal_mul csigma_sy b0 csum * part cJ1_SY b0 / creal_sub ccstab cvector_norm cvector_sub crow cFST b2 cvecmats b1 crow cSND b2 cvecmats b1 f0 * / ! c= cd_fun c, b0 b1 creal_add cd_sy b0 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 creal_mul csigma_sy b0 csum * part cJ1_SY b0 / creal_sub ccstab cvector_norm cvector_sub crow cFST b2 cvecmats b1 crow cSND b2 cvecmats b1 f0
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ (((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
- |- ((((~ (~ F)) = F) ==> (F ==> (~ (~ F)))) = (F ==> (~ (~ F))))
T c= c==> c= c~ c~ cF cF c==> cF c~ c~ cF c==> cF c~ c~ cF
+ |- (((!s. ((J1_SY s) = (GSPEC (\GEN%PVAR%7598. (?x. (((SETSPEC GEN%PVAR%7598) (?i. ((((i MOD (k_sy s)) INSERT (((f_sy s) (i MOD (k_sy s))) INSERT EMPTY)) IN (J_SY s)) /\ ((i IN ((NUMERAL (BIT1 _0)) .. (k_sy s))) /\ (x = (i , (SUC (i MOD (k_sy s))))))))) x)))))) ==> ((\s. ((J1_SY s) = (GSPEC (\GEN%PVAR%7598. (?x. (((SETSPEC GEN%PVAR%7598) (?i. ((((i MOD (k_sy s)) INSERT (((f_sy s) (i MOD (k_sy s))) INSERT EMPTY)) IN (J_SY s)) /\ ((i IN ((NUMERAL (BIT1 _0)) .. (k_sy s))) /\ (x = (i , (SUC (i MOD (k_sy s))))))))) x)))))) s)) = ((\s. ((J1_SY s) = (GSPEC (\GEN%PVAR%7598. (?x. (((SETSPEC GEN%PVAR%7598) (?i. ((((i MOD (k_sy s)) INSERT (((f_sy s) (i MOD (k_sy s))) INSERT EMPTY)) IN (J_SY s)) /\ ((i IN ((NUMERAL (BIT1 _0)) .. (k_sy s))) /\ (x = (i , (SUC (i MOD (k_sy s))))))))) x)))))) s))
T c= c==> ! c= * part cJ1_SY b0 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ cIN * * part cINSERT cMOD b3 ck_sy b0 * * part cINSERT cf_sy b0 cMOD b3 ck_sy b0 part cEMPTY * part cJ_SY b0 c/\ cIN b3 * * part c.. cNUMERAL cBIT1 c_0 ck_sy b0 c= b2 c, b3 cSUC cMOD b3 ck_sy b0 b2 * / c= * part cJ1_SY b0 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ cIN * * part cINSERT cMOD b3 ck_sy b0 * * part cINSERT cf_sy b0 cMOD b3 ck_sy b0 part cEMPTY * part cJ_SY b0 c/\ cIN b3 * * part c.. cNUMERAL cBIT1 c_0 ck_sy b0 c= b2 c, b3 cSUC cMOD b3 ck_sy b0 b2 f0 * / c= * part cJ1_SY b0 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ cIN * * part cINSERT cMOD b3 ck_sy b0 * * part cINSERT cf_sy b0 cMOD b3 ck_sy b0 part cEMPTY * part cJ_SY b0 c/\ cIN b3 * * part c.. cNUMERAL cBIT1 c_0 ck_sy b0 c= b2 c, b3 cSUC cMOD b3 ck_sy b0 b2 f0
+ |- (((!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))) ==> ((\lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))) lo)) = ((\lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))) lo))
T c= c==> ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f6 * / ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f6 f8 * / ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f6 f8
+ ((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)), ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)), ((V_SY v) = ((IMAGE vv) UNIV)), ((scs_k_v39 s) = (dimindex UNIV)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (vv IN (BBs_v39 s)) |- (((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> (((taustar_v39 s) vv) = ((tau_star s1) a)))
T c==> c= * part cE_SY f0 * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV c==> c= * part cF_SY f0 * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV c==> c= * part cV_SY f0 * * part cIMAGE f1 part cUNIV c==> c= cscs_k_v39 f2 cdimindex part cUNIV c==> c= cmatvec f0 f3 c==> c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f0 c==> c= cstable_sy c, cscs_k_v39 f2 c, cscs_d_v39 f2 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f2 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f2 c, * part cchange_type_v3 * part cscs_b_v39 f2 c, * * part cchange_type_v2 * part cscs_J_v39 f2 cscs_k_v39 f2 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f2 f4 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> cIN f1 * part cBBs_v39 f2 c==> c= cscs_k_v39 f2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= ctaustar_v39 f2 f1 ctau_star f4 f3
+ |- ((\s. ((J1_SY s) = (GSPEC (\GEN%PVAR%7598. (?x. (((SETSPEC GEN%PVAR%7598) (?i. ((((i MOD (k_sy s)) INSERT (((f_sy s) (i MOD (k_sy s))) INSERT EMPTY)) IN (J_SY s)) /\ ((i IN ((NUMERAL (BIT1 _0)) .. (k_sy s))) /\ (x = (i , (SUC (i MOD (k_sy s))))))))) x)))))) s)
T * / c= * part cJ1_SY b0 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ cIN * * part cINSERT cMOD b3 ck_sy b0 * * part cINSERT cf_sy b0 cMOD b3 ck_sy b0 part cEMPTY * part cJ_SY b0 c/\ cIN b3 * * part c.. cNUMERAL cBIT1 c_0 ck_sy b0 c= b2 c, b3 cSUC cMOD b3 ck_sy b0 b2 f0
+ |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
+ ((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)), ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)), ((V_SY v) = ((IMAGE vv) UNIV)), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((k_sy s1) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((scs_k_v39 s) = (dimindex UNIV)), ((d_sy s1) = (scs_d_v39 s)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (((a_sy s1) = (change_type_v3 (scs_a_v39 s))) /\ (((b_sy s1) = (change_type_v3 (scs_b_v39 s))) /\ (((J_SY s1) = ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ (((I_SY s1) = ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) /\ ((f_sy s1) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))))), (vv IN (BBs_v39 s)), (((((((stable_system (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (scs_d_v39 s)) ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) (change_type_v3 (scs_b_v39 s))) ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) |- (((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) ((real_add (d_sy s1)) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) ((real_mul (sigma_sy s1)) ((sum (J1_SY s1)) (\x. ((real_sub cstab) (vector_norm ((vector_sub ((row (FST x)) (vecmats a))) ((row (SND x)) (vecmats a))))))))))))
T c==> c= * part cE_SY f0 * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV c==> c= * part cF_SY f0 * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV c==> c= * part cV_SY f0 * * part cIMAGE f1 part cUNIV c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= ck_sy f2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cscs_k_v39 f3 cdimindex part cUNIV c==> c= cd_sy f2 cscs_d_v39 f3 c==> c= cmatvec f0 f4 c==> c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f0 c==> c= cstable_sy c, cscs_k_v39 f3 c, cscs_d_v39 f3 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f3 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f3 c, * part cchange_type_v3 * part cscs_b_v39 f3 c, * * part cchange_type_v2 * part cscs_J_v39 f3 cscs_k_v39 f3 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f3 f2 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f3 c==> c/\ c= * part ca_sy f2 * part cchange_type_v3 * part cscs_a_v39 f3 c/\ c= * part cb_sy f2 * part cchange_type_v3 * part cscs_b_v39 f3 c/\ c= * part cJ_SY f2 * * part cchange_type_v2 * part cscs_J_v39 f3 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= * part cI_SY f2 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= * part cf_sy f2 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> cIN f1 * part cBBs_v39 f3 c==> cstable_system cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cscs_d_v39 f3 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f3 * part cchange_type_v3 * part cscs_b_v39 f3 * * part cchange_type_v2 * part cscs_J_v39 f3 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= creal_sub ctau_fun * * part cIMAGE f1 part cUNIV * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV cdsv_v39 f3 f1 creal_sub ctau_fun * part cV_SY cvecmats f4 * part cE_SY cvecmats f4 * part cF_SY cvecmats f4 creal_add cd_sy f2 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 creal_mul csigma_sy f2 csum * part cJ1_SY f2 / creal_sub ccstab cvector_norm cvector_sub crow cFST b0 cvecmats f4 crow cSND b0 cvecmats f4
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((scs_k_v39 s) = (dimindex UNIV)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (((V_SY v) = ((IMAGE vv) UNIV)) /\ (((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) /\ ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))), (vv IN (BBs_v39 s)) |- (((taustar_v39 s) vv) = ((tau_star s1) a))
T c==> c= cscs_k_v39 f0 cdimindex part cUNIV c==> c= cmatvec f1 f2 c==> c= cvector cCONS * f3 cNUMERAL cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL c_0 cNIL f1 c==> c= cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f0 f4 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c==> c/\ c= * part cV_SY f1 * * part cIMAGE f3 part cUNIV c/\ c= * part cE_SY f1 * * part cIMAGE / * * part cINSERT * f3 b0 * * part cINSERT * f3 cSUC b0 part cEMPTY part cUNIV c= * part cF_SY f1 * * part cIMAGE / c, * f3 b0 * f3 cSUC b0 part cUNIV c==> cIN f3 * part cBBs_v39 f0 c= ctaustar_v39 f0 f3 ctau_star f4 f2
- |- (((!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)) ==> ((\str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)) str)) = ((\str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)) str))
T c= c==> ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f2 * / c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f2 f9 * / c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f2 f9
+ |- (((!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))) ==> ((\lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))) lo)) = ((\lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))) lo))
T c= c==> ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f0 * / ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f0 f8 * / ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f0 f8
+ |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
+ |- (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT1 _0)))) = F)
T c= c<= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF
+ |- (((!a. (!k. (((change_type_v2 a) k) = (GSPEC (\GEN%PVAR%7711. (?i. (?j. (((SETSPEC GEN%PVAR%7711) (((a i) j) = T)) ((i MOD k) INSERT ((j MOD k) INSERT EMPTY)))))))))) ==> ((\a. (!k. (((change_type_v2 a) k) = (GSPEC (\GEN%PVAR%7711. (?i. (?j. (((SETSPEC GEN%PVAR%7711) (((a i) j) = T)) ((i MOD k) INSERT ((j MOD k) INSERT EMPTY)))))))))) a)) = ((\a. (!k. (((change_type_v2 a) k) = (GSPEC (\GEN%PVAR%7711. (?i. (?j. (((SETSPEC GEN%PVAR%7711) (((a i) j) = T)) ((i MOD k) INSERT ((j MOD k) INSERT EMPTY)))))))))) a))
T c= c==> ! ! c= * * part cchange_type_v2 b0 b1 * part cGSPEC / c? / c? / cSETSPEC b2 c= * * b0 b3 b4 cT * * part cINSERT cMOD b3 b1 * * part cINSERT cMOD b4 b1 part cEMPTY * / ! c= * * part cchange_type_v2 b0 b1 * part cGSPEC / c? / c? / cSETSPEC b2 c= * * b0 b3 b4 cT * * part cINSERT cMOD b3 b1 * * part cINSERT cMOD b4 b1 part cEMPTY f0 * / ! c= * * part cchange_type_v2 b0 b1 * part cGSPEC / c? / c? / cSETSPEC b2 c= * * b0 b3 b4 cT * * part cINSERT cMOD b3 b1 * * part cINSERT cMOD b4 b1 part cEMPTY f0
+ ((J_SY s1) = ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))), ((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)), ((a_sy s1) = (change_type_v3 (scs_a_v39 s))), ((b_sy s1) = (change_type_v3 (scs_b_v39 s))), ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)), ((I_SY s1) = ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))), ((f_sy s1) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))), ((V_SY v) = ((IMAGE vv) UNIV)), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((k_sy s1) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((scs_k_v39 s) = (dimindex UNIV)), ((d_sy s1) = (scs_d_v39 s)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (vv IN (BBs_v39 s)), (((((((stable_system (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (scs_d_v39 s)) ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) (change_type_v3 (scs_b_v39 s))) ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) |- ((J1_SY s1) = EMPTY)
T c==> c= * part cJ_SY f0 * * part cchange_type_v2 * part cscs_J_v39 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= * part cE_SY f2 * * part cIMAGE / * * part cINSERT * f3 b0 * * part cINSERT * f3 cSUC b0 part cEMPTY part cUNIV c==> c= * part ca_sy f0 * part cchange_type_v3 * part cscs_a_v39 f1 c==> c= * part cb_sy f0 * part cchange_type_v3 * part cscs_b_v39 f1 c==> c= * part cF_SY f2 * * part cIMAGE / c, * f3 b0 * f3 cSUC b0 part cUNIV c==> c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= * part cV_SY f2 * * part cIMAGE f3 part cUNIV c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= ck_sy f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cscs_k_v39 f1 cdimindex part cUNIV c==> c= cd_sy f0 cscs_d_v39 f1 c==> c= cmatvec f2 f4 c==> c= cvector cCONS * f3 cNUMERAL cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL c_0 cNIL f2 c==> c= cstable_sy c, cscs_k_v39 f1 c, cscs_d_v39 f1 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f1 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f1 c, * part cchange_type_v3 * part cscs_b_v39 f1 c, * * part cchange_type_v2 * part cscs_J_v39 f1 cscs_k_v39 f1 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f1 f0 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f1 c==> cIN f3 * part cBBs_v39 f1 c==> cstable_system cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cscs_d_v39 f1 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f1 * part cchange_type_v3 * part cscs_b_v39 f1 * * part cchange_type_v2 * part cscs_J_v39 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= * part cJ1_SY f0 part cEMPTY
- |- (((!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))))) ==> ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))))) d)) = ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))))) d))
T c= c==> ! ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b2 * / ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b2 f2 * / ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b2 f2
+ |- ((\l. ((d_fun (s , l)) = ((real_add (d_sy s)) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) ((real_mul (sigma_sy s)) ((sum (J1_SY s)) (\x. ((real_sub cstab) (vector_norm ((vector_sub ((row (FST x)) (vecmats l))) ((row (SND x)) (vecmats l)))))))))))) l)
T * / c= cd_fun c, f0 b0 creal_add cd_sy f0 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 creal_mul csigma_sy f0 csum * part cJ1_SY f0 / creal_sub ccstab cvector_norm cvector_sub crow cFST b1 cvecmats b0 crow cSND b1 cvecmats b0 f1
+ |- ((\str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)) str)
T * / c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f0 f9
+ |- (((!s. (!vv. (((taustar_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END (((COND ((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0))))) ((real_sub (((tau3 (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0)))))) ((dsv_v39 s) vv))) ((real_sub (((tau_fun V) E) FF)) ((dsv_v39 s) vv)))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV))))) ==> ((\s. (!vv. (((taustar_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END (((COND ((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0))))) ((real_sub (((tau3 (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0)))))) ((dsv_v39 s) vv))) ((real_sub (((tau_fun V) E) FF)) ((dsv_v39 s) vv)))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV))))) s)) = ((\s. (!vv. (((taustar_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END (((COND ((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0))))) ((real_sub (((tau3 (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0)))))) ((dsv_v39 s) vv))) ((real_sub (((tau_fun V) E) FF)) ((dsv_v39 s) vv)))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV))))) s))
T c= c==> ! ! c= ctaustar_v39 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c<= cscs_k_v39 b0 cNUMERAL cBIT1 cBIT1 c_0 creal_sub ctau3 * b1 cNUMERAL c_0 * b1 cNUMERAL cBIT1 c_0 * b1 cNUMERAL cBIT0 cBIT1 c_0 cdsv_v39 b0 b1 creal_sub ctau_fun b2 b3 b4 cdsv_v39 b0 b1 * * part cIMAGE / c, * b1 b4 * b1 cSUC b4 part cUNIV * * part cIMAGE / * * part cINSERT * b1 b3 * * part cINSERT * b1 cSUC b3 part cEMPTY part cUNIV * * part cIMAGE b1 part cUNIV * / ! c= ctaustar_v39 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c<= cscs_k_v39 b0 cNUMERAL cBIT1 cBIT1 c_0 creal_sub ctau3 * b1 cNUMERAL c_0 * b1 cNUMERAL cBIT1 c_0 * b1 cNUMERAL cBIT0 cBIT1 c_0 cdsv_v39 b0 b1 creal_sub ctau_fun b2 b3 b4 cdsv_v39 b0 b1 * * part cIMAGE / c, * b1 b4 * b1 cSUC b4 part cUNIV * * part cIMAGE / * * part cINSERT * b1 b3 * * part cINSERT * b1 cSUC b3 part cEMPTY part cUNIV * * part cIMAGE b1 part cUNIV f0 * / ! c= ctaustar_v39 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c<= cscs_k_v39 b0 cNUMERAL cBIT1 cBIT1 c_0 creal_sub ctau3 * b1 cNUMERAL c_0 * b1 cNUMERAL cBIT1 c_0 * b1 cNUMERAL cBIT0 cBIT1 c_0 cdsv_v39 b0 b1 creal_sub ctau_fun b2 b3 b4 cdsv_v39 b0 b1 * * part cIMAGE / c, * b1 b4 * b1 cSUC b4 part cUNIV * * part cIMAGE / * * part cINSERT * b1 b3 * * part cINSERT * b1 cSUC b3 part cEMPTY part cUNIV * * part cIMAGE b1 part cUNIV f0
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\x. (((real_mul x) ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((scs_J_v39 s) = (\i. (\j. F))) |- ((!s. (!vv. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s))))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s)))
T c==> c= * part cscs_J_v39 f0 / / cF c==> ! ! c==> c= * part cscs_J_v39 b0 / / cF c= cdsv_v39 b0 b1 cscs_d_v39 b0 c= cdsv_v39 f0 f1 cscs_d_v39 f0
- |- (T = ((scs_k_v39 ((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))
T c= cT c= cscs_k_v39 cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
+ ((scs_k_v39 s) = (dimindex UNIV)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (vv IN (BBs_v39 s)) |- (((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1) /\ (((matvec v) = a) /\ (((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v) /\ (((scs_k_v39 s) = (dimindex UNIV)) /\ ((vv IN (BBs_v39 s)) /\ (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s))))))
T c==> c= cscs_k_v39 f0 cdimindex part cUNIV c==> c= cmatvec f1 f2 c==> c= cvector cCONS * f3 cNUMERAL cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL c_0 cNIL f1 c==> c= cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f0 f4 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c==> cIN f3 * part cBBs_v39 f0 c/\ c= cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f0 f4 c/\ c= cmatvec f1 f2 c/\ c= cvector cCONS * f3 cNUMERAL cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL c_0 cNIL f1 c/\ c= cscs_k_v39 f0 cdimindex part cUNIV c/\ cIN f3 * part cBBs_v39 f0 c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0
- |- ((\J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))) J)
T * / ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f5 f7
+ (((((((stable_system (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (scs_d_v39 s)) ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) (change_type_v3 (scs_b_v39 s))) ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) |- ((((((((stable_system (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (scs_d_v39 s)) ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) (change_type_v3 (scs_b_v39 s))) ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) = T)
T c==> cstable_system cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cscs_d_v39 f0 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f0 * part cchange_type_v3 * part cscs_b_v39 f0 * * part cchange_type_v2 * part cscs_J_v39 f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cstable_system cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cscs_d_v39 f0 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f0 * part cchange_type_v3 * part cscs_b_v39 f0 * * part cchange_type_v2 * part cscs_J_v39 f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cT
- |- ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))))) d)
T * / ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b2 f2
+ ((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)), ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)), ((V_SY v) = ((IMAGE vv) UNIV)), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((scs_k_v39 s) = (dimindex UNIV)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (vv IN (BBs_v39 s)), (((((((stable_system (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (scs_d_v39 s)) ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) (change_type_v3 (scs_b_v39 s))) ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) |- ((((k_sy s1) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((d_sy s1) = (scs_d_v39 s)) /\ (((a_sy s1) = (change_type_v3 (scs_a_v39 s))) /\ (((b_sy s1) = (change_type_v3 (scs_b_v39 s))) /\ (((J_SY s1) = ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ (((I_SY s1) = ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) /\ ((f_sy s1) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))))))) ==> (((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) ((real_add (d_sy s1)) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) ((real_mul (sigma_sy s1)) ((sum (J1_SY s1)) (\x. ((real_sub cstab) (vector_norm ((vector_sub ((row (FST x)) (vecmats a))) ((row (SND x)) (vecmats a)))))))))))))
T c==> c= * part cE_SY f0 * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV c==> c= * part cF_SY f0 * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV c==> c= * part cV_SY f0 * * part cIMAGE f1 part cUNIV c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cscs_k_v39 f2 cdimindex part cUNIV c==> c= cmatvec f0 f3 c==> c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f0 c==> c= cstable_sy c, cscs_k_v39 f2 c, cscs_d_v39 f2 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f2 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f2 c, * part cchange_type_v3 * part cscs_b_v39 f2 c, * * part cchange_type_v2 * part cscs_J_v39 f2 cscs_k_v39 f2 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f2 f4 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> cIN f1 * part cBBs_v39 f2 c==> cstable_system cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cscs_d_v39 f2 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f2 * part cchange_type_v3 * part cscs_b_v39 f2 * * part cchange_type_v2 * part cscs_J_v39 f2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c/\ c= ck_sy f4 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cd_sy f4 cscs_d_v39 f2 c/\ c= * part ca_sy f4 * part cchange_type_v3 * part cscs_a_v39 f2 c/\ c= * part cb_sy f4 * part cchange_type_v3 * part cscs_b_v39 f2 c/\ c= * part cJ_SY f4 * * part cchange_type_v2 * part cscs_J_v39 f2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= * part cI_SY f4 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= * part cf_sy f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= creal_sub ctau_fun * * part cIMAGE f1 part cUNIV * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV cdsv_v39 f2 f1 creal_sub ctau_fun * part cV_SY cvecmats f3 * part cE_SY cvecmats f3 * part cF_SY cvecmats f3 creal_add cd_sy f4 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 creal_mul csigma_sy f4 csum * part cJ1_SY f4 / creal_sub ccstab cvector_norm cvector_sub crow cFST b0 cvecmats f3 crow cSND b0 cvecmats f3
+ |- (((!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))) ==> ((\J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))) J)) = ((\J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))) J))
T c= c==> ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 b0 * / ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 b0 f7 * / ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 b0 f7
+ ((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)), ((a_sy s1) = (change_type_v3 (scs_a_v39 s))), ((b_sy s1) = (change_type_v3 (scs_b_v39 s))), ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)), ((V_SY v) = ((IMAGE vv) UNIV)), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((k_sy s1) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((scs_k_v39 s) = (dimindex UNIV)), ((d_sy s1) = (scs_d_v39 s)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (((b_sy s1) = (change_type_v3 (scs_b_v39 s))) /\ (((J_SY s1) = ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ (((I_SY s1) = ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) /\ ((f_sy s1) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))))), (vv IN (BBs_v39 s)), (((((((stable_system (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (scs_d_v39 s)) ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) (change_type_v3 (scs_b_v39 s))) ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) |- (((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) ((real_add (d_sy s1)) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) ((real_mul (sigma_sy s1)) ((sum (J1_SY s1)) (\x. ((real_sub cstab) (vector_norm ((vector_sub ((row (FST x)) (vecmats a))) ((row (SND x)) (vecmats a))))))))))))
T c==> c= * part cE_SY f0 * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV c==> c= * part ca_sy f2 * part cchange_type_v3 * part cscs_a_v39 f3 c==> c= * part cb_sy f2 * part cchange_type_v3 * part cscs_b_v39 f3 c==> c= * part cF_SY f0 * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV c==> c= * part cV_SY f0 * * part cIMAGE f1 part cUNIV c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= ck_sy f2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cscs_k_v39 f3 cdimindex part cUNIV c==> c= cd_sy f2 cscs_d_v39 f3 c==> c= cmatvec f0 f4 c==> c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f0 c==> c= cstable_sy c, cscs_k_v39 f3 c, cscs_d_v39 f3 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f3 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f3 c, * part cchange_type_v3 * part cscs_b_v39 f3 c, * * part cchange_type_v2 * part cscs_J_v39 f3 cscs_k_v39 f3 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f3 f2 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f3 c==> c/\ c= * part cb_sy f2 * part cchange_type_v3 * part cscs_b_v39 f3 c/\ c= * part cJ_SY f2 * * part cchange_type_v2 * part cscs_J_v39 f3 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= * part cI_SY f2 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= * part cf_sy f2 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> cIN f1 * part cBBs_v39 f3 c==> cstable_system cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cscs_d_v39 f3 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f3 * part cchange_type_v3 * part cscs_b_v39 f3 * * part cchange_type_v2 * part cscs_J_v39 f3 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= creal_sub ctau_fun * * part cIMAGE f1 part cUNIV * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV cdsv_v39 f3 f1 creal_sub ctau_fun * part cV_SY cvecmats f4 * part cE_SY cvecmats f4 * part cF_SY cvecmats f4 creal_add cd_sy f2 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 creal_mul csigma_sy f2 csum * part cJ1_SY f2 / creal_sub ccstab cvector_norm cvector_sub crow cFST b0 cvecmats f4 crow cSND b0 cvecmats f4
+ |- (((!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))))))) ==> ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))))))) a)) = ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))))))) a))
T c= c==> ! ! ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b4 * / ! ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b4 f3 * / ! ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b4 f3
+ ((V_SY v) = ((IMAGE vv) UNIV)), ((scs_k_v39 s) = (dimindex UNIV)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (vv IN (BBs_v39 s)) |- (((V_SY v) = ((IMAGE vv) UNIV)) /\ (((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1) /\ (((matvec v) = a) /\ (((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v) /\ (((scs_k_v39 s) = (dimindex UNIV)) /\ ((vv IN (BBs_v39 s)) /\ (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s)))))))
T c==> c= * part cV_SY f0 * * part cIMAGE f1 part cUNIV c==> c= cscs_k_v39 f2 cdimindex part cUNIV c==> c= cmatvec f0 f3 c==> c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f0 c==> c= cstable_sy c, cscs_k_v39 f2 c, cscs_d_v39 f2 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f2 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f2 c, * part cchange_type_v3 * part cscs_b_v39 f2 c, * * part cchange_type_v2 * part cscs_J_v39 f2 cscs_k_v39 f2 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f2 f4 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> cIN f1 * part cBBs_v39 f2 c/\ c= * part cV_SY f0 * * part cIMAGE f1 part cUNIV c/\ c= cstable_sy c, cscs_k_v39 f2 c, cscs_d_v39 f2 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f2 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f2 c, * part cchange_type_v3 * part cscs_b_v39 f2 c, * * part cchange_type_v2 * part cscs_J_v39 f2 cscs_k_v39 f2 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f2 f4 c/\ c= cmatvec f0 f3 c/\ c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f0 c/\ c= cscs_k_v39 f2 cdimindex part cUNIV c/\ cIN f1 * part cBBs_v39 f2 c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((real_neg ((real_sub ((real_sub A) B)) ((real_sub A) C))) = ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)))
T c= creal_neg creal_sub creal_sub f0 f1 creal_sub f0 f2 creal_add f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2
+ |- ((\vv. (!s. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s))))) vv)
T * / ! c==> c= * part cscs_J_v39 b1 / / cF c= cdsv_v39 b1 b0 cscs_d_v39 b1 f0
+ (!s. (!vv. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s))))) |- (!vv. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s))))
T c==> ! ! c==> c= * part cscs_J_v39 b0 / / cF c= cdsv_v39 b0 b1 cscs_d_v39 b0 ! c==> c= * part cscs_J_v39 f0 / / cF c= cdsv_v39 f0 b0 cscs_d_v39 f0
- |- ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))) b)
T * / ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f2 f4
+ (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (((scs_k_v39 s) = (dimindex UNIV)) /\ (((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v) /\ (((matvec v) = a) /\ ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1)))), (vv IN (BBs_v39 s)) |- (((taustar_v39 s) vv) = ((tau_star s1) a))
T c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c==> c/\ c= cscs_k_v39 f0 cdimindex part cUNIV c/\ c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f2 c/\ c= cmatvec f2 f3 c= cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f0 f4 c==> cIN f1 * part cBBs_v39 f0 c= ctaustar_v39 f0 f1 ctau_star f4 f3
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
- (~ ((((real_mul a) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) (real_of_num (NUMERAL _0))) = a))) |- ((~ ((((real_mul a) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) (real_of_num (NUMERAL _0))) = a))) /\ F)
T c==> c~ c/\ c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_of_num cNUMERAL c_0 f0 c/\ c~ c/\ c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_of_num cNUMERAL c_0 f0 cF
+ |- ((y = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) y) = (real_of_num (NUMERAL _0)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
+ |- (((!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))) ==> ((\beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))) beta)) = ((\beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))) beta))
T c= c==> ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b1 * / ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b1 f6 * / ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b1 f6
+ ((scs_k_v39 s) = (dimindex UNIV)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (((matvec v) = a) /\ ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1)), (vv IN (BBs_v39 s)) |- (((taustar_v39 s) vv) = ((tau_star s1) a))
T c==> c= cscs_k_v39 f0 cdimindex part cUNIV c==> c= cmatvec f1 f2 c==> c= cvector cCONS * f3 cNUMERAL cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL c_0 cNIL f1 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c==> c/\ c= cmatvec f1 f2 c= cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f0 f4 c==> cIN f3 * part cBBs_v39 f0 c= ctaustar_v39 f0 f3 ctau_star f4 f2
+ |- ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))))) b)
T * / ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b3 f4
+ |- ((((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY v)) (E_SY v)) (F_SY v))) (scs_d_v39 s))) = (((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY (vecmats (matvec v)))) (E_SY (vecmats (matvec v)))) (F_SY (vecmats (matvec v))))) (scs_d_v39 s))))
T c= c= creal_sub ctau_fun * * part cIMAGE f0 part cUNIV * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV cdsv_v39 f1 f0 creal_sub ctau_fun * part cV_SY f2 * part cE_SY f2 * part cF_SY f2 cscs_d_v39 f1 c= creal_sub ctau_fun * * part cIMAGE f0 part cUNIV * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV cdsv_v39 f1 f0 creal_sub ctau_fun * part cV_SY cvecmats cmatvec f2 * part cE_SY cvecmats cmatvec f2 * part cF_SY cvecmats cmatvec f2 cscs_d_v39 f1
- |- (((!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))) ==> ((\J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))) J)) = ((\J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))) J))
T c= c==> ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f5 * / ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f5 f7 * / ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f5 f7
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ ((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)), ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)), ((V_SY v) = ((IMAGE vv) UNIV)), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((scs_k_v39 s) = (dimindex UNIV)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (((k_sy s1) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((d_sy s1) = (scs_d_v39 s)) /\ (((a_sy s1) = (change_type_v3 (scs_a_v39 s))) /\ (((b_sy s1) = (change_type_v3 (scs_b_v39 s))) /\ (((J_SY s1) = ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ (((I_SY s1) = ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) /\ ((f_sy s1) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))))))), (vv IN (BBs_v39 s)), (((((((stable_system (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (scs_d_v39 s)) ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) (change_type_v3 (scs_b_v39 s))) ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) |- ((((k_sy s1) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((d_sy s1) = (scs_d_v39 s)) /\ (((a_sy s1) = (change_type_v3 (scs_a_v39 s))) /\ (((b_sy s1) = (change_type_v3 (scs_b_v39 s))) /\ (((J_SY s1) = ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ (((I_SY s1) = ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) /\ ((f_sy s1) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))))))) /\ (((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) ((real_add (d_sy s1)) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) ((real_mul (sigma_sy s1)) ((sum (J1_SY s1)) (\x. ((real_sub cstab) (vector_norm ((vector_sub ((row (FST x)) (vecmats a))) ((row (SND x)) (vecmats a)))))))))))))
T c==> c= * part cE_SY f0 * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV c==> c= * part cF_SY f0 * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV c==> c= * part cV_SY f0 * * part cIMAGE f1 part cUNIV c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cscs_k_v39 f2 cdimindex part cUNIV c==> c= cmatvec f0 f3 c==> c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f0 c==> c= cstable_sy c, cscs_k_v39 f2 c, cscs_d_v39 f2 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f2 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f2 c, * part cchange_type_v3 * part cscs_b_v39 f2 c, * * part cchange_type_v2 * part cscs_J_v39 f2 cscs_k_v39 f2 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f2 f4 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> c/\ c= ck_sy f4 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cd_sy f4 cscs_d_v39 f2 c/\ c= * part ca_sy f4 * part cchange_type_v3 * part cscs_a_v39 f2 c/\ c= * part cb_sy f4 * part cchange_type_v3 * part cscs_b_v39 f2 c/\ c= * part cJ_SY f4 * * part cchange_type_v2 * part cscs_J_v39 f2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= * part cI_SY f4 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= * part cf_sy f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> cIN f1 * part cBBs_v39 f2 c==> cstable_system cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cscs_d_v39 f2 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f2 * part cchange_type_v3 * part cscs_b_v39 f2 * * part cchange_type_v2 * part cscs_J_v39 f2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c/\ c= ck_sy f4 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cd_sy f4 cscs_d_v39 f2 c/\ c= * part ca_sy f4 * part cchange_type_v3 * part cscs_a_v39 f2 c/\ c= * part cb_sy f4 * part cchange_type_v3 * part cscs_b_v39 f2 c/\ c= * part cJ_SY f4 * * part cchange_type_v2 * part cscs_J_v39 f2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= * part cI_SY f4 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= * part cf_sy f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= creal_sub ctau_fun * * part cIMAGE f1 part cUNIV * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV cdsv_v39 f2 f1 creal_sub ctau_fun * part cV_SY cvecmats f3 * part cE_SY cvecmats f3 * part cF_SY cvecmats f3 creal_add cd_sy f4 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 creal_mul csigma_sy f4 csum * part cJ1_SY f4 / creal_sub ccstab cvector_norm cvector_sub crow cFST b0 cvecmats f3 crow cSND b0 cvecmats f3
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s) /\ ((vv IN (BBs_v39 s)) /\ (((scs_k_v39 s) = (dimindex UNIV)) /\ (((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v) /\ (((matvec v) = a) /\ ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1)))))) |- (((((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s) /\ ((vv IN (BBs_v39 s)) /\ (((scs_k_v39 s) = (dimindex UNIV)) /\ (((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v) /\ (((matvec v) = a) /\ ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1)))))) /\ (((taustar_v39 s) vv) = ((tau_star s1) a)))
T c==> c/\ c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c/\ cIN f1 * part cBBs_v39 f0 c/\ c= cscs_k_v39 f0 cdimindex part cUNIV c/\ c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f2 c/\ c= cmatvec f2 f3 c= cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f0 f4 c/\ c/\ c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c/\ cIN f1 * part cBBs_v39 f0 c/\ c= cscs_k_v39 f0 cdimindex part cUNIV c/\ c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f2 c/\ c= cmatvec f2 f3 c= cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f0 f4 c= ctaustar_v39 f0 f1 ctau_star f4 f3
+ (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0)))) ==> F), (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0)))) \/ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 cF
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
+ ((J_SY s1) = ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))), ((f_sy s1) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))), ((k_sy s1) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) |- (((GSPEC (\GEN%PVAR%7598. (?x. (((SETSPEC GEN%PVAR%7598) (?i. ((((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT ((((NUMERAL (BIT1 _0)) + (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT EMPTY)) IN ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ ((i IN ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ (x = (i , (SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))))))) x)))) = EMPTY) = ((J1_SY s1) = EMPTY))
T c==> c= * part cJ_SY f0 * * part cchange_type_v2 * part cscs_J_v39 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= ck_sy f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ cIN * * part cINSERT cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 * * part cINSERT cMOD c+ cNUMERAL cBIT1 c_0 cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 part cEMPTY * * part cchange_type_v2 * part cscs_J_v39 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ cIN b2 * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= b1 c, b2 cSUC cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b1 part cEMPTY c= * part cJ1_SY f0 part cEMPTY
- |- (((!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)) ==> ((\str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)) str)) = ((\str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)) str))
T c= c==> ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f1 * / c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f1 f9 * / c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f1 f9
+ ((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)), ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)), ((V_SY v) = ((IMAGE vv) UNIV)), ((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((scs_k_v39 s) = (dimindex UNIV)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (vv IN (BBs_v39 s)) |- (((taustar_v39 s) vv) = ((tau_star s1) a))
T c==> c= * part cE_SY f0 * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV c==> c= * part cF_SY f0 * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV c==> c= * part cV_SY f0 * * part cIMAGE f1 part cUNIV c==> c= cscs_k_v39 f2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cscs_k_v39 f2 cdimindex part cUNIV c==> c= cmatvec f0 f3 c==> c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f0 c==> c= cstable_sy c, cscs_k_v39 f2 c, cscs_d_v39 f2 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f2 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f2 c, * part cchange_type_v3 * part cscs_b_v39 f2 c, * * part cchange_type_v2 * part cscs_J_v39 f2 cscs_k_v39 f2 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f2 f4 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> cIN f1 * part cBBs_v39 f2 c= ctaustar_v39 f2 f1 ctau_star f4 f3
+ (~ ((((real_sub A) B) = ((real_sub A) C)) = (B = C))) |- ((((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0)))) \/ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))))) \/ ((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0))))))
T c==> c~ c= c= creal_sub f0 f1 creal_sub f0 f2 c= f1 f2 c\/ c\/ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 f2 creal_of_num cNUMERAL c_0 c\/ c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 f2 creal_of_num cNUMERAL c_0 c= creal_add f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL c_0 c= creal_add f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL c_0
- |- (((!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))) ==> ((\beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))) beta)) = ((\beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))) beta))
T c= c==> ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f2 * / ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f2 f6 * / ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f2 f6
+ |- ((((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
+ (((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) |- (((((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0))))) ==> F)
T c==> c\/ c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((GSPEC (\GEN%PVAR%7598. (?x. (((SETSPEC GEN%PVAR%7598) (?i. ((((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT ((((NUMERAL (BIT1 _0)) + (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT EMPTY)) IN (GSPEC (\GEN%PVAR%7711. (?i. (?j. (((SETSPEC GEN%PVAR%7711) F) ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT ((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT EMPTY)))))))) /\ ((i IN ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ (x = (i , (SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))))))) x)))) = EMPTY) = ((GSPEC (\GEN%PVAR%7598. (?x. (((SETSPEC GEN%PVAR%7598) (?i. ((((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT ((((NUMERAL (BIT1 _0)) + (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT EMPTY)) IN ((change_type_v2 (scs_J_v39 ((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ ((i IN ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ (x = (i , (SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))))))) x)))) = EMPTY))
T c= c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ cIN * * part cINSERT cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 * * part cINSERT cMOD c+ cNUMERAL cBIT1 c_0 cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 part cEMPTY * part cGSPEC / c? / c? / cSETSPEC b3 cF * * part cINSERT cMOD b4 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 * * part cINSERT cMOD b4 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 part cEMPTY c/\ cIN b2 * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= b1 c, b2 cSUC cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b1 part cEMPTY c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ cIN * * part cINSERT cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 * * part cINSERT cMOD c+ cNUMERAL cBIT1 c_0 cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 part cEMPTY * * part cchange_type_v2 * part cscs_J_v39 cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b3 / / / / / / cCOND c= cMOD b8 b4 cMOD b8 b4 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b8 b4 * * part cINSERT cMOD b8 b4 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b5 cCOND c\/ c= cMOD b8 b4 cMOD cSUC b8 b4 c= cMOD cSUC b8 b4 cMOD b8 b4 b6 b7 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ cIN b2 * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= b1 c, b2 cSUC cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b1 part cEMPTY
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- ((\s. (!l. ((d_fun (s , l)) = ((real_add (d_sy s)) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) ((real_mul (sigma_sy s)) ((sum (J1_SY s)) (\x. ((real_sub cstab) (vector_norm ((vector_sub ((row (FST x)) (vecmats l))) ((row (SND x)) (vecmats l))))))))))))) s)
T * / ! c= cd_fun c, b0 b1 creal_add cd_sy b0 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 creal_mul csigma_sy b0 csum * part cJ1_SY b0 / creal_sub ccstab cvector_norm cvector_sub crow cFST b2 cvecmats b1 crow cSND b2 cvecmats b1 f0
- |- ((((~ (~ F)) = F) ==> ((~ (~ F)) ==> F)) = ((~ (~ F)) ==> F))
T c= c==> c= c~ c~ cF cF c==> c~ c~ cF cF c==> c~ c~ cF cF
- |- ((\vv. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s)))) vv)
T * / c==> c= * part cscs_J_v39 f0 / / cF c= cdsv_v39 f0 b0 cscs_d_v39 f0 f1
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) |- ((((((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- ((!x. t) = t)
T c= ! f0 f0
+ |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
+ ((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)), ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)), ((V_SY v) = ((IMAGE vv) UNIV)), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((scs_k_v39 s) = (dimindex UNIV)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (vv IN (BBs_v39 s)) |- (((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END (((COND ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT1 _0))))) ((real_sub (((tau3 (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0)))))) ((dsv_v39 s) vv))) ((real_sub (((tau_fun V) E) FF)) ((dsv_v39 s) vv)))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) (d_fun (s1 , a))))
T c==> c= * part cE_SY f0 * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV c==> c= * part cF_SY f0 * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV c==> c= * part cV_SY f0 * * part cIMAGE f1 part cUNIV c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cscs_k_v39 f2 cdimindex part cUNIV c==> c= cmatvec f0 f3 c==> c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f0 c==> c= cstable_sy c, cscs_k_v39 f2 c, cscs_d_v39 f2 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f2 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f2 c, * part cchange_type_v3 * part cscs_b_v39 f2 c, * * part cchange_type_v2 * part cscs_J_v39 f2 cscs_k_v39 f2 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f2 f4 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> cIN f1 * part cBBs_v39 f2 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c<= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_sub ctau3 * f1 cNUMERAL c_0 * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL cBIT0 cBIT1 c_0 cdsv_v39 f2 f1 creal_sub ctau_fun b0 b1 b2 cdsv_v39 f2 f1 * * part cIMAGE / c, * f1 b2 * f1 cSUC b2 part cUNIV * * part cIMAGE / * * part cINSERT * f1 b1 * * part cINSERT * f1 cSUC b1 part cEMPTY part cUNIV * * part cIMAGE f1 part cUNIV creal_sub ctau_fun * part cV_SY cvecmats f3 * part cE_SY cvecmats f3 * part cF_SY cvecmats f3 cd_fun c, f4 f3
+ |- (((!s. (!a. (!b. (!J. (!f. ((((((((stable_system (scs_k_v39 s)) (scs_d_v39 s)) s) a) b) J) f) ==> (((k_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = (scs_k_v39 s)) /\ (((d_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = (scs_d_v39 s)) /\ (((a_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = a) /\ (((b_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = b) /\ (((J_SY (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = J) /\ (((I_SY (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = s) /\ ((f_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = f))))))))))))) ==> ((\s. (!a. (!b. (!J. (!f. ((((((((stable_system (scs_k_v39 s)) (scs_d_v39 s)) s) a) b) J) f) ==> (((k_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = (scs_k_v39 s)) /\ (((d_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = (scs_d_v39 s)) /\ (((a_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = a) /\ (((b_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = b) /\ (((J_SY (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = J) /\ (((I_SY (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = s) /\ ((f_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = f))))))))))))) ((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))))) = ((\s. (!a. (!b. (!J. (!f. ((((((((stable_system (scs_k_v39 s)) (scs_d_v39 s)) s) a) b) J) f) ==> (((k_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = (scs_k_v39 s)) /\ (((d_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = (scs_d_v39 s)) /\ (((a_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = a) /\ (((b_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = b) /\ (((J_SY (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = J) /\ (((I_SY (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = s) /\ ((f_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = f))))))))))))) ((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0))))))
T c= c==> ! ! ! ! ! c==> cstable_system cscs_k_v39 f0 cscs_d_v39 f0 b0 b1 b2 b3 b4 c/\ c= ck_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 cscs_k_v39 f0 c/\ c= cd_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 cscs_d_v39 f0 c/\ c= * part ca_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 b1 c/\ c= * part cb_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 b2 c/\ c= * part cJ_SY cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 b3 c/\ c= * part cI_SY cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 b0 c= * part cf_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 b4 * / ! ! ! ! c==> cstable_system cscs_k_v39 f0 cscs_d_v39 f0 b0 b1 b2 b3 b4 c/\ c= ck_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 cscs_k_v39 f0 c/\ c= cd_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 cscs_d_v39 f0 c/\ c= * part ca_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 b1 c/\ c= * part cb_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 b2 c/\ c= * part cJ_SY cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 b3 c/\ c= * part cI_SY cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 b0 c= * part cf_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 b4 * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 * / ! ! ! ! c==> cstable_system cscs_k_v39 f0 cscs_d_v39 f0 b0 b1 b2 b3 b4 c/\ c= ck_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 cscs_k_v39 f0 c/\ c= cd_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 cscs_d_v39 f0 c/\ c= * part ca_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 b1 c/\ c= * part cb_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 b2 c/\ c= * part cJ_SY cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 b3 c/\ c= * part cI_SY cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 b0 c= * part cf_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 b4 * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0
+ |- (((!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))) ==> ((\beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))) beta)) = ((\beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))) beta))
T c= c==> ! ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f0 * / ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f0 f6 * / ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f0 f6
+ ((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)), ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)), ((V_SY v) = ((IMAGE vv) UNIV)), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((scs_k_v39 s) = (dimindex UNIV)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (vv IN (BBs_v39 s)) |- (((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((taustar_v39 s) vv) = ((tau_star s1) a)))
T c==> c= * part cE_SY f0 * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV c==> c= * part cF_SY f0 * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV c==> c= * part cV_SY f0 * * part cIMAGE f1 part cUNIV c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cscs_k_v39 f2 cdimindex part cUNIV c==> c= cmatvec f0 f3 c==> c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f0 c==> c= cstable_sy c, cscs_k_v39 f2 c, cscs_d_v39 f2 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f2 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f2 c, * part cchange_type_v3 * part cscs_b_v39 f2 c, * * part cchange_type_v2 * part cscs_J_v39 f2 cscs_k_v39 f2 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f2 f4 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> cIN f1 * part cBBs_v39 f2 c/\ c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= ctaustar_v39 f2 f1 ctau_star f4 f3
+ (((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) |- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((!x. ((x IN P) = (P x))) ==> ((\x. ((x IN P) = (P x))) x)) = ((\x. ((x IN P) = (P x))) x))
T c= c==> ! c= cIN b0 f0 * f0 b0 * / c= cIN b0 f0 * f0 b0 f1 * / c= cIN b0 f0 * f0 b0 f1
+ ((d_sy s1) = (scs_d_v39 s)) |- ((((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) ((real_add (scs_d_v39 s)) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) ((real_mul (sigma_sy s1)) ((sum (J1_SY s1)) (\x. ((real_sub cstab) (vector_norm ((vector_sub ((row (FST x)) (vecmats a))) ((row (SND x)) (vecmats a)))))))))))) = (((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) ((real_add (d_sy s1)) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) ((real_mul (sigma_sy s1)) ((sum (J1_SY s1)) (\x. ((real_sub cstab) (vector_norm ((vector_sub ((row (FST x)) (vecmats a))) ((row (SND x)) (vecmats a)))))))))))))
T c==> c= cd_sy f0 cscs_d_v39 f1 c= c= creal_sub ctau_fun * * part cIMAGE f2 part cUNIV * * part cIMAGE / * * part cINSERT * f2 b0 * * part cINSERT * f2 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f2 b0 * f2 cSUC b0 part cUNIV cdsv_v39 f1 f2 creal_sub ctau_fun * part cV_SY cvecmats f3 * part cE_SY cvecmats f3 * part cF_SY cvecmats f3 creal_add cscs_d_v39 f1 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 creal_mul csigma_sy f0 csum * part cJ1_SY f0 / creal_sub ccstab cvector_norm cvector_sub crow cFST b0 cvecmats f3 crow cSND b0 cvecmats f3 c= creal_sub ctau_fun * * part cIMAGE f2 part cUNIV * * part cIMAGE / * * part cINSERT * f2 b0 * * part cINSERT * f2 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f2 b0 * f2 cSUC b0 part cUNIV cdsv_v39 f1 f2 creal_sub ctau_fun * part cV_SY cvecmats f3 * part cE_SY cvecmats f3 * part cF_SY cvecmats f3 creal_add cd_sy f0 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 creal_mul csigma_sy f0 csum * part cJ1_SY f0 / creal_sub ccstab cvector_norm cvector_sub crow cFST b0 cvecmats f3 crow cSND b0 cvecmats f3
- (!s. (!vv. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s))))), ((scs_J_v39 s) = (\i. (\j. F))) |- (((scs_J_v39 s) = (\i. (\j. F))) /\ (((dsv_v39 s) vv) = (scs_d_v39 s)))
T c==> ! ! c==> c= * part cscs_J_v39 b0 / / cF c= cdsv_v39 b0 b1 cscs_d_v39 b0 c==> c= * part cscs_J_v39 f0 / / cF c/\ c= * part cscs_J_v39 f0 / / cF c= cdsv_v39 f0 f1 cscs_d_v39 f0
- |- ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))))) k)
T * / ! ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b2 f1
+ |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((scs_k_v39 s) = (dimindex UNIV)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (vv IN (BBs_v39 s)) |- (((matvec v) = a) /\ (((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v) /\ (((scs_k_v39 s) = (dimindex UNIV)) /\ ((vv IN (BBs_v39 s)) /\ (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s)))))
T c==> c= cscs_k_v39 f0 cdimindex part cUNIV c==> c= cmatvec f1 f2 c==> c= cvector cCONS * f3 cNUMERAL cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL c_0 cNIL f1 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c==> cIN f3 * part cBBs_v39 f0 c/\ c= cmatvec f1 f2 c/\ c= cvector cCONS * f3 cNUMERAL cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL c_0 cNIL f1 c/\ c= cscs_k_v39 f0 cdimindex part cUNIV c/\ cIN f3 * part cBBs_v39 f0 c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0
+ |- ((F = t) = (~ t))
T c= c= cF f0 c~ f0
- |- (F ==> (~ (~ F)))
T c==> cF c~ c~ cF
- |- ((\J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))) J)
T * / ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f1 f7
+ |- (((!vv. (((taustar_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END (((COND ((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0))))) ((real_sub (((tau3 (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0)))))) ((dsv_v39 s) vv))) ((real_sub (((tau_fun V) E) FF)) ((dsv_v39 s) vv)))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV)))) ==> ((\vv. (((taustar_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END (((COND ((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0))))) ((real_sub (((tau3 (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0)))))) ((dsv_v39 s) vv))) ((real_sub (((tau_fun V) E) FF)) ((dsv_v39 s) vv)))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV)))) vv)) = ((\vv. (((taustar_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END (((COND ((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0))))) ((real_sub (((tau3 (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0)))))) ((dsv_v39 s) vv))) ((real_sub (((tau_fun V) E) FF)) ((dsv_v39 s) vv)))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV)))) vv))
T c= c==> ! c= ctaustar_v39 f0 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c<= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT1 c_0 creal_sub ctau3 * b0 cNUMERAL c_0 * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 cdsv_v39 f0 b0 creal_sub ctau_fun b1 b2 b3 cdsv_v39 f0 b0 * * part cIMAGE / c, * b0 b3 * b0 cSUC b3 part cUNIV * * part cIMAGE / * * part cINSERT * b0 b2 * * part cINSERT * b0 cSUC b2 part cEMPTY part cUNIV * * part cIMAGE b0 part cUNIV * / c= ctaustar_v39 f0 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c<= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT1 c_0 creal_sub ctau3 * b0 cNUMERAL c_0 * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 cdsv_v39 f0 b0 creal_sub ctau_fun b1 b2 b3 cdsv_v39 f0 b0 * * part cIMAGE / c, * b0 b3 * b0 cSUC b3 part cUNIV * * part cIMAGE / * * part cINSERT * b0 b2 * * part cINSERT * b0 cSUC b2 part cEMPTY part cUNIV * * part cIMAGE b0 part cUNIV f1 * / c= ctaustar_v39 f0 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c<= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT1 c_0 creal_sub ctau3 * b0 cNUMERAL c_0 * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 cdsv_v39 f0 b0 creal_sub ctau_fun b1 b2 b3 cdsv_v39 f0 b0 * * part cIMAGE / c, * b0 b3 * b0 cSUC b3 part cUNIV * * part cIMAGE / * * part cINSERT * b0 b2 * * part cINSERT * b0 cSUC b2 part cEMPTY part cUNIV * * part cIMAGE b0 part cUNIV f1
- |- ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))))))) a)
T * / ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 f1 f3
- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ (((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0))))) ==> F), ((((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0)))) \/ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))))) \/ ((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))))) |- F
T c==> c==> c\/ c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF c==> c\/ c\/ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c\/ c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
- (~ ((((real_mul a) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) (real_of_num (NUMERAL _0))) = a))) |- ((((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) \/ (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))))
T c==> c~ c/\ c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_of_num cNUMERAL c_0 f0 c\/ c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))))))) d)
T * / ! ! ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b5 f2
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) |- ((((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
+ |- ((\P. (!x. ((x IN P) = (P x)))) P)
T * / ! c= cIN b1 b0 * b0 b1 f0
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ ((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)), ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)), ((V_SY v) = ((IMAGE vv) UNIV)), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((k_sy s1) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((scs_k_v39 s) = (dimindex UNIV)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (((d_sy s1) = (scs_d_v39 s)) /\ (((a_sy s1) = (change_type_v3 (scs_a_v39 s))) /\ (((b_sy s1) = (change_type_v3 (scs_b_v39 s))) /\ (((J_SY s1) = ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ (((I_SY s1) = ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) /\ ((f_sy s1) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))))))), (vv IN (BBs_v39 s)), (((((((stable_system (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (scs_d_v39 s)) ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) (change_type_v3 (scs_b_v39 s))) ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) |- (((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) ((real_add (d_sy s1)) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) ((real_mul (sigma_sy s1)) ((sum (J1_SY s1)) (\x. ((real_sub cstab) (vector_norm ((vector_sub ((row (FST x)) (vecmats a))) ((row (SND x)) (vecmats a))))))))))))
T c==> c= * part cE_SY f0 * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV c==> c= * part cF_SY f0 * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV c==> c= * part cV_SY f0 * * part cIMAGE f1 part cUNIV c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= ck_sy f2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cscs_k_v39 f3 cdimindex part cUNIV c==> c= cmatvec f0 f4 c==> c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f0 c==> c= cstable_sy c, cscs_k_v39 f3 c, cscs_d_v39 f3 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f3 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f3 c, * part cchange_type_v3 * part cscs_b_v39 f3 c, * * part cchange_type_v2 * part cscs_J_v39 f3 cscs_k_v39 f3 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f3 f2 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f3 c==> c/\ c= cd_sy f2 cscs_d_v39 f3 c/\ c= * part ca_sy f2 * part cchange_type_v3 * part cscs_a_v39 f3 c/\ c= * part cb_sy f2 * part cchange_type_v3 * part cscs_b_v39 f3 c/\ c= * part cJ_SY f2 * * part cchange_type_v2 * part cscs_J_v39 f3 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= * part cI_SY f2 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= * part cf_sy f2 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> cIN f1 * part cBBs_v39 f3 c==> cstable_system cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cscs_d_v39 f3 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f3 * part cchange_type_v3 * part cscs_b_v39 f3 * * part cchange_type_v2 * part cscs_J_v39 f3 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= creal_sub ctau_fun * * part cIMAGE f1 part cUNIV * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV cdsv_v39 f3 f1 creal_sub ctau_fun * part cV_SY cvecmats f4 * part cE_SY cvecmats f4 * part cF_SY cvecmats f4 creal_add cd_sy f2 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 creal_mul csigma_sy f2 csum * part cJ1_SY f2 / creal_sub ccstab cvector_norm cvector_sub crow cFST b0 cvecmats f4 crow cSND b0 cvecmats f4
- |- ((\beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))) beta)
T * / ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f4 f6
- |- ((~ (a IN (GSPEC (\GEN%PVAR%7743. (?i. (?j. (((SETSPEC GEN%PVAR%7743) F) (i INSERT (j INSERT EMPTY))))))))) = ((a IN (GSPEC (\GEN%PVAR%7743. (?i. (?j. (((SETSPEC GEN%PVAR%7743) F) (i INSERT (j INSERT EMPTY)))))))) = F))
T c= c~ cIN f0 * part cGSPEC / c? / c? / cSETSPEC b0 cF * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= cIN f0 * part cGSPEC / c? / c? / cSETSPEC b0 cF * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cF
+ |- (((!s. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s)))) ==> ((\s. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s)))) s)) = ((\s. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s)))) s))
T c= c==> ! c==> c= * part cscs_J_v39 b0 / / cF c= cdsv_v39 b0 f0 cscs_d_v39 b0 * / c==> c= * part cscs_J_v39 b0 / / cF c= cdsv_v39 b0 f0 cscs_d_v39 b0 f1 * / c==> c= * part cscs_J_v39 b0 / / cF c= cdsv_v39 b0 f0 cscs_d_v39 b0 f1
+ |- (((((s = ((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) /\ ((vv IN (BBs_v39 s)) /\ (((scs_k_v39 s) = (dimindex UNIV)) /\ (((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v) /\ ((matvec v) = a))))) ==> (((V_SY v) = ((IMAGE vv) UNIV)) /\ (((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) /\ ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ==> (((taustar_v39 s) vv) = ((tau_star s1) a))) = (((taustar_v39 s) vv) = ((tau_star s1) a)))
T c= c==> c==> c/\ c= f0 cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ cIN f1 * part cBBs_v39 f0 c/\ c= cscs_k_v39 f0 cdimindex part cUNIV c/\ c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f2 c= cmatvec f2 f3 c/\ c= * part cV_SY f2 * * part cIMAGE f1 part cUNIV c/\ c= * part cE_SY f2 * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV c= * part cF_SY f2 * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV c= ctaustar_v39 f0 f1 ctau_star f4 f3 c= ctaustar_v39 f0 f1 ctau_star f4 f3
+ ((J_SY s1) = ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))), ((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)), ((a_sy s1) = (change_type_v3 (scs_a_v39 s))), ((b_sy s1) = (change_type_v3 (scs_b_v39 s))), ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)), ((V_SY v) = ((IMAGE vv) UNIV)), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((k_sy s1) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((scs_k_v39 s) = (dimindex UNIV)), ((d_sy s1) = (scs_d_v39 s)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (((J_SY s1) = ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ (((I_SY s1) = ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) /\ ((f_sy s1) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))), (vv IN (BBs_v39 s)), (((((((stable_system (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (scs_d_v39 s)) ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) (change_type_v3 (scs_b_v39 s))) ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) |- (((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) ((real_add (d_sy s1)) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) ((real_mul (sigma_sy s1)) ((sum (J1_SY s1)) (\x. ((real_sub cstab) (vector_norm ((vector_sub ((row (FST x)) (vecmats a))) ((row (SND x)) (vecmats a))))))))))))
T c==> c= * part cJ_SY f0 * * part cchange_type_v2 * part cscs_J_v39 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= * part cE_SY f2 * * part cIMAGE / * * part cINSERT * f3 b0 * * part cINSERT * f3 cSUC b0 part cEMPTY part cUNIV c==> c= * part ca_sy f0 * part cchange_type_v3 * part cscs_a_v39 f1 c==> c= * part cb_sy f0 * part cchange_type_v3 * part cscs_b_v39 f1 c==> c= * part cF_SY f2 * * part cIMAGE / c, * f3 b0 * f3 cSUC b0 part cUNIV c==> c= * part cV_SY f2 * * part cIMAGE f3 part cUNIV c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= ck_sy f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cscs_k_v39 f1 cdimindex part cUNIV c==> c= cd_sy f0 cscs_d_v39 f1 c==> c= cmatvec f2 f4 c==> c= cvector cCONS * f3 cNUMERAL cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL c_0 cNIL f2 c==> c= cstable_sy c, cscs_k_v39 f1 c, cscs_d_v39 f1 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f1 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f1 c, * part cchange_type_v3 * part cscs_b_v39 f1 c, * * part cchange_type_v2 * part cscs_J_v39 f1 cscs_k_v39 f1 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f1 f0 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f1 c==> c/\ c= * part cJ_SY f0 * * part cchange_type_v2 * part cscs_J_v39 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> cIN f3 * part cBBs_v39 f1 c==> cstable_system cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cscs_d_v39 f1 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f1 * part cchange_type_v3 * part cscs_b_v39 f1 * * part cchange_type_v2 * part cscs_J_v39 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= creal_sub ctau_fun * * part cIMAGE f3 part cUNIV * * part cIMAGE / * * part cINSERT * f3 b0 * * part cINSERT * f3 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f3 b0 * f3 cSUC b0 part cUNIV cdsv_v39 f1 f3 creal_sub ctau_fun * part cV_SY cvecmats f4 * part cE_SY cvecmats f4 * part cF_SY cvecmats f4 creal_add cd_sy f0 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 creal_mul csigma_sy f0 csum * part cJ1_SY f0 / creal_sub ccstab cvector_norm cvector_sub crow cFST b0 cvecmats f4 crow cSND b0 cvecmats f4
+ |- ((\lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))) lo)
T * / ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f6 f8
+ ((matvec v) = a) |- (a = (matvec v))
T c==> c= cmatvec f0 f1 c= f1 cmatvec f0
- |- (T = ((scs_J_v39 ((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (\i. (\j. F))))
T c= cT c= * part cscs_J_v39 cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 / / cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- |- (((!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))))))) ==> ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))))))) a)) = ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))))))) a))
T c= c==> ! ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 f1 * / ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 f1 f3 * / ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 f1 f3
- |- (((!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))) ==> ((\J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))) J)) = ((\J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))) J))
T c= c==> ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f2 * / ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f2 f7 * / ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f2 f7
- |- ((real_neg ((real_sub ((real_add a) (real_of_num (NUMERAL _0)))) a)) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_add f0 creal_of_num cNUMERAL c_0 f0 creal_of_num cNUMERAL c_0
+ |- ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))))) b)
T * / ! ! ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f0 f4
+ |- ((\l. (((tau_star s) l) = ((real_sub (((tau_fun (V_SY (vecmats l))) (E_SY (vecmats l))) (F_SY (vecmats l)))) (d_fun (s , l))))) l)
T * / c= ctau_star f0 b0 creal_sub ctau_fun * part cV_SY cvecmats b0 * part cE_SY cvecmats b0 * part cF_SY cvecmats b0 cd_fun c, f0 b0 f1
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0)))) |- ((((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ ((J_SY s1) = ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))), ((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)), ((a_sy s1) = (change_type_v3 (scs_a_v39 s))), ((b_sy s1) = (change_type_v3 (scs_b_v39 s))), ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)), ((I_SY s1) = ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))), ((f_sy s1) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))), ((V_SY v) = ((IMAGE vv) UNIV)), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((k_sy s1) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((scs_k_v39 s) = (dimindex UNIV)), ((d_sy s1) = (scs_d_v39 s)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (vv IN (BBs_v39 s)), (((((((stable_system (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (scs_d_v39 s)) ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) (change_type_v3 (scs_b_v39 s))) ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) |- (((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) ((real_add (d_sy s1)) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) ((real_mul (sigma_sy s1)) ((sum (J1_SY s1)) (\x. ((real_sub cstab) (vector_norm ((vector_sub ((row (FST x)) (vecmats a))) ((row (SND x)) (vecmats a))))))))))))
T c==> c= * part cJ_SY f0 * * part cchange_type_v2 * part cscs_J_v39 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= * part cE_SY f2 * * part cIMAGE / * * part cINSERT * f3 b0 * * part cINSERT * f3 cSUC b0 part cEMPTY part cUNIV c==> c= * part ca_sy f0 * part cchange_type_v3 * part cscs_a_v39 f1 c==> c= * part cb_sy f0 * part cchange_type_v3 * part cscs_b_v39 f1 c==> c= * part cF_SY f2 * * part cIMAGE / c, * f3 b0 * f3 cSUC b0 part cUNIV c==> c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= * part cV_SY f2 * * part cIMAGE f3 part cUNIV c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= ck_sy f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cscs_k_v39 f1 cdimindex part cUNIV c==> c= cd_sy f0 cscs_d_v39 f1 c==> c= cmatvec f2 f4 c==> c= cvector cCONS * f3 cNUMERAL cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL c_0 cNIL f2 c==> c= cstable_sy c, cscs_k_v39 f1 c, cscs_d_v39 f1 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f1 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f1 c, * part cchange_type_v3 * part cscs_b_v39 f1 c, * * part cchange_type_v2 * part cscs_J_v39 f1 cscs_k_v39 f1 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f1 f0 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f1 c==> cIN f3 * part cBBs_v39 f1 c==> cstable_system cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cscs_d_v39 f1 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f1 * part cchange_type_v3 * part cscs_b_v39 f1 * * part cchange_type_v2 * part cscs_J_v39 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= creal_sub ctau_fun * * part cIMAGE f3 part cUNIV * * part cIMAGE / * * part cINSERT * f3 b0 * * part cINSERT * f3 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f3 b0 * f3 cSUC b0 part cUNIV cdsv_v39 f1 f3 creal_sub ctau_fun * part cV_SY cvecmats f4 * part cE_SY cvecmats f4 * part cF_SY cvecmats f4 creal_add cd_sy f0 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 creal_mul csigma_sy f0 csum * part cJ1_SY f0 / creal_sub ccstab cvector_norm cvector_sub crow cFST b0 cvecmats f4 crow cSND b0 cvecmats f4
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ ((scs_k_v39 s) = (dimindex UNIV)) |- ((((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> (((taustar_v39 s) vv) = ((tau_star s1) a))) = (((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> (((taustar_v39 s) vv) = ((tau_star s1) a))))
T c==> c= cscs_k_v39 f0 cdimindex part cUNIV c= c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= ctaustar_v39 f0 f1 ctau_star f2 f3 c==> c= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= ctaustar_v39 f0 f1 ctau_star f2 f3
+ ((J_SY s1) = ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))), ((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)), ((a_sy s1) = (change_type_v3 (scs_a_v39 s))), ((b_sy s1) = (change_type_v3 (scs_b_v39 s))), ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)), ((I_SY s1) = ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))), ((V_SY v) = ((IMAGE vv) UNIV)), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((k_sy s1) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((scs_k_v39 s) = (dimindex UNIV)), ((d_sy s1) = (scs_d_v39 s)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (((I_SY s1) = ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) /\ ((f_sy s1) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))), (vv IN (BBs_v39 s)), (((((((stable_system (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (scs_d_v39 s)) ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) (change_type_v3 (scs_b_v39 s))) ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) |- (((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) ((real_add (d_sy s1)) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) ((real_mul (sigma_sy s1)) ((sum (J1_SY s1)) (\x. ((real_sub cstab) (vector_norm ((vector_sub ((row (FST x)) (vecmats a))) ((row (SND x)) (vecmats a))))))))))))
T c==> c= * part cJ_SY f0 * * part cchange_type_v2 * part cscs_J_v39 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= * part cE_SY f2 * * part cIMAGE / * * part cINSERT * f3 b0 * * part cINSERT * f3 cSUC b0 part cEMPTY part cUNIV c==> c= * part ca_sy f0 * part cchange_type_v3 * part cscs_a_v39 f1 c==> c= * part cb_sy f0 * part cchange_type_v3 * part cscs_b_v39 f1 c==> c= * part cF_SY f2 * * part cIMAGE / c, * f3 b0 * f3 cSUC b0 part cUNIV c==> c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= * part cV_SY f2 * * part cIMAGE f3 part cUNIV c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= ck_sy f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cscs_k_v39 f1 cdimindex part cUNIV c==> c= cd_sy f0 cscs_d_v39 f1 c==> c= cmatvec f2 f4 c==> c= cvector cCONS * f3 cNUMERAL cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL c_0 cNIL f2 c==> c= cstable_sy c, cscs_k_v39 f1 c, cscs_d_v39 f1 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f1 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f1 c, * part cchange_type_v3 * part cscs_b_v39 f1 c, * * part cchange_type_v2 * part cscs_J_v39 f1 cscs_k_v39 f1 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f1 f0 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f1 c==> c/\ c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> cIN f3 * part cBBs_v39 f1 c==> cstable_system cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cscs_d_v39 f1 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f1 * part cchange_type_v3 * part cscs_b_v39 f1 * * part cchange_type_v2 * part cscs_J_v39 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= creal_sub ctau_fun * * part cIMAGE f3 part cUNIV * * part cIMAGE / * * part cINSERT * f3 b0 * * part cINSERT * f3 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f3 b0 * f3 cSUC b0 part cUNIV cdsv_v39 f1 f3 creal_sub ctau_fun * part cV_SY cvecmats f4 * part cE_SY cvecmats f4 * part cF_SY cvecmats f4 creal_add cd_sy f0 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 creal_mul csigma_sy f0 csum * part cJ1_SY f0 / creal_sub ccstab cvector_norm cvector_sub crow cFST b0 cvecmats f4 crow cSND b0 cvecmats f4
+ |- ((((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) (d_fun (s1 , a)))) = (((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END (((COND ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT1 _0))))) ((real_sub (((tau3 (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0)))))) ((dsv_v39 s) vv))) ((real_sub (((tau_fun V) E) FF)) ((dsv_v39 s) vv)))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) (d_fun (s1 , a)))))
T c= c= creal_sub ctau_fun * * part cIMAGE f0 part cUNIV * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV cdsv_v39 f1 f0 creal_sub ctau_fun * part cV_SY cvecmats f2 * part cE_SY cvecmats f2 * part cF_SY cvecmats f2 cd_fun c, f3 f2 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c<= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_sub ctau3 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdsv_v39 f1 f0 creal_sub ctau_fun b0 b1 b2 cdsv_v39 f1 f0 * * part cIMAGE / c, * f0 b2 * f0 cSUC b2 part cUNIV * * part cIMAGE / * * part cINSERT * f0 b1 * * part cINSERT * f0 cSUC b1 part cEMPTY part cUNIV * * part cIMAGE f0 part cUNIV creal_sub ctau_fun * part cV_SY cvecmats f2 * part cE_SY cvecmats f2 * part cF_SY cvecmats f2 cd_fun c, f3 f2
+ (((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ (((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) |- ((((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)))))))))) ==> ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)))))))))) k)) = ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)))))))))) k))
T c= c==> ! ! ! ! ! ! ! ! ! c= cscs_k_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b0 * / ! ! ! ! ! ! ! ! c= cscs_k_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b0 f1 * / ! ! ! ! ! ! ! ! c= cscs_k_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b0 f1
- |- ((~ (~ F)) ==> F)
T c==> c~ c~ cF cF
- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) |- ((((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ ((scs_k_v39 s) = (dimindex UNIV)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (vv IN (BBs_v39 s)) |- (((((V_SY v) = ((IMAGE vv) UNIV)) /\ (((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) /\ ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))) ==> (((taustar_v39 s) vv) = ((tau_star s1) a))) = ((((s = ((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) /\ ((vv IN (BBs_v39 s)) /\ (((scs_k_v39 s) = (dimindex UNIV)) /\ (((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v) /\ ((matvec v) = a))))) ==> (((V_SY v) = ((IMAGE vv) UNIV)) /\ (((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) /\ ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ==> (((taustar_v39 s) vv) = ((tau_star s1) a))))
T c==> c= cscs_k_v39 f0 cdimindex part cUNIV c==> c= cmatvec f1 f2 c==> c= cvector cCONS * f3 cNUMERAL cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL c_0 cNIL f1 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c==> cIN f3 * part cBBs_v39 f0 c= c==> c/\ c= * part cV_SY f1 * * part cIMAGE f3 part cUNIV c/\ c= * part cE_SY f1 * * part cIMAGE / * * part cINSERT * f3 b0 * * part cINSERT * f3 cSUC b0 part cEMPTY part cUNIV c= * part cF_SY f1 * * part cIMAGE / c, * f3 b0 * f3 cSUC b0 part cUNIV c= ctaustar_v39 f0 f3 ctau_star f4 f2 c==> c==> c/\ c= f0 cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ cIN f3 * part cBBs_v39 f0 c/\ c= cscs_k_v39 f0 cdimindex part cUNIV c/\ c= cvector cCONS * f3 cNUMERAL cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL c_0 cNIL f1 c= cmatvec f1 f2 c/\ c= * part cV_SY f1 * * part cIMAGE f3 part cUNIV c/\ c= * part cE_SY f1 * * part cIMAGE / * * part cINSERT * f3 b0 * * part cINSERT * f3 cSUC b0 part cEMPTY part cUNIV c= * part cF_SY f1 * * part cIMAGE / c, * f3 b0 * f3 cSUC b0 part cUNIV c= ctaustar_v39 f0 f3 ctau_star f4 f2
+ (!s. (!vv. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s))))) |- ((\vv. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s)))) vv)
T c==> ! ! c==> c= * part cscs_J_v39 b0 / / cF c= cdsv_v39 b0 b1 cscs_d_v39 b0 * / c==> c= * part cscs_J_v39 f0 / / cF c= cdsv_v39 f0 b0 cscs_d_v39 f0 f1
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0)))) |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
+ (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s) |- (((scs_J_v39 s) = (\i. (\j. F))) = ((scs_J_v39 ((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (\i. (\j. F))))
T c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c= c= * part cscs_J_v39 f0 / / cF c= * part cscs_J_v39 cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 / / cF
+ ((V_SY v) = ((IMAGE vv) UNIV)), ((scs_k_v39 s) = (dimindex UNIV)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) /\ ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))), (vv IN (BBs_v39 s)) |- (((taustar_v39 s) vv) = ((tau_star s1) a))
T c==> c= * part cV_SY f0 * * part cIMAGE f1 part cUNIV c==> c= cscs_k_v39 f2 cdimindex part cUNIV c==> c= cmatvec f0 f3 c==> c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f0 c==> c= cstable_sy c, cscs_k_v39 f2 c, cscs_d_v39 f2 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f2 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f2 c, * part cchange_type_v3 * part cscs_b_v39 f2 c, * * part cchange_type_v2 * part cscs_J_v39 f2 cscs_k_v39 f2 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f2 f4 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> c/\ c= * part cE_SY f0 * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV c= * part cF_SY f0 * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV c==> cIN f1 * part cBBs_v39 f2 c= ctaustar_v39 f2 f1 ctau_star f4 f3
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((scs_k_v39 s) = (dimindex UNIV)), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s) |- (((((((((stable_system (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (scs_d_v39 s)) ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) (change_type_v3 (scs_b_v39 s))) ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) ==> (((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) (d_fun (s1 , a))))) = (((s = ((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) ==> (((((((stable_system (scs_k_v39 s)) (scs_d_v39 s)) ((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) (change_type_v3 (scs_b_v39 s))) ((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s))) (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s))))) ==> (((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) (d_fun (s1 , a))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cscs_k_v39 f0 cdimindex part cUNIV c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c= c==> cstable_system cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cscs_d_v39 f0 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f0 * part cchange_type_v3 * part cscs_b_v39 f0 * * part cchange_type_v2 * part cscs_J_v39 f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= creal_sub ctau_fun * * part cIMAGE f1 part cUNIV * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV cdsv_v39 f0 f1 creal_sub ctau_fun * part cV_SY cvecmats f2 * part cE_SY cvecmats f2 * part cF_SY cvecmats f2 cd_fun c, f3 f2 c==> c==> c= f0 cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cstable_system cscs_k_v39 f0 cscs_d_v39 f0 * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f0 * part cchange_type_v3 * part cscs_b_v39 f0 * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f0 c= creal_sub ctau_fun * * part cIMAGE f1 part cUNIV * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV cdsv_v39 f0 f1 creal_sub ctau_fun * part cV_SY cvecmats f2 * part cE_SY cvecmats f2 * part cF_SY cvecmats f2 cd_fun c, f3 f2
+ |- (((!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))))))) ==> ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))))))) d)) = ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))))))) d))
T c= c==> ! ! ! ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b5 * / ! ! ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b5 f2 * / ! ! ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b5 f2
+ |- (((!s. (!l. (((tau_star s) l) = ((real_sub (((tau_fun (V_SY (vecmats l))) (E_SY (vecmats l))) (F_SY (vecmats l)))) (d_fun (s , l)))))) ==> ((\s. (!l. (((tau_star s) l) = ((real_sub (((tau_fun (V_SY (vecmats l))) (E_SY (vecmats l))) (F_SY (vecmats l)))) (d_fun (s , l)))))) s)) = ((\s. (!l. (((tau_star s) l) = ((real_sub (((tau_fun (V_SY (vecmats l))) (E_SY (vecmats l))) (F_SY (vecmats l)))) (d_fun (s , l)))))) s))
T c= c==> ! ! c= ctau_star b0 b1 creal_sub ctau_fun * part cV_SY cvecmats b1 * part cE_SY cvecmats b1 * part cF_SY cvecmats b1 cd_fun c, b0 b1 * / ! c= ctau_star b0 b1 creal_sub ctau_fun * part cV_SY cvecmats b1 * part cE_SY cvecmats b1 * part cF_SY cvecmats b1 cd_fun c, b0 b1 f0 * / ! c= ctau_star b0 b1 creal_sub ctau_fun * part cV_SY cvecmats b1 * part cE_SY cvecmats b1 * part cF_SY cvecmats b1 cd_fun c, b0 b1 f0
- |- ((a IN (GSPEC (\GEN%PVAR%7743. (?i. (?j. (((SETSPEC GEN%PVAR%7743) F) (i INSERT (j INSERT EMPTY)))))))) = (?i. (?j. (((\p. (\t. (p /\ (a = t)))) F) (i INSERT (j INSERT EMPTY))))))
T c= cIN f0 * part cGSPEC / c? / c? / cSETSPEC b0 cF * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / * * / / c/\ b2 c= f0 b3 cF * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
+ (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s) |- (((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((scs_k_v39 ((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))
T c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c= c= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cscs_k_v39 cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
- |- ((\s. ((FINITE s) ==> (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f)))))) s)
T * / c==> cFINITE b0 c= csum * * part cINSERT f0 b0 f1 cCOND cIN f0 b0 csum b0 f1 creal_add * f1 f0 csum b0 f1 f2
+ |- ((\s. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s)))) s)
T * / c==> c= * part cscs_J_v39 b0 / / cF c= cdsv_v39 b0 f0 cscs_d_v39 b0 f1
+ |- (((!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))))) ==> ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))))) b)) = ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))))) b))
T c= c==> ! ! ! ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f0 * / ! ! ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f0 f4 * / ! ! ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f0 f4
- |- ((\x. (!f. (!s. ((FINITE s) ==> (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f)))))))) x)
T * / ! ! c==> cFINITE b2 c= csum * * part cINSERT b0 b2 b1 cCOND cIN b0 b2 csum b2 b1 creal_add * b1 b0 csum b2 b1 f0
- |- (((!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))))))))) ==> ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))))))))) d)) = ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))))))))) d))
T c= c==> ! ! ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b0 * / ! ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b0 f2 * / ! ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b0 f2
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
+ (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s) |- (((scs_k_v39 ((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((scs_k_v39 s) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))
T c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c= c= cscs_k_v39 cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
- |- (((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (!s. (!vv. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s))))) |- ((!s. (!vv. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s))))) /\ (!vv. (!s. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s))))))
T c==> ! ! c==> c= * part cscs_J_v39 b0 / / cF c= cdsv_v39 b0 b1 cscs_d_v39 b0 c/\ ! ! c==> c= * part cscs_J_v39 b0 / / cF c= cdsv_v39 b0 b1 cscs_d_v39 b0 ! ! c==> c= * part cscs_J_v39 b1 / / cF c= cdsv_v39 b1 b0 cscs_d_v39 b1
+ ((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)), ((J1_SY s1) = EMPTY), ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)), ((V_SY v) = ((IMAGE vv) UNIV)), ((matvec v) = a), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s) |- (((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) ((real_add (scs_d_v39 s)) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) ((real_mul (sigma_sy s1)) ((sum (J1_SY s1)) (\x. ((real_sub cstab) (vector_norm ((vector_sub ((row (FST x)) (vecmats a))) ((row (SND x)) (vecmats a))))))))))))
T c==> c= * part cE_SY f0 * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV c==> c= * part cJ1_SY f2 part cEMPTY c==> c= * part cF_SY f0 * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV c==> c= * part cV_SY f0 * * part cIMAGE f1 part cUNIV c==> c= cmatvec f0 f3 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f4 c= creal_sub ctau_fun * * part cIMAGE f1 part cUNIV * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV cdsv_v39 f4 f1 creal_sub ctau_fun * part cV_SY cvecmats f3 * part cE_SY cvecmats f3 * part cF_SY cvecmats f3 creal_add cscs_d_v39 f4 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 creal_mul csigma_sy f2 csum * part cJ1_SY f2 / creal_sub ccstab cvector_norm cvector_sub crow cFST b0 cvecmats f3 crow cSND b0 cvecmats f3
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0)))) |- ((((((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- |- ((\lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))) lo)
T * / ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f1 f8
+ (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s) |- (s = ((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))
T c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c= f0 cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
+ ((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)), ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)), ((V_SY v) = ((IMAGE vv) UNIV)), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((scs_k_v39 s) = (dimindex UNIV)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (((k_sy s1) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((d_sy s1) = (scs_d_v39 s)) /\ (((a_sy s1) = (change_type_v3 (scs_a_v39 s))) /\ (((b_sy s1) = (change_type_v3 (scs_b_v39 s))) /\ (((J_SY s1) = ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ (((I_SY s1) = ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) /\ ((f_sy s1) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))))))), (vv IN (BBs_v39 s)), (((((((stable_system (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (scs_d_v39 s)) ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) (change_type_v3 (scs_b_v39 s))) ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) |- (((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) ((real_add (d_sy s1)) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) ((real_mul (sigma_sy s1)) ((sum (J1_SY s1)) (\x. ((real_sub cstab) (vector_norm ((vector_sub ((row (FST x)) (vecmats a))) ((row (SND x)) (vecmats a))))))))))))
T c==> c= * part cE_SY f0 * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV c==> c= * part cF_SY f0 * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV c==> c= * part cV_SY f0 * * part cIMAGE f1 part cUNIV c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cscs_k_v39 f2 cdimindex part cUNIV c==> c= cmatvec f0 f3 c==> c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f0 c==> c= cstable_sy c, cscs_k_v39 f2 c, cscs_d_v39 f2 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f2 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f2 c, * part cchange_type_v3 * part cscs_b_v39 f2 c, * * part cchange_type_v2 * part cscs_J_v39 f2 cscs_k_v39 f2 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f2 f4 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> c/\ c= ck_sy f4 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cd_sy f4 cscs_d_v39 f2 c/\ c= * part ca_sy f4 * part cchange_type_v3 * part cscs_a_v39 f2 c/\ c= * part cb_sy f4 * part cchange_type_v3 * part cscs_b_v39 f2 c/\ c= * part cJ_SY f4 * * part cchange_type_v2 * part cscs_J_v39 f2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= * part cI_SY f4 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= * part cf_sy f4 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> cIN f1 * part cBBs_v39 f2 c==> cstable_system cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cscs_d_v39 f2 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f2 * part cchange_type_v3 * part cscs_b_v39 f2 * * part cchange_type_v2 * part cscs_J_v39 f2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= creal_sub ctau_fun * * part cIMAGE f1 part cUNIV * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV cdsv_v39 f2 f1 creal_sub ctau_fun * part cV_SY cvecmats f3 * part cE_SY cvecmats f3 * part cF_SY cvecmats f3 creal_add cd_sy f4 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 creal_mul csigma_sy f4 csum * part cJ1_SY f4 / creal_sub ccstab cvector_norm cvector_sub crow cFST b0 cvecmats f3 crow cSND b0 cvecmats f3
+ |- ((\a. (!b. (!J. (!f. ((((((((stable_system (scs_k_v39 s)) (scs_d_v39 s)) ((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0))))) a) b) J) f) ==> (((k_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , (a , (b , (J , f)))))))) = (scs_k_v39 s)) /\ (((d_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , (a , (b , (J , f)))))))) = (scs_d_v39 s)) /\ (((a_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , (a , (b , (J , f)))))))) = a) /\ (((b_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , (a , (b , (J , f)))))))) = b) /\ (((J_SY (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , (a , (b , (J , f)))))))) = J) /\ (((I_SY (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , (a , (b , (J , f)))))))) = ((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0))))) /\ ((f_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , (a , (b , (J , f)))))))) = f)))))))))))) (change_type_v3 (scs_a_v39 s)))
T * / ! ! ! c==> cstable_system cscs_k_v39 f0 cscs_d_v39 f0 * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 b0 b1 b2 b3 c/\ c= ck_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, b0 c, b1 c, b2 b3 cscs_k_v39 f0 c/\ c= cd_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, b0 c, b1 c, b2 b3 cscs_d_v39 f0 c/\ c= * part ca_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, b0 c, b1 c, b2 b3 b0 c/\ c= * part cb_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, b0 c, b1 c, b2 b3 b1 c/\ c= * part cJ_SY cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, b0 c, b1 c, b2 b3 b2 c/\ c= * part cI_SY cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, b0 c, b1 c, b2 b3 * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c= * part cf_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, b0 c, b1 c, b2 b3 b3 * part cchange_type_v3 * part cscs_a_v39 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))))) d)
T * / ! ! c= cmk_unadorned_v39 f0 b0 b1 b2 cscs_v39 c, f0 c, b0 c, b1 c, b1 c, b2 c, b2 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f1
- |- (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT1 _0)))))
T c~ c<= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
+ |- ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))))))) a)
T * / ! ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b4 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)
T c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 f9 f5
+ (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), ((vv IN (BBs_v39 s)) /\ (((scs_k_v39 s) = (dimindex UNIV)) /\ (((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v) /\ (((matvec v) = a) /\ ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1))))) |- (((taustar_v39 s) vv) = ((tau_star s1) a))
T c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c==> c/\ cIN f1 * part cBBs_v39 f0 c/\ c= cscs_k_v39 f0 cdimindex part cUNIV c/\ c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f2 c/\ c= cmatvec f2 f3 c= cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f0 f4 c= ctaustar_v39 f0 f1 ctau_star f4 f3
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
+ |- ((\k. (!d. (!s. (!a. (!b. (!J. (!f. ((((((((stable_system k) d) s) a) b) J) f) ==> (((k_sy (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = k) /\ (((d_sy (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = d) /\ (((a_sy (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = a) /\ (((b_sy (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = b) /\ (((J_SY (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = J) /\ (((I_SY (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = s) /\ ((f_sy (stable_sy (k , (d , (s , (a , (b , (J , f)))))))) = f))))))))))))))) (scs_k_v39 s))
T * / ! ! ! ! ! ! c==> cstable_system b0 b1 b2 b3 b4 b5 b6 c/\ c= ck_sy cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b0 c/\ c= cd_sy cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b1 c/\ c= * part ca_sy cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b3 c/\ c= * part cb_sy cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b4 c/\ c= * part cJ_SY cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b5 c/\ c= * part cI_SY cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b2 c= * part cf_sy cstable_sy c, b0 c, b1 c, b2 c, b3 c, b4 c, b5 b6 b6 cscs_k_v39 f0
+ |- ((\beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))) beta)
T * / ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b1 f6
+ ((J_SY s1) = ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))), ((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)), ((a_sy s1) = (change_type_v3 (scs_a_v39 s))), ((b_sy s1) = (change_type_v3 (scs_b_v39 s))), ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)), ((I_SY s1) = ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))), ((f_sy s1) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))), ((V_SY v) = ((IMAGE vv) UNIV)), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((k_sy s1) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((scs_k_v39 s) = (dimindex UNIV)), ((d_sy s1) = (scs_d_v39 s)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (vv IN (BBs_v39 s)), (((((((stable_system (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (scs_d_v39 s)) ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) (change_type_v3 (scs_b_v39 s))) ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) |- ((GSPEC (\GEN%PVAR%7598. (?x. (((SETSPEC GEN%PVAR%7598) (?i. ((((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT ((((NUMERAL (BIT1 _0)) + (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT EMPTY)) IN (GSPEC (\GEN%PVAR%7711. (?i. (?j. (((SETSPEC GEN%PVAR%7711) F) ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT ((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT EMPTY)))))))) /\ ((i IN ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ (x = (i , (SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))))))) x)))) = EMPTY)
T c==> c= * part cJ_SY f0 * * part cchange_type_v2 * part cscs_J_v39 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= * part cE_SY f2 * * part cIMAGE / * * part cINSERT * f3 b0 * * part cINSERT * f3 cSUC b0 part cEMPTY part cUNIV c==> c= * part ca_sy f0 * part cchange_type_v3 * part cscs_a_v39 f1 c==> c= * part cb_sy f0 * part cchange_type_v3 * part cscs_b_v39 f1 c==> c= * part cF_SY f2 * * part cIMAGE / c, * f3 b0 * f3 cSUC b0 part cUNIV c==> c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= * part cV_SY f2 * * part cIMAGE f3 part cUNIV c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= ck_sy f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cscs_k_v39 f1 cdimindex part cUNIV c==> c= cd_sy f0 cscs_d_v39 f1 c==> c= cmatvec f2 f4 c==> c= cvector cCONS * f3 cNUMERAL cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL c_0 cNIL f2 c==> c= cstable_sy c, cscs_k_v39 f1 c, cscs_d_v39 f1 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f1 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f1 c, * part cchange_type_v3 * part cscs_b_v39 f1 c, * * part cchange_type_v2 * part cscs_J_v39 f1 cscs_k_v39 f1 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f1 f0 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f1 c==> cIN f3 * part cBBs_v39 f1 c==> cstable_system cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cscs_d_v39 f1 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f1 * part cchange_type_v3 * part cscs_b_v39 f1 * * part cchange_type_v2 * part cscs_J_v39 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ cIN * * part cINSERT cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 * * part cINSERT cMOD c+ cNUMERAL cBIT1 c_0 cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 part cEMPTY * part cGSPEC / c? / c? / cSETSPEC b3 cF * * part cINSERT cMOD b4 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 * * part cINSERT cMOD b4 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 part cEMPTY c/\ cIN b2 * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= b1 c, b2 cSUC cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b1 part cEMPTY
+ |- ((((f_sy s1) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (((I_SY s1) = ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) /\ (((J_SY s1) = ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ (((b_sy s1) = (change_type_v3 (scs_b_v39 s))) /\ (((a_sy s1) = (change_type_v3 (scs_a_v39 s))) /\ (((d_sy s1) = (scs_d_v39 s)) /\ (((k_sy s1) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((((((stable_system (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (scs_d_v39 s)) ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) (change_type_v3 (scs_b_v39 s))) ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)) /\ (((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) /\ (((V_SY v) = ((IMAGE vv) UNIV)) /\ (((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1) /\ (((matvec v) = a) /\ (((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v) /\ (((scs_k_v39 s) = (dimindex UNIV)) /\ ((vv IN (BBs_v39 s)) /\ (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s)))))))))))))))))) ==> ((GSPEC (\GEN%PVAR%7598. (?x. (((SETSPEC GEN%PVAR%7598) (?i. ((((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT ((((NUMERAL (BIT1 _0)) + (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT EMPTY)) IN (GSPEC (\GEN%PVAR%7711. (?i. (?j. (((SETSPEC GEN%PVAR%7711) F) ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT ((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT EMPTY)))))))) /\ ((i IN ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ (x = (i , (SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))))))) x)))) = EMPTY))
T c==> c/\ c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= * part cJ_SY f0 * * part cchange_type_v2 * part cscs_J_v39 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= * part cb_sy f0 * part cchange_type_v3 * part cscs_b_v39 f1 c/\ c= * part ca_sy f0 * part cchange_type_v3 * part cscs_a_v39 f1 c/\ c= cd_sy f0 cscs_d_v39 f1 c/\ c= ck_sy f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ cstable_system cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cscs_d_v39 f1 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f1 * part cchange_type_v3 * part cscs_b_v39 f1 * * part cchange_type_v2 * part cscs_J_v39 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= * part cF_SY f2 * * part cIMAGE / c, * f3 b0 * f3 cSUC b0 part cUNIV c/\ c= * part cE_SY f2 * * part cIMAGE / * * part cINSERT * f3 b0 * * part cINSERT * f3 cSUC b0 part cEMPTY part cUNIV c/\ c= * part cV_SY f2 * * part cIMAGE f3 part cUNIV c/\ c= cstable_sy c, cscs_k_v39 f1 c, cscs_d_v39 f1 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f1 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f1 c, * part cchange_type_v3 * part cscs_b_v39 f1 c, * * part cchange_type_v2 * part cscs_J_v39 f1 cscs_k_v39 f1 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f1 f0 c/\ c= cmatvec f2 f4 c/\ c= cvector cCONS * f3 cNUMERAL cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL c_0 cNIL f2 c/\ c= cscs_k_v39 f1 cdimindex part cUNIV c/\ cIN f3 * part cBBs_v39 f1 c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f1 c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ cIN * * part cINSERT cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 * * part cINSERT cMOD c+ cNUMERAL cBIT1 c_0 cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 part cEMPTY * part cGSPEC / c? / c? / cSETSPEC b3 cF * * part cINSERT cMOD b4 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 * * part cINSERT cMOD b4 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 part cEMPTY c/\ cIN b2 * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= b1 c, b2 cSUC cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b1 part cEMPTY
+ |- (T = ((((f_sy s1) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ ((!x. ((x IN (I_SY s1)) = (x IN ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))))) /\ ((!x. ((x IN (J_SY s1)) = (x IN ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) /\ (((b_sy s1) = (change_type_v3 (scs_b_v39 s))) /\ (((a_sy s1) = (change_type_v3 (scs_a_v39 s))) /\ (((d_sy s1) = (scs_d_v39 s)) /\ (((k_sy s1) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((((((stable_system (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (scs_d_v39 s)) ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) (change_type_v3 (scs_b_v39 s))) ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((!x. ((x IN (F_SY v)) = (x IN ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))) /\ ((!x. ((x IN (E_SY v)) = (x IN ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)))) /\ ((!x. ((x IN (V_SY v)) = (x IN ((IMAGE vv) UNIV)))) /\ (((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1) /\ (((matvec v) = a) /\ (((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v) /\ (((scs_k_v39 s) = (dimindex UNIV)) /\ ((vv IN (BBs_v39 s)) /\ (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (!x. ((x IN ((i MOD k) INSERT ((j MOD k) INSERT EMPTY))) = (x IN ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s)))))))))))))))))) ==> (!x. ((x IN (GSPEC (\GEN%PVAR%7598. (?x. (((SETSPEC GEN%PVAR%7598) (?i. ((((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT ((((NUMERAL (BIT1 _0)) + (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT EMPTY)) IN (GSPEC (\GEN%PVAR%7711. (?i. (?j. (((SETSPEC GEN%PVAR%7711) F) ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT ((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT EMPTY)))))))) /\ ((i IN ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ (x = (i , (SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))))))) x))))) = (x IN EMPTY)))))
T c= cT c==> c/\ c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ ! c= cIN b0 * part cI_SY f0 cIN b0 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ ! c= cIN b0 * part cJ_SY f0 cIN b0 * * part cchange_type_v2 * part cscs_J_v39 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= * part cb_sy f0 * part cchange_type_v3 * part cscs_b_v39 f1 c/\ c= * part ca_sy f0 * part cchange_type_v3 * part cscs_a_v39 f1 c/\ c= cd_sy f0 cscs_d_v39 f1 c/\ c= ck_sy f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ cstable_system cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cscs_d_v39 f1 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f1 * part cchange_type_v3 * part cscs_b_v39 f1 * * part cchange_type_v2 * part cscs_J_v39 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ ! c= cIN b0 * part cF_SY f2 cIN b0 * * part cIMAGE / c, * f3 b1 * f3 cSUC b1 part cUNIV c/\ ! c= cIN b0 * part cE_SY f2 cIN b0 * * part cIMAGE / * * part cINSERT * f3 b1 * * part cINSERT * f3 cSUC b1 part cEMPTY part cUNIV c/\ ! c= cIN b0 * part cV_SY f2 cIN b0 * * part cIMAGE f3 part cUNIV c/\ c= cstable_sy c, cscs_k_v39 f1 c, cscs_d_v39 f1 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f1 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f1 c, * part cchange_type_v3 * part cscs_b_v39 f1 c, * * part cchange_type_v2 * part cscs_J_v39 f1 cscs_k_v39 f1 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f1 f0 c/\ c= cmatvec f2 f4 c/\ c= cvector cCONS * f3 cNUMERAL cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL c_0 cNIL f2 c/\ c= cscs_k_v39 f1 cdimindex part cUNIV c/\ cIN f3 * part cBBs_v39 f1 c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND ! c= cIN b7 * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY cIN b7 * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f1 ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ cIN * * part cINSERT cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 * * part cINSERT cMOD c+ cNUMERAL cBIT1 c_0 cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 part cEMPTY * part cGSPEC / c? / c? / cSETSPEC b3 cF * * part cINSERT cMOD b4 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 * * part cINSERT cMOD b4 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 part cEMPTY c/\ cIN b2 * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= b2 c, b2 cSUC cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b2 cIN b0 part cEMPTY
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- (((!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))))) ==> ((\beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))))) beta)) = ((\beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))))) beta))
T c= c==> ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f1 * / ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f1 f6 * / ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f1 f6
+ |- (((!f. (!x. (((LET f) x) = (f x)))) ==> ((\f. (!x. (((LET f) x) = (f x)))) f)) = ((\f. (!x. (((LET f) x) = (f x)))) f))
T c= c==> ! ! c= cLET b0 b1 * b0 b1 * / ! c= cLET b0 b1 * b0 b1 f0 * / ! c= cLET b0 b1 * b0 b1 f0
+ |- ((\f. (((sum EMPTY) f) = (real_of_num (NUMERAL _0)))) f)
T * / c= csum part cEMPTY b0 creal_of_num cNUMERAL c_0 f0
- |- ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))) b)
T * / ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b0 f4
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- (((!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))))) ==> ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))))) d)) = ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))))) d))
T c= c==> ! ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b1 * / ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b1 f2 * / ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b1 f2
+ |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 cF
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))) = ((((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- ((scs_J_v39 s) = (\i. (\j. F))) |- (((scs_J_v39 s) = (\i. (\j. F))) /\ (((dsv_v39 s) vv) = (scs_d_v39 s)))
T c==> c= * part cscs_J_v39 f0 / / cF c/\ c= * part cscs_J_v39 f0 / / cF c= cdsv_v39 f0 f1 cscs_d_v39 f0
+ (!s. (!vv. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s))))) |- (((!vv. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s)))) ==> ((\vv. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s)))) vv)) = ((\vv. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s)))) vv))
T c==> ! ! c==> c= * part cscs_J_v39 b0 / / cF c= cdsv_v39 b0 b1 cscs_d_v39 b0 c= c==> ! c==> c= * part cscs_J_v39 f0 / / cF c= cdsv_v39 f0 b0 cscs_d_v39 f0 * / c==> c= * part cscs_J_v39 f0 / / cF c= cdsv_v39 f0 b0 cscs_d_v39 f0 f1 * / c==> c= * part cscs_J_v39 f0 / / cF c= cdsv_v39 f0 b0 cscs_d_v39 f0 f1
- ((((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) \/ (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))) |- F
T c==> c\/ c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- |- ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)
T c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 f9 f1
+ |- (((!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))))) ==> ((\d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))))) d)) = ((\d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))))) d))
T c= c==> ! ! ! c= cmk_unadorned_v39 f0 b0 b1 b2 cscs_v39 c, f0 c, b0 c, b1 c, b1 c, b2 c, b2 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY * / ! ! c= cmk_unadorned_v39 f0 b0 b1 b2 cscs_v39 c, f0 c, b0 c, b1 c, b1 c, b2 c, b2 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f1 * / ! ! c= cmk_unadorned_v39 f0 b0 b1 b2 cscs_v39 c, f0 c, b0 c, b1 c, b1 c, b2 c, b2 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f1
+ ((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)), ((a_sy s1) = (change_type_v3 (scs_a_v39 s))), ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)), ((V_SY v) = ((IMAGE vv) UNIV)), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((k_sy s1) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((scs_k_v39 s) = (dimindex UNIV)), ((d_sy s1) = (scs_d_v39 s)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (((a_sy s1) = (change_type_v3 (scs_a_v39 s))) /\ (((b_sy s1) = (change_type_v3 (scs_b_v39 s))) /\ (((J_SY s1) = ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ (((I_SY s1) = ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) /\ ((f_sy s1) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))))), (vv IN (BBs_v39 s)), (((((((stable_system (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (scs_d_v39 s)) ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) (change_type_v3 (scs_b_v39 s))) ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) |- (((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) ((real_add (d_sy s1)) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) ((real_mul (sigma_sy s1)) ((sum (J1_SY s1)) (\x. ((real_sub cstab) (vector_norm ((vector_sub ((row (FST x)) (vecmats a))) ((row (SND x)) (vecmats a))))))))))))
T c==> c= * part cE_SY f0 * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV c==> c= * part ca_sy f2 * part cchange_type_v3 * part cscs_a_v39 f3 c==> c= * part cF_SY f0 * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV c==> c= * part cV_SY f0 * * part cIMAGE f1 part cUNIV c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= ck_sy f2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cscs_k_v39 f3 cdimindex part cUNIV c==> c= cd_sy f2 cscs_d_v39 f3 c==> c= cmatvec f0 f4 c==> c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f0 c==> c= cstable_sy c, cscs_k_v39 f3 c, cscs_d_v39 f3 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f3 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f3 c, * part cchange_type_v3 * part cscs_b_v39 f3 c, * * part cchange_type_v2 * part cscs_J_v39 f3 cscs_k_v39 f3 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f3 f2 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f3 c==> c/\ c= * part ca_sy f2 * part cchange_type_v3 * part cscs_a_v39 f3 c/\ c= * part cb_sy f2 * part cchange_type_v3 * part cscs_b_v39 f3 c/\ c= * part cJ_SY f2 * * part cchange_type_v2 * part cscs_J_v39 f3 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= * part cI_SY f2 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= * part cf_sy f2 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> cIN f1 * part cBBs_v39 f3 c==> cstable_system cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cscs_d_v39 f3 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f3 * part cchange_type_v3 * part cscs_b_v39 f3 * * part cchange_type_v2 * part cscs_J_v39 f3 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= creal_sub ctau_fun * * part cIMAGE f1 part cUNIV * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV cdsv_v39 f3 f1 creal_sub ctau_fun * part cV_SY cvecmats f4 * part cE_SY cvecmats f4 * part cF_SY cvecmats f4 creal_add cd_sy f2 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 creal_mul csigma_sy f2 csum * part cJ1_SY f2 / creal_sub ccstab cvector_norm cvector_sub crow cFST b0 cvecmats f4 crow cSND b0 cvecmats f4
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
+ ((scs_k_v39 s) = (dimindex UNIV)), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (((scs_k_v39 s) = (dimindex UNIV)) /\ (((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v) /\ (((matvec v) = a) /\ ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1)))), (vv IN (BBs_v39 s)) |- (((taustar_v39 s) vv) = ((tau_star s1) a))
T c==> c= cscs_k_v39 f0 cdimindex part cUNIV c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c==> c/\ c= cscs_k_v39 f0 cdimindex part cUNIV c/\ c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f2 c/\ c= cmatvec f2 f3 c= cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f0 f4 c==> cIN f1 * part cBBs_v39 f0 c= ctaustar_v39 f0 f1 ctau_star f4 f3
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0)))) |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= c==> c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
+ ((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)), ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)), ((V_SY v) = ((IMAGE vv) UNIV)), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((scs_k_v39 s) = (dimindex UNIV)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (vv IN (BBs_v39 s)) |- (((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) (d_fun (s1 , a))))
T c==> c= * part cE_SY f0 * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV c==> c= * part cF_SY f0 * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV c==> c= * part cV_SY f0 * * part cIMAGE f1 part cUNIV c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cscs_k_v39 f2 cdimindex part cUNIV c==> c= cmatvec f0 f3 c==> c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f0 c==> c= cstable_sy c, cscs_k_v39 f2 c, cscs_d_v39 f2 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f2 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f2 c, * part cchange_type_v3 * part cscs_b_v39 f2 c, * * part cchange_type_v2 * part cscs_J_v39 f2 cscs_k_v39 f2 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f2 f4 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> cIN f1 * part cBBs_v39 f2 c= creal_sub ctau_fun * * part cIMAGE f1 part cUNIV * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV cdsv_v39 f2 f1 creal_sub ctau_fun * part cV_SY cvecmats f3 * part cE_SY cvecmats f3 * part cF_SY cvecmats f3 cd_fun c, f4 f3
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0)))) |- (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ ((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)), ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)), ((V_SY v) = ((IMAGE vv) UNIV)), ((scs_k_v39 s) = (dimindex UNIV)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (vv IN (BBs_v39 s)) |- (((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)) /\ (((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) /\ (((V_SY v) = ((IMAGE vv) UNIV)) /\ (((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1) /\ (((matvec v) = a) /\ (((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v) /\ (((scs_k_v39 s) = (dimindex UNIV)) /\ ((vv IN (BBs_v39 s)) /\ (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s)))))))))
T c==> c= * part cE_SY f0 * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV c==> c= * part cF_SY f0 * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV c==> c= * part cV_SY f0 * * part cIMAGE f1 part cUNIV c==> c= cscs_k_v39 f2 cdimindex part cUNIV c==> c= cmatvec f0 f3 c==> c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f0 c==> c= cstable_sy c, cscs_k_v39 f2 c, cscs_d_v39 f2 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f2 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f2 c, * part cchange_type_v3 * part cscs_b_v39 f2 c, * * part cchange_type_v2 * part cscs_J_v39 f2 cscs_k_v39 f2 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f2 f4 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> cIN f1 * part cBBs_v39 f2 c/\ c= * part cF_SY f0 * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV c/\ c= * part cE_SY f0 * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV c/\ c= * part cV_SY f0 * * part cIMAGE f1 part cUNIV c/\ c= cstable_sy c, cscs_k_v39 f2 c, cscs_d_v39 f2 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f2 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f2 c, * part cchange_type_v3 * part cscs_b_v39 f2 c, * * part cchange_type_v2 * part cscs_J_v39 f2 cscs_k_v39 f2 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f2 f4 c/\ c= cmatvec f0 f3 c/\ c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f0 c/\ c= cscs_k_v39 f2 cdimindex part cUNIV c/\ cIN f1 * part cBBs_v39 f2 c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0)))) |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
+ ((((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) ==> F), ((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
+ |- ((\beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))) beta)
T * / ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f0 f6
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- |- (((!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))))) ==> ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))))) k)) = ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))))) k))
T c= c==> ! ! ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b3 * / ! ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b3 f1 * / ! ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b3 f1
+ ((J_SY s1) = ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))), ((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)), ((a_sy s1) = (change_type_v3 (scs_a_v39 s))), ((b_sy s1) = (change_type_v3 (scs_b_v39 s))), ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)), ((V_SY v) = ((IMAGE vv) UNIV)), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((k_sy s1) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((scs_k_v39 s) = (dimindex UNIV)), ((d_sy s1) = (scs_d_v39 s)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (((I_SY s1) = ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) /\ ((f_sy s1) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))), (vv IN (BBs_v39 s)), (((((((stable_system (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (scs_d_v39 s)) ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) (change_type_v3 (scs_b_v39 s))) ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) |- (((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) ((real_add (d_sy s1)) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) ((real_mul (sigma_sy s1)) ((sum (J1_SY s1)) (\x. ((real_sub cstab) (vector_norm ((vector_sub ((row (FST x)) (vecmats a))) ((row (SND x)) (vecmats a))))))))))))
T c==> c= * part cJ_SY f0 * * part cchange_type_v2 * part cscs_J_v39 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= * part cE_SY f2 * * part cIMAGE / * * part cINSERT * f3 b0 * * part cINSERT * f3 cSUC b0 part cEMPTY part cUNIV c==> c= * part ca_sy f0 * part cchange_type_v3 * part cscs_a_v39 f1 c==> c= * part cb_sy f0 * part cchange_type_v3 * part cscs_b_v39 f1 c==> c= * part cF_SY f2 * * part cIMAGE / c, * f3 b0 * f3 cSUC b0 part cUNIV c==> c= * part cV_SY f2 * * part cIMAGE f3 part cUNIV c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= ck_sy f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cscs_k_v39 f1 cdimindex part cUNIV c==> c= cd_sy f0 cscs_d_v39 f1 c==> c= cmatvec f2 f4 c==> c= cvector cCONS * f3 cNUMERAL cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f3 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f3 cNUMERAL c_0 cNIL f2 c==> c= cstable_sy c, cscs_k_v39 f1 c, cscs_d_v39 f1 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f1 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f1 c, * part cchange_type_v3 * part cscs_b_v39 f1 c, * * part cchange_type_v2 * part cscs_J_v39 f1 cscs_k_v39 f1 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f1 f0 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f1 c==> c/\ c= * part cI_SY f0 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= * part cf_sy f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> cIN f3 * part cBBs_v39 f1 c==> cstable_system cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cscs_d_v39 f1 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f1 * part cchange_type_v3 * part cscs_b_v39 f1 * * part cchange_type_v2 * part cscs_J_v39 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= creal_sub ctau_fun * * part cIMAGE f3 part cUNIV * * part cIMAGE / * * part cINSERT * f3 b0 * * part cINSERT * f3 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f3 b0 * f3 cSUC b0 part cUNIV cdsv_v39 f1 f3 creal_sub ctau_fun * part cV_SY cvecmats f4 * part cE_SY cvecmats f4 * part cF_SY cvecmats f4 creal_add cd_sy f0 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 creal_mul csigma_sy f0 csum * part cJ1_SY f0 / creal_sub ccstab cvector_norm cvector_sub crow cFST b0 cvecmats f4 crow cSND b0 cvecmats f4
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) |- ((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
- |- (((!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))))) ==> ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))))) alpha)) = ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))))) alpha))
T c= c==> ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f1 * / ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f1 f5 * / ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f1 f5
+ |- (((!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)) ==> ((\str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)) str)) = ((\str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)) str))
T c= c==> ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f6 * / c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f6 f9 * / c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f6 f9
- |- (((!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))))))))) ==> ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))))))))) k)) = ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))))))))) k))
T c= c==> ! ! ! ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b1 * / ! ! ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b1 f1 * / ! ! ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b1 f1
- |- ((\beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))))) beta)
T * / ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f1 f6
+ (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s) |- (((GSPEC (\GEN%PVAR%7598. (?x. (((SETSPEC GEN%PVAR%7598) (?i. ((((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT ((((NUMERAL (BIT1 _0)) + (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT EMPTY)) IN ((change_type_v2 (scs_J_v39 ((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ ((i IN ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ (x = (i , (SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))))))) x)))) = EMPTY) = ((GSPEC (\GEN%PVAR%7598. (?x. (((SETSPEC GEN%PVAR%7598) (?i. ((((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT ((((NUMERAL (BIT1 _0)) + (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT EMPTY)) IN ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ ((i IN ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ (x = (i , (SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))))))) x)))) = EMPTY))
T c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c= c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ cIN * * part cINSERT cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 * * part cINSERT cMOD c+ cNUMERAL cBIT1 c_0 cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 part cEMPTY * * part cchange_type_v2 * part cscs_J_v39 cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b3 / / / / / / cCOND c= cMOD b8 b4 cMOD b8 b4 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b8 b4 * * part cINSERT cMOD b8 b4 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b5 cCOND c\/ c= cMOD b8 b4 cMOD cSUC b8 b4 c= cMOD cSUC b8 b4 cMOD b8 b4 b6 b7 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ cIN b2 * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= b1 c, b2 cSUC cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b1 part cEMPTY c= * part cGSPEC / c? / cSETSPEC b0 c? / c/\ cIN * * part cINSERT cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 * * part cINSERT cMOD c+ cNUMERAL cBIT1 c_0 cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 part cEMPTY * * part cchange_type_v2 * part cscs_J_v39 f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ cIN b2 * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= b1 c, b2 cSUC cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b1 part cEMPTY
+ (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s) |- (((scs_J_v39 ((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (\i. (\j. F))) = ((scs_J_v39 s) = (\i. (\j. F))))
T c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c= c= * part cscs_J_v39 cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 / / cF c= * part cscs_J_v39 f0 / / cF
- |- ((\lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))) lo)
T * / ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f5 f8
+ (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s) |- (((dsv_v39 s) vv) = (scs_d_v39 s))
T c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c= cdsv_v39 f0 f1 cscs_d_v39 f0
+ ((matvec v) = a) |- ((((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) (scs_d_v39 s))) = (((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY (vecmats (matvec v)))) (E_SY (vecmats (matvec v)))) (F_SY (vecmats (matvec v))))) (scs_d_v39 s))))
T c==> c= cmatvec f0 f1 c= c= creal_sub ctau_fun * * part cIMAGE f2 part cUNIV * * part cIMAGE / * * part cINSERT * f2 b0 * * part cINSERT * f2 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f2 b0 * f2 cSUC b0 part cUNIV cdsv_v39 f3 f2 creal_sub ctau_fun * part cV_SY cvecmats f1 * part cE_SY cvecmats f1 * part cF_SY cvecmats f1 cscs_d_v39 f3 c= creal_sub ctau_fun * * part cIMAGE f2 part cUNIV * * part cIMAGE / * * part cINSERT * f2 b0 * * part cINSERT * f2 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f2 b0 * f2 cSUC b0 part cUNIV cdsv_v39 f3 f2 creal_sub ctau_fun * part cV_SY cvecmats cmatvec f0 * part cE_SY cvecmats cmatvec f0 * part cF_SY cvecmats cmatvec f0 cscs_d_v39 f3
+ |- ((t = T) = t)
T c= c= f0 cT f0
- |- ((a IN (GSPEC (\GEN%PVAR%7711. (?i. (?j. (((SETSPEC GEN%PVAR%7711) F) (i INSERT (j INSERT EMPTY)))))))) = F)
T c= cIN f0 * part cGSPEC / c? / c? / cSETSPEC b0 cF * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cF
+ |- (((!d. (!s. (!a. (!b. (!J. (!f. ((((((((stable_system (scs_k_v39 s)) d) s) a) b) J) f) ==> (((k_sy (stable_sy ((scs_k_v39 s) , (d , (s , (a , (b , (J , f)))))))) = (scs_k_v39 s)) /\ (((d_sy (stable_sy ((scs_k_v39 s) , (d , (s , (a , (b , (J , f)))))))) = d) /\ (((a_sy (stable_sy ((scs_k_v39 s) , (d , (s , (a , (b , (J , f)))))))) = a) /\ (((b_sy (stable_sy ((scs_k_v39 s) , (d , (s , (a , (b , (J , f)))))))) = b) /\ (((J_SY (stable_sy ((scs_k_v39 s) , (d , (s , (a , (b , (J , f)))))))) = J) /\ (((I_SY (stable_sy ((scs_k_v39 s) , (d , (s , (a , (b , (J , f)))))))) = s) /\ ((f_sy (stable_sy ((scs_k_v39 s) , (d , (s , (a , (b , (J , f)))))))) = f)))))))))))))) ==> ((\d. (!s. (!a. (!b. (!J. (!f. ((((((((stable_system (scs_k_v39 s)) d) s) a) b) J) f) ==> (((k_sy (stable_sy ((scs_k_v39 s) , (d , (s , (a , (b , (J , f)))))))) = (scs_k_v39 s)) /\ (((d_sy (stable_sy ((scs_k_v39 s) , (d , (s , (a , (b , (J , f)))))))) = d) /\ (((a_sy (stable_sy ((scs_k_v39 s) , (d , (s , (a , (b , (J , f)))))))) = a) /\ (((b_sy (stable_sy ((scs_k_v39 s) , (d , (s , (a , (b , (J , f)))))))) = b) /\ (((J_SY (stable_sy ((scs_k_v39 s) , (d , (s , (a , (b , (J , f)))))))) = J) /\ (((I_SY (stable_sy ((scs_k_v39 s) , (d , (s , (a , (b , (J , f)))))))) = s) /\ ((f_sy (stable_sy ((scs_k_v39 s) , (d , (s , (a , (b , (J , f)))))))) = f)))))))))))))) (scs_d_v39 s))) = ((\d. (!s. (!a. (!b. (!J. (!f. ((((((((stable_system (scs_k_v39 s)) d) s) a) b) J) f) ==> (((k_sy (stable_sy ((scs_k_v39 s) , (d , (s , (a , (b , (J , f)))))))) = (scs_k_v39 s)) /\ (((d_sy (stable_sy ((scs_k_v39 s) , (d , (s , (a , (b , (J , f)))))))) = d) /\ (((a_sy (stable_sy ((scs_k_v39 s) , (d , (s , (a , (b , (J , f)))))))) = a) /\ (((b_sy (stable_sy ((scs_k_v39 s) , (d , (s , (a , (b , (J , f)))))))) = b) /\ (((J_SY (stable_sy ((scs_k_v39 s) , (d , (s , (a , (b , (J , f)))))))) = J) /\ (((I_SY (stable_sy ((scs_k_v39 s) , (d , (s , (a , (b , (J , f)))))))) = s) /\ ((f_sy (stable_sy ((scs_k_v39 s) , (d , (s , (a , (b , (J , f)))))))) = f)))))))))))))) (scs_d_v39 s)))
T c= c==> ! ! ! ! ! ! c==> cstable_system cscs_k_v39 f0 b0 b1 b2 b3 b4 b5 c/\ c= ck_sy cstable_sy c, cscs_k_v39 f0 c, b0 c, b1 c, b2 c, b3 c, b4 b5 cscs_k_v39 f0 c/\ c= cd_sy cstable_sy c, cscs_k_v39 f0 c, b0 c, b1 c, b2 c, b3 c, b4 b5 b0 c/\ c= * part ca_sy cstable_sy c, cscs_k_v39 f0 c, b0 c, b1 c, b2 c, b3 c, b4 b5 b2 c/\ c= * part cb_sy cstable_sy c, cscs_k_v39 f0 c, b0 c, b1 c, b2 c, b3 c, b4 b5 b3 c/\ c= * part cJ_SY cstable_sy c, cscs_k_v39 f0 c, b0 c, b1 c, b2 c, b3 c, b4 b5 b4 c/\ c= * part cI_SY cstable_sy c, cscs_k_v39 f0 c, b0 c, b1 c, b2 c, b3 c, b4 b5 b1 c= * part cf_sy cstable_sy c, cscs_k_v39 f0 c, b0 c, b1 c, b2 c, b3 c, b4 b5 b5 * / ! ! ! ! ! c==> cstable_system cscs_k_v39 f0 b0 b1 b2 b3 b4 b5 c/\ c= ck_sy cstable_sy c, cscs_k_v39 f0 c, b0 c, b1 c, b2 c, b3 c, b4 b5 cscs_k_v39 f0 c/\ c= cd_sy cstable_sy c, cscs_k_v39 f0 c, b0 c, b1 c, b2 c, b3 c, b4 b5 b0 c/\ c= * part ca_sy cstable_sy c, cscs_k_v39 f0 c, b0 c, b1 c, b2 c, b3 c, b4 b5 b2 c/\ c= * part cb_sy cstable_sy c, cscs_k_v39 f0 c, b0 c, b1 c, b2 c, b3 c, b4 b5 b3 c/\ c= * part cJ_SY cstable_sy c, cscs_k_v39 f0 c, b0 c, b1 c, b2 c, b3 c, b4 b5 b4 c/\ c= * part cI_SY cstable_sy c, cscs_k_v39 f0 c, b0 c, b1 c, b2 c, b3 c, b4 b5 b1 c= * part cf_sy cstable_sy c, cscs_k_v39 f0 c, b0 c, b1 c, b2 c, b3 c, b4 b5 b5 cscs_d_v39 f0 * / ! ! ! ! ! c==> cstable_system cscs_k_v39 f0 b0 b1 b2 b3 b4 b5 c/\ c= ck_sy cstable_sy c, cscs_k_v39 f0 c, b0 c, b1 c, b2 c, b3 c, b4 b5 cscs_k_v39 f0 c/\ c= cd_sy cstable_sy c, cscs_k_v39 f0 c, b0 c, b1 c, b2 c, b3 c, b4 b5 b0 c/\ c= * part ca_sy cstable_sy c, cscs_k_v39 f0 c, b0 c, b1 c, b2 c, b3 c, b4 b5 b2 c/\ c= * part cb_sy cstable_sy c, cscs_k_v39 f0 c, b0 c, b1 c, b2 c, b3 c, b4 b5 b3 c/\ c= * part cJ_SY cstable_sy c, cscs_k_v39 f0 c, b0 c, b1 c, b2 c, b3 c, b4 b5 b4 c/\ c= * part cI_SY cstable_sy c, cscs_k_v39 f0 c, b0 c, b1 c, b2 c, b3 c, b4 b5 b1 c= * part cf_sy cstable_sy c, cscs_k_v39 f0 c, b0 c, b1 c, b2 c, b3 c, b4 b5 b5 cscs_d_v39 f0
- (((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((!P. (!x. ((x IN P) = (P x)))) ==> ((\P. (!x. ((x IN P) = (P x)))) P)) = ((\P. (!x. ((x IN P) = (P x)))) P))
T c= c==> ! ! c= cIN b1 b0 * b0 b1 * / ! c= cIN b1 b0 * b0 b1 f0 * / ! c= cIN b1 b0 * b0 b1 f0
+ |- ((x IN UNIV) = T)
T c= cIN f0 part cUNIV cT
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- (((!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))) ==> ((\lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))) lo)) = ((\lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))) lo))
T c= c==> ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f2 * / ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f2 f8 * / ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f2 f8
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0)))) |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 cF
+ (((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = ((\x. (((real_mul x) ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\s. (!a. (!b. (!J. (!f. ((((((((stable_system (scs_k_v39 s)) (scs_d_v39 s)) s) a) b) J) f) ==> (((k_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = (scs_k_v39 s)) /\ (((d_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = (scs_d_v39 s)) /\ (((a_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = a) /\ (((b_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = b) /\ (((J_SY (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = J) /\ (((I_SY (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = s) /\ ((f_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (s , (a , (b , (J , f)))))))) = f))))))))))))) ((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))))
T * / ! ! ! ! c==> cstable_system cscs_k_v39 f0 cscs_d_v39 f0 b0 b1 b2 b3 b4 c/\ c= ck_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 cscs_k_v39 f0 c/\ c= cd_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 cscs_d_v39 f0 c/\ c= * part ca_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 b1 c/\ c= * part cb_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 b2 c/\ c= * part cJ_SY cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 b3 c/\ c= * part cI_SY cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 b0 c= * part cf_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, b0 c, b1 c, b2 c, b3 b4 b4 * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0
- |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) ==> F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- ((((~ ((((real_mul a) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) (real_of_num (NUMERAL _0))) = a))) ==> F) ==> ((((real_mul a) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) (real_of_num (NUMERAL _0))) = a))) = ((((real_mul a) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) (real_of_num (NUMERAL _0))) = a)))
T c= c==> c==> c~ c/\ c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_of_num cNUMERAL c_0 f0 cF c/\ c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_of_num cNUMERAL c_0 f0 c/\ c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_of_num cNUMERAL c_0 f0
+ ((scs_k_v39 s) = (dimindex UNIV)), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v) /\ (((matvec v) = a) /\ ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1))), (vv IN (BBs_v39 s)) |- (((taustar_v39 s) vv) = ((tau_star s1) a))
T c==> c= cscs_k_v39 f0 cdimindex part cUNIV c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c==> c/\ c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f2 c/\ c= cmatvec f2 f3 c= cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f0 f4 c==> cIN f1 * part cBBs_v39 f0 c= ctaustar_v39 f0 f1 ctau_star f4 f3
- |- (((!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)) ==> ((\str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)) str)) = ((\str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)) str))
T c= c==> ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f5 * / c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f5 f9 * / c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f5 f9
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_gt y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ |- (((!vv. (!s. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s))))) ==> ((\vv. (!s. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s))))) vv)) = ((\vv. (!s. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s))))) vv))
T c= c==> ! ! c==> c= * part cscs_J_v39 b1 / / cF c= cdsv_v39 b1 b0 cscs_d_v39 b1 * / ! c==> c= * part cscs_J_v39 b1 / / cF c= cdsv_v39 b1 b0 cscs_d_v39 b1 f0 * / ! c==> c= * part cscs_J_v39 b1 / / cF c= cdsv_v39 b1 b0 cscs_d_v39 b1 f0
+ |- ((\a. (!k. (((change_type_v2 a) k) = (GSPEC (\GEN%PVAR%7711. (?i. (?j. (((SETSPEC GEN%PVAR%7711) (((a i) j) = T)) ((i MOD k) INSERT ((j MOD k) INSERT EMPTY)))))))))) a)
T * / ! c= * * part cchange_type_v2 b0 b1 * part cGSPEC / c? / c? / cSETSPEC b2 c= * * b0 b3 b4 cT * * part cINSERT cMOD b3 b1 * * part cINSERT cMOD b4 b1 part cEMPTY f0
- |- ((FINITE s) ==> (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f)))))
T c==> cFINITE f0 c= csum * * part cINSERT f1 f0 f2 cCOND cIN f1 f0 csum f0 f2 creal_add * f2 f1 csum f0 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)), ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)), ((V_SY v) = ((IMAGE vv) UNIV)), ((scs_k_v39 s) = (dimindex UNIV)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (vv IN (BBs_v39 s)) |- (((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> (((taustar_v39 s) vv) = ((tau_star s1) a)))
T c==> c= * part cE_SY f0 * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV c==> c= * part cF_SY f0 * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV c==> c= * part cV_SY f0 * * part cIMAGE f1 part cUNIV c==> c= cscs_k_v39 f2 cdimindex part cUNIV c==> c= cmatvec f0 f3 c==> c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f0 c==> c= cstable_sy c, cscs_k_v39 f2 c, cscs_d_v39 f2 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f2 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f2 c, * part cchange_type_v3 * part cscs_b_v39 f2 c, * * part cchange_type_v2 * part cscs_J_v39 f2 cscs_k_v39 f2 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f2 f4 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> cIN f1 * part cBBs_v39 f2 c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= ctaustar_v39 f2 f1 ctau_star f4 f3
+ ((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((scs_k_v39 s) = (dimindex UNIV)) |- ((((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END (((COND ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT1 _0))))) ((real_sub (((tau3 (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0)))))) ((dsv_v39 s) vv))) ((real_sub (((tau_fun V) E) FF)) ((dsv_v39 s) vv)))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) (d_fun (s1 , a)))) = (((taustar_v39 s) vv) = ((tau_star s1) a)))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cscs_k_v39 f0 cdimindex part cUNIV c= c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c<= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_sub ctau3 * f1 cNUMERAL c_0 * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL cBIT0 cBIT1 c_0 cdsv_v39 f0 f1 creal_sub ctau_fun b0 b1 b2 cdsv_v39 f0 f1 * * part cIMAGE / c, * f1 b2 * f1 cSUC b2 part cUNIV * * part cIMAGE / * * part cINSERT * f1 b1 * * part cINSERT * f1 cSUC b1 part cEMPTY part cUNIV * * part cIMAGE f1 part cUNIV creal_sub ctau_fun * part cV_SY cvecmats f2 * part cE_SY cvecmats f2 * part cF_SY cvecmats f2 cd_fun c, f3 f2 c= ctaustar_v39 f0 f1 ctau_star f3 f2
+ |- ((\J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)))) J)
T * / ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f0 f7
+ |- ((\b. (!J. (!f. ((((((((stable_system (scs_k_v39 s)) (scs_d_v39 s)) ((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) b) J) f) ==> (((k_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , (b , (J , f)))))))) = (scs_k_v39 s)) /\ (((d_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , (b , (J , f)))))))) = (scs_d_v39 s)) /\ (((a_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , (b , (J , f)))))))) = (change_type_v3 (scs_a_v39 s))) /\ (((b_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , (b , (J , f)))))))) = b) /\ (((J_SY (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , (b , (J , f)))))))) = J) /\ (((I_SY (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , (b , (J , f)))))))) = ((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0))))) /\ ((f_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , (b , (J , f)))))))) = f))))))))))) (change_type_v3 (scs_b_v39 s)))
T * / ! ! c==> cstable_system cscs_k_v39 f0 cscs_d_v39 f0 * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f0 b0 b1 b2 c/\ c= ck_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, b0 c, b1 b2 cscs_k_v39 f0 c/\ c= cd_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, b0 c, b1 b2 cscs_d_v39 f0 c/\ c= * part ca_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, b0 c, b1 b2 * part cchange_type_v3 * part cscs_a_v39 f0 c/\ c= * part cb_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, b0 c, b1 b2 b0 c/\ c= * part cJ_SY cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, b0 c, b1 b2 b1 c/\ c= * part cI_SY cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, b0 c, b1 b2 * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c= * part cf_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, b0 c, b1 b2 b2 * part cchange_type_v3 * part cscs_b_v39 f0
+ ((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)), ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)), ((V_SY v) = ((IMAGE vv) UNIV)), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((scs_k_v39 s) = (dimindex UNIV)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (vv IN (BBs_v39 s)) |- (((s = ((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) ==> (((((((stable_system (scs_k_v39 s)) (scs_d_v39 s)) ((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) (change_type_v3 (scs_b_v39 s))) ((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s))) (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s))))) ==> (((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) (d_fun (s1 , a)))))
T c==> c= * part cE_SY f0 * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV c==> c= * part cF_SY f0 * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV c==> c= * part cV_SY f0 * * part cIMAGE f1 part cUNIV c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cscs_k_v39 f2 cdimindex part cUNIV c==> c= cmatvec f0 f3 c==> c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f0 c==> c= cstable_sy c, cscs_k_v39 f2 c, cscs_d_v39 f2 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f2 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f2 c, * part cchange_type_v3 * part cscs_b_v39 f2 c, * * part cchange_type_v2 * part cscs_J_v39 f2 cscs_k_v39 f2 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f2 f4 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> cIN f1 * part cBBs_v39 f2 c==> c==> c= f2 cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cstable_system cscs_k_v39 f2 cscs_d_v39 f2 * * part c.. cNUMERAL c_0 c- cscs_k_v39 f2 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f2 * part cchange_type_v3 * part cscs_b_v39 f2 * * part cchange_type_v2 * part cscs_J_v39 f2 cscs_k_v39 f2 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f2 c= creal_sub ctau_fun * * part cIMAGE f1 part cUNIV * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV cdsv_v39 f2 f1 creal_sub ctau_fun * part cV_SY cvecmats f3 * part cE_SY cvecmats f3 * part cF_SY cvecmats f3 cd_fun c, f4 f3
- |- ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))) a)
T * / ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b0 f3
+ ((J1_SY s1) = EMPTY) |- ((((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) (scs_d_v39 s))) = (((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) ((real_add (scs_d_v39 s)) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) ((real_mul (sigma_sy s1)) ((sum (J1_SY s1)) (\x. ((real_sub cstab) (vector_norm ((vector_sub ((row (FST x)) (vecmats a))) ((row (SND x)) (vecmats a)))))))))))))
T c==> c= * part cJ1_SY f0 part cEMPTY c= c= creal_sub ctau_fun * * part cIMAGE f1 part cUNIV * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV cdsv_v39 f2 f1 creal_sub ctau_fun * part cV_SY cvecmats f3 * part cE_SY cvecmats f3 * part cF_SY cvecmats f3 cscs_d_v39 f2 c= creal_sub ctau_fun * * part cIMAGE f1 part cUNIV * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV cdsv_v39 f2 f1 creal_sub ctau_fun * part cV_SY cvecmats f3 * part cE_SY cvecmats f3 * part cF_SY cvecmats f3 creal_add cscs_d_v39 f2 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 creal_mul csigma_sy f0 csum * part cJ1_SY f0 / creal_sub ccstab cvector_norm cvector_sub crow cFST b0 cvecmats f3 crow cSND b0 cvecmats f3
- |- ((\vv. (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV)))) vv)
T * / c= cBBs_v39 f0 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b1 part cball_annulus c/\ cperiodic b0 cscs_k_v39 f0 c/\ ! ! c/\ creal_le cscs_a_v39 f0 b4 b5 cdistance c, * b0 b4 * b0 b5 creal_le cdistance c, * b0 b4 * b0 b5 cscs_b_v39 f0 b4 b5 c\/ c<= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b1 c, b2 b3 * * part cIMAGE / c, * b0 b3 * b0 cSUC b3 part cUNIV * * part cIMAGE / * * part cINSERT * b0 b2 * * part cINSERT * b0 cSUC b2 part cEMPTY part cUNIV * * part cIMAGE b0 part cUNIV f1
- |- ((~ ((((real_mul a) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) (real_of_num (NUMERAL _0))) = a))) ==> F)
T c==> c~ c/\ c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_of_num cNUMERAL c_0 f0 cF
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) |- (((((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ ((scs_k_v39 s) = (dimindex UNIV)), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (((matvec v) = a) /\ ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1)), (vv IN (BBs_v39 s)) |- (((taustar_v39 s) vv) = ((tau_star s1) a))
T c==> c= cscs_k_v39 f0 cdimindex part cUNIV c==> c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f2 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c==> c/\ c= cmatvec f2 f3 c= cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f0 f4 c==> cIN f1 * part cBBs_v39 f0 c= ctaustar_v39 f0 f1 ctau_star f4 f3
- |- ((((real_mul a) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) (real_of_num (NUMERAL _0))) = a))
T c/\ c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_of_num cNUMERAL c_0 f0
+ ((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)), ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)), ((V_SY v) = ((IMAGE vv) UNIV)), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((scs_k_v39 s) = (dimindex UNIV)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (vv IN (BBs_v39 s)) |- (((taustar_v39 s) vv) = ((tau_star s1) a))
T c==> c= * part cE_SY f0 * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV c==> c= * part cF_SY f0 * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV c==> c= * part cV_SY f0 * * part cIMAGE f1 part cUNIV c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cscs_k_v39 f2 cdimindex part cUNIV c==> c= cmatvec f0 f3 c==> c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f0 c==> c= cstable_sy c, cscs_k_v39 f2 c, cscs_d_v39 f2 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f2 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f2 c, * part cchange_type_v3 * part cscs_b_v39 f2 c, * * part cchange_type_v2 * part cscs_J_v39 f2 cscs_k_v39 f2 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f2 f4 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> cIN f1 * part cBBs_v39 f2 c= ctaustar_v39 f2 f1 ctau_star f4 f3
+ |- ((x IN (GSPEC (\GEN%PVAR%7598. (?x. (((SETSPEC GEN%PVAR%7598) (?i. ((((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT ((((NUMERAL (BIT1 _0)) + (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT EMPTY)) IN (GSPEC (\GEN%PVAR%7711. (?i. (?j. (((SETSPEC GEN%PVAR%7711) F) ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT ((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT EMPTY)))))))) /\ ((i IN ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ (x = (i , (SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))))))) x))))) = (?i. ((((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT ((((NUMERAL (BIT1 _0)) + (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT EMPTY)) IN (GSPEC (\GEN%PVAR%7711. (?i. (?j. (((SETSPEC GEN%PVAR%7711) F) ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT ((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) INSERT EMPTY)))))))) /\ ((i IN ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ (x = (i , (SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))))))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ cIN * * part cINSERT cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 * * part cINSERT cMOD c+ cNUMERAL cBIT1 c_0 cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 part cEMPTY * part cGSPEC / c? / c? / cSETSPEC b3 cF * * part cINSERT cMOD b4 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 * * part cINSERT cMOD b4 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 part cEMPTY c/\ cIN b2 * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= b1 c, b2 cSUC cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b1 c? / c/\ cIN * * part cINSERT cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 * * part cINSERT cMOD c+ cNUMERAL cBIT1 c_0 cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 part cEMPTY * part cGSPEC / c? / c? / cSETSPEC b1 cF * * part cINSERT cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 * * part cINSERT cMOD b2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 part cEMPTY c/\ cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= f0 c, b0 cSUC cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
+ |- (((sum EMPTY) f) = (real_of_num (NUMERAL _0)))
T c= csum part cEMPTY f0 creal_of_num cNUMERAL c_0
+ |- ((\f. ((((((((stable_system (scs_k_v39 s)) (scs_d_v39 s)) ((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) (change_type_v3 (scs_b_v39 s))) ((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s))) f) ==> (((k_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , f)))))))) = (scs_k_v39 s)) /\ (((d_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , f)))))))) = (scs_d_v39 s)) /\ (((a_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , f)))))))) = (change_type_v3 (scs_a_v39 s))) /\ (((b_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , f)))))))) = (change_type_v3 (scs_b_v39 s))) /\ (((J_SY (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , f)))))))) = ((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s))) /\ (((I_SY (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , f)))))))) = ((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0))))) /\ ((f_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , f)))))))) = f))))))))) (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s))))
T * / c==> cstable_system cscs_k_v39 f0 cscs_d_v39 f0 * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f0 * part cchange_type_v3 * part cscs_b_v39 f0 * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 b0 c/\ c= ck_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 b0 cscs_k_v39 f0 c/\ c= cd_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 b0 cscs_d_v39 f0 c/\ c= * part ca_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 b0 * part cchange_type_v3 * part cscs_a_v39 f0 c/\ c= * part cb_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 b0 * part cchange_type_v3 * part cscs_b_v39 f0 c/\ c= * part cJ_SY cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 b0 * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 c/\ c= * part cI_SY cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 b0 * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c= * part cf_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 b0 b0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f0
+ |- ((\k. (((change_type_v2 a) k) = (GSPEC (\GEN%PVAR%7711. (?i. (?j. (((SETSPEC GEN%PVAR%7711) (((a i) j) = T)) ((i MOD k) INSERT ((j MOD k) INSERT EMPTY))))))))) k)
T * / c= * * part cchange_type_v2 f0 b0 * part cGSPEC / c? / c? / cSETSPEC b1 c= * * f0 b2 b3 cT * * part cINSERT cMOD b2 b0 * * part cINSERT cMOD b3 b0 part cEMPTY f1
+ ((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)), ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)), ((V_SY v) = ((IMAGE vv) UNIV)), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((k_sy s1) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((scs_k_v39 s) = (dimindex UNIV)), ((d_sy s1) = (scs_d_v39 s)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (((d_sy s1) = (scs_d_v39 s)) /\ (((a_sy s1) = (change_type_v3 (scs_a_v39 s))) /\ (((b_sy s1) = (change_type_v3 (scs_b_v39 s))) /\ (((J_SY s1) = ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ (((I_SY s1) = ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) /\ ((f_sy s1) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))))))), (vv IN (BBs_v39 s)), (((((((stable_system (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (scs_d_v39 s)) ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) (change_type_v3 (scs_b_v39 s))) ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) |- (((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) ((real_add (d_sy s1)) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) ((real_mul (sigma_sy s1)) ((sum (J1_SY s1)) (\x. ((real_sub cstab) (vector_norm ((vector_sub ((row (FST x)) (vecmats a))) ((row (SND x)) (vecmats a))))))))))))
T c==> c= * part cE_SY f0 * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV c==> c= * part cF_SY f0 * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV c==> c= * part cV_SY f0 * * part cIMAGE f1 part cUNIV c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= ck_sy f2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cscs_k_v39 f3 cdimindex part cUNIV c==> c= cd_sy f2 cscs_d_v39 f3 c==> c= cmatvec f0 f4 c==> c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f0 c==> c= cstable_sy c, cscs_k_v39 f3 c, cscs_d_v39 f3 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f3 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f3 c, * part cchange_type_v3 * part cscs_b_v39 f3 c, * * part cchange_type_v2 * part cscs_J_v39 f3 cscs_k_v39 f3 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f3 f2 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f3 c==> c/\ c= cd_sy f2 cscs_d_v39 f3 c/\ c= * part ca_sy f2 * part cchange_type_v3 * part cscs_a_v39 f3 c/\ c= * part cb_sy f2 * part cchange_type_v3 * part cscs_b_v39 f3 c/\ c= * part cJ_SY f2 * * part cchange_type_v2 * part cscs_J_v39 f3 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= * part cI_SY f2 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= * part cf_sy f2 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> cIN f1 * part cBBs_v39 f3 c==> cstable_system cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cscs_d_v39 f3 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f3 * part cchange_type_v3 * part cscs_b_v39 f3 * * part cchange_type_v2 * part cscs_J_v39 f3 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= creal_sub ctau_fun * * part cIMAGE f1 part cUNIV * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV cdsv_v39 f3 f1 creal_sub ctau_fun * part cV_SY cvecmats f4 * part cE_SY cvecmats f4 * part cF_SY cvecmats f4 creal_add cd_sy f2 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 creal_mul csigma_sy f2 csum * part cJ1_SY f2 / creal_sub ccstab cvector_norm cvector_sub crow cFST b0 cvecmats f4 crow cSND b0 cvecmats f4
+ ((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)), ((V_SY v) = ((IMAGE vv) UNIV)), ((scs_k_v39 s) = (dimindex UNIV)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) /\ ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))), (vv IN (BBs_v39 s)) |- (((taustar_v39 s) vv) = ((tau_star s1) a))
T c==> c= * part cE_SY f0 * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV c==> c= * part cV_SY f0 * * part cIMAGE f1 part cUNIV c==> c= cscs_k_v39 f2 cdimindex part cUNIV c==> c= cmatvec f0 f3 c==> c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f0 c==> c= cstable_sy c, cscs_k_v39 f2 c, cscs_d_v39 f2 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f2 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f2 c, * part cchange_type_v3 * part cscs_b_v39 f2 c, * * part cchange_type_v2 * part cscs_J_v39 f2 cscs_k_v39 f2 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f2 f4 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> c/\ c= * part cE_SY f0 * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV c= * part cF_SY f0 * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV c==> cIN f1 * part cBBs_v39 f2 c= ctaustar_v39 f2 f1 ctau_star f4 f3
+ |- (((!k. (!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))))) ==> ((\k. (!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))))) k)) = ((\k. (!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))))) k))
T c= c==> ! ! ! ! c= cmk_unadorned_v39 b0 b1 b2 b3 cscs_v39 c, b0 c, b1 c, b2 c, b2 c, b3 c, b3 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY * / ! ! ! c= cmk_unadorned_v39 b0 b1 b2 b3 cscs_v39 c, b0 c, b1 c, b2 c, b2 c, b3 c, b3 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f0 * / ! ! ! c= cmk_unadorned_v39 b0 b1 b2 b3 cscs_v39 c, b0 c, b1 c, b2 c, b2 c, b3 c, b3 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f0
- |- (((FINITE s) ==> (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f))))) = T)
T c= c==> cFINITE f0 c= csum * * part cINSERT f1 f0 f2 cCOND cIN f1 f0 csum f0 f2 creal_add * f2 f1 csum f0 f2 cT
- |- (((!s. (!vv. (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV))))) ==> ((\s. (!vv. (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV))))) s)) = ((\s. (!vv. (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV))))) s))
T c= c==> ! ! c= cBBs_v39 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b2 part cball_annulus c/\ cperiodic b1 cscs_k_v39 b0 c/\ ! ! c/\ creal_le cscs_a_v39 b0 b5 b6 cdistance c, * b1 b5 * b1 b6 creal_le cdistance c, * b1 b5 * b1 b6 cscs_b_v39 b0 b5 b6 c\/ c<= cscs_k_v39 b0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b2 c, b3 b4 * * part cIMAGE / c, * b1 b4 * b1 cSUC b4 part cUNIV * * part cIMAGE / * * part cINSERT * b1 b3 * * part cINSERT * b1 cSUC b3 part cEMPTY part cUNIV * * part cIMAGE b1 part cUNIV * / ! c= cBBs_v39 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b2 part cball_annulus c/\ cperiodic b1 cscs_k_v39 b0 c/\ ! ! c/\ creal_le cscs_a_v39 b0 b5 b6 cdistance c, * b1 b5 * b1 b6 creal_le cdistance c, * b1 b5 * b1 b6 cscs_b_v39 b0 b5 b6 c\/ c<= cscs_k_v39 b0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b2 c, b3 b4 * * part cIMAGE / c, * b1 b4 * b1 cSUC b4 part cUNIV * * part cIMAGE / * * part cINSERT * b1 b3 * * part cINSERT * b1 cSUC b3 part cEMPTY part cUNIV * * part cIMAGE b1 part cUNIV f0 * / ! c= cBBs_v39 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b2 part cball_annulus c/\ cperiodic b1 cscs_k_v39 b0 c/\ ! ! c/\ creal_le cscs_a_v39 b0 b5 b6 cdistance c, * b1 b5 * b1 b6 creal_le cdistance c, * b1 b5 * b1 b6 cscs_b_v39 b0 b5 b6 c\/ c<= cscs_k_v39 b0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b2 c, b3 b4 * * part cIMAGE / c, * b1 b4 * b1 cSUC b4 part cUNIV * * part cIMAGE / * * part cINSERT * b1 b3 * * part cINSERT * b1 cSUC b3 part cEMPTY part cUNIV * * part cIMAGE b1 part cUNIV f0
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
+ |- (((!k. (((change_type_v2 a) k) = (GSPEC (\GEN%PVAR%7711. (?i. (?j. (((SETSPEC GEN%PVAR%7711) (((a i) j) = T)) ((i MOD k) INSERT ((j MOD k) INSERT EMPTY))))))))) ==> ((\k. (((change_type_v2 a) k) = (GSPEC (\GEN%PVAR%7711. (?i. (?j. (((SETSPEC GEN%PVAR%7711) (((a i) j) = T)) ((i MOD k) INSERT ((j MOD k) INSERT EMPTY))))))))) k)) = ((\k. (((change_type_v2 a) k) = (GSPEC (\GEN%PVAR%7711. (?i. (?j. (((SETSPEC GEN%PVAR%7711) (((a i) j) = T)) ((i MOD k) INSERT ((j MOD k) INSERT EMPTY))))))))) k))
T c= c==> ! c= * * part cchange_type_v2 f0 b0 * part cGSPEC / c? / c? / cSETSPEC b1 c= * * f0 b2 b3 cT * * part cINSERT cMOD b2 b0 * * part cINSERT cMOD b3 b0 part cEMPTY * / c= * * part cchange_type_v2 f0 b0 * part cGSPEC / c? / c? / cSETSPEC b1 c= * * f0 b2 b3 cT * * part cINSERT cMOD b2 b0 * * part cINSERT cMOD b3 b0 part cEMPTY f1 * / c= * * part cchange_type_v2 f0 b0 * part cGSPEC / c? / c? / cSETSPEC b1 c= * * f0 b2 b3 cT * * part cINSERT cMOD b2 b0 * * part cINSERT cMOD b3 b0 part cEMPTY f1
+ ((E_SY v) = ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)), ((F_SY v) = ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)), ((V_SY v) = ((IMAGE vv) UNIV)), ((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))), ((scs_k_v39 s) = (dimindex UNIV)), ((matvec v) = a), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (vv IN (BBs_v39 s)), (((((((stable_system (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (scs_d_v39 s)) ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) (change_type_v3 (scs_b_v39 s))) ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) |- ((((((((stable_system (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (scs_d_v39 s)) ((NUMERAL _0) .. ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) (change_type_v3 (scs_b_v39 s))) ((change_type_v2 (scs_J_v39 s)) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (\i. (((NUMERAL (BIT1 _0)) + i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (((real_sub (((tau_fun ((IMAGE vv) UNIV)) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV)) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))) ((dsv_v39 s) vv)) = ((real_sub (((tau_fun (V_SY (vecmats a))) (E_SY (vecmats a))) (F_SY (vecmats a)))) (d_fun (s1 , a)))))
T c==> c= * part cE_SY f0 * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV c==> c= * part cF_SY f0 * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV c==> c= * part cV_SY f0 * * part cIMAGE f1 part cUNIV c==> c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c= cscs_k_v39 f2 cdimindex part cUNIV c==> c= cmatvec f0 f3 c==> c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f0 c==> c= cstable_sy c, cscs_k_v39 f2 c, cscs_d_v39 f2 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f2 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f2 c, * part cchange_type_v3 * part cscs_b_v39 f2 c, * * part cchange_type_v2 * part cscs_J_v39 f2 cscs_k_v39 f2 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f2 f4 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> cIN f1 * part cBBs_v39 f2 c==> cstable_system cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cscs_d_v39 f2 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f2 * part cchange_type_v3 * part cscs_b_v39 f2 * * part cchange_type_v2 * part cscs_J_v39 f2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ cstable_system cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cscs_d_v39 f2 * * part c.. cNUMERAL c_0 c- cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f2 * part cchange_type_v3 * part cscs_b_v39 f2 * * part cchange_type_v2 * part cscs_J_v39 f2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= creal_sub ctau_fun * * part cIMAGE f1 part cUNIV * * part cIMAGE / * * part cINSERT * f1 b0 * * part cINSERT * f1 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f1 b0 * f1 cSUC b0 part cUNIV cdsv_v39 f2 f1 creal_sub ctau_fun * part cV_SY cvecmats f3 * part cE_SY cvecmats f3 * part cF_SY cvecmats f3 cd_fun c, f4 f3
+ |- ((\k. (!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))))) k)
T * / ! ! ! c= cmk_unadorned_v39 b0 b1 b2 b3 cscs_v39 c, b0 c, b1 c, b2 c, b2 c, b3 c, b3 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f0
- |- (T = (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT1 _0))))))
T c= cT c~ c<= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
+ ((scs_k_v39 s) = (dimindex UNIV)), ((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v), (((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = s), (((vector ((CONS (vv (NUMERAL (BIT1 _0)))) ((CONS (vv (NUMERAL (BIT0 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((CONS (vv (NUMERAL _0))) NIL)))))) = v) /\ (((matvec v) = a) /\ ((stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))) = s1))), (vv IN (BBs_v39 s)) |- (((taustar_v39 s) vv) = ((tau_star s1) a))
T c==> c= cscs_k_v39 f0 cdimindex part cUNIV c==> c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f2 c==> c= cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 c==> c/\ c= cvector cCONS * f1 cNUMERAL cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS * f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS * f1 cNUMERAL c_0 cNIL f2 c/\ c= cmatvec f2 f3 c= cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f0 f4 c==> cIN f1 * part cBBs_v39 f0 c= ctaustar_v39 f0 f1 ctau_star f4 f3
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) = (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((!l. (((tau_star s) l) = ((real_sub (((tau_fun (V_SY (vecmats l))) (E_SY (vecmats l))) (F_SY (vecmats l)))) (d_fun (s , l))))) ==> ((\l. (((tau_star s) l) = ((real_sub (((tau_fun (V_SY (vecmats l))) (E_SY (vecmats l))) (F_SY (vecmats l)))) (d_fun (s , l))))) l)) = ((\l. (((tau_star s) l) = ((real_sub (((tau_fun (V_SY (vecmats l))) (E_SY (vecmats l))) (F_SY (vecmats l)))) (d_fun (s , l))))) l))
T c= c==> ! c= ctau_star f0 b0 creal_sub ctau_fun * part cV_SY cvecmats b0 * part cE_SY cvecmats b0 * part cF_SY cvecmats b0 cd_fun c, f0 b0 * / c= ctau_star f0 b0 creal_sub ctau_fun * part cV_SY cvecmats b0 * part cE_SY cvecmats b0 * part cF_SY cvecmats b0 cd_fun c, f0 b0 f1 * / c= ctau_star f0 b0 creal_sub ctau_fun * part cV_SY cvecmats b0 * part cE_SY cvecmats b0 * part cF_SY cvecmats b0 cd_fun c, f0 b0 f1
+ |- ((((((((stable_system (scs_k_v39 s)) (scs_d_v39 s)) ((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0))))) (change_type_v3 (scs_a_v39 s))) (change_type_v3 (scs_b_v39 s))) ((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s))) (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))) ==> (((k_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s))))))))))) = (scs_k_v39 s)) /\ (((d_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s))))))))))) = (scs_d_v39 s)) /\ (((a_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s))))))))))) = (change_type_v3 (scs_a_v39 s))) /\ (((b_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s))))))))))) = (change_type_v3 (scs_b_v39 s))) /\ (((J_SY (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s))))))))))) = ((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s))) /\ (((I_SY (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s))))))))))) = ((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0))))) /\ ((f_sy (stable_sy ((scs_k_v39 s) , ((scs_d_v39 s) , (((NUMERAL _0) .. ((scs_k_v39 s) - (NUMERAL (BIT1 _0)))) , ((change_type_v3 (scs_a_v39 s)) , ((change_type_v3 (scs_b_v39 s)) , (((change_type_v2 (scs_J_v39 s)) (scs_k_v39 s)) , (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s))))))))))) = (\i. (((NUMERAL (BIT1 _0)) + i) MOD (scs_k_v39 s)))))))))))
T c==> cstable_system cscs_k_v39 f0 cscs_d_v39 f0 * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 * part cchange_type_v3 * part cscs_a_v39 f0 * part cchange_type_v3 * part cscs_b_v39 f0 * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f0 c/\ c= ck_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f0 cscs_k_v39 f0 c/\ c= cd_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f0 cscs_d_v39 f0 c/\ c= * part ca_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f0 * part cchange_type_v3 * part cscs_a_v39 f0 c/\ c= * part cb_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f0 * part cchange_type_v3 * part cscs_b_v39 f0 c/\ c= * part cJ_SY cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f0 * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 c/\ c= * part cI_SY cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f0 * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c= * part cf_sy cstable_sy c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * * part c.. cNUMERAL c_0 c- cscs_k_v39 f0 cNUMERAL cBIT1 c_0 c, * part cchange_type_v3 * part cscs_a_v39 f0 c, * part cchange_type_v3 * part cscs_b_v39 f0 c, * * part cchange_type_v2 * part cscs_J_v39 f0 cscs_k_v39 f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f0 / cMOD c+ cNUMERAL cBIT1 c_0 b0 cscs_k_v39 f0
+ |- ((\vv. (((taustar_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END (((COND ((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0))))) ((real_sub (((tau3 (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0)))))) ((dsv_v39 s) vv))) ((real_sub (((tau_fun V) E) FF)) ((dsv_v39 s) vv)))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV)))) vv)
T * / c= ctaustar_v39 f0 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c<= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT1 c_0 creal_sub ctau3 * b0 cNUMERAL c_0 * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 cdsv_v39 f0 b0 creal_sub ctau_fun b1 b2 b3 cdsv_v39 f0 b0 * * part cIMAGE / c, * b0 b3 * b0 cSUC b3 part cUNIV * * part cIMAGE / * * part cINSERT * b0 b2 * * part cINSERT * b0 cSUC b2 part cEMPTY part cUNIV * * part cIMAGE b0 part cUNIV f1
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0))) = ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))))))))) d)
T * / ! ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b0 f2
- |- (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV)))
T c= cBBs_v39 f0 f1 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b0 part cball_annulus c/\ cperiodic f1 cscs_k_v39 f0 c/\ ! ! c/\ creal_le cscs_a_v39 f0 b3 b4 cdistance c, * f1 b3 * f1 b4 creal_le cdistance c, * f1 b3 * f1 b4 cscs_b_v39 f0 b3 b4 c\/ c<= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b0 c, b1 b2 * * part cIMAGE / c, * f1 b2 * f1 cSUC b2 part cUNIV * * part cIMAGE / * * part cINSERT * f1 b1 * * part cINSERT * f1 cSUC b1 part cEMPTY part cUNIV * * part cIMAGE f1 part cUNIV
+ |- ((\s. (!vv. (((taustar_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END (((COND ((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0))))) ((real_sub (((tau3 (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0)))))) ((dsv_v39 s) vv))) ((real_sub (((tau_fun V) E) FF)) ((dsv_v39 s) vv)))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV))))) s)
T * / ! c= ctaustar_v39 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c<= cscs_k_v39 b0 cNUMERAL cBIT1 cBIT1 c_0 creal_sub ctau3 * b1 cNUMERAL c_0 * b1 cNUMERAL cBIT1 c_0 * b1 cNUMERAL cBIT0 cBIT1 c_0 cdsv_v39 b0 b1 creal_sub ctau_fun b2 b3 b4 cdsv_v39 b0 b1 * * part cIMAGE / c, * b1 b4 * b1 cSUC b4 part cUNIV * * part cIMAGE / * * part cINSERT * b1 b3 * * part cINSERT * b1 cSUC b3 part cEMPTY part cUNIV * * part cIMAGE b1 part cUNIV f0
+ |- (((!f. (((sum EMPTY) f) = (real_of_num (NUMERAL _0)))) ==> ((\f. (((sum EMPTY) f) = (real_of_num (NUMERAL _0)))) f)) = ((\f. (((sum EMPTY) f) = (real_of_num (NUMERAL _0)))) f))
T c= c==> ! c= csum part cEMPTY b0 creal_of_num cNUMERAL c_0 * / c= csum part cEMPTY b0 creal_of_num cNUMERAL c_0 f0 * / c= csum part cEMPTY b0 creal_of_num cNUMERAL c_0 f0
+ (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0)))) \/ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))))) |- ((((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0)))) \/ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))))) /\ F)
T c==> c\/ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ c\/ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 cF
- |- (((!vv. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s)))) ==> ((\vv. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s)))) vv)) = ((\vv. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s)))) vv))
T c= c==> ! c==> c= * part cscs_J_v39 f0 / / cF c= cdsv_v39 f0 b0 cscs_d_v39 f0 * / c==> c= * part cscs_J_v39 f0 / / cF c= cdsv_v39 f0 b0 cscs_d_v39 f0 f1 * / c==> c= * part cscs_J_v39 f0 / / cF c= cdsv_v39 f0 b0 cscs_d_v39 f0 f1
+ |- ((((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0)))) \/ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))))) ==> F)
T c==> c\/ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 cF
- |- ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))))))))) k)
T * / ! ! ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b1 f1
- |- ((\f. (!s. ((FINITE s) ==> (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f))))))) f)
T * / ! c==> cFINITE b1 c= csum * * part cINSERT f0 b1 b0 cCOND cIN f0 b1 csum b1 b0 creal_add * b0 f0 csum b1 b0 f1
- |- ((\str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)) str)
T * / c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f2 f9
- |- (((!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))) ==> ((\J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))) J)) = ((\J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))) J))
T c= c==> ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f1 * / ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f1 f7 * / ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f1 f7
- |- (((!s. (!vv. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s))))) ==> ((\s. (!vv. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s))))) s)) = ((\s. (!vv. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s))))) s))
T c= c==> ! ! c==> c= * part cscs_J_v39 b0 / / cF c= cdsv_v39 b0 b1 cscs_d_v39 b0 * / ! c==> c= * part cscs_J_v39 b0 / / cF c= cdsv_v39 b0 b1 cscs_d_v39 b0 f0 * / ! c==> c= * part cscs_J_v39 b0 / / cF c= cdsv_v39 b0 b1 cscs_d_v39 b0 f0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- |- (((!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))) ==> ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))) alpha)) = ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))) alpha))
T c= c==> ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f2 * / ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f2 f5 * / ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f2 f5
- |- (F = (~ T))
T c= cF c~ cT
- |- (((!x. (!f. (!s. ((FINITE s) ==> (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f)))))))) ==> ((\x. (!f. (!s. ((FINITE s) ==> (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f)))))))) x)) = ((\x. (!f. (!s. ((FINITE s) ==> (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f)))))))) x))
T c= c==> ! ! ! c==> cFINITE b2 c= csum * * part cINSERT b0 b2 b1 cCOND cIN b0 b2 csum b2 b1 creal_add * b1 b0 csum b2 b1 * / ! ! c==> cFINITE b2 c= csum * * part cINSERT b0 b2 b1 cCOND cIN b0 b2 csum b2 b1 creal_add * b1 b0 csum b2 b1 f0 * / ! ! c==> cFINITE b2 c= csum * * part cINSERT b0 b2 b1 cCOND cIN b0 b2 csum b2 b1 creal_add * b1 b0 csum b2 b1 f0
- |- ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))))) alpha)
T * / ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f1 f5
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- (((!vv. (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV)))) ==> ((\vv. (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV)))) vv)) = ((\vv. (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV)))) vv))
T c= c==> ! c= cBBs_v39 f0 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b1 part cball_annulus c/\ cperiodic b0 cscs_k_v39 f0 c/\ ! ! c/\ creal_le cscs_a_v39 f0 b4 b5 cdistance c, * b0 b4 * b0 b5 creal_le cdistance c, * b0 b4 * b0 b5 cscs_b_v39 f0 b4 b5 c\/ c<= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b1 c, b2 b3 * * part cIMAGE / c, * b0 b3 * b0 cSUC b3 part cUNIV * * part cIMAGE / * * part cINSERT * b0 b2 * * part cINSERT * b0 cSUC b2 part cEMPTY part cUNIV * * part cIMAGE b0 part cUNIV * / c= cBBs_v39 f0 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b1 part cball_annulus c/\ cperiodic b0 cscs_k_v39 f0 c/\ ! ! c/\ creal_le cscs_a_v39 f0 b4 b5 cdistance c, * b0 b4 * b0 b5 creal_le cdistance c, * b0 b4 * b0 b5 cscs_b_v39 f0 b4 b5 c\/ c<= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b1 c, b2 b3 * * part cIMAGE / c, * b0 b3 * b0 cSUC b3 part cUNIV * * part cIMAGE / * * part cINSERT * b0 b2 * * part cINSERT * b0 cSUC b2 part cEMPTY part cUNIV * * part cIMAGE b0 part cUNIV f1 * / c= cBBs_v39 f0 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b1 part cball_annulus c/\ cperiodic b0 cscs_k_v39 f0 c/\ ! ! c/\ creal_le cscs_a_v39 f0 b4 b5 cdistance c, * b0 b4 * b0 b5 creal_le cdistance c, * b0 b4 * b0 b5 cscs_b_v39 f0 b4 b5 c\/ c<= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b1 c, b2 b3 * * part cIMAGE / c, * b0 b3 * b0 cSUC b3 part cUNIV * * part cIMAGE / * * part cINSERT * b0 b2 * * part cINSERT * b0 cSUC b2 part cEMPTY part cUNIV * * part cIMAGE b0 part cUNIV f1
- |- (((!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))) ==> ((\lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))) lo)) = ((\lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))) lo))
T c= c==> ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f1 * / ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f1 f8 * / ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f1 f8
- |- (((!s. ((FINITE s) ==> (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f)))))) ==> ((\s. ((FINITE s) ==> (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f)))))) s)) = ((\s. ((FINITE s) ==> (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f)))))) s))
T c= c==> ! c==> cFINITE b0 c= csum * * part cINSERT f0 b0 f1 cCOND cIN f0 b0 csum b0 f1 creal_add * f1 f0 csum b0 f1 * / c==> cFINITE b0 c= csum * * part cINSERT f0 b0 f1 cCOND cIN f0 b0 csum b0 f1 creal_add * f1 f0 csum b0 f1 f2 * / c==> cFINITE b0 c= csum * * part cINSERT f0 b0 f1 cCOND cIN f0 b0 csum b0 f1 creal_add * f1 f0 csum b0 f1 f2
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- (((!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))) ==> ((\lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))) lo)) = ((\lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))) lo))
T c= c==> ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f5 * / ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f5 f8 * / ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f5 f8
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((~ (~ F)) ==> F) ==> (~ F)) = (~ F))
T c= c==> c==> c~ c~ cF cF c~ cF c~ cF
- |- (((!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))))) ==> ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))))) k)) = ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))))) k))
T c= c==> ! ! ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b2 * / ! ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b2 f1 * / ! ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b2 f1
- |- ((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT1 (BIT1 _0))))
T c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ T) = F)
T c= c~ cT cF
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- (((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT1 _0)))) = F)) = (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT1 _0)))) = F))
T c= c==> c~ c<= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c<= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF c= c<= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF
- |- ((\lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))) lo)
T * / ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f2 f8
- (((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\s. (!vv. (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV))))) s)
T * / ! c= cBBs_v39 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b2 part cball_annulus c/\ cperiodic b1 cscs_k_v39 b0 c/\ ! ! c/\ creal_le cscs_a_v39 b0 b5 b6 cdistance c, * b1 b5 * b1 b6 creal_le cdistance c, * b1 b5 * b1 b6 cscs_b_v39 b0 b5 b6 c\/ c<= cscs_k_v39 b0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b2 c, b3 b4 * * part cIMAGE / c, * b1 b4 * b1 cSUC b4 part cUNIV * * part cIMAGE / * * part cINSERT * b1 b3 * * part cINSERT * b1 cSUC b3 part cEMPTY part cUNIV * * part cIMAGE b1 part cUNIV f0
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))))) k)
T * / ! ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b3 f1
- |- (T = ((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT1 (BIT1 _0)))))
T c= cT c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- ((\str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)) str)
T * / c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f1 f9
- |- ((((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- |- (((!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))) ==> ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))) alpha)) = ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))) alpha))
T c= c==> ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f3 * / ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f3 f5 * / ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f3 f5
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)
T c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 f9 f2
- |- ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))))))) b)
T * / ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f1 f4
- |- (((\j. (f j)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (~ (a IN (GSPEC (\GEN%PVAR%7743. (?i. (?j. (((SETSPEC GEN%PVAR%7743) F) (i INSERT (j INSERT EMPTY)))))))))
T c~ cIN f0 * part cGSPEC / c? / c? / cSETSPEC b0 cF * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- |- (((!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))) ==> ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))) a)) = ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))) a))
T c= c==> ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b0 * / ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b0 f3 * / ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b0 f3
- |- ((\J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))) J)
T * / ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f2 f7
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))) ==> ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))) a)) = ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))) a))
T c= c==> ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b1 * / ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b1 f3 * / ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b1 f3
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))) alpha)
T * / ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f3 f5
- |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))) a)
T * / ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b1 f3
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C))) (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- |- ((\beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))) beta)
T * / ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f2 f6
- |- (((!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))) ==> ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))) b)) = ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))) b))
T c= c==> ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b0 * / ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b0 f4 * / ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b0 f4
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))))))) ==> ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))))))) b)) = ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))))))) b))
T c= c==> ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f1 * / ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f1 f4 * / ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f1 f4
- |- (~ (~ T))
T c~ c~ cT
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))) /\ (((real_add B) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) C)) = (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) B)) C)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- |- ((\s. (!vv. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s))))) s)
T * / ! c==> c= * part cscs_J_v39 b0 / / cF c= cdsv_v39 b0 b1 cscs_d_v39 b0 f0
- (!s. (!vv. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s))))), ((scs_J_v39 s) = (\i. (\j. F))) |- ((!s. (!vv. (((scs_J_v39 s) = (\i. (\j. F))) ==> (((dsv_v39 s) vv) = (scs_d_v39 s))))) /\ (((dsv_v39 s) vv) = (scs_d_v39 s)))
T c==> ! ! c==> c= * part cscs_J_v39 b0 / / cF c= cdsv_v39 b0 b1 cscs_d_v39 b0 c==> c= * part cscs_J_v39 f0 / / cF c/\ ! ! c==> c= * part cscs_J_v39 b0 / / cF c= cdsv_v39 b0 b1 cscs_d_v39 b0 c= cdsv_v39 f0 f1 cscs_d_v39 f0
- |- ((\str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)) str)
T * / c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f5 f9
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_neg ((real_sub ((real_mul a) (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL _0)))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (T = (~ (a IN (GSPEC (\GEN%PVAR%7743. (?i. (?j. (((SETSPEC GEN%PVAR%7743) F) (i INSERT (j INSERT EMPTY))))))))))
T c= cT c~ cIN f0 * part cGSPEC / c? / c? / cSETSPEC b0 cF * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!f. (!s. ((FINITE s) ==> (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f))))))) ==> ((\f. (!s. ((FINITE s) ==> (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f))))))) f)) = ((\f. (!s. ((FINITE s) ==> (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f))))))) f))
T c= c==> ! ! c==> cFINITE b1 c= csum * * part cINSERT f0 b1 b0 cCOND cIN f0 b1 csum b1 b0 creal_add * b0 f0 csum b1 b0 * / ! c==> cFINITE b1 c= csum * * part cINSERT f0 b1 b0 cCOND cIN f0 b1 csum b1 b0 creal_add * b0 f0 csum b1 b0 f1 * / ! c==> cFINITE b1 c= csum * * part cINSERT f0 b1 b0 cCOND cIN f0 b1 csum b1 b0 creal_add * b0 f0 csum b1 b0 f1
- |- (((!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))) ==> ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))) b)) = ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))) b))
T c= c==> ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f2 * / ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f2 f4 * / ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f2 f4
- |- ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))))) d)
T * / ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b1 f2
- |- (((!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))) ==> ((\beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))) beta)) = ((\beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))) beta))
T c= c==> ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f4 * / ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f4 f6 * / ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f4 f6
