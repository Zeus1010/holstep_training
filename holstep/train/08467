N Hypermap.lemma_walkup_first_edge_eq
C |- (!H. (!x. (!y. (((x IN (dart H)) /\ ((~ (x IN ((edge H) y))) /\ (~ (((node_map H) x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse (edge_map H)) x) IN ((edge H) y))))))))
T c==> c/\ cIN f0 * part cdart f1 c/\ c~ cIN f0 * * part cedge f1 f2 c~ cIN cnode_map f1 f0 * * part cedge f1 f2 c/\ c= * * part cedge f1 f2 * * part cedge cedge_walkup f1 f0 f2 c~ cIN cinverse * part cedge_map f1 f0 * * part cedge f1 f2
D TRUTH
A |- T
T cT
D CONTRAPOS_THM
A |- (!t1. (!t2. (((~ t1) ==> (~ t2)) = (t2 ==> t1))))
T c= c==> c~ f0 c~ f1 c==> f1 f0
D o_THM
A |- (!f. (!g. (!x. (((f o g) x) = (f (g x))))))
T c= co f0 f1 f2 * f0 * f1 f2
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D PERMUTES_INVERSES_o
A |- (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I)))))
T c==> cpermutes f0 f1 c/\ c= * * part co f0 * part cinverse f0 part cI c= * * part co * part cinverse f0 f0 part cI
D Fan.POWER_0
A |- (!f. (((POWER f) (NUMERAL _0)) = I))
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
D Hypermap.hypermap_lemma
A |- (!H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))))
T c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
D Hypermap.edge
A |- (!H. (!x. (((edge H) x) = ((orbit_map (edge_map H)) x))))
T c= * * part cedge f0 f1 * * part corbit_map * part cedge_map f0 f1
D Hypermap.iterate_map_valuation
A |- (!p. (!n. (!x. ((p (((POWER p) n) x)) = (((POWER p) (SUC n)) x)))))
T c= * f0 cPOWER f0 f1 f2 cPOWER f0 cSUC f1 f2
D Hypermap.in_orbit_lemma
A |- (!f. (!n. (!x. (!y. ((y = (((POWER f) n) x)) ==> (y IN ((orbit_map f) x)))))))
T c==> c= f0 cPOWER f1 f2 f3 cIN f0 * * part corbit_map f1 f3
D Hypermap.orbit_sym
A |- (!s. (!p. (!x. (!y. (((FINITE s) /\ ((permutes p) s)) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x))))))))
T c==> c/\ cFINITE f0 cpermutes f1 f0 c==> cIN f2 * * part corbit_map f1 f3 cIN f3 * * part corbit_map f1 f2
D Hypermap.edge_map_walkup
A |- (!H. (!x. (!y. ((((edge_map ((edge_walkup H) x)) x) = x) /\ ((((~ (((node_map H) x) = x)) /\ (~ (((edge_map H) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((node_map H) x)) = ((edge_map H) x))) /\ ((((~ (((inverse (face_map H)) x) = x)) /\ (~ (((inverse (edge_map H)) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((inverse (edge_map H)) x)) = ((inverse (face_map H)) x))) /\ (((~ (y = x)) /\ ((~ (y = ((inverse (edge_map H)) x))) /\ (~ (y = ((node_map H) x))))) ==> (((edge_map ((edge_walkup H) x)) y) = ((edge_map H) y)))))))))
T c/\ c= cedge_map cedge_walkup f0 f1 f1 f1 c/\ c==> c/\ c~ c= cnode_map f0 f1 f1 c~ c= cedge_map f0 f1 f1 c= cedge_map cedge_walkup f0 f1 cnode_map f0 f1 cedge_map f0 f1 c/\ c==> c/\ c~ c= cinverse * part cface_map f0 f1 f1 c~ c= cinverse * part cedge_map f0 f1 f1 c= cedge_map cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 cinverse * part cface_map f0 f1 c==> c/\ c~ c= f2 f1 c/\ c~ c= f2 cinverse * part cedge_map f0 f1 c~ c= f2 cnode_map f0 f1 c= cedge_map cedge_walkup f0 f1 f2 cedge_map f0 f2
D Hypermap.lemma_orbit_identity
A |- (!s. (!p. (!x. (!y. (((FINITE s) /\ (((permutes p) s) /\ (y IN ((orbit_map p) x)))) ==> (((orbit_map p) x) = ((orbit_map p) y)))))))
T c==> c/\ cFINITE f0 c/\ cpermutes f1 f0 cIN f2 * * part corbit_map f1 f3 c= * * part corbit_map f1 f3 * * part corbit_map f1 f2
D Hypermap.lemma_inverse_in_orbit
A |- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((inverse p) x) IN ((orbit_map p) x))))))
T c==> c/\ cFINITE f0 cpermutes f1 f0 cIN cinverse f1 f2 * * part corbit_map f1 f2
D Hypermap.lemma_orbit_eq
A |- (!p. (!q. (!x. ((!n. ((((POWER p) n) x) = (((POWER q) n) x))) ==> (((orbit_map p) x) = ((orbit_map q) x))))))
T c==> ! c= cPOWER f0 b0 f1 cPOWER f2 b0 f1 c= * * part corbit_map f0 f1 * * part corbit_map f2 f1
+ (!s. (!p. (!x. (!y. (((FINITE s) /\ ((permutes p) s)) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x)))))))) |- ((\y. (((FINITE s) /\ ((permutes p) s)) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x))))) y)
T c==> ! ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c==> cIN b2 * * part corbit_map b1 b3 cIN b3 * * part corbit_map b1 b2 * / c==> c/\ cFINITE f0 cpermutes f1 f0 c==> cIN f2 * * part corbit_map f1 b0 cIN b0 * * part corbit_map f1 f2 f3
+ |- (((!x. ((I x) = x)) ==> ((\x. ((I x) = x)) x)) = ((\x. ((I x) = x)) x))
T c= c==> ! c= cI b0 b0 * / c= cI b0 b0 f0 * / c= cI b0 b0 f0
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((inverse p) x) IN ((orbit_map p) x)))))) |- ((((FINITE s) /\ ((permutes p) s)) ==> (!x. (((inverse p) x) IN ((orbit_map p) x)))) = T)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cIN cinverse b1 b2 * * part corbit_map b1 b2 c= c==> c/\ cFINITE f0 cpermutes f1 f0 ! cIN cinverse f1 b0 * * part corbit_map f1 b0 cT
- |- ((((orbit_map e) y) = ((orbit_map e') y)) ==> (((orbit_map e) y) = ((orbit_map e') y)))
T c==> c= * * part corbit_map f0 f1 * * part corbit_map f2 f1 c= * * part corbit_map f0 f1 * * part corbit_map f2 f1
+ (((inverse e) x) = (((POWER e) m) y)), ((edge_map H) = e), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (x IN ((orbit_map e) y))
T c==> c= cinverse f0 f1 cPOWER f0 f2 f3 c==> c= * part cedge_map f4 f0 c==> c= * part cdart f4 f5 c==> cpermutes * part cedge_map f4 * part cdart f4 cIN f1 * * part corbit_map f0 f3
+ (~ (x IN ((orbit_map e) y))), (~ ((n x) IN ((orbit_map e) y))), ((edge_map H) = e), ((edge_map ((edge_walkup H) x)) = e'), ((node_map H) = n), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (!m. (((((POWER e) m) y) = (((POWER e') m) y)) ==> ((((POWER e) (SUC m)) y) = (((POWER e') (SUC m)) y))))
T c==> c~ cIN f0 * * part corbit_map f1 f2 c==> c~ cIN * f3 f0 * * part corbit_map f1 f2 c==> c= * part cedge_map f4 f1 c==> c= * part cedge_map cedge_walkup f4 f0 f5 c==> c= * part cnode_map f4 f3 c==> c= * part cdart f4 f6 c==> cpermutes * part cedge_map f4 * part cdart f4 ! c==> c= cPOWER f1 b0 f2 cPOWER f5 b0 f2 c= cPOWER f1 cSUC b0 f2 cPOWER f5 cSUC b0 f2
+ |- ((\H. (!x. (!y. ((((edge_map ((edge_walkup H) x)) x) = x) /\ ((((~ (((node_map H) x) = x)) /\ (~ (((edge_map H) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((node_map H) x)) = ((edge_map H) x))) /\ ((((~ (((inverse (face_map H)) x) = x)) /\ (~ (((inverse (edge_map H)) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((inverse (edge_map H)) x)) = ((inverse (face_map H)) x))) /\ (((~ (y = x)) /\ ((~ (y = ((inverse (edge_map H)) x))) /\ (~ (y = ((node_map H) x))))) ==> (((edge_map ((edge_walkup H) x)) y) = ((edge_map H) y))))))))) H)
T * / ! ! c/\ c= cedge_map cedge_walkup b0 b1 b1 b1 c/\ c==> c/\ c~ c= cnode_map b0 b1 b1 c~ c= cedge_map b0 b1 b1 c= cedge_map cedge_walkup b0 b1 cnode_map b0 b1 cedge_map b0 b1 c/\ c==> c/\ c~ c= cinverse * part cface_map b0 b1 b1 c~ c= cinverse * part cedge_map b0 b1 b1 c= cedge_map cedge_walkup b0 b1 cinverse * part cedge_map b0 b1 cinverse * part cface_map b0 b1 c==> c/\ c~ c= b2 b1 c/\ c~ c= b2 cinverse * part cedge_map b0 b1 c~ c= b2 cnode_map b0 b1 c= cedge_map cedge_walkup b0 b1 b2 cedge_map b0 b2 f0
- ((face_map H) = f), ((dart H) = D), ((permutes (face_map H)) (dart H)) |- ((permutes f) D)
T c==> c= * part cface_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cface_map f0 * part cdart f0 cpermutes f1 f2
+ |- (((((POWER e) m) y) = x) ==> (x IN ((orbit_map e) y)))
T c==> c= cPOWER f0 f1 f2 f3 cIN f3 * * part corbit_map f0 f2
+ |- (((!x. ((!n. ((((POWER p) n) x) = (((POWER q) n) x))) ==> (((orbit_map p) x) = ((orbit_map q) x)))) ==> ((\x. ((!n. ((((POWER p) n) x) = (((POWER q) n) x))) ==> (((orbit_map p) x) = ((orbit_map q) x)))) x)) = ((\x. ((!n. ((((POWER p) n) x) = (((POWER q) n) x))) ==> (((orbit_map p) x) = ((orbit_map q) x)))) x))
T c= c==> ! c==> ! c= cPOWER f0 b1 b0 cPOWER f1 b1 b0 c= * * part corbit_map f0 b0 * * part corbit_map f1 b0 * / c==> ! c= cPOWER f0 b1 b0 cPOWER f1 b1 b0 c= * * part corbit_map f0 b0 * * part corbit_map f1 b0 f2 * / c==> ! c= cPOWER f0 b1 b0 cPOWER f1 b1 b0 c= * * part corbit_map f0 b0 * * part corbit_map f1 b0 f2
- (~ (x IN ((orbit_map e) y))) |- ((x IN ((orbit_map e) y)) = F)
T c==> c~ cIN f0 * * part corbit_map f1 f2 c= cIN f0 * * part corbit_map f1 f2 cF
+ |- (((!p. (!n. (!x. ((p (((POWER p) n) x)) = (((POWER p) (SUC n)) x))))) ==> ((\p. (!n. (!x. ((p (((POWER p) n) x)) = (((POWER p) (SUC n)) x))))) p)) = ((\p. (!n. (!x. ((p (((POWER p) n) x)) = (((POWER p) (SUC n)) x))))) p))
T c= c==> ! ! ! c= * b0 cPOWER b0 b1 b2 cPOWER b0 cSUC b1 b2 * / ! ! c= * b0 cPOWER b0 b1 b2 cPOWER b0 cSUC b1 b2 f0 * / ! ! c= * b0 cPOWER b0 b1 b2 cPOWER b0 cSUC b1 b2 f0
+ |- (((!x. ((p (((POWER p) n) x)) = (((POWER p) (SUC n)) x))) ==> ((\x. ((p (((POWER p) n) x)) = (((POWER p) (SUC n)) x))) x)) = ((\x. ((p (((POWER p) n) x)) = (((POWER p) (SUC n)) x))) x))
T c= c==> ! c= * f0 cPOWER f0 f1 b0 cPOWER f0 cSUC f1 b0 * / c= * f0 cPOWER f0 f1 b0 cPOWER f0 cSUC f1 b0 f2 * / c= * f0 cPOWER f0 f1 b0 cPOWER f0 cSUC f1 b0 f2
- ((dart H) = D), ((permutes (node_map H)) (dart H)) |- ((permutes (node_map H)) D)
T c==> c= * part cdart f0 f1 c==> cpermutes * part cnode_map f0 * part cdart f0 cpermutes * part cnode_map f0 f1
+ |- ((\q. (!x. ((!n. ((((POWER p) n) x) = (((POWER q) n) x))) ==> (((orbit_map p) x) = ((orbit_map q) x))))) q)
T * / ! c==> ! c= cPOWER f0 b2 b1 cPOWER b0 b2 b1 c= * * part corbit_map f0 b1 * * part corbit_map b0 b1 f1
+ (FINITE (dart H)), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (((x IN (dart H)) /\ ((~ (x IN ((edge H) y))) /\ (~ (((node_map H) x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse (edge_map H)) x) IN ((edge H) y)))))
T c==> cFINITE * part cdart f0 c==> c= * part cdart f0 f1 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> c/\ cIN f2 * part cdart f0 c/\ c~ cIN f2 * * part cedge f0 f3 c~ cIN cnode_map f0 f2 * * part cedge f0 f3 c/\ c= * * part cedge f0 f3 * * part cedge cedge_walkup f0 f2 f3 c~ cIN cinverse * part cedge_map f0 f2 * * part cedge f0 f3
+ |- ((((((POWER e) (NUMERAL _0)) y) = (((POWER e') (NUMERAL _0)) y)) /\ (!m. (((((POWER e) m) y) = (((POWER e') m) y)) ==> ((((POWER e) (SUC m)) y) = (((POWER e') (SUC m)) y))))) ==> (!m. ((((POWER e) m) y) = (((POWER e') m) y))))
T c==> c/\ c= cPOWER f0 cNUMERAL c_0 f1 cPOWER f2 cNUMERAL c_0 f1 ! c==> c= cPOWER f0 b0 f1 cPOWER f2 b0 f1 c= cPOWER f0 cSUC b0 f1 cPOWER f2 cSUC b0 f1 ! c= cPOWER f0 b0 f1 cPOWER f2 b0 f1
+ (FINITE (dart H)), ((dart H) = D) |- (FINITE D)
T c==> cFINITE * part cdart f0 c==> c= * part cdart f0 f1 cFINITE f1
+ ((\e'. ((edge_map ((edge_walkup H) x)) = e')) e') |- ((((edge_map ((edge_walkup H) x)) = e') ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y)))))) = (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))
T c==> * / c= * part cedge_map cedge_walkup f0 f1 b0 f2 c= c==> c= * part cedge_map cedge_walkup f0 f1 f2 c==> c/\ cIN f1 f3 c/\ c~ cIN f1 * * part cedge f0 f4 c~ cIN * f5 f1 * * part cedge f0 f4 c/\ c= * * part cedge f0 f4 * * part cedge cedge_walkup f0 f1 f4 c~ cIN cinverse f6 f1 * * part cedge f0 f4 c==> c/\ cIN f1 f3 c/\ c~ cIN f1 * * part cedge f0 f4 c~ cIN * f5 f1 * * part cedge f0 f4 c/\ c= * * part cedge f0 f4 * * part cedge cedge_walkup f0 f1 f4 c~ cIN cinverse f6 f1 * * part cedge f0 f4
+ |- ((((edge_map ((edge_walkup H) x)) x) = x) /\ ((((~ (((node_map H) x) = x)) /\ (~ (((edge_map H) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((node_map H) x)) = ((edge_map H) x))) /\ ((((~ (((inverse (face_map H)) x) = x)) /\ (~ (((inverse (edge_map H)) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((inverse (edge_map H)) x)) = ((inverse (face_map H)) x))) /\ (((~ ((((POWER e) m) y) = x)) /\ ((~ ((((POWER e) m) y) = ((inverse (edge_map H)) x))) /\ (~ ((((POWER e) m) y) = ((node_map H) x))))) ==> (((edge_map ((edge_walkup H) x)) (((POWER e) m) y)) = ((edge_map H) (((POWER e) m) y)))))))
T c/\ c= cedge_map cedge_walkup f0 f1 f1 f1 c/\ c==> c/\ c~ c= cnode_map f0 f1 f1 c~ c= cedge_map f0 f1 f1 c= cedge_map cedge_walkup f0 f1 cnode_map f0 f1 cedge_map f0 f1 c/\ c==> c/\ c~ c= cinverse * part cface_map f0 f1 f1 c~ c= cinverse * part cedge_map f0 f1 f1 c= cedge_map cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 cinverse * part cface_map f0 f1 c==> c/\ c~ c= cPOWER f2 f3 f4 f1 c/\ c~ c= cPOWER f2 f3 f4 cinverse * part cedge_map f0 f1 c~ c= cPOWER f2 f3 f4 cnode_map f0 f1 c= cedge_map cedge_walkup f0 f1 cPOWER f2 f3 f4 cedge_map f0 cPOWER f2 f3 f4
+ (FINITE (dart H)), ((edge_map H) = e), ((dart H) = D), (((inverse e) x) IN ((orbit_map e) y)), ((permutes (edge_map H)) (dart H)) |- (((orbit_map e) y) = ((orbit_map e) ((inverse e) x)))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c==> cIN cinverse f1 f3 * * part corbit_map f1 f4 c==> cpermutes * part cedge_map f0 * part cdart f0 c= * * part corbit_map f1 f4 * * part corbit_map f1 cinverse f1 f3
- |- ((((\e. ((edge_map H) = e)) e) ==> (?e. ((edge_map H) = e))) = T)
T c= c==> * / c= * part cedge_map f0 b0 f1 c? / c= * part cedge_map f0 b0 cT
+ (!s. (!p. (!x. (!y. (((FINITE s) /\ ((permutes p) s)) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x)))))))) |- ((\x. (!y. (((FINITE s) /\ ((permutes p) s)) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x)))))) x)
T c==> ! ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c==> cIN b2 * * part corbit_map b1 b3 cIN b3 * * part corbit_map b1 b2 * / ! c==> c/\ cFINITE f0 cpermutes f1 f0 c==> cIN b0 * * part corbit_map f1 b1 cIN b1 * * part corbit_map f1 b0 f2
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((inverse p) x) IN ((orbit_map p) x)))))), ((FINITE s) /\ ((permutes p) s)) |- (((FINITE s) /\ ((permutes p) s)) /\ (!x. (((inverse p) x) IN ((orbit_map p) x))))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cIN cinverse b1 b2 * * part corbit_map b1 b2 c==> c/\ cFINITE f0 cpermutes f1 f0 c/\ c/\ cFINITE f0 cpermutes f1 f0 ! cIN cinverse f1 b0 * * part corbit_map f1 b0
- ((e' (((POWER e) m) y)) = (e (((POWER e) m) y))) |- (T = ((e (((POWER e) m) y)) = (e' (((POWER e) m) y))))
T c==> c= * f0 cPOWER f1 f2 f3 * f1 cPOWER f1 f2 f3 c= cT c= * f1 cPOWER f1 f2 f3 * f0 cPOWER f1 f2 f3
+ |- ((\p. (((FINITE s) /\ ((permutes p) s)) ==> (!x. (((inverse p) x) IN ((orbit_map p) x))))) p)
T * / c==> c/\ cFINITE f0 cpermutes b0 f0 ! cIN cinverse b0 b1 * * part corbit_map b0 b1 f1
+ (FINITE (dart H)), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- ((((\e. ((edge_map H) = e)) e) ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ (((node_map H) x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse (edge_map H)) x) IN ((edge H) y)))))) = T)
T c==> cFINITE * part cdart f0 c==> c= * part cdart f0 f1 c==> cpermutes * part cedge_map f0 * part cdart f0 c= c==> * / c= * part cedge_map f0 b0 f2 c==> c/\ cIN f3 f1 c/\ c~ cIN f3 * * part cedge f0 f4 c~ cIN cnode_map f0 f3 * * part cedge f0 f4 c/\ c= * * part cedge f0 f4 * * part cedge cedge_walkup f0 f3 f4 c~ cIN cinverse * part cedge_map f0 f3 * * part cedge f0 f4 cT
+ |- ((((((POWER e) m) y) = x) ==> (x IN ((orbit_map e) y))) = ((~ (x IN ((orbit_map e) y))) ==> (~ ((((POWER e) m) y) = x))))
T c= c==> c= cPOWER f0 f1 f2 f3 cIN f3 * * part corbit_map f0 f2 c==> c~ cIN f3 * * part corbit_map f0 f2 c~ c= cPOWER f0 f1 f2 f3
+ |- (!s. (((\s. ((FINITE s) /\ ((permutes p) s))) s) ==> ((!s. (!p. (!x. (!y. (((FINITE s) /\ ((permutes p) s)) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x)))))))) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x))))))
T c==> * / c/\ cFINITE b0 cpermutes f0 b0 f1 c==> ! ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c==> cIN b2 * * part corbit_map b1 b3 cIN b3 * * part corbit_map b1 b2 c==> cIN f2 * * part corbit_map f0 f3 cIN f3 * * part corbit_map f0 f2
- (~ ((((POWER e) m) y) = (n x))) |- (~ ((n x) = (((POWER e) m) y)))
T c==> c~ c= cPOWER f0 f1 f2 * f3 f4 c~ c= * f3 f4 cPOWER f0 f1 f2
+ |- ((\s. (!p. (((FINITE s) /\ ((permutes p) s)) ==> (!x. (((inverse p) x) IN ((orbit_map p) x)))))) s)
T * / ! c==> c/\ cFINITE b0 cpermutes b1 b0 ! cIN cinverse b1 b2 * * part corbit_map b1 b2 f0
+ (FINITE (dart H)), ((edge_map H) = e), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- ((\x. (((inverse e) x) IN ((orbit_map e) x))) x)
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cedge_map f0 * part cdart f0 * / cIN cinverse f1 b0 * * part corbit_map f1 b0 f3
- ((\e. ((edge_map H) = e)) e) |- ((((edge_map H) = e) ==> (?e. ((edge_map H) = e))) = (?e. ((edge_map H) = e)))
T c==> * / c= * part cedge_map f0 b0 f1 c= c==> c= * part cedge_map f0 f1 c? / c= * part cedge_map f0 b0 c? / c= * part cedge_map f0 b0
+ (FINITE (dart H)), ((edge_map H) = e), ((edge_map ((edge_walkup H) x)) = e'), ((node_map H) = n), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (((edge_map ((edge_walkup H) x)) = e') /\ (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cedge_map cedge_walkup f0 f2 f3 c==> c= * part cnode_map f0 f4 c==> c= * part cdart f0 f5 c==> cpermutes * part cedge_map f0 * part cdart f0 c/\ c= * part cedge_map cedge_walkup f0 f2 f3 c==> c/\ cIN f2 f5 c/\ c~ cIN f2 * * part cedge f0 f6 c~ cIN * f4 f2 * * part cedge f0 f6 c/\ c= * * part cedge f0 f6 * * part cedge cedge_walkup f0 f2 f6 c~ cIN cinverse f1 f2 * * part cedge f0 f6
- ((\n. ((node_map H) = n)) n) |- (((\n. ((node_map H) = n)) n) /\ (?n. ((node_map H) = n)))
T c==> * / c= * part cnode_map f0 b0 f1 c/\ * / c= * part cnode_map f0 b0 f1 c? / c= * part cnode_map f0 b0
- |- (((!x. (((\D. ((dart H) = D)) x) ==> (?D. ((dart H) = D)))) ==> ((?D. ((dart H) = D)) ==> (?D. ((dart H) = D)))) = ((?D. ((dart H) = D)) ==> (?D. ((dart H) = D))))
T c= c==> ! c==> * / c= * part cdart f0 b1 b0 c? / c= * part cdart f0 b1 c==> c? / c= * part cdart f0 b0 c? / c= * part cdart f0 b0 c==> c? / c= * part cdart f0 b0 c? / c= * part cdart f0 b0
+ |- ((\x. (!y. ((((edge_map ((edge_walkup H) x)) x) = x) /\ ((((~ (((node_map H) x) = x)) /\ (~ (((edge_map H) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((node_map H) x)) = ((edge_map H) x))) /\ ((((~ (((inverse (face_map H)) x) = x)) /\ (~ (((inverse (edge_map H)) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((inverse (edge_map H)) x)) = ((inverse (face_map H)) x))) /\ (((~ (y = x)) /\ ((~ (y = ((inverse (edge_map H)) x))) /\ (~ (y = ((node_map H) x))))) ==> (((edge_map ((edge_walkup H) x)) y) = ((edge_map H) y)))))))) x)
T * / ! c/\ c= cedge_map cedge_walkup f0 b0 b0 b0 c/\ c==> c/\ c~ c= cnode_map f0 b0 b0 c~ c= cedge_map f0 b0 b0 c= cedge_map cedge_walkup f0 b0 cnode_map f0 b0 cedge_map f0 b0 c/\ c==> c/\ c~ c= cinverse * part cface_map f0 b0 b0 c~ c= cinverse * part cedge_map f0 b0 b0 c= cedge_map cedge_walkup f0 b0 cinverse * part cedge_map f0 b0 cinverse * part cface_map f0 b0 c==> c/\ c~ c= b1 b0 c/\ c~ c= b1 cinverse * part cedge_map f0 b0 c~ c= b1 cnode_map f0 b0 c= cedge_map cedge_walkup f0 b0 b1 cedge_map f0 b1 f1
+ ((e' (((POWER e) m) y)) = (e (((POWER e) m) y))) |- (((e' (((POWER e) m) y)) = (e (((POWER e) m) y))) /\ ((e (((POWER e) m) y)) = (e' (((POWER e) m) y))))
T c==> c= * f0 cPOWER f1 f2 f3 * f1 cPOWER f1 f2 f3 c/\ c= * f0 cPOWER f1 f2 f3 * f1 cPOWER f1 f2 f3 c= * f1 cPOWER f1 f2 f3 * f0 cPOWER f1 f2 f3
- (~ ((((POWER e) m) y) = ((inverse e) x))) |- ((((inverse e) x) = (((POWER e) m) y)) = F)
T c==> c~ c= cPOWER f0 f1 f2 cinverse f0 f3 c= c= cinverse f0 f3 cPOWER f0 f1 f2 cF
+ (~ (x IN ((orbit_map e) y))), (~ ((n x) IN ((orbit_map e) y))), ((edge_map H) = e), ((edge_map ((edge_walkup H) x)) = e'), ((node_map H) = n), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (!m. ((((POWER e) m) y) = (((POWER e') m) y)))
T c==> c~ cIN f0 * * part corbit_map f1 f2 c==> c~ cIN * f3 f0 * * part corbit_map f1 f2 c==> c= * part cedge_map f4 f1 c==> c= * part cedge_map cedge_walkup f4 f0 f5 c==> c= * part cnode_map f4 f3 c==> c= * part cdart f4 f6 c==> cpermutes * part cedge_map f4 * part cdart f4 ! c= cPOWER f1 b0 f2 cPOWER f5 b0 f2
+ ((edge_map H) = e), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- ((((inverse e) x) IN ((orbit_map e) y)) = (((permutes e) D) /\ (((inverse e) x) IN ((orbit_map e) y))))
T c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cedge_map f0 * part cdart f0 c= cIN cinverse f1 f3 * * part corbit_map f1 f4 c/\ cpermutes f1 f2 cIN cinverse f1 f3 * * part corbit_map f1 f4
+ (FINITE (dart H)), ((edge_map H) = e), ((dart H) = D), ((permutes (edge_map H)) (dart H)), ((\n. ((node_map H) = n)) n) |- (((\n. ((node_map H) = n)) n) /\ (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ (((node_map H) x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> * / c= * part cnode_map f0 b0 f3 c/\ * / c= * part cnode_map f0 b0 f3 c==> c/\ cIN f4 f2 c/\ c~ cIN f4 * * part cedge f0 f5 c~ cIN cnode_map f0 f4 * * part cedge f0 f5 c/\ c= * * part cedge f0 f5 * * part cedge cedge_walkup f0 f4 f5 c~ cIN cinverse f1 f4 * * part cedge f0 f5
+ |- (((!x. (!y. (((FINITE s) /\ (((permutes p) s) /\ (y IN ((orbit_map p) x)))) ==> (((orbit_map p) x) = ((orbit_map p) y))))) ==> ((\x. (!y. (((FINITE s) /\ (((permutes p) s) /\ (y IN ((orbit_map p) x)))) ==> (((orbit_map p) x) = ((orbit_map p) y))))) x)) = ((\x. (!y. (((FINITE s) /\ (((permutes p) s) /\ (y IN ((orbit_map p) x)))) ==> (((orbit_map p) x) = ((orbit_map p) y))))) x))
T c= c==> ! ! c==> c/\ cFINITE f0 c/\ cpermutes f1 f0 cIN b1 * * part corbit_map f1 b0 c= * * part corbit_map f1 b0 * * part corbit_map f1 b1 * / ! c==> c/\ cFINITE f0 c/\ cpermutes f1 f0 cIN b1 * * part corbit_map f1 b0 c= * * part corbit_map f1 b0 * * part corbit_map f1 b1 f2 * / ! c==> c/\ cFINITE f0 c/\ cpermutes f1 f0 cIN b1 * * part corbit_map f1 b0 c= * * part corbit_map f1 b0 * * part corbit_map f1 b1 f2
+ ((n x) = (((POWER e) m) y)) |- ((((POWER e) m) y) = (n x))
T c==> c= * f0 f1 cPOWER f2 f3 f4 c= cPOWER f2 f3 f4 * f0 f1
+ ((edge_map H) = e), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (((((POWER e) m) y) = ((inverse e) x)) ==> (x IN ((orbit_map e) y)))
T c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> c= cPOWER f1 f3 f4 cinverse f1 f5 cIN f5 * * part corbit_map f1 f4
+ (((inverse e) x) = (((POWER e) m) y)) |- ((((e ((inverse e) x)) = (e (((POWER e) m) y))) ==> (x IN ((orbit_map e) y))) = (x IN ((orbit_map e) y)))
T c==> c= cinverse f0 f1 cPOWER f0 f2 f3 c= c==> c= * f0 cinverse f0 f1 * f0 cPOWER f0 f2 f3 cIN f1 * * part corbit_map f0 f3 cIN f1 * * part corbit_map f0 f3
- |- ((?f. ((face_map H) = f)) ==> (?f. ((face_map H) = f)))
T c==> c? / c= * part cface_map f0 b0 c? / c= * part cface_map f0 b0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((\y. (!p. (!x. ((?s. ((FINITE s) /\ ((permutes p) s))) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x))))))) y)
T * / ! ! c==> c? / c/\ cFINITE b3 cpermutes b1 b3 c==> cIN b2 * * part corbit_map b1 b0 cIN b0 * * part corbit_map b1 b2 f0
+ (!s. (!p. (!x. (!y. (((FINITE s) /\ ((permutes p) s)) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x)))))))) |- ((!s. (!p. (!x. (!y. (((FINITE s) /\ ((permutes p) s)) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x)))))))) /\ (!y. (!p. (!x. ((?s. ((FINITE s) /\ ((permutes p) s))) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x))))))))
T c==> ! ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c==> cIN b2 * * part corbit_map b1 b3 cIN b3 * * part corbit_map b1 b2 c/\ ! ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c==> cIN b2 * * part corbit_map b1 b3 cIN b3 * * part corbit_map b1 b2 ! ! ! c==> c? / c/\ cFINITE b3 cpermutes b1 b3 c==> cIN b2 * * part corbit_map b1 b0 cIN b0 * * part corbit_map b1 b2
+ |- (((FINITE s) /\ ((permutes p) s)) ==> (!x. (((inverse p) x) IN ((orbit_map p) x))))
T c==> c/\ cFINITE f0 cpermutes f1 f0 ! cIN cinverse f1 b0 * * part corbit_map f1 b0
- ((edge_map H) = e) |- (((edge_map H) = e) /\ (?e. ((edge_map H) = e)))
T c==> c= * part cedge_map f0 f1 c/\ c= * part cedge_map f0 f1 c? / c= * part cedge_map f0 b0
+ |- ((\s. (!p. (!x. (!y. (((FINITE s) /\ (((permutes p) s) /\ (y IN ((orbit_map p) x)))) ==> (((orbit_map p) x) = ((orbit_map p) y))))))) s)
T * / ! ! ! c==> c/\ cFINITE b0 c/\ cpermutes b1 b0 cIN b3 * * part corbit_map b1 b2 c= * * part corbit_map b1 b2 * * part corbit_map b1 b3 f0
+ |- (((!s. (!p. (((FINITE s) /\ ((permutes p) s)) ==> (!x. (((inverse p) x) IN ((orbit_map p) x)))))) ==> ((\s. (!p. (((FINITE s) /\ ((permutes p) s)) ==> (!x. (((inverse p) x) IN ((orbit_map p) x)))))) s)) = ((\s. (!p. (((FINITE s) /\ ((permutes p) s)) ==> (!x. (((inverse p) x) IN ((orbit_map p) x)))))) s))
T c= c==> ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 ! cIN cinverse b1 b2 * * part corbit_map b1 b2 * / ! c==> c/\ cFINITE b0 cpermutes b1 b0 ! cIN cinverse b1 b2 * * part corbit_map b1 b2 f0 * / ! c==> c/\ cFINITE b0 cpermutes b1 b0 ! cIN cinverse b1 b2 * * part corbit_map b1 b2 f0
+ |- (((!y. (!p. (!x. ((?s. ((FINITE s) /\ ((permutes p) s))) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x))))))) ==> ((\y. (!p. (!x. ((?s. ((FINITE s) /\ ((permutes p) s))) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x))))))) y)) = ((\y. (!p. (!x. ((?s. ((FINITE s) /\ ((permutes p) s))) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x))))))) y))
T c= c==> ! ! ! c==> c? / c/\ cFINITE b3 cpermutes b1 b3 c==> cIN b2 * * part corbit_map b1 b0 cIN b0 * * part corbit_map b1 b2 * / ! ! c==> c? / c/\ cFINITE b3 cpermutes b1 b3 c==> cIN b2 * * part corbit_map b1 b0 cIN b0 * * part corbit_map b1 b2 f0 * / ! ! c==> c? / c/\ cFINITE b3 cpermutes b1 b3 c==> cIN b2 * * part corbit_map b1 b0 cIN b0 * * part corbit_map b1 b2 f0
- ((\f. ((face_map H) = f)) f) |- ((((face_map H) = f) ==> (?f. ((face_map H) = f))) = (?f. ((face_map H) = f)))
T c==> * / c= * part cface_map f0 b0 f1 c= c==> c= * part cface_map f0 f1 c? / c= * part cface_map f0 b0 c? / c= * part cface_map f0 b0
+ (FINITE (dart H)), ((edge_map H) = e), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (((!x. (((inverse e) x) IN ((orbit_map e) x))) ==> ((\x. (((inverse e) x) IN ((orbit_map e) x))) x)) = ((\x. (((inverse e) x) IN ((orbit_map e) x))) x))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cedge_map f0 * part cdart f0 c= c==> ! cIN cinverse f1 b0 * * part corbit_map f1 b0 * / cIN cinverse f1 b0 * * part corbit_map f1 b0 f3 * / cIN cinverse f1 b0 * * part corbit_map f1 b0 f3
+ ((((POWER e) m) y) = (((POWER e') m) y)) |- ((((POWER e') m) y) = (((POWER e) m) y))
T c==> c= cPOWER f0 f1 f2 cPOWER f3 f1 f2 c= cPOWER f3 f1 f2 cPOWER f0 f1 f2
+ |- (?D. ((dart H) = D))
T c? / c= * part cdart f0 b0
+ (FINITE (dart H)), ((dart H) = D) |- (((permutes e) D) = ((FINITE D) /\ ((permutes e) D)))
T c==> cFINITE * part cdart f0 c==> c= * part cdart f0 f1 c= cpermutes f2 f1 c/\ cFINITE f1 cpermutes f2 f1
+ |- ((\n. (!x. (!y. ((y = (((POWER f) n) x)) ==> (y IN ((orbit_map f) x)))))) n)
T * / ! ! c==> c= b2 cPOWER f0 b0 b1 cIN b2 * * part corbit_map f0 b1 f1
+ |- ((\t2. (((~ t1) ==> (~ t2)) = (t2 ==> t1))) t2)
T * / c= c==> c~ f0 c~ b0 c==> b0 f0 f1
- |- ((((\e'. ((edge_map ((edge_walkup H) x)) = e')) e') ==> (?e'. ((edge_map ((edge_walkup H) x)) = e'))) = T)
T c= c==> * / c= * part cedge_map cedge_walkup f0 f1 b0 f2 c? / c= * part cedge_map cedge_walkup f0 f1 b0 cT
+ (FINITE (dart H)), ((edge_map H) = e), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ (((node_map H) x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse (edge_map H)) x) IN ((edge H) y)))))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> c/\ cIN f3 f2 c/\ c~ cIN f3 * * part cedge f0 f4 c~ cIN cnode_map f0 f3 * * part cedge f0 f4 c/\ c= * * part cedge f0 f4 * * part cedge cedge_walkup f0 f3 f4 c~ cIN cinverse * part cedge_map f0 f3 * * part cedge f0 f4
- |- ((\f. ((face_map H) = f)) (face_map H))
T * / c= * part cface_map f0 b0 * part cface_map f0
+ |- ((((x IN D) /\ ((~ (x IN ((orbit_map (edge_map H)) y))) /\ (~ ((n x) IN ((orbit_map (edge_map H)) y))))) ==> ((((orbit_map (edge_map H)) y) = ((orbit_map (edge_map ((edge_walkup H) x))) y)) /\ (~ (((inverse e) x) IN ((orbit_map (edge_map H)) y))))) = (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))
T c= c==> c/\ cIN f0 f1 c/\ c~ cIN f0 * * part corbit_map * part cedge_map f2 f3 c~ cIN * f4 f0 * * part corbit_map * part cedge_map f2 f3 c/\ c= * * part corbit_map * part cedge_map f2 f3 * * part corbit_map * part cedge_map cedge_walkup f2 f0 f3 c~ cIN cinverse f5 f0 * * part corbit_map * part cedge_map f2 f3 c==> c/\ cIN f0 f1 c/\ c~ cIN f0 * * part cedge f2 f3 c~ cIN * f4 f0 * * part cedge f2 f3 c/\ c= * * part cedge f2 f3 * * part cedge cedge_walkup f2 f0 f3 c~ cIN cinverse f5 f0 * * part cedge f2 f3
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- ((\t1. (!t2. (((~ t1) ==> (~ t2)) = (t2 ==> t1)))) t1)
T * / ! c= c==> c~ b0 c~ b1 c==> b1 b0 f0
- |- (!n. (((\n. ((node_map H) = n)) n) ==> (?n. ((node_map H) = n))))
T c==> * / c= * part cnode_map f0 b0 f1 c? / c= * part cnode_map f0 b0
+ (FINITE (dart H)), ((edge_map H) = e), ((edge_map ((edge_walkup H) x)) = e'), ((node_map H) = n), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (((x IN D) /\ ((~ (x IN ((orbit_map (edge_map H)) y))) /\ (~ ((n x) IN ((orbit_map (edge_map H)) y))))) ==> ((((orbit_map (edge_map H)) y) = ((orbit_map (edge_map ((edge_walkup H) x))) y)) /\ (~ (((inverse e) x) IN ((orbit_map (edge_map H)) y)))))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cedge_map cedge_walkup f0 f2 f3 c==> c= * part cnode_map f0 f4 c==> c= * part cdart f0 f5 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> c/\ cIN f2 f5 c/\ c~ cIN f2 * * part corbit_map * part cedge_map f0 f6 c~ cIN * f4 f2 * * part corbit_map * part cedge_map f0 f6 c/\ c= * * part corbit_map * part cedge_map f0 f6 * * part corbit_map * part cedge_map cedge_walkup f0 f2 f6 c~ cIN cinverse f1 f2 * * part corbit_map * part cedge_map f0 f6
- |- (T = ((((orbit_map e) y) = ((orbit_map e') y)) ==> (((orbit_map e) y) = ((orbit_map e') y))))
T c= cT c==> c= * * part corbit_map f0 f1 * * part corbit_map f2 f1 c= * * part corbit_map f0 f1 * * part corbit_map f2 f1
+ (FINITE (dart H)), ((edge_map H) = e), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- ((((inverse e) x) IN ((orbit_map e) y)) ==> (x IN ((orbit_map e) y)))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cIN cinverse f1 f3 * * part corbit_map f1 f4 cIN f3 * * part corbit_map f1 f4
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((inverse p) x) IN ((orbit_map p) x)))))) |- ((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((inverse p) x) IN ((orbit_map p) x)))))) /\ (!s. (!p. (((FINITE s) /\ ((permutes p) s)) ==> (!x. (((inverse p) x) IN ((orbit_map p) x)))))))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cIN cinverse b1 b2 * * part corbit_map b1 b2 c/\ ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cIN cinverse b1 b2 * * part corbit_map b1 b2 ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 ! cIN cinverse b1 b2 * * part corbit_map b1 b2
+ |- ((\x. ((f (g x)) = ((f o g) x))) x)
T * / c= * f0 * f1 b0 co f0 f1 b0 f2
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((inverse p) x) IN ((orbit_map p) x)))))) |- ((\x. (((FINITE s) /\ ((permutes p) s)) ==> (((inverse p) x) IN ((orbit_map p) x)))) x)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cIN cinverse b1 b2 * * part corbit_map b1 b2 * / c==> c/\ cFINITE f0 cpermutes f1 f0 cIN cinverse f1 b0 * * part corbit_map f1 b0 f2
+ |- (((!H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) ==> ((\H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) H)) = ((\H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) H))
T c= c==> ! c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI * / c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI f0 * / c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI f0
- ((face_map H) = f) |- (((face_map H) = f) /\ (?f. ((face_map H) = f)))
T c==> c= * part cface_map f0 f1 c/\ c= * part cface_map f0 f1 c? / c= * part cface_map f0 b0
+ |- (((!n. (!x. ((((POWER p) (SUC n)) x) = (p (((POWER p) n) x))))) ==> ((\n. (!x. ((((POWER p) (SUC n)) x) = (p (((POWER p) n) x))))) n)) = ((\n. (!x. ((((POWER p) (SUC n)) x) = (p (((POWER p) n) x))))) n))
T c= c==> ! ! c= cPOWER f0 cSUC b0 b1 * f0 cPOWER f0 b0 b1 * / ! c= cPOWER f0 cSUC b0 b1 * f0 cPOWER f0 b0 b1 f1 * / ! c= cPOWER f0 cSUC b0 b1 * f0 cPOWER f0 b0 b1 f1
- |- (((?D'. ((dart ((edge_walkup H) x)) = D')) ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y)))))) = (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))
T c= c==> c? / c= * part cdart cedge_walkup f0 f1 b0 c==> c/\ cIN f1 f2 c/\ c~ cIN f1 * * part cedge f0 f3 c~ cIN * f4 f1 * * part cedge f0 f3 c/\ c= * * part cedge f0 f3 * * part cedge cedge_walkup f0 f1 f3 c~ cIN cinverse f5 f1 * * part cedge f0 f3 c==> c/\ cIN f1 f2 c/\ c~ cIN f1 * * part cedge f0 f3 c~ cIN * f4 f1 * * part cedge f0 f3 c/\ c= * * part cedge f0 f3 * * part cedge cedge_walkup f0 f1 f3 c~ cIN cinverse f5 f1 * * part cedge f0 f3
+ |- (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))
T c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
- |- (!e'. (((\e'. ((edge_map ((edge_walkup H) x)) = e')) e') ==> (?e'. ((edge_map ((edge_walkup H) x)) = e'))))
T c==> * / c= * part cedge_map cedge_walkup f0 f1 b0 f2 c? / c= * part cedge_map cedge_walkup f0 f1 b0
+ (((inverse e) x) = (((POWER e) m) y)) |- ((((POWER e) m) y) = ((inverse e) x))
T c==> c= cinverse f0 f1 cPOWER f0 f2 f3 c= cPOWER f0 f2 f3 cinverse f0 f1
- ((\f. ((face_map H) = f)) f) |- ((((face_map H) = f) ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y)))))) = (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))
T c==> * / c= * part cface_map f0 b0 f1 c= c==> c= * part cface_map f0 f1 c==> c/\ cIN f2 f3 c/\ c~ cIN f2 * * part cedge f0 f4 c~ cIN * f5 f2 * * part cedge f0 f4 c/\ c= * * part cedge f0 f4 * * part cedge cedge_walkup f0 f2 f4 c~ cIN cinverse f6 f2 * * part cedge f0 f4 c==> c/\ cIN f2 f3 c/\ c~ cIN f2 * * part cedge f0 f4 c~ cIN * f5 f2 * * part cedge f0 f4 c/\ c= * * part cedge f0 f4 * * part cedge cedge_walkup f0 f2 f4 c~ cIN cinverse f6 f2 * * part cedge f0 f4
- |- (((dart ((edge_walkup H) x)) = D') ==> (?D'. ((dart ((edge_walkup H) x)) = D')))
T c==> c= * part cdart cedge_walkup f0 f1 f2 c? / c= * part cdart cedge_walkup f0 f1 b0
+ |- (((!x. ((?s. ((FINITE s) /\ ((permutes p) s))) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x))))) ==> ((\x. ((?s. ((FINITE s) /\ ((permutes p) s))) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x))))) x)) = ((\x. ((?s. ((FINITE s) /\ ((permutes p) s))) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x))))) x))
T c= c==> ! c==> c? / c/\ cFINITE b1 cpermutes f0 b1 c==> cIN b0 * * part corbit_map f0 f1 cIN f1 * * part corbit_map f0 b0 * / c==> c? / c/\ cFINITE b1 cpermutes f0 b1 c==> cIN b0 * * part corbit_map f0 f1 cIN f1 * * part corbit_map f0 b0 f2 * / c==> c? / c/\ cFINITE b1 cpermutes f0 b1 c==> cIN b0 * * part corbit_map f0 f1 cIN f1 * * part corbit_map f0 b0 f2
+ (FINITE (dart H)), ((edge_map H) = e), ((node_map H) = n), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (((edge_map ((edge_walkup H) x)) = e') ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cdart f0 f3 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> c= * part cedge_map cedge_walkup f0 f4 f5 c==> c/\ cIN f4 f3 c/\ c~ cIN f4 * * part cedge f0 f6 c~ cIN * f2 f4 * * part cedge f0 f6 c/\ c= * * part cedge f0 f6 * * part cedge cedge_walkup f0 f4 f6 c~ cIN cinverse f1 f4 * * part cedge f0 f6
+ (FINITE (dart H)), ((edge_map H) = e), ((dart H) = D), (((inverse e) x) IN ((orbit_map e) y)), ((permutes (edge_map H)) (dart H)) |- (x IN ((orbit_map e) y))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c==> cIN cinverse f1 f3 * * part corbit_map f1 f4 c==> cpermutes * part cedge_map f0 * part cdart f0 cIN f3 * * part corbit_map f1 f4
- (x IN D) |- ((x IN D) = T)
T c==> cIN f0 f1 c= cIN f0 f1 cT
+ |- (((dart H) = (dart H)) = ((\D. ((dart H) = D)) (dart H)))
T c= c= * part cdart f0 * part cdart f0 * / c= * part cdart f0 b0 * part cdart f0
+ ((edge_map H) = e), ((dart H) = D), (((inverse e) x) IN ((orbit_map e) y)), ((permutes (edge_map H)) (dart H)) |- (((permutes e) D) /\ (((inverse e) x) IN ((orbit_map e) y)))
T c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c==> cIN cinverse f1 f3 * * part corbit_map f1 f4 c==> cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes f1 f2 cIN cinverse f1 f3 * * part corbit_map f1 f4
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((inverse p) x) IN ((orbit_map p) x)))))) |- ((\s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((inverse p) x) IN ((orbit_map p) x)))))) s)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cIN cinverse b1 b2 * * part corbit_map b1 b2 * / ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cIN cinverse b1 b2 * * part corbit_map b1 b2 f0
+ |- ((!s. (!p. (!x. (!y. (((FINITE s) /\ ((permutes p) s)) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x)))))))) ==> (!y. (!p. (!x. ((?s. ((FINITE s) /\ ((permutes p) s))) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x))))))))
T c==> ! ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c==> cIN b2 * * part corbit_map b1 b3 cIN b3 * * part corbit_map b1 b2 ! ! ! c==> c? / c/\ cFINITE b3 cpermutes b1 b3 c==> cIN b2 * * part corbit_map b1 b0 cIN b0 * * part corbit_map b1 b2
+ |- (((!s. (!p. (!x. (!y. (((FINITE s) /\ (((permutes p) s) /\ (y IN ((orbit_map p) x)))) ==> (((orbit_map p) x) = ((orbit_map p) y))))))) ==> ((\s. (!p. (!x. (!y. (((FINITE s) /\ (((permutes p) s) /\ (y IN ((orbit_map p) x)))) ==> (((orbit_map p) x) = ((orbit_map p) y))))))) s)) = ((\s. (!p. (!x. (!y. (((FINITE s) /\ (((permutes p) s) /\ (y IN ((orbit_map p) x)))) ==> (((orbit_map p) x) = ((orbit_map p) y))))))) s))
T c= c==> ! ! ! ! c==> c/\ cFINITE b0 c/\ cpermutes b1 b0 cIN b3 * * part corbit_map b1 b2 c= * * part corbit_map b1 b2 * * part corbit_map b1 b3 * / ! ! ! c==> c/\ cFINITE b0 c/\ cpermutes b1 b0 cIN b3 * * part corbit_map b1 b2 c= * * part corbit_map b1 b2 * * part corbit_map b1 b3 f0 * / ! ! ! c==> c/\ cFINITE b0 c/\ cpermutes b1 b0 cIN b3 * * part corbit_map b1 b2 c= * * part corbit_map b1 b2 * * part corbit_map b1 b3 f0
- (FINITE (dart H)), ((edge_map H) = e), ((node_map H) = n), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (((dart ((edge_walkup H) x)) = D') ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cdart f0 f3 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> c= * part cdart cedge_walkup f0 f4 f5 c==> c/\ cIN f4 f3 c/\ c~ cIN f4 * * part cedge f0 f6 c~ cIN * f2 f4 * * part cedge f0 f6 c/\ c= * * part cedge f0 f6 * * part cedge cedge_walkup f0 f4 f6 c~ cIN cinverse f1 f4 * * part cedge f0 f6
- (FINITE (dart H)), ((edge_map H) = e), ((node_map H) = n), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (!f. (((\f. ((face_map H) = f)) f) ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y)))))))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cdart f0 f3 c==> cpermutes * part cedge_map f0 * part cdart f0 ! c==> * / c= * part cface_map f0 b1 b0 c==> c/\ cIN f4 f3 c/\ c~ cIN f4 * * part cedge f0 f5 c~ cIN * f2 f4 * * part cedge f0 f5 c/\ c= * * part cedge f0 f5 * * part cedge cedge_walkup f0 f4 f5 c~ cIN cinverse f1 f4 * * part cedge f0 f5
+ (~ (x IN ((orbit_map e) y))), (FINITE (dart H)), ((edge_map H) = e), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (~ (((inverse e) x) IN ((orbit_map e) y)))
T c==> c~ cIN f0 * * part corbit_map f1 f2 c==> cFINITE * part cdart f3 c==> c= * part cedge_map f3 f1 c==> c= * part cdart f3 f4 c==> cpermutes * part cedge_map f3 * part cdart f3 c~ cIN cinverse f1 f0 * * part corbit_map f1 f2
+ (!s. (!p. (!x. (!y. (((FINITE s) /\ ((permutes p) s)) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x)))))))) |- (((?s. ((FINITE s) /\ ((permutes p) s))) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x)))) = T)
T c==> ! ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c==> cIN b2 * * part corbit_map b1 b3 cIN b3 * * part corbit_map b1 b2 c= c==> c? / c/\ cFINITE b0 cpermutes f0 b0 c==> cIN f1 * * part corbit_map f0 f2 cIN f2 * * part corbit_map f0 f1 cT
+ ((((POWER e) m) y) = x) |- (x = (((POWER e) m) y))
T c==> c= cPOWER f0 f1 f2 f3 c= f3 cPOWER f0 f1 f2
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((inverse p) x) IN ((orbit_map p) x)))))) |- ((\p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((inverse p) x) IN ((orbit_map p) x))))) p)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cIN cinverse b1 b2 * * part corbit_map b1 b2 * / ! c==> c/\ cFINITE f0 cpermutes b0 f0 cIN cinverse b0 b1 * * part corbit_map b0 b1 f1
+ (FINITE (dart H)), ((permutes (edge_map H)) (dart H)) |- (((!x. (((\D. ((dart H) = D)) x) ==> (((x IN (dart H)) /\ ((~ (x IN ((edge H) y))) /\ (~ (((node_map H) x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse (edge_map H)) x) IN ((edge H) y))))))) ==> ((?D. ((dart H) = D)) ==> (((x IN (dart H)) /\ ((~ (x IN ((edge H) y))) /\ (~ (((node_map H) x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse (edge_map H)) x) IN ((edge H) y))))))) = ((?D. ((dart H) = D)) ==> (((x IN (dart H)) /\ ((~ (x IN ((edge H) y))) /\ (~ (((node_map H) x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse (edge_map H)) x) IN ((edge H) y)))))))
T c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c= c==> ! c==> * / c= * part cdart f0 b1 b0 c==> c/\ cIN f1 * part cdart f0 c/\ c~ cIN f1 * * part cedge f0 f2 c~ cIN cnode_map f0 f1 * * part cedge f0 f2 c/\ c= * * part cedge f0 f2 * * part cedge cedge_walkup f0 f1 f2 c~ cIN cinverse * part cedge_map f0 f1 * * part cedge f0 f2 c==> c? / c= * part cdart f0 b0 c==> c/\ cIN f1 * part cdart f0 c/\ c~ cIN f1 * * part cedge f0 f2 c~ cIN cnode_map f0 f1 * * part cedge f0 f2 c/\ c= * * part cedge f0 f2 * * part cedge cedge_walkup f0 f1 f2 c~ cIN cinverse * part cedge_map f0 f1 * * part cedge f0 f2 c==> c? / c= * part cdart f0 b0 c==> c/\ cIN f1 * part cdart f0 c/\ c~ cIN f1 * * part cedge f0 f2 c~ cIN cnode_map f0 f1 * * part cedge f0 f2 c/\ c= * * part cedge f0 f2 * * part cedge cedge_walkup f0 f1 f2 c~ cIN cinverse * part cedge_map f0 f1 * * part cedge f0 f2
+ (FINITE (dart H)), ((edge_map H) = e), ((node_map H) = n), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (((\e'. ((edge_map ((edge_walkup H) x)) = e')) e') ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cdart f0 f3 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> * / c= * part cedge_map cedge_walkup f0 f4 b0 f5 c==> c/\ cIN f4 f3 c/\ c~ cIN f4 * * part cedge f0 f6 c~ cIN * f2 f4 * * part cedge f0 f6 c/\ c= * * part cedge f0 f6 * * part cedge cedge_walkup f0 f4 f6 c~ cIN cinverse f1 f4 * * part cedge f0 f6
- (~ ((((POWER e) m) y) = x)) |- (((~ (x = (((POWER e) m) y))) ==> ((x = (((POWER e) m) y)) = F)) = ((x = (((POWER e) m) y)) = F))
T c==> c~ c= cPOWER f0 f1 f2 f3 c= c==> c~ c= f3 cPOWER f0 f1 f2 c= c= f3 cPOWER f0 f1 f2 cF c= c= f3 cPOWER f0 f1 f2 cF
+ (FINITE (dart H)), ((edge_map H) = e), ((node_map H) = n), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ (((node_map H) x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y)))))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cdart f0 f3 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> c/\ cIN f4 f3 c/\ c~ cIN f4 * * part cedge f0 f5 c~ cIN cnode_map f0 f4 * * part cedge f0 f5 c/\ c= * * part cedge f0 f5 * * part cedge cedge_walkup f0 f4 f5 c~ cIN cinverse f1 f4 * * part cedge f0 f5
+ (FINITE (dart H)), ((edge_map H) = e), ((dart H) = D), (((inverse e) x) IN ((orbit_map e) y)), ((permutes (edge_map H)) (dart H)) |- ((((inverse e) x) IN ((orbit_map e) y)) /\ (x IN ((orbit_map e) y)))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c==> cIN cinverse f1 f3 * * part corbit_map f1 f4 c==> cpermutes * part cedge_map f0 * part cdart f0 c/\ cIN cinverse f1 f3 * * part corbit_map f1 f4 cIN f3 * * part corbit_map f1 f4
+ |- ((\x. ((p (((POWER p) n) x)) = (((POWER p) (SUC n)) x))) x)
T * / c= * f0 cPOWER f0 f1 b0 cPOWER f0 cSUC f1 b0 f2
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ ((\e. ((edge_map H) = e)) e) |- ((((edge_map H) = e) ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ (((node_map H) x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse (edge_map H)) x) IN ((edge H) y)))))) = (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ (((node_map H) x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse (edge_map H)) x) IN ((edge H) y))))))
T c==> * / c= * part cedge_map f0 b0 f1 c= c==> c= * part cedge_map f0 f1 c==> c/\ cIN f2 f3 c/\ c~ cIN f2 * * part cedge f0 f4 c~ cIN cnode_map f0 f2 * * part cedge f0 f4 c/\ c= * * part cedge f0 f4 * * part cedge cedge_walkup f0 f2 f4 c~ cIN cinverse * part cedge_map f0 f2 * * part cedge f0 f4 c==> c/\ cIN f2 f3 c/\ c~ cIN f2 * * part cedge f0 f4 c~ cIN cnode_map f0 f2 * * part cedge f0 f4 c/\ c= * * part cedge f0 f4 * * part cedge cedge_walkup f0 f2 f4 c~ cIN cinverse * part cedge_map f0 f2 * * part cedge f0 f4
+ (FINITE (dart H)), ((permutes (edge_map H)) (dart H)) |- (((\D. ((dart H) = D)) D) ==> (((x IN (dart H)) /\ ((~ (x IN ((edge H) y))) /\ (~ (((node_map H) x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse (edge_map H)) x) IN ((edge H) y))))))
T c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> * / c= * part cdart f0 b0 f1 c==> c/\ cIN f2 * part cdart f0 c/\ c~ cIN f2 * * part cedge f0 f3 c~ cIN cnode_map f0 f2 * * part cedge f0 f3 c/\ c= * * part cedge f0 f3 * * part cedge cedge_walkup f0 f2 f3 c~ cIN cinverse * part cedge_map f0 f2 * * part cedge f0 f3
+ |- ((\x. ((I x) = x)) x)
T * / c= cI b0 b0 f0
- (~ ((((POWER e) m) y) = (n x))) |- (((~ ((n x) = (((POWER e) m) y))) ==> (((n x) = (((POWER e) m) y)) = F)) = (((n x) = (((POWER e) m) y)) = F))
T c==> c~ c= cPOWER f0 f1 f2 * f3 f4 c= c==> c~ c= * f3 f4 cPOWER f0 f1 f2 c= c= * f3 f4 cPOWER f0 f1 f2 cF c= c= * f3 f4 cPOWER f0 f1 f2 cF
+ |- (((!t1. (!t2. (((~ t1) ==> (~ t2)) = (t2 ==> t1)))) ==> ((\t1. (!t2. (((~ t1) ==> (~ t2)) = (t2 ==> t1)))) t1)) = ((\t1. (!t2. (((~ t1) ==> (~ t2)) = (t2 ==> t1)))) t1))
T c= c==> ! ! c= c==> c~ b0 c~ b1 c==> b1 b0 * / ! c= c==> c~ b0 c~ b1 c==> b1 b0 f0 * / ! c= c==> c~ b0 c~ b1 c==> b1 b0 f0
+ (FINITE (dart H)), ((edge_map H) = e), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (((!x. (((\n. ((node_map H) = n)) x) ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ (((node_map H) x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))) ==> ((?n. ((node_map H) = n)) ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ (((node_map H) x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))) = ((?n. ((node_map H) = n)) ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ (((node_map H) x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y)))))))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cedge_map f0 * part cdart f0 c= c==> ! c==> * / c= * part cnode_map f0 b1 b0 c==> c/\ cIN f3 f2 c/\ c~ cIN f3 * * part cedge f0 f4 c~ cIN cnode_map f0 f3 * * part cedge f0 f4 c/\ c= * * part cedge f0 f4 * * part cedge cedge_walkup f0 f3 f4 c~ cIN cinverse f1 f3 * * part cedge f0 f4 c==> c? / c= * part cnode_map f0 b0 c==> c/\ cIN f3 f2 c/\ c~ cIN f3 * * part cedge f0 f4 c~ cIN cnode_map f0 f3 * * part cedge f0 f4 c/\ c= * * part cedge f0 f4 * * part cedge cedge_walkup f0 f3 f4 c~ cIN cinverse f1 f3 * * part cedge f0 f4 c==> c? / c= * part cnode_map f0 b0 c==> c/\ cIN f3 f2 c/\ c~ cIN f3 * * part cedge f0 f4 c~ cIN cnode_map f0 f3 * * part cedge f0 f4 c/\ c= * * part cedge f0 f4 * * part cedge cedge_walkup f0 f3 f4 c~ cIN cinverse f1 f3 * * part cedge f0 f4
- |- (?D'. ((dart ((edge_walkup H) x)) = D'))
T c? / c= * part cdart cedge_walkup f0 f1 b0
- ((node_map H) = n), ((dart H) = D), ((permutes (node_map H)) (dart H)) |- ((permutes n) D)
T c==> c= * part cnode_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cnode_map f0 * part cdart f0 cpermutes f1 f2
+ (FINITE (dart H)), ((edge_map H) = e), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (((inverse e) x) IN ((orbit_map e) x))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cedge_map f0 * part cdart f0 cIN cinverse f1 f3 * * part corbit_map f1 f3
+ |- (((!f. (!g. (!x. ((f (g x)) = ((f o g) x))))) ==> ((\f. (!g. (!x. ((f (g x)) = ((f o g) x))))) f)) = ((\f. (!g. (!x. ((f (g x)) = ((f o g) x))))) f))
T c= c==> ! ! ! c= * b0 * b1 b2 co b0 b1 b2 * / ! ! c= * b0 * b1 b2 co b0 b1 b2 f0 * / ! ! c= * b0 * b1 b2 co b0 b1 b2 f0
+ (FINITE (dart H)), ((edge_map H) = e), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- ((~ (x IN ((orbit_map e) y))) ==> (~ (((inverse e) x) IN ((orbit_map e) y))))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> c~ cIN f3 * * part corbit_map f1 f4 c~ cIN cinverse f1 f3 * * part corbit_map f1 f4
- |- (((face_map H) = (face_map H)) = ((\f. ((face_map H) = f)) (face_map H)))
T c= c= * part cface_map f0 * part cface_map f0 * / c= * part cface_map f0 b0 * part cface_map f0
- |- (((dart ((edge_walkup H) x)) = D') = ((\D'. ((dart ((edge_walkup H) x)) = D')) D'))
T c= c= * part cdart cedge_walkup f0 f1 f2 * / c= * part cdart cedge_walkup f0 f1 b0 f2
+ |- (FINITE (dart H))
T cFINITE * part cdart f0
+ |- (((!t2. (((~ t1) ==> (~ t2)) = (t2 ==> t1))) ==> ((\t2. (((~ t1) ==> (~ t2)) = (t2 ==> t1))) t2)) = ((\t2. (((~ t1) ==> (~ t2)) = (t2 ==> t1))) t2))
T c= c==> ! c= c==> c~ f0 c~ b0 c==> b0 f0 * / c= c==> c~ f0 c~ b0 c==> b0 f0 f1 * / c= c==> c~ f0 c~ b0 c==> b0 f0 f1
+ |- (T = ((((POWER e) (NUMERAL _0)) y) = (((POWER e') (NUMERAL _0)) y)))
T c= cT c= cPOWER f0 cNUMERAL c_0 f1 cPOWER f2 cNUMERAL c_0 f1
- ((dart ((edge_walkup H) x)) = D') |- (((dart ((edge_walkup H) x)) = D') /\ (?D'. ((dart ((edge_walkup H) x)) = D')))
T c==> c= * part cdart cedge_walkup f0 f1 f2 c/\ c= * part cdart cedge_walkup f0 f1 f2 c? / c= * part cdart cedge_walkup f0 f1 b0
- |- (((face_map H) = f) = ((\f. ((face_map H) = f)) f))
T c= c= * part cface_map f0 f1 * / c= * part cface_map f0 b0 f1
- |- (((node_map H) = n) ==> (?n. ((node_map H) = n)))
T c==> c= * part cnode_map f0 f1 c? / c= * part cnode_map f0 b0
+ (FINITE (dart H)), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (!e. (((\e. ((edge_map H) = e)) e) ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ (((node_map H) x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse (edge_map H)) x) IN ((edge H) y)))))))
T c==> cFINITE * part cdart f0 c==> c= * part cdart f0 f1 c==> cpermutes * part cedge_map f0 * part cdart f0 ! c==> * / c= * part cedge_map f0 b1 b0 c==> c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cedge f0 f3 c~ cIN cnode_map f0 f2 * * part cedge f0 f3 c/\ c= * * part cedge f0 f3 * * part cedge cedge_walkup f0 f2 f3 c~ cIN cinverse * part cedge_map f0 f2 * * part cedge f0 f3
- (!m. ((((POWER e) m) y) = (((POWER e') m) y))) |- (((((orbit_map e) y) = ((orbit_map e') y)) ==> (((orbit_map e) y) = ((orbit_map e') y))) = (((orbit_map e) y) = ((orbit_map e') y)))
T c==> ! c= cPOWER f0 b0 f1 cPOWER f2 b0 f1 c= c==> c= * * part corbit_map f0 f1 * * part corbit_map f2 f1 c= * * part corbit_map f0 f1 * * part corbit_map f2 f1 c= * * part corbit_map f0 f1 * * part corbit_map f2 f1
- |- ((\D'. ((dart ((edge_walkup H) x)) = D')) (dart ((edge_walkup H) x)))
T * / c= * part cdart cedge_walkup f0 f1 b0 * part cdart cedge_walkup f0 f1
- ((edge_map H) = e), ((node_map H) = n), (((edge_map H) o ((node_map H) o (face_map H))) = I) |- ((e o (n o (face_map H))) = I)
T c==> c= * part cedge_map f0 f1 c==> c= * part cnode_map f0 f2 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= * * part co f1 * * part co f2 * part cface_map f0 part cI
- |- ((?D'. ((dart ((edge_walkup H) x)) = D')) ==> (?D'. ((dart ((edge_walkup H) x)) = D')))
T c==> c? / c= * part cdart cedge_walkup f0 f1 b0 c? / c= * part cdart cedge_walkup f0 f1 b0
+ ((p (((POWER p) n) x)) = (((POWER p) (SUC n)) x)) |- ((((POWER p) (SUC n)) x) = (p (((POWER p) n) x)))
T c==> c= * f0 cPOWER f0 f1 f2 cPOWER f0 cSUC f1 f2 c= cPOWER f0 cSUC f1 f2 * f0 cPOWER f0 f1 f2
- |- (((dart H) = D) ==> (?D. ((dart H) = D)))
T c==> c= * part cdart f0 f1 c? / c= * part cdart f0 b0
- |- (?f. ((face_map H) = f))
T c? / c= * part cface_map f0 b0
- ((edge_map ((edge_walkup H) x)) = e') |- ((\e'. ((edge_map ((edge_walkup H) x)) = e')) e')
T c==> c= * part cedge_map cedge_walkup f0 f1 f2 * / c= * part cedge_map cedge_walkup f0 f1 b0 f2
- |- ((?D. ((dart H) = D)) ==> (?D. ((dart H) = D)))
T c==> c? / c= * part cdart f0 b0 c? / c= * part cdart f0 b0
+ |- (((((inverse e) x) IN ((orbit_map e) y)) ==> (x IN ((orbit_map e) y))) = ((~ (x IN ((orbit_map e) y))) ==> (~ (((inverse e) x) IN ((orbit_map e) y)))))
T c= c==> cIN cinverse f0 f1 * * part corbit_map f0 f2 cIN f1 * * part corbit_map f0 f2 c==> c~ cIN f1 * * part corbit_map f0 f2 c~ cIN cinverse f0 f1 * * part corbit_map f0 f2
+ |- (((!f. (((POWER f) (NUMERAL _0)) = I)) ==> ((\f. (((POWER f) (NUMERAL _0)) = I)) f)) = ((\f. (((POWER f) (NUMERAL _0)) = I)) f))
T c= c==> ! c= * * part cPOWER b0 cNUMERAL c_0 part cI * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0 * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0
+ (!s. (!p. (!x. (!y. (((FINITE s) /\ ((permutes p) s)) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x)))))))) |- (!p. (!x. (!y. (((FINITE s) /\ ((permutes p) s)) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x)))))))
T c==> ! ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c==> cIN b2 * * part corbit_map b1 b3 cIN b3 * * part corbit_map b1 b2 ! ! ! c==> c/\ cFINITE f0 cpermutes b0 f0 c==> cIN b1 * * part corbit_map b0 b2 cIN b2 * * part corbit_map b0 b1
- (FINITE (dart H)), ((edge_map H) = e), ((node_map H) = n), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (((\D'. ((dart ((edge_walkup H) x)) = D')) D') ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cdart f0 f3 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> * / c= * part cdart cedge_walkup f0 f4 b0 f5 c==> c/\ cIN f4 f3 c/\ c~ cIN f4 * * part cedge f0 f6 c~ cIN * f2 f4 * * part cedge f0 f6 c/\ c= * * part cedge f0 f6 * * part cedge cedge_walkup f0 f4 f6 c~ cIN cinverse f1 f4 * * part cedge f0 f6
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((inverse p) x) IN ((orbit_map p) x)))))), ((FINITE s) /\ ((permutes p) s)) |- (((inverse p) x) IN ((orbit_map p) x))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cIN cinverse b1 b2 * * part corbit_map b1 b2 c==> c/\ cFINITE f0 cpermutes f1 f0 cIN cinverse f1 f2 * * part corbit_map f1 f2
+ |- ((((~ (((inverse (face_map H)) x) = x)) /\ (~ (((inverse (edge_map H)) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((inverse (edge_map H)) x)) = ((inverse (face_map H)) x))) /\ (((~ ((((POWER e) m) y) = x)) /\ ((~ ((((POWER e) m) y) = ((inverse (edge_map H)) x))) /\ (~ ((((POWER e) m) y) = ((node_map H) x))))) ==> (((edge_map ((edge_walkup H) x)) (((POWER e) m) y)) = ((edge_map H) (((POWER e) m) y)))))
T c/\ c==> c/\ c~ c= cinverse * part cface_map f0 f1 f1 c~ c= cinverse * part cedge_map f0 f1 f1 c= cedge_map cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 cinverse * part cface_map f0 f1 c==> c/\ c~ c= cPOWER f2 f3 f4 f1 c/\ c~ c= cPOWER f2 f3 f4 cinverse * part cedge_map f0 f1 c~ c= cPOWER f2 f3 f4 cnode_map f0 f1 c= cedge_map cedge_walkup f0 f1 cPOWER f2 f3 f4 cedge_map f0 cPOWER f2 f3 f4
+ (!s. (!p. (!x. (!y. (((FINITE s) /\ ((permutes p) s)) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x)))))))) |- ((!p. (!x. ((?s. ((FINITE s) /\ ((permutes p) s))) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x)))))) = T)
T c==> ! ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c==> cIN b2 * * part corbit_map b1 b3 cIN b3 * * part corbit_map b1 b2 c= ! ! c==> c? / c/\ cFINITE b2 cpermutes b0 b2 c==> cIN b1 * * part corbit_map b0 f0 cIN f0 * * part corbit_map b0 b1 cT
+ (FINITE (dart H)), ((edge_map H) = e), ((edge_map ((edge_walkup H) x)) = e'), ((node_map H) = n), ((dart H) = D), ((~ (x IN ((orbit_map e) y))) /\ (~ ((n x) IN ((orbit_map e) y)))), ((permutes (edge_map H)) (dart H)) |- ((((orbit_map e) y) = ((orbit_map e') y)) /\ (~ (((inverse e) x) IN ((orbit_map e) y))))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cedge_map cedge_walkup f0 f2 f3 c==> c= * part cnode_map f0 f4 c==> c= * part cdart f0 f5 c==> c/\ c~ cIN f2 * * part corbit_map f1 f6 c~ cIN * f4 f2 * * part corbit_map f1 f6 c==> cpermutes * part cedge_map f0 * part cdart f0 c/\ c= * * part corbit_map f1 f6 * * part corbit_map f3 f6 c~ cIN cinverse f1 f2 * * part corbit_map f1 f6
- |- ((((\D. ((dart H) = D)) D) ==> (?D. ((dart H) = D))) = T)
T c= c==> * / c= * part cdart f0 b0 f1 c? / c= * part cdart f0 b0 cT
- (FINITE (dart H)), ((edge_map H) = e), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (T = ((FINITE D) /\ ((permutes e) D)))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cedge_map f0 * part cdart f0 c= cT c/\ cFINITE f2 cpermutes f1 f2
- (FINITE (dart H)), ((edge_map H) = e), ((node_map H) = n), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- ((?D'. ((dart ((edge_walkup H) x)) = D')) ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cdart f0 f3 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> c? / c= * part cdart cedge_walkup f0 f4 b0 c==> c/\ cIN f4 f3 c/\ c~ cIN f4 * * part cedge f0 f5 c~ cIN * f2 f4 * * part cedge f0 f5 c/\ c= * * part cedge f0 f5 * * part cedge cedge_walkup f0 f4 f5 c~ cIN cinverse f1 f4 * * part cedge f0 f5
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((inverse p) x) IN ((orbit_map p) x)))))) |- ((!p. (((FINITE s) /\ ((permutes p) s)) ==> (!x. (((inverse p) x) IN ((orbit_map p) x))))) = T)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cIN cinverse b1 b2 * * part corbit_map b1 b2 c= ! c==> c/\ cFINITE f0 cpermutes b0 f0 ! cIN cinverse b0 b1 * * part corbit_map b0 b1 cT
+ |- (((?e. ((edge_map H) = e)) ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ (((node_map H) x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse (edge_map H)) x) IN ((edge H) y)))))) = (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ (((node_map H) x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse (edge_map H)) x) IN ((edge H) y))))))
T c= c==> c? / c= * part cedge_map f0 b0 c==> c/\ cIN f1 f2 c/\ c~ cIN f1 * * part cedge f0 f3 c~ cIN cnode_map f0 f1 * * part cedge f0 f3 c/\ c= * * part cedge f0 f3 * * part cedge cedge_walkup f0 f1 f3 c~ cIN cinverse * part cedge_map f0 f1 * * part cedge f0 f3 c==> c/\ cIN f1 f2 c/\ c~ cIN f1 * * part cedge f0 f3 c~ cIN cnode_map f0 f1 * * part cedge f0 f3 c/\ c= * * part cedge f0 f3 * * part cedge cedge_walkup f0 f1 f3 c~ cIN cinverse * part cedge_map f0 f1 * * part cedge f0 f3
+ (FINITE (dart H)), ((edge_map H) = e), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- ((FINITE D) /\ ((permutes e) D))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cedge_map f0 * part cdart f0 c/\ cFINITE f2 cpermutes f1 f2
+ |- (T = ((x = (((POWER e) m) y)) ==> (x IN ((orbit_map e) y))))
T c= cT c==> c= f0 cPOWER f1 f2 f3 cIN f0 * * part corbit_map f1 f3
+ |- ((\g. (!x. ((f (g x)) = ((f o g) x)))) g)
T * / ! c= * f0 * b0 b1 co f0 b0 b1 f1
- ((\D'. ((dart ((edge_walkup H) x)) = D')) D') |- ((((dart ((edge_walkup H) x)) = D') ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y)))))) = (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))
T c==> * / c= * part cdart cedge_walkup f0 f1 b0 f2 c= c==> c= * part cdart cedge_walkup f0 f1 f2 c==> c/\ cIN f1 f3 c/\ c~ cIN f1 * * part cedge f0 f4 c~ cIN * f5 f1 * * part cedge f0 f4 c/\ c= * * part cedge f0 f4 * * part cedge cedge_walkup f0 f1 f4 c~ cIN cinverse f6 f1 * * part cedge f0 f4 c==> c/\ cIN f1 f3 c/\ c~ cIN f1 * * part cedge f0 f4 c~ cIN * f5 f1 * * part cedge f0 f4 c/\ c= * * part cedge f0 f4 * * part cedge cedge_walkup f0 f1 f4 c~ cIN cinverse f6 f1 * * part cedge f0 f4
- ((node_map H) = n), ((dart H) = D), ((permutes (node_map H)) (dart H)) |- (((permutes n) D) = T)
T c==> c= * part cnode_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cnode_map f0 * part cdart f0 c= cpermutes f1 f2 cT
+ ((edge_map H) = e), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (((e ((inverse e) x)) = (e (((POWER e) m) y))) ==> (x IN ((orbit_map e) y)))
T c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> c= * f1 cinverse f1 f3 * f1 cPOWER f1 f4 f5 cIN f3 * * part corbit_map f1 f5
+ |- ((\p. (!x. (!y. (((FINITE s) /\ (((permutes p) s) /\ (y IN ((orbit_map p) x)))) ==> (((orbit_map p) x) = ((orbit_map p) y)))))) p)
T * / ! ! c==> c/\ cFINITE f0 c/\ cpermutes b0 f0 cIN b2 * * part corbit_map b0 b1 c= * * part corbit_map b0 b1 * * part corbit_map b0 b2 f1
+ ((edge_map H) = e), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- ((((permutes e) D) ==> (((e o (inverse e)) = I) /\ (((inverse e) o e) = I))) = (((e o (inverse e)) = I) /\ (((inverse e) o e) = I)))
T c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cedge_map f0 * part cdart f0 c= c==> cpermutes f1 f2 c/\ c= * * part co f1 * part cinverse f1 part cI c= * * part co * part cinverse f1 f1 part cI c/\ c= * * part co f1 * part cinverse f1 part cI c= * * part co * part cinverse f1 f1 part cI
- ((edge_map H) = e), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (((inverse e) o e) = I)
T c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cedge_map f0 * part cdart f0 c= * * part co * part cinverse f1 f1 part cI
+ |- (((edge_map ((edge_walkup H) x)) = (edge_map ((edge_walkup H) x))) = ((\e'. ((edge_map ((edge_walkup H) x)) = e')) (edge_map ((edge_walkup H) x))))
T c= c= * part cedge_map cedge_walkup f0 f1 * part cedge_map cedge_walkup f0 f1 * / c= * part cedge_map cedge_walkup f0 f1 b0 * part cedge_map cedge_walkup f0 f1
+ (FINITE (dart H)), ((edge_map H) = e), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (((node_map H) = n) ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ (((node_map H) x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> c= * part cnode_map f0 f3 c==> c/\ cIN f4 f2 c/\ c~ cIN f4 * * part cedge f0 f5 c~ cIN cnode_map f0 f4 * * part cedge f0 f5 c/\ c= * * part cedge f0 f5 * * part cedge cedge_walkup f0 f4 f5 c~ cIN cinverse f1 f4 * * part cedge f0 f5
+ ((f (g x)) = ((f o g) x)) |- (((f o g) x) = (f (g x)))
T c==> c= * f0 * f1 f2 co f0 f1 f2 c= co f0 f1 f2 * f0 * f1 f2
- ((\e'. ((edge_map ((edge_walkup H) x)) = e')) e') |- (((\e'. ((edge_map ((edge_walkup H) x)) = e')) e') /\ (?e'. ((edge_map ((edge_walkup H) x)) = e')))
T c==> * / c= * part cedge_map cedge_walkup f0 f1 b0 f2 c/\ * / c= * part cedge_map cedge_walkup f0 f1 b0 f2 c? / c= * part cedge_map cedge_walkup f0 f1 b0
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((inverse p) x) IN ((orbit_map p) x)))))) |- (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((inverse p) x) IN ((orbit_map p) x))))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cIN cinverse b1 b2 * * part corbit_map b1 b2 ! c==> c/\ cFINITE f0 cpermutes f1 f0 cIN cinverse f1 b0 * * part corbit_map f1 b0
+ |- (?e'. ((edge_map ((edge_walkup H) x)) = e'))
T c? / c= * part cedge_map cedge_walkup f0 f1 b0
+ (FINITE (dart H)), ((permutes (edge_map H)) (dart H)) |- (!D. (((\D. ((dart H) = D)) D) ==> (((x IN (dart H)) /\ ((~ (x IN ((edge H) y))) /\ (~ (((node_map H) x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse (edge_map H)) x) IN ((edge H) y)))))))
T c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 ! c==> * / c= * part cdart f0 b1 b0 c==> c/\ cIN f1 * part cdart f0 c/\ c~ cIN f1 * * part cedge f0 f2 c~ cIN cnode_map f0 f1 * * part cedge f0 f2 c/\ c= * * part cedge f0 f2 * * part cedge cedge_walkup f0 f1 f2 c~ cIN cinverse * part cedge_map f0 f1 * * part cedge f0 f2
- ((dart ((edge_walkup H) x)) = D') |- ((\D'. ((dart ((edge_walkup H) x)) = D')) D')
T c==> c= * part cdart cedge_walkup f0 f1 f2 * / c= * part cdart cedge_walkup f0 f1 b0 f2
+ (FINITE (dart H)), ((edge_map H) = e), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (!x. (((inverse e) x) IN ((orbit_map e) x)))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cedge_map f0 * part cdart f0 ! cIN cinverse f1 b0 * * part corbit_map f1 b0
+ ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- ((permutes (edge_map H)) D)
T c==> c= * part cdart f0 f1 c==> cpermutes * part cedge_map f0 * part cdart f0 cpermutes * part cedge_map f0 f1
+ |- (((!x. (!y. ((((edge_map ((edge_walkup H) x)) x) = x) /\ ((((~ (((node_map H) x) = x)) /\ (~ (((edge_map H) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((node_map H) x)) = ((edge_map H) x))) /\ ((((~ (((inverse (face_map H)) x) = x)) /\ (~ (((inverse (edge_map H)) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((inverse (edge_map H)) x)) = ((inverse (face_map H)) x))) /\ (((~ (y = x)) /\ ((~ (y = ((inverse (edge_map H)) x))) /\ (~ (y = ((node_map H) x))))) ==> (((edge_map ((edge_walkup H) x)) y) = ((edge_map H) y)))))))) ==> ((\x. (!y. ((((edge_map ((edge_walkup H) x)) x) = x) /\ ((((~ (((node_map H) x) = x)) /\ (~ (((edge_map H) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((node_map H) x)) = ((edge_map H) x))) /\ ((((~ (((inverse (face_map H)) x) = x)) /\ (~ (((inverse (edge_map H)) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((inverse (edge_map H)) x)) = ((inverse (face_map H)) x))) /\ (((~ (y = x)) /\ ((~ (y = ((inverse (edge_map H)) x))) /\ (~ (y = ((node_map H) x))))) ==> (((edge_map ((edge_walkup H) x)) y) = ((edge_map H) y)))))))) x)) = ((\x. (!y. ((((edge_map ((edge_walkup H) x)) x) = x) /\ ((((~ (((node_map H) x) = x)) /\ (~ (((edge_map H) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((node_map H) x)) = ((edge_map H) x))) /\ ((((~ (((inverse (face_map H)) x) = x)) /\ (~ (((inverse (edge_map H)) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((inverse (edge_map H)) x)) = ((inverse (face_map H)) x))) /\ (((~ (y = x)) /\ ((~ (y = ((inverse (edge_map H)) x))) /\ (~ (y = ((node_map H) x))))) ==> (((edge_map ((edge_walkup H) x)) y) = ((edge_map H) y)))))))) x))
T c= c==> ! ! c/\ c= cedge_map cedge_walkup f0 b0 b0 b0 c/\ c==> c/\ c~ c= cnode_map f0 b0 b0 c~ c= cedge_map f0 b0 b0 c= cedge_map cedge_walkup f0 b0 cnode_map f0 b0 cedge_map f0 b0 c/\ c==> c/\ c~ c= cinverse * part cface_map f0 b0 b0 c~ c= cinverse * part cedge_map f0 b0 b0 c= cedge_map cedge_walkup f0 b0 cinverse * part cedge_map f0 b0 cinverse * part cface_map f0 b0 c==> c/\ c~ c= b1 b0 c/\ c~ c= b1 cinverse * part cedge_map f0 b0 c~ c= b1 cnode_map f0 b0 c= cedge_map cedge_walkup f0 b0 b1 cedge_map f0 b1 * / ! c/\ c= cedge_map cedge_walkup f0 b0 b0 b0 c/\ c==> c/\ c~ c= cnode_map f0 b0 b0 c~ c= cedge_map f0 b0 b0 c= cedge_map cedge_walkup f0 b0 cnode_map f0 b0 cedge_map f0 b0 c/\ c==> c/\ c~ c= cinverse * part cface_map f0 b0 b0 c~ c= cinverse * part cedge_map f0 b0 b0 c= cedge_map cedge_walkup f0 b0 cinverse * part cedge_map f0 b0 cinverse * part cface_map f0 b0 c==> c/\ c~ c= b1 b0 c/\ c~ c= b1 cinverse * part cedge_map f0 b0 c~ c= b1 cnode_map f0 b0 c= cedge_map cedge_walkup f0 b0 b1 cedge_map f0 b1 f1 * / ! c/\ c= cedge_map cedge_walkup f0 b0 b0 b0 c/\ c==> c/\ c~ c= cnode_map f0 b0 b0 c~ c= cedge_map f0 b0 b0 c= cedge_map cedge_walkup f0 b0 cnode_map f0 b0 cedge_map f0 b0 c/\ c==> c/\ c~ c= cinverse * part cface_map f0 b0 b0 c~ c= cinverse * part cedge_map f0 b0 b0 c= cedge_map cedge_walkup f0 b0 cinverse * part cedge_map f0 b0 cinverse * part cface_map f0 b0 c==> c/\ c~ c= b1 b0 c/\ c~ c= b1 cinverse * part cedge_map f0 b0 c~ c= b1 cnode_map f0 b0 c= cedge_map cedge_walkup f0 b0 b1 cedge_map f0 b1 f1
- (FINITE (dart H)), ((edge_map H) = e), ((node_map H) = n), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), ((permutes (edge_map H)) (dart H)) |- (((dart ((edge_walkup H) x)) = D') /\ (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cdart f0 f3 c==> c= * part cdart cedge_walkup f0 f4 f5 c==> cpermutes * part cedge_map f0 * part cdart f0 c/\ c= * part cdart cedge_walkup f0 f4 f5 c==> c/\ cIN f4 f3 c/\ c~ cIN f4 * * part cedge f0 f6 c~ cIN * f2 f4 * * part cedge f0 f6 c/\ c= * * part cedge f0 f6 * * part cedge cedge_walkup f0 f4 f6 c~ cIN cinverse f1 f4 * * part cedge f0 f6
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((inverse p) x) IN ((orbit_map p) x)))))) |- (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((inverse p) x) IN ((orbit_map p) x)))))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cIN cinverse b1 b2 * * part corbit_map b1 b2 ! ! c==> c/\ cFINITE f0 cpermutes b0 f0 cIN cinverse b0 b1 * * part corbit_map b0 b1
+ |- ((\D. ((dart H) = D)) (dart H))
T * / c= * part cdart f0 b0 * part cdart f0
+ |- (((?n. ((node_map H) = n)) ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ (((node_map H) x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y)))))) = (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ (((node_map H) x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))
T c= c==> c? / c= * part cnode_map f0 b0 c==> c/\ cIN f1 f2 c/\ c~ cIN f1 * * part cedge f0 f3 c~ cIN cnode_map f0 f1 * * part cedge f0 f3 c/\ c= * * part cedge f0 f3 * * part cedge cedge_walkup f0 f1 f3 c~ cIN cinverse f4 f1 * * part cedge f0 f3 c==> c/\ cIN f1 f2 c/\ c~ cIN f1 * * part cedge f0 f3 c~ cIN cnode_map f0 f1 * * part cedge f0 f3 c/\ c= * * part cedge f0 f3 * * part cedge cedge_walkup f0 f1 f3 c~ cIN cinverse f4 f1 * * part cedge f0 f3
+ |- ((((((POWER e) m) y) = (n x)) ==> ((n x) IN ((orbit_map e) y))) = ((~ ((n x) IN ((orbit_map e) y))) ==> (~ ((((POWER e) m) y) = (n x)))))
T c= c==> c= cPOWER f0 f1 f2 * f3 f4 cIN * f3 f4 * * part corbit_map f0 f2 c==> c~ cIN * f3 f4 * * part corbit_map f0 f2 c~ c= cPOWER f0 f1 f2 * f3 f4
+ (~ ((((POWER e) m) y) = ((inverse e) x))) |- (((((POWER e) m) y) = ((inverse e) x)) = F)
T c==> c~ c= cPOWER f0 f1 f2 cinverse f0 f3 c= c= cPOWER f0 f1 f2 cinverse f0 f3 cF
+ (!s. (!p. (!x. (!y. (((FINITE s) /\ ((permutes p) s)) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x)))))))) |- ((\s. (!p. (!x. (!y. (((FINITE s) /\ ((permutes p) s)) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x)))))))) s)
T c==> ! ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c==> cIN b2 * * part corbit_map b1 b3 cIN b3 * * part corbit_map b1 b2 * / ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c==> cIN b2 * * part corbit_map b1 b3 cIN b3 * * part corbit_map b1 b2 f0
+ ((\s. ((FINITE s) /\ ((permutes p) s))) s) |- ((((FINITE s) /\ ((permutes p) s)) ==> ((!s. (!p. (!x. (!y. (((FINITE s) /\ ((permutes p) s)) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x)))))))) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x))))) = ((!s. (!p. (!x. (!y. (((FINITE s) /\ ((permutes p) s)) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x)))))))) ==> ((x IN ((orbit_map p) y)) ==> (y IN ((orbit_map p) x)))))
T c==> * / c/\ cFINITE b0 cpermutes f0 b0 f1 c= c==> c/\ cFINITE f1 cpermutes f0 f1 c==> ! ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c==> cIN b2 * * part corbit_map b1 b3 cIN b3 * * part corbit_map b1 b2 c==> cIN f2 * * part corbit_map f0 f3 cIN f3 * * part corbit_map f0 f2 c==> ! ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c==> cIN b2 * * part corbit_map b1 b3 cIN b3 * * part corbit_map b1 b2 c==> cIN f2 * * part corbit_map f0 f3 cIN f3 * * part corbit_map f0 f2
+ |- ((\H. (!x. (((edge H) x) = ((orbit_map (edge_map H)) x)))) H)
T * / ! c= * * part cedge b0 b1 * * part corbit_map * part cedge_map b0 b1 f0
- |- (((dart ((edge_walkup H) x)) = (dart ((edge_walkup H) x))) = ((\D'. ((dart ((edge_walkup H) x)) = D')) (dart ((edge_walkup H) x))))
T c= c= * part cdart cedge_walkup f0 f1 * part cdart cedge_walkup f0 f1 * / c= * part cdart cedge_walkup f0 f1 b0 * part cdart cedge_walkup f0 f1
- (~ ((((POWER e) m) y) = x)) |- ((x = (((POWER e) m) y)) = F)
T c==> c~ c= cPOWER f0 f1 f2 f3 c= c= f3 cPOWER f0 f1 f2 cF
- (FINITE (dart H)), ((edge_map H) = e), ((node_map H) = n), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (!D'. (((\D'. ((dart ((edge_walkup H) x)) = D')) D') ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y)))))))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cdart f0 f3 c==> cpermutes * part cedge_map f0 * part cdart f0 ! c==> * / c= * part cdart cedge_walkup f0 f4 b1 b0 c==> c/\ cIN f4 f3 c/\ c~ cIN f4 * * part cedge f0 f5 c~ cIN * f2 f4 * * part cedge f0 f5 c/\ c= * * part cedge f0 f5 * * part cedge cedge_walkup f0 f4 f5 c~ cIN cinverse f1 f4 * * part cedge f0 f5
- |- (((!x. (((\D'. ((dart ((edge_walkup H) x)) = D')) x) ==> (?D'. ((dart ((edge_walkup H) x)) = D')))) ==> ((?D'. ((dart ((edge_walkup H) x)) = D')) ==> (?D'. ((dart ((edge_walkup H) x)) = D')))) = ((?D'. ((dart ((edge_walkup H) x)) = D')) ==> (?D'. ((dart ((edge_walkup H) x)) = D'))))
T c= c==> ! c==> * / c= * part cdart cedge_walkup f0 f1 b1 b0 c? / c= * part cdart cedge_walkup f0 f1 b1 c==> c? / c= * part cdart cedge_walkup f0 f1 b0 c? / c= * part cdart cedge_walkup f0 f1 b0 c==> c? / c= * part cdart cedge_walkup f0 f1 b0 c? / c= * part cdart cedge_walkup f0 f1 b0
- (~ ((((POWER e) m) y) = (n x))) |- (((n x) = (((POWER e) m) y)) = F)
T c==> c~ c= cPOWER f0 f1 f2 * f3 f4 c= c= * f3 f4 cPOWER f0 f1 f2 cF
- ((edge_map H) = e), (((edge_map H) o ((node_map H) o (face_map H))) = I) |- ((e o ((node_map H) o (face_map H))) = I)
T c==> c= * part cedge_map f0 f1 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= * * part co f1 * * part co * part cnode_map f0 * part cface_map f0 part cI
- (FINITE (dart H)), ((edge_map H) = e), ((node_map H) = n), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- ((?f. ((face_map H) = f)) ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cdart f0 f3 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> c? / c= * part cface_map f0 b0 c==> c/\ cIN f4 f3 c/\ c~ cIN f4 * * part cedge f0 f5 c~ cIN * f2 f4 * * part cedge f0 f5 c/\ c= * * part cedge f0 f5 * * part cedge cedge_walkup f0 f4 f5 c~ cIN cinverse f1 f4 * * part cedge f0 f5
- |- ((?n. ((node_map H) = n)) ==> (?n. ((node_map H) = n)))
T c==> c? / c= * part cnode_map f0 b0 c? / c= * part cnode_map f0 b0
- (~ ((n x) IN ((orbit_map e) y))) |- (((n x) IN ((orbit_map e) y)) = F)
T c==> c~ cIN * f0 f1 * * part corbit_map f2 f3 c= cIN * f0 f1 * * part corbit_map f2 f3 cF
- |- (!e. (((\e. ((edge_map H) = e)) e) ==> (?e. ((edge_map H) = e))))
T c==> * / c= * part cedge_map f0 b0 f1 c? / c= * part cedge_map f0 b0
- (~ ((((POWER e) m) y) = ((inverse e) x))) |- (~ (((inverse e) x) = (((POWER e) m) y)))
T c==> c~ c= cPOWER f0 f1 f2 cinverse f0 f3 c~ c= cinverse f0 f3 cPOWER f0 f1 f2
- |- (((dart H) = D) = ((\D. ((dart H) = D)) D))
T c= c= * part cdart f0 f1 * / c= * part cdart f0 b0 f1
- (FINITE (dart H)), ((edge_map H) = e), ((node_map H) = n), ((face_map H) = f), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (((face_map H) = f) /\ (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cface_map f0 f3 c==> c= * part cdart f0 f4 c==> cpermutes * part cedge_map f0 * part cdart f0 c/\ c= * part cface_map f0 f3 c==> c/\ cIN f5 f4 c/\ c~ cIN f5 * * part cedge f0 f6 c~ cIN * f2 f5 * * part cedge f0 f6 c/\ c= * * part cedge f0 f6 * * part cedge cedge_walkup f0 f5 f6 c~ cIN cinverse f1 f5 * * part cedge f0 f6
- ((\D'. ((dart ((edge_walkup H) x)) = D')) D') |- (((\D'. ((dart ((edge_walkup H) x)) = D')) D') /\ (?D'. ((dart ((edge_walkup H) x)) = D')))
T c==> * / c= * part cdart cedge_walkup f0 f1 b0 f2 c/\ * / c= * part cdart cedge_walkup f0 f1 b0 f2 c? / c= * part cdart cedge_walkup f0 f1 b0
- ((\n. ((node_map H) = n)) n) |- ((((node_map H) = n) ==> (?n. ((node_map H) = n))) = (?n. ((node_map H) = n)))
T c==> * / c= * part cnode_map f0 b0 f1 c= c==> c= * part cnode_map f0 f1 c? / c= * part cnode_map f0 b0 c? / c= * part cnode_map f0 b0
- (FINITE (dart H)), ((edge_map H) = e), ((node_map H) = n), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- ((((\f. ((face_map H) = f)) f) ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y)))))) = T)
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cdart f0 f3 c==> cpermutes * part cedge_map f0 * part cdart f0 c= c==> * / c= * part cface_map f0 b0 f4 c==> c/\ cIN f5 f3 c/\ c~ cIN f5 * * part cedge f0 f6 c~ cIN * f2 f5 * * part cedge f0 f6 c/\ c= * * part cedge f0 f6 * * part cedge cedge_walkup f0 f5 f6 c~ cIN cinverse f1 f5 * * part cedge f0 f6 cT
- |- (((edge_map ((edge_walkup H) x)) = e') ==> (?e'. ((edge_map ((edge_walkup H) x)) = e')))
T c==> c= * part cedge_map cedge_walkup f0 f1 f2 c? / c= * part cedge_map cedge_walkup f0 f1 b0
- |- (((?f. ((face_map H) = f)) ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y)))))) = (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))
T c= c==> c? / c= * part cface_map f0 b0 c==> c/\ cIN f1 f2 c/\ c~ cIN f1 * * part cedge f0 f3 c~ cIN * f4 f1 * * part cedge f0 f3 c/\ c= * * part cedge f0 f3 * * part cedge cedge_walkup f0 f1 f3 c~ cIN cinverse f5 f1 * * part cedge f0 f3 c==> c/\ cIN f1 f2 c/\ c~ cIN f1 * * part cedge f0 f3 c~ cIN * f4 f1 * * part cedge f0 f3 c/\ c= * * part cedge f0 f3 * * part cedge cedge_walkup f0 f1 f3 c~ cIN cinverse f5 f1 * * part cedge f0 f3
- ((\D'. ((dart ((edge_walkup H) x)) = D')) D') |- ((((dart ((edge_walkup H) x)) = D') ==> (?D'. ((dart ((edge_walkup H) x)) = D'))) = (?D'. ((dart ((edge_walkup H) x)) = D')))
T c==> * / c= * part cdart cedge_walkup f0 f1 b0 f2 c= c==> c= * part cdart cedge_walkup f0 f1 f2 c? / c= * part cdart cedge_walkup f0 f1 b0 c? / c= * part cdart cedge_walkup f0 f1 b0
- |- (((edge_map ((edge_walkup H) x)) = e') = ((\e'. ((edge_map ((edge_walkup H) x)) = e')) e'))
T c= c= * part cedge_map cedge_walkup f0 f1 f2 * / c= * part cedge_map cedge_walkup f0 f1 b0 f2
- ((\e'. ((edge_map ((edge_walkup H) x)) = e')) e') |- ((((edge_map ((edge_walkup H) x)) = e') ==> (?e'. ((edge_map ((edge_walkup H) x)) = e'))) = (?e'. ((edge_map ((edge_walkup H) x)) = e')))
T c==> * / c= * part cedge_map cedge_walkup f0 f1 b0 f2 c= c==> c= * part cedge_map cedge_walkup f0 f1 f2 c? / c= * part cedge_map cedge_walkup f0 f1 b0 c? / c= * part cedge_map cedge_walkup f0 f1 b0
- (!m. ((((POWER e) m) y) = (((POWER e') m) y))) |- ((\m. ((((POWER e) m) y) = (((POWER e') m) y))) m)
T c==> ! c= cPOWER f0 b0 f1 cPOWER f2 b0 f1 * / c= cPOWER f0 b0 f1 cPOWER f2 b0 f1 f3
- |- (!f. (((\f. ((face_map H) = f)) f) ==> (?f. ((face_map H) = f))))
T c==> * / c= * part cface_map f0 b0 f1 c? / c= * part cface_map f0 b0
- ((\f. ((face_map H) = f)) f) |- (((\f. ((face_map H) = f)) f) /\ (?f. ((face_map H) = f)))
T c==> * / c= * part cface_map f0 b0 f1 c/\ * / c= * part cface_map f0 b0 f1 c? / c= * part cface_map f0 b0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- ((dart H) = D) |- (((dart H) = D) /\ (?D. ((dart H) = D)))
T c==> c= * part cdart f0 f1 c/\ c= * part cdart f0 f1 c? / c= * part cdart f0 b0
- |- ((?e. ((edge_map H) = e)) ==> (?e. ((edge_map H) = e)))
T c==> c? / c= * part cedge_map f0 b0 c? / c= * part cedge_map f0 b0
- (FINITE (dart H)), ((edge_map H) = e), ((node_map H) = n), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- ((((\D'. ((dart ((edge_walkup H) x)) = D')) D') ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y)))))) = T)
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cdart f0 f3 c==> cpermutes * part cedge_map f0 * part cdart f0 c= c==> * / c= * part cdart cedge_walkup f0 f4 b0 f5 c==> c/\ cIN f4 f3 c/\ c~ cIN f4 * * part cedge f0 f6 c~ cIN * f2 f4 * * part cedge f0 f6 c/\ c= * * part cedge f0 f6 * * part cedge cedge_walkup f0 f4 f6 c~ cIN cinverse f1 f4 * * part cedge f0 f6 cT
- |- (((!x. (((\f. ((face_map H) = f)) x) ==> (?f. ((face_map H) = f)))) ==> ((?f. ((face_map H) = f)) ==> (?f. ((face_map H) = f)))) = ((?f. ((face_map H) = f)) ==> (?f. ((face_map H) = f))))
T c= c==> ! c==> * / c= * part cface_map f0 b1 b0 c? / c= * part cface_map f0 b1 c==> c? / c= * part cface_map f0 b0 c? / c= * part cface_map f0 b0 c==> c? / c= * part cface_map f0 b0 c? / c= * part cface_map f0 b0
- |- ((?e'. ((edge_map ((edge_walkup H) x)) = e')) ==> (?e'. ((edge_map ((edge_walkup H) x)) = e')))
T c==> c? / c= * part cedge_map cedge_walkup f0 f1 b0 c? / c= * part cedge_map cedge_walkup f0 f1 b0
- |- (((!x. (((\e. ((edge_map H) = e)) x) ==> (?e. ((edge_map H) = e)))) ==> ((?e. ((edge_map H) = e)) ==> (?e. ((edge_map H) = e)))) = ((?e. ((edge_map H) = e)) ==> (?e. ((edge_map H) = e))))
T c= c==> ! c==> * / c= * part cedge_map f0 b1 b0 c? / c= * part cedge_map f0 b1 c==> c? / c= * part cedge_map f0 b0 c? / c= * part cedge_map f0 b0 c==> c? / c= * part cedge_map f0 b0 c? / c= * part cedge_map f0 b0
- |- (((edge_map H) = e) ==> (?e. ((edge_map H) = e)))
T c==> c= * part cedge_map f0 f1 c? / c= * part cedge_map f0 b0
- ((edge_map ((edge_walkup H) x)) = e') |- (((edge_map ((edge_walkup H) x)) = e') /\ (?e'. ((edge_map ((edge_walkup H) x)) = e')))
T c==> c= * part cedge_map cedge_walkup f0 f1 f2 c/\ c= * part cedge_map cedge_walkup f0 f1 f2 c? / c= * part cedge_map cedge_walkup f0 f1 b0
- |- (((face_map H) = f) ==> (?f. ((face_map H) = f)))
T c==> c= * part cface_map f0 f1 c? / c= * part cface_map f0 b0
- ((node_map H) = n) |- (((node_map H) = n) /\ (?n. ((node_map H) = n)))
T c==> c= * part cnode_map f0 f1 c/\ c= * part cnode_map f0 f1 c? / c= * part cnode_map f0 b0
- |- (((edge_map H) = e) = ((\e. ((edge_map H) = e)) e))
T c= c= * part cedge_map f0 f1 * / c= * part cedge_map f0 b0 f1
- (FINITE (dart H)), ((edge_map H) = e), ((node_map H) = n), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (((!x. (((\f. ((face_map H) = f)) x) ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))) ==> ((?f. ((face_map H) = f)) ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))) = ((?f. ((face_map H) = f)) ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y)))))))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cdart f0 f3 c==> cpermutes * part cedge_map f0 * part cdart f0 c= c==> ! c==> * / c= * part cface_map f0 b1 b0 c==> c/\ cIN f4 f3 c/\ c~ cIN f4 * * part cedge f0 f5 c~ cIN * f2 f4 * * part cedge f0 f5 c/\ c= * * part cedge f0 f5 * * part cedge cedge_walkup f0 f4 f5 c~ cIN cinverse f1 f4 * * part cedge f0 f5 c==> c? / c= * part cface_map f0 b0 c==> c/\ cIN f4 f3 c/\ c~ cIN f4 * * part cedge f0 f5 c~ cIN * f2 f4 * * part cedge f0 f5 c/\ c= * * part cedge f0 f5 * * part cedge cedge_walkup f0 f4 f5 c~ cIN cinverse f1 f4 * * part cedge f0 f5 c==> c? / c= * part cface_map f0 b0 c==> c/\ cIN f4 f3 c/\ c~ cIN f4 * * part cedge f0 f5 c~ cIN * f2 f4 * * part cedge f0 f5 c/\ c= * * part cedge f0 f5 * * part cedge cedge_walkup f0 f4 f5 c~ cIN cinverse f1 f4 * * part cedge f0 f5
- |- (!D'. (((\D'. ((dart ((edge_walkup H) x)) = D')) D') ==> (?D'. ((dart ((edge_walkup H) x)) = D'))))
T c==> * / c= * part cdart cedge_walkup f0 f1 b0 f2 c? / c= * part cdart cedge_walkup f0 f1 b0
- ((node_map H) = n) |- ((\n. ((node_map H) = n)) n)
T c==> c= * part cnode_map f0 f1 * / c= * part cnode_map f0 b0 f1
- ((face_map H) = f) |- ((\f. ((face_map H) = f)) f)
T c==> c= * part cface_map f0 f1 * / c= * part cface_map f0 b0 f1
- (~ ((((POWER e) m) y) = ((inverse e) x))) |- (((~ (((inverse e) x) = (((POWER e) m) y))) ==> ((((inverse e) x) = (((POWER e) m) y)) = F)) = ((((inverse e) x) = (((POWER e) m) y)) = F))
T c==> c~ c= cPOWER f0 f1 f2 cinverse f0 f3 c= c==> c~ c= cinverse f0 f3 cPOWER f0 f1 f2 c= c= cinverse f0 f3 cPOWER f0 f1 f2 cF c= c= cinverse f0 f3 cPOWER f0 f1 f2 cF
- (FINITE (dart H)), ((edge_map H) = e), ((node_map H) = n), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (((!x. (((\D'. ((dart ((edge_walkup H) x)) = D')) x) ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))) ==> ((?D'. ((dart ((edge_walkup H) x)) = D')) ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))) = ((?D'. ((dart ((edge_walkup H) x)) = D')) ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y)))))))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cdart f0 f3 c==> cpermutes * part cedge_map f0 * part cdart f0 c= c==> ! c==> * / c= * part cdart cedge_walkup f0 f4 b1 b0 c==> c/\ cIN f4 f3 c/\ c~ cIN f4 * * part cedge f0 f5 c~ cIN * f2 f4 * * part cedge f0 f5 c/\ c= * * part cedge f0 f5 * * part cedge cedge_walkup f0 f4 f5 c~ cIN cinverse f1 f4 * * part cedge f0 f5 c==> c? / c= * part cdart cedge_walkup f0 f4 b0 c==> c/\ cIN f4 f3 c/\ c~ cIN f4 * * part cedge f0 f5 c~ cIN * f2 f4 * * part cedge f0 f5 c/\ c= * * part cedge f0 f5 * * part cedge cedge_walkup f0 f4 f5 c~ cIN cinverse f1 f4 * * part cedge f0 f5 c==> c? / c= * part cdart cedge_walkup f0 f4 b0 c==> c/\ cIN f4 f3 c/\ c~ cIN f4 * * part cedge f0 f5 c~ cIN * f2 f4 * * part cedge f0 f5 c/\ c= * * part cedge f0 f5 * * part cedge cedge_walkup f0 f4 f5 c~ cIN cinverse f1 f4 * * part cedge f0 f5
- (FINITE (dart H)), ((edge_map H) = e), ((node_map H) = n), ((dart H) = D), ((permutes (edge_map H)) (dart H)), ((\D'. ((dart ((edge_walkup H) x)) = D')) D') |- (((\D'. ((dart ((edge_walkup H) x)) = D')) D') /\ (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cdart f0 f3 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> * / c= * part cdart cedge_walkup f0 f4 b0 f5 c/\ * / c= * part cdart cedge_walkup f0 f4 b0 f5 c==> c/\ cIN f4 f3 c/\ c~ cIN f4 * * part cedge f0 f6 c~ cIN * f2 f4 * * part cedge f0 f6 c/\ c= * * part cedge f0 f6 * * part cedge cedge_walkup f0 f4 f6 c~ cIN cinverse f1 f4 * * part cedge f0 f6
- |- (((node_map H) = n) = ((\n. ((node_map H) = n)) n))
T c= c= * part cnode_map f0 f1 * / c= * part cnode_map f0 b0 f1
- ((edge_map H) = e), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (((permutes e) D) = T)
T c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cedge_map f0 * part cdart f0 c= cpermutes f1 f2 cT
- (!m. ((((POWER e) m) y) = (((POWER e') m) y))) |- ((((POWER e) m) y) = (((POWER e') m) y))
T c==> ! c= cPOWER f0 b0 f1 cPOWER f2 b0 f1 c= cPOWER f0 f3 f1 cPOWER f2 f3 f1
- ((dart H) = D) |- ((\D. ((dart H) = D)) D)
T c==> c= * part cdart f0 f1 * / c= * part cdart f0 b0 f1
- (FINITE (dart H)), ((edge_map H) = e), ((node_map H) = n), ((dart H) = D), ((permutes (edge_map H)) (dart H)), ((\f. ((face_map H) = f)) f) |- (((\f. ((face_map H) = f)) f) /\ (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cdart f0 f3 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> * / c= * part cface_map f0 b0 f4 c/\ * / c= * part cface_map f0 b0 f4 c==> c/\ cIN f5 f3 c/\ c~ cIN f5 * * part cedge f0 f6 c~ cIN * f2 f5 * * part cedge f0 f6 c/\ c= * * part cedge f0 f6 * * part cedge cedge_walkup f0 f5 f6 c~ cIN cinverse f1 f5 * * part cedge f0 f6
- |- ((((\D'. ((dart ((edge_walkup H) x)) = D')) D') ==> (?D'. ((dart ((edge_walkup H) x)) = D'))) = T)
T c= c==> * / c= * part cdart cedge_walkup f0 f1 b0 f2 c? / c= * part cdart cedge_walkup f0 f1 b0 cT
- ((dart H) = D), ((permutes (face_map H)) (dart H)) |- ((permutes (face_map H)) D)
T c==> c= * part cdart f0 f1 c==> cpermutes * part cface_map f0 * part cdart f0 cpermutes * part cface_map f0 f1
- ((\f. ((face_map H) = f)) f) |- ((face_map H) = f)
T c==> * / c= * part cface_map f0 b0 f1 c= * part cface_map f0 f1
- (FINITE (dart H)), ((edge_map H) = e), ((node_map H) = n), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (((face_map H) = f) ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cdart f0 f3 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> c= * part cface_map f0 f4 c==> c/\ cIN f5 f3 c/\ c~ cIN f5 * * part cedge f0 f6 c~ cIN * f2 f5 * * part cedge f0 f6 c/\ c= * * part cedge f0 f6 * * part cedge cedge_walkup f0 f5 f6 c~ cIN cinverse f1 f5 * * part cedge f0 f6
- |- (!D. (((\D. ((dart H) = D)) D) ==> (?D. ((dart H) = D))))
T c==> * / c= * part cdart f0 b0 f1 c? / c= * part cdart f0 b0
- |- (((!x. (((\e'. ((edge_map ((edge_walkup H) x)) = e')) x) ==> (?e'. ((edge_map ((edge_walkup H) x)) = e')))) ==> ((?e'. ((edge_map ((edge_walkup H) x)) = e')) ==> (?e'. ((edge_map ((edge_walkup H) x)) = e')))) = ((?e'. ((edge_map ((edge_walkup H) x)) = e')) ==> (?e'. ((edge_map ((edge_walkup H) x)) = e'))))
T c= c==> ! c==> * / c= * part cedge_map cedge_walkup f0 f1 b1 b0 c? / c= * part cedge_map cedge_walkup f0 f1 b1 c==> c? / c= * part cedge_map cedge_walkup f0 f1 b0 c? / c= * part cedge_map cedge_walkup f0 f1 b0 c==> c? / c= * part cedge_map cedge_walkup f0 f1 b0 c? / c= * part cedge_map cedge_walkup f0 f1 b0
- ((\e. ((edge_map H) = e)) e) |- (((\e. ((edge_map H) = e)) e) /\ (?e. ((edge_map H) = e)))
T c==> * / c= * part cedge_map f0 b0 f1 c/\ * / c= * part cedge_map f0 b0 f1 c? / c= * part cedge_map f0 b0
- ((\D'. ((dart ((edge_walkup H) x)) = D')) D') |- ((dart ((edge_walkup H) x)) = D')
T c==> * / c= * part cdart cedge_walkup f0 f1 b0 f2 c= * part cdart cedge_walkup f0 f1 f2
- ((edge_map H) = e) |- ((\e. ((edge_map H) = e)) e)
T c==> c= * part cedge_map f0 f1 * / c= * part cedge_map f0 b0 f1
- ((\D. ((dart H) = D)) D) |- (((\D. ((dart H) = D)) D) /\ (?D. ((dart H) = D)))
T c==> * / c= * part cdart f0 b0 f1 c/\ * / c= * part cdart f0 b0 f1 c? / c= * part cdart f0 b0
- (~ ((((POWER e) m) y) = x)) |- (~ (x = (((POWER e) m) y)))
T c==> c~ c= cPOWER f0 f1 f2 f3 c~ c= f3 cPOWER f0 f1 f2
- ((edge_map H) = e), ((node_map H) = n), ((face_map H) = f), (((edge_map H) o ((node_map H) o (face_map H))) = I) |- ((e o (n o f)) = I)
T c==> c= * part cedge_map f0 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cface_map f0 f3 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= * * part co f1 * * part co f2 f3 part cI
- |- ((((\n. ((node_map H) = n)) n) ==> (?n. ((node_map H) = n))) = T)
T c= c==> * / c= * part cnode_map f0 b0 f1 c? / c= * part cnode_map f0 b0 cT
- |- ((((\f. ((face_map H) = f)) f) ==> (?f. ((face_map H) = f))) = T)
T c= c==> * / c= * part cface_map f0 b0 f1 c? / c= * part cface_map f0 b0 cT
- ((face_map H) = f), ((dart H) = D), ((permutes (face_map H)) (dart H)) |- (((permutes f) D) = T)
T c==> c= * part cface_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cface_map f0 * part cdart f0 c= cpermutes f1 f2 cT
- |- (((!x. (((\n. ((node_map H) = n)) x) ==> (?n. ((node_map H) = n)))) ==> ((?n. ((node_map H) = n)) ==> (?n. ((node_map H) = n)))) = ((?n. ((node_map H) = n)) ==> (?n. ((node_map H) = n))))
T c= c==> ! c==> * / c= * part cnode_map f0 b1 b0 c? / c= * part cnode_map f0 b1 c==> c? / c= * part cnode_map f0 b0 c? / c= * part cnode_map f0 b0 c==> c? / c= * part cnode_map f0 b0 c? / c= * part cnode_map f0 b0
- ((\D. ((dart H) = D)) D) |- ((((dart H) = D) ==> (?D. ((dart H) = D))) = (?D. ((dart H) = D)))
T c==> * / c= * part cdart f0 b0 f1 c= c==> c= * part cdart f0 f1 c? / c= * part cdart f0 b0 c? / c= * part cdart f0 b0
- (FINITE (dart H)), ((edge_map H) = e), ((node_map H) = n), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (((\f. ((face_map H) = f)) f) ==> (((x IN D) /\ ((~ (x IN ((edge H) y))) /\ (~ ((n x) IN ((edge H) y))))) ==> ((((edge H) y) = ((edge ((edge_walkup H) x)) y)) /\ (~ (((inverse e) x) IN ((edge H) y))))))
T c==> cFINITE * part cdart f0 c==> c= * part cedge_map f0 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cdart f0 f3 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> * / c= * part cface_map f0 b0 f4 c==> c/\ cIN f5 f3 c/\ c~ cIN f5 * * part cedge f0 f6 c~ cIN * f2 f5 * * part cedge f0 f6 c/\ c= * * part cedge f0 f6 * * part cedge cedge_walkup f0 f5 f6 c~ cIN cinverse f1 f5 * * part cedge f0 f6
- (FINITE (dart H)), ((dart H) = D) |- ((FINITE D) = T)
T c==> cFINITE * part cdart f0 c==> c= * part cdart f0 f1 c= cFINITE f1 cT
