N Meeixjo.iso_list_final_dart_list
C |- (!phi. (!L. (!N. (!L'. (!N'. (((good_list L) /\ (((normal_list L) N) /\ (((isop_list phi) (L , N)) (L' , N')))) ==> (((final_dart_list L') N') = ((MAP (\u. ((phi (FST u)) , (phi (SND u))))) ((final_dart_list L) N)))))))))
T c==> c/\ cgood_list f0 c/\ cnormal_list f0 f1 cisop_list f2 c, f0 f1 c, f3 f4 c= cfinal_dart_list f3 f4 cMAP / c, * f2 cFST b0 * f2 cSND b0 cfinal_dart_list f0 f1
D TRUTH
A |- T
T cT
D MAP
A |- ((!f. (((MAP f) NIL) = NIL)) /\ (!f. (!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))))))
T c/\ ! c= cMAP b0 cNIL cNIL ! ! ! c= cMAP b0 cCONS b1 b2 cCONS * b0 b1 cMAP b0 b2
D CONS_11
A |- (!h1. (!h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2)))))))
T c= c= cCONS f0 f1 cCONS f2 f3 c/\ c= f0 f2 c= f1 f3
D Seq.eq_in_filter
A |- (!a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s))))))
T c==> ! c==> cMEM b0 f0 c= * f1 b0 * f2 b0 c= cfilter f1 f0 cfilter f2 f0
D Seq.map_MAP
A |- (map = MAP)
T c= part cmap part cMAP
D Seq.preim
A |- (!a. (!f. (((preim f) a) = (\x. (a (f x))))))
T c= * * part cpreim f0 f1 / * f1 * f0 b0
D Seq.filter_map
A |- (!f. (!a. (!s. (((filter a) ((map f) s)) = ((map f) ((filter ((preim f) a)) s))))))
T c= cfilter f0 cmap f1 f2 cmap f1 cfilter * * part cpreim f1 f0 f2
D Tame_defs2.iso_list
A |- (!L. (!N. (!L'. (!N'. (((iso_list (L , N)) (L' , N')) = (?phi. (((inj_on phi) (elements_of_list L)) /\ ((L' = ((MAP (MAP phi)) L)) /\ (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N))))))))))
T c= ciso_list c, f0 f1 c, f2 f3 c? / c/\ cinj_on b0 * part celements_of_list f0 c/\ c= f2 cMAP * part cMAP b0 f0 c= f3 cMAP * part cMAP / c, * b0 cFST b1 * b0 cSND b1 f1
D Tame_defs2.isop_list
A |- (!phi. (!L. (!N. (!L'. (!N'. ((((isop_list phi) (L , N)) (L' , N')) = (((inj_on phi) (elements_of_list L)) /\ ((L' = ((MAP (MAP phi)) L)) /\ (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N))))))))))
T c= cisop_list f0 c, f1 f2 c, f3 f4 c/\ cinj_on f0 * part celements_of_list f1 c/\ c= f3 cMAP * part cMAP f0 f1 c= f4 cMAP * part cMAP / c, * f0 cFST b0 * f0 cSND b0 f2
D Tame_defs2.final_dart_list
A |- (!L. (!N. (((final_dart_list L) N) = (flatten ((filter (final_list L)) N)))))
T c= cfinal_dart_list f0 f1 cflatten cfilter * part cfinal_list f0 f1
D Tame_list.MAP_flatten
A |- (!f. (!x. (((MAP f) (flatten x)) = (flatten ((MAP (MAP f)) x)))))
T c= cMAP f0 cflatten f1 cflatten cMAP * part cMAP f0 f1
D Tame_list.lower_case
A |- ((MAP = map) /\ ((LENGTH = sizel) /\ ((FILTER = filter) /\ ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all)))))))
T c/\ c= part cMAP part cmap c/\ c= part cLENGTH part csizel c/\ c= part cFILTER part cfilter c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
D Tame_list.iso_list_final_list_eq
A |- (!L. (!L'. (!N. (!N'. (!r. (!r'. ((((iso_list (L , ((CONS r) N))) (L' , ((CONS r') N'))) /\ (((MEM r) N) /\ ((good_list L) /\ ((normal_list L) N)))) ==> (((final_list L') r') = ((final_list L) r)))))))))
T c==> c/\ ciso_list c, f0 cCONS f1 f2 c, f3 cCONS f4 f5 c/\ cMEM f1 f2 c/\ cgood_list f0 cnormal_list f0 f2 c= cfinal_list f3 f4 cfinal_list f0 f1
- |- ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all))))
T c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
+ |- (((!L'. (!N'. ((((isop_list phi) (L , N)) (L' , N')) = (((inj_on phi) (elements_of_list L)) /\ ((L' = ((MAP (MAP phi)) L)) /\ (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N))))))) ==> ((\L'. (!N'. ((((isop_list phi) (L , N)) (L' , N')) = (((inj_on phi) (elements_of_list L)) /\ ((L' = ((MAP (MAP phi)) L)) /\ (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N))))))) L')) = ((\L'. (!N'. ((((isop_list phi) (L , N)) (L' , N')) = (((inj_on phi) (elements_of_list L)) /\ ((L' = ((MAP (MAP phi)) L)) /\ (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N))))))) L'))
T c= c==> ! ! c= cisop_list f0 c, f1 f2 c, b0 b1 c/\ cinj_on f0 * part celements_of_list f1 c/\ c= b0 cMAP * part cMAP f0 f1 c= b1 cMAP * part cMAP / c, * f0 cFST b2 * f0 cSND b2 f2 * / ! c= cisop_list f0 c, f1 f2 c, b0 b1 c/\ cinj_on f0 * part celements_of_list f1 c/\ c= b0 cMAP * part cMAP f0 f1 c= b1 cMAP * part cMAP / c, * f0 cFST b2 * f0 cSND b2 f2 f3 * / ! c= cisop_list f0 c, f1 f2 c, b0 b1 c/\ cinj_on f0 * part celements_of_list f1 c/\ c= b0 cMAP * part cMAP f0 f1 c= b1 cMAP * part cMAP / c, * f0 cFST b2 * f0 cSND b2 f2 f3
+ (((iso_list (L , ((CONS r) N))) (L' , ((CONS r') N'))) /\ (((MEM r) N) /\ ((good_list L) /\ ((normal_list L) N)))) |- ((((iso_list (L , ((CONS r) N))) (L' , ((CONS r') N'))) /\ (((MEM r) N) /\ ((good_list L) /\ ((normal_list L) N)))) /\ ((!L. (!L'. (!N. (!N'. (!r. (!r'. ((((iso_list (L , ((CONS r) N))) (L' , ((CONS r') N'))) /\ (((MEM r) N) /\ ((good_list L) /\ ((normal_list L) N)))) ==> (((final_list L') r') = ((final_list L) r))))))))) ==> (((final_list L') r') = ((final_list L) r))))
T c==> c/\ ciso_list c, f0 cCONS f1 f2 c, f3 cCONS f4 f5 c/\ cMEM f1 f2 c/\ cgood_list f0 cnormal_list f0 f2 c/\ c/\ ciso_list c, f0 cCONS f1 f2 c, f3 cCONS f4 f5 c/\ cMEM f1 f2 c/\ cgood_list f0 cnormal_list f0 f2 c==> ! ! ! ! ! ! c==> c/\ ciso_list c, b0 cCONS b4 b2 c, b1 cCONS b5 b3 c/\ cMEM b4 b2 c/\ cgood_list b0 cnormal_list b0 b2 c= cfinal_list b1 b5 cfinal_list b0 b4 c= cfinal_list f3 f4 cfinal_list f0 f1
+ (good_list L), (L' = ((MAP (MAP phi)) L)), ((L' = ((MAP (MAP phi)) L)) /\ (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N))), ((inj_on phi) (elements_of_list L)), ((normal_list L) N) |- (((final_dart_list L') N') = ((MAP (\u. ((phi (FST u)) , (phi (SND u))))) ((final_dart_list L) N)))
T c==> cgood_list f0 c==> c= f1 cMAP * part cMAP f2 f0 c==> c/\ c= f1 cMAP * part cMAP f2 f0 c= f3 cMAP * part cMAP / c, * f2 cFST b0 * f2 cSND b0 f4 c==> cinj_on f2 * part celements_of_list f0 c==> cnormal_list f0 f4 c= cfinal_dart_list f1 f3 cMAP / c, * f2 cFST b0 * f2 cSND b0 cfinal_dart_list f0 f4
+ |- ((\L'. (!r'. (!L. (!r. ((?N. (?N'. (((iso_list (L , ((CONS r) N))) (L' , ((CONS r') N'))) /\ (((MEM r) N) /\ ((good_list L) /\ ((normal_list L) N)))))) ==> (((final_list L') r') = ((final_list L) r))))))) L')
T * / ! ! ! c==> c? / c? / c/\ ciso_list c, b2 cCONS b3 b4 c, b0 cCONS b1 b5 c/\ cMEM b3 b4 c/\ cgood_list b2 cnormal_list b2 b4 c= cfinal_list b0 b1 cfinal_list b2 b3 f0
+ (good_list L), (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N)), ((inj_on phi) (elements_of_list L)), ((normal_list L) N) |- ((((MEM x) N) ==> (((\x. ((final_list ((MAP (MAP phi)) L)) ((MAP (\u. ((phi (FST u)) , (phi (SND u))))) x))) x) = ((final_list L) x))) = T)
T c==> cgood_list f0 c==> c= f1 cMAP * part cMAP / c, * f2 cFST b0 * f2 cSND b0 f3 c==> cinj_on f2 * part celements_of_list f0 c==> cnormal_list f0 f3 c= c==> cMEM f4 f3 c= * / cfinal_list cMAP * part cMAP f2 f0 cMAP / c, * f2 cFST b1 * f2 cSND b1 b0 f4 cfinal_list f0 f4 cT
+ |- (((!f. (!a. (!s. (((filter a) ((map f) s)) = ((map f) ((filter ((preim f) a)) s)))))) ==> ((\f. (!a. (!s. (((filter a) ((map f) s)) = ((map f) ((filter ((preim f) a)) s)))))) f)) = ((\f. (!a. (!s. (((filter a) ((map f) s)) = ((map f) ((filter ((preim f) a)) s)))))) f))
T c= c==> ! ! ! c= cfilter b1 cmap b0 b2 cmap b0 cfilter * * part cpreim b0 b1 b2 * / ! ! c= cfilter b1 cmap b0 b2 cmap b0 cfilter * * part cpreim b0 b1 b2 f0 * / ! ! c= cfilter b1 cmap b0 b2 cmap b0 cfilter * * part cpreim b0 b1 b2 f0
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ |- ((\N. (!L'. (!N'. ((((isop_list phi) (L , N)) (L' , N')) = (((inj_on phi) (elements_of_list L)) /\ ((L' = ((MAP (MAP phi)) L)) /\ (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N)))))))) N)
T * / ! ! c= cisop_list f0 c, f1 b0 c, b1 b2 c/\ cinj_on f0 * part celements_of_list f1 c/\ c= b1 cMAP * part cMAP f0 f1 c= b2 cMAP * part cMAP / c, * f0 cFST b3 * f0 cSND b3 b0 f2
+ (!L. (!L'. (!N. (!N'. (!r. (!r'. ((((iso_list (L , ((CONS r) N))) (L' , ((CONS r') N'))) /\ (((MEM r) N) /\ ((good_list L) /\ ((normal_list L) N)))) ==> (((final_list L') r') = ((final_list L) r))))))))) |- ((\N. (!N'. (!r. (!r'. ((((iso_list (L , ((CONS r) N))) (L' , ((CONS r') N'))) /\ (((MEM r) N) /\ ((good_list L) /\ ((normal_list L) N)))) ==> (((final_list L') r') = ((final_list L) r))))))) N)
T c==> ! ! ! ! ! ! c==> c/\ ciso_list c, b0 cCONS b4 b2 c, b1 cCONS b5 b3 c/\ cMEM b4 b2 c/\ cgood_list b0 cnormal_list b0 b2 c= cfinal_list b1 b5 cfinal_list b0 b4 * / ! ! ! c==> c/\ ciso_list c, f0 cCONS b2 b0 c, f1 cCONS b3 b1 c/\ cMEM b2 b0 c/\ cgood_list f0 cnormal_list f0 b0 c= cfinal_list f1 b3 cfinal_list f0 b2 f2
+ |- (((!a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))) ==> ((\a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))) a1)) = ((\a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))) a1))
T c= c==> ! ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2 * / ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2 f0 * / ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2 f0
+ ((good_list L) /\ (((normal_list L) N) /\ (((inj_on phi) (elements_of_list L)) /\ ((L' = ((MAP (MAP phi)) L)) /\ (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N)))))) |- (((good_list L) /\ (((normal_list L) N) /\ (((inj_on phi) (elements_of_list L)) /\ ((L' = ((MAP (MAP phi)) L)) /\ (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N)))))) /\ (((final_dart_list L') N') = ((MAP (\u. ((phi (FST u)) , (phi (SND u))))) ((final_dart_list L) N))))
T c==> c/\ cgood_list f0 c/\ cnormal_list f0 f1 c/\ cinj_on f2 * part celements_of_list f0 c/\ c= f3 cMAP * part cMAP f2 f0 c= f4 cMAP * part cMAP / c, * f2 cFST b0 * f2 cSND b0 f1 c/\ c/\ cgood_list f0 c/\ cnormal_list f0 f1 c/\ cinj_on f2 * part celements_of_list f0 c/\ c= f3 cMAP * part cMAP f2 f0 c= f4 cMAP * part cMAP / c, * f2 cFST b0 * f2 cSND b0 f1 c= cfinal_dart_list f3 f4 cMAP / c, * f2 cFST b0 * f2 cSND b0 cfinal_dart_list f0 f1
+ |- ((?N. (?N'. (((iso_list (L , ((CONS r) N))) (L' , ((CONS r') N'))) /\ (((MEM r) N) /\ ((good_list L) /\ ((normal_list L) N)))))) ==> (((final_list L') r') = ((final_list L) r)))
T c==> c? / c? / c/\ ciso_list c, f0 cCONS f1 b0 c, f2 cCONS f3 b1 c/\ cMEM f1 b0 c/\ cgood_list f0 cnormal_list f0 b0 c= cfinal_list f2 f3 cfinal_list f0 f1
+ |- ((\L. (!r. ((?N. (?N'. (((iso_list (L , ((CONS r) N))) (L' , ((CONS r') N'))) /\ (((MEM r) N) /\ ((good_list L) /\ ((normal_list L) N)))))) ==> (((final_list L') r') = ((final_list L) r))))) L)
T * / ! c==> c? / c? / c/\ ciso_list c, b0 cCONS b1 b2 c, f0 cCONS f1 b3 c/\ cMEM b1 b2 c/\ cgood_list b0 cnormal_list b0 b2 c= cfinal_list f0 f1 cfinal_list b0 b1 f2
+ |- (((!phi. (!L. (!N. (!L'. (!N'. ((((isop_list phi) (L , N)) (L' , N')) = (((inj_on phi) (elements_of_list L)) /\ ((L' = ((MAP (MAP phi)) L)) /\ (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N)))))))))) ==> ((\phi. (!L. (!N. (!L'. (!N'. ((((isop_list phi) (L , N)) (L' , N')) = (((inj_on phi) (elements_of_list L)) /\ ((L' = ((MAP (MAP phi)) L)) /\ (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N)))))))))) phi)) = ((\phi. (!L. (!N. (!L'. (!N'. ((((isop_list phi) (L , N)) (L' , N')) = (((inj_on phi) (elements_of_list L)) /\ ((L' = ((MAP (MAP phi)) L)) /\ (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N)))))))))) phi))
T c= c==> ! ! ! ! ! c= cisop_list b0 c, b1 b2 c, b3 b4 c/\ cinj_on b0 * part celements_of_list b1 c/\ c= b3 cMAP * part cMAP b0 b1 c= b4 cMAP * part cMAP / c, * b0 cFST b5 * b0 cSND b5 b2 * / ! ! ! ! c= cisop_list b0 c, b1 b2 c, b3 b4 c/\ cinj_on b0 * part celements_of_list b1 c/\ c= b3 cMAP * part cMAP b0 b1 c= b4 cMAP * part cMAP / c, * b0 cFST b5 * b0 cSND b5 b2 f0 * / ! ! ! ! c= cisop_list b0 c, b1 b2 c, b3 b4 c/\ cinj_on b0 * part celements_of_list b1 c/\ c= b3 cMAP * part cMAP b0 b1 c= b4 cMAP * part cMAP / c, * b0 cFST b5 * b0 cSND b5 b2 f0
+ (!L. (!L'. (!N. (!N'. (!r. (!r'. ((((iso_list (L , ((CONS r) N))) (L' , ((CONS r') N'))) /\ (((MEM r) N) /\ ((good_list L) /\ ((normal_list L) N)))) ==> (((final_list L') r') = ((final_list L) r))))))))) |- ((!r. ((?N. (?N'. (((iso_list (L , ((CONS r) N))) (L' , ((CONS r') N'))) /\ (((MEM r) N) /\ ((good_list L) /\ ((normal_list L) N)))))) ==> (((final_list L') r') = ((final_list L) r)))) = T)
T c==> ! ! ! ! ! ! c==> c/\ ciso_list c, b0 cCONS b4 b2 c, b1 cCONS b5 b3 c/\ cMEM b4 b2 c/\ cgood_list b0 cnormal_list b0 b2 c= cfinal_list b1 b5 cfinal_list b0 b4 c= ! c==> c? / c? / c/\ ciso_list c, f0 cCONS b0 b1 c, f1 cCONS f2 b2 c/\ cMEM b0 b1 c/\ cgood_list f0 cnormal_list f0 b1 c= cfinal_list f1 f2 cfinal_list f0 b0 cT
- |- ((FILTER = filter) /\ ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all)))))
T c/\ c= part cFILTER part cfilter c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
+ |- (((!f. (!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))))) ==> ((\f. (!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))))) f)) = ((\f. (!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))))) f))
T c= c==> ! ! ! c= cMAP b0 cCONS b1 b2 cCONS * b0 b1 cMAP b0 b2 * / ! ! c= cMAP b0 cCONS b1 b2 cCONS * b0 b1 cMAP b0 b2 f0 * / ! ! c= cMAP b0 cCONS b1 b2 cCONS * b0 b1 cMAP b0 b2 f0
+ |- ((((inj_on phi) (elements_of_list L)) /\ ((((MAP (MAP phi)) L) = ((MAP (MAP phi)) L)) /\ (((CONS ((MAP (\u. ((phi (FST u)) , (phi (SND u))))) x)) ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N)) = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) ((CONS x) N))))) = ((\phi'. (((inj_on phi') (elements_of_list L)) /\ ((((MAP (MAP phi)) L) = ((MAP (MAP phi')) L)) /\ (((CONS ((MAP (\u. ((phi (FST u)) , (phi (SND u))))) x)) ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N)) = ((MAP (MAP (\u. ((phi' (FST u)) , (phi' (SND u)))))) ((CONS x) N)))))) phi))
T c= c/\ cinj_on f0 * part celements_of_list f1 c/\ c= cMAP * part cMAP f0 f1 cMAP * part cMAP f0 f1 c= cCONS cMAP / c, * f0 cFST b0 * f0 cSND b0 f2 cMAP * part cMAP / c, * f0 cFST b0 * f0 cSND b0 f3 cMAP * part cMAP / c, * f0 cFST b0 * f0 cSND b0 cCONS f2 f3 * / c/\ cinj_on b0 * part celements_of_list f1 c/\ c= cMAP * part cMAP f0 f1 cMAP * part cMAP b0 f1 c= cCONS cMAP / c, * f0 cFST b1 * f0 cSND b1 f2 cMAP * part cMAP / c, * f0 cFST b1 * f0 cSND b1 f3 cMAP * part cMAP / c, * b0 cFST b1 * b0 cSND b1 cCONS f2 f3 f0
+ |- (((!N. (!L'. (!N'. (((iso_list (L , N)) (L' , N')) = (?phi. (((inj_on phi) (elements_of_list L)) /\ ((L' = ((MAP (MAP phi)) L)) /\ (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N))))))))) ==> ((\N. (!L'. (!N'. (((iso_list (L , N)) (L' , N')) = (?phi. (((inj_on phi) (elements_of_list L)) /\ ((L' = ((MAP (MAP phi)) L)) /\ (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N))))))))) N)) = ((\N. (!L'. (!N'. (((iso_list (L , N)) (L' , N')) = (?phi. (((inj_on phi) (elements_of_list L)) /\ ((L' = ((MAP (MAP phi)) L)) /\ (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N))))))))) N))
T c= c==> ! ! ! c= ciso_list c, f0 b0 c, b1 b2 c? / c/\ cinj_on b3 * part celements_of_list f0 c/\ c= b1 cMAP * part cMAP b3 f0 c= b2 cMAP * part cMAP / c, * b3 cFST b4 * b3 cSND b4 b0 * / ! ! c= ciso_list c, f0 b0 c, b1 b2 c? / c/\ cinj_on b3 * part celements_of_list f0 c/\ c= b1 cMAP * part cMAP b3 f0 c= b2 cMAP * part cMAP / c, * b3 cFST b4 * b3 cSND b4 b0 f1 * / ! ! c= ciso_list c, f0 b0 c, b1 b2 c? / c/\ cinj_on b3 * part celements_of_list f0 c/\ c= b1 cMAP * part cMAP b3 f0 c= b2 cMAP * part cMAP / c, * b3 cFST b4 * b3 cSND b4 b0 f1
- |- ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all)))
T c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
- (!a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))) |- ((\s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))) s)
T c==> ! ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2 * / c==> ! c==> cMEM b1 b0 c= * f0 b1 * f1 b1 c= cfilter f0 b0 cfilter f1 b0 f2
+ (good_list L), (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N)), ((inj_on phi) (elements_of_list L)), ((normal_list L) N) |- (((filter (final_list ((MAP (MAP phi)) L))) ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N)) = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) ((filter (final_list L)) N)))
T c==> cgood_list f0 c==> c= f1 cMAP * part cMAP / c, * f2 cFST b0 * f2 cSND b0 f3 c==> cinj_on f2 * part celements_of_list f0 c==> cnormal_list f0 f3 c= cfilter * part cfinal_list cMAP * part cMAP f2 f0 cMAP * part cMAP / c, * f2 cFST b0 * f2 cSND b0 f3 cMAP * part cMAP / c, * f2 cFST b0 * f2 cSND b0 cfilter * part cfinal_list f0 f3
- (!a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))) |- (((!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s))))) ==> ((\a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s))))) a2)) = ((\a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s))))) a2))
T c==> ! ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2 c= c==> ! ! c==> ! c==> cMEM b2 b1 c= * f0 b2 * b0 b2 c= cfilter f0 b1 cfilter b0 b1 * / ! c==> ! c==> cMEM b2 b1 c= * f0 b2 * b0 b2 c= cfilter f0 b1 cfilter b0 b1 f1 * / ! c==> ! c==> cMEM b2 b1 c= * f0 b2 * b0 b2 c= cfilter f0 b1 cfilter b0 b1 f1
+ |- (!N'. (((\N'. (((iso_list (L , ((CONS r) N))) (L' , ((CONS r') N'))) /\ (((MEM r) N) /\ ((good_list L) /\ ((normal_list L) N))))) N') ==> ((!L. (!L'. (!N. (!N'. (!r. (!r'. ((((iso_list (L , ((CONS r) N))) (L' , ((CONS r') N'))) /\ (((MEM r) N) /\ ((good_list L) /\ ((normal_list L) N)))) ==> (((final_list L') r') = ((final_list L) r))))))))) ==> (((final_list L') r') = ((final_list L) r)))))
T c==> * / c/\ ciso_list c, f0 cCONS f1 f2 c, f3 cCONS f4 b0 c/\ cMEM f1 f2 c/\ cgood_list f0 cnormal_list f0 f2 f5 c==> ! ! ! ! ! ! c==> c/\ ciso_list c, b0 cCONS b4 b2 c, b1 cCONS b5 b3 c/\ cMEM b4 b2 c/\ cgood_list b0 cnormal_list b0 b2 c= cfinal_list b1 b5 cfinal_list b0 b4 c= cfinal_list f3 f4 cfinal_list f0 f1
+ (good_list L), (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N)), ((inj_on phi) (elements_of_list L)), ((normal_list L) N) |- (((map (map (\u. ((phi (FST u)) , (phi (SND u)))))) ((filter (\x. ((final_list ((map (map phi)) L)) ((map (\u. ((phi (FST u)) , (phi (SND u))))) x)))) N)) = ((map (map (\u. ((phi (FST u)) , (phi (SND u)))))) ((filter (final_list L)) N)))
T c==> cgood_list f0 c==> c= f1 cMAP * part cMAP / c, * f2 cFST b0 * f2 cSND b0 f3 c==> cinj_on f2 * part celements_of_list f0 c==> cnormal_list f0 f3 c= cmap * part cmap / c, * f2 cFST b0 * f2 cSND b0 cfilter / cfinal_list cmap * part cmap f2 f0 cmap / c, * f2 cFST b1 * f2 cSND b1 b0 f3 cmap * part cmap / c, * f2 cFST b0 * f2 cSND b0 cfilter * part cfinal_list f0 f3
+ (!L. (!L'. (!N. (!N'. (!r. (!r'. ((((iso_list (L , ((CONS r) N))) (L' , ((CONS r') N'))) /\ (((MEM r) N) /\ ((good_list L) /\ ((normal_list L) N)))) ==> (((final_list L') r') = ((final_list L) r))))))))), (((iso_list (L , ((CONS r) N))) (L' , ((CONS r') N'))) /\ (((MEM r) N) /\ ((good_list L) /\ ((normal_list L) N)))) |- ((!L. (!L'. (!N. (!N'. (!r. (!r'. ((((iso_list (L , ((CONS r) N))) (L' , ((CONS r') N'))) /\ (((MEM r) N) /\ ((good_list L) /\ ((normal_list L) N)))) ==> (((final_list L') r') = ((final_list L) r))))))))) /\ (((final_list L') r') = ((final_list L) r)))
T c==> ! ! ! ! ! ! c==> c/\ ciso_list c, b0 cCONS b4 b2 c, b1 cCONS b5 b3 c/\ cMEM b4 b2 c/\ cgood_list b0 cnormal_list b0 b2 c= cfinal_list b1 b5 cfinal_list b0 b4 c==> c/\ ciso_list c, f0 cCONS f1 f2 c, f3 cCONS f4 f5 c/\ cMEM f1 f2 c/\ cgood_list f0 cnormal_list f0 f2 c/\ ! ! ! ! ! ! c==> c/\ ciso_list c, b0 cCONS b4 b2 c, b1 cCONS b5 b3 c/\ cMEM b4 b2 c/\ cgood_list b0 cnormal_list b0 b2 c= cfinal_list b1 b5 cfinal_list b0 b4 c= cfinal_list f3 f4 cfinal_list f0 f1
+ |- ((\f. (!a. (!s. (((filter a) ((map f) s)) = ((map f) ((filter ((preim f) a)) s)))))) f)
T * / ! ! c= cfilter b1 cmap b0 b2 cmap b0 cfilter * * part cpreim b0 b1 b2 f0
+ |- (((!N'. ((((isop_list phi) (L , N)) (L' , N')) = (((inj_on phi) (elements_of_list L)) /\ ((L' = ((MAP (MAP phi)) L)) /\ (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N)))))) ==> ((\N'. ((((isop_list phi) (L , N)) (L' , N')) = (((inj_on phi) (elements_of_list L)) /\ ((L' = ((MAP (MAP phi)) L)) /\ (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N)))))) N')) = ((\N'. ((((isop_list phi) (L , N)) (L' , N')) = (((inj_on phi) (elements_of_list L)) /\ ((L' = ((MAP (MAP phi)) L)) /\ (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N)))))) N'))
T c= c==> ! c= cisop_list f0 c, f1 f2 c, f3 b0 c/\ cinj_on f0 * part celements_of_list f1 c/\ c= f3 cMAP * part cMAP f0 f1 c= b0 cMAP * part cMAP / c, * f0 cFST b1 * f0 cSND b1 f2 * / c= cisop_list f0 c, f1 f2 c, f3 b0 c/\ cinj_on f0 * part celements_of_list f1 c/\ c= f3 cMAP * part cMAP f0 f1 c= b0 cMAP * part cMAP / c, * f0 cFST b1 * f0 cSND b1 f2 f4 * / c= cisop_list f0 c, f1 f2 c, f3 b0 c/\ cinj_on f0 * part celements_of_list f1 c/\ c= f3 cMAP * part cMAP f0 f1 c= b0 cMAP * part cMAP / c, * f0 cFST b1 * f0 cSND b1 f2 f4
+ |- ((\N'. ((((isop_list phi) (L , N)) (L' , N')) = (((inj_on phi) (elements_of_list L)) /\ ((L' = ((MAP (MAP phi)) L)) /\ (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N)))))) N')
T * / c= cisop_list f0 c, f1 f2 c, f3 b0 c/\ cinj_on f0 * part celements_of_list f1 c/\ c= f3 cMAP * part cMAP f0 f1 c= b0 cMAP * part cMAP / c, * f0 cFST b1 * f0 cSND b1 f2 f4
+ |- (MAP = map)
T c= part cMAP part cmap
- |- (LENGTH = sizel)
T c= part cLENGTH part csizel
+ |- (((!f. (((preim f) a) = (\x. (a (f x))))) ==> ((\f. (((preim f) a) = (\x. (a (f x))))) f)) = ((\f. (((preim f) a) = (\x. (a (f x))))) f))
T c= c==> ! c= * * part cpreim b0 f0 / * f0 * b0 b1 * / c= * * part cpreim b0 f0 / * f0 * b0 b1 f1 * / c= * * part cpreim b0 f0 / * f0 * b0 b1 f1
+ |- (((!h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2)))))) ==> ((\h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2)))))) h2)) = ((\h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2)))))) h2))
T c= c==> ! ! ! c= c= cCONS f0 b1 cCONS b0 b2 c/\ c= f0 b0 c= b1 b2 * / ! ! c= c= cCONS f0 b1 cCONS b0 b2 c/\ c= f0 b0 c= b1 b2 f1 * / ! ! c= c= cCONS f0 b1 cCONS b0 b2 c/\ c= f0 b0 c= b1 b2 f1
+ |- ((!L. (!N. (!L'. (!N'. (((good_list L) /\ (((normal_list L) N) /\ (((inj_on phi) (elements_of_list L)) /\ ((L' = ((MAP (MAP phi)) L)) /\ (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N)))))) ==> (((final_dart_list L') N') = ((MAP (\u. ((phi (FST u)) , (phi (SND u))))) ((final_dart_list L) N)))))))) = T)
T c= ! ! ! ! c==> c/\ cgood_list b0 c/\ cnormal_list b0 b1 c/\ cinj_on f0 * part celements_of_list b0 c/\ c= b2 cMAP * part cMAP f0 b0 c= b3 cMAP * part cMAP / c, * f0 cFST b4 * f0 cSND b4 b1 c= cfinal_dart_list b2 b3 cMAP / c, * f0 cFST b4 * f0 cSND b4 cfinal_dart_list b0 b1 cT
+ |- (((!h1. (!h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2))))))) ==> ((\h1. (!h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2))))))) h1)) = ((\h1. (!h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2))))))) h1))
T c= c==> ! ! ! ! c= c= cCONS b0 b2 cCONS b1 b3 c/\ c= b0 b1 c= b2 b3 * / ! ! ! c= c= cCONS b0 b2 cCONS b1 b3 c/\ c= b0 b1 c= b2 b3 f0 * / ! ! ! c= c= cCONS b0 b2 cCONS b1 b3 c/\ c= b0 b1 c= b2 b3 f0
+ (good_list L), ((good_list L) /\ (((normal_list L) N) /\ (((inj_on phi) (elements_of_list L)) /\ ((L' = ((MAP (MAP phi)) L)) /\ (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N)))))) |- (((final_dart_list L') N') = ((MAP (\u. ((phi (FST u)) , (phi (SND u))))) ((final_dart_list L) N)))
T c==> cgood_list f0 c==> c/\ cgood_list f0 c/\ cnormal_list f0 f1 c/\ cinj_on f2 * part celements_of_list f0 c/\ c= f3 cMAP * part cMAP f2 f0 c= f4 cMAP * part cMAP / c, * f2 cFST b0 * f2 cSND b0 f1 c= cfinal_dart_list f3 f4 cMAP / c, * f2 cFST b0 * f2 cSND b0 cfinal_dart_list f0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0)
T * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1
- |- ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))
T c==> c~ c= cNIL f0 c= cLAST f0 clast f1 f0
- |- ((!a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))) ==> (!a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))))
T c==> ! ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2 ! ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2
+ (!L. (!L'. (!N. (!N'. (!r. (!r'. ((((iso_list (L , ((CONS r) N))) (L' , ((CONS r') N'))) /\ (((MEM r) N) /\ ((good_list L) /\ ((normal_list L) N)))) ==> (((final_list L') r') = ((final_list L) r))))))))) |- (((!r. (!r'. ((((iso_list (L , ((CONS r) N))) (L' , ((CONS r') N'))) /\ (((MEM r) N) /\ ((good_list L) /\ ((normal_list L) N)))) ==> (((final_list L') r') = ((final_list L) r))))) ==> ((\r. (!r'. ((((iso_list (L , ((CONS r) N))) (L' , ((CONS r') N'))) /\ (((MEM r) N) /\ ((good_list L) /\ ((normal_list L) N)))) ==> (((final_list L') r') = ((final_list L) r))))) r)) = ((\r. (!r'. ((((iso_list (L , ((CONS r) N))) (L' , ((CONS r') N'))) /\ (((MEM r) N) /\ ((good_list L) /\ ((normal_list L) N)))) ==> (((final_list L') r') = ((final_list L) r))))) r))
T c==> ! ! ! ! ! ! c==> c/\ ciso_list c, b0 cCONS b4 b2 c, b1 cCONS b5 b3 c/\ cMEM b4 b2 c/\ cgood_list b0 cnormal_list b0 b2 c= cfinal_list b1 b5 cfinal_list b0 b4 c= c==> ! ! c==> c/\ ciso_list c, f0 cCONS b0 f1 c, f2 cCONS b1 f3 c/\ cMEM b0 f1 c/\ cgood_list f0 cnormal_list f0 f1 c= cfinal_list f2 b1 cfinal_list f0 b0 * / ! c==> c/\ ciso_list c, f0 cCONS b0 f1 c, f2 cCONS b1 f3 c/\ cMEM b0 f1 c/\ cgood_list f0 cnormal_list f0 f1 c= cfinal_list f2 b1 cfinal_list f0 b0 f4 * / ! c==> c/\ ciso_list c, f0 cCONS b0 f1 c, f2 cCONS b1 f3 c/\ cMEM b0 f1 c/\ cgood_list f0 cnormal_list f0 f1 c= cfinal_list f2 b1 cfinal_list f0 b0 f4
- (!a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))) |- (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))
T c==> ! ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2 ! ! c==> ! c==> cMEM b2 b1 c= * f0 b2 * b0 b2 c= cfilter f0 b1 cfilter b0 b1
+ |- ((\N'. (((iso_list (L , N)) (L' , N')) = (?phi. (((inj_on phi) (elements_of_list L)) /\ ((L' = ((MAP (MAP phi)) L)) /\ (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N))))))) N')
T * / c= ciso_list c, f0 f1 c, f2 b0 c? / c/\ cinj_on b1 * part celements_of_list f0 c/\ c= f2 cMAP * part cMAP b1 f0 c= b0 cMAP * part cMAP / c, * b1 cFST b2 * b1 cSND b2 f1 f3
+ (good_list L), (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N)), ((MEM x) N), ((inj_on phi) (elements_of_list L)), ((normal_list L) N) |- ((\N. (?N'. (((iso_list (L , ((CONS x) N))) (((MAP (MAP phi)) L) , ((CONS ((MAP (\u. ((phi (FST u)) , (phi (SND u))))) x)) N'))) /\ (((MEM x) N) /\ ((good_list L) /\ ((normal_list L) N)))))) N)
T c==> cgood_list f0 c==> c= f1 cMAP * part cMAP / c, * f2 cFST b0 * f2 cSND b0 f3 c==> cMEM f4 f3 c==> cinj_on f2 * part celements_of_list f0 c==> cnormal_list f0 f3 * / c? / c/\ ciso_list c, f0 cCONS f4 b0 c, cMAP * part cMAP f2 f0 cCONS cMAP / c, * f2 cFST b2 * f2 cSND b2 f4 b1 c/\ cMEM f4 b0 c/\ cgood_list f0 cnormal_list f0 b0 f3
+ |- ((\r'. (!L. (!r. ((?N. (?N'. (((iso_list (L , ((CONS r) N))) (L' , ((CONS r') N'))) /\ (((MEM r) N) /\ ((good_list L) /\ ((normal_list L) N)))))) ==> (((final_list L') r') = ((final_list L) r)))))) r')
T * / ! ! c==> c? / c? / c/\ ciso_list c, b1 cCONS b2 b3 c, f0 cCONS b0 b4 c/\ cMEM b2 b3 c/\ cgood_list b1 cnormal_list b1 b3 c= cfinal_list f0 b0 cfinal_list b1 b2 f1
+ ((inj_on phi) (elements_of_list L)) |- (?phi'. (((inj_on phi') (elements_of_list L)) /\ ((((MAP (MAP phi)) L) = ((MAP (MAP phi')) L)) /\ (((CONS ((MAP (\u. ((phi (FST u)) , (phi (SND u))))) x)) ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N)) = ((MAP (MAP (\u. ((phi' (FST u)) , (phi' (SND u)))))) ((CONS x) N))))))
T c==> cinj_on f0 * part celements_of_list f1 c? / c/\ cinj_on b0 * part celements_of_list f1 c/\ c= cMAP * part cMAP f0 f1 cMAP * part cMAP b0 f1 c= cCONS cMAP / c, * f0 cFST b1 * f0 cSND b1 f2 cMAP * part cMAP / c, * f0 cFST b1 * f0 cSND b1 f3 cMAP * part cMAP / c, * b0 cFST b1 * b0 cSND b1 cCONS f2 f3
+ ((inj_on phi) (elements_of_list L)) |- (((inj_on phi) (elements_of_list L)) /\ ((((MAP (MAP phi)) L) = ((MAP (MAP phi)) L)) /\ (((CONS ((MAP (\u. ((phi (FST u)) , (phi (SND u))))) x)) ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N)) = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) ((CONS x) N)))))
T c==> cinj_on f0 * part celements_of_list f1 c/\ cinj_on f0 * part celements_of_list f1 c/\ c= cMAP * part cMAP f0 f1 cMAP * part cMAP f0 f1 c= cCONS cMAP / c, * f0 cFST b0 * f0 cSND b0 f2 cMAP * part cMAP / c, * f0 cFST b0 * f0 cSND b0 f3 cMAP * part cMAP / c, * f0 cFST b0 * f0 cSND b0 cCONS f2 f3
- |- ((!N'. t) = t)
T c= ! f0 f0
+ |- ((!phi. (!L. (!N. (!L'. (!N'. (((good_list L) /\ (((normal_list L) N) /\ (((inj_on phi) (elements_of_list L)) /\ ((L' = ((MAP (MAP phi)) L)) /\ (N' = ((MAP (MAP (\u. ((phi (FST u)) , (phi (SND u)))))) N)))))) ==> (((final_dart_list L') N') = ((MAP (\u. ((phi (FST u)) , (phi (SND u))))) ((final_dart_list L) N))))))))) = (!phi. (!L. (!N. (!L'. (!N'. (((good_list L) /\ (((normal_list L) N) /\ (((isop_list phi) (L , N)) (L' , N')))) ==> (((final_dart_list L') N') = ((MAP (\u. ((phi (FST u)) , (phi (SND u))))) ((final_dart_list L) N))))))))))
T c= ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cnormal_list b1 b2 c/\ cinj_on b0 * part celements_of_list b1 c/\ c= b3 cMAP * part cMAP b0 b1 c= b4 cMAP * part cMAP / c, * b0 cFST b5 * b0 cSND b5 b2 c= cfinal_dart_list b3 b4 cMAP / c, * b0 cFST b5 * b0 cSND b5 cfinal_dart_list b1 b2 ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cnormal_list b1 b2 cisop_list b0 c, b1 b2 c, b3 b4 c= cfinal_dart_list b3 b4 cMAP / c, * b0 cFST b5 * b0 cSND b5 cfinal_dart_list b1 b2
+ (!L. (!L'. (!N. (!N'. (!r. (!r'. ((((iso_list (L , ((CONS r) N))) (L' , ((CONS r') N'))) /\ (((MEM r) N) /\ ((good_list L) /\ ((normal_list L) N)))) ==> (((final_list L') r') = ((final_list L) r))))))))), (((iso_list (L , ((CONS r) N))) (L' , ((CONS r') N'))) /\ (((MEM r) N) /\ ((good_list L) /\ ((normal_list L) N)))) |- (((final_list L') r') = ((final_list L) r))
T c==> ! ! ! ! ! ! c==> c/\ ciso_list c, b0 cCONS b4 b2 c, b1 cCONS b5 b3 c/\ cMEM b4 b2 c/\ cgood_list b0 cnormal_list b0 b2 c= cfinal_list b1 b5 cfinal_list b0 b4 c==> c/\ ciso_list c, f0 cCONS f1 f2 c, f3 cCONS f4 f5 c/\ cMEM f1 f2 c/\ cgood_list f0 cnormal_list f0 f2 c= cfinal_list f3 f4 cfinal_list f0 f1
- |- ((?phi'. t) = t)
T c= c? / f0 f0
- (!a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))) |- ((\a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s))))) a2)
T c==> ! ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2 * / ! c==> ! c==> cMEM b2 b1 c= * f0 b2 * b0 b2 c= cfilter f0 b1 cfilter b0 b1 f1
- (!a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))) |- (((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s))) = T)
T c==> ! ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2 c= c==> ! c==> cMEM b0 f0 c= * f1 b0 * f2 b0 c= cfilter f1 f0 cfilter f2 f0 cT
- (!a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))) |- ((!a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))) /\ (!a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))))
T c==> ! ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2 c/\ ! ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2 ! ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2
- (!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) |- ((!a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))) ==> (((filter a1) s) = ((filter a2) s)))
T c==> ! c==> cMEM b0 f0 c= * f1 b0 * f2 b0 c==> ! ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2 c= cfilter f1 f0 cfilter f2 f0
- (!a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))) |- ((!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))) = T)
T c==> ! ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2 c= ! c==> ! c==> cMEM b1 b0 c= * f0 b1 * f1 b1 c= cfilter f0 b0 cfilter f1 b0 cT
- (!a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))) |- ((\a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))) a1)
T c==> ! ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2 * / ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2 f0
- (!a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))) |- (((!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))) ==> ((\s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))) s)) = ((\s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))) s))
T c==> ! ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2 c= c==> ! c==> ! c==> cMEM b1 b0 c= * f0 b1 * f1 b1 c= cfilter f0 b0 cfilter f1 b0 * / c==> ! c==> cMEM b1 b0 c= * f0 b1 * f1 b1 c= cfilter f0 b0 cfilter f1 b0 f2 * / c==> ! c==> cMEM b1 b0 c= * f0 b1 * f1 b1 c= cfilter f0 b0 cfilter f1 b0 f2
- |- (((!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) ==> ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0)) = ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0))
T c= c==> ! c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1 * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1
- |- (((MAP f) NIL) = NIL)
T c= cMAP f0 cNIL cNIL
- (!a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))) |- (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s))))
T c==> ! ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2 ! c==> ! c==> cMEM b1 b0 c= * f0 b1 * f1 b1 c= cfilter f0 b0 cfilter f1 b0
- |- (((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) ==> ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s)) = ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s))
T c= c==> ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0 * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0
- (!a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))) |- ((!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s))))) = T)
T c==> ! ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2 c= ! ! c==> ! c==> cMEM b2 b1 c= * f0 b2 * b0 b2 c= cfilter f0 b1 cfilter b0 b1 cT
- (!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))), (!a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))) |- ((!a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))) /\ (((filter a1) s) = ((filter a2) s)))
T c==> ! c==> cMEM b0 f0 c= * f1 b0 * f2 b0 c==> ! ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2 c/\ ! ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2 c= cfilter f1 f0 cfilter f2 f0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))) = T)
T c= c==> c~ c= cNIL f0 c= cLAST f0 clast f1 f0 cT
- |- ((LENGTH = sizel) /\ ((FILTER = filter) /\ ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all))))))
T c/\ c= part cLENGTH part csizel c/\ c= part cFILTER part cfilter c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
- |- (((!f. (((MAP f) NIL) = NIL)) ==> ((\f. (((MAP f) NIL) = NIL)) f)) = ((\f. (((MAP f) NIL) = NIL)) f))
T c= c==> ! c= cMAP b0 cNIL cNIL * / c= cMAP b0 cNIL cNIL f0 * / c= cMAP b0 cNIL cNIL f0
- |- (((!a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))) ==> (!a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s))))))) = (!a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))))
T c= c==> ! ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2 ! ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2 ! ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2
- (!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))), (!a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))) |- ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) /\ (((filter a1) s) = ((filter a2) s)))
T c==> ! c==> cMEM b0 f0 c= * f1 b0 * f2 b0 c==> ! ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2 c/\ ! c==> cMEM b0 f0 c= * f1 b0 * f2 b0 c= cfilter f1 f0 cfilter f2 f0
- (!a1. (!a2. (!s. ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))))) |- ((!x. (((MEM x) s) ==> ((a1 x) = (a2 x)))) ==> (((filter a1) s) = ((filter a2) s)))
T c==> ! ! ! c==> ! c==> cMEM b3 b2 c= * b0 b3 * b1 b3 c= cfilter b0 b2 cfilter b1 b2 c==> ! c==> cMEM b0 f0 c= * f1 b0 * f2 b0 c= cfilter f1 f0 cfilter f2 f0
- |- ((\f. (((MAP f) NIL) = NIL)) f)
T * / c= cMAP b0 cNIL cNIL f0
- |- ((APPEND = cat) /\ (ALL = all))
T c/\ c= part cAPPEND part ccat c= part cALL part call
- |- (FILTER = filter)
T c= part cFILTER part cfilter
- (?N'. (((iso_list (L , ((CONS r) N))) (L' , ((CONS r') N'))) /\ (((MEM r) N) /\ ((good_list L) /\ ((normal_list L) N))))) |- ((?N'. (((iso_list (L , ((CONS r) N))) (L' , ((CONS r') N'))) /\ (((MEM r) N) /\ ((good_list L) /\ ((normal_list L) N))))) /\ ((!L. (!L'. (!N. (!N'. (!r. (!r'. ((((iso_list (L , ((CONS r) N))) (L' , ((CONS r') N'))) /\ (((MEM r) N) /\ ((good_list L) /\ ((normal_list L) N)))) ==> (((final_list L') r') = ((final_list L) r))))))))) ==> (((final_list L') r') = ((final_list L) r))))
T c==> c? / c/\ ciso_list c, f0 cCONS f1 f2 c, f3 cCONS f4 b0 c/\ cMEM f1 f2 c/\ cgood_list f0 cnormal_list f0 f2 c/\ c? / c/\ ciso_list c, f0 cCONS f1 f2 c, f3 cCONS f4 b0 c/\ cMEM f1 f2 c/\ cgood_list f0 cnormal_list f0 f2 c==> ! ! ! ! ! ! c==> c/\ ciso_list c, b0 cCONS b4 b2 c, b1 cCONS b5 b3 c/\ cMEM b4 b2 c/\ cgood_list b0 cnormal_list b0 b2 c= cfinal_list b1 b5 cfinal_list b0 b4 c= cfinal_list f3 f4 cfinal_list f0 f1
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s)
T * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0
