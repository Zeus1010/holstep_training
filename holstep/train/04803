N Planarity.CARD_GT1_IMP_AZIM_FAN_EQ_AZIM
C |- (!x. (!V. (!E. (!y. (((FAN (x , (V , E))) /\ ((y IN (d_fan (x , (V , E)))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))) ==> ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN f3 * part cd_fan c, f0 c, f1 f2 ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= cazim_fan f0 f1 f2 cpr2 f3 cpr3 f3 cazim f0 cpr2 f3 cpr3 f3 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D Fan_defs.azim_fan
A |- (!x. (!V. (!E. (!v. (!w. ((((((azim_fan x) V) E) v) w) = (((COND ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))) ((((azim x) v) w) (((((sigma_fan x) V) E) v) w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))))))
T c= cazim_fan f0 f1 f2 f3 f4 cCOND c> cCARD * * * part cset_of_edge f3 f1 f2 cNUMERAL cBIT1 c_0 cazim f0 f3 f4 csigma_fan f0 f1 f2 f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi
D Fan.remark1_fan
A |- (!x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))))
T c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
D Planarity.IN_D1_FAN_IMP_EDGE_FAN
A |- (!x. (!V. (!E. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (y IN (d_fan (x , (V , E)))))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 cIN f3 * part cd_fan c, f0 c, f1 f2 cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f2
+ |- ((\v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT ((pr3 y) INSERT EMPTY)) IN E) = ((pr3 y) IN (((set_of_edge v) V) E))) /\ (((v INSERT ((pr3 y) INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT ((pr3 y) INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = (pr3 y))) /\ ((~ (v = (pr3 y))) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) ((pr3 y) INSERT EMPTY)) /\ (((DISJOINT (x INSERT ((pr3 y) INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT ((pr3 y) INSERT EMPTY))) /\ ((~ ((pr3 y) IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT ((pr3 y) INSERT EMPTY))))) = (~ ((pr3 y) IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))) (pr2 y))
T * / c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT cpr3 f3 part cEMPTY f2 cIN cpr3 f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT cpr3 f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT cpr3 f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 cpr3 f3 c/\ c~ c= b0 cpr3 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT cpr3 f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT cpr3 f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT cpr3 f3 part cEMPTY c/\ c~ cIN cpr3 f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT cpr3 f3 part cEMPTY c~ cIN cpr3 f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cpr2 f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (y IN (d_fan (x , (V , E)))) |- ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cIN f3 * part cd_fan c, f2 c, f0 f1 c= cazim_fan f2 f0 f1 cpr2 f3 cpr3 f3 cazim f2 cpr2 f3 cpr3 f3 csigma_fan f2 f0 f1 cpr2 f3 cpr3 f3
+ |- ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V)
T * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (y IN (d_fan (x , (V , E)))) |- ((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (y IN (d_fan (x , (V , E)))))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E)) ==> ((((COND ((CARD (((set_of_edge (pr2 y)) V) E)) > (NUMERAL (BIT1 _0)))) ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cIN f3 * part cd_fan c, f2 c, f0 f1 c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 cIN f3 * part cd_fan c, f2 c, f0 f1 cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c= cCOND c> cCARD * * * part cset_of_edge cpr2 f3 f0 f1 cNUMERAL cBIT1 c_0 cazim f2 cpr2 f3 cpr3 f3 csigma_fan f2 f0 f1 cpr2 f3 cpr3 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cazim f2 cpr2 f3 cpr3 f3 csigma_fan f2 f0 f1 cpr2 f3 cpr3 f3
+ (y IN (d_fan (x , (V , E)))) |- ((y IN (d_fan (x , (V , E)))) = T)
T c==> cIN f0 * part cd_fan c, f1 c, f2 f3 c= cIN f0 * part cd_fan c, f1 c, f2 f3 cT
- (~ ((pr2 y) = (pr3 y))) |- (((~ ((pr3 y) = (pr2 y))) ==> (((pr3 y) = (pr2 y)) = F)) = (((pr3 y) = (pr2 y)) = F))
T c==> c~ c= cpr2 f0 cpr3 f0 c= c==> c~ c= cpr3 f0 cpr2 f0 c= c= cpr3 f0 cpr2 f0 cF c= c= cpr3 f0 cpr2 f0 cF
- ((pr3 y) IN (((set_of_edge (pr2 y)) V) E)) |- (((pr3 y) IN (((set_of_edge (pr2 y)) V) E)) = T)
T c==> cIN cpr3 f0 * * * part cset_of_edge cpr2 f0 f1 f2 c= cIN cpr3 f0 * * * part cset_of_edge cpr2 f0 f1 f2 cT
+ |- (((CARD (((set_of_edge (pr2 y)) V) E)) > (NUMERAL (BIT1 _0))) ==> ((((COND ((CARD (((set_of_edge (pr2 y)) V) E)) > (NUMERAL (BIT1 _0)))) ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))
T c==> c> cCARD * * * part cset_of_edge cpr2 f0 f1 f2 cNUMERAL cBIT1 c_0 c= cCOND c> cCARD * * * part cset_of_edge cpr2 f0 f1 f2 cNUMERAL cBIT1 c_0 cazim f3 cpr2 f0 cpr3 f0 csigma_fan f3 f1 f2 cpr2 f0 cpr3 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cazim f3 cpr2 f0 cpr3 f0 csigma_fan f3 f1 f2 cpr2 f0 cpr3 f0
- (~ ((pr2 y) = (pr3 y))) |- (((pr2 y) = (pr3 y)) = F)
T c==> c~ c= cpr2 f0 cpr3 f0 c= c= cpr2 f0 cpr3 f0 cF
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (y IN (d_fan (x , (V , E)))) |- ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((((COND ((CARD (((set_of_edge (pr2 y)) V) E)) > (NUMERAL (BIT1 _0)))) ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cIN f3 * part cd_fan c, f2 c, f0 f1 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c= cCOND c> cCARD * * * part cset_of_edge cpr2 f3 f0 f1 cNUMERAL cBIT1 c_0 cazim f2 cpr2 f3 cpr3 f3 csigma_fan f2 f0 f1 cpr2 f3 cpr3 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cazim f2 cpr2 f3 cpr3 f3 csigma_fan f2 f0 f1 cpr2 f3 cpr3 f3
- ((pr3 y) = (pr2 y)) |- ((pr2 y) = (pr3 y))
T c==> c= cpr3 f0 cpr2 f0 c= cpr2 f0 cpr3 f0
+ |- (((!x. (!V. (!E. (!v. (!w. ((((((azim_fan x) V) E) v) w) = (((COND ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))) ((((azim x) v) w) (((((sigma_fan x) V) E) v) w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))))) ==> ((\x. (!V. (!E. (!v. (!w. ((((((azim_fan x) V) E) v) w) = (((COND ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))) ((((azim x) v) w) (((((sigma_fan x) V) E) v) w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))))) x)) = ((\x. (!V. (!E. (!v. (!w. ((((((azim_fan x) V) E) v) w) = (((COND ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))) ((((azim x) v) w) (((((sigma_fan x) V) E) v) w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))))) x))
T c= c==> ! ! ! ! ! c= cazim_fan b0 b1 b2 b3 b4 cCOND c> cCARD * * * part cset_of_edge b3 b1 b2 cNUMERAL cBIT1 c_0 cazim b0 b3 b4 csigma_fan b0 b1 b2 b3 b4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi * / ! ! ! ! c= cazim_fan b0 b1 b2 b3 b4 cCOND c> cCARD * * * part cset_of_edge b3 b1 b2 cNUMERAL cBIT1 c_0 cazim b0 b3 b4 csigma_fan b0 b1 b2 b3 b4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi f0 * / ! ! ! ! c= cazim_fan b0 b1 b2 b3 b4 cCOND c> cCARD * * * part cset_of_edge b3 b1 b2 cNUMERAL cBIT1 c_0 cazim b0 b3 b4 csigma_fan b0 b1 b2 b3 b4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi f0
+ ((pr2 y) IN V) |- ((((pr2 y) IN V) ==> ((CARD (((set_of_edge (pr2 y)) V) E)) > (NUMERAL (BIT1 _0)))) ==> ((((COND ((CARD (((set_of_edge (pr2 y)) V) E)) > (NUMERAL (BIT1 _0)))) ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))
T c==> cIN cpr2 f0 f1 c==> c==> cIN cpr2 f0 f1 c> cCARD * * * part cset_of_edge cpr2 f0 f1 f2 cNUMERAL cBIT1 c_0 c= cCOND c> cCARD * * * part cset_of_edge cpr2 f0 f1 f2 cNUMERAL cBIT1 c_0 cazim f3 cpr2 f0 cpr3 f0 csigma_fan f3 f1 f2 cpr2 f0 cpr3 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cazim f3 cpr2 f0 cpr3 f0 csigma_fan f3 f1 f2 cpr2 f0 cpr3 f0
+ (FAN (x , (V , E))), ((y IN (d_fan (x , (V , E)))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) |- ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ cIN f3 * part cd_fan c, f0 c, f1 f2 ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= cazim_fan f0 f1 f2 cpr2 f3 cpr3 f3 cazim f0 cpr2 f3 cpr3 f3 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (((DISJOINT (x INSERT ((pr3 y) INSERT EMPTY))) ((pr2 y) INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))) /\ ((~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))) /\ (((pr2 y) IN V) /\ ((~ (collinear (x INSERT ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))))) = (~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY)))))))))) |- ((((COND ((CARD (((set_of_edge (pr2 y)) V) E)) > (NUMERAL (BIT1 _0)))) ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT cpr3 f3 part cEMPTY * * part cINSERT cpr2 f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY c/\ c~ cIN cpr3 f3 * part caff * * part cINSERT f2 * * part cINSERT cpr2 f3 part cEMPTY c/\ cIN cpr2 f3 f0 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY c~ cIN cpr3 f3 * part caff * * part cINSERT f2 * * part cINSERT cpr2 f3 part cEMPTY c= cCOND c> cCARD * * * part cset_of_edge cpr2 f3 f0 f1 cNUMERAL cBIT1 c_0 cazim f2 cpr2 f3 cpr3 f3 csigma_fan f2 f0 f1 cpr2 f3 cpr3 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cazim f2 cpr2 f3 cpr3 f3 csigma_fan f2 f0 f1 cpr2 f3 cpr3 f3
+ |- ((\v. (!w. ((((((azim_fan x) V) E) v) w) = (((COND ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))) ((((azim x) v) w) (((((sigma_fan x) V) E) v) w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) v)
T * / ! c= cazim_fan f0 f1 f2 b0 b1 cCOND c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 cazim f0 b0 b1 csigma_fan f0 f1 f2 b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi f3
- (~ (x = (pr3 y))) |- (~ ((pr3 y) = x))
T c==> c~ c= f0 cpr3 f1 c~ c= cpr3 f1 f0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), ((~ (x = (pr3 y))) /\ ((~ ((pr2 y) = (pr3 y))) /\ (((DISJOINT (x INSERT ((pr2 y) INSERT EMPTY))) ((pr3 y) INSERT EMPTY)) /\ (((DISJOINT (x INSERT ((pr3 y) INSERT EMPTY))) ((pr2 y) INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))) /\ ((~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))) /\ (((pr2 y) IN V) /\ ((~ (collinear (x INSERT ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))))) = (~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))))))))))) |- ((((COND ((CARD (((set_of_edge (pr2 y)) V) E)) > (NUMERAL (BIT1 _0)))) ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c/\ c~ c= f2 cpr3 f3 c/\ c~ c= cpr2 f3 cpr3 f3 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT cpr2 f3 part cEMPTY * * part cINSERT cpr3 f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT cpr3 f3 part cEMPTY * * part cINSERT cpr2 f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY c/\ c~ cIN cpr3 f3 * part caff * * part cINSERT f2 * * part cINSERT cpr2 f3 part cEMPTY c/\ cIN cpr2 f3 f0 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY c~ cIN cpr3 f3 * part caff * * part cINSERT f2 * * part cINSERT cpr2 f3 part cEMPTY c= cCOND c> cCARD * * * part cset_of_edge cpr2 f3 f0 f1 cNUMERAL cBIT1 c_0 cazim f2 cpr2 f3 cpr3 f3 csigma_fan f2 f0 f1 cpr2 f3 cpr3 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cazim f2 cpr2 f3 cpr3 f3 csigma_fan f2 f0 f1 cpr2 f3 cpr3 f3
+ |- ((!v. t) = t)
T c= ! f0 f0
- (~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))) |- (((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY)))) = F)
T c==> c~ cIN cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY c= cIN cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY cF
- (~ ((pr2 y) = (pr3 y))) |- (((pr3 y) = (pr2 y)) = F)
T c==> c~ c= cpr2 f0 cpr3 f0 c= c= cpr3 f0 cpr2 f0 cF
+ |- (((!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (y IN (d_fan (x , (V , E)))))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E))) ==> ((\y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (y IN (d_fan (x , (V , E)))))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E))) y)) = ((\y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (y IN (d_fan (x , (V , E)))))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E))) y))
T c= c==> ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 cIN b0 * part cd_fan c, f0 c, f1 f2 cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr3 b0 part cEMPTY f2 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 cIN b0 * part cd_fan c, f0 c, f1 f2 cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr3 b0 part cEMPTY f2 f3 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 cIN b0 * part cd_fan c, f0 c, f1 f2 cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr3 b0 part cEMPTY f2 f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) |- (((((pr2 y) IN V) ==> ((CARD (((set_of_edge (pr2 y)) V) E)) > (NUMERAL (BIT1 _0)))) ==> ((((COND ((CARD (((set_of_edge (pr2 y)) V) E)) > (NUMERAL (BIT1 _0)))) ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))) = ((((COND ((CARD (((set_of_edge (pr2 y)) V) E)) > (NUMERAL (BIT1 _0)))) ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c= c==> c==> cIN cpr2 f2 f0 c> cCARD * * * part cset_of_edge cpr2 f2 f0 f1 cNUMERAL cBIT1 c_0 c= cCOND c> cCARD * * * part cset_of_edge cpr2 f2 f0 f1 cNUMERAL cBIT1 c_0 cazim f3 cpr2 f2 cpr3 f2 csigma_fan f3 f0 f1 cpr2 f2 cpr3 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cazim f3 cpr2 f2 cpr3 f2 csigma_fan f3 f0 f1 cpr2 f2 cpr3 f2 c= cCOND c> cCARD * * * part cset_of_edge cpr2 f2 f0 f1 cNUMERAL cBIT1 c_0 cazim f3 cpr2 f2 cpr3 f2 csigma_fan f3 f0 f1 cpr2 f2 cpr3 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cazim f3 cpr2 f2 cpr3 f2 csigma_fan f3 f0 f1 cpr2 f2 cpr3 f2
+ (FAN (x , (V , E))), ((y IN (d_fan (x , (V , E)))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))), (y IN (d_fan (x , (V , E)))) |- ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ cIN f3 * part cd_fan c, f0 c, f1 f2 ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c==> cIN f3 * part cd_fan c, f0 c, f1 f2 c= cazim_fan f0 f1 f2 cpr2 f3 cpr3 f3 cazim f0 cpr2 f3 cpr3 f3 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) |- (((FINITE (((set_of_edge (pr2 y)) V) E)) /\ (((pr3 y) IN (((set_of_edge (pr2 y)) V) E)) /\ ((~ (collinear (x INSERT ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))))) /\ ((~ (x = (pr2 y))) /\ ((~ (x = (pr3 y))) /\ ((~ ((pr2 y) = (pr3 y))) /\ (((DISJOINT (x INSERT ((pr2 y) INSERT EMPTY))) ((pr3 y) INSERT EMPTY)) /\ (((DISJOINT (x INSERT ((pr3 y) INSERT EMPTY))) ((pr2 y) INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))) /\ ((~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))) /\ (((pr2 y) IN V) /\ ((~ (collinear (x INSERT ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))))) = (~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))))))))))))))) ==> ((((COND ((CARD (((set_of_edge (pr2 y)) V) E)) > (NUMERAL (BIT1 _0)))) ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c/\ cFINITE * * * part cset_of_edge cpr2 f2 f0 f1 c/\ cIN cpr3 f2 * * * part cset_of_edge cpr2 f2 f0 f1 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT cpr2 f2 * * part cINSERT cpr3 f2 part cEMPTY c/\ c~ c= f3 cpr2 f2 c/\ c~ c= f3 cpr3 f2 c/\ c~ c= cpr2 f2 cpr3 f2 c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT cpr2 f2 part cEMPTY * * part cINSERT cpr3 f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT cpr3 f2 part cEMPTY * * part cINSERT cpr2 f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT cpr2 f2 * * part cINSERT cpr3 f2 part cEMPTY c/\ c~ cIN cpr3 f2 * part caff * * part cINSERT f3 * * part cINSERT cpr2 f2 part cEMPTY c/\ cIN cpr2 f2 f0 c= c~ ccollinear * * part cINSERT f3 * * part cINSERT cpr2 f2 * * part cINSERT cpr3 f2 part cEMPTY c~ cIN cpr3 f2 * part caff * * part cINSERT f3 * * part cINSERT cpr2 f2 part cEMPTY c= cCOND c> cCARD * * * part cset_of_edge cpr2 f2 f0 f1 cNUMERAL cBIT1 c_0 cazim f3 cpr2 f2 cpr3 f2 csigma_fan f3 f0 f1 cpr2 f2 cpr3 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cazim f3 cpr2 f2 cpr3 f2 csigma_fan f3 f0 f1 cpr2 f2 cpr3 f2
+ |- (((!w. ((((((azim_fan x) V) E) v) w) = (((COND ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))) ((((azim x) v) w) (((((sigma_fan x) V) E) v) w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))) ==> ((\w. ((((((azim_fan x) V) E) v) w) = (((COND ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))) ((((azim x) v) w) (((((sigma_fan x) V) E) v) w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))) w)) = ((\w. ((((((azim_fan x) V) E) v) w) = (((COND ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))) ((((azim x) v) w) (((((sigma_fan x) V) E) v) w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))) w))
T c= c==> ! c= cazim_fan f0 f1 f2 f3 b0 cCOND c> cCARD * * * part cset_of_edge f3 f1 f2 cNUMERAL cBIT1 c_0 cazim f0 f3 b0 csigma_fan f0 f1 f2 f3 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi * / c= cazim_fan f0 f1 f2 f3 b0 cCOND c> cCARD * * * part cset_of_edge f3 f1 f2 cNUMERAL cBIT1 c_0 cazim f0 f3 b0 csigma_fan f0 f1 f2 f3 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi f4 * / c= cazim_fan f0 f1 f2 f3 b0 cCOND c> cCARD * * * part cset_of_edge f3 f1 f2 cNUMERAL cBIT1 c_0 cazim f0 f3 b0 csigma_fan f0 f1 f2 f3 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi f4
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))) |- ((((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E) ==> ((((COND ((CARD (((set_of_edge (pr2 y)) V) E)) > (NUMERAL (BIT1 _0)))) ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c= cCOND c> cCARD * * * part cset_of_edge cpr2 f3 f0 f1 cNUMERAL cBIT1 c_0 cazim f2 cpr2 f3 cpr3 f3 csigma_fan f2 f0 f1 cpr2 f3 cpr3 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cazim f2 cpr2 f3 cpr3 f3 csigma_fan f2 f0 f1 cpr2 f3 cpr3 f3
+ |- ((!E. (!y. (((FAN (x , (V , E))) /\ ((y IN (d_fan (x , (V , E)))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))) ==> ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))))) = T)
T c= ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cIN b1 * part cd_fan c, f0 c, f1 b0 ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 b0 cNUMERAL cBIT1 c_0 c= cazim_fan f0 f1 b0 cpr2 b1 cpr3 b1 cazim f0 cpr2 b1 cpr3 b1 csigma_fan f0 f1 b0 cpr2 b1 cpr3 b1 cT
+ (FAN (x , (V , E))), ((FAN (x , (V , E))) /\ ((y IN (d_fan (x , (V , E)))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))) |- ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN f3 * part cd_fan c, f0 c, f1 f2 ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= cazim_fan f0 f1 f2 cpr2 f3 cpr3 f3 cazim f0 cpr2 f3 cpr3 f3 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3
+ |- (((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (y IN (d_fan (x , (V , E)))))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E)) ==> ((((COND ((CARD (((set_of_edge (pr2 y)) V) E)) > (NUMERAL (BIT1 _0)))) ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))) = ((((COND ((CARD (((set_of_edge (pr2 y)) V) E)) > (NUMERAL (BIT1 _0)))) ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 cIN f3 * part cd_fan c, f0 c, f1 f2 cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f2 c= cCOND c> cCARD * * * part cset_of_edge cpr2 f3 f1 f2 cNUMERAL cBIT1 c_0 cazim f0 cpr2 f3 cpr3 f3 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cazim f0 cpr2 f3 cpr3 f3 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 c= cCOND c> cCARD * * * part cset_of_edge cpr2 f3 f1 f2 cNUMERAL cBIT1 c_0 cazim f0 cpr2 f3 cpr3 f3 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cazim f0 cpr2 f3 cpr3 f3 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3
- (~ (x = (pr2 y))) |- (((pr2 y) = x) = F)
T c==> c~ c= f0 cpr2 f1 c= c= cpr2 f1 f0 cF
+ |- ((\y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (y IN (d_fan (x , (V , E)))))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E))) y)
T * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 cIN b0 * part cd_fan c, f0 c, f1 f2 cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr3 b0 part cEMPTY f2 f3
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- (((!E. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (y IN (d_fan (x , (V , E)))))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E)))) ==> ((\E. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (y IN (d_fan (x , (V , E)))))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E)))) E)) = ((\E. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (y IN (d_fan (x , (V , E)))))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E)))) E))
T c= c==> ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 b0 cNUMERAL cBIT1 c_0 cIN b1 * part cd_fan c, f0 c, f1 b0 cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr3 b1 part cEMPTY b0 * / ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 b0 cNUMERAL cBIT1 c_0 cIN b1 * part cd_fan c, f0 c, f1 b0 cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr3 b1 part cEMPTY b0 f2 * / ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 b0 cNUMERAL cBIT1 c_0 cIN b1 * part cd_fan c, f0 c, f1 b0 cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr3 b1 part cEMPTY b0 f2
+ (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E) |- ((((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E) = T)
T c==> cIN * * part cINSERT cpr2 f0 * * part cINSERT cpr3 f0 part cEMPTY f1 c= cIN * * part cINSERT cpr2 f0 * * part cINSERT cpr3 f0 part cEMPTY f1 cT
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) |- ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cIN f2 f0 c> cCARD * * * part cset_of_edge f2 f0 f1 cNUMERAL cBIT1 c_0
- (~ (collinear (x INSERT ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))))) |- ((collinear (x INSERT ((pr2 y) INSERT ((pr3 y) INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT cpr2 f1 * * part cINSERT cpr3 f1 part cEMPTY c= ccollinear * * part cINSERT f0 * * part cINSERT cpr2 f1 * * part cINSERT cpr3 f1 part cEMPTY cF
+ |- (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT ((pr3 y) INSERT EMPTY)) IN E) = ((pr3 y) IN (((set_of_edge v) V) E))) /\ (((v INSERT ((pr3 y) INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT ((pr3 y) INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = (pr3 y))) /\ ((~ (v = (pr3 y))) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) ((pr3 y) INSERT EMPTY)) /\ (((DISJOINT (x INSERT ((pr3 y) INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT ((pr3 y) INSERT EMPTY))) /\ ((~ ((pr3 y) IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT ((pr3 y) INSERT EMPTY))))) = (~ ((pr3 y) IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))
T c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT cpr3 f4 part cEMPTY f2 cIN cpr3 f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT cpr3 f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT cpr3 f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 cpr3 f4 c/\ c~ c= f3 cpr3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT cpr3 f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT cpr3 f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT cpr3 f4 part cEMPTY c/\ c~ cIN cpr3 f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT cpr3 f4 part cEMPTY c~ cIN cpr3 f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (y IN (d_fan (x , (V , E)))) |- ((((COND ((CARD (((set_of_edge (pr2 y)) V) E)) > (NUMERAL (BIT1 _0)))) ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cIN f3 * part cd_fan c, f2 c, f0 f1 c= cCOND c> cCARD * * * part cset_of_edge cpr2 f3 f0 f1 cNUMERAL cBIT1 c_0 cazim f2 cpr2 f3 cpr3 f3 csigma_fan f2 f0 f1 cpr2 f3 cpr3 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cazim f2 cpr2 f3 cpr3 f3 csigma_fan f2 f0 f1 cpr2 f3 cpr3 f3
- (~ (x = (pr3 y))) |- ((x = (pr3 y)) = F)
T c==> c~ c= f0 cpr3 f1 c= c= f0 cpr3 f1 cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (((pr2 y) IN V) /\ ((~ (collinear (x INSERT ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))))) = (~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))))) |- ((((COND ((CARD (((set_of_edge (pr2 y)) V) E)) > (NUMERAL (BIT1 _0)))) ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c/\ cIN cpr2 f2 f0 c= c~ ccollinear * * part cINSERT f3 * * part cINSERT cpr2 f2 * * part cINSERT cpr3 f2 part cEMPTY c~ cIN cpr3 f2 * part caff * * part cINSERT f3 * * part cINSERT cpr2 f2 part cEMPTY c= cCOND c> cCARD * * * part cset_of_edge cpr2 f2 f0 f1 cNUMERAL cBIT1 c_0 cazim f3 cpr2 f2 cpr3 f2 csigma_fan f3 f0 f1 cpr2 f2 cpr3 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cazim f3 cpr2 f2 cpr3 f2 csigma_fan f3 f0 f1 cpr2 f2 cpr3 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), ((pr2 y) IN V) |- ((((COND ((CARD (((set_of_edge (pr2 y)) V) E)) > (NUMERAL (BIT1 _0)))) ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cIN cpr2 f2 f0 c= cCOND c> cCARD * * * part cset_of_edge cpr2 f2 f0 f1 cNUMERAL cBIT1 c_0 cazim f3 cpr2 f2 cpr3 f2 csigma_fan f3 f0 f1 cpr2 f2 cpr3 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cazim f3 cpr2 f2 cpr3 f2 csigma_fan f3 f0 f1 cpr2 f2 cpr3 f2
- ((CARD (((set_of_edge (pr2 y)) V) E)) > (NUMERAL (BIT1 _0))) |- (T = ((((COND ((CARD (((set_of_edge (pr2 y)) V) E)) > (NUMERAL (BIT1 _0)))) ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))
T c==> c> cCARD * * * part cset_of_edge cpr2 f0 f1 f2 cNUMERAL cBIT1 c_0 c= cT c= cCOND c> cCARD * * * part cset_of_edge cpr2 f0 f1 f2 cNUMERAL cBIT1 c_0 cazim f3 cpr2 f0 cpr3 f0 csigma_fan f3 f1 f2 cpr2 f0 cpr3 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cazim f3 cpr2 f0 cpr3 f0 csigma_fan f3 f1 f2 cpr2 f0 cpr3 f0
- (x = (pr3 y)) |- ((pr3 y) = x)
T c==> c= f0 cpr3 f1 c= cpr3 f1 f0
- (~ (x = (pr2 y))) |- (((~ ((pr2 y) = x)) ==> (((pr2 y) = x) = F)) = (((pr2 y) = x) = F))
T c==> c~ c= f0 cpr2 f1 c= c==> c~ c= cpr2 f1 f0 c= c= cpr2 f1 f0 cF c= c= cpr2 f1 f0 cF
- |- ((x = x) = T)
T c= c= f0 f0 cT
- (~ (x = (pr2 y))) |- ((x = (pr2 y)) = F)
T c==> c~ c= f0 cpr2 f1 c= c= f0 cpr2 f1 cF
- ((pr3 y) = x) |- (x = (pr3 y))
T c==> c= cpr3 f0 f1 c= f1 cpr3 f0
- (x = (pr2 y)) |- ((pr2 y) = x)
T c==> c= f0 cpr2 f1 c= cpr2 f1 f0
- (~ (x = (pr2 y))) |- (~ ((pr2 y) = x))
T c==> c~ c= f0 cpr2 f1 c~ c= cpr2 f1 f0
- ((pr2 y) = x) |- (x = (pr2 y))
T c==> c= cpr2 f0 f1 c= f1 cpr2 f0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- ((DISJOINT (x INSERT EMPTY)) ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))) |- (((DISJOINT (x INSERT EMPTY)) ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))) = T)
T c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f1 * * part cINSERT cpr3 f1 part cEMPTY c= cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f1 * * part cINSERT cpr3 f1 part cEMPTY cT
- ((pr2 y) = (pr3 y)) |- ((pr3 y) = (pr2 y))
T c==> c= cpr2 f0 cpr3 f0 c= cpr3 f0 cpr2 f0
- (~ ((pr2 y) = (pr3 y))) |- (~ ((pr3 y) = (pr2 y)))
T c==> c~ c= cpr2 f0 cpr3 f0 c~ c= cpr3 f0 cpr2 f0
- ((DISJOINT (x INSERT ((pr2 y) INSERT EMPTY))) ((pr3 y) INSERT EMPTY)) |- (((DISJOINT (x INSERT ((pr2 y) INSERT EMPTY))) ((pr3 y) INSERT EMPTY)) = T)
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT cpr2 f1 part cEMPTY * * part cINSERT cpr3 f1 part cEMPTY c= cDISJOINT * * part cINSERT f0 * * part cINSERT cpr2 f1 part cEMPTY * * part cINSERT cpr3 f1 part cEMPTY cT
- (FINITE (((set_of_edge (pr2 y)) V) E)) |- ((FINITE (((set_of_edge (pr2 y)) V) E)) = T)
T c==> cFINITE * * * part cset_of_edge cpr2 f0 f1 f2 c= cFINITE * * * part cset_of_edge cpr2 f0 f1 f2 cT
- (FAN (x , (V , E))), (y IN (d_fan (x , (V , E)))) |- ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((((COND ((CARD (((set_of_edge (pr2 y)) V) E)) > (NUMERAL (BIT1 _0)))) ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN f3 * part cd_fan c, f0 c, f1 f2 c==> ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= cCOND c> cCARD * * * part cset_of_edge cpr2 f3 f1 f2 cNUMERAL cBIT1 c_0 cazim f0 cpr2 f3 cpr3 f3 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cazim f0 cpr2 f3 cpr3 f3 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3
- (~ (x = (pr3 y))) |- (((~ ((pr3 y) = x)) ==> (((pr3 y) = x) = F)) = (((pr3 y) = x) = F))
T c==> c~ c= f0 cpr3 f1 c= c==> c~ c= cpr3 f1 f0 c= c= cpr3 f1 f0 cF c= c= cpr3 f1 f0 cF
- ((DISJOINT (x INSERT ((pr3 y) INSERT EMPTY))) ((pr2 y) INSERT EMPTY)) |- (((DISJOINT (x INSERT ((pr3 y) INSERT EMPTY))) ((pr2 y) INSERT EMPTY)) = T)
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT cpr3 f1 part cEMPTY * * part cINSERT cpr2 f1 part cEMPTY c= cDISJOINT * * part cINSERT f0 * * part cINSERT cpr3 f1 part cEMPTY * * part cINSERT cpr2 f1 part cEMPTY cT
- (~ (x = (pr3 y))) |- (((pr3 y) = x) = F)
T c==> c~ c= f0 cpr3 f1 c= c= cpr3 f1 f0 cF
