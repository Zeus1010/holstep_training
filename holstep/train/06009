N PATH_IMAGE_SUBPATH
C |- (!u. (!v. (!g. (((real_le (drop u)) (drop v)) ==> ((path_image (((subpath u) v) g)) = ((IMAGE g) (closed_interval ((CONS (u , v)) NIL))))))))
T c==> creal_le cdrop f0 cdrop f1 c= * part cpath_image * * * part csubpath f0 f1 f2 * * part cIMAGE f2 * part cclosed_interval cCONS c, f0 f1 cNIL
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D SEGMENT_1
A |- ((!a. (!b. ((closed_segment ((CONS (a , b)) NIL)) = (((COND ((real_le (drop a)) (drop b))) (closed_interval ((CONS (a , b)) NIL))) (closed_interval ((CONS (b , a)) NIL)))))) /\ (!a. (!b. ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a)))))))
T c/\ ! ! c= * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND creal_le cdrop b0 cdrop b1 * part cclosed_interval cCONS c, b0 b1 cNIL * part cclosed_interval cCONS c, b1 b0 cNIL ! ! c= * part copen_segment c, b0 b1 * * * part cCOND creal_le cdrop b0 cdrop b1 * part copen_interval c, b0 b1 * part copen_interval c, b1 b0
D PATH_IMAGE_SUBPATH_GEN
A |- (!u. (!v. (!g. ((path_image (((subpath u) v) g)) = ((IMAGE g) (closed_segment ((CONS (u , v)) NIL)))))))
T c= * part cpath_image * * * part csubpath f0 f1 f2 * * part cIMAGE f2 * part cclosed_segment cCONS c, f0 f1 cNIL
+ |- ((\v. (!g. ((path_image (((subpath u) v) g)) = ((IMAGE g) (closed_segment ((CONS (u , v)) NIL)))))) v)
T * / ! c= * part cpath_image * * * part csubpath f0 b0 b1 * * part cIMAGE b1 * part cclosed_segment cCONS c, f0 b0 cNIL f1
+ |- ((\q'. ((((real_le (drop u)) (drop v)) = p') ==> ((p' ==> (((path_image (((subpath u) v) g)) = ((IMAGE g) (closed_interval ((CONS (u , v)) NIL)))) = q')) ==> ((((real_le (drop u)) (drop v)) ==> ((path_image (((subpath u) v) g)) = ((IMAGE g) (closed_interval ((CONS (u , v)) NIL))))) = (p' ==> q'))))) q')
T * / c==> c= creal_le cdrop f0 cdrop f1 f2 c==> c==> f2 c= c= * part cpath_image * * * part csubpath f0 f1 f3 * * part cIMAGE f3 * part cclosed_interval cCONS c, f0 f1 cNIL b0 c= c==> creal_le cdrop f0 cdrop f1 c= * part cpath_image * * * part csubpath f0 f1 f3 * * part cIMAGE f3 * part cclosed_interval cCONS c, f0 f1 cNIL c==> f2 b0 f4
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- ((\b. ((closed_segment ((CONS (a , b)) NIL)) = (((COND ((real_le (drop a)) (drop b))) (closed_interval ((CONS (a , b)) NIL))) (closed_interval ((CONS (b , a)) NIL))))) b)
T * / c= * part cclosed_segment cCONS c, f0 b0 cNIL * * * part cCOND creal_le cdrop f0 cdrop b0 * part cclosed_interval cCONS c, f0 b0 cNIL * part cclosed_interval cCONS c, b0 f0 cNIL f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ ((real_le (drop u)) (drop v)) |- (((real_le (drop u)) (drop v)) /\ (((path_image (((subpath u) v) g)) = ((IMAGE g) (closed_interval ((CONS (u , v)) NIL)))) = T))
T c==> creal_le cdrop f0 cdrop f1 c/\ creal_le cdrop f0 cdrop f1 c= c= * part cpath_image * * * part csubpath f0 f1 f2 * * part cIMAGE f2 * part cclosed_interval cCONS c, f0 f1 cNIL cT
+ |- ((!g. t) = t)
T c= ! f0 f0
+ |- (((!p'. (!q'. ((((real_le (drop u)) (drop v)) = p') ==> ((p' ==> (((path_image (((subpath u) v) g)) = ((IMAGE g) (closed_interval ((CONS (u , v)) NIL)))) = q')) ==> ((((real_le (drop u)) (drop v)) ==> ((path_image (((subpath u) v) g)) = ((IMAGE g) (closed_interval ((CONS (u , v)) NIL))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((real_le (drop u)) (drop v)) = p') ==> ((p' ==> (((path_image (((subpath u) v) g)) = ((IMAGE g) (closed_interval ((CONS (u , v)) NIL)))) = q')) ==> ((((real_le (drop u)) (drop v)) ==> ((path_image (((subpath u) v) g)) = ((IMAGE g) (closed_interval ((CONS (u , v)) NIL))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((real_le (drop u)) (drop v)) = p') ==> ((p' ==> (((path_image (((subpath u) v) g)) = ((IMAGE g) (closed_interval ((CONS (u , v)) NIL)))) = q')) ==> ((((real_le (drop u)) (drop v)) ==> ((path_image (((subpath u) v) g)) = ((IMAGE g) (closed_interval ((CONS (u , v)) NIL))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= creal_le cdrop f0 cdrop f1 b0 c==> c==> b0 c= c= * part cpath_image * * * part csubpath f0 f1 f2 * * part cIMAGE f2 * part cclosed_interval cCONS c, f0 f1 cNIL b1 c= c==> creal_le cdrop f0 cdrop f1 c= * part cpath_image * * * part csubpath f0 f1 f2 * * part cIMAGE f2 * part cclosed_interval cCONS c, f0 f1 cNIL c==> b0 b1 * / ! c==> c= creal_le cdrop f0 cdrop f1 b0 c==> c==> b0 c= c= * part cpath_image * * * part csubpath f0 f1 f2 * * part cIMAGE f2 * part cclosed_interval cCONS c, f0 f1 cNIL b1 c= c==> creal_le cdrop f0 cdrop f1 c= * part cpath_image * * * part csubpath f0 f1 f2 * * part cIMAGE f2 * part cclosed_interval cCONS c, f0 f1 cNIL c==> b0 b1 f3 * / ! c==> c= creal_le cdrop f0 cdrop f1 b0 c==> c==> b0 c= c= * part cpath_image * * * part csubpath f0 f1 f2 * * part cIMAGE f2 * part cclosed_interval cCONS c, f0 f1 cNIL b1 c= c==> creal_le cdrop f0 cdrop f1 c= * part cpath_image * * * part csubpath f0 f1 f2 * * part cIMAGE f2 * part cclosed_interval cCONS c, f0 f1 cNIL c==> b0 b1 f3
+ |- (((!v. (!g. ((path_image (((subpath u) v) g)) = ((IMAGE g) (closed_segment ((CONS (u , v)) NIL)))))) ==> ((\v. (!g. ((path_image (((subpath u) v) g)) = ((IMAGE g) (closed_segment ((CONS (u , v)) NIL)))))) v)) = ((\v. (!g. ((path_image (((subpath u) v) g)) = ((IMAGE g) (closed_segment ((CONS (u , v)) NIL)))))) v))
T c= c==> ! ! c= * part cpath_image * * * part csubpath f0 b0 b1 * * part cIMAGE b1 * part cclosed_segment cCONS c, f0 b0 cNIL * / ! c= * part cpath_image * * * part csubpath f0 b0 b1 * * part cIMAGE b1 * part cclosed_segment cCONS c, f0 b0 cNIL f1 * / ! c= * part cpath_image * * * part csubpath f0 b0 b1 * * part cIMAGE b1 * part cclosed_segment cCONS c, f0 b0 cNIL f1
+ ((real_le (drop u)) (drop v)) |- (((~ T) ==> ((closed_interval ((CONS (v , u)) NIL)) = e')) ==> ((((COND ((real_le (drop u)) (drop v))) (closed_interval ((CONS (u , v)) NIL))) (closed_interval ((CONS (v , u)) NIL))) = (((COND T) (closed_interval ((CONS (u , v)) NIL))) e')))
T c==> creal_le cdrop f0 cdrop f1 c==> c==> c~ cT c= * part cclosed_interval cCONS c, f1 f0 cNIL f2 c= * * * part cCOND creal_le cdrop f0 cdrop f1 * part cclosed_interval cCONS c, f0 f1 cNIL * part cclosed_interval cCONS c, f1 f0 cNIL * * * part cCOND cT * part cclosed_interval cCONS c, f0 f1 cNIL f2
- |- (((!b. ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a))))) ==> ((\b. ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a))))) b)) = ((\b. ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a))))) b))
T c= c==> ! c= * part copen_segment c, f0 b0 * * * part cCOND creal_le cdrop f0 cdrop b0 * part copen_interval c, f0 b0 * part copen_interval c, b0 f0 * / c= * part copen_segment c, f0 b0 * * * part cCOND creal_le cdrop f0 cdrop b0 * part copen_interval c, f0 b0 * part copen_interval c, b0 f0 f1 * / c= * part copen_segment c, f0 b0 * * * part cCOND creal_le cdrop f0 cdrop b0 * part copen_interval c, f0 b0 * part copen_interval c, b0 f0 f1
- |- (((!a. (!b. ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a)))))) ==> ((\a. (!b. ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a)))))) a)) = ((\a. (!b. ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a)))))) a))
T c= c==> ! ! c= * part copen_segment c, b0 b1 * * * part cCOND creal_le cdrop b0 cdrop b1 * part copen_interval c, b0 b1 * part copen_interval c, b1 b0 * / ! c= * part copen_segment c, b0 b1 * * * part cCOND creal_le cdrop b0 cdrop b1 * part copen_interval c, b0 b1 * part copen_interval c, b1 b0 f0 * / ! c= * part copen_segment c, b0 b1 * * * part cCOND creal_le cdrop b0 cdrop b1 * part copen_interval c, b0 b1 * part copen_interval c, b1 b0 f0
- T |- (T = T)
T c==> cT c= cT cT
- |- ((\a. (!b. ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a)))))) a)
T * / ! c= * part copen_segment c, b0 b1 * * * part cCOND creal_le cdrop b0 cdrop b1 * part copen_interval c, b0 b1 * part copen_interval c, b1 b0 f0
- |- ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a))))
T c= * part copen_segment c, f0 f1 * * * part cCOND creal_le cdrop f0 cdrop f1 * part copen_interval c, f0 f1 * part copen_interval c, f1 f0
- (~ T) |- (T = F)
T c==> c~ cT c= cT cF
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- |- ((\b. ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a))))) b)
T * / c= * part copen_segment c, f0 b0 * * * part cCOND creal_le cdrop f0 cdrop b0 * part copen_interval c, f0 b0 * part copen_interval c, b0 f0 f1
