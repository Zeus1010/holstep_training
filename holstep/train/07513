N Hypermap.lemma_walkup_count_faces
C |- (!H. (!x. (((x IN (dart H)) /\ ((dart_nondegenerate H) x)) ==> ((number_of_faces H) = (number_of_faces ((edge_walkup H) x))))))
T c==> c/\ cIN f0 * part cdart f1 cdart_nondegenerate f1 f0 c= cnumber_of_faces f1 cnumber_of_faces cedge_walkup f1 f0
D TRUTH
A |- T
T cT
D Hypermap.number_of_faces
A |- (!H. ((number_of_faces H) = (CARD (face_set H))))
T c= cnumber_of_faces f0 cCARD * part cface_set f0
D Hypermap.dart_nondegenerate
A |- (!H. (!x. (((dart_nondegenerate H) x) = ((~ (((edge_map H) x) = x)) /\ ((~ (((node_map H) x) = x)) /\ (~ (((face_map H) x) = x)))))))
T c= cdart_nondegenerate f0 f1 c/\ c~ c= cedge_map f0 f1 f1 c/\ c~ c= cnode_map f0 f1 f1 c~ c= cface_map f0 f1 f1
D Hypermap.lemma_walkup_faces
A |- (!H. (!x. ((x IN (dart H)) ==> (((face_set H) DELETE ((face H) x)) = ((face_set ((edge_walkup H) x)) DELETE ((face ((edge_walkup H) x)) ((inverse (face_map H)) x)))))))
T c==> cIN f0 * part cdart f1 c= * * part cDELETE * part cface_set f1 * * part cface f1 f0 * * part cDELETE * part cface_set cedge_walkup f1 f0 * * part cface cedge_walkup f1 f0 cinverse * part cface_map f1 f0
D Hypermap.lemma_in_face_set
A |- (!H. (!x. ((x IN (dart H)) = (((face H) x) IN (face_set H)))))
T c= cIN f0 * part cdart f1 cIN * * part cface f1 f0 * part cface_set f1
D Hypermap.lemma_face_map_walkup_in_dart
A |- (!H. (!x. (((x IN (dart H)) /\ (~ (((face_map H) x) = x))) ==> ((((face_map H) x) IN (dart ((edge_walkup H) x))) /\ (((inverse (face_map H)) x) IN (dart ((edge_walkup H) x)))))))
T c==> c/\ cIN f0 * part cdart f1 c~ c= cface_map f1 f0 f0 c/\ cIN cface_map f1 f0 * part cdart cedge_walkup f1 f0 cIN cinverse * part cface_map f1 f0 * part cdart cedge_walkup f1 f0
D Hypermap.CARD_MINUS_ONE
A |- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))))
T c==> c/\ cFINITE f0 cIN f1 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 f1 cNUMERAL cBIT1 c_0
D Hypermap.FINITE_HYPERMAP_ORBITS
A |- (!H. ((FINITE (edge_set H)) /\ ((FINITE (node_set H)) /\ (FINITE (face_set H)))))
T c/\ cFINITE * part cedge_set f0 c/\ cFINITE * part cnode_set f0 cFINITE * part cface_set f0
+ |- ((((inverse (face_map H)) x) IN (dart ((edge_walkup H) x))) ==> (((CARD ((face_set ((edge_walkup H) x)) DELETE ((face ((edge_walkup H) x)) ((inverse (face_map H)) x)))) + (NUMERAL (BIT1 _0))) = (CARD (face_set ((edge_walkup H) x)))))
T c==> cIN cinverse * part cface_map f0 f1 * part cdart cedge_walkup f0 f1 c= c+ cCARD * * part cDELETE * part cface_set cedge_walkup f0 f1 * * part cface cedge_walkup f0 f1 cinverse * part cface_map f0 f1 cNUMERAL cBIT1 c_0 cCARD * part cface_set cedge_walkup f0 f1
+ (((face ((edge_walkup H) x)) ((inverse (face_map H)) x)) IN (face_set ((edge_walkup H) x))) |- ((((CARD (face_set ((edge_walkup H) x))) = ((CARD ((face_set ((edge_walkup H) x)) DELETE ((face ((edge_walkup H) x)) ((inverse (face_map H)) x)))) + (NUMERAL (BIT1 _0)))) ==> (((CARD ((face_set ((edge_walkup H) x)) DELETE ((face ((edge_walkup H) x)) ((inverse (face_map H)) x)))) + (NUMERAL (BIT1 _0))) = (CARD (face_set ((edge_walkup H) x))))) = ((((FINITE (face_set ((edge_walkup H) x))) /\ (((face ((edge_walkup H) x)) ((inverse (face_map H)) x)) IN (face_set ((edge_walkup H) x)))) ==> ((CARD (face_set ((edge_walkup H) x))) = ((CARD ((face_set ((edge_walkup H) x)) DELETE ((face ((edge_walkup H) x)) ((inverse (face_map H)) x)))) + (NUMERAL (BIT1 _0))))) ==> (((CARD ((face_set ((edge_walkup H) x)) DELETE ((face ((edge_walkup H) x)) ((inverse (face_map H)) x)))) + (NUMERAL (BIT1 _0))) = (CARD (face_set ((edge_walkup H) x))))))
T c==> cIN * * part cface cedge_walkup f0 f1 cinverse * part cface_map f0 f1 * part cface_set cedge_walkup f0 f1 c= c==> c= cCARD * part cface_set cedge_walkup f0 f1 c+ cCARD * * part cDELETE * part cface_set cedge_walkup f0 f1 * * part cface cedge_walkup f0 f1 cinverse * part cface_map f0 f1 cNUMERAL cBIT1 c_0 c= c+ cCARD * * part cDELETE * part cface_set cedge_walkup f0 f1 * * part cface cedge_walkup f0 f1 cinverse * part cface_map f0 f1 cNUMERAL cBIT1 c_0 cCARD * part cface_set cedge_walkup f0 f1 c==> c==> c/\ cFINITE * part cface_set cedge_walkup f0 f1 cIN * * part cface cedge_walkup f0 f1 cinverse * part cface_map f0 f1 * part cface_set cedge_walkup f0 f1 c= cCARD * part cface_set cedge_walkup f0 f1 c+ cCARD * * part cDELETE * part cface_set cedge_walkup f0 f1 * * part cface cedge_walkup f0 f1 cinverse * part cface_map f0 f1 cNUMERAL cBIT1 c_0 c= c+ cCARD * * part cDELETE * part cface_set cedge_walkup f0 f1 * * part cface cedge_walkup f0 f1 cinverse * part cface_map f0 f1 cNUMERAL cBIT1 c_0 cCARD * part cface_set cedge_walkup f0 f1
+ |- ((FINITE (node_set H)) /\ (FINITE (face_set H)))
T c/\ cFINITE * part cnode_set f0 cFINITE * part cface_set f0
+ |- (((!x. (((dart_nondegenerate H) x) = ((~ (((edge_map H) x) = x)) /\ ((~ (((node_map H) x) = x)) /\ (~ (((face_map H) x) = x)))))) ==> ((\x. (((dart_nondegenerate H) x) = ((~ (((edge_map H) x) = x)) /\ ((~ (((node_map H) x) = x)) /\ (~ (((face_map H) x) = x)))))) x)) = ((\x. (((dart_nondegenerate H) x) = ((~ (((edge_map H) x) = x)) /\ ((~ (((node_map H) x) = x)) /\ (~ (((face_map H) x) = x)))))) x))
T c= c==> ! c= cdart_nondegenerate f0 b0 c/\ c~ c= cedge_map f0 b0 b0 c/\ c~ c= cnode_map f0 b0 b0 c~ c= cface_map f0 b0 b0 * / c= cdart_nondegenerate f0 b0 c/\ c~ c= cedge_map f0 b0 b0 c/\ c~ c= cnode_map f0 b0 b0 c~ c= cface_map f0 b0 b0 f1 * / c= cdart_nondegenerate f0 b0 c/\ c~ c= cedge_map f0 b0 b0 c/\ c~ c= cnode_map f0 b0 b0 c~ c= cface_map f0 b0 b0 f1
+ (~ (((face_map H) x) = x)), (x IN (dart H)) |- ((((face_map H) x) IN (dart ((edge_walkup H) x))) /\ (((inverse (face_map H)) x) IN (dart ((edge_walkup H) x))))
T c==> c~ c= cface_map f0 f1 f1 c==> cIN f1 * part cdart f0 c/\ cIN cface_map f0 f1 * part cdart cedge_walkup f0 f1 cIN cinverse * part cface_map f0 f1 * part cdart cedge_walkup f0 f1
+ |- ((\H. (!x. ((x IN (dart H)) ==> (((face_set H) DELETE ((face H) x)) = ((face_set ((edge_walkup H) x)) DELETE ((face ((edge_walkup H) x)) ((inverse (face_map H)) x))))))) H)
T * / ! c==> cIN b1 * part cdart b0 c= * * part cDELETE * part cface_set b0 * * part cface b0 b1 * * part cDELETE * part cface_set cedge_walkup b0 b1 * * part cface cedge_walkup b0 b1 cinverse * part cface_map b0 b1 f0
+ |- ((((face ((edge_walkup H) x)) ((inverse (face_map H)) x)) IN (face_set ((edge_walkup H) x))) ==> (((CARD ((face_set ((edge_walkup H) x)) DELETE ((face ((edge_walkup H) x)) ((inverse (face_map H)) x)))) + (NUMERAL (BIT1 _0))) = (CARD (face_set ((edge_walkup H) x)))))
T c==> cIN * * part cface cedge_walkup f0 f1 cinverse * part cface_map f0 f1 * part cface_set cedge_walkup f0 f1 c= c+ cCARD * * part cDELETE * part cface_set cedge_walkup f0 f1 * * part cface cedge_walkup f0 f1 cinverse * part cface_map f0 f1 cNUMERAL cBIT1 c_0 cCARD * part cface_set cedge_walkup f0 f1
+ |- ((\x. ((x IN (dart H)) ==> (((face_set H) DELETE ((face H) x)) = ((face_set ((edge_walkup H) x)) DELETE ((face ((edge_walkup H) x)) ((inverse (face_map H)) x)))))) x)
T * / c==> cIN b0 * part cdart f0 c= * * part cDELETE * part cface_set f0 * * part cface f0 b0 * * part cDELETE * part cface_set cedge_walkup f0 b0 * * part cface cedge_walkup f0 b0 cinverse * part cface_map f0 b0 f1
+ |- (((!H. ((FINITE (edge_set H)) /\ ((FINITE (node_set H)) /\ (FINITE (face_set H))))) ==> ((\H. ((FINITE (edge_set H)) /\ ((FINITE (node_set H)) /\ (FINITE (face_set H))))) H)) = ((\H. ((FINITE (edge_set H)) /\ ((FINITE (node_set H)) /\ (FINITE (face_set H))))) H))
T c= c==> ! c/\ cFINITE * part cedge_set b0 c/\ cFINITE * part cnode_set b0 cFINITE * part cface_set b0 * / c/\ cFINITE * part cedge_set b0 c/\ cFINITE * part cnode_set b0 cFINITE * part cface_set b0 f0 * / c/\ cFINITE * part cedge_set b0 c/\ cFINITE * part cnode_set b0 cFINITE * part cface_set b0 f0
+ (~ (((face_map H) x) = x)), (x IN (dart H)) |- (((CARD (face_set H)) = ((CARD ((face_set H) DELETE ((face H) x))) + (NUMERAL (BIT1 _0)))) ==> ((((face_set H) DELETE ((face H) x)) = ((face_set ((edge_walkup H) x)) DELETE ((face ((edge_walkup H) x)) ((inverse (face_map H)) x)))) ==> ((CARD (face_set H)) = (CARD (face_set ((edge_walkup H) x))))))
T c==> c~ c= cface_map f0 f1 f1 c==> cIN f1 * part cdart f0 c==> c= cCARD * part cface_set f0 c+ cCARD * * part cDELETE * part cface_set f0 * * part cface f0 f1 cNUMERAL cBIT1 c_0 c==> c= * * part cDELETE * part cface_set f0 * * part cface f0 f1 * * part cDELETE * part cface_set cedge_walkup f0 f1 * * part cface cedge_walkup f0 f1 cinverse * part cface_map f0 f1 c= cCARD * part cface_set f0 cCARD * part cface_set cedge_walkup f0 f1
- (~ (((node_map H) x) = x)) |- (~ (x = ((node_map H) x)))
T c==> c~ c= cnode_map f0 f1 f1 c~ c= f1 cnode_map f0 f1
+ |- (((CARD ((face_set ((edge_walkup H) x)) DELETE ((face ((edge_walkup H) x)) ((inverse (face_map H)) x)))) + (NUMERAL (BIT1 _0))) = ((CARD ((face_set ((edge_walkup H) x)) DELETE ((face ((edge_walkup H) x)) ((inverse (face_map H)) x)))) + (NUMERAL (BIT1 _0))))
T c= c+ cCARD * * part cDELETE * part cface_set cedge_walkup f0 f1 * * part cface cedge_walkup f0 f1 cinverse * part cface_map f0 f1 cNUMERAL cBIT1 c_0 c+ cCARD * * part cDELETE * part cface_set cedge_walkup f0 f1 * * part cface cedge_walkup f0 f1 cinverse * part cface_map f0 f1 cNUMERAL cBIT1 c_0
+ |- (!x. (((FINITE (face_set H)) /\ (x IN (face_set H))) ==> ((CARD (face_set H)) = ((CARD ((face_set H) DELETE x)) + (NUMERAL (BIT1 _0))))))
T c==> c/\ cFINITE * part cface_set f0 cIN f1 * part cface_set f0 c= cCARD * part cface_set f0 c+ cCARD * * part cDELETE * part cface_set f0 f1 cNUMERAL cBIT1 c_0
+ |- ((\x. (((dart_nondegenerate H) x) = ((~ (((edge_map H) x) = x)) /\ ((~ (((node_map H) x) = x)) /\ (~ (((face_map H) x) = x)))))) x)
T * / c= cdart_nondegenerate f0 b0 c/\ c~ c= cedge_map f0 b0 b0 c/\ c~ c= cnode_map f0 b0 b0 c~ c= cface_map f0 b0 b0 f1
+ |- (((!H. (!x. ((x IN (dart H)) = (((face H) x) IN (face_set H))))) ==> ((\H. (!x. ((x IN (dart H)) = (((face H) x) IN (face_set H))))) H)) = ((\H. (!x. ((x IN (dart H)) = (((face H) x) IN (face_set H))))) H))
T c= c==> ! ! c= cIN b1 * part cdart b0 cIN * * part cface b0 b1 * part cface_set b0 * / ! c= cIN b1 * part cdart b0 cIN * * part cface b0 b1 * part cface_set b0 f0 * / ! c= cIN b1 * part cdart b0 cIN * * part cface b0 b1 * part cface_set b0 f0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (~ (((node_map H) x) = x)) |- (((~ (x = ((node_map H) x))) ==> ((x = ((node_map H) x)) = F)) = ((x = ((node_map H) x)) = F))
T c==> c~ c= cnode_map f0 f1 f1 c= c==> c~ c= f1 cnode_map f0 f1 c= c= f1 cnode_map f0 f1 cF c= c= f1 cnode_map f0 f1 cF
+ (~ (((face_map H) x) = x)), (x IN (dart H)) |- ((x IN (dart H)) /\ (~ (((face_map H) x) = x)))
T c==> c~ c= cface_map f0 f1 f1 c==> cIN f1 * part cdart f0 c/\ cIN f1 * part cdart f0 c~ c= cface_map f0 f1 f1
+ |- ((\x. (((FINITE (face_set ((edge_walkup H) x))) /\ (x IN (face_set ((edge_walkup H) x)))) ==> ((CARD (face_set ((edge_walkup H) x))) = ((CARD ((face_set ((edge_walkup H) x)) DELETE x)) + (NUMERAL (BIT1 _0)))))) ((face ((edge_walkup H) x)) ((inverse (face_map H)) x)))
T * / c==> c/\ cFINITE * part cface_set cedge_walkup f0 f1 cIN b0 * part cface_set cedge_walkup f0 f1 c= cCARD * part cface_set cedge_walkup f0 f1 c+ cCARD * * part cDELETE * part cface_set cedge_walkup f0 f1 b0 cNUMERAL cBIT1 c_0 * * part cface cedge_walkup f0 f1 cinverse * part cface_map f0 f1
+ |- (((!H. (!x. (((dart_nondegenerate H) x) = ((~ (((edge_map H) x) = x)) /\ ((~ (((node_map H) x) = x)) /\ (~ (((face_map H) x) = x))))))) ==> ((\H. (!x. (((dart_nondegenerate H) x) = ((~ (((edge_map H) x) = x)) /\ ((~ (((node_map H) x) = x)) /\ (~ (((face_map H) x) = x))))))) H)) = ((\H. (!x. (((dart_nondegenerate H) x) = ((~ (((edge_map H) x) = x)) /\ ((~ (((node_map H) x) = x)) /\ (~ (((face_map H) x) = x))))))) H))
T c= c==> ! ! c= cdart_nondegenerate b0 b1 c/\ c~ c= cedge_map b0 b1 b1 c/\ c~ c= cnode_map b0 b1 b1 c~ c= cface_map b0 b1 b1 * / ! c= cdart_nondegenerate b0 b1 c/\ c~ c= cedge_map b0 b1 b1 c/\ c~ c= cnode_map b0 b1 b1 c~ c= cface_map b0 b1 b1 f0 * / ! c= cdart_nondegenerate b0 b1 c/\ c~ c= cedge_map b0 b1 b1 c/\ c~ c= cnode_map b0 b1 b1 c~ c= cface_map b0 b1 b1 f0
- (((edge_map H) x) = x) |- (x = ((edge_map H) x))
T c==> c= cedge_map f0 f1 f1 c= f1 cedge_map f0 f1
+ ((x IN (dart H)) /\ ((dart_nondegenerate H) x)) |- (((x IN (dart H)) /\ ((dart_nondegenerate H) x)) /\ ((number_of_faces H) = (number_of_faces ((edge_walkup H) x))))
T c==> c/\ cIN f0 * part cdart f1 cdart_nondegenerate f1 f0 c/\ c/\ cIN f0 * part cdart f1 cdart_nondegenerate f1 f0 c= cnumber_of_faces f1 cnumber_of_faces cedge_walkup f1 f0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (((face ((edge_walkup H) x)) ((inverse (face_map H)) x)) IN (face_set ((edge_walkup H) x))) |- ((((face ((edge_walkup H) x)) ((inverse (face_map H)) x)) IN (face_set ((edge_walkup H) x))) /\ (((CARD ((face_set ((edge_walkup H) x)) DELETE ((face ((edge_walkup H) x)) ((inverse (face_map H)) x)))) + (NUMERAL (BIT1 _0))) = (CARD (face_set ((edge_walkup H) x)))))
T c==> cIN * * part cface cedge_walkup f0 f1 cinverse * part cface_map f0 f1 * part cface_set cedge_walkup f0 f1 c/\ cIN * * part cface cedge_walkup f0 f1 cinverse * part cface_map f0 f1 * part cface_set cedge_walkup f0 f1 c= c+ cCARD * * part cDELETE * part cface_set cedge_walkup f0 f1 * * part cface cedge_walkup f0 f1 cinverse * part cface_map f0 f1 cNUMERAL cBIT1 c_0 cCARD * part cface_set cedge_walkup f0 f1
+ (~ (((face_map H) x) = x)), (x IN (dart H)) |- (((((inverse (face_map H)) x) IN (dart ((edge_walkup H) x))) ==> (((CARD ((face_set ((edge_walkup H) x)) DELETE ((face ((edge_walkup H) x)) ((inverse (face_map H)) x)))) + (NUMERAL (BIT1 _0))) = (CARD (face_set ((edge_walkup H) x))))) = (((CARD ((face_set ((edge_walkup H) x)) DELETE ((face ((edge_walkup H) x)) ((inverse (face_map H)) x)))) + (NUMERAL (BIT1 _0))) = (CARD (face_set ((edge_walkup H) x)))))
T c==> c~ c= cface_map f0 f1 f1 c==> cIN f1 * part cdart f0 c= c==> cIN cinverse * part cface_map f0 f1 * part cdart cedge_walkup f0 f1 c= c+ cCARD * * part cDELETE * part cface_set cedge_walkup f0 f1 * * part cface cedge_walkup f0 f1 cinverse * part cface_map f0 f1 cNUMERAL cBIT1 c_0 cCARD * part cface_set cedge_walkup f0 f1 c= c+ cCARD * * part cDELETE * part cface_set cedge_walkup f0 f1 * * part cface cedge_walkup f0 f1 cinverse * part cface_map f0 f1 cNUMERAL cBIT1 c_0 cCARD * part cface_set cedge_walkup f0 f1
+ (~ (((face_map H) x) = x)), (x IN (dart H)) |- (((CARD ((face_set ((edge_walkup H) x)) DELETE ((face ((edge_walkup H) x)) ((inverse (face_map H)) x)))) + (NUMERAL (BIT1 _0))) = (CARD (face_set ((edge_walkup H) x))))
T c==> c~ c= cface_map f0 f1 f1 c==> cIN f1 * part cdart f0 c= c+ cCARD * * part cDELETE * part cface_set cedge_walkup f0 f1 * * part cface cedge_walkup f0 f1 cinverse * part cface_map f0 f1 cNUMERAL cBIT1 c_0 cCARD * part cface_set cedge_walkup f0 f1
+ (~ (((face_map H) x) = x)), (x IN (dart H)) |- ((number_of_faces H) = (number_of_faces ((edge_walkup H) x)))
T c==> c~ c= cface_map f0 f1 f1 c==> cIN f1 * part cdart f0 c= cnumber_of_faces f0 cnumber_of_faces cedge_walkup f0 f1
+ |- (((!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) ==> ((\s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) (face_set H))) = ((\s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) (face_set H)))
T c= c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 * / ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 * part cface_set f0 * / ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 * part cface_set f0
+ |- ((((~ (((edge_map H) x) = x)) /\ ((~ (((node_map H) x) = x)) /\ (~ (((face_map H) x) = x)))) ==> ((number_of_faces H) = (number_of_faces ((edge_walkup H) x)))) = (((dart_nondegenerate H) x) ==> ((number_of_faces H) = (number_of_faces ((edge_walkup H) x)))))
T c= c==> c/\ c~ c= cedge_map f0 f1 f1 c/\ c~ c= cnode_map f0 f1 f1 c~ c= cface_map f0 f1 f1 c= cnumber_of_faces f0 cnumber_of_faces cedge_walkup f0 f1 c==> cdart_nondegenerate f0 f1 c= cnumber_of_faces f0 cnumber_of_faces cedge_walkup f0 f1
+ ((~ (((edge_map H) x) = x)) /\ ((~ (((node_map H) x) = x)) /\ (~ (((face_map H) x) = x)))), (x IN (dart H)) |- ((number_of_faces H) = (number_of_faces ((edge_walkup H) x)))
T c==> c/\ c~ c= cedge_map f0 f1 f1 c/\ c~ c= cnode_map f0 f1 f1 c~ c= cface_map f0 f1 f1 c==> cIN f1 * part cdart f0 c= cnumber_of_faces f0 cnumber_of_faces cedge_walkup f0 f1
- (~ (((edge_map H) x) = x)) |- ((x = ((edge_map H) x)) = F)
T c==> c~ c= cedge_map f0 f1 f1 c= c= f1 cedge_map f0 f1 cF
- (~ (((node_map H) x) = x)) |- ((((node_map H) x) = x) = F)
T c==> c~ c= cnode_map f0 f1 f1 c= c= cnode_map f0 f1 f1 cF
- (x = ((edge_map H) x)) |- (((edge_map H) x) = x)
T c==> c= f0 cedge_map f1 f0 c= cedge_map f1 f0 f0
- (x = ((face_map H) x)) |- (((face_map H) x) = x)
T c==> c= f0 cface_map f1 f0 c= cface_map f1 f0 f0
- |- ((FINITE (edge_set H)) = T)
T c= cFINITE * part cedge_set f0 cT
- (x = ((node_map H) x)) |- (((node_map H) x) = x)
T c==> c= f0 cnode_map f1 f0 c= cnode_map f1 f0 f0
- (~ (((edge_map H) x) = x)) |- ((((edge_map H) x) = x) = F)
T c==> c~ c= cedge_map f0 f1 f1 c= c= cedge_map f0 f1 f1 cF
- (~ (((face_map H) x) = x)) |- ((((face_map H) x) = x) = F)
T c==> c~ c= cface_map f0 f1 f1 c= c= cface_map f0 f1 f1 cF
- (~ (((edge_map H) x) = x)) |- (((~ (x = ((edge_map H) x))) ==> ((x = ((edge_map H) x)) = F)) = ((x = ((edge_map H) x)) = F))
T c==> c~ c= cedge_map f0 f1 f1 c= c==> c~ c= f1 cedge_map f0 f1 c= c= f1 cedge_map f0 f1 cF c= c= f1 cedge_map f0 f1 cF
- (((node_map H) x) = x) |- (x = ((node_map H) x))
T c==> c= cnode_map f0 f1 f1 c= f1 cnode_map f0 f1
- (((face_map H) x) = x) |- (x = ((face_map H) x))
T c==> c= cface_map f0 f1 f1 c= f1 cface_map f0 f1
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((FINITE (node_set H)) = T)
T c= cFINITE * part cnode_set f0 cT
- |- (FINITE (edge_set H))
T cFINITE * part cedge_set f0
- (~ (((edge_map H) x) = x)) |- (~ (x = ((edge_map H) x)))
T c==> c~ c= cedge_map f0 f1 f1 c~ c= f1 cedge_map f0 f1
- (~ (((face_map H) x) = x)) |- (((~ (x = ((face_map H) x))) ==> ((x = ((face_map H) x)) = F)) = ((x = ((face_map H) x)) = F))
T c==> c~ c= cface_map f0 f1 f1 c= c==> c~ c= f1 cface_map f0 f1 c= c= f1 cface_map f0 f1 cF c= c= f1 cface_map f0 f1 cF
- |- (FINITE (node_set H))
T cFINITE * part cnode_set f0
- (~ (((node_map H) x) = x)) |- ((x = ((node_map H) x)) = F)
T c==> c~ c= cnode_map f0 f1 f1 c= c= f1 cnode_map f0 f1 cF
- (~ (((face_map H) x) = x)) |- ((x = ((face_map H) x)) = F)
T c==> c~ c= cface_map f0 f1 f1 c= c= f1 cface_map f0 f1 cF
- (~ (((face_map H) x) = x)) |- (~ (x = ((face_map H) x)))
T c==> c~ c= cface_map f0 f1 f1 c~ c= f1 cface_map f0 f1
