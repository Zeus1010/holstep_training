N Reduction1.sizel_faceListAt_seed
C |- (!p. ((sizel (faceListAt (Seed p))) = (countVertices (Seed p))))
T c= csizel cfaceListAt cSeed f0 ccountVertices cSeed f0
D TRUTH
A |- T
T cT
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D LENGTH_REPLICATE
A |- (!n. (!x. ((LENGTH ((REPLICATE n) x)) = n)))
T c= cLENGTH cREPLICATE f0 f1 f0
D Tame_defs.graphl
A |- (!n. ((graphl n) = ((LET (\vs. (LET_END ((LET (\fs. (LET_END ((((Graph fs) n) ((REPLICATE n) fs)) ((REPLICATE n) (NUMERAL _0)))))) ((CONS (vs , T)) ((CONS ((REVERSE vs) , F)) NIL)))))) ((upt (NUMERAL _0)) n))))
T c= cgraphl f0 cLET / cLET_END cLET / cLET_END cGraph b1 f0 cREPLICATE f0 b1 cREPLICATE f0 cNUMERAL c_0 cCONS c, b0 cT cCONS c, cREVERSE b0 cF cNIL cupt cNUMERAL c_0 f0
D Tame_defs.SEED
A |- (!p. ((Seed p) = (graphl (maxGon p))))
T c= cSeed f0 cgraphl cmaxGon f0
D Seq.size
A |- (sizel = LENGTH)
T c= part csizel part cLENGTH
D Tame_list.countVertices
A |- ((countVertices ((((Graph fs) n) f) h)) = n)
T c= ccountVertices cGraph f0 f1 f2 f3 f1
D Tame_list.FACE_LIST_AT
A |- ((faceListAt ((((Graph fs) n) f) h)) = f)
T c= cfaceListAt cGraph f0 f1 f2 f3 f2
+ |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
+ |- (((!n. ((graphl n) = ((LET (\vs. (LET_END ((LET (\fs. (LET_END ((((Graph fs) n) ((REPLICATE n) fs)) ((REPLICATE n) (NUMERAL _0)))))) ((CONS (vs , T)) ((CONS ((REVERSE vs) , F)) NIL)))))) ((upt (NUMERAL _0)) n)))) ==> ((\n. ((graphl n) = ((LET (\vs. (LET_END ((LET (\fs. (LET_END ((((Graph fs) n) ((REPLICATE n) fs)) ((REPLICATE n) (NUMERAL _0)))))) ((CONS (vs , T)) ((CONS ((REVERSE vs) , F)) NIL)))))) ((upt (NUMERAL _0)) n)))) n)) = ((\n. ((graphl n) = ((LET (\vs. (LET_END ((LET (\fs. (LET_END ((((Graph fs) n) ((REPLICATE n) fs)) ((REPLICATE n) (NUMERAL _0)))))) ((CONS (vs , T)) ((CONS ((REVERSE vs) , F)) NIL)))))) ((upt (NUMERAL _0)) n)))) n))
T c= c==> ! c= cgraphl b0 cLET / cLET_END cLET / cLET_END cGraph b2 b0 cREPLICATE b0 b2 cREPLICATE b0 cNUMERAL c_0 cCONS c, b1 cT cCONS c, cREVERSE b1 cF cNIL cupt cNUMERAL c_0 b0 * / c= cgraphl b0 cLET / cLET_END cLET / cLET_END cGraph b2 b0 cREPLICATE b0 b2 cREPLICATE b0 cNUMERAL c_0 cCONS c, b1 cT cCONS c, cREVERSE b1 cF cNIL cupt cNUMERAL c_0 b0 f0 * / c= cgraphl b0 cLET / cLET_END cLET / cLET_END cGraph b2 b0 cREPLICATE b0 b2 cREPLICATE b0 cNUMERAL c_0 cCONS c, b1 cT cCONS c, cREVERSE b1 cF cNIL cupt cNUMERAL c_0 b0 f0
+ |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
- |- ((\x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s)))) x0)
T * / c==> c~ c= f0 cNIL c= clast b0 f0 cLAST f0 f1
- |- ((!s. (!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s))))) /\ ((cat = APPEND) /\ (all = ALL)))
T c/\ ! ! c==> c~ c= b0 cNIL c= clast b1 b0 cLAST b0 c/\ c= part ccat part cAPPEND c= part call part cALL
- |- (((!s. (!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s))))) ==> ((\s. (!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s))))) s)) = ((\s. (!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s))))) s))
T c= c==> ! ! c==> c~ c= b0 cNIL c= clast b1 b0 cLAST b0 * / ! c==> c~ c= b0 cNIL c= clast b1 b0 cLAST b0 f0 * / ! c==> c~ c= b0 cNIL c= clast b1 b0 cLAST b0 f0
+ |- ((!p. t) = t)
T c= ! f0 f0
+ |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
- |- ((filter = FILTER) /\ ((rev = REVERSE) /\ ((!s. (!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s))))) /\ ((cat = APPEND) /\ (all = ALL)))))
T c/\ c= part cfilter part cFILTER c/\ c= part crev part cREVERSE c/\ ! ! c==> c~ c= b0 cNIL c= clast b1 b0 cLAST b0 c/\ c= part ccat part cAPPEND c= part call part cALL
+ |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
- |- ((\s. (!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s))))) s)
T * / ! c==> c~ c= b0 cNIL c= clast b1 b0 cLAST b0 f0
- |- (all = ALL)
T c= part call part cALL
- |- ((rev = REVERSE) /\ ((!s. (!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s))))) /\ ((cat = APPEND) /\ (all = ALL))))
T c/\ c= part crev part cREVERSE c/\ ! ! c==> c~ c= b0 cNIL c= clast b1 b0 cLAST b0 c/\ c= part ccat part cAPPEND c= part call part cALL
+ |- (!p. ((sizel ((REPLICATE (maxGon p)) ((CONS (((upt (NUMERAL _0)) (maxGon p)) , T)) ((CONS ((REVERSE ((upt (NUMERAL _0)) (maxGon p))) , F)) NIL)))) = (maxGon p)))
T c= csizel cREPLICATE cmaxGon f0 cCONS c, cupt cNUMERAL c_0 cmaxGon f0 cT cCONS c, cREVERSE cupt cNUMERAL c_0 cmaxGon f0 cF cNIL cmaxGon f0
+ |- ((\n. ((graphl n) = ((LET (\vs. (LET_END ((LET (\fs. (LET_END ((((Graph fs) n) ((REPLICATE n) fs)) ((REPLICATE n) (NUMERAL _0)))))) ((CONS (vs , T)) ((CONS ((REVERSE vs) , F)) NIL)))))) ((upt (NUMERAL _0)) n)))) n)
T * / c= cgraphl b0 cLET / cLET_END cLET / cLET_END cGraph b2 b0 cREPLICATE b0 b2 cREPLICATE b0 cNUMERAL c_0 cCONS c, b1 cT cCONS c, cREVERSE b1 cF cNIL cupt cNUMERAL c_0 b0 f0
- |- (((~ (s = NIL)) ==> (((last x0) s) = (LAST s))) = T)
T c= c==> c~ c= f0 cNIL c= clast f1 f0 cLAST f0 cT
+ |- (((!f. (!x. (((LET f) x) = (f x)))) ==> ((\f. (!x. (((LET f) x) = (f x)))) f)) = ((\f. (!x. (((LET f) x) = (f x)))) f))
T c= c==> ! ! c= cLET b0 b1 * b0 b1 * / ! c= cLET b0 b1 * b0 b1 f0 * / ! c= cLET b0 b1 * b0 b1 f0
+ |- (((!x. ((LENGTH ((REPLICATE n) x)) = n)) ==> ((\x. ((LENGTH ((REPLICATE n) x)) = n)) x)) = ((\x. ((LENGTH ((REPLICATE n) x)) = n)) x))
T c= c==> ! c= cLENGTH cREPLICATE f0 b0 f0 * / c= cLENGTH cREPLICATE f0 b0 f0 f1 * / c= cLENGTH cREPLICATE f0 b0 f0 f1
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (T = (!p. ((sizel ((REPLICATE (maxGon p)) ((CONS (((upt (NUMERAL _0)) (maxGon p)) , T)) ((CONS ((REVERSE ((upt (NUMERAL _0)) (maxGon p))) , F)) NIL)))) = (maxGon p))))
T c= cT ! c= csizel cREPLICATE cmaxGon b0 cCONS c, cupt cNUMERAL c_0 cmaxGon b0 cT cCONS c, cREVERSE cupt cNUMERAL c_0 cmaxGon b0 cF cNIL cmaxGon b0
+ |- (((!p. ((Seed p) = (graphl (maxGon p)))) ==> ((\p. ((Seed p) = (graphl (maxGon p)))) p)) = ((\p. ((Seed p) = (graphl (maxGon p)))) p))
T c= c==> ! c= cSeed b0 cgraphl cmaxGon b0 * / c= cSeed b0 cgraphl cmaxGon b0 f0 * / c= cSeed b0 cgraphl cmaxGon b0 f0
- |- ((cat = APPEND) /\ (all = ALL))
T c/\ c= part ccat part cAPPEND c= part call part cALL
- |- (((!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s)))) ==> ((\x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s)))) x0)) = ((\x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s)))) x0))
T c= c==> ! c==> c~ c= f0 cNIL c= clast b0 f0 cLAST f0 * / c==> c~ c= f0 cNIL c= clast b0 f0 cLAST f0 f1 * / c==> c~ c= f0 cNIL c= clast b0 f0 cLAST f0 f1
- |- ((sizel = LENGTH) /\ ((filter = FILTER) /\ ((rev = REVERSE) /\ ((!s. (!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s))))) /\ ((cat = APPEND) /\ (all = ALL))))))
T c/\ c= part csizel part cLENGTH c/\ c= part cfilter part cFILTER c/\ c= part crev part cREVERSE c/\ ! ! c==> c~ c= b0 cNIL c= clast b1 b0 cLAST b0 c/\ c= part ccat part cAPPEND c= part call part cALL
- |- (cat = APPEND)
T c= part ccat part cAPPEND
- |- (rev = REVERSE)
T c= part crev part cREVERSE
+ |- ((!p. ((sizel ((REPLICATE (maxGon p)) ((CONS (((upt (NUMERAL _0)) (maxGon p)) , T)) ((CONS ((REVERSE ((upt (NUMERAL _0)) (maxGon p))) , F)) NIL)))) = (maxGon p))) = (!p. ((sizel (faceListAt (Seed p))) = (countVertices (Seed p)))))
T c= ! c= csizel cREPLICATE cmaxGon b0 cCONS c, cupt cNUMERAL c_0 cmaxGon b0 cT cCONS c, cREVERSE cupt cNUMERAL c_0 cmaxGon b0 cF cNIL cmaxGon b0 ! c= csizel cfaceListAt cSeed b0 ccountVertices cSeed b0
+ |- ((\n. (!x. ((LENGTH ((REPLICATE n) x)) = n))) n)
T * / ! c= cLENGTH cREPLICATE b0 b1 b0 f0
- |- ((~ (s = NIL)) ==> (((last x0) s) = (LAST s)))
T c==> c~ c= f0 cNIL c= clast f1 f0 cLAST f0
- |- (((\fs. (f fs)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
