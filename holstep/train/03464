N Oxlzlez.LEAF_RANK_SUC_INJ
C |- (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i))))))))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c< cNUMERAL cBIT1 c_0 f4 c~ c= * f5 f6 * f5 cSUC f6
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D RIGHT_OR_FORALL_THM
A |- (!P. (!Q. ((P \/ (!x. (Q x))) = (!x. (P \/ (Q x))))))
T c= c\/ f0 ! * f1 b0 ! c\/ f0 * f1 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D ADD1
A |- (!m. ((SUC m) = (m + (NUMERAL (BIT1 _0)))))
T c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_eq
A |- (!x. (!y. ((x = y) = ((real_of_int x) = (real_of_int y)))))
T c= c= f0 f1 c= creal_of_int f0 creal_of_int f1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_OF_NUM_EQ
A |- (!m. (!n. (((int_of_num m) = (int_of_num n)) = (m = n))))
T c= c= cint_of_num f0 cint_of_num f1 c= f0 f1
D INT_OF_NUM_LT
A |- (!m. (!n. (((int_lt (int_of_num m)) (int_of_num n)) = (m < n))))
T c= cint_lt cint_of_num f0 cint_of_num f1 c< f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D AZIM_REFL
A |- (!v0. (!v1. (!w. (((((azim v0) v1) w) w) = (real_of_num (NUMERAL _0))))))
T c= cazim f0 f1 f2 f2 creal_of_num cNUMERAL c_0
D Basics.EL_EXPLICIT
A |- (!h. (!t. ((((EL (NUMERAL _0)) ((CONS h) t)) = h) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS h) t)) = ((EL (NUMERAL _0)) t)) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t))))))))))
T c/\ c= cEL cNUMERAL c_0 cCONS f0 f1 f0 c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL c_0 f1 c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
D Oxlzlez.MOD_INJ1_ALT
A |- (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n)))))))
T c==> c/\ c~ c= f0 cNUMERAL c_0 c/\ c< f1 f0 c~ c= f1 cNUMERAL c_0 ! c~ c= cMOD b0 f0 cMOD c+ b0 f1 f0
D Oxlzlez.LEAF_RANK_AZIM_INJ
A |- (!V. (!ul. (!w0. (!n. (!f. (!i. (!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ul) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n)))))))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= f1 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f2 * * part cINSERT f3 part cEMPTY cleaf_rank f0 f2 f3 f1 f4 c= c= cazim cEL cNUMERAL c_0 f2 cEL cNUMERAL cBIT1 c_0 f2 * f4 f5 * f4 f6 creal_of_num cNUMERAL c_0 c= cMOD f5 f1 cMOD f6 f1
+ |- (((!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F)))))))))) ==> ((\V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F)))))))))) V)) = ((\V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F)))))))))) V))
T c= c==> ! c==> cpacking b0 c==> csaturated b0 c==> cleaf_rank b0 cCONS f0 cCONS f1 cNIL f2 f3 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f3 c==> c= * f4 f5 * f4 cSUC f5 c==> c= cMOD f5 f3 cMOD c+ f5 cNUMERAL cBIT1 c_0 f3 c==> ! c==> c< cNUMERAL cBIT1 c_0 b1 c/\ c~ c= b1 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b2 cNUMERAL c_0 c/\ c< b1 b2 c~ c= b1 cNUMERAL c_0 ! c~ c= cMOD b3 b2 cMOD c+ b3 b1 b2 cF * / c==> cpacking b0 c==> csaturated b0 c==> cleaf_rank b0 cCONS f0 cCONS f1 cNIL f2 f3 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f3 c==> c= * f4 f5 * f4 cSUC f5 c==> c= cMOD f5 f3 cMOD c+ f5 cNUMERAL cBIT1 c_0 f3 c==> ! c==> c< cNUMERAL cBIT1 c_0 b1 c/\ c~ c= b1 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b2 cNUMERAL c_0 c/\ c< b1 b2 c~ c= b1 cNUMERAL c_0 ! c~ c= cMOD b3 b2 cMOD c+ b3 b1 b2 cF f6 * / c==> cpacking b0 c==> csaturated b0 c==> cleaf_rank b0 cCONS f0 cCONS f1 cNIL f2 f3 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f3 c==> c= * f4 f5 * f4 cSUC f5 c==> c= cMOD f5 f3 cMOD c+ f5 cNUMERAL cBIT1 c_0 f3 c==> ! c==> c< cNUMERAL cBIT1 c_0 b1 c/\ c~ c= b1 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b2 cNUMERAL c_0 c/\ c< b1 b2 c~ c= b1 cNUMERAL c_0 ! c~ c= cMOD b3 b2 cMOD c+ b3 b1 b2 cF f6
+ ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)), ((NUMERAL (BIT1 _0)) < n) |- (((NUMERAL (BIT1 _0)) < n) /\ ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)))
T c==> c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1 c==> c< cNUMERAL cBIT1 c_0 f1 c/\ c< cNUMERAL cBIT1 c_0 f1 c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1
+ |- ((\v1. (!w. (((((azim v0) v1) w) w) = (real_of_num (NUMERAL _0))))) v1)
T * / ! c= cazim f0 b0 b1 b1 creal_of_num cNUMERAL c_0 f1
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((f i) = (f (SUC i))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (~ ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= * f4 f5 * f4 cSUC f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c~ c= cMOD f5 f6 cMOD c+ f5 cNUMERAL cBIT1 c_0 f6
+ |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ ((NUMERAL (BIT1 _0)) < n) |- (((~ (n = (NUMERAL _0))) ==> ((n = (NUMERAL _0)) = F)) = ((n = (NUMERAL _0)) = F))
T c==> c< cNUMERAL cBIT1 c_0 f0 c= c==> c~ c= f0 cNUMERAL c_0 c= c= f0 cNUMERAL c_0 cF c= c= f0 cNUMERAL c_0 cF
+ (packing V), (saturated V), ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n)))) |- (~ ((f i) = (f (SUC i))))
T c==> cpacking f0 c==> csaturated f0 c==> c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c< cNUMERAL cBIT1 c_0 f4 c~ c= * f5 f6 * f5 cSUC f6
+ |- (!n. (!i. (!f. (!w0. (!u1. (!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> (~ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n)))))))))))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> c= * f5 f6 * f5 cSUC f6 c==> c= cMOD f6 f4 cMOD c+ f6 cNUMERAL cBIT1 c_0 f4 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c~ ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (~ ((f i) = (f (SUC i))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c< cNUMERAL cBIT1 c_0 f4 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c~ c= * f5 f6 * f5 cSUC f6
+ |- ((\w0. (!n. (!f. (!i. (!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n))))))))) w0)
T * / ! ! ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= b1 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT b0 part cEMPTY cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 b2 c= c= cazim cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * b2 b3 * b2 b4 creal_of_num cNUMERAL c_0 c= cMOD b3 b1 cMOD b4 b1 f3
+ |- (((!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n))))) ==> ((\j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n))))) (SUC i))) = ((\j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n))))) (SUC i)))
T c= c==> ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= f1 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT f4 part cEMPTY cleaf_rank f0 cCONS f2 cCONS f3 cNIL f4 f1 f5 c= c= cazim cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * f5 f6 * f5 b0 creal_of_num cNUMERAL c_0 c= cMOD f6 f1 cMOD b0 f1 * / c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= f1 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT f4 part cEMPTY cleaf_rank f0 cCONS f2 cCONS f3 cNIL f4 f1 f5 c= c= cazim cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * f5 f6 * f5 b0 creal_of_num cNUMERAL c_0 c= cMOD f6 f1 cMOD b0 f1 cSUC f6 * / c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= f1 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT f4 part cEMPTY cleaf_rank f0 cCONS f2 cCONS f3 cNIL f4 f1 f5 c= c= cazim cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * f5 f6 * f5 b0 creal_of_num cNUMERAL c_0 c= cMOD f6 f1 cMOD b0 f1 cSUC f6
- (_7278261 = _7278266), (_7278257 = _7278262), (_7278260 = _7278265), (_7278258 = _7278263), (_7278259 = _7278264) |- ((((((leaf_rank _7278262) _7278263) _7278264) _7278265) _7278266) \/ (~ (((((leaf_rank _7278257) _7278258) _7278259) _7278260) _7278261)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c\/ cleaf_rank f3 f7 f9 f5 f1 c~ cleaf_rank f2 f6 f8 f4 f0
+ |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ |- ((((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))))) = T)
T c= c==> c< cNUMERAL cBIT1 c_0 f0 c/\ c~ c= f0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cT
- |- (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t))
T c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT1 c_0 f1
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
- |- ((~ (_7278285 = _7278286)) \/ ((BIT1 _7278285) = (BIT1 _7278286)))
T c\/ c~ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) |- (((~ (_7278249 = (NUMERAL _0))) /\ ((_7278248 < _7278249) /\ ((_7278250 MOD _7278249) = ((_7278250 + _7278248) MOD _7278249)))) ==> (_7278248 = (NUMERAL _0)))
T c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 c==> c/\ c~ c= f0 cNUMERAL c_0 c/\ c< f1 f0 c= cMOD f2 f0 cMOD c+ f2 f1 f0 c= f1 cNUMERAL c_0
+ |- ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> (~ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n)))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f3 c==> c= * f4 f5 * f4 cSUC f5 c==> c= cMOD f5 f3 cMOD c+ f5 cNUMERAL cBIT1 c_0 f3 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c~ ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1
+ |- ((m < n) = ((int_lt (int_of_num m)) (int_of_num n)))
T c= c< f0 f1 cint_lt cint_of_num f0 cint_of_num f1
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
- |- ((~ (x = y)) = (((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y) \/ ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x)))
T c= c~ c= f0 f1 c\/ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
- (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))), ((NUMERAL (BIT1 _0)) < n) |- ((n = (NUMERAL _0)) ==> (~ (n = (NUMERAL _0))))
T c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> c< cNUMERAL cBIT1 c_0 f0 c==> c= f0 cNUMERAL c_0 c~ c= f0 cNUMERAL c_0
- |- (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t))
T c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 c_0 f1
+ ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)), ((NUMERAL (BIT1 _0)) < n) |- ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> (~ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n)))))))))
T c==> c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1 c==> c< cNUMERAL cBIT1 c_0 f1 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c~ ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1
+ |- ((\q'. (((~ (n = (NUMERAL _0))) = p') ==> ((p' ==> (((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n))) = q')) ==> (((~ (n = (NUMERAL _0))) ==> ((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n)))) = (p' ==> q'))))) q')
T * / c==> c= c~ c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= c= c= cazim f2 f3 * f4 cSUC f5 * f4 cSUC f5 creal_of_num cNUMERAL c_0 c= cMOD f5 f0 cMOD cSUC f5 f0 b0 c= c==> c~ c= f0 cNUMERAL c_0 c= c= cazim f2 f3 * f4 cSUC f5 * f4 cSUC f5 creal_of_num cNUMERAL c_0 c= cMOD f5 f0 cMOD cSUC f5 f0 c==> f1 b0 f6
+ |- ((!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i))))))) = T)
T c= ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 b0 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c< cNUMERAL cBIT1 c_0 f4 c~ c= * b0 b1 * b0 cSUC b1 cT
+ |- (((!V. (!ul. (!w0. (!n. (!f. (!i. (!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ul) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n))))))))))) ==> ((\V. (!ul. (!w0. (!n. (!f. (!i. (!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ul) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n))))))))))) V)) = ((\V. (!ul. (!w0. (!n. (!f. (!i. (!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ul) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n))))))))))) V))
T c= c==> ! ! ! ! ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ c~ c= b3 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT b2 part cEMPTY cleaf_rank b0 b1 b2 b3 b4 c= c= cazim cEL cNUMERAL c_0 b1 cEL cNUMERAL cBIT1 c_0 b1 * b4 b5 * b4 b6 creal_of_num cNUMERAL c_0 c= cMOD b5 b3 cMOD b6 b3 * / ! ! ! ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ c~ c= b3 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT b2 part cEMPTY cleaf_rank b0 b1 b2 b3 b4 c= c= cazim cEL cNUMERAL c_0 b1 cEL cNUMERAL cBIT1 c_0 b1 * b4 b5 * b4 b6 creal_of_num cNUMERAL c_0 c= cMOD b5 b3 cMOD b6 b3 f0 * / ! ! ! ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ c~ c= b3 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT b2 part cEMPTY cleaf_rank b0 b1 b2 b3 b4 c= c= cazim cEL cNUMERAL c_0 b1 cEL cNUMERAL cBIT1 c_0 b1 * b4 b5 * b4 b6 creal_of_num cNUMERAL c_0 c= cMOD b5 b3 cMOD b6 b3 f0
- (_7278261 = _7278266), (_7278257 = _7278262), (_7278259 = _7278264) |- ((_7278258 = _7278263) ==> ((~ (_7278260 = _7278265)) \/ ((((((leaf_rank _7278262) _7278263) _7278264) _7278265) _7278266) \/ (~ (((((leaf_rank _7278257) _7278258) _7278259) _7278260) _7278261)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f5 f9 f1 c~ cleaf_rank f2 f6 f4 f8 f0
+ |- ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> (~ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n)))))))))))))))
T c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> c= * f5 f6 * f5 cSUC f6 c==> c= cMOD f6 f4 cMOD c+ f6 cNUMERAL cBIT1 c_0 f4 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c~ ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1
+ ((NUMERAL (BIT1 _0)) < n) |- ((((~ (n = (NUMERAL _0))) = T) ==> ((T ==> (((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n))) = q')) ==> (((~ (n = (NUMERAL _0))) ==> ((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n)))) = (T ==> q')))) = ((T ==> (((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n))) = q')) ==> (((~ (n = (NUMERAL _0))) ==> ((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n)))) = (T ==> q'))))
T c==> c< cNUMERAL cBIT1 c_0 f0 c= c==> c= c~ c= f0 cNUMERAL c_0 cT c==> c==> cT c= c= c= cazim f1 f2 * f3 cSUC f4 * f3 cSUC f4 creal_of_num cNUMERAL c_0 c= cMOD f4 f0 cMOD cSUC f4 f0 f5 c= c==> c~ c= f0 cNUMERAL c_0 c= c= cazim f1 f2 * f3 cSUC f4 * f3 cSUC f4 creal_of_num cNUMERAL c_0 c= cMOD f4 f0 cMOD cSUC f4 f0 c==> cT f5 c==> c==> cT c= c= c= cazim f1 f2 * f3 cSUC f4 * f3 cSUC f4 creal_of_num cNUMERAL c_0 c= cMOD f4 f0 cMOD cSUC f4 f0 f5 c= c==> c~ c= f0 cNUMERAL c_0 c= c= cazim f1 f2 * f3 cSUC f4 * f3 cSUC f4 creal_of_num cNUMERAL c_0 c= cMOD f4 f0 cMOD cSUC f4 f0 c==> cT f5
+ |- (((!w0. (!u1. (!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))))))))))))) ==> ((\w0. (!u1. (!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))))))))))))) w0)) = ((\w0. (!u1. (!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))))))))))))) w0))
T c= c==> ! ! ! ! c==> cpacking b3 c==> csaturated b3 c==> cleaf_rank b3 cCONS b2 cCONS b1 cNIL b0 f0 f1 c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f0 c==> c= * f1 f2 * f1 cSUC f2 c==> c= cMOD f2 f0 cMOD c+ f2 cNUMERAL cBIT1 c_0 f0 c==> ! c==> c< cNUMERAL cBIT1 c_0 b4 c/\ c~ c= b4 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b5 cNUMERAL c_0 c/\ c< b4 b5 c~ c= b4 cNUMERAL c_0 ! c~ c= cMOD b6 b5 cMOD c+ b6 b4 b5 cF * / ! ! ! c==> cpacking b3 c==> csaturated b3 c==> cleaf_rank b3 cCONS b2 cCONS b1 cNIL b0 f0 f1 c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f0 c==> c= * f1 f2 * f1 cSUC f2 c==> c= cMOD f2 f0 cMOD c+ f2 cNUMERAL cBIT1 c_0 f0 c==> ! c==> c< cNUMERAL cBIT1 c_0 b4 c/\ c~ c= b4 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b5 cNUMERAL c_0 c/\ c< b4 b5 c~ c= b4 cNUMERAL c_0 ! c~ c= cMOD b6 b5 cMOD c+ b6 b4 b5 cF f3 * / ! ! ! c==> cpacking b3 c==> csaturated b3 c==> cleaf_rank b3 cCONS b2 cCONS b1 cNIL b0 f0 f1 c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f0 c==> c= * f1 f2 * f1 cSUC f2 c==> c= cMOD f2 f0 cMOD c+ f2 cNUMERAL cBIT1 c_0 f0 c==> ! c==> c< cNUMERAL cBIT1 c_0 b4 c/\ c~ c= b4 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b5 cNUMERAL c_0 c/\ c< b4 b5 c~ c= b4 cNUMERAL c_0 ! c~ c= cMOD b6 b5 cMOD c+ b6 b4 b5 cF f3
- (_7278267 = _7278268) |- ((((saturated _7278267) = (saturated _7278268)) ==> ((saturated _7278268) \/ (~ (saturated _7278267)))) = ((saturated _7278268) \/ (~ (saturated _7278267))))
T c==> c= f0 f1 c= c==> c= csaturated f0 csaturated f1 c\/ csaturated f1 c~ csaturated f0 c\/ csaturated f1 c~ csaturated f0
+ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) |- (!n. (!x. (((n = (NUMERAL _0)) \/ ((~ (_7278248 < n)) \/ (_7278248 = (NUMERAL _0)))) \/ (~ ((x MOD n) = ((x + _7278248) MOD n))))))
T c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 ! ! c\/ c\/ c= b0 cNUMERAL c_0 c\/ c~ c< f0 b0 c= f0 cNUMERAL c_0 c~ c= cMOD b1 b0 cMOD c+ b1 f0 b0
+ |- ((!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))) = T)
T c= ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c< cNUMERAL cBIT1 c_0 f4 c~ c= * f5 b0 * f5 cSUC b0 cT
- |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _7278243)) /\ (((real_le ((real_add ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))))) = (~ (((int_le (int_of_num (NUMERAL _0))) _7278243) ==> (((int_add _7278243) (int_of_num (NUMERAL (BIT1 _0)))) = ((int_add _7278243) (int_of_num (NUMERAL (BIT1 _0))))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c= cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0
- ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))))))))) |- ((((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))))))))) ==> ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F)))))))))) ==> ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))))))))))
T c==> c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> c= * f5 f6 * f5 cSUC f6 c==> c= cMOD f6 f4 cMOD c+ f6 cNUMERAL cBIT1 c_0 f4 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF c==> c==> c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> c= * f5 f6 * f5 cSUC f6 c==> c= cMOD f6 f4 cMOD c+ f6 cNUMERAL cBIT1 c_0 f4 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> c= * f5 f6 * f5 cSUC f6 c==> c= cMOD f6 f4 cMOD c+ f6 cNUMERAL cBIT1 c_0 f4 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> c= * f5 f6 * f5 cSUC f6 c==> c= cMOD f6 f4 cMOD c+ f6 cNUMERAL cBIT1 c_0 f4 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _7278245)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _7278245)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _7278245) = (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _7278245)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _7278245)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _7278245)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((y = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) y) = (real_of_num (NUMERAL _0)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
- ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) |- ((~ ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n))) ==> ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)))
T c==> c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1 c==> c~ c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1 c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1
+ |- (((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F)) = ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))
T c= c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF
+ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) |- (((!k. (!n. (!x. (((n = (NUMERAL _0)) \/ ((~ (k < n)) \/ (k = (NUMERAL _0)))) \/ (~ ((x MOD n) = ((x + k) MOD n))))))) ==> ((\k. (!n. (!x. (((n = (NUMERAL _0)) \/ ((~ (k < n)) \/ (k = (NUMERAL _0)))) \/ (~ ((x MOD n) = ((x + k) MOD n))))))) _7278248)) = ((\k. (!n. (!x. (((n = (NUMERAL _0)) \/ ((~ (k < n)) \/ (k = (NUMERAL _0)))) \/ (~ ((x MOD n) = ((x + k) MOD n))))))) _7278248))
T c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 c= c==> ! ! ! c\/ c\/ c= b1 cNUMERAL c_0 c\/ c~ c< b0 b1 c= b0 cNUMERAL c_0 c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 * / ! ! c\/ c\/ c= b1 cNUMERAL c_0 c\/ c~ c< b0 b1 c= b0 cNUMERAL c_0 c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 f0 * / ! ! c\/ c\/ c= b1 cNUMERAL c_0 c\/ c~ c< b0 b1 c= b0 cNUMERAL c_0 c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 f0
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((f i) = (f (SUC i))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (~ ((((((azim u0) u1) (f (i + (NUMERAL (BIT1 _0))))) (f (i + (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= * f4 f5 * f4 cSUC f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c~ c= c= cazim f0 f1 * f4 c+ f5 cNUMERAL cBIT1 c_0 * f4 c+ f5 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= cMOD f5 f6 cMOD c+ f5 cNUMERAL cBIT1 c_0 f6
+ |- ((\i. (!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n)))))) i)
T * / ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= f1 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT f4 part cEMPTY cleaf_rank f0 cCONS f2 cCONS f3 cNIL f4 f1 f5 c= c= cazim cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * f5 b0 * f5 b1 creal_of_num cNUMERAL c_0 c= cMOD b0 f1 cMOD b1 f1 f6
+ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))), (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))), ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)), ((NUMERAL (BIT1 _0)) < n) |- (((NUMERAL (BIT1 _0)) < n) /\ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))
T c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1 c==> c< cNUMERAL cBIT1 c_0 f1 c/\ c< cNUMERAL cBIT1 c_0 f1 c= cNUMERAL cBIT1 c_0 cNUMERAL c_0
- ((NUMERAL (BIT1 _0)) < n) |- (((NUMERAL (BIT1 _0)) < n) /\ (((NUMERAL _0) = n) = F))
T c==> c< cNUMERAL cBIT1 c_0 f0 c/\ c< cNUMERAL cBIT1 c_0 f0 c= c= cNUMERAL c_0 f0 cF
+ |- ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> (~ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))))))))))
T c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> c= * f5 f6 * f5 cSUC f6 c==> c= cMOD f6 f4 cMOD c+ f6 cNUMERAL cBIT1 c_0 f4 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c~ ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- (((!n. (!f. (!i. (!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n)))))))) ==> ((\n. (!f. (!i. (!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n)))))))) n)) = ((\n. (!f. (!i. (!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n)))))))) n))
T c= c==> ! ! ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= b0 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT f3 part cEMPTY cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 b0 b1 c= c= cazim cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * b1 b2 * b1 b3 creal_of_num cNUMERAL c_0 c= cMOD b2 b0 cMOD b3 b0 * / ! ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= b0 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT f3 part cEMPTY cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 b0 b1 c= c= cazim cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * b1 b2 * b1 b3 creal_of_num cNUMERAL c_0 c= cMOD b2 b0 cMOD b3 b0 f4 * / ! ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= b0 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT f3 part cEMPTY cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 b0 b1 c= c= cazim cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * b1 b2 * b1 b3 creal_of_num cNUMERAL c_0 c= cMOD b2 b0 cMOD b3 b0 f4
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((NUMERAL (BIT1 _0)) < n) |- ((T ==> (((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n))) = q')) ==> (((~ (n = (NUMERAL _0))) ==> ((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n)))) = (T ==> q')))
T c==> c< cNUMERAL cBIT1 c_0 f0 c==> c==> cT c= c= c= cazim f1 f2 * f3 cSUC f4 * f3 cSUC f4 creal_of_num cNUMERAL c_0 c= cMOD f4 f0 cMOD cSUC f4 f0 f5 c= c==> c~ c= f0 cNUMERAL c_0 c= c= cazim f1 f2 * f3 cSUC f4 * f3 cSUC f4 creal_of_num cNUMERAL c_0 c= cMOD f4 f0 cMOD cSUC f4 f0 c==> cT f5
- |- ((!n'. (((n' = (NUMERAL _0)) \/ ((~ (k < n')) \/ (k = (NUMERAL _0)))) \/ (!x. (~ ((x MOD n) = ((x + k) MOD n)))))) = ((!n. ((n = (NUMERAL _0)) \/ ((~ (k < n)) \/ (k = (NUMERAL _0))))) \/ (!x. (~ ((x MOD n) = ((x + k) MOD n))))))
T c= ! c\/ c\/ c= b0 cNUMERAL c_0 c\/ c~ c< f0 b0 c= f0 cNUMERAL c_0 ! c~ c= cMOD b1 f1 cMOD c+ b1 f0 f1 c\/ ! c\/ c= b0 cNUMERAL c_0 c\/ c~ c< f0 b0 c= f0 cNUMERAL c_0 ! c~ c= cMOD b0 f1 cMOD c+ b0 f0 f1
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- |- ((!x. t) = t)
T c= ! f0 f0
- |- ((_7278269 = _7278270) ==> ((packing _7278270) \/ (~ (packing _7278269))))
T c==> c= f0 f1 c\/ cpacking f1 c~ cpacking f0
- |- ((_7278271 = _7278273) ==> ((~ (_7278272 = _7278274)) \/ ((_7278271 + _7278272) = (_7278273 + _7278274))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c+ f0 f2 c+ f1 f3
- |- ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))
T c= cint_of_num c+ f0 f1 cint_add cint_of_num f0 cint_of_num f1
+ |- (((!q'. (((~ (n = (NUMERAL _0))) = p') ==> ((p' ==> (((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n))) = q')) ==> (((~ (n = (NUMERAL _0))) ==> ((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n)))) = (p' ==> q'))))) ==> ((\q'. (((~ (n = (NUMERAL _0))) = p') ==> ((p' ==> (((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n))) = q')) ==> (((~ (n = (NUMERAL _0))) ==> ((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n)))) = (p' ==> q'))))) q')) = ((\q'. (((~ (n = (NUMERAL _0))) = p') ==> ((p' ==> (((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n))) = q')) ==> (((~ (n = (NUMERAL _0))) ==> ((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c~ c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= c= c= cazim f2 f3 * f4 cSUC f5 * f4 cSUC f5 creal_of_num cNUMERAL c_0 c= cMOD f5 f0 cMOD cSUC f5 f0 b0 c= c==> c~ c= f0 cNUMERAL c_0 c= c= cazim f2 f3 * f4 cSUC f5 * f4 cSUC f5 creal_of_num cNUMERAL c_0 c= cMOD f5 f0 cMOD cSUC f5 f0 c==> f1 b0 * / c==> c= c~ c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= c= c= cazim f2 f3 * f4 cSUC f5 * f4 cSUC f5 creal_of_num cNUMERAL c_0 c= cMOD f5 f0 cMOD cSUC f5 f0 b0 c= c==> c~ c= f0 cNUMERAL c_0 c= c= cazim f2 f3 * f4 cSUC f5 * f4 cSUC f5 creal_of_num cNUMERAL c_0 c= cMOD f5 f0 cMOD cSUC f5 f0 c==> f1 b0 f6 * / c==> c= c~ c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= c= c= cazim f2 f3 * f4 cSUC f5 * f4 cSUC f5 creal_of_num cNUMERAL c_0 c= cMOD f5 f0 cMOD cSUC f5 f0 b0 c= c==> c~ c= f0 cNUMERAL c_0 c= c= cazim f2 f3 * f4 cSUC f5 * f4 cSUC f5 creal_of_num cNUMERAL c_0 c= cMOD f5 f0 cMOD cSUC f5 f0 c==> f1 b0 f6
+ |- ((!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i))))))))) = T)
T c= ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 b2 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c< cNUMERAL cBIT1 c_0 b1 c~ c= * b2 b3 * b2 cSUC b3 cT
- ((NUMERAL (BIT1 _0)) < n) |- ((~ ((NUMERAL (BIT1 _0)) < n)) ==> ((NUMERAL (BIT1 _0)) < n))
T c==> c< cNUMERAL cBIT1 c_0 f0 c==> c~ c< cNUMERAL cBIT1 c_0 f0 c< cNUMERAL cBIT1 c_0 f0
+ |- ((\f. (!w0. (!u1. (!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F)))))))))))))) f)
T * / ! ! ! ! c==> cpacking b4 c==> csaturated b4 c==> cleaf_rank b4 cCONS b3 cCONS b2 cNIL b1 f0 b0 c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f0 c==> c= * b0 f1 * b0 cSUC f1 c==> c= cMOD f1 f0 cMOD c+ f1 cNUMERAL cBIT1 c_0 f0 c==> ! c==> c< cNUMERAL cBIT1 c_0 b5 c/\ c~ c= b5 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b6 cNUMERAL c_0 c/\ c< b5 b6 c~ c= b5 cNUMERAL c_0 ! c~ c= cMOD b7 b6 cMOD c+ b7 b5 b6 cF f2
- (_7278251 = _7278253), (_7278252 = _7278254) |- ((((_7278251 < _7278252) = (_7278253 < _7278254)) ==> ((_7278253 < _7278254) \/ (~ (_7278251 < _7278252)))) = ((_7278253 < _7278254) \/ (~ (_7278251 < _7278252))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= c< f0 f2 c< f1 f3 c\/ c< f1 f3 c~ c< f0 f2 c\/ c< f1 f3 c~ c< f0 f2
- |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
- (_7278259 = _7278264) |- ((_7278259 = _7278264) /\ ((~ (_7278257 = _7278262)) \/ ((~ (_7278261 = _7278266)) \/ ((~ (_7278258 = _7278263)) \/ ((~ (_7278260 = _7278265)) \/ ((((((leaf_rank _7278262) _7278263) _7278264) _7278265) _7278266) \/ (~ (((((leaf_rank _7278257) _7278258) _7278259) _7278260) _7278261))))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f1 f9 f5 c~ cleaf_rank f2 f6 f0 f8 f4
+ |- ((\v0. (!v1. (!w. (((((azim v0) v1) w) w) = (real_of_num (NUMERAL _0)))))) v0)
T * / ! ! c= cazim b0 b1 b2 b2 creal_of_num cNUMERAL c_0 f0
- |- ((f x) = ((I f) x))
T c= * f0 f1 cI f0 f1
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i))))))))))) = T)
T c= ! ! ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS b0 cCONS b1 cNIL b2 b3 b4 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c< cNUMERAL cBIT1 c_0 b3 c~ c= * b4 b5 * b4 cSUC b5 cT
+ |- (T ==> (((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n))) = ((((((azim u0) u1) (f (i + (NUMERAL (BIT1 _0))))) (f (i + (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)))))
T c==> cT c= c= c= cazim f0 f1 * f2 cSUC f3 * f2 cSUC f3 creal_of_num cNUMERAL c_0 c= cMOD f3 f4 cMOD cSUC f3 f4 c= c= cazim f0 f1 * f2 c+ f3 cNUMERAL cBIT1 c_0 * f2 c+ f3 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= cMOD f3 f4 cMOD c+ f3 cNUMERAL cBIT1 c_0 f4
+ (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) |- (!n. ((~ ((NUMERAL (BIT1 _0)) < n)) \/ ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))))))
T c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 ! c\/ c~ c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0
+ (packing V), (saturated V), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> c= * f5 f6 * f5 cSUC f6 c==> c= cMOD f6 f4 cMOD c+ f6 cNUMERAL cBIT1 c_0 f4 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((f i) = (f (SUC i))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= * f4 f5 * f4 cSUC f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 cF
+ |- (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> (~ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))))))))
T c==> c< cNUMERAL cBIT1 c_0 f0 c==> c= * f1 f2 * f1 cSUC f2 c==> c= cMOD f2 f0 cMOD c+ f2 cNUMERAL cBIT1 c_0 f0 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c~ ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1
- (_7278275 = _7278277), (_7278276 = _7278278) |- ((_7278276 = _7278278) /\ ((_7278275 MOD _7278276) = (_7278277 MOD _7278278)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= cMOD f0 f2 cMOD f1 f3
+ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) |- (!k. (!n. (!x. (((n = (NUMERAL _0)) \/ ((~ (k < n)) \/ (k = (NUMERAL _0)))) \/ (~ ((x MOD n) = ((x + k) MOD n)))))))
T c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 ! ! ! c\/ c\/ c= b1 cNUMERAL c_0 c\/ c~ c< b0 b1 c= b0 cNUMERAL c_0 c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!i. (!f. (!w0. (!u1. (!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> (~ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n)))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! c==> cpacking b5 c==> csaturated b5 c==> cleaf_rank b5 cCONS b4 cCONS b3 cNIL b2 f0 b1 c==> c~ ccollinear * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f0 c==> c= * b1 b0 * b1 cSUC b0 c==> c= cMOD b0 f0 cMOD c+ b0 cNUMERAL cBIT1 c_0 f0 c==> ! c==> c< cNUMERAL cBIT1 c_0 b6 c/\ c~ c= b6 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c~ ! ! c==> c/\ c~ c= b7 cNUMERAL c_0 c/\ c< b6 b7 c~ c= b6 cNUMERAL c_0 ! c~ c= cMOD b8 b7 cMOD c+ b8 b6 b7 cT
+ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) |- ((_7278249 = (NUMERAL _0)) \/ ((~ (_7278248 < _7278249)) \/ ((_7278248 = (NUMERAL _0)) \/ (~ ((_7278250 MOD _7278249) = ((_7278250 + _7278248) MOD _7278249))))))
T c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 c\/ c= f0 cNUMERAL c_0 c\/ c~ c< f1 f0 c\/ c= f1 cNUMERAL c_0 c~ c= cMOD f2 f0 cMOD c+ f2 f1 f0
+ |- (((!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))))))))))) ==> ((\u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))))))))))) u0)) = ((\u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))))))))))) u0))
T c= c==> ! ! c==> cpacking b1 c==> csaturated b1 c==> cleaf_rank b1 cCONS b0 cCONS f0 cNIL f1 f2 f3 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f2 c==> c= * f3 f4 * f3 cSUC f4 c==> c= cMOD f4 f2 cMOD c+ f4 cNUMERAL cBIT1 c_0 f2 c==> ! c==> c< cNUMERAL cBIT1 c_0 b2 c/\ c~ c= b2 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b3 cNUMERAL c_0 c/\ c< b2 b3 c~ c= b2 cNUMERAL c_0 ! c~ c= cMOD b4 b3 cMOD c+ b4 b2 b3 cF * / ! c==> cpacking b1 c==> csaturated b1 c==> cleaf_rank b1 cCONS b0 cCONS f0 cNIL f1 f2 f3 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f2 c==> c= * f3 f4 * f3 cSUC f4 c==> c= cMOD f4 f2 cMOD c+ f4 cNUMERAL cBIT1 c_0 f2 c==> ! c==> c< cNUMERAL cBIT1 c_0 b2 c/\ c~ c= b2 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b3 cNUMERAL c_0 c/\ c< b2 b3 c~ c= b2 cNUMERAL c_0 ! c~ c= cMOD b4 b3 cMOD c+ b4 b2 b3 cF f5 * / ! c==> cpacking b1 c==> csaturated b1 c==> cleaf_rank b1 cCONS b0 cCONS f0 cNIL f1 f2 f3 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f2 c==> c= * f3 f4 * f3 cSUC f4 c==> c= cMOD f4 f2 cMOD c+ f4 cNUMERAL cBIT1 c_0 f2 c==> ! c==> c< cNUMERAL cBIT1 c_0 b2 c/\ c~ c= b2 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b3 cNUMERAL c_0 c/\ c< b2 b3 c~ c= b2 cNUMERAL c_0 ! c~ c= cMOD b4 b3 cMOD c+ b4 b2 b3 cF f5
+ (packing V), (saturated V), ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n)), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (~ ((f i) = (f (SUC i))))
T c==> cpacking f0 c==> csaturated f0 c==> c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c< cNUMERAL cBIT1 c_0 f4 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c~ c= * f5 f6 * f5 cSUC f6
+ |- (((!p'. (!q'. (((~ (n = (NUMERAL _0))) = p') ==> ((p' ==> (((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n))) = q')) ==> (((~ (n = (NUMERAL _0))) ==> ((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n)))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((~ (n = (NUMERAL _0))) = p') ==> ((p' ==> (((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n))) = q')) ==> (((~ (n = (NUMERAL _0))) ==> ((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((~ (n = (NUMERAL _0))) = p') ==> ((p' ==> (((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n))) = q')) ==> (((~ (n = (NUMERAL _0))) ==> ((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c~ c= f0 cNUMERAL c_0 b0 c==> c==> b0 c= c= c= cazim f1 f2 * f3 cSUC f4 * f3 cSUC f4 creal_of_num cNUMERAL c_0 c= cMOD f4 f0 cMOD cSUC f4 f0 b1 c= c==> c~ c= f0 cNUMERAL c_0 c= c= cazim f1 f2 * f3 cSUC f4 * f3 cSUC f4 creal_of_num cNUMERAL c_0 c= cMOD f4 f0 cMOD cSUC f4 f0 c==> b0 b1 * / ! c==> c= c~ c= f0 cNUMERAL c_0 b0 c==> c==> b0 c= c= c= cazim f1 f2 * f3 cSUC f4 * f3 cSUC f4 creal_of_num cNUMERAL c_0 c= cMOD f4 f0 cMOD cSUC f4 f0 b1 c= c==> c~ c= f0 cNUMERAL c_0 c= c= cazim f1 f2 * f3 cSUC f4 * f3 cSUC f4 creal_of_num cNUMERAL c_0 c= cMOD f4 f0 cMOD cSUC f4 f0 c==> b0 b1 f5 * / ! c==> c= c~ c= f0 cNUMERAL c_0 b0 c==> c==> b0 c= c= c= cazim f1 f2 * f3 cSUC f4 * f3 cSUC f4 creal_of_num cNUMERAL c_0 c= cMOD f4 f0 cMOD cSUC f4 f0 b1 c= c==> c~ c= f0 cNUMERAL c_0 c= c= cazim f1 f2 * f3 cSUC f4 * f3 cSUC f4 creal_of_num cNUMERAL c_0 c= cMOD f4 f0 cMOD cSUC f4 f0 c==> b0 b1 f5
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c==> c< cNUMERAL cBIT1 c_0 f4 c==> c= * f5 f6 * f5 cSUC f6 c==> c= cMOD f6 f4 cMOD c+ f6 cNUMERAL cBIT1 c_0 f4 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (((f i) = (f (SUC i))) ==> F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c< cNUMERAL cBIT1 c_0 f4 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c==> c= * f5 f6 * f5 cSUC f6 cF
- |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7278243)) /\ (((real_le ((real_add ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7278243)) /\ (((real_le ((real_add ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7278243)) /\ (((real_le ((real_add ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0
+ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) |- ((\n. (!x. (((n = (NUMERAL _0)) \/ ((~ (_7278248 < n)) \/ (_7278248 = (NUMERAL _0)))) \/ (~ ((x MOD n) = ((x + _7278248) MOD n)))))) _7278249)
T c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 * / ! c\/ c\/ c= b0 cNUMERAL c_0 c\/ c~ c< f0 b0 c= f0 cNUMERAL c_0 c~ c= cMOD b1 b0 cMOD c+ b1 f0 b0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!v0. (!v1. (!w. (((((azim v0) v1) w) w) = (real_of_num (NUMERAL _0)))))) ==> ((\v0. (!v1. (!w. (((((azim v0) v1) w) w) = (real_of_num (NUMERAL _0)))))) v0)) = ((\v0. (!v1. (!w. (((((azim v0) v1) w) w) = (real_of_num (NUMERAL _0)))))) v0))
T c= c==> ! ! ! c= cazim b0 b1 b2 b2 creal_of_num cNUMERAL c_0 * / ! ! c= cazim b0 b1 b2 b2 creal_of_num cNUMERAL c_0 f0 * / ! ! c= cazim b0 b1 b2 b2 creal_of_num cNUMERAL c_0 f0
+ |- (((((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n)))) ==> F) = F)
T c= c==> c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= f1 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT f4 part cEMPTY cleaf_rank f0 cCONS f2 cCONS f3 cNIL f4 f1 f5 c= c= cazim cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * f5 f6 * f5 cSUC f6 creal_of_num cNUMERAL c_0 c= cMOD f6 f1 cMOD cSUC f6 f1 cF cF
- (_7278281 = _7278283), (_7278282 = _7278284) |- ((_7278282 = _7278284) /\ (((I _7278281) _7278282) = ((I _7278283) _7278284)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= cI f0 f2 cI f1 f3
+ |- ((\n. (!i. (!f. (!w0. (!u1. (!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F)))))))))))))))) n)
T * / ! ! ! ! ! ! c==> cpacking b6 c==> csaturated b6 c==> cleaf_rank b6 cCONS b5 cCONS b4 cNIL b3 b0 b2 c==> c~ ccollinear * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b0 c==> c= * b2 b1 * b2 cSUC b1 c==> c= cMOD b1 b0 cMOD c+ b1 cNUMERAL cBIT1 c_0 b0 c==> ! c==> c< cNUMERAL cBIT1 c_0 b7 c/\ c~ c= b7 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b8 cNUMERAL c_0 c/\ c< b7 b8 c~ c= b7 cNUMERAL c_0 ! c~ c= cMOD b8 b8 cMOD c+ b8 b7 b8 cF f0
- (_7278251 = _7278253), (_7278252 = _7278254) |- ((_7278252 = _7278254) /\ ((_7278253 < _7278254) \/ (~ (_7278251 < _7278252))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ c< f1 f3 c~ c< f0 f2
+ |- (((!i. (!f. (!w0. (!u1. (!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))))))))))))))) ==> ((\i. (!f. (!w0. (!u1. (!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))))))))))))))) i)) = ((\i. (!f. (!w0. (!u1. (!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))))))))))))))) i))
T c= c==> ! ! ! ! ! ! c==> cpacking b5 c==> csaturated b5 c==> cleaf_rank b5 cCONS b4 cCONS b3 cNIL b2 f0 b1 c==> c~ ccollinear * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f0 c==> c= * b1 b0 * b1 cSUC b0 c==> c= cMOD b0 f0 cMOD c+ b0 cNUMERAL cBIT1 c_0 f0 c==> ! c==> c< cNUMERAL cBIT1 c_0 b6 c/\ c~ c= b6 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b7 cNUMERAL c_0 c/\ c< b6 b7 c~ c= b6 cNUMERAL c_0 ! c~ c= cMOD b8 b7 cMOD c+ b8 b6 b7 cF * / ! ! ! ! ! c==> cpacking b5 c==> csaturated b5 c==> cleaf_rank b5 cCONS b4 cCONS b3 cNIL b2 f0 b1 c==> c~ ccollinear * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f0 c==> c= * b1 b0 * b1 cSUC b0 c==> c= cMOD b0 f0 cMOD c+ b0 cNUMERAL cBIT1 c_0 f0 c==> ! c==> c< cNUMERAL cBIT1 c_0 b6 c/\ c~ c= b6 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b7 cNUMERAL c_0 c/\ c< b6 b7 c~ c= b6 cNUMERAL c_0 ! c~ c= cMOD b8 b7 cMOD c+ b8 b6 b7 cF f1 * / ! ! ! ! ! c==> cpacking b5 c==> csaturated b5 c==> cleaf_rank b5 cCONS b4 cCONS b3 cNIL b2 f0 b1 c==> c~ ccollinear * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f0 c==> c= * b1 b0 * b1 cSUC b0 c==> c= cMOD b0 f0 cMOD c+ b0 cNUMERAL cBIT1 c_0 f0 c==> ! c==> c< cNUMERAL cBIT1 c_0 b6 c/\ c~ c= b6 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b7 cNUMERAL c_0 c/\ c< b6 b7 c~ c= b6 cNUMERAL c_0 ! c~ c= cMOD b8 b7 cMOD c+ b8 b6 b7 cF f1
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- ((!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))) = T)
T c= ! ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS b0 cNIL b1 b2 b3 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c< cNUMERAL cBIT1 c_0 b2 c~ c= * b3 b4 * b3 cSUC b4 cT
+ |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- |- ((_7278279 = _7278280) ==> ((SUC _7278279) = (SUC _7278280)))
T c==> c= f0 f1 c= cSUC f0 cSUC f1
- T |- (T = T)
T c==> cT c= cT cT
+ |- ((((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i))))) = T)
T c= c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c< cNUMERAL cBIT1 c_0 f4 c~ c= * f5 f6 * f5 cSUC f6 cT
- |- ((~ (_7278293 = _7278295)) \/ ((~ (_7278294 = _7278296)) \/ (((CONS _7278293) _7278294) = ((CONS _7278295) _7278296))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ ((NUMERAL (BIT1 _0)) < n) |- ((~ ((((((azim u0) u1) (f (i + (NUMERAL (BIT1 _0))))) (f (i + (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)))) = (~ ((~ (n = (NUMERAL _0))) ==> ((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n))))))
T c==> c< cNUMERAL cBIT1 c_0 f0 c= c~ c= c= cazim f1 f2 * f3 c+ f4 cNUMERAL cBIT1 c_0 * f3 c+ f4 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= cMOD f4 f0 cMOD c+ f4 cNUMERAL cBIT1 c_0 f0 c~ c==> c~ c= f0 cNUMERAL c_0 c= c= cazim f1 f2 * f3 cSUC f4 * f3 cSUC f4 creal_of_num cNUMERAL c_0 c= cMOD f4 f0 cMOD cSUC f4 f0
+ |- ((\n. (!f. (!i. (!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n)))))))) n)
T * / ! ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= b0 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT f3 part cEMPTY cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 b0 b1 c= c= cazim cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * b1 b2 * b1 b3 creal_of_num cNUMERAL c_0 c= cMOD b2 b0 cMOD b3 b0 f4
+ |- (((!w. (((((azim v0) v1) w) w) = (real_of_num (NUMERAL _0)))) ==> ((\w. (((((azim v0) v1) w) w) = (real_of_num (NUMERAL _0)))) w)) = ((\w. (((((azim v0) v1) w) w) = (real_of_num (NUMERAL _0)))) w))
T c= c==> ! c= cazim f0 f1 b0 b0 creal_of_num cNUMERAL c_0 * / c= cazim f0 f1 b0 b0 creal_of_num cNUMERAL c_0 f2 * / c= cazim f0 f1 b0 b0 creal_of_num cNUMERAL c_0 f2
- (_7278261 = _7278266), (_7278257 = _7278262), (_7278260 = _7278265), (_7278258 = _7278263), (_7278259 = _7278264) |- ((_7278260 = _7278265) /\ ((((((leaf_rank _7278262) _7278263) _7278264) _7278265) _7278266) \/ (~ (((((leaf_rank _7278257) _7278258) _7278259) _7278260) _7278261))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c/\ c= f4 f5 c\/ cleaf_rank f3 f7 f9 f5 f1 c~ cleaf_rank f2 f6 f8 f4 f0
- |- ((!n'. (((n = (NUMERAL _0)) \/ ((~ (k < n)) \/ (k = (NUMERAL _0)))) \/ (!x. (~ ((x MOD n') = ((x + k) MOD n')))))) = (((n = (NUMERAL _0)) \/ ((~ (k < n)) \/ (k = (NUMERAL _0)))) \/ (!n. (!x. (~ ((x MOD n) = ((x + k) MOD n)))))))
T c= ! c\/ c\/ c= f0 cNUMERAL c_0 c\/ c~ c< f1 f0 c= f1 cNUMERAL c_0 ! c~ c= cMOD b1 b0 cMOD c+ b1 f1 b0 c\/ c\/ c= f0 cNUMERAL c_0 c\/ c~ c< f1 f0 c= f1 cNUMERAL c_0 ! ! c~ c= cMOD b1 b0 cMOD c+ b1 f1 b0
- (_7278261 = _7278266), (_7278257 = _7278262), (_7278258 = _7278263), (_7278259 = _7278264) |- ((~ (_7278260 = _7278265)) \/ ((((((leaf_rank _7278262) _7278263) _7278264) _7278265) _7278266) \/ (~ (((((leaf_rank _7278257) _7278258) _7278259) _7278260) _7278261))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f5 f7 f9 f1 c~ cleaf_rank f2 f4 f6 f8 f0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t)))
T c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- (_7278271 = _7278273), (_7278272 = _7278274) |- ((_7278272 = _7278274) /\ ((_7278271 + _7278272) = (_7278273 + _7278274)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= c+ f0 f2 c+ f1 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_7278271 = _7278273) |- ((_7278271 = _7278273) /\ ((~ (_7278272 = _7278274)) \/ ((_7278271 + _7278272) = (_7278273 + _7278274))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c+ f0 f2 c+ f1 f3
+ |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!n. ((P n) \/ Q)) = ((!n. (P n)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
- |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) |- ((_7278248 = (NUMERAL _0)) \/ ((_7278249 = (NUMERAL _0)) \/ ((~ (_7278248 < _7278249)) \/ (~ ((_7278250 MOD _7278249) = ((_7278250 + _7278248) MOD _7278249))))))
T c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 c\/ c= f0 cNUMERAL c_0 c\/ c= f1 cNUMERAL c_0 c\/ c~ c< f0 f1 c~ c= cMOD f2 f1 cMOD c+ f2 f0 f1
+ (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))), ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)), ((NUMERAL (BIT1 _0)) < n) |- (~ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))))
T c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1 c==> c< cNUMERAL cBIT1 c_0 f1 c~ ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1
- (_7278275 = _7278277) |- ((_7278276 = _7278278) ==> ((_7278275 MOD _7278276) = (_7278277 MOD _7278278)))
T c==> c= f0 f1 c==> c= f2 f3 c= cMOD f0 f2 cMOD f1 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!w0. (!n. (!f. (!i. (!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n))))))))) ==> ((\w0. (!n. (!f. (!i. (!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n))))))))) w0)) = ((\w0. (!n. (!f. (!i. (!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n))))))))) w0))
T c= c==> ! ! ! ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= b1 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT b0 part cEMPTY cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 b2 c= c= cazim cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * b2 b3 * b2 b4 creal_of_num cNUMERAL c_0 c= cMOD b3 b1 cMOD b4 b1 * / ! ! ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= b1 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT b0 part cEMPTY cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 b2 c= c= cazim cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * b2 b3 * b2 b4 creal_of_num cNUMERAL c_0 c= cMOD b3 b1 cMOD b4 b1 f3 * / ! ! ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= b1 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT b0 part cEMPTY cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 b2 c= c= cazim cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * b2 b3 * b2 b4 creal_of_num cNUMERAL c_0 c= cMOD b3 b1 cMOD b4 b1 f3
- (n = (NUMERAL _0)) |- ((NUMERAL _0) = n)
T c==> c= f0 cNUMERAL c_0 c= cNUMERAL c_0 f0
- |- ((~ (_7278259 = _7278264)) \/ ((~ (_7278257 = _7278262)) \/ ((~ (_7278261 = _7278266)) \/ ((~ (_7278258 = _7278263)) \/ ((~ (_7278260 = _7278265)) \/ ((((((leaf_rank _7278262) _7278263) _7278264) _7278265) _7278266) \/ (~ (((((leaf_rank _7278257) _7278258) _7278259) _7278260) _7278261))))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f1 f9 f5 c~ cleaf_rank f2 f6 f0 f8 f4
- |- (((int_le (int_of_num (NUMERAL _0))) _7278243) ==> (((int_add _7278243) (int_of_num (NUMERAL (BIT1 _0)))) = ((int_add _7278243) (int_of_num (NUMERAL (BIT1 _0))))))
T c==> cint_le cint_of_num cNUMERAL c_0 f0 c= cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0
- |- ((((int_add (int_of_num i)) (int_of_num (NUMERAL (BIT1 _0)))) = ((int_add (int_of_num i)) (int_of_num (NUMERAL (BIT1 _0))))) = ((SUC i) = (i + (NUMERAL (BIT1 _0)))))
T c= c= cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
+ ((NUMERAL (BIT1 _0)) < n) |- (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> (~ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))))))
T c==> c< cNUMERAL cBIT1 c_0 f0 c==> c= cMOD f1 f0 cMOD c+ f1 cNUMERAL cBIT1 c_0 f0 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c~ ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1
+ |- ((~ ((int_lt (int_of_num (NUMERAL (BIT1 _0)))) (int_of_num n))) \/ (~ ((int_of_num n) = (int_of_num (NUMERAL _0)))))
T c\/ c~ cint_lt cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f0 c~ c= cint_of_num f0 cint_of_num cNUMERAL c_0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _7278245)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _7278245)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _7278245) = (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _7278245)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (_7278261 = _7278266), (_7278257 = _7278262), (_7278259 = _7278264) |- ((_7278261 = _7278266) /\ ((~ (_7278258 = _7278263)) \/ ((~ (_7278260 = _7278265)) \/ ((((((leaf_rank _7278262) _7278263) _7278264) _7278265) _7278266) \/ (~ (((((leaf_rank _7278257) _7278258) _7278259) _7278260) _7278261))))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f0 f1 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f5 f9 f1 c~ cleaf_rank f2 f6 f4 f8 f0
- (_7278294 = _7278296), (_7278293 = _7278295) |- ((_7278294 = _7278296) /\ (((CONS _7278293) _7278294) = ((CONS _7278295) _7278296)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= cCONS f2 f0 cCONS f3 f1
+ |- ((\ul. (!w0. (!n. (!f. (!i. (!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ul) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n)))))))))) ((CONS u0) ((CONS u1) NIL)))
T * / ! ! ! ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= b2 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT b1 part cEMPTY cleaf_rank f0 b0 b1 b2 b3 c= c= cazim cEL cNUMERAL c_0 b0 cEL cNUMERAL cBIT1 c_0 b0 * b3 b4 * b3 b5 creal_of_num cNUMERAL c_0 c= cMOD b4 b2 cMOD b5 b2 cCONS f1 cCONS f2 cNIL
- |- ((~ (_7278267 = _7278268)) \/ ((saturated _7278268) \/ (~ (saturated _7278267))))
T c\/ c~ c= f0 f1 c\/ csaturated f1 c~ csaturated f0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((_7278251 = _7278253) ==> ((~ (_7278252 = _7278254)) \/ ((_7278253 < _7278254) \/ (~ (_7278251 < _7278252)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c< f1 f3 c~ c< f0 f2
+ |- ((\V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F)))))))))) V)
T * / c==> cpacking b0 c==> csaturated b0 c==> cleaf_rank b0 cCONS f0 cCONS f1 cNIL f2 f3 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f3 c==> c= * f4 f5 * f4 cSUC f5 c==> c= cMOD f5 f3 cMOD c+ f5 cNUMERAL cBIT1 c_0 f3 c==> ! c==> c< cNUMERAL cBIT1 c_0 b1 c/\ c~ c= b1 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b2 cNUMERAL c_0 c/\ c< b1 b2 c~ c= b1 cNUMERAL c_0 ! c~ c= cMOD b3 b2 cMOD c+ b3 b1 b2 cF f6
+ |- (((EL (NUMERAL _0)) ((CONS h) t)) = h)
T c= cEL cNUMERAL c_0 cCONS f0 f1 f0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c< cNUMERAL cBIT1 c_0 f4 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c==> c= * f5 f6 * f5 cSUC f6 c==> c= cMOD f6 f4 cMOD c+ f6 cNUMERAL cBIT1 c_0 f4 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))), ((NUMERAL (BIT1 _0)) < n) |- ((((NUMERAL (BIT1 _0)) < n) /\ ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n))) = ((~ (n = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)))))
T c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> c< cNUMERAL cBIT1 c_0 f0 c= c/\ c< cNUMERAL cBIT1 c_0 f0 c= cMOD f1 f0 cMOD c+ f1 cNUMERAL cBIT1 c_0 f0 c/\ c~ c= f0 cNUMERAL c_0 c/\ c< cNUMERAL cBIT1 c_0 f0 c= cMOD f1 f0 cMOD c+ f1 cNUMERAL cBIT1 c_0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n)), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (~ ((f i) = (f (SUC i))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c< cNUMERAL cBIT1 c_0 f4 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c~ c= * f5 f6 * f5 cSUC f6
+ (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) |- ((~ ((NUMERAL (BIT1 _0)) < _7278247)) \/ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))))
T c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c\/ c~ c< cNUMERAL cBIT1 c_0 f0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0
- (_7278287 = _7278288) |- ((_7278287 = _7278288) /\ ((NUMERAL _7278287) = (NUMERAL _7278288)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ ((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) |- (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) /\ (~ ((f i) = (f (SUC i)))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c< cNUMERAL cBIT1 c_0 f4 c/\ c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c< cNUMERAL cBIT1 c_0 f4 c~ c= * f5 f6 * f5 cSUC f6
- (_7278285 = _7278286) |- ((_7278285 = _7278286) /\ ((BIT1 _7278285) = (BIT1 _7278286)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT1 f0 cBIT1 f1
- ((f i) = (f (SUC i))) |- (((I f) i) = ((I f) (SUC i)))
T c==> c= * f0 f1 * f0 cSUC f1 c= cI f0 f1 cI f0 cSUC f1
+ |- ((!n. (!i. (!f. (!w0. (!u1. (!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> (~ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))))))))))))))))))) = (!n. (!i. (!f. (!w0. (!u1. (!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F)))))))))))))))))
T c= ! ! ! ! ! ! ! c==> cpacking b6 c==> csaturated b6 c==> cleaf_rank b6 cCONS b5 cCONS b4 cNIL b3 b0 b2 c==> c~ ccollinear * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b0 c==> c= * b2 b1 * b2 cSUC b1 c==> c= cMOD b1 b0 cMOD c+ b1 cNUMERAL cBIT1 c_0 b0 c==> ! c==> c< cNUMERAL cBIT1 c_0 b7 c/\ c~ c= b7 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c~ ! ! c==> c/\ c~ c= b8 cNUMERAL c_0 c/\ c< b7 b8 c~ c= b7 cNUMERAL c_0 ! c~ c= cMOD b8 b8 cMOD c+ b8 b7 b8 ! ! ! ! ! ! ! c==> cpacking b6 c==> csaturated b6 c==> cleaf_rank b6 cCONS b5 cCONS b4 cNIL b3 b0 b2 c==> c~ ccollinear * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b0 c==> c= * b2 b1 * b2 cSUC b1 c==> c= cMOD b1 b0 cMOD c+ b1 cNUMERAL cBIT1 c_0 b0 c==> ! c==> c< cNUMERAL cBIT1 c_0 b7 c/\ c~ c= b7 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b8 cNUMERAL c_0 c/\ c< b7 b8 c~ c= b7 cNUMERAL c_0 ! c~ c= cMOD b8 b8 cMOD c+ b8 b7 b8 cF
+ ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)), ((NUMERAL (BIT1 _0)) < n) |- (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) /\ ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> (~ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))))))
T c==> c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1 c==> c< cNUMERAL cBIT1 c_0 f1 c/\ c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c~ ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1
+ (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) |- (!n. (((~ ((NUMERAL (BIT1 _0)) < n)) \/ (~ (n = (NUMERAL _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) < n)) \/ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))))))
T c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 ! c/\ c\/ c~ c< cNUMERAL cBIT1 c_0 b0 c~ c= b0 cNUMERAL c_0 c\/ c~ c< cNUMERAL cBIT1 c_0 b0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0
+ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) |- (!x. (((_7278249 = (NUMERAL _0)) \/ ((~ (_7278248 < _7278249)) \/ (_7278248 = (NUMERAL _0)))) \/ (~ ((x MOD _7278249) = ((x + _7278248) MOD _7278249)))))
T c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 ! c\/ c\/ c= f0 cNUMERAL c_0 c\/ c~ c< f1 f0 c= f1 cNUMERAL c_0 c~ c= cMOD b0 f0 cMOD c+ b0 f1 f0
- |- ((~ (_7278287 = _7278288)) \/ ((NUMERAL _7278287) = (NUMERAL _7278288)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- (_7278267 = _7278268) |- ((_7278267 = _7278268) /\ ((saturated _7278268) \/ (~ (saturated _7278267))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ csaturated f1 c~ csaturated f0
- |- (((int_add (int_of_num i)) (int_of_num (NUMERAL (BIT1 _0)))) = ((int_add (int_of_num i)) (int_of_num (NUMERAL (BIT1 _0)))))
T c= cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0
- |- ((_7278289 = _7278291) ==> ((~ (_7278290 = _7278292)) \/ ((_7278289 INSERT _7278290) = (_7278291 INSERT _7278292))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- (_7278290 = _7278292), (_7278289 = _7278291) |- ((_7278290 = _7278292) /\ ((_7278289 INSERT _7278290) = (_7278291 INSERT _7278292)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cINSERT f2 f0 * * part cINSERT f3 f1
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num n)) ==> ((~ ((int_lt (int_of_num (NUMERAL (BIT1 _0)))) (int_of_num n))) \/ (~ ((int_of_num n) = (int_of_num (NUMERAL _0)))))) = ((~ ((int_lt (int_of_num (NUMERAL (BIT1 _0)))) (int_of_num n))) \/ (~ ((int_of_num n) = (int_of_num (NUMERAL _0))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c\/ c~ cint_lt cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f0 c~ c= cint_of_num f0 cint_of_num cNUMERAL c_0 c\/ c~ cint_lt cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f0 c~ c= cint_of_num f0 cint_of_num cNUMERAL c_0
- |- ((_7278281 = _7278283) ==> ((~ (_7278282 = _7278284)) \/ (((I _7278281) _7278282) = ((I _7278283) _7278284))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cI f0 f2 cI f1 f3
- (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))), (n = (NUMERAL _0)), ((NUMERAL (BIT1 _0)) < n) |- ((n = (NUMERAL _0)) /\ (~ (n = (NUMERAL _0))))
T c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> c= f0 cNUMERAL c_0 c==> c< cNUMERAL cBIT1 c_0 f0 c/\ c= f0 cNUMERAL c_0 c~ c= f0 cNUMERAL c_0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= f1 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT f4 part cEMPTY cleaf_rank f0 cCONS f2 cCONS f3 cNIL f4 f1 f5 c= c= cazim cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * f5 f6 * f5 cSUC f6 creal_of_num cNUMERAL c_0 c= cMOD f6 f1 cMOD cSUC f6 f1
+ |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ (_7278279 = _7278280)) \/ ((SUC _7278279) = (SUC _7278280)))
T c\/ c~ c= f0 f1 c= cSUC f0 cSUC f1
- (_7278293 = _7278295) |- ((_7278294 = _7278296) ==> (((CONS _7278293) _7278294) = ((CONS _7278295) _7278296)))
T c==> c= f0 f1 c==> c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- |- ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t)))))
T c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
- (_7278269 = _7278270) |- ((_7278269 = _7278270) /\ ((packing _7278270) \/ (~ (packing _7278269))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ cpacking f1 c~ cpacking f0
- |- (((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))))))))) ==> ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))))))))))
T c==> c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> c= * f5 f6 * f5 cSUC f6 c==> c= cMOD f6 f4 cMOD c+ f6 cNUMERAL cBIT1 c_0 f4 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> c= * f5 f6 * f5 cSUC f6 c==> c= cMOD f6 f4 cMOD c+ f6 cNUMERAL cBIT1 c_0 f4 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF
- |- ((_7278287 = _7278288) ==> ((NUMERAL _7278287) = (NUMERAL _7278288)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ |- (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))))))
T c==> c< cNUMERAL cBIT1 c_0 f0 c/\ c~ c= f0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0
+ ((NUMERAL (BIT1 _0)) < n) |- (~ (n = (NUMERAL _0)))
T c==> c< cNUMERAL cBIT1 c_0 f0 c~ c= f0 cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((~ a) \/ (~ b)) = (~ (a /\ b)))
T c= c\/ c~ f0 c~ f1 c~ c/\ f0 f1
+ ((f i) = (f (SUC i))), ((NUMERAL (BIT1 _0)) < n) |- (((f i) = (f (SUC i))) /\ (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> (~ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n)))))))))))
T c==> c= * f0 f1 * f0 cSUC f1 c==> c< cNUMERAL cBIT1 c_0 f2 c/\ c= * f0 f1 * f0 cSUC f1 c==> c= cMOD f1 f2 cMOD c+ f1 cNUMERAL cBIT1 c_0 f2 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c~ ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1
+ |- (((T ==> (((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n))) = ((((((azim u0) u1) (f (i + (NUMERAL (BIT1 _0))))) (f (i + (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n))))) ==> (((~ (n = (NUMERAL _0))) ==> ((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n)))) = (T ==> ((((((azim u0) u1) (f (i + (NUMERAL (BIT1 _0))))) (f (i + (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)))))) = (((~ (n = (NUMERAL _0))) ==> ((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n)))) = (T ==> ((((((azim u0) u1) (f (i + (NUMERAL (BIT1 _0))))) (f (i + (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n))))))
T c= c==> c==> cT c= c= c= cazim f0 f1 * f2 cSUC f3 * f2 cSUC f3 creal_of_num cNUMERAL c_0 c= cMOD f3 f4 cMOD cSUC f3 f4 c= c= cazim f0 f1 * f2 c+ f3 cNUMERAL cBIT1 c_0 * f2 c+ f3 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= cMOD f3 f4 cMOD c+ f3 cNUMERAL cBIT1 c_0 f4 c= c==> c~ c= f4 cNUMERAL c_0 c= c= cazim f0 f1 * f2 cSUC f3 * f2 cSUC f3 creal_of_num cNUMERAL c_0 c= cMOD f3 f4 cMOD cSUC f3 f4 c==> cT c= c= cazim f0 f1 * f2 c+ f3 cNUMERAL cBIT1 c_0 * f2 c+ f3 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= cMOD f3 f4 cMOD c+ f3 cNUMERAL cBIT1 c_0 f4 c= c==> c~ c= f4 cNUMERAL c_0 c= c= cazim f0 f1 * f2 cSUC f3 * f2 cSUC f3 creal_of_num cNUMERAL c_0 c= cMOD f3 f4 cMOD cSUC f3 f4 c==> cT c= c= cazim f0 f1 * f2 c+ f3 cNUMERAL cBIT1 c_0 * f2 c+ f3 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= cMOD f3 f4 cMOD c+ f3 cNUMERAL cBIT1 c_0 f4
- (_7278271 = _7278273) |- ((_7278272 = _7278274) ==> ((_7278271 + _7278272) = (_7278273 + _7278274)))
T c==> c= f0 f1 c==> c= f2 f3 c= c+ f0 f2 c+ f1 f3
- |- ((~ (_7278289 = _7278291)) \/ ((~ (_7278290 = _7278292)) \/ ((_7278289 INSERT _7278290) = (_7278291 INSERT _7278292))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))), ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)), ((NUMERAL (BIT1 _0)) < n) |- ((~ (n = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n))))
T c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1 c==> c< cNUMERAL cBIT1 c_0 f1 c/\ c~ c= f1 cNUMERAL c_0 c/\ c< cNUMERAL cBIT1 c_0 f1 c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1
+ |- (((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!t. ((((EL (NUMERAL _0)) ((CONS h) t)) = h) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS h) t)) = ((EL (NUMERAL _0)) t)) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t))))))))) ==> ((\t. ((((EL (NUMERAL _0)) ((CONS h) t)) = h) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS h) t)) = ((EL (NUMERAL _0)) t)) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t))))))))) t)) = ((\t. ((((EL (NUMERAL _0)) ((CONS h) t)) = h) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS h) t)) = ((EL (NUMERAL _0)) t)) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t))))))))) t))
T c= c==> ! c/\ c= cEL cNUMERAL c_0 cCONS f0 b0 f0 c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL c_0 b0 c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b0 * / c/\ c= cEL cNUMERAL c_0 cCONS f0 b0 f0 c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL c_0 b0 c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b0 f1 * / c/\ c= cEL cNUMERAL c_0 cCONS f0 b0 f0 c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL c_0 b0 c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b0 f1
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
- |- ((p ==> (~ p)) = (~ p))
T c= c==> f0 c~ f0 c~ f0
- |- (((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t))
T c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
+ |- ((\u1. (!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F)))))))))))) u1)
T * / ! ! c==> cpacking b2 c==> csaturated b2 c==> cleaf_rank b2 cCONS b1 cCONS b0 cNIL f0 f1 f2 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f1 c==> c= * f2 f3 * f2 cSUC f3 c==> c= cMOD f3 f1 cMOD c+ f3 cNUMERAL cBIT1 c_0 f1 c==> ! c==> c< cNUMERAL cBIT1 c_0 b3 c/\ c~ c= b3 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b4 cNUMERAL c_0 c/\ c< b3 b4 c~ c= b3 cNUMERAL c_0 ! c~ c= cMOD b5 b4 cMOD c+ b5 b3 b4 cF f4
+ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) |- ((\k. (!n. (!x. (((n = (NUMERAL _0)) \/ ((~ (k < n)) \/ (k = (NUMERAL _0)))) \/ (~ ((x MOD n) = ((x + k) MOD n))))))) _7278248)
T c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 * / ! ! c\/ c\/ c= b1 cNUMERAL c_0 c\/ c~ c< b0 b1 c= b0 cNUMERAL c_0 c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 f0
- |- (((real_ge ((real_add (real_of_int _7278245)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _7278245)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F) = F)
T c= c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF cF
- ((NUMERAL (BIT1 _0)) < n) |- (((~ ((NUMERAL _0) = n)) ==> (((NUMERAL _0) = n) = F)) = (((NUMERAL _0) = n) = F))
T c==> c< cNUMERAL cBIT1 c_0 f0 c= c==> c~ c= cNUMERAL c_0 f0 c= c= cNUMERAL c_0 f0 cF c= c= cNUMERAL c_0 f0 cF
- |- (~ (~ (((int_le (int_of_num (NUMERAL _0))) _7278243) ==> (((int_add _7278243) (int_of_num (NUMERAL (BIT1 _0)))) = ((int_add _7278243) (int_of_num (NUMERAL (BIT1 _0))))))))
T c~ c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c= cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0
- |- ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (packing V) |- ((packing V) = T)
T c==> cpacking f0 c= cpacking f0 cT
+ (saturated V) |- ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> (~ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n)))))))))))))))
T c==> csaturated f0 c/\ csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> c= * f5 f6 * f5 cSUC f6 c==> c= cMOD f6 f4 cMOD c+ f6 cNUMERAL cBIT1 c_0 f4 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c~ ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((NUMERAL (BIT1 _0)) < n) |- (((~ (n = (NUMERAL _0))) ==> ((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n)))) = (T ==> ((((((azim u0) u1) (f (i + (NUMERAL (BIT1 _0))))) (f (i + (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)))))
T c==> c< cNUMERAL cBIT1 c_0 f0 c= c==> c~ c= f0 cNUMERAL c_0 c= c= cazim f1 f2 * f3 cSUC f4 * f3 cSUC f4 creal_of_num cNUMERAL c_0 c= cMOD f4 f0 cMOD cSUC f4 f0 c==> cT c= c= cazim f1 f2 * f3 c+ f4 cNUMERAL cBIT1 c_0 * f3 c+ f4 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= cMOD f4 f0 cMOD c+ f4 cNUMERAL cBIT1 c_0 f0
+ (packing V) |- ((packing V) /\ ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> (~ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))))))))))))
T c==> cpacking f0 c/\ cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> c= * f5 f6 * f5 cSUC f6 c==> c= cMOD f6 f4 cMOD c+ f6 cNUMERAL cBIT1 c_0 f4 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c~ ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1
+ |- ((\p'. (!q'. (((~ (n = (NUMERAL _0))) = p') ==> ((p' ==> (((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n))) = q')) ==> (((~ (n = (NUMERAL _0))) ==> ((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n)))) = (p' ==> q')))))) p')
T * / ! c==> c= c~ c= f0 cNUMERAL c_0 b0 c==> c==> b0 c= c= c= cazim f1 f2 * f3 cSUC f4 * f3 cSUC f4 creal_of_num cNUMERAL c_0 c= cMOD f4 f0 cMOD cSUC f4 f0 b1 c= c==> c~ c= f0 cNUMERAL c_0 c= c= cazim f1 f2 * f3 cSUC f4 * f3 cSUC f4 creal_of_num cNUMERAL c_0 c= cMOD f4 f0 cMOD cSUC f4 f0 c==> b0 b1 f5
+ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) |- (((!n. (!x. (((n = (NUMERAL _0)) \/ ((~ (_7278248 < n)) \/ (_7278248 = (NUMERAL _0)))) \/ (~ ((x MOD n) = ((x + _7278248) MOD n)))))) ==> ((\n. (!x. (((n = (NUMERAL _0)) \/ ((~ (_7278248 < n)) \/ (_7278248 = (NUMERAL _0)))) \/ (~ ((x MOD n) = ((x + _7278248) MOD n)))))) _7278249)) = ((\n. (!x. (((n = (NUMERAL _0)) \/ ((~ (_7278248 < n)) \/ (_7278248 = (NUMERAL _0)))) \/ (~ ((x MOD n) = ((x + _7278248) MOD n)))))) _7278249))
T c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 c= c==> ! ! c\/ c\/ c= b0 cNUMERAL c_0 c\/ c~ c< f0 b0 c= f0 cNUMERAL c_0 c~ c= cMOD b1 b0 cMOD c+ b1 f0 b0 * / ! c\/ c\/ c= b0 cNUMERAL c_0 c\/ c~ c< f0 b0 c= f0 cNUMERAL c_0 c~ c= cMOD b1 b0 cMOD c+ b1 f0 b0 f1 * / ! c\/ c\/ c= b0 cNUMERAL c_0 c\/ c~ c< f0 b0 c= f0 cNUMERAL c_0 c~ c= cMOD b1 b0 cMOD c+ b1 f0 b0 f1
- ((NUMERAL (BIT1 _0)) < n) |- (~ ((NUMERAL _0) = n))
T c==> c< cNUMERAL cBIT1 c_0 f0 c~ c= cNUMERAL c_0 f0
- (_7278251 = _7278253) |- ((_7278251 = _7278253) /\ ((~ (_7278252 = _7278254)) \/ ((_7278253 < _7278254) \/ (~ (_7278251 < _7278252)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c< f1 f3 c~ c< f0 f2
+ |- ((((n = (NUMERAL _0)) \/ ((~ (k < n)) \/ (k = (NUMERAL _0)))) \/ (!x. (~ ((x MOD n) = ((x + k) MOD n))))) = (!x. (((n = (NUMERAL _0)) \/ ((~ (k < n)) \/ (k = (NUMERAL _0)))) \/ (~ ((x MOD n) = ((x + k) MOD n))))))
T c= c\/ c\/ c= f0 cNUMERAL c_0 c\/ c~ c< f1 f0 c= f1 cNUMERAL c_0 ! c~ c= cMOD b0 f0 cMOD c+ b0 f1 f0 ! c\/ c\/ c= f0 cNUMERAL c_0 c\/ c~ c< f1 f0 c= f1 cNUMERAL c_0 c~ c= cMOD b0 f0 cMOD c+ b0 f1 f0
+ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))), (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))), ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)), ((NUMERAL (BIT1 _0)) < n) |- ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) /\ F)
T c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1 c==> c< cNUMERAL cBIT1 c_0 f1 c/\ ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF
- |- ((_7278275 = _7278277) ==> ((~ (_7278276 = _7278278)) \/ ((_7278275 MOD _7278276) = (_7278277 MOD _7278278))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cMOD f0 f2 cMOD f1 f3
+ |- ((\i. (!f. (!w0. (!u1. (!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))))))))))))))) i)
T * / ! ! ! ! ! c==> cpacking b5 c==> csaturated b5 c==> cleaf_rank b5 cCONS b4 cCONS b3 cNIL b2 f0 b1 c==> c~ ccollinear * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f0 c==> c= * b1 b0 * b1 cSUC b0 c==> c= cMOD b0 f0 cMOD c+ b0 cNUMERAL cBIT1 c_0 f0 c==> ! c==> c< cNUMERAL cBIT1 c_0 b6 c/\ c~ c= b6 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b7 cNUMERAL c_0 c/\ c< b6 b7 c~ c= b6 cNUMERAL c_0 ! c~ c= cMOD b8 b7 cMOD c+ b8 b6 b7 cF f1
- |- ((_7278285 = _7278286) ==> ((BIT1 _7278285) = (BIT1 _7278286)))
T c==> c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
+ |- ((~ (a \/ b)) = ((~ a) /\ (~ b)))
T c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
- (_7278279 = _7278280) |- ((_7278279 = _7278280) /\ ((SUC _7278279) = (SUC _7278280)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cSUC f0 cSUC f1
+ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) |- ((\x. (((_7278249 = (NUMERAL _0)) \/ ((~ (_7278248 < _7278249)) \/ (_7278248 = (NUMERAL _0)))) \/ (~ ((x MOD _7278249) = ((x + _7278248) MOD _7278249))))) _7278250)
T c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 * / c\/ c\/ c= f0 cNUMERAL c_0 c\/ c~ c< f1 f0 c= f1 cNUMERAL c_0 c~ c= cMOD b0 f0 cMOD c+ b0 f1 f0 f2
+ |- ((!u1. (!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> (~ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))))))))))))))) = T)
T c= ! ! ! c==> cpacking b2 c==> csaturated b2 c==> cleaf_rank b2 cCONS b1 cCONS b0 cNIL f0 f1 f2 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f1 c==> c= * f2 f3 * f2 cSUC f3 c==> c= cMOD f3 f1 cMOD c+ f3 cNUMERAL cBIT1 c_0 f1 c==> ! c==> c< cNUMERAL cBIT1 c_0 b3 c/\ c~ c= b3 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c~ ! ! c==> c/\ c~ c= b4 cNUMERAL c_0 c/\ c< b3 b4 c~ c= b3 cNUMERAL c_0 ! c~ c= cMOD b5 b4 cMOD c+ b5 b3 b4 cT
- |- ((~ (_7278275 = _7278277)) \/ ((~ (_7278276 = _7278278)) \/ ((_7278275 MOD _7278276) = (_7278277 MOD _7278278))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cMOD f0 f2 cMOD f1 f3
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)), ((f i) = (f (SUC i))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= cMOD f4 f5 cMOD c+ f4 cNUMERAL cBIT1 c_0 f5 c==> c= * f6 f4 * f6 cSUC f4 c==> c< cNUMERAL cBIT1 c_0 f5 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f5 f6 cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)), ((f i) = (f (SUC i))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= cMOD f4 f5 cMOD c+ f4 cNUMERAL cBIT1 c_0 f5 c==> c= * f6 f4 * f6 cSUC f4 c==> c< cNUMERAL cBIT1 c_0 f5 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f5 f6 c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)), ((f i) = (f (SUC i))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= cMOD f4 f5 cMOD c+ f4 cNUMERAL cBIT1 c_0 f5 c==> c= * f6 f4 * f6 cSUC f4 c==> c< cNUMERAL cBIT1 c_0 f5 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f5 f6 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF
- |- ((~ (_7278251 = _7278253)) \/ ((~ (_7278252 = _7278254)) \/ ((_7278253 < _7278254) \/ (~ (_7278251 < _7278252)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c< f1 f3 c~ c< f0 f2
+ |- ((!w0. (!u1. (!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> (~ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n)))))))))))))))))))) = T)
T c= ! ! ! ! c==> cpacking b3 c==> csaturated b3 c==> cleaf_rank b3 cCONS b2 cCONS b1 cNIL b0 f0 f1 c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f0 c==> c= * f1 f2 * f1 cSUC f2 c==> c= cMOD f2 f0 cMOD c+ f2 cNUMERAL cBIT1 c_0 f0 c==> ! c==> c< cNUMERAL cBIT1 c_0 b4 c/\ c~ c= b4 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c~ ! ! c==> c/\ c~ c= b5 cNUMERAL c_0 c/\ c< b4 b5 c~ c= b4 cNUMERAL c_0 ! c~ c= cMOD b6 b5 cMOD c+ b6 b4 b5 cT
- (_7278275 = _7278277) |- ((_7278275 = _7278277) /\ ((~ (_7278276 = _7278278)) \/ ((_7278275 MOD _7278276) = (_7278277 MOD _7278278))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cMOD f0 f2 cMOD f1 f3
+ (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) |- (((!n. (((~ ((NUMERAL (BIT1 _0)) < n)) \/ (~ (n = (NUMERAL _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) < n)) \/ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((\n. (((~ ((NUMERAL (BIT1 _0)) < n)) \/ (~ (n = (NUMERAL _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) < n)) \/ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) _7278247)) = ((\n. (((~ ((NUMERAL (BIT1 _0)) < n)) \/ (~ (n = (NUMERAL _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) < n)) \/ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) _7278247))
T c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c= c==> ! c/\ c\/ c~ c< cNUMERAL cBIT1 c_0 b0 c~ c= b0 cNUMERAL c_0 c\/ c~ c< cNUMERAL cBIT1 c_0 b0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 * / c/\ c\/ c~ c< cNUMERAL cBIT1 c_0 b0 c~ c= b0 cNUMERAL c_0 c\/ c~ c< cNUMERAL cBIT1 c_0 b0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 f0 * / c/\ c\/ c~ c< cNUMERAL cBIT1 c_0 b0 c~ c= b0 cNUMERAL c_0 c\/ c~ c< cNUMERAL cBIT1 c_0 b0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 f0
- (((real_ge (real_of_int _7278245)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _7278245)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _7278245) = (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _7278245)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7278243)) /\ (((real_le ((real_add ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))))))) |- (((real_ge (real_of_int _7278243)) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (_7278257 = _7278262), (_7278259 = _7278264) |- ((_7278257 = _7278262) /\ ((~ (_7278261 = _7278266)) \/ ((~ (_7278258 = _7278263)) \/ ((~ (_7278260 = _7278265)) \/ ((((((leaf_rank _7278262) _7278263) _7278264) _7278265) _7278266) \/ (~ (((((leaf_rank _7278257) _7278258) _7278259) _7278260) _7278261)))))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f1 f7 f3 f9 f5 c~ cleaf_rank f0 f6 f2 f8 f4
- |- ((((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))))))))) ==> ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F)))))))))) ==> (((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))))))))) ==> ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F)))))))))))
T c==> c==> c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> c= * f5 f6 * f5 cSUC f6 c==> c= cMOD f6 f4 cMOD c+ f6 cNUMERAL cBIT1 c_0 f4 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> c= * f5 f6 * f5 cSUC f6 c==> c= cMOD f6 f4 cMOD c+ f6 cNUMERAL cBIT1 c_0 f4 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF c==> c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> c= * f5 f6 * f5 cSUC f6 c==> c= cMOD f6 f4 cMOD c+ f6 cNUMERAL cBIT1 c_0 f4 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> c= * f5 f6 * f5 cSUC f6 c==> c= cMOD f6 f4 cMOD c+ f6 cNUMERAL cBIT1 c_0 f4 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF
- |- ((~ (_7278255 = _7278256)) \/ ((collinear _7278256) \/ (~ (collinear _7278255))))
T c\/ c~ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
+ |- ((\w. (((((azim v0) v1) w) w) = (real_of_num (NUMERAL _0)))) w)
T * / c= cazim f0 f1 b0 b0 creal_of_num cNUMERAL c_0 f2
+ (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) |- ((\n. (((~ ((NUMERAL (BIT1 _0)) < n)) \/ (~ (n = (NUMERAL _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) < n)) \/ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) _7278247)
T c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 * / c/\ c\/ c~ c< cNUMERAL cBIT1 c_0 b0 c~ c= b0 cNUMERAL c_0 c\/ c~ c< cNUMERAL cBIT1 c_0 b0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- (((~ ((int_lt (int_of_num (NUMERAL (BIT1 _0)))) (int_of_num n))) \/ (~ ((int_of_num n) = (int_of_num (NUMERAL _0))))) = (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))))))
T c= c\/ c~ cint_lt cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f0 c~ c= cint_of_num f0 cint_of_num cNUMERAL c_0 c==> c< cNUMERAL cBIT1 c_0 f0 c/\ c~ c= f0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0
- |- ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t))))
T c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) |- ((collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- (_7278251 = _7278253) |- ((_7278252 = _7278254) ==> ((_7278253 < _7278254) \/ (~ (_7278251 < _7278252))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c< f1 f3 c~ c< f0 f2
+ |- (((x = (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 f1 creal_of_num cNUMERAL c_0
- (_7278259 = _7278264) |- ((_7278257 = _7278262) ==> ((~ (_7278261 = _7278266)) \/ ((~ (_7278258 = _7278263)) \/ ((~ (_7278260 = _7278265)) \/ ((((((leaf_rank _7278262) _7278263) _7278264) _7278265) _7278266) \/ (~ (((((leaf_rank _7278257) _7278258) _7278259) _7278260) _7278261)))))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f1 f9 f5 c~ cleaf_rank f2 f6 f0 f8 f4
- (_7278289 = _7278291) |- ((_7278290 = _7278292) ==> ((_7278289 INSERT _7278290) = (_7278291 INSERT _7278292)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ |- (((!i. (!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n)))))) ==> ((\i. (!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n)))))) i)) = ((\i. (!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n)))))) i))
T c= c==> ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= f1 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT f4 part cEMPTY cleaf_rank f0 cCONS f2 cCONS f3 cNIL f4 f1 f5 c= c= cazim cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * f5 b0 * f5 b1 creal_of_num cNUMERAL c_0 c= cMOD b0 f1 cMOD b1 f1 * / ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= f1 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT f4 part cEMPTY cleaf_rank f0 cCONS f2 cCONS f3 cNIL f4 f1 f5 c= c= cazim cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * f5 b0 * f5 b1 creal_of_num cNUMERAL c_0 c= cMOD b0 f1 cMOD b1 f1 f6 * / ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= f1 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT f4 part cEMPTY cleaf_rank f0 cCONS f2 cCONS f3 cNIL f4 f1 f5 c= c= cazim cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * f5 b0 * f5 b1 creal_of_num cNUMERAL c_0 c= cMOD b0 f1 cMOD b1 f1 f6
- ((NUMERAL _0) = n) |- (n = (NUMERAL _0))
T c==> c= cNUMERAL c_0 f0 c= f0 cNUMERAL c_0
- |- (T = (((~ ((NUMERAL (BIT1 _0)) < _7278247)) \/ (~ (_7278247 = (NUMERAL _0)))) = ((~ (_7278247 = (NUMERAL _0))) \/ (~ ((NUMERAL (BIT1 _0)) < _7278247)))))
T c= cT c= c\/ c~ c< cNUMERAL cBIT1 c_0 f0 c~ c= f0 cNUMERAL c_0 c\/ c~ c= f0 cNUMERAL c_0 c~ c< cNUMERAL cBIT1 c_0 f0
+ |- ((\w0. (!u1. (!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))))))))))))) w0)
T * / ! ! ! c==> cpacking b3 c==> csaturated b3 c==> cleaf_rank b3 cCONS b2 cCONS b1 cNIL b0 f0 f1 c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f0 c==> c= * f1 f2 * f1 cSUC f2 c==> c= cMOD f2 f0 cMOD c+ f2 cNUMERAL cBIT1 c_0 f0 c==> ! c==> c< cNUMERAL cBIT1 c_0 b4 c/\ c~ c= b4 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b5 cNUMERAL c_0 c/\ c< b4 b5 c~ c= b4 cNUMERAL c_0 ! c~ c= cMOD b6 b5 cMOD c+ b6 b4 b5 cF f3
- |- ((!n. (P \/ (Q n))) = (P \/ (!n. (Q n))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((f i) = (f (SUC i))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (((f i) = (f (SUC i))) /\ F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= * f4 f5 * f4 cSUC f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c/\ c= * f4 f5 * f4 cSUC f5 cF
+ |- (((real_le (real_of_num m)) (real_neg (real_of_num n))) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))
T c= creal_le creal_of_num f0 creal_neg creal_of_num f1 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
+ |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (saturated V) |- ((saturated V) = T)
T c==> csaturated f0 c= csaturated f0 cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- (_7278261 = _7278266), (_7278257 = _7278262), (_7278259 = _7278264) |- ((~ (_7278258 = _7278263)) \/ ((~ (_7278260 = _7278265)) \/ ((((((leaf_rank _7278262) _7278263) _7278264) _7278265) _7278266) \/ (~ (((((leaf_rank _7278257) _7278258) _7278259) _7278260) _7278261)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f5 f9 f1 c~ cleaf_rank f2 f6 f4 f8 f0
- |- ((_7278255 = _7278256) ==> ((collinear _7278256) \/ (~ (collinear _7278255))))
T c==> c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
- |- (((NUMERAL (BIT0 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- (_7278293 = _7278295) |- ((_7278293 = _7278295) /\ ((~ (_7278294 = _7278296)) \/ (((CONS _7278293) _7278294) = ((CONS _7278295) _7278296))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
+ |- (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 cF
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\V. (!ul. (!w0. (!n. (!f. (!i. (!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ul) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n))))))))))) V)
T * / ! ! ! ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ c~ c= b3 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT b2 part cEMPTY cleaf_rank b0 b1 b2 b3 b4 c= c= cazim cEL cNUMERAL c_0 b1 cEL cNUMERAL cBIT1 c_0 b1 * b4 b5 * b4 b6 creal_of_num cNUMERAL c_0 c= cMOD b5 b3 cMOD b6 b3 f0
+ |- (((!ul. (!w0. (!n. (!f. (!i. (!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ul) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n)))))))))) ==> ((\ul. (!w0. (!n. (!f. (!i. (!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ul) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n)))))))))) ((CONS u0) ((CONS u1) NIL)))) = ((\ul. (!w0. (!n. (!f. (!i. (!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ul) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n)))))))))) ((CONS u0) ((CONS u1) NIL))))
T c= c==> ! ! ! ! ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= b2 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT b1 part cEMPTY cleaf_rank f0 b0 b1 b2 b3 c= c= cazim cEL cNUMERAL c_0 b0 cEL cNUMERAL cBIT1 c_0 b0 * b3 b4 * b3 b5 creal_of_num cNUMERAL c_0 c= cMOD b4 b2 cMOD b5 b2 * / ! ! ! ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= b2 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT b1 part cEMPTY cleaf_rank f0 b0 b1 b2 b3 c= c= cazim cEL cNUMERAL c_0 b0 cEL cNUMERAL cBIT1 c_0 b0 * b3 b4 * b3 b5 creal_of_num cNUMERAL c_0 c= cMOD b4 b2 cMOD b5 b2 cCONS f1 cCONS f2 cNIL * / ! ! ! ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= b2 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT b1 part cEMPTY cleaf_rank f0 b0 b1 b2 b3 c= c= cazim cEL cNUMERAL c_0 b0 cEL cNUMERAL cBIT1 c_0 b0 * b3 b4 * b3 b5 creal_of_num cNUMERAL c_0 c= cMOD b4 b2 cMOD b5 b2 cCONS f1 cCONS f2 cNIL
+ (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) |- ((~ (_7278247 = (NUMERAL _0))) \/ (~ ((NUMERAL (BIT1 _0)) < _7278247)))
T c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c\/ c~ c= f0 cNUMERAL c_0 c~ c< cNUMERAL cBIT1 c_0 f0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((f i) = (f (SUC i))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ ((~ (n = (NUMERAL _0))) ==> ((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n))))) = ((((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n)))) ==> F))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= * f4 f5 * f4 cSUC f5 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c= c~ c==> c~ c= f6 cNUMERAL c_0 c= c= cazim f0 f1 * f4 cSUC f5 * f4 cSUC f5 creal_of_num cNUMERAL c_0 c= cMOD f5 f6 cMOD cSUC f5 f6 c==> c==> c/\ csaturated f3 c/\ cpacking f3 c/\ c~ c= f6 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cNIL * * part cINSERT f2 part cEMPTY cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c= c= cazim cEL cNUMERAL c_0 cCONS f0 cCONS f1 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cNIL * f4 f5 * f4 cSUC f5 creal_of_num cNUMERAL c_0 c= cMOD f5 f6 cMOD cSUC f5 f6 cF
- |- (((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t))
T c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1
- (~ ((NUMERAL (BIT1 _0)) < n)), ((NUMERAL (BIT1 _0)) < n) |- ((~ ((NUMERAL (BIT1 _0)) < n)) /\ ((NUMERAL (BIT1 _0)) < n))
T c==> c~ c< cNUMERAL cBIT1 c_0 f0 c==> c< cNUMERAL cBIT1 c_0 f0 c/\ c~ c< cNUMERAL cBIT1 c_0 f0 c< cNUMERAL cBIT1 c_0 f0
+ |- ((!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> (~ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))))))))))))) = T)
T c= ! c==> cpacking b0 c==> csaturated b0 c==> cleaf_rank b0 cCONS f0 cCONS f1 cNIL f2 f3 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f3 c==> c= * f4 f5 * f4 cSUC f5 c==> c= cMOD f5 f3 cMOD c+ f5 cNUMERAL cBIT1 c_0 f3 c==> ! c==> c< cNUMERAL cBIT1 c_0 b1 c/\ c~ c= b1 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c~ ! ! c==> c/\ c~ c= b2 cNUMERAL c_0 c/\ c< b1 b2 c~ c= b1 cNUMERAL c_0 ! c~ c= cMOD b3 b2 cMOD c+ b3 b1 b2 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT1 _0)) < n) ==> (((NUMERAL _0) = n) = F))
T c==> c< cNUMERAL cBIT1 c_0 f0 c= c= cNUMERAL c_0 f0 cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((f i) = (f (SUC i))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= * f4 f5 * f4 cSUC f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> c= cMOD f5 f6 cMOD c+ f5 cNUMERAL cBIT1 c_0 f6 cF
- |- (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t))
T c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
+ |- (((!n. (!i. (!f. (!w0. (!u1. (!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F)))))))))))))))) ==> ((\n. (!i. (!f. (!w0. (!u1. (!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F)))))))))))))))) n)) = ((\n. (!i. (!f. (!w0. (!u1. (!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F)))))))))))))))) n))
T c= c==> ! ! ! ! ! ! ! c==> cpacking b6 c==> csaturated b6 c==> cleaf_rank b6 cCONS b5 cCONS b4 cNIL b3 b0 b2 c==> c~ ccollinear * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b0 c==> c= * b2 b1 * b2 cSUC b1 c==> c= cMOD b1 b0 cMOD c+ b1 cNUMERAL cBIT1 c_0 b0 c==> ! c==> c< cNUMERAL cBIT1 c_0 b7 c/\ c~ c= b7 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b8 cNUMERAL c_0 c/\ c< b7 b8 c~ c= b7 cNUMERAL c_0 ! c~ c= cMOD b8 b8 cMOD c+ b8 b7 b8 cF * / ! ! ! ! ! ! c==> cpacking b6 c==> csaturated b6 c==> cleaf_rank b6 cCONS b5 cCONS b4 cNIL b3 b0 b2 c==> c~ ccollinear * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b0 c==> c= * b2 b1 * b2 cSUC b1 c==> c= cMOD b1 b0 cMOD c+ b1 cNUMERAL cBIT1 c_0 b0 c==> ! c==> c< cNUMERAL cBIT1 c_0 b7 c/\ c~ c= b7 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b8 cNUMERAL c_0 c/\ c< b7 b8 c~ c= b7 cNUMERAL c_0 ! c~ c= cMOD b8 b8 cMOD c+ b8 b7 b8 cF f0 * / ! ! ! ! ! ! c==> cpacking b6 c==> csaturated b6 c==> cleaf_rank b6 cCONS b5 cCONS b4 cNIL b3 b0 b2 c==> c~ ccollinear * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b0 c==> c= * b2 b1 * b2 cSUC b1 c==> c= cMOD b1 b0 cMOD c+ b1 cNUMERAL cBIT1 c_0 b0 c==> ! c==> c< cNUMERAL cBIT1 c_0 b7 c/\ c~ c= b7 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b8 cNUMERAL c_0 c/\ c< b7 b8 c~ c= b7 cNUMERAL c_0 ! c~ c= cMOD b8 b8 cMOD c+ b8 b7 b8 cF f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!h. (!t. ((((EL (NUMERAL _0)) ((CONS h) t)) = h) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS h) t)) = ((EL (NUMERAL _0)) t)) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t)))))))))) ==> ((\h. (!t. ((((EL (NUMERAL _0)) ((CONS h) t)) = h) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS h) t)) = ((EL (NUMERAL _0)) t)) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t)))))))))) h)) = ((\h. (!t. ((((EL (NUMERAL _0)) ((CONS h) t)) = h) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS h) t)) = ((EL (NUMERAL _0)) t)) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t)))))))))) h))
T c= c==> ! ! c/\ c= cEL cNUMERAL c_0 cCONS b0 b1 b0 c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL c_0 b1 c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT1 c_0 b1 c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT0 cBIT1 c_0 b1 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT1 cBIT1 c_0 b1 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b1 * / ! c/\ c= cEL cNUMERAL c_0 cCONS b0 b1 b0 c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL c_0 b1 c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT1 c_0 b1 c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT0 cBIT1 c_0 b1 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT1 cBIT1 c_0 b1 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b1 f0 * / ! c/\ c= cEL cNUMERAL c_0 cCONS b0 b1 b0 c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL c_0 b1 c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT1 c_0 b1 c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT0 cBIT1 c_0 b1 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT1 cBIT1 c_0 b1 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b1 f0
+ |- (((!v1. (!w. (((((azim v0) v1) w) w) = (real_of_num (NUMERAL _0))))) ==> ((\v1. (!w. (((((azim v0) v1) w) w) = (real_of_num (NUMERAL _0))))) v1)) = ((\v1. (!w. (((((azim v0) v1) w) w) = (real_of_num (NUMERAL _0))))) v1))
T c= c==> ! ! c= cazim f0 b0 b1 b1 creal_of_num cNUMERAL c_0 * / ! c= cazim f0 b0 b1 b1 creal_of_num cNUMERAL c_0 f1 * / ! c= cazim f0 b0 b1 b1 creal_of_num cNUMERAL c_0 f1
- |- ((!n'. ((~ ((NUMERAL (BIT1 _0)) < n)) \/ ((~ (n' = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) = ((~ ((NUMERAL (BIT1 _0)) < n)) \/ (!n. ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))))
T c= ! c\/ c~ c< cNUMERAL cBIT1 c_0 f0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c\/ c~ c< cNUMERAL cBIT1 c_0 f0 ! c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0
+ (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))), ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)), ((NUMERAL (BIT1 _0)) < n) |- ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F)
T c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1 c==> c< cNUMERAL cBIT1 c_0 f1 c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) |- ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> (~ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n)))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f3 c==> c= * f4 f5 * f4 cSUC f5 c==> c= cMOD f5 f3 cMOD c+ f5 cNUMERAL cBIT1 c_0 f3 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c~ ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_7278281 = _7278283) |- ((_7278281 = _7278283) /\ ((~ (_7278282 = _7278284)) \/ (((I _7278281) _7278282) = ((I _7278283) _7278284))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cI f0 f2 cI f1 f3
+ |- (((!u1. (!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F)))))))))))) ==> ((\u1. (!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F)))))))))))) u1)) = ((\u1. (!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F)))))))))))) u1))
T c= c==> ! ! ! c==> cpacking b2 c==> csaturated b2 c==> cleaf_rank b2 cCONS b1 cCONS b0 cNIL f0 f1 f2 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f1 c==> c= * f2 f3 * f2 cSUC f3 c==> c= cMOD f3 f1 cMOD c+ f3 cNUMERAL cBIT1 c_0 f1 c==> ! c==> c< cNUMERAL cBIT1 c_0 b3 c/\ c~ c= b3 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b4 cNUMERAL c_0 c/\ c< b3 b4 c~ c= b3 cNUMERAL c_0 ! c~ c= cMOD b5 b4 cMOD c+ b5 b3 b4 cF * / ! ! c==> cpacking b2 c==> csaturated b2 c==> cleaf_rank b2 cCONS b1 cCONS b0 cNIL f0 f1 f2 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f1 c==> c= * f2 f3 * f2 cSUC f3 c==> c= cMOD f3 f1 cMOD c+ f3 cNUMERAL cBIT1 c_0 f1 c==> ! c==> c< cNUMERAL cBIT1 c_0 b3 c/\ c~ c= b3 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b4 cNUMERAL c_0 c/\ c< b3 b4 c~ c= b3 cNUMERAL c_0 ! c~ c= cMOD b5 b4 cMOD c+ b5 b3 b4 cF f4 * / ! ! c==> cpacking b2 c==> csaturated b2 c==> cleaf_rank b2 cCONS b1 cCONS b0 cNIL f0 f1 f2 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f1 c==> c= * f2 f3 * f2 cSUC f3 c==> c= cMOD f3 f1 cMOD c+ f3 cNUMERAL cBIT1 c_0 f1 c==> ! c==> c< cNUMERAL cBIT1 c_0 b3 c/\ c~ c= b3 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b4 cNUMERAL c_0 c/\ c< b3 b4 c~ c= b3 cNUMERAL c_0 ! c~ c= cMOD b5 b4 cMOD c+ b5 b3 b4 cF f4
+ |- ((\u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))))))))))) u0)
T * / ! c==> cpacking b1 c==> csaturated b1 c==> cleaf_rank b1 cCONS b0 cCONS f0 cNIL f1 f2 f3 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f2 c==> c= * f3 f4 * f3 cSUC f4 c==> c= cMOD f4 f2 cMOD c+ f4 cNUMERAL cBIT1 c_0 f2 c==> ! c==> c< cNUMERAL cBIT1 c_0 b2 c/\ c~ c= b2 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b3 cNUMERAL c_0 c/\ c< b2 b3 c~ c= b2 cNUMERAL c_0 ! c~ c= cMOD b4 b3 cMOD c+ b4 b2 b3 cF f5
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n))), ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) |- ((~ ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n))) /\ ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)))
T c==> c~ c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1 c==> c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1 c/\ c~ c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1 c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1
- ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))))))))) |- (((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))))))))) /\ ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))))))))))
T c==> c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> c= * f5 f6 * f5 cSUC f6 c==> c= cMOD f6 f4 cMOD c+ f6 cNUMERAL cBIT1 c_0 f4 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF c/\ c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> c= * f5 f6 * f5 cSUC f6 c==> c= cMOD f6 f4 cMOD c+ f6 cNUMERAL cBIT1 c_0 f4 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> c= * f5 f6 * f5 cSUC f6 c==> c= cMOD f6 f4 cMOD c+ f6 cNUMERAL cBIT1 c_0 f4 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF
+ |- (!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n)))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= f1 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT f4 part cEMPTY cleaf_rank f0 cCONS f2 cCONS f3 cNIL f4 f1 f5 c= c= cazim cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * f5 f6 * f5 f7 creal_of_num cNUMERAL c_0 c= cMOD f6 f1 cMOD f7 f1
- (((real_ge (real_of_int _7278243)) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) |- F
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- (_7278255 = _7278256) |- ((((collinear _7278255) = (collinear _7278256)) ==> ((collinear _7278256) \/ (~ (collinear _7278255)))) = ((collinear _7278256) \/ (~ (collinear _7278255))))
T c==> c= f0 f1 c= c==> c= ccollinear f0 ccollinear f1 c\/ ccollinear f1 c~ ccollinear f0 c\/ ccollinear f1 c~ ccollinear f0
+ (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) |- ((~ ((NUMERAL (BIT1 _0)) < _7278247)) \/ (~ (_7278247 = (NUMERAL _0))))
T c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c\/ c~ c< cNUMERAL cBIT1 c_0 f0 c~ c= f0 cNUMERAL c_0
- (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))), (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))), (~ F), ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)), ((NUMERAL (BIT1 _0)) < n) |- ((~ F) /\ F)
T c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> c~ cF c==> c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1 c==> c< cNUMERAL cBIT1 c_0 f1 c/\ c~ cF cF
- |- ((~ (_7278271 = _7278273)) \/ ((~ (_7278272 = _7278274)) \/ ((_7278271 + _7278272) = (_7278273 + _7278274))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c+ f0 f2 c+ f1 f3
+ |- ((\t. ((((EL (NUMERAL _0)) ((CONS h) t)) = h) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS h) t)) = ((EL (NUMERAL _0)) t)) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t))))))))) t)
T * / c/\ c= cEL cNUMERAL c_0 cCONS f0 b0 f0 c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL c_0 b0 c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b0 f1
+ |- ((~ F) = T)
T c= c~ cF cT
- |- ((~ (_7278281 = _7278283)) \/ ((~ (_7278282 = _7278284)) \/ (((I _7278281) _7278282) = ((I _7278283) _7278284))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cI f0 f2 cI f1 f3
- |- ((_7278259 = _7278264) ==> ((~ (_7278257 = _7278262)) \/ ((~ (_7278261 = _7278266)) \/ ((~ (_7278258 = _7278263)) \/ ((~ (_7278260 = _7278265)) \/ ((((((leaf_rank _7278262) _7278263) _7278264) _7278265) _7278266) \/ (~ (((((leaf_rank _7278257) _7278258) _7278259) _7278260) _7278261))))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f1 f9 f5 c~ cleaf_rank f2 f6 f0 f8 f4
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) |- (!k. (!n. (((n = (NUMERAL _0)) \/ ((~ (k < n)) \/ (k = (NUMERAL _0)))) \/ (!x. (~ ((x MOD n) = ((x + k) MOD n)))))))
T c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 ! ! c\/ c\/ c= b1 cNUMERAL c_0 c\/ c~ c< b0 b1 c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1
- |- ((!x. (P x)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((~ (n = (NUMERAL _0))) = p') ==> ((p' ==> (((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n))) = q')) ==> (((~ (n = (NUMERAL _0))) ==> ((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n)))) = (p' ==> q'))))
T c==> c= c~ c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= c= c= cazim f2 f3 * f4 cSUC f5 * f4 cSUC f5 creal_of_num cNUMERAL c_0 c= cMOD f5 f0 cMOD cSUC f5 f0 f6 c= c==> c~ c= f0 cNUMERAL c_0 c= c= cazim f2 f3 * f4 cSUC f5 * f4 cSUC f5 creal_of_num cNUMERAL c_0 c= cMOD f5 f0 cMOD cSUC f5 f0 c==> f1 f6
- (_7278281 = _7278283) |- ((_7278282 = _7278284) ==> (((I _7278281) _7278282) = ((I _7278283) _7278284)))
T c==> c= f0 f1 c==> c= f2 f3 c= cI f0 f2 cI f1 f3
+ |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- ((NUMERAL (BIT1 _0)) < n) |- (((NUMERAL (BIT1 _0)) < n) /\ ((n = (NUMERAL _0)) = F))
T c==> c< cNUMERAL cBIT1 c_0 f0 c/\ c< cNUMERAL cBIT1 c_0 f0 c= c= f0 cNUMERAL c_0 cF
- ((NUMERAL (BIT1 _0)) < n) |- (((NUMERAL (BIT1 _0)) < n) = T)
T c==> c< cNUMERAL cBIT1 c_0 f0 c= c< cNUMERAL cBIT1 c_0 f0 cT
+ |- (((EL (NUMERAL (BIT1 _0))) ((CONS h) t)) = ((EL (NUMERAL _0)) t))
T c= cEL cNUMERAL cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL c_0 f1
- (_7278289 = _7278291) |- ((_7278289 = _7278291) /\ ((~ (_7278290 = _7278292)) \/ ((_7278289 INSERT _7278290) = (_7278291 INSERT _7278292))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ |- ((~ (~ a)) = a)
T c= c~ c~ f0 f0
- (_7278257 = _7278262), (_7278259 = _7278264) |- ((_7278261 = _7278266) ==> ((~ (_7278258 = _7278263)) \/ ((~ (_7278260 = _7278265)) \/ ((((((leaf_rank _7278262) _7278263) _7278264) _7278265) _7278266) \/ (~ (((((leaf_rank _7278257) _7278258) _7278259) _7278260) _7278261))))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f1 f7 f3 f9 f5 c~ cleaf_rank f0 f6 f2 f8 f4
- (_7278261 = _7278266), (_7278257 = _7278262), (_7278258 = _7278263), (_7278259 = _7278264) |- ((_7278258 = _7278263) /\ ((~ (_7278260 = _7278265)) \/ ((((((leaf_rank _7278262) _7278263) _7278264) _7278265) _7278266) \/ (~ (((((leaf_rank _7278257) _7278258) _7278259) _7278260) _7278261)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c/\ c= f4 f5 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f5 f7 f9 f1 c~ cleaf_rank f2 f4 f6 f8 f0
+ |- (((~ ((int_lt (int_of_num (NUMERAL (BIT1 _0)))) (int_of_num n))) \/ (~ ((int_of_num n) = (int_of_num (NUMERAL _0))))) = (((NUMERAL (BIT1 _0)) < n) ==> (~ (n = (NUMERAL _0)))))
T c= c\/ c~ cint_lt cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f0 c~ c= cint_of_num f0 cint_of_num cNUMERAL c_0 c==> c< cNUMERAL cBIT1 c_0 f0 c~ c= f0 cNUMERAL c_0
+ |- (((!f. (!w0. (!u1. (!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F)))))))))))))) ==> ((\f. (!w0. (!u1. (!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F)))))))))))))) f)) = ((\f. (!w0. (!u1. (!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F)))))))))))))) f))
T c= c==> ! ! ! ! ! c==> cpacking b4 c==> csaturated b4 c==> cleaf_rank b4 cCONS b3 cCONS b2 cNIL b1 f0 b0 c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f0 c==> c= * b0 f1 * b0 cSUC f1 c==> c= cMOD f1 f0 cMOD c+ f1 cNUMERAL cBIT1 c_0 f0 c==> ! c==> c< cNUMERAL cBIT1 c_0 b5 c/\ c~ c= b5 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b6 cNUMERAL c_0 c/\ c< b5 b6 c~ c= b5 cNUMERAL c_0 ! c~ c= cMOD b7 b6 cMOD c+ b7 b5 b6 cF * / ! ! ! ! c==> cpacking b4 c==> csaturated b4 c==> cleaf_rank b4 cCONS b3 cCONS b2 cNIL b1 f0 b0 c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f0 c==> c= * b0 f1 * b0 cSUC f1 c==> c= cMOD f1 f0 cMOD c+ f1 cNUMERAL cBIT1 c_0 f0 c==> ! c==> c< cNUMERAL cBIT1 c_0 b5 c/\ c~ c= b5 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b6 cNUMERAL c_0 c/\ c< b5 b6 c~ c= b5 cNUMERAL c_0 ! c~ c= cMOD b7 b6 cMOD c+ b7 b5 b6 cF f2 * / ! ! ! ! c==> cpacking b4 c==> csaturated b4 c==> cleaf_rank b4 cCONS b3 cCONS b2 cNIL b1 f0 b0 c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f0 c==> c= * b0 f1 * b0 cSUC f1 c==> c= cMOD f1 f0 cMOD c+ f1 cNUMERAL cBIT1 c_0 f0 c==> ! c==> c< cNUMERAL cBIT1 c_0 b5 c/\ c~ c= b5 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b6 cNUMERAL c_0 c/\ c< b5 b6 c~ c= b5 cNUMERAL c_0 ! c~ c= cMOD b7 b6 cMOD c+ b7 b5 b6 cF f2
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
+ |- (((!f. (!i. (!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n))))))) ==> ((\f. (!i. (!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n))))))) f)) = ((\f. (!i. (!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n))))))) f))
T c= c==> ! ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= f1 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT f4 part cEMPTY cleaf_rank f0 cCONS f2 cCONS f3 cNIL f4 f1 b0 c= c= cazim cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * b0 b1 * b0 b2 creal_of_num cNUMERAL c_0 c= cMOD b1 f1 cMOD b2 f1 * / ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= f1 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT f4 part cEMPTY cleaf_rank f0 cCONS f2 cCONS f3 cNIL f4 f1 b0 c= c= cazim cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * b0 b1 * b0 b2 creal_of_num cNUMERAL c_0 c= cMOD b1 f1 cMOD b2 f1 f5 * / ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= f1 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT f4 part cEMPTY cleaf_rank f0 cCONS f2 cCONS f3 cNIL f4 f1 b0 c= c= cazim cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * b0 b1 * b0 b2 creal_of_num cNUMERAL c_0 c= cMOD b1 f1 cMOD b2 f1 f5
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))), ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)), ((NUMERAL (BIT1 _0)) < n) |- ((((~ (n = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)))) ==> ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) = ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))
T c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1 c==> c< cNUMERAL cBIT1 c_0 f1 c= c==> c/\ c~ c= f1 cNUMERAL c_0 c/\ c< cNUMERAL cBIT1 c_0 f1 c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1 c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c= cNUMERAL cBIT1 c_0 cNUMERAL c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((f i) = (f (SUC i))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= * f4 f5 * f4 cSUC f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> c= cMOD f5 f6 cMOD c+ f5 cNUMERAL cBIT1 c_0 f6 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF
- ((NUMERAL (BIT1 _0)) < n) |- (T = ((NUMERAL (BIT1 _0)) < n))
T c==> c< cNUMERAL cBIT1 c_0 f0 c= cT c< cNUMERAL cBIT1 c_0 f0
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- |- ((~ (_7278269 = _7278270)) \/ ((packing _7278270) \/ (~ (packing _7278269))))
T c\/ c~ c= f0 f1 c\/ cpacking f1 c~ cpacking f0
- (_7278261 = _7278266), (_7278257 = _7278262), (_7278260 = _7278265), (_7278258 = _7278263), (_7278259 = _7278264) |- ((((((((leaf_rank _7278257) _7278258) _7278259) _7278260) _7278261) = (((((leaf_rank _7278262) _7278263) _7278264) _7278265) _7278266)) ==> ((((((leaf_rank _7278262) _7278263) _7278264) _7278265) _7278266) \/ (~ (((((leaf_rank _7278257) _7278258) _7278259) _7278260) _7278261)))) = ((((((leaf_rank _7278262) _7278263) _7278264) _7278265) _7278266) \/ (~ (((((leaf_rank _7278257) _7278258) _7278259) _7278260) _7278261))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c= c==> c= cleaf_rank f2 f6 f8 f4 f0 cleaf_rank f3 f7 f9 f5 f1 c\/ cleaf_rank f3 f7 f9 f5 f1 c~ cleaf_rank f2 f6 f8 f4 f0 c\/ cleaf_rank f3 f7 f9 f5 f1 c~ cleaf_rank f2 f6 f8 f4 f0
- (_7278261 = _7278266), (_7278257 = _7278262), (_7278258 = _7278263), (_7278259 = _7278264) |- ((_7278260 = _7278265) ==> ((((((leaf_rank _7278262) _7278263) _7278264) _7278265) _7278266) \/ (~ (((((leaf_rank _7278257) _7278258) _7278259) _7278260) _7278261))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c\/ cleaf_rank f3 f5 f7 f9 f1 c~ cleaf_rank f2 f4 f6 f8 f0
- (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))), (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))), ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)), ((NUMERAL (BIT1 _0)) < n) |- ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) ==> ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))
T c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1 c==> c< cNUMERAL cBIT1 c_0 f1 c==> c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c= cNUMERAL cBIT1 c_0 cNUMERAL c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((f i) = (f (SUC i))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n)))) ==> F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= * f4 f5 * f4 cSUC f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> c==> c/\ csaturated f3 c/\ cpacking f3 c/\ c~ c= f6 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cNIL * * part cINSERT f2 part cEMPTY cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c= c= cazim cEL cNUMERAL c_0 cCONS f0 cCONS f1 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cNIL * f4 f5 * f4 cSUC f5 creal_of_num cNUMERAL c_0 c= cMOD f5 f6 cMOD cSUC f5 f6 cF
- |- ((_7278293 = _7278295) ==> ((~ (_7278294 = _7278296)) \/ (((CONS _7278293) _7278294) = ((CONS _7278295) _7278296))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
+ ((NUMERAL (BIT1 _0)) < n) |- (((NUMERAL (BIT1 _0)) < n) /\ (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> (~ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))))))))
T c==> c< cNUMERAL cBIT1 c_0 f0 c/\ c< cNUMERAL cBIT1 c_0 f0 c==> c= * f1 f2 * f1 cSUC f2 c==> c= cMOD f2 f0 cMOD c+ f2 cNUMERAL cBIT1 c_0 f0 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c~ ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1
- (_7278257 = _7278262), (_7278259 = _7278264) |- ((~ (_7278261 = _7278266)) \/ ((~ (_7278258 = _7278263)) \/ ((~ (_7278260 = _7278265)) \/ ((((((leaf_rank _7278262) _7278263) _7278264) _7278265) _7278266) \/ (~ (((((leaf_rank _7278257) _7278258) _7278259) _7278260) _7278261))))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f1 f7 f3 f9 f5 c~ cleaf_rank f0 f6 f2 f8 f4
+ |- ((T = t) = t)
T c= c= cT f0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (!p'. (!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3
+ |- ((((EL (NUMERAL (BIT1 _0))) ((CONS h) t)) = ((EL (NUMERAL _0)) t)) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t)))))))
T c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL c_0 f1 c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
+ T |- (T /\ (((((((azim u0) u1) (f (SUC i))) (f (SUC i))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((SUC i) MOD n))) = ((((((azim u0) u1) (f (i + (NUMERAL (BIT1 _0))))) (f (i + (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)))))
T c==> cT c/\ cT c= c= c= cazim f0 f1 * f2 cSUC f3 * f2 cSUC f3 creal_of_num cNUMERAL c_0 c= cMOD f3 f4 cMOD cSUC f3 f4 c= c= cazim f0 f1 * f2 c+ f3 cNUMERAL cBIT1 c_0 * f2 c+ f3 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= cMOD f3 f4 cMOD c+ f3 cNUMERAL cBIT1 c_0 f4
+ |- ((!u0. (!V. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> (~ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n)))))))))))))))))) = T)
T c= ! ! c==> cpacking b1 c==> csaturated b1 c==> cleaf_rank b1 cCONS b0 cCONS f0 cNIL f1 f2 f3 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f2 c==> c= * f3 f4 * f3 cSUC f4 c==> c= cMOD f4 f2 cMOD c+ f4 cNUMERAL cBIT1 c_0 f2 c==> ! c==> c< cNUMERAL cBIT1 c_0 b2 c/\ c~ c= b2 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c~ ! ! c==> c/\ c~ c= b3 cNUMERAL c_0 c/\ c< b2 b3 c~ c= b2 cNUMERAL c_0 ! c~ c= cMOD b4 b3 cMOD c+ b4 b2 b3 cT
+ |- (((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q')))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3 cT
+ |- ((~ ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n))) = (~ ((((((azim u0) u1) (f (i + (NUMERAL (BIT1 _0))))) (f (i + (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) = ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)))))
T c= c~ c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1 c~ c= c= cazim f2 f3 * f4 c+ f0 cNUMERAL cBIT1 c_0 * f4 c+ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)), ((f i) = (f (SUC i))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) /\ F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= cMOD f4 f5 cMOD c+ f4 cNUMERAL cBIT1 c_0 f5 c==> c= * f6 f4 * f6 cSUC f4 c==> c< cNUMERAL cBIT1 c_0 f5 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f5 f6 c/\ c= cMOD f4 f5 cMOD c+ f4 cNUMERAL cBIT1 c_0 f5 cF
- |- ((!n'. ((~ ((NUMERAL (BIT1 _0)) < n')) \/ ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) = ((!n. (~ ((NUMERAL (BIT1 _0)) < n))) \/ ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))))))
T c= ! c\/ c~ c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= f0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c\/ ! c~ c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= f0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0
- |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num i)) ==> (((int_add (int_of_num i)) (int_of_num (NUMERAL (BIT1 _0)))) = ((int_add (int_of_num i)) (int_of_num (NUMERAL (BIT1 _0)))))) = (((int_add (int_of_num i)) (int_of_num (NUMERAL (BIT1 _0)))) = ((int_add (int_of_num i)) (int_of_num (NUMERAL (BIT1 _0))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c= cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 c= cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0
- |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7278243)) /\ (((real_le ((real_add ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0
+ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) |- (((!x. (((_7278249 = (NUMERAL _0)) \/ ((~ (_7278248 < _7278249)) \/ (_7278248 = (NUMERAL _0)))) \/ (~ ((x MOD _7278249) = ((x + _7278248) MOD _7278249))))) ==> ((\x. (((_7278249 = (NUMERAL _0)) \/ ((~ (_7278248 < _7278249)) \/ (_7278248 = (NUMERAL _0)))) \/ (~ ((x MOD _7278249) = ((x + _7278248) MOD _7278249))))) _7278250)) = ((\x. (((_7278249 = (NUMERAL _0)) \/ ((~ (_7278248 < _7278249)) \/ (_7278248 = (NUMERAL _0)))) \/ (~ ((x MOD _7278249) = ((x + _7278248) MOD _7278249))))) _7278250))
T c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 c= c==> ! c\/ c\/ c= f0 cNUMERAL c_0 c\/ c~ c< f1 f0 c= f1 cNUMERAL c_0 c~ c= cMOD b0 f0 cMOD c+ b0 f1 f0 * / c\/ c\/ c= f0 cNUMERAL c_0 c\/ c~ c< f1 f0 c= f1 cNUMERAL c_0 c~ c= cMOD b0 f0 cMOD c+ b0 f1 f0 f2 * / c\/ c\/ c= f0 cNUMERAL c_0 c\/ c~ c< f1 f0 c= f1 cNUMERAL c_0 c~ c= cMOD b0 f0 cMOD c+ b0 f1 f0 f2
+ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) = T)
T c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c= cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 cT
+ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))), (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))), ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)), ((NUMERAL (BIT1 _0)) < n) |- F
T c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1 c==> c< cNUMERAL cBIT1 c_0 f1 cF
+ (packing V), (saturated V), ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))) |- (~ ((f i) = (f (SUC i))))
T c==> cpacking f0 c==> csaturated f0 c==> c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c< cNUMERAL cBIT1 c_0 f4 c~ c= * f5 f6 * f5 cSUC f6
+ (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))), ((NUMERAL (BIT1 _0)) < n) |- (~ (n = (NUMERAL _0)))
T c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> c< cNUMERAL cBIT1 c_0 f0 c~ c= f0 cNUMERAL c_0
+ |- ((T /\ t) = t)
T c= c/\ cT f0 f0
+ |- ((~ p) = (p ==> F))
T c= c~ f0 c==> f0 cF
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) |- (((~ ((NUMERAL (BIT1 _0)) < _7278247)) \/ (~ (_7278247 = (NUMERAL _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) < _7278247)) \/ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))
T c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c\/ c~ c< cNUMERAL cBIT1 c_0 f0 c~ c= f0 cNUMERAL c_0 c\/ c~ c< cNUMERAL cBIT1 c_0 f0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0
- (_7278255 = _7278256) |- ((_7278255 = _7278256) /\ ((collinear _7278256) \/ (~ (collinear _7278255))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
+ (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) |- ((((NUMERAL (BIT1 _0)) < _7278247) /\ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) ==> F)
T c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> c/\ c< cNUMERAL cBIT1 c_0 f0 c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7278243)) /\ (((real_le ((real_add ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7278243)) /\ (((real_le ((real_add ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7278243)) /\ (((real_le ((real_add ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7278243)) (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((\h. (!t. ((((EL (NUMERAL _0)) ((CONS h) t)) = h) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS h) t)) = ((EL (NUMERAL _0)) t)) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t)))))))))) h)
T * / ! c/\ c= cEL cNUMERAL c_0 cCONS b0 b1 b0 c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL c_0 b1 c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT1 c_0 b1 c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT0 cBIT1 c_0 b1 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT1 cBIT1 c_0 b1 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b1 f0
- (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))), (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))), (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))), ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)), ((NUMERAL (BIT1 _0)) < n) |- ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))
T c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1 c==> c< cNUMERAL cBIT1 c_0 f1 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c= cNUMERAL cBIT1 c_0 cNUMERAL c_0
+ (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))), ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)), ((NUMERAL (BIT1 _0)) < n) |- ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) /\ (~ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n)))))))))
T c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1 c==> c< cNUMERAL cBIT1 c_0 f1 c/\ ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c~ ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1
- |- ((((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))))))))) ==> ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F)))))))))) = ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> ((!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) ==> F))))))))))
T c= c==> c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> c= * f5 f6 * f5 cSUC f6 c==> c= cMOD f6 f4 cMOD c+ f6 cNUMERAL cBIT1 c_0 f4 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> c= * f5 f6 * f5 cSUC f6 c==> c= cMOD f6 f4 cMOD c+ f6 cNUMERAL cBIT1 c_0 f4 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> c= * f5 f6 * f5 cSUC f6 c==> c= cMOD f6 f4 cMOD c+ f6 cNUMERAL cBIT1 c_0 f4 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cF
+ (packing V), (saturated V), ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (~ ((f i) = (f (SUC i))))
T c==> cpacking f0 c==> csaturated f0 c==> c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c< cNUMERAL cBIT1 c_0 f4 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c~ c= * f5 f6 * f5 cSUC f6
+ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))), (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))), ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)), ((NUMERAL (BIT1 _0)) < n) |- ((NUMERAL (BIT1 _0)) = (NUMERAL _0))
T c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1 c==> c< cNUMERAL cBIT1 c_0 f1 c= cNUMERAL cBIT1 c_0 cNUMERAL c_0
+ |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
+ (packing V), ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n)))) |- (~ ((f i) = (f (SUC i))))
T c==> cpacking f0 c==> c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c< cNUMERAL cBIT1 c_0 f4 c~ c= * f5 f6 * f5 cSUC f6
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> (((f i) = (f (SUC i))) ==> (((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)) ==> ((!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))) ==> (~ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n)))))))))))))))) = T)
T c= c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> c= * f5 f6 * f5 cSUC f6 c==> c= cMOD f6 f4 cMOD c+ f6 cNUMERAL cBIT1 c_0 f4 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c~ ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 cT
+ (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))) |- (((_7278249 = (NUMERAL _0)) \/ ((~ (_7278248 < _7278249)) \/ (_7278248 = (NUMERAL _0)))) \/ (~ ((_7278250 MOD _7278249) = ((_7278250 + _7278248) MOD _7278249))))
T c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 c\/ c\/ c= f0 cNUMERAL c_0 c\/ c~ c< f1 f0 c= f1 cNUMERAL c_0 c~ c= cMOD f2 f0 cMOD c+ f2 f1 f0
- |- ((_7278267 = _7278268) ==> ((saturated _7278268) \/ (~ (saturated _7278267))))
T c==> c= f0 f1 c\/ csaturated f1 c~ csaturated f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((NUMERAL (BIT0 (BIT1 _0))) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- ((\f. (!i. (!j. (((saturated V) /\ ((packing V) /\ ((~ (n = (NUMERAL _0))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))) ==> ((((((azim ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f j)) = (real_of_num (NUMERAL _0))) = ((i MOD n) = (j MOD n))))))) f)
T * / ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ c~ c= f1 cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * * part cINSERT f4 part cEMPTY cleaf_rank f0 cCONS f2 cCONS f3 cNIL f4 f1 b0 c= c= cazim cEL cNUMERAL c_0 cCONS f2 cCONS f3 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f2 cCONS f3 cNIL * b0 b1 * b0 b2 creal_of_num cNUMERAL c_0 c= cMOD b1 f1 cMOD b2 f1 f5
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!k. (!n. (((~ (n = (NUMERAL _0))) /\ ((k < n) /\ (~ (k = (NUMERAL _0))))) ==> (!x. (~ ((x MOD n) = ((x + k) MOD n))))))), (!n. (((NUMERAL (BIT1 _0)) < n) ==> ((~ (n = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0)))))), ((i MOD n) = ((i + (NUMERAL (BIT1 _0))) MOD n)), ((NUMERAL (BIT1 _0)) < n) |- ((~ F) ==> F)
T c==> ! ! c==> c/\ c~ c= b1 cNUMERAL c_0 c/\ c< b0 b1 c~ c= b0 cNUMERAL c_0 ! c~ c= cMOD b2 b1 cMOD c+ b2 b0 b1 c==> ! c==> c< cNUMERAL cBIT1 c_0 b0 c/\ c~ c= b0 cNUMERAL c_0 c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c==> c= cMOD f0 f1 cMOD c+ f0 cNUMERAL cBIT1 c_0 f1 c==> c< cNUMERAL cBIT1 c_0 f1 c==> c~ cF cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- |- ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t))))))
T c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
- (_7278269 = _7278270) |- ((((packing _7278269) = (packing _7278270)) ==> ((packing _7278270) \/ (~ (packing _7278269)))) = ((packing _7278270) \/ (~ (packing _7278269))))
T c==> c= f0 f1 c= c==> c= cpacking f0 cpacking f1 c\/ cpacking f1 c~ cpacking f0 c\/ cpacking f1 c~ cpacking f0
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = (((_7278249 = (NUMERAL _0)) \/ ((~ (_7278248 < _7278249)) \/ ((_7278248 = (NUMERAL _0)) \/ (~ ((_7278250 MOD _7278249) = ((_7278250 + _7278248) MOD _7278249)))))) = ((_7278248 = (NUMERAL _0)) \/ ((_7278249 = (NUMERAL _0)) \/ ((~ (_7278248 < _7278249)) \/ (~ ((_7278250 MOD _7278249) = ((_7278250 + _7278248) MOD _7278249))))))))
T c= cT c= c\/ c= f0 cNUMERAL c_0 c\/ c~ c< f1 f0 c\/ c= f1 cNUMERAL c_0 c~ c= cMOD f2 f0 cMOD c+ f2 f1 f0 c\/ c= f1 cNUMERAL c_0 c\/ c= f0 cNUMERAL c_0 c\/ c~ c< f1 f0 c~ c= cMOD f2 f0 cMOD c+ f2 f1 f0
