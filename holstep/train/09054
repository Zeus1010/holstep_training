N Add_triangle.azim_split_fan_face_add
C |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> (!v. (!w. ((((v , w) IN (dart_of_fan (V , E))) /\ ((NUMERAL (BIT1 (BIT1 _0))) < (CARD ((face (hypermap_of_fan (V , E))) (v , w))))) ==> ((LET (\w'. (LET_END ((LET (\d2. (LET_END ((LET (\F2. (LET_END ((((azim_dart (V , E)) d2) = ((real_add ((azim_dart F2) (w , w'))) ((azim_dart F2) d2))) /\ (((azim_dart (V , E)) (w' , v)) = ((real_add ((azim_dart F2) (w' , w))) ((azim_dart F2) (w' , v)))))))) ((split_fan_face (V , E)) (v , w)))))) ((f_fan_pair (V , E)) (v , w)))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 ! ! c==> c/\ cIN c, b0 b1 * part cdart_of_fan c, f0 f1 c< cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_fan c, f0 f1 c, b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ c= cazim_dart c, f0 f1 b3 creal_add cazim_dart b4 c, b1 b2 cazim_dart b4 b3 c= cazim_dart c, f0 f1 c, b2 b0 creal_add cazim_dart b4 c, b2 b1 cazim_dart b4 c, b2 b0 csplit_fan_face c, f0 f1 c, b0 b1 cf_fan_pair c, f0 f1 c, b0 b1 csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D FUN_EQ_THM
A |- (!f. (!g. ((f = g) = (!x. ((f x) = (g x))))))
T c= c= f0 f1 ! c= * f0 b0 * f1 b0
D SELECT_AX
A |- (!P. (!x. ((P x) ==> (P (@ P)))))
T c==> * f0 f1 * f0 c@ f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D o_THM
A |- (!f. (!g. (!x. (((f o g) x) = (f (g x))))))
T c= co f0 f1 f2 * f0 * f1 f2
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D GABS_DEF
A |- (!P. ((GABS P) = (@ P)))
T c= cGABS f0 c@ f0
D GEQ_DEF
A |- (!a. (!b. (((GEQ a) b) = (a = b))))
T c= cGEQ f0 f1 c= f0 f1
D PAIR_EQ
A |- (!x. (!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))))
T c= c= c, f0 f1 c, f2 f3 c/\ c= f0 f2 c= f1 f3
D FST
A |- (!x. (!y. ((FST (x , y)) = x)))
T c= cFST c, f0 f1 f0
D pair_INDUCT
A |- (!P. ((!x. (!y. (P (x , y)))) ==> (!p. (P p))))
T c==> ! ! * f0 c, b0 b1 ! * f0 b0
D pair_RECURSION
A |- (!PAIR'. (?fn. (!a0. (!a1. ((fn (a0 , a1)) = ((PAIR' a0) a1))))))
T c? / ! ! c= * b0 c, b1 b2 * * f0 b1 b2
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D ADD_CLAUSES
A |- ((!n. (((NUMERAL _0) + n) = n)) /\ ((!m. ((m + (NUMERAL _0)) = m)) /\ ((!m. (!n. (((SUC m) + n) = (SUC (m + n))))) /\ (!m. (!n. ((m + (SUC n)) = (SUC (m + n))))))))
T c/\ ! c= c+ cNUMERAL c_0 b0 b0 c/\ ! c= c+ b0 cNUMERAL c_0 b0 c/\ ! ! c= c+ cSUC b0 b1 cSUC c+ b0 b1 ! ! c= c+ b0 cSUC b1 cSUC c+ b0 b1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D GE
A |- (!n. (!m. ((m >= n) = (n <= m))))
T c= c>= f0 f1 c<= f1 f0
D GT
A |- (!n. (!m. ((m > n) = (n < m))))
T c= c> f0 f1 c< f1 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D NOT_LT
A |- (!m. (!n. ((~ (m < n)) = (n <= m))))
T c= c~ c< f0 f1 c<= f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D Ssrnat.leq_eqVlt
A |- (!m. (!n. ((m <= n) = ((m = n) \/ (m < n)))))
T c= c<= f0 f1 c\/ c= f0 f1 c< f0 f1
D Hypermap.THREE
A |- ((NUMERAL (BIT1 (BIT1 _0))) = (SUC (NUMERAL (BIT0 (BIT1 _0)))))
T c= cNUMERAL cBIT1 cBIT1 c_0 cSUC cNUMERAL cBIT0 cBIT1 c_0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_EQ_ADD_RCANCEL
A |- (!x. (!y. (!z. ((((real_add x) z) = ((real_add y) z)) = (x = y)))))
T c= c= creal_add f0 f1 creal_add f2 f1 c= f0 f2
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_UNION
A |- (!s. (!t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t))))))
T c= cIN f0 * * part cUNION f1 f2 c\/ cIN f0 f1 cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D IN_DELETE
A |- (!s. (!x. (!y. ((x IN (s DELETE y)) = ((x IN s) /\ (~ (x = y)))))))
T c= cIN f0 * * part cDELETE f1 f2 c/\ cIN f0 f1 c~ c= f0 f2
D IN_SING
A |- (!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y))))
T c= cIN f0 * * part cINSERT f1 part cEMPTY c= f0 f1
D IN_IMAGE
A |- (!y. (!s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s)))))))
T c= cIN f0 * * part cIMAGE f1 f2 c? / c/\ c= f0 * f1 b0 cIN b0 f2
D UNION_COMM
A |- (!s. (!t. ((s UNION t) = (t UNION s))))
T c= * * part cUNION f0 f1 * * part cUNION f1 f0
D SUBSET_UNION_ABSORPTION
A |- (!s. (!t. ((s SUBSET t) = ((s UNION t) = t))))
T c= cSUBSET f0 f1 c= * * part cUNION f0 f1 f1
D ABSORPTION
A |- (!x. (!s. ((x IN s) = ((x INSERT s) = s))))
T c= cIN f0 f1 c= * * part cINSERT f0 f1 f1
D INSERT_DELETE
A |- (!x. (!s. ((x IN s) ==> ((x INSERT (s DELETE x)) = s))))
T c==> cIN f0 f1 c= * * part cINSERT f0 * * part cDELETE f1 f0 f1
D FINITE_INSERT
A |- (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s))))
T c= cFINITE * * part cINSERT f0 f1 cFINITE f1
D FINITE_DELETE
A |- (!s. (!x. ((FINITE (s DELETE x)) = (FINITE s))))
T c= cFINITE * * part cDELETE f0 f1 cFINITE f0
D CARD_IMAGE_INJ
A |- (!f. (!s. (((!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f x) = (f y)))) ==> (x = y)))) /\ (FINITE s)) ==> ((CARD ((IMAGE f) s)) = (CARD s)))))
T c==> c/\ ! ! c==> c/\ cIN b0 f0 c/\ cIN b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 cFINITE f0 c= cCARD * * part cIMAGE f1 f0 cCARD f0
D SUM_CLAUSES
A |- ((!f. (((sum EMPTY) f) = (real_of_num (NUMERAL _0)))) /\ (!x. (!f. (!s. ((FINITE s) ==> (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f)))))))))
T c/\ ! c= csum part cEMPTY b0 creal_of_num cNUMERAL c_0 ! ! ! c==> cFINITE b2 c= csum * * part cINSERT b0 b2 b1 cCOND cIN b0 b2 csum b2 b1 creal_add * b1 b0 csum b2 b1
D SUM_EQ
A |- (!f. (!g. (!s. ((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((sum s) f) = ((sum s) g))))))
T c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= csum f0 f1 csum f0 f2
D Hypermap.res
A |- (!f. (!s. (!x. ((((res f) s) x) = (((COND (x IN s)) (f x)) x)))))
T c= cres f0 f1 f2 cCOND cIN f2 f1 * f0 f2 f2
D Collect_geom.PER_SET2
A |- ((a INSERT (b INSERT EMPTY)) = (b INSERT (a INSERT EMPTY)))
T c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
D Fan.POWER
A |- ((!f. (((POWER f) (NUMERAL _0)) = I)) /\ (!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))))
T c/\ ! c= * * part cPOWER b0 cNUMERAL c_0 part cI ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0
D Fan.POWER_1
A |- (!f. (((POWER f) (NUMERAL (BIT1 _0))) = f))
T c= * * part cPOWER f0 cNUMERAL cBIT1 c_0 f0
D Fan.POWER_2
A |- (!f. (((POWER f) (NUMERAL (BIT0 (BIT1 _0)))) = (f o f)))
T c= * * part cPOWER f0 cNUMERAL cBIT0 cBIT1 c_0 * * part co f0 f0
D Hypermap.face
A |- (!H. (!x. (((face H) x) = ((orbit_map (face_map H)) x))))
T c= * * part cface f0 f1 * * part corbit_map * part cface_map f0 f1
D Hypermap.lemma_dart_invariant
A |- (!H. (!x. ((x IN (dart H)) ==> ((((edge_map H) x) IN (dart H)) /\ ((((node_map H) x) IN (dart H)) /\ (((face_map H) x) IN (dart H)))))))
T c==> cIN f0 * part cdart f1 c/\ cIN cedge_map f1 f0 * part cdart f1 c/\ cIN cnode_map f1 f0 * part cdart f1 cIN cface_map f1 f0 * part cdart f1
D Hypermap.card_orbit_le
A |- (!f. (!n. (!x. (((~ (n = (NUMERAL _0))) /\ ((((POWER f) n) x) = x)) ==> ((CARD ((orbit_map f) x)) <= n)))))
T c==> c/\ c~ c= f0 cNUMERAL c_0 c= cPOWER f1 f0 f2 f2 c<= cCARD * * part corbit_map f1 f2 f0
D Hypermap.node_refl
A |- (!H. (!x. (x IN ((node H) x))))
T cIN f0 * * part cnode f1 f0
D Hypermap.face_refl
A |- (!H. (!x. (x IN ((face H) x))))
T cIN f0 * * part cface f1 f0
D Hypermap.lemma_node_subset
A |- (!H. (!x. ((x IN (dart H)) ==> (((node H) x) SUBSET (dart H)))))
T c==> cIN f0 * part cdart f1 cSUBSET * * part cnode f1 f0 * part cdart f1
D Hypermap.lemma_face_subset
A |- (!H. (!x. ((x IN (dart H)) ==> (((face H) x) SUBSET (dart H)))))
T c==> cIN f0 * part cdart f1 cSUBSET * * part cface f1 f0 * part cdart f1
D Hypermap.lemma_in_face_set
A |- (!H. (!x. ((x IN (dart H)) = (((face H) x) IN (face_set H)))))
T c= cIN f0 * part cdart f1 cIN * * part cface f1 f0 * part cface_set f1
D Hypermap.NODE_FINITE
A |- (!H. (!x. (FINITE ((node H) x))))
T cFINITE * * part cnode f0 f1
D Hypermap.FACE_FINITE
A |- (!H. (!x. (FINITE ((face H) x))))
T cFINITE * * part cface f0 f1
D Hypermap.lemma_in_face
A |- (!H. (!x. (!n. ((((POWER (face_map H)) n) x) IN ((face H) x)))))
T cIN cPOWER * part cface_map f0 f1 f2 * * part cface f0 f2
D Fan_defs.set_of_edge
A |- (!v. (!E. (!V. ((((set_of_edge v) V) E) = (GSPEC (\GEN%PVAR%5439. (?w. (((SETSPEC GEN%PVAR%5439) (((v INSERT (w INSERT EMPTY)) IN E) /\ (w IN V))) w))))))))
T c= * * * part cset_of_edge f0 f1 f2 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN * * part cINSERT f0 * * part cINSERT b1 part cEMPTY f2 cIN b1 f1 b1
D Fan.extension_sigma_fan
A |- (!x. (!V. (!E. (!v. (!u. ((((((extension_sigma_fan x) V) E) v) u) = (((COND (~ (u IN (((set_of_edge v) V) E)))) u) (((((sigma_fan x) V) E) v) u))))))))
T c= cextension_sigma_fan f0 f1 f2 f3 f4 cCOND c~ cIN f4 * * * part cset_of_edge f3 f1 f2 f4 csigma_fan f0 f1 f2 f3 f4
D Tame_defs.contracted_dart
A |- (!x. (!w1. (!v. (!w. ((contracted_dart (x , (v , (w , w1)))) = (v , w))))))
T c= ccontracted_dart c, f0 c, f1 c, f2 f3 c, f1 f2
D Fan_defs.f_fan_pair
A |- (!V. (!E. (!w. (!v. (((f_fan_pair (V , E)) (v , w)) = (w , (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) w) v)))))))
T c= cf_fan_pair c, f0 f1 c, f2 f3 c, f3 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f3 f2
D Fan_defs.fully_surrounded
A |- (!V. (!E. ((fully_surrounded (V , E)) = (!x. ((x IN (dart_of_fan (V , E))) ==> ((real_lt ((azim_dart (V , E)) x)) pi))))))
T c= cfully_surrounded c, f0 f1 ! c==> cIN b0 * part cdart_of_fan c, f0 f1 creal_lt cazim_dart c, f0 f1 b0 cpi
D Fan.properties_of_set_of_edge_fan
A |- (!x. (!V. (!E. (!v. (!u. ((FAN (x , (V , E))) ==> (((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E)))))))))
T c==> cFAN c, f0 c, f1 f2 c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2
D Fan.sigma_fan_in_set_of_edge
A |- (!x. (!V. (!E. (!v. (!u. (((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 cIN f3 * * * part cset_of_edge f4 f1 f2 cIN csigma_fan f0 f1 f2 f4 f3 * * * part cset_of_edge f4 f1 f2
D Fan.pr2
A |- (pr2 = (GABS (\f. (!x. (!v. (!w. (!w1. ((GEQ (f (x , (v , (w , w1))))) v))))))))
T c= part cpr2 * part cGABS / ! ! ! ! cGEQ * b0 c, b1 c, b2 c, b3 b4 b2
D Fan.pr3
A |- (pr3 = (GABS (\f. (!x. (!v. (!w. (!w1. ((GEQ (f (x , (v , (w , w1))))) w))))))))
T c= part cpr3 * part cGABS / ! ! ! ! cGEQ * b0 c, b1 c, b2 c, b3 b4 b3
D Fan.INVERSE1_SIGMA_FAN
A |- (!x. (!V. (!E. (!v. ((FAN (x , (V , E))) ==> ((!w. (((v INSERT (w INSERT EMPTY)) IN E) ==> ((v INSERT ((((((inverse1_sigma_fan x) V) E) v) w) INSERT EMPTY)) IN E))) /\ ((!w. (((v INSERT (w INSERT EMPTY)) IN E) ==> ((((((sigma_fan x) V) E) v) (((((inverse1_sigma_fan x) V) E) v) w)) = w))) /\ (!w. (((v INSERT (w INSERT EMPTY)) IN E) ==> ((((((inverse1_sigma_fan x) V) E) v) (((((sigma_fan x) V) E) v) w)) = w))))))))))
T c==> cFAN c, f0 c, f1 f2 c/\ ! c==> cIN * * part cINSERT f3 * * part cINSERT b0 part cEMPTY f2 cIN * * part cINSERT f3 * * part cINSERT cinverse1_sigma_fan f0 f1 f2 f3 b0 part cEMPTY f2 c/\ ! c==> cIN * * part cINSERT f3 * * part cINSERT b0 part cEMPTY f2 c= csigma_fan f0 f1 f2 f3 cinverse1_sigma_fan f0 f1 f2 f3 b0 b0 ! c==> cIN * * part cINSERT f3 * * part cINSERT b0 part cEMPTY f2 c= cinverse1_sigma_fan f0 f1 f2 f3 csigma_fan f0 f1 f2 f3 b0 b0
D Fan_misc.FAN_IN_SET_OF_EDGE
A |- (!x. (!V. (!E. (!v. (!w. (((FAN (x , (V , E))) /\ ((v INSERT (w INSERT EMPTY)) IN E)) ==> ((v IN V) /\ ((w IN V) /\ ((w IN (((set_of_edge v) V) E)) /\ (v IN (((set_of_edge w) V) E)))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN f3 f1 c/\ cIN f4 f1 c/\ cIN f4 * * * part cset_of_edge f3 f1 f2 cIN f3 * * * part cset_of_edge f4 f1 f2
D Fan_misc.INVERSE_SIGMA_FAN_EQ_INVERSE1_SIGMA_FAN
A |- (!x. (!V. (!E. (!v. (!w. (((FAN (x , (V , E))) /\ ((v INSERT (w INSERT EMPTY)) IN E)) ==> ((((((inverse1_sigma_fan x) V) E) v) w) = (((((inverse_sigma_fan x) V) E) v) w))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c= cinverse1_sigma_fan f0 f1 f2 f3 f4 cinverse_sigma_fan f0 f1 f2 f3 f4
D Planarity.fan80
A |- (!x. (!V. (!E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi)))))))))
T c= cfan80 c, f0 c, f1 f2 ! ! c==> cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b0 b1 csigma_fan f0 f1 f2 b0 b1 creal_lt cazim f0 b0 b1 csigma_fan f0 f1 f2 b0 b1 cpi
D Planarity.PROPERTIES_TRIANGLE_FAN
A |- (!x. (!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((w INSERT (v INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((((((sigma_fan x) V) E) v) u) = w) /\ ((((((sigma_fan x) V) E) w) v) = u)))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f4 f5 f3 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 f2 c/\ c= csigma_fan f0 f1 f2 f3 f4 f5 c= csigma_fan f0 f1 f2 f5 f3 f4
D Hypermap_and_fan.E_N_F_IN_DART1_OF_FAN
A |- (!V. (!E. (!x. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (x IN (dart1_of_fan (V , E)))) ==> ((((e_fan_pair (V , E)) x) IN (dart1_of_fan (V , E))) /\ ((((n_fan_pair (V , E)) x) IN (dart1_of_fan (V , E))) /\ (((f_fan_pair (V , E)) x) IN (dart1_of_fan (V , E)))))))))
T c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN f2 * part cdart1_of_fan c, f0 f1 c/\ cIN ce_fan_pair c, f0 f1 f2 * part cdart1_of_fan c, f0 f1 c/\ cIN cn_fan_pair c, f0 f1 f2 * part cdart1_of_fan c, f0 f1 cIN cf_fan_pair c, f0 f1 f2 * part cdart1_of_fan c, f0 f1
D Hypermap_and_fan.COMPONENTS_HYPERMAP_OF_FAN
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((dart (hypermap_of_fan (V , E))) = (dart_of_fan (V , E))) /\ (((edge_map (hypermap_of_fan (V , E))) = (e_fan_pair_ext (V , E))) /\ (((node_map (hypermap_of_fan (V , E))) = (n_fan_pair_ext (V , E))) /\ ((face_map (hypermap_of_fan (V , E))) = (f_fan_pair_ext (V , E)))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c/\ c= * part cdart chypermap_of_fan c, f0 f1 * part cdart_of_fan c, f0 f1 c/\ c= * part cedge_map chypermap_of_fan c, f0 f1 * part ce_fan_pair_ext c, f0 f1 c/\ c= * part cnode_map chypermap_of_fan c, f0 f1 * part cn_fan_pair_ext c, f0 f1 c= * part cface_map chypermap_of_fan c, f0 f1 * part cf_fan_pair_ext c, f0 f1
D Hypermap_and_fan.INVERSE_F_FAN_PAIR_EXT_EXPLICIT
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((inverse (f_fan_pair_ext (V , E))) = ((res (GABS (\f. (!v. (!w. ((GEQ (f (v , w))) ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) , v))))))) (dart1_of_fan (V , E)))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c= * part cinverse * part cf_fan_pair_ext c, f0 f1 * * part cres * part cGABS / ! ! cGEQ * b0 c, b1 b2 c, csigma_fan cvec cNUMERAL c_0 f0 f1 b1 b2 b1 * part cdart1_of_fan c, f0 f1
D Hypermap_and_fan.NODE_SUBSET_DART_OF_FAN
A |- (!V. (!E. (!x. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (x IN (dart_of_fan (V , E)))) ==> (((node (hypermap_of_fan (V , E))) x) SUBSET (dart_of_fan (V , E)))))))
T c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN f2 * part cdart_of_fan c, f0 f1 cSUBSET * * part cnode chypermap_of_fan c, f0 f1 f2 * part cdart_of_fan c, f0 f1
D Hypermap_and_fan.FACE_SUBSET_DART1_OF_FAN
A |- (!V. (!E. (!x. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (x IN (dart1_of_fan (V , E)))) ==> (((face (hypermap_of_fan (V , E))) x) SUBSET (dart1_of_fan (V , E)))))))
T c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN f2 * part cdart1_of_fan c, f0 f1 cSUBSET * * part cface chypermap_of_fan c, f0 f1 f2 * part cdart1_of_fan c, f0 f1
D Hypermap_and_fan.PAIR_IN_DART1_OF_FAN
A |- (!V. (!E. (!v. (!w. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((v , w) IN (dart1_of_fan (V , E)))) ==> ((v IN V) /\ ((w IN V) /\ ((w IN (((set_of_edge v) V) E)) /\ (v IN (((set_of_edge w) V) E))))))))))
T c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c/\ cIN f2 f0 c/\ cIN f3 f0 c/\ cIN f3 * * * part cset_of_edge f2 f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1
D Hypermap_and_fan.CARD_FACE_GT_1
A |- (!V. (!E. (!x. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((CARD ((face (hypermap_of_fan (V , E))) x)) > (NUMERAL (BIT1 _0)))) ==> (x IN (dart1_of_fan (V , E)))))))
T c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 c> cCARD * * part cface chypermap_of_fan c, f0 f1 f2 cNUMERAL cBIT1 c_0 cIN f2 * part cdart1_of_fan c, f0 f1
D Hypermap_and_fan.TRIANGULAR_FACE
A |- (!V. (!E. (!v. (!w. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (((v , w) IN (dart1_of_fan (V , E))) /\ ((CARD ((face (hypermap_of_fan (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))))) ==> ((LET (\w'. (LET_END ((((face (hypermap_of_fan (V , E))) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((((((sigma_fan (vec (NUMERAL _0))) V) E) w) w') = v) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) w') v) = w)))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)))))))
T c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 c/\ cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 c= cCARD * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 cNUMERAL cBIT1 cBIT1 c_0 cLET / cLET_END c/\ c= * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 * * part cINSERT c, f2 f3 * * part cINSERT c, f3 b0 * * part cINSERT c, b0 f2 part cEMPTY c/\ c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 b0 f2 c= csigma_fan cvec cNUMERAL c_0 f0 f1 b0 f2 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3
D Hypermap_and_fan.FACE_LAST_POINT
A |- (!V. (!E. (!v. (!w. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((v , w) IN (dart1_of_fan (V , E)))) ==> ((LET (\w'. (LET_END ((w' , v) IN ((face (hypermap_of_fan (V , E))) (v , w)))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)))))))
T c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 cLET / cLET_END cIN c, b0 f2 * * part cface chypermap_of_fan c, f0 f1 c, f2 f3 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3
D Hypermap_and_fan.SUM_AZIM_DART
A |- (!V. (!E. (!x. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (x IN (dart_of_fan (V , E)))) ==> (((sum ((node (hypermap_of_fan (V , E))) x)) (azim_dart (V , E))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))))
T c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN f2 * part cdart_of_fan c, f0 f1 c= csum * * part cnode chypermap_of_fan c, f0 f1 f2 * part cazim_dart c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi
D Hypermap_and_fan.FULLY_SURROUNDED_IMP_CARD_FACE_GE_3
A |- (!V. (!E. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (fully_surrounded (V , E))) ==> (!x. ((x IN (dart_of_fan (V , E))) ==> ((CARD ((face (hypermap_of_fan (V , E))) x)) >= (NUMERAL (BIT1 (BIT1 _0)))))))))
T c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cfully_surrounded c, f0 f1 ! c==> cIN b0 * part cdart_of_fan c, f0 f1 c>= cCARD * * part cface chypermap_of_fan c, f0 f1 b0 cNUMERAL cBIT1 cBIT1 c_0
D Conforming.STEP3_REDUCE_FAN
A |- (!x. (!V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1)))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f10 cFAN c, f0 c, f1 f10
D Conforming.add_edge_imp_card_set_edge_ge1_fan
A |- (!x. (!V. (!E. (!E1. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY))))) ==> (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= f3 * * part cUNION f2 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f3 cNUMERAL cBIT1 c_0
D Conforming.pr23
A |- (pr23 = (GABS (\f. (!x. (!y. (!z. (!t. ((GEQ (f (x , (y , (z , t))))) (y , z)))))))))
T c= part cpr23 * part cGABS / ! ! ! ! cGEQ * b0 c, b1 c, b2 c, b3 b4 c, b2 b3
D Conforming.DART_FANADD_EQ_DART_FAN_ADD_2DART
A |- (!x. (!V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((~ (v = w)) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))))))))))))))) ==> (((IMAGE pr23) (dart (hypermap1_of_fanx (x , (V , E1))))) = (((IMAGE pr23) (dart (hypermap1_of_fanx (x , (V , E))))) UNION ((v , w) INSERT ((w , v) INSERT EMPTY))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c/\ c~ c= f7 f9 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f10 c= * * part cIMAGE part cpr23 * part cdart chypermap1_of_fanx c, f0 c, f1 f10 * * part cUNION * * part cIMAGE part cpr23 * part cdart chypermap1_of_fanx c, f0 c, f1 f2 * * part cINSERT c, f7 f9 * * part cINSERT c, f9 f7 part cEMPTY
D Conforming.tran
A |- (!x. (!V. (!E1. ((((tran x) V) E1) = (GABS (\f. (!x. (!y. (!z. (!w. ((GEQ (f (x , (y , (z , w))))) (x , (y , (z , (((((sigma_fan x) V) E1) y) z)))))))))))))))
T c= * * * part ctran f0 f1 f2 * part cGABS / ! ! ! ! cGEQ * b0 c, b1 c, b2 c, b3 b4 c, b1 c, b2 c, b3 csigma_fan b1 f1 f2 b2 b3
D Conforming.FAN80_FANADD
A |- (!x. (!V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w))))) = ds1) /\ ((((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = ds2) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))))))))))))))))))))) ==> (fan80 (x , (V , E1))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c/\ c= cpr3 f4 f8 c/\ c= cpr3 f5 f9 c/\ c= * * part cface chypermap1_of_fanx c, f0 c, f1 f10 c, f0 c, f7 c, f9 csigma_fan f0 f1 f10 f7 f9 f11 c/\ c= * * part cface chypermap1_of_fanx c, f0 c, f1 f10 c, f0 c, f9 c, f7 csigma_fan f0 f1 f10 f9 f7 f12 c/\ c= c, f0 c, f9 c, f7 f8 f13 c/\ c= c, f0 c, f7 c, f8 f9 f14 c/\ c= c, f0 c, f8 c, f9 f7 f15 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f10 cfan80 c, f0 c, f1 f10
D Conforming.azim_fanadd_eq
A |- (!x. (!V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (!ds0. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w))))) = ds1) /\ ((((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = ds2) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((ds0 IN ((face_set (hypermap1_of_fanx (x , (V , E)))) DELETE ds)) /\ (y IN ds0)))))))))))))))))))))))))) ==> ((((((azim_fan x) V) E1) (pr2 ((((tran x) V) E1) y))) (pr3 ((((tran x) V) E1) y))) = (((((azim_fan x) V) E) (pr2 y)) (pr3 y))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c/\ c= cpr3 f4 f8 c/\ c= cpr3 f5 f9 c/\ c= * * part cface chypermap1_of_fanx c, f0 c, f1 f10 c, f0 c, f7 c, f9 csigma_fan f0 f1 f10 f7 f9 f11 c/\ c= * * part cface chypermap1_of_fanx c, f0 c, f1 f10 c, f0 c, f9 c, f7 csigma_fan f0 f1 f10 f9 f7 f12 c/\ c= c, f0 c, f9 c, f7 f8 f13 c/\ c= c, f0 c, f7 c, f8 f9 f14 c/\ c= c, f0 c, f8 c, f9 f7 f15 c/\ c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f10 c/\ cIN f16 * * part cDELETE * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 f3 cIN f17 f16 c= cazim_fan f0 f1 f10 cpr2 ctran f0 f1 f10 f17 cpr3 ctran f0 f1 f10 f17 cazim_fan f0 f1 f2 cpr2 f17 cpr3 f17
D Conforming.azim_fanadd_eq_ds
A |- (!x. (!V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w))))) = ds1) /\ ((((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = ds2) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((y IN ds) /\ ((~ (y = f1)) /\ (~ (y = f3)))))))))))))))))))))))))))) ==> ((((((azim_fan x) V) E1) (pr2 ((((tran x) V) E1) y))) (pr3 ((((tran x) V) E1) y))) = (((((azim_fan x) V) E) (pr2 y)) (pr3 y)))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c/\ c= cpr3 f4 f8 c/\ c= cpr3 f5 f9 c/\ c= * * part cface chypermap1_of_fanx c, f0 c, f1 f10 c, f0 c, f7 c, f9 csigma_fan f0 f1 f10 f7 f9 f11 c/\ c= * * part cface chypermap1_of_fanx c, f0 c, f1 f10 c, f0 c, f9 c, f7 csigma_fan f0 f1 f10 f9 f7 f12 c/\ c= c, f0 c, f9 c, f7 f8 f13 c/\ c= c, f0 c, f7 c, f8 f9 f14 c/\ c= c, f0 c, f8 c, f9 f7 f15 c/\ c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f10 c/\ cIN f16 f3 c/\ c~ c= f16 f4 c~ c= f16 f6 c= cazim_fan f0 f1 f10 cpr2 ctran f0 f1 f10 f16 cpr3 ctran f0 f1 f10 f16 cazim_fan f0 f1 f2 cpr2 f16 cpr3 f16
D Packing3.SING_UNION_EQ_INSERT
A |- (!s. (!x. (((x INSERT EMPTY) UNION s) = (x INSERT s))))
T c= * * part cUNION * * part cINSERT f0 part cEMPTY f1 * * part cINSERT f0 f1
D Lvducxu.FACE_NODE_EDGE_ORBIT_INVERSE
A |- ((((face H) x) = ((orbit_map (inverse (face_map H))) x)) /\ ((((node H) x) = ((orbit_map (inverse (node_map H))) x)) /\ (((edge H) x) = ((orbit_map (inverse (edge_map H))) x))))
T c/\ c= * * part cface f0 f1 * * part corbit_map * part cinverse * part cface_map f0 f1 c/\ c= * * part cnode f0 f1 * * part corbit_map * part cinverse * part cnode_map f0 f1 c= * * part cedge f0 f1 * * part corbit_map * part cinverse * part cedge_map f0 f1
D ssreflect_eq_def
A |- (!v. (!P. (((ssreflect_eq v) P) = P)))
T c= cssreflect_eq f0 f1 f1
D bool_elim
A |- (!P. (((P T) /\ (P F)) ==> (!x. (P x))))
T c==> c/\ * f0 cT * f0 cF ! * f0 b0
D Ssrbool.contraNN
A |- (!c. (!b. ((c ==> b) ==> ((~ b) ==> (~ c)))))
T c==> c==> f0 f1 c==> c~ f1 c~ f0
D Ssrbool.contraL
A |- (!c. (!b. ((c ==> (~ b)) ==> (b ==> (~ c)))))
T c==> c==> f0 c~ f1 c==> f1 c~ f0
D Ssrbool.andTb
A |- (!b. ((T /\ b) = b))
T c= c/\ cT f0 f0
D Ssrbool.andbT
A |- (!b. ((b /\ T) = b))
T c= c/\ f0 cT f0
D Ssrbool.andbb
A |- (!b. ((b /\ b) = b))
T c= c/\ f0 f0 f0
D Ssrbool.orbF
A |- (!b. ((b \/ F) = b))
T c= c\/ f0 cF f0
D Ssrbool.andb_id2r
A |- (!a. (!b. (!c. ((b ==> (a = c)) ==> ((a /\ b) = (c /\ b))))))
T c==> c==> f0 c= f1 f2 c= c/\ f1 f0 c/\ f2 f0
D Ssrbool.negb_or
A |- (!a. (!b. ((~ (a \/ b)) = ((~ a) /\ (~ b)))))
T c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D Hypermap_iso.IN_TRANS
A |- (!x. (!s. (!t. (((t SUBSET s) /\ (x IN t)) ==> (x IN s)))))
T c==> c/\ cSUBSET f0 f1 cIN f2 f0 cIN f2 f1
D Hypermap_iso.image_set_inj_gen
A |- (!u. (!f. ((!x. (!y. (((x IN u) /\ ((y IN u) /\ ((f x) = (f y)))) ==> (x = y)))) ==> (!s. (!t. (((s SUBSET u) /\ ((t SUBSET u) /\ (((IMAGE f) s) = ((IMAGE f) t)))) ==> (s = t)))))))
T c==> ! ! c==> c/\ cIN b0 f0 c/\ cIN b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 ! ! c==> c/\ cSUBSET b0 f0 c/\ cSUBSET b1 f0 c= * * part cIMAGE f1 b0 * * part cIMAGE f1 b1 c= b0 b1
D Hypermap_iso.hyp_iso_inj
A |- (!G. (!H. (!f. (((hyp_iso f) (H , G)) ==> (!x. (!y. (((x IN (dart H)) /\ ((y IN (dart H)) /\ ((f x) = (f y)))) ==> (x = y))))))))
T c==> chyp_iso f0 c, f1 f2 ! ! c==> c/\ cIN b0 * part cdart f1 c/\ cIN b1 * part cdart f1 c= * f0 b0 * f0 b1 c= b0 b1
D Hypermap_iso.hyp_iso_dart
A |- (!H. (!f. (!G. (((hyp_iso f) (H , G)) ==> (!x. ((x IN (dart H)) ==> ((f x) IN (dart G))))))))
T c==> chyp_iso f0 c, f1 f2 ! c==> cIN b0 * part cdart f1 cIN * f0 b0 * part cdart f2
D Hypermap_iso.iso_components
A |- (!G. (!f. (!H. (((hyp_iso f) (H , G)) ==> (!d. ((d IN (dart H)) ==> ((((node G) (f d)) = ((IMAGE f) ((node H) d))) /\ ((((face G) (f d)) = ((IMAGE f) ((face H) d))) /\ (((edge G) (f d)) = ((IMAGE f) ((edge H) d)))))))))))
T c==> chyp_iso f0 c, f1 f2 ! c==> cIN b0 * part cdart f1 c/\ c= * * part cnode f2 * f0 b0 * * part cIMAGE f0 * * part cnode f1 b0 c/\ c= * * part cface f2 * f0 b0 * * part cIMAGE f0 * * part cface f1 b0 c= * * part cedge f2 * f0 b0 * * part cIMAGE f0 * * part cedge f1 b0
D Hypermap_iso.ext_dart
A |- (!V. (!E. (!v. (!w. (((ext_dart (V , E)) (v , w)) = ((vec (NUMERAL _0)) , (v , (w , (((((extension_sigma_fan (vec (NUMERAL _0))) V) E) v) w)))))))))
T c= cext_dart c, f0 f1 c, f2 f3 c, cvec cNUMERAL c_0 c, f2 c, f3 cextension_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3
D Hypermap_iso.hypermap_of_fan_rep_alt
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((dart (hypermap1_of_fanx ((vec (NUMERAL _0)) , (V , E)))) = (d_fan ((vec (NUMERAL _0)) , (V , E)))) /\ (((edge_map (hypermap1_of_fanx ((vec (NUMERAL _0)) , (V , E)))) = ((res (((e_fan (vec (NUMERAL _0))) V) E)) (d1_fan ((vec (NUMERAL _0)) , (V , E))))) /\ (((node_map (hypermap1_of_fanx ((vec (NUMERAL _0)) , (V , E)))) = ((res (((n_fan (vec (NUMERAL _0))) V) E)) (d1_fan ((vec (NUMERAL _0)) , (V , E))))) /\ ((face_map (hypermap1_of_fanx ((vec (NUMERAL _0)) , (V , E)))) = ((res (((f1_fan (vec (NUMERAL _0))) V) E)) (d1_fan ((vec (NUMERAL _0)) , (V , E)))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c/\ c= * part cdart chypermap1_of_fanx c, cvec cNUMERAL c_0 c, f0 f1 * part cd_fan c, cvec cNUMERAL c_0 c, f0 f1 c/\ c= * part cedge_map chypermap1_of_fanx c, cvec cNUMERAL c_0 c, f0 f1 * * part cres * * * part ce_fan cvec cNUMERAL c_0 f0 f1 * part cd1_fan c, cvec cNUMERAL c_0 c, f0 f1 c/\ c= * part cnode_map chypermap1_of_fanx c, cvec cNUMERAL c_0 c, f0 f1 * * part cres * * * part cn_fan cvec cNUMERAL c_0 f0 f1 * part cd1_fan c, cvec cNUMERAL c_0 c, f0 f1 c= * part cface_map chypermap1_of_fanx c, cvec cNUMERAL c_0 c, f0 f1 * * part cres * * * part cf1_fan cvec cNUMERAL c_0 f0 f1 * part cd1_fan c, cvec cNUMERAL c_0 c, f0 f1
D Hypermap_iso.fan_hypermaps_iso_explicit2
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((hyp_iso (ext_dart (V , E))) ((hypermap_of_fan (V , E)) , (hypermap1_of_fanx ((vec (NUMERAL _0)) , (V , E))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 chyp_iso * part cext_dart c, f0 f1 c, chypermap_of_fan c, f0 f1 chypermap1_of_fanx c, cvec cNUMERAL c_0 c, f0 f1
D Add_triangle.split_fan_face
A |- (!V. (!v. (!w. (!E. (((split_fan_face (V , E)) (v , w)) = (V , ((w INSERT ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) INSERT EMPTY)) INSERT E)))))))
T c= csplit_fan_face c, f0 f1 c, f2 f3 c, f0 * * part cINSERT * * part cINSERT f3 * * part cINSERT csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 part cEMPTY f1
D Add_triangle.inE_eq_in_dart1
A |- (!V. (!E. (!v. (!w. (((v INSERT (w INSERT EMPTY)) IN E) = ((v , w) IN (dart1_of_fan (V , E))))))))
T c= cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cIN c, f0 f1 * part cdart1_of_fan c, f3 f2
D Add_triangle.dart1_switch
A |- (!V. (!E. (!v. (!w. (((v , w) IN (dart1_of_fan (V , E))) = ((w , v) IN (dart1_of_fan (V , E))))))))
T c= cIN c, f0 f1 * part cdart1_of_fan c, f2 f3 cIN c, f1 f0 * part cdart1_of_fan c, f2 f3
D Add_triangle.dart_switch
A |- (!V. (!E. (!v. (!w. (((v , w) IN (dart_of_fan (V , E))) = ((w , v) IN (dart_of_fan (V , E))))))))
T c= cIN c, f0 f1 * part cdart_of_fan c, f2 f3 cIN c, f1 f0 * part cdart_of_fan c, f2 f3
D Add_triangle.fst_node_hypermap_of_fan
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (!x. (!y. ((x IN ((node (hypermap_of_fan (V , E))) y)) ==> ((FST x) = (FST y))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 ! ! c==> cIN b0 * * part cnode chypermap_of_fan c, f0 f1 b1 c= cFST b0 cFST b1
D Add_triangle.fan_node_eq_fst
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (!d. ((d IN (dart_of_fan (V , E))) ==> (((node (hypermap_of_fan (V , E))) d) = (GSPEC (\GEN%PVAR%7662. (?x. (((SETSPEC GEN%PVAR%7662) ((x IN (dart_of_fan (V , E))) /\ ((FST x) = (FST d)))) x))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 ! c==> cIN b0 * part cdart_of_fan c, f0 f1 c= * * part cnode chypermap_of_fan c, f0 f1 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 * part cdart_of_fan c, f0 f1 c= cFST b2 cFST b0 b2
D Add_triangle.azim_dart_eq_azim_fan
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (!v. (!w. (((v , w) IN (dart_of_fan (V , E))) ==> (((azim_dart (V , E)) (v , w)) = (((((azim_fan (vec (NUMERAL _0))) V) E) v) w))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 ! ! c==> cIN c, b0 b1 * part cdart_of_fan c, f0 f1 c= cazim_dart c, f0 f1 c, b0 b1 cazim_fan cvec cNUMERAL c_0 f0 f1 b0 b1
D Add_triangle.azim_dart1_eq_azim
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (!v. (!w. ((((v , w) IN (dart1_of_fan (V , E))) /\ ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))) ==> (((azim_dart (V , E)) (v , w)) = ((((azim (vec (NUMERAL _0))) v) w) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 ! ! c==> c/\ cIN c, b0 b1 * part cdart1_of_fan c, f0 f1 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c= cazim_dart c, f0 f1 c, b0 b1 cazim cvec cNUMERAL c_0 b0 b1 csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1
D Add_triangle.fully_surrounded_dart_of_fan_eq
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((dart_of_fan (V , E)) = (dart1_of_fan (V , E)))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c= * part cdart_of_fan c, f0 f1 * part cdart1_of_fan c, f0 f1
D Add_triangle.fully_surrounded_card_set_of_edge1
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (!v. (((fully_surrounded (V , E)) /\ (v IN V)) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 ! c==> c/\ cfully_surrounded c, f0 f1 cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0
D Add_triangle.fully_surrounded_imp_fan80
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> (fan80 ((vec (NUMERAL _0)) , (V , E)))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 cfan80 c, cvec cNUMERAL c_0 c, f0 f1
D Add_triangle.sigma_fan_inV
A |- (!E. (!V. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (!v. (!w. (((v , w) IN (dart1_of_fan (V , E))) ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) IN V)))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 ! ! c==> cIN c, b0 b1 * part cdart1_of_fan c, f0 f1 cIN csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 f0
D Add_triangle.sigma_fan_not_fixed
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (!v. (!w. ((((v , w) IN (dart_of_fan (V , E))) /\ (fully_surrounded (V , E))) ==> (~ ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 ! ! c==> c/\ cIN c, b0 b1 * part cdart_of_fan c, f0 f1 cfully_surrounded c, f0 f1 c~ c= csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 b1
D Add_triangle.dart_of_fan_eq_image
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((dart_of_fan (V , E)) = ((IMAGE contracted_dart) (d_fan ((vec (NUMERAL _0)) , (V , E))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c= * part cdart_of_fan c, f0 f1 * * part cIMAGE part ccontracted_dart * part cd_fan c, cvec cNUMERAL c_0 c, f0 f1
D Add_triangle.fan_hypermap_map1
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (!d. ((d IN (dart1_of_fan (V , E))) ==> ((((face_map (hypermap_of_fan (V , E))) d) = ((f_fan_pair (V , E)) d)) /\ ((((node_map (hypermap_of_fan (V , E))) d) = ((n_fan_pair (V , E)) d)) /\ (((edge_map (hypermap_of_fan (V , E))) d) = ((e_fan_pair (V , E)) d)))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 ! c==> cIN b0 * part cdart1_of_fan c, f0 f1 c/\ c= cface_map chypermap_of_fan c, f0 f1 b0 cf_fan_pair c, f0 f1 b0 c/\ c= cnode_map chypermap_of_fan c, f0 f1 b0 cn_fan_pair c, f0 f1 b0 c= cedge_map chypermap_of_fan c, f0 f1 b0 ce_fan_pair c, f0 f1 b0
D Add_triangle.fan_map_ext
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (!d. ((d IN (dart1_of_fan (V , E))) ==> ((((((f1_fan (vec (NUMERAL _0))) V) E) ((ext_dart (V , E)) d)) = ((ext_dart (V , E)) ((f_fan_pair (V , E)) d))) /\ ((((((n_fan (vec (NUMERAL _0))) V) E) ((ext_dart (V , E)) d)) = ((ext_dart (V , E)) ((n_fan_pair (V , E)) d))) /\ (((((e_fan (vec (NUMERAL _0))) V) E) ((ext_dart (V , E)) d)) = ((ext_dart (V , E)) ((e_fan_pair (V , E)) d))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 ! c==> cIN b0 * part cdart1_of_fan c, f0 f1 c/\ c= cf1_fan cvec cNUMERAL c_0 f0 f1 cext_dart c, f0 f1 b0 cext_dart c, f0 f1 cf_fan_pair c, f0 f1 b0 c/\ c= cn_fan cvec cNUMERAL c_0 f0 f1 cext_dart c, f0 f1 b0 cext_dart c, f0 f1 cn_fan_pair c, f0 f1 b0 c= ce_fan cvec cNUMERAL c_0 f0 f1 cext_dart c, f0 f1 b0 cext_dart c, f0 f1 ce_fan_pair c, f0 f1 b0
D Add_triangle.pair_expand
A |- (!p. (p = ((FST p) , (SND p))))
T c= f0 c, cFST f0 cSND f0
