N Planarity.solid_of_dartset_leads_into_fan_triangle_fan
C |- (!x. (!V. (!E. (!ds. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cpi
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D BIT1
A |- (!n. ((BIT1 n) = (SUC (n + n))))
T c= cBIT1 f0 cSUC c+ f0 f0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D Ssrnat.expnS
A |- (!m. (!n. ((m EXP (SUC n)) = (m * (m EXP n)))))
T c= cEXP f0 cSUC f1 c* f0 cEXP f0 f1
D Ssrnat.expn0
A |- (!m. ((m EXP (NUMERAL _0)) = (NUMERAL (BIT1 _0))))
T c= cEXP f0 cNUMERAL c_0 cNUMERAL cBIT1 c_0
D EXP_ADD
A |- (!m. (!n. (!p. ((m EXP (n + p)) = ((m EXP n) * (m EXP p))))))
T c= cEXP f0 c+ f1 f2 c* cEXP f0 f1 cEXP f0 f2
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D REAL_MUL_LINV
A |- (!x. ((~ (x = (real_of_num (NUMERAL _0)))) ==> (((real_mul (real_inv x)) x) = (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c~ c= f0 creal_of_num cNUMERAL c_0 c= creal_mul creal_inv f0 f0 creal_of_num cNUMERAL cBIT1 c_0
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D real_div
A |- (!x. (!y. (((real_div x) y) = ((real_mul x) (real_inv y)))))
T c= creal_div f0 f1 creal_mul f0 creal_inv f1
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_OF_NUM_POW
A |- (!x. (!n. (((real_pow (real_of_num x)) n) = (real_of_num (x EXP n)))))
T c= creal_pow creal_of_num f0 f1 creal_of_num cEXP f0 f1
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_MUL_RID
A |- (!x. (((real_mul x) (real_of_num (NUMERAL (BIT1 _0)))) = x))
T c= creal_mul f0 creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_MUL_AC
A |- ((((real_mul m) n) = ((real_mul n) m)) /\ ((((real_mul ((real_mul m) n)) p) = ((real_mul m) ((real_mul n) p))) /\ (((real_mul m) ((real_mul n) p)) = ((real_mul n) ((real_mul m) p)))))
T c/\ c= creal_mul f0 f1 creal_mul f1 f0 c/\ c= creal_mul creal_mul f0 f1 f2 creal_mul f0 creal_mul f1 f2 c= creal_mul f0 creal_mul f1 f2 creal_mul f1 creal_mul f0 f2
D REAL_INV_INV
A |- (!x. ((real_inv (real_inv x)) = x))
T c= creal_inv creal_inv f0 f0
D REAL_INV_NEG
A |- (!x. ((real_inv (real_neg x)) = (real_neg (real_inv x))))
T c= creal_inv creal_neg f0 creal_neg creal_inv f0
D REAL_INV_1
A |- ((real_inv (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0))))
T c= creal_inv creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
D REAL_DIV_1
A |- (!x. (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x))
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_INV_MUL
A |- (!x. (!y. ((real_inv ((real_mul x) y)) = ((real_mul (real_inv x)) (real_inv y)))))
T c= creal_inv creal_mul f0 f1 creal_mul creal_inv f0 creal_inv f1
D REAL_INV_DIV
A |- (!x. (!y. ((real_inv ((real_div x) y)) = ((real_div y) x))))
T c= creal_inv creal_div f0 f1 creal_div f1 f0
D DECIMAL
A |- (!x. (!y. (((DECIMAL x) y) = ((real_div (real_of_num x)) (real_of_num y)))))
T c= cDECIMAL f0 f1 creal_div creal_of_num f0 creal_of_num f1
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D DISJOINT
A |- (!s. (!t. (((DISJOINT s) t) = ((s INTER t) = EMPTY))))
T c= cDISJOINT f0 f1 c= * * part cINTER f0 f1 part cEMPTY
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_UNION
A |- (!s. (!t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t))))))
T c= cIN f0 * * part cUNION f1 f2 c\/ cIN f0 f1 cIN f0 f2
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D FINITE_EMPTY
A |- (FINITE EMPTY)
T cFINITE part cEMPTY
D FINITE_INSERT
A |- (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s))))
T c= cFINITE * * part cINSERT f0 f1 cFINITE f1
D SUM_UNION
A |- (!f. (!s. (!t. (((FINITE s) /\ ((FINITE t) /\ ((DISJOINT s) t))) ==> (((sum (s UNION t)) f) = ((real_add ((sum s) f)) ((sum t) f)))))))
T c==> c/\ cFINITE f0 c/\ cFINITE f1 cDISJOINT f0 f1 c= csum * * part cUNION f0 f1 f2 creal_add csum f0 f2 csum f1 f2
D SUM_SING
A |- (!f. (!x. (((sum (x INSERT EMPTY)) f) = (f x))))
T c= csum * * part cINSERT f0 part cEMPTY f1 * f1 f0
D VOLUME_SOLID_TRIANGLE
A |- (!r. (!v0. (!v1. (!v2. (!v3. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((measure ((ball (v0 , r)) INTER ((aff_gt (v0 INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) = ((LET (\a123. (LET_END ((LET (\a231. (LET_END ((LET (\a312. (LET_END ((real_mul ((real_add a123) ((real_add a231) ((real_sub a312) pi)))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) ((((dihV v0) v3) v1) v2))))) ((((dihV v0) v2) v3) v1))))) ((((dihV v0) v1) v2) v3)))))))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= cmeasure * * part cINTER * part cball c, f1 f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END creal_mul creal_add b0 creal_add b1 creal_sub b2 cpi creal_div creal_pow f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdihV f1 f4 f2 f3 cdihV f1 f3 f4 f2 cdihV f1 f2 f3 f4
D Vol1.sol
A |- (!x. (!C. (!r. ((((real_gt r) (real_of_num (NUMERAL _0))) /\ ((measurable (C INTER ((normball x) r))) /\ (((radial_norm r) x) (C INTER ((normball x) r))))) ==> (((sol x) C) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_div (measure (C INTER ((normball x) r)))) ((real_pow r) (NUMERAL (BIT1 (BIT1 _0)))))))))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 c/\ cmeasurable * * part cINTER f1 * * part cnormball f2 f0 cradial_norm f0 f2 * * part cINTER f1 * * part cnormball f2 f0 c= csol f2 f1 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_div cmeasure * * part cINTER f1 * * part cnormball f2 f0 creal_pow f0 cNUMERAL cBIT1 cBIT1 c_0
D Fan.f_fan_no_fix_point
A |- (!x. (!V. (!E. ((FAN (x , (V , E))) ==> (!a. ((a IN (d1_fan (x , (V , E)))) ==> (~ (((((f1_fan x) V) E) a) = a))))))))
T c==> cFAN c, f0 c, f1 f2 ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c~ c= cf1_fan f0 f1 f2 b0 b0
D Fan.face_subset_dart_fan
A |- (!x. (!V. (!E. (!ds. (((FAN (x , (V , E))) /\ (ds IN (face_set (hypermap1_of_fanx (x , (V , E)))))) ==> (ds SUBSET (d_fan (x , (V , E)))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 cSUBSET f3 * part cd_fan c, f0 c, f1 f2
D Fan.dartset_fully_surrounded_is_non_isolated_fan
A |- (!x. (!V. (!E. (((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> ((d_fan (x , (V , E))) = (d1_fan (x , (V , E))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= * part cd_fan c, f0 c, f1 f2 * part cd1_fan c, f0 c, f1 f2
D Planarity.fan80
A |- (!x. (!V. (!E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi)))))))))
T c= cfan80 c, f0 c, f1 f2 ! ! c==> cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b0 b1 csigma_fan f0 f1 f2 b0 b1 creal_lt cazim f0 b0 b1 csigma_fan f0 f1 f2 b0 b1 cpi
D Planarity.properties_fully_surrounded
A |- (!x. (!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f4 f5 f3 creal_lt cazim f0 f4 f5 f3 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
D Planarity.UNIQUE_DARTSET_LEADS_INTO1_FAN
A |- (!x. (!V. (!E. (!ds. (!s. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((y IN ds) /\ (s = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y)))))))) ==> (((((dartset_leads_into_fan x) V) E) ds) = s))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ cIN f4 f3 c= f5 * * * * * part cdart_leads_into f0 f1 f2 cpr2 f4 cpr3 f4 c= * * * * part cdartset_leads_into_fan f0 f1 f2 f3 f5
D Planarity.KVQWYDL_lemma1
A |- (!x. (!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((w INSERT (v INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = (((((dart_leads_into x) V) E) u) w)))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f4 f5 f3 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 f2 c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * * * * part cdart_leads_into f0 f1 f2 f4 f5
D Planarity.PROPERTIES_TRIANGLE_FAN
A |- (!x. (!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((w INSERT (v INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((((((sigma_fan x) V) E) v) u) = w) /\ ((((((sigma_fan x) V) E) w) v) = u)))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f4 f5 f3 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 f2 c/\ c= csigma_fan f0 f1 f2 f3 f4 f5 c= csigma_fan f0 f1 f2 f5 f3 f4
D Planarity.CARD_FACE_SET_EQ_3_FULLY_SURROUNDED_FAN1
A |- (!x. (!V. (!E. (!ds. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0))))))) ==> (?f1. (?f2. (?f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c/\ c= f3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cf1_fan f0 f1 f2 b0 b1 c/\ c= cf1_fan f0 f1 f2 b1 b2 c/\ c= cf1_fan f0 f1 f2 b2 b0 c/\ cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr2 b2 part cEMPTY f2 c/\ cIN * * part cINSERT cpr2 b2 * * part cINSERT cpr2 b0 part cEMPTY f2 c/\ cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr2 b1 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 cpr2 b1 cpr2 b2 cpr2 b0 c/\ c= cpr2 b2 cpr3 b1 c/\ c= cpr2 b1 cpr3 b0 c= cpr2 b0 cpr3 b2
D Planarity.dartset_leads_into_fan_radial
A |- (!x. (!V. (!E. (!ds. (!r. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt r) (real_of_num (NUMERAL _0)))))))) ==> (((radial_norm r) x) (((((dartset_leads_into_fan x) V) E) ds) INTER ((normball x) r)))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 creal_gt f4 creal_of_num cNUMERAL c_0 cradial_norm f4 f0 * * part cINTER * * * * part cdartset_leads_into_fan f0 f1 f2 f3 * * part cnormball f0 f4
D Planarity.ball_eq_normball
A |- (!x. (!r. ((ball (x , r)) = ((normball x) r))))
T c= * part cball c, f0 f1 * * part cnormball f0 f1
D Planarity.measurable_dartset_leads_into3_fan
A |- (!x. (!V. (!E. (!ds. (!e. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt e) (real_of_num (NUMERAL _0)))))))) ==> (measurable (((((dartset_leads_into_fan x) V) E) ds) INTER (ball (x , e))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 creal_gt f4 creal_of_num cNUMERAL c_0 cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f0 f1 f2 f3 * part cball c, f0 f4
D Planarity.CARD_GT1_IMP_AZIM_FAN_EQ_DIHV
A |- (!x. (!V. (!E. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (y IN (d_fan (x , (V , E))))))) ==> ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 cIN f3 * part cd_fan c, f0 c, f1 f2 c= cazim_fan f0 f1 f2 cpr2 f3 cpr3 f3 cdihV f0 cpr2 f3 cpr3 f3 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), (((((f1_fan x) V) E) f3) = f1), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f6 c==> c= cf1_fan f2 f0 f1 f6 f4 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> c/\ c= cpr2 f6 cpr3 f5 c/\ c= cpr2 f5 cpr3 f4 c= cpr2 f4 cpr3 f6 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- ((?f1. (?f2. (?f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))))))))))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> c? / c? / c? / c/\ c= f3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cf1_fan f2 f0 f1 b0 b1 c/\ c= cf1_fan f2 f0 f1 b1 b2 c/\ c= cf1_fan f2 f0 f1 b2 b0 c/\ cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr2 b2 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b2 * * part cINSERT cpr2 b0 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr2 b1 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 b1 cpr2 b2 cpr2 b0 c/\ c= cpr2 b2 cpr3 b1 c/\ c= cpr2 b1 cpr3 b0 c= cpr2 b0 cpr3 b2 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
+ (x = f2), ((x = f1) /\ ((x = f2) \/ (x = f3))) |- ((~ (f2 = f1)) = (~ (f1 = f1)))
T c==> c= f0 f1 c==> c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c= c~ c= f1 f2 c~ c= f2 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) (pr3 f1)) (pr3 f2)) (pr3 f3))), ((real_lt ((((azim x) (pr3 f1)) (pr3 f2)) (pr3 f3))) pi), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (measure (((normball x) (real_of_num (NUMERAL (BIT1 _0)))) INTER ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 cpr3 f4 c==> c= cpr2 f5 cpr3 f3 c==> c= cpr2 f4 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f4 cpr2 f3 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f2 cpr3 f3 cpr3 f5 cpr3 f4 c==> creal_lt cazim f2 cpr3 f3 cpr3 f5 cpr3 f4 cpi c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f3 part cEMPTY f1 c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f2 cpr3 f4 cpr3 f3 csigma_fan f2 f0 f1 cpr3 f4 cpr3 f3 cpi creal_add creal_sub cdihV f2 cpr3 f3 cpr3 f5 csigma_fan f2 f0 f1 cpr3 f3 cpr3 f5 cpi creal_sub cdihV f2 cpr3 f5 cpr3 f4 csigma_fan f2 f0 f1 cpr3 f5 cpr3 f4 cpi
+ |- ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0))))
T c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0
+ |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), (((((f1_fan x) V) E) f3) = f1), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3)))))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f6 c==> c= cf1_fan f2 f0 f1 f6 f4 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c/\ c= cpr2 f6 cpr3 f5 c/\ c= cpr2 f5 cpr3 f4 c= cpr2 f4 cpr3 f6 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
- |- ((!f3. (!f2. (!f1. (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))))) = (!f3. (!f2. (!f1. ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F)))))
T c= ! ! ! c==> c/\ c~ c= b2 b0 c/\ c~ c= b0 b1 c~ c= b1 b2 c/\ ! c~ c/\ c= b3 b2 c\/ c= b3 b1 c= b3 b0 ! c~ c/\ c= b3 b1 c= b3 b0 ! ! ! c==> c~ c==> c/\ c~ c= b2 b0 c/\ c~ c= b0 b1 c~ c= b1 b2 c/\ ! c~ c/\ c= b3 b2 c\/ c= b3 b1 c= b3 b0 ! c~ c/\ c= b3 b1 c= b3 b0 cF
+ |- (((((BIT1 _0) EXP _0) = (BIT1 _0)) ==> ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0))))) = ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0)))))
T c= c==> c= cEXP cBIT1 c_0 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0
+ ((x = f2) /\ (x = f3)) |- (f3 = f2)
T c==> c/\ c= f0 f1 c= f0 f2 c= f2 f1
+ (~ (A x)), (((~ (A x)) \/ (~ (B x))) /\ ((B x) /\ (A x))) |- F
T c==> c~ * f0 f1 c==> c/\ c\/ c~ * f0 f1 c~ * f2 f1 c/\ * f2 f1 * f0 f1 cF
+ (x = f2), ((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))), ((x = f1) /\ ((x = f2) \/ (x = f3))) |- F
T c==> c= f0 f1 c==> c/\ c~ c= f2 f3 c/\ c~ c= f3 f1 c~ c= f1 f2 c==> c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 cF
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ |- ((((A x) /\ (B x)) /\ ((~ (B x)) \/ (~ (A x)))) ==> F)
T c==> c/\ c/\ * f0 f1 * f2 f1 c\/ c~ * f2 f1 c~ * f0 f1 cF
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (coplanar (x INSERT ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- ((~ (coplanar (x INSERT ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))))) /\ (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (measure (((normball x) (real_of_num (NUMERAL (BIT1 _0)))) INTER ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccoplanar * * part cINSERT f2 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f4 cpr3 f3 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f3 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f3 cpr2 f4 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f3 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ c~ ccoplanar * * part cINSERT f2 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f2 cpr3 f3 cpr3 f4 csigma_fan f2 f0 f1 cpr3 f3 cpr3 f4 cpi creal_add creal_sub cdihV f2 cpr3 f4 cpr3 f5 csigma_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cdihV f2 cpr3 f5 cpr3 f3 csigma_fan f2 f0 f1 cpr3 f5 cpr3 f3 cpi
- ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F) |- (((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F) /\ ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F))
T c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c/\ c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) ==> ((\x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) x)) = ((\x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) x))
T c= c==> ! ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 * / ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 f0 * / ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 f0
+ (x = f3), ((x = f1) /\ ((x = f2) \/ (x = f3))) |- (f3 = f1)
T c==> c= f0 f1 c==> c/\ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c= f1 f2
+ (!a. ((a IN (d1_fan (x , (V , E)))) ==> (~ (((((f1_fan x) V) E) a) = a)))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (f1 = f3)), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))) |- ((~ (f1 = f3)) /\ (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c~ c= cf1_fan f0 f1 f2 b0 b0 c==> ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c==> c~ c= f3 f4 c==> cFAN c, f0 c, f1 f2 c==> cfan80 c, f0 c, f1 f2 c==> c= f5 * * part cINSERT f3 * * part cINSERT f6 * * part cINSERT f4 part cEMPTY c==> c= * part cd_fan c, f0 c, f1 f2 * part cd1_fan c, f0 c, f1 f2 c==> c= cf1_fan f0 f1 f2 f3 f6 c==> c= cf1_fan f0 f1 f2 f6 f4 c==> c= cCARD f5 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f3 cpr3 f4 c==> c= cpr2 f6 cpr3 f3 c==> c= cpr2 f4 cpr3 f6 c==> c= csigma_fan f0 f1 f2 cpr2 f6 cpr2 f4 cpr2 f3 c==> cIN f5 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f6 part cEMPTY f2 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f2 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f3 part cEMPTY f2 c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c==> cIN f6 * part cd1_fan c, f0 c, f1 f2 c==> cIN f4 * part cd1_fan c, f0 c, f1 f2 c/\ c~ c= f3 f4 c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f3 * * part cINSERT f6 * * part cINSERT f4 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f3 * * part cINSERT f6 * * part cINSERT f4 part cEMPTY / creal_sub cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cpi
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), (((((f1_fan x) V) E) f3) = f1), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))) |- ((!a. ((a IN (d1_fan (x , (V , E)))) ==> (~ (((((f1_fan x) V) E) a) = a)))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f6 c==> c= cf1_fan f2 f0 f1 f6 f4 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c==> cIN f5 * part cd1_fan c, f2 c, f0 f1 c==> cIN f6 * part cd1_fan c, f2 c, f0 f1 c==> ! c==> cIN b0 * part cd1_fan c, f2 c, f0 f1 c~ c= cf1_fan f2 f0 f1 b0 b0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), (((((f1_fan x) V) E) f1) = f2), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))))))))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ c= cf1_fan f2 f0 f1 f4 f5 c/\ c= cf1_fan f2 f0 f1 f5 f6 c/\ c= cf1_fan f2 f0 f1 f6 f4 c/\ cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c/\ c= cpr2 f6 cpr3 f5 c/\ c= cpr2 f5 cpr3 f4 c= cpr2 f4 cpr3 f6 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
- |- ((((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F) ==> ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F)) = ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F))
T c= c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF
+ (x = f2), ((x = f1) /\ ((x = f2) \/ (x = f3))) |- (f2 = f1)
T c==> c= f0 f1 c==> c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c= f1 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (coplanar (x INSERT ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (measure (((normball x) (real_of_num (NUMERAL (BIT1 _0)))) INTER ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccoplanar * * part cINSERT f2 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f4 cpr3 f3 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f3 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f3 cpr2 f4 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f3 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f4 part cEMPTY f1 c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f2 cpr3 f3 cpr3 f4 csigma_fan f2 f0 f1 cpr3 f3 cpr3 f4 cpi creal_add creal_sub cdihV f2 cpr3 f4 cpr3 f5 csigma_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cdihV f2 cpr3 f5 cpr3 f3 csigma_fan f2 f0 f1 cpr3 f5 cpr3 f3 cpi
- (x = f3), ((x = f1) /\ ((x = f2) \/ (x = f3))) |- (F = F)
T c==> c= f0 f1 c==> c/\ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c= cF cF
- (x = f2), ((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))), ((x = f1) /\ ((x = f2) \/ (x = f3))) |- (~ (f3 = f1))
T c==> c= f0 f1 c==> c/\ c~ c= f2 f3 c/\ c~ c= f3 f1 c~ c= f1 f2 c==> c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c~ c= f3 f2
+ |- (((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (f1 IN (d_fan (x , (V , E))))))) ==> ((((((azim_fan x) V) E) (pr2 f1)) (pr3 f1)) = ((((dihV x) (pr2 f1)) (pr3 f1)) (((((sigma_fan x) V) E) (pr2 f1)) (pr3 f1))))) ==> ((measurable (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))))))) = ((measurable (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))))))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 cIN f3 * part cd_fan c, f0 c, f1 f2 c= cazim_fan f0 f1 f2 cpr2 f3 cpr3 f3 cdihV f0 cpr2 f3 cpr3 f3 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 c==> cmeasurable * * part cINTER * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 part cEMPTY * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f0 * * part cINTER * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 part cEMPTY * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 c= csol f0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f0 f1 f2 cpr3 f4 cpr3 f3 cpi creal_add creal_sub cazim_fan f0 f1 f2 cpr3 f3 cpr3 f5 cpi creal_sub cazim_fan f0 f1 f2 cpr3 f5 cpr3 f4 cpi c==> cmeasurable * * part cINTER * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 part cEMPTY * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f0 * * part cINTER * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 part cEMPTY * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 c= csol f0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f0 f1 f2 cpr3 f4 cpr3 f3 cpi creal_add creal_sub cazim_fan f0 f1 f2 cpr3 f3 cpr3 f5 cpi creal_sub cazim_fan f0 f1 f2 cpr3 f5 cpr3 f4 cpi
+ |- (((T ==> ((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) = (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))) ==> ((((FINITE (f1 INSERT EMPTY)) /\ (FINITE (f2 INSERT (f3 INSERT EMPTY)))) ==> (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = (T ==> (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))) = ((((FINITE (f1 INSERT EMPTY)) /\ (FINITE (f2 INSERT (f3 INSERT EMPTY)))) ==> (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = (T ==> (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))))
T c= c==> c==> cT c= c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c==> cT c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c==> cT c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (f3 = f3)) ==> (f3 = f3))
T c==> c~ c= f0 f0 c= f0 f0
+ (((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))) |- ((((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))))) = (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f0 cpr3 f1 cpi creal_sub cazim_fan f3 f4 f5 cpr3 f1 cpr3 f2 cpi c= c= csol f3 * * * * part cdartset_leads_into_fan f3 f4 f5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f0 cpr3 f1 cpi creal_sub cazim_fan f3 f4 f5 cpr3 f1 cpr3 f2 cpi c= csol f3 * * * * part cdartset_leads_into_fan f3 f4 f5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))), ((DISJOINT (f2 INSERT EMPTY)) (f3 INSERT EMPTY)) |- ((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c==> cIN f5 * part cd1_fan c, f2 c, f0 f1 c==> cIN f6 * part cd1_fan c, f2 c, f0 f1 c==> cDISJOINT * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY c==> c= csum * * part cUNION * * part cINSERT f4 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f6 cpr3 f4 cpi csum * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
+ (~ (B x)), (((~ (A x)) \/ (~ (B x))) /\ ((B x) /\ (A x))) |- ((~ (B x)) /\ F)
T c==> c~ * f0 f1 c==> c/\ c\/ c~ * f2 f1 c~ * f0 f1 c/\ * f0 f1 * f2 f1 c/\ c~ * f0 f1 cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((azim_fan x) V) E) (pr3 f2)) (pr3 f3)) = ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- ((measurable (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cazim_fan f2 f0 f1 cpr3 f3 cpr3 f4 cdihV f2 cpr3 f3 cpr3 f4 csigma_fan f2 f0 f1 cpr3 f3 cpr3 f4 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f3 cpr3 f5 c==> c= cpr2 f4 cpr3 f3 c==> c= csigma_fan f2 f0 f1 cpr2 f3 cpr2 f4 cpr2 f5 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f3 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cmeasurable * * part cINTER * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 * * part cINSERT cpr3 f3 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f2 * * part cINTER * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 * * part cINSERT cpr3 f3 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 * * part cINSERT cpr3 f3 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f2 cpr3 f4 cpr3 f5 csigma_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_add creal_sub cdihV f2 cpr3 f5 cpr3 f3 csigma_fan f2 f0 f1 cpr3 f5 cpr3 f3 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f3 cpr3 f4 cpi
+ |- (((f3 = f3) ==> ((d1_fan (x , (V , E))) f3)) = ((d1_fan (x , (V , E))) f3))
T c= c==> c= f0 f0 cd1_fan c, f1 c, f2 f3 f0 cd1_fan c, f1 c, f2 f3 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), (((((f1_fan x) V) E) f3) = f1), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f6 c==> c= cf1_fan f2 f0 f1 f6 f4 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> c/\ c= cpr2 f6 cpr3 f5 c/\ c= cpr2 f5 cpr3 f4 c= cpr2 f4 cpr3 f6 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
+ |- (((~ ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3)))))) ==> F) = ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))
T c= c==> c~ c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c~ c/\ c= b0 f1 c= b0 f2 cF c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c~ c/\ c= b0 f1 c= b0 f2
+ |- ((\V. (!E. (!ds. (!s. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((y IN ds) /\ (s = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y)))))))) ==> (((((dartset_leads_into_fan x) V) E) ds) = s))))))) V)
T * / ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b5 b0 c> cCARD * * * part cset_of_edge b5 b0 b1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, b0 b1 c/\ cIN b2 * part cface_set chypermap1_of_fanx c, f0 c, b0 b1 c/\ cIN b4 b2 c= b3 * * * * * part cdart_leads_into f0 b0 b1 cpr2 b4 cpr3 b4 c= * * * * part cdartset_leads_into_fan f0 b0 b1 b2 b3 f1
+ (!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) |- (((d1_fan (x , (V , E))) _3043537) \/ (~ (_3043537 = f1)))
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c\/ cd1_fan c, f3 c, f4 f5 f6 c~ c= f6 f0
- |- ((_3043572 = _3043574) ==> ((~ (_3043573 = _3043575)) \/ ((_3043572 , _3043573) = (_3043574 , _3043575))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ |- (((!x. (!V. (!E. (!ds. (!e. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt e) (real_of_num (NUMERAL _0)))))))) ==> (measurable (((((dartset_leads_into_fan x) V) E) ds) INTER (ball (x , e)))))))))) ==> ((\x. (!V. (!E. (!ds. (!e. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt e) (real_of_num (NUMERAL _0)))))))) ==> (measurable (((((dartset_leads_into_fan x) V) E) ds) INTER (ball (x , e)))))))))) x)) = ((\x. (!V. (!E. (!ds. (!e. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt e) (real_of_num (NUMERAL _0)))))))) ==> (measurable (((((dartset_leads_into_fan x) V) E) ds) INTER (ball (x , e)))))))))) x))
T c= c==> ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b5 b1 c> cCARD * * * part cset_of_edge b5 b1 b2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, b0 c, b1 b2 c/\ cIN b3 * part cface_set chypermap1_of_fanx c, b0 c, b1 b2 c/\ c= cCARD b3 cNUMERAL cBIT1 cBIT1 c_0 creal_gt b4 creal_of_num cNUMERAL c_0 cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan b0 b1 b2 b3 * part cball c, b0 b4 * / ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b5 b1 c> cCARD * * * part cset_of_edge b5 b1 b2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, b0 c, b1 b2 c/\ cIN b3 * part cface_set chypermap1_of_fanx c, b0 c, b1 b2 c/\ c= cCARD b3 cNUMERAL cBIT1 cBIT1 c_0 creal_gt b4 creal_of_num cNUMERAL c_0 cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan b0 b1 b2 b3 * part cball c, b0 b4 f0 * / ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b5 b1 c> cCARD * * * part cset_of_edge b5 b1 b2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, b0 c, b1 b2 c/\ cIN b3 * part cface_set chypermap1_of_fanx c, b0 c, b1 b2 c/\ c= cCARD b3 cNUMERAL cBIT1 cBIT1 c_0 creal_gt b4 creal_of_num cNUMERAL c_0 cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan b0 b1 b2 b3 * part cball c, b0 b4 f0
+ |- ((\ds. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0))))))) ==> (?f1. (?f2. (?f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))))))))))))))) ds)
T * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c/\ cIN b0 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c= cCARD b0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c/\ c= b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c= cf1_fan f0 f1 f2 b1 b2 c/\ c= cf1_fan f0 f1 f2 b2 b3 c/\ c= cf1_fan f0 f1 f2 b3 b1 c/\ cIN * * part cINSERT cpr2 b2 * * part cINSERT cpr2 b3 part cEMPTY f2 c/\ cIN * * part cINSERT cpr2 b3 * * part cINSERT cpr2 b1 part cEMPTY f2 c/\ cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr2 b2 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 cpr2 b2 cpr2 b3 cpr2 b1 c/\ c= cpr2 b3 cpr3 b2 c/\ c= cpr2 b2 cpr3 b1 c= cpr2 b1 cpr3 b3 f3
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (?f2. (?f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3)))))))))))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c? / c? / c/\ c= f2 * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c= cf1_fan f4 f0 f1 f3 b0 c/\ c= cf1_fan f4 f0 f1 b0 b1 c/\ c= cf1_fan f4 f0 f1 b1 f3 c/\ cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr2 b1 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr2 f3 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 b0 part cEMPTY f1 c/\ c= csigma_fan f4 f0 f1 cpr2 b0 cpr2 b1 cpr2 f3 c/\ c= cpr2 b1 cpr3 b0 c/\ c= cpr2 b0 cpr3 f3 c= cpr2 f3 cpr3 b1 c==> cFAN c, f4 c, f0 f1 c==> cfan80 c, f4 c, f0 f1 c==> c= cCARD f2 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f2 * part cface_set chypermap1_of_fanx c, f4 c, f0 f1 c= csol f4 * * * * part cdartset_leads_into_fan f4 f0 f1 f2 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f2 / creal_sub cazim_fan f4 f0 f1 cpr2 b0 cpr3 b0 cpi
+ |- ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 (BIT1 _0))) = (BIT1 _0)))
T c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 cBIT1 c_0 cBIT1 c_0
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((DISJOINT (f1 INSERT EMPTY)) (f2 INSERT (f3 INSERT EMPTY))) /\ ((DISJOINT (f2 INSERT EMPTY)) (f3 INSERT EMPTY))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))) |- ((((DISJOINT (f1 INSERT EMPTY)) (f2 INSERT (f3 INSERT EMPTY))) /\ ((DISJOINT (f2 INSERT EMPTY)) (f3 INSERT EMPTY))) /\ (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> c/\ cDISJOINT * * part cINSERT f4 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cDISJOINT * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c==> cIN f5 * part cd1_fan c, f2 c, f0 f1 c==> cIN f6 * part cd1_fan c, f2 c, f0 f1 c/\ c/\ cDISJOINT * * part cINSERT f4 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cDISJOINT * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((~ ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))) ==> (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = ((real_div ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = ((real_div ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> c/\ c~ c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_div creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_div creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((FINITE (f2 INSERT EMPTY)) /\ (FINITE (f3 INSERT EMPTY))) = p') ==> ((p' ==> ((((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))) = q')) ==> ((((FINITE (f2 INSERT EMPTY)) /\ (FINITE (f3 INSERT EMPTY))) ==> (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))) = (p' ==> q'))))
T c==> c= c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f6 cpr3 f0 cpi creal_sub cazim_fan f3 f4 f5 cpr3 f0 cpr3 f1 cpi f7 c= c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 part cEMPTY c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f6 cpr3 f0 cpi creal_sub cazim_fan f3 f4 f5 cpr3 f0 cpr3 f1 cpi c==> f2 f7
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), (((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))) |- ((((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= csum * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f6 cpi c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c==> cIN f5 * part cd1_fan c, f2 c, f0 f1 c==> cIN f6 * part cd1_fan c, f2 c, f0 f1 c==> c= csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f6 cpr3 f4 cpi csum * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
+ (~ (coplanar (x INSERT ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)) |- ((((measure (((normball x) (real_of_num (NUMERAL (BIT1 _0)))) INTER ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))))) = ((LET (\a123. (LET_END ((LET (\a231. (LET_END ((LET (\a312. (LET_END ((real_mul ((real_add a123) ((real_add a231) ((real_sub a312) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) ((((dihV x) (pr3 f2)) (pr3 f3)) (pr3 f1)))))) ((((dihV x) (pr3 f1)) (pr3 f2)) (pr3 f3)))))) ((((dihV x) (pr3 f3)) (pr3 f1)) (pr3 f2)))) ==> (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (measure (((normball x) (real_of_num (NUMERAL (BIT1 _0)))) INTER ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi)))))) = (((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (coplanar (x INSERT ((pr2 f1) INSERT ((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY))))))) ==> ((measure ((ball (x , (real_of_num (NUMERAL (BIT1 _0))))) INTER ((aff_gt (x INSERT EMPTY)) ((pr2 f1) INSERT ((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)))))) = ((LET (\a123. (LET_END ((LET (\a231. (LET_END ((LET (\a312. (LET_END ((real_mul ((real_add a123) ((real_add a231) ((real_sub a312) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) ((((dihV x) (pr2 f3)) (pr2 f1)) (pr2 f2)))))) ((((dihV x) (pr2 f2)) (pr2 f3)) (pr2 f1)))))) ((((dihV x) (pr2 f1)) (pr2 f2)) (pr2 f3))))) ==> (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (measure (((normball x) (real_of_num (NUMERAL (BIT1 _0)))) INTER ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT cpr3 f1 * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 part cEMPTY c==> c= cpr2 f2 cpr3 f1 c==> c= cpr2 f3 cpr3 f2 c==> c= cpr2 f1 cpr3 f3 c= c==> c= cmeasure * * part cINTER * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f1 * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END creal_mul creal_add b0 creal_add b1 creal_sub b2 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdihV f0 cpr3 f3 cpr3 f1 cpr3 f2 cdihV f0 cpr3 f2 cpr3 f3 cpr3 f1 cdihV f0 cpr3 f1 cpr3 f2 cpr3 f3 c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f1 * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f0 cpr3 f1 cpr3 f2 csigma_fan f0 f4 f5 cpr3 f1 cpr3 f2 cpi creal_add creal_sub cdihV f0 cpr3 f2 cpr3 f3 csigma_fan f0 f4 f5 cpr3 f2 cpr3 f3 cpi creal_sub cdihV f0 cpr3 f3 cpr3 f1 csigma_fan f0 f4 f5 cpr3 f3 cpr3 f1 cpi c==> c==> c/\ creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c~ ccoplanar * * part cINSERT f0 * * part cINSERT cpr2 f2 * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f1 part cEMPTY c= cmeasure * * part cINTER * part cball c, f0 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f2 * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f1 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END creal_mul creal_add b0 creal_add b1 creal_sub b2 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdihV f0 cpr2 f1 cpr2 f2 cpr2 f3 cdihV f0 cpr2 f3 cpr2 f1 cpr2 f2 cdihV f0 cpr2 f2 cpr2 f3 cpr2 f1 c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f1 * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f0 cpr3 f1 cpr3 f2 csigma_fan f0 f4 f5 cpr3 f1 cpr3 f2 cpi creal_add creal_sub cdihV f0 cpr3 f2 cpr3 f3 csigma_fan f0 f4 f5 cpr3 f2 cpr3 f3 cpi creal_sub cdihV f0 cpr3 f3 cpr3 f1 csigma_fan f0 f4 f5 cpr3 f3 cpr3 f1 cpi
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ |- (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))))) ==> (((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((((dartset_leads_into_fan x) V) E) ds) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f0 * * part cINTER * * * * part cdartset_leads_into_fan f0 f1 f2 f3 * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))) |- ((((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c==> cIN f5 * part cd1_fan c, f2 c, f0 f1 c==> cIN f6 * part cd1_fan c, f2 c, f0 f1 c==> c= csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f6 cpr3 f4 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f6 cpi c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
- (x = f2), ((x = f1) /\ ((x = f2) \/ (x = f3))) |- (F = F)
T c==> c= f0 f1 c==> c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c= cF cF
- (((A x) /\ (B x)) /\ ((~ (B x)) \/ (~ (A x)))) |- ((~ (B x)) ==> (B x))
T c==> c/\ c/\ * f0 f1 * f2 f1 c\/ c~ * f2 f1 c~ * f0 f1 c==> c~ * f2 f1 * f2 f1
- |- (((!f1. ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F)) ==> ((\f1. ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F)) f1)) = ((\f1. ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F)) f1))
T c= c==> ! c==> c~ c==> c/\ c~ c= b0 f0 c/\ c~ c= f0 f1 c~ c= f1 b0 c/\ ! c~ c/\ c= b1 b0 c\/ c= b1 f1 c= b1 f0 ! c~ c/\ c= b1 f1 c= b1 f0 cF * / c==> c~ c==> c/\ c~ c= b0 f0 c/\ c~ c= f0 f1 c~ c= f1 b0 c/\ ! c~ c/\ c= b1 b0 c\/ c= b1 f1 c= b1 f0 ! c~ c/\ c= b1 f1 c= b1 f0 cF f2 * / c==> c~ c==> c/\ c~ c= b0 f0 c/\ c~ c= f0 f1 c~ c= f1 b0 c/\ ! c~ c/\ c= b1 b0 c\/ c= b1 f1 c= b1 f0 ! c~ c/\ c= b1 f1 c= b1 f0 cF f2
+ |- (((!V. (!E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi)))))))) ==> ((\V. (!E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi)))))))) V)) = ((\V. (!E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi)))))))) V))
T c= c==> ! ! c= cfan80 c, f0 c, b0 b1 ! ! c==> cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b2 b3 csigma_fan f0 b0 b1 b2 b3 creal_lt cazim f0 b2 b3 csigma_fan f0 b0 b1 b2 b3 cpi * / ! c= cfan80 c, f0 c, b0 b1 ! ! c==> cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b2 b3 csigma_fan f0 b0 b1 b2 b3 creal_lt cazim f0 b2 b3 csigma_fan f0 b0 b1 b2 b3 cpi f1 * / ! c= cfan80 c, f0 c, b0 b1 ! ! c==> cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b2 b3 csigma_fan f0 b0 b1 b2 b3 creal_lt cazim f0 b2 b3 csigma_fan f0 b0 b1 b2 b3 cpi f1
+ |- ((\V. (!E. (!ds. (!r. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt r) (real_of_num (NUMERAL _0)))))))) ==> (((radial_norm r) x) (((((dartset_leads_into_fan x) V) E) ds) INTER ((normball x) r)))))))) V)
T * / ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b4 b0 c> cCARD * * * part cset_of_edge b4 b0 b1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, b0 b1 c/\ cIN b2 * part cface_set chypermap1_of_fanx c, f0 c, b0 b1 c/\ c= cCARD b2 cNUMERAL cBIT1 cBIT1 c_0 creal_gt b3 creal_of_num cNUMERAL c_0 cradial_norm b3 f0 * * part cINTER * * * * part cdartset_leads_into_fan f0 b0 b1 b2 * * part cnormball f0 b3 f1
+ (!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) |- (((d1_fan (x , (V , E))) _3043539) \/ (~ (_3043539 = f3)))
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c\/ cd1_fan c, f3 c, f4 f5 f6 c~ c= f6 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) (pr3 f1)) (pr3 f2)) (pr3 f3))) /\ ((real_lt ((((azim x) (pr3 f1)) (pr3 f2)) (pr3 f3))) pi)), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) (pr3 f1)) (pr3 f2)) (pr3 f3))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (measure (((normball x) (real_of_num (NUMERAL (BIT1 _0)))) INTER ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 cpr3 f4 c==> c= cpr2 f5 cpr3 f3 c==> c= cpr2 f4 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f4 cpr2 f3 c==> c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f2 cpr3 f3 cpr3 f5 cpr3 f4 creal_lt cazim f2 cpr3 f3 cpr3 f5 cpr3 f4 cpi c==> creal_lt creal_of_num cNUMERAL c_0 cazim f2 cpr3 f3 cpr3 f5 cpr3 f4 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f3 part cEMPTY f1 c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f2 cpr3 f4 cpr3 f3 csigma_fan f2 f0 f1 cpr3 f4 cpr3 f3 cpi creal_add creal_sub cdihV f2 cpr3 f3 cpr3 f5 csigma_fan f2 f0 f1 cpr3 f3 cpr3 f5 cpi creal_sub cdihV f2 cpr3 f5 cpr3 f4 csigma_fan f2 f0 f1 cpr3 f5 cpr3 f4 cpi
+ |- (((!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))))))))) ==> ((\E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))))))))) E)) = ((\E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))))))))) E))
T c= c==> ! ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b2 b3 b1 creal_lt cazim f0 b2 b3 b1 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b2 b3 b1 creal_lt cazim f0 b2 b3 b1 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2 * / ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b2 b3 b1 creal_lt cazim f0 b2 b3 b1 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2
- (x = f2), ((x = f1) /\ ((x = f2) \/ (x = f3))) |- ((~ (f1 = f3)) = (~ (f1 = f3)))
T c==> c= f0 f1 c==> c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c= c~ c= f2 f3 c~ c= f2 f3
- |- ((!x. ((x IN ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = (g x)))) ==> (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) g)))
T c==> ! c==> cIN b0 * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi * f6 b0 c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- (((\f1. (?f2. (?f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))))))))))))) f1) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> * / c? / c? / c/\ c= f3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cf1_fan f2 f0 f1 b0 b1 c/\ c= cf1_fan f2 f0 f1 b1 b2 c/\ c= cf1_fan f2 f0 f1 b2 b0 c/\ cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr2 b2 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b2 * * part cINSERT cpr2 b0 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr2 b1 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 b1 cpr2 b2 cpr2 b0 c/\ c= cpr2 b2 cpr3 b1 c/\ c= cpr2 b1 cpr3 b0 c= cpr2 b0 cpr3 b2 f4 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((FINITE (f1 INSERT EMPTY)) /\ (FINITE (f2 INSERT (f3 INSERT EMPTY)))) ==> (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))), ((DISJOINT (f2 INSERT EMPTY)) (f3 INSERT EMPTY)) |- ((((FINITE (f1 INSERT EMPTY)) /\ (FINITE (f2 INSERT (f3 INSERT EMPTY)))) ==> (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) /\ (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> c==> c/\ cFINITE * * part cINSERT f4 part cEMPTY cFINITE * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c= csum * * part cUNION * * part cINSERT f4 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f6 cpr3 f4 cpi csum * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c==> cIN f5 * part cd1_fan c, f2 c, f0 f1 c==> cIN f6 * part cd1_fan c, f2 c, f0 f1 c==> cDISJOINT * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY c/\ c==> c/\ cFINITE * * part cINSERT f4 part cEMPTY cFINITE * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c= csum * * part cUNION * * part cINSERT f4 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f6 cpr3 f4 cpi csum * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
+ |- ((\t. (((FINITE (f1 INSERT EMPTY)) /\ ((FINITE t) /\ ((DISJOINT (f1 INSERT EMPTY)) t))) ==> (((sum ((f1 INSERT EMPTY) UNION t)) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((sum (f1 INSERT EMPTY)) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))) ((sum t) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))) (f2 INSERT (f3 INSERT EMPTY)))
T * / c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY c/\ cFINITE b0 cDISJOINT * * part cINSERT f0 part cEMPTY b0 c= csum * * part cUNION * * part cINSERT f0 part cEMPTY b0 / creal_sub cazim_fan f1 f2 f3 cpr2 b1 cpr3 b1 cpi creal_add csum * * part cINSERT f0 part cEMPTY / creal_sub cazim_fan f1 f2 f3 cpr2 b1 cpr3 b1 cpi csum b0 / creal_sub cazim_fan f1 f2 f3 cpr2 b1 cpr3 b1 cpi * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (measure (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 cpr3 f4 c==> c= cpr2 f5 cpr3 f3 c==> c= cpr2 f4 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f4 cpr2 f3 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f3 part cEMPTY f1 c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f2 cpr3 f4 cpr3 f3 csigma_fan f2 f0 f1 cpr3 f4 cpr3 f3 cpi creal_add creal_sub cdihV f2 cpr3 f3 cpr3 f5 csigma_fan f2 f0 f1 cpr3 f3 cpr3 f5 cpi creal_sub cdihV f2 cpr3 f5 cpr3 f4 csigma_fan f2 f0 f1 cpr3 f5 cpr3 f4 cpi
- |- (((!g. ((!x. ((x IN (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = (g x)))) ==> (((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) g)))) ==> ((\g. ((!x. ((x IN (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = (g x)))) ==> (((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) g)))) g)) = ((\g. ((!x. ((x IN (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = (g x)))) ==> (((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) g)))) g))
T c= c==> ! c==> ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_sub cazim_fan f3 f4 f5 cpr2 b1 cpr3 b1 cpi * b0 b1 c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b1 cpr3 b1 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * / c==> ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_sub cazim_fan f3 f4 f5 cpr2 b1 cpr3 b1 cpi * b0 b1 c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b1 cpr3 b1 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 f6 * / c==> ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_sub cazim_fan f3 f4 f5 cpr2 b1 cpr3 b1 cpi * b0 b1 c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b1 cpr3 b1 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 f6
+ |- (((!x. (!V. (!E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))))))) ==> ((\x. (!V. (!E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))))))) x)) = ((\x. (!V. (!E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))))))) x))
T c= c==> ! ! ! c= cfan80 c, b0 c, b1 b2 ! ! c==> cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim b0 b3 b4 csigma_fan b0 b1 b2 b3 b4 creal_lt cazim b0 b3 b4 csigma_fan b0 b1 b2 b3 b4 cpi * / ! ! c= cfan80 c, b0 c, b1 b2 ! ! c==> cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim b0 b3 b4 csigma_fan b0 b1 b2 b3 b4 creal_lt cazim b0 b3 b4 csigma_fan b0 b1 b2 b3 b4 cpi f0 * / ! ! c= cfan80 c, b0 c, b1 b2 ! ! c==> cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim b0 b3 b4 csigma_fan b0 b1 b2 b3 b4 creal_lt cazim b0 b3 b4 csigma_fan b0 b1 b2 b3 b4 cpi f0
+ (!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) |- ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) /\ (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2
- |- (((((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F)) ==> (((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F))) = (((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F)))
T c= c==> c==> c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c==> c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c==> c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF
- |- (((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((\s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) s)) = ((\s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) s))
T c= c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 * / ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 f0 * / ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 f0
+ |- ((\u. (!w. (((FAN (x , (V , E))) /\ ((((pr2 f1) INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((w INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = (pr2 f1)) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((((((sigma_fan x) V) E) (pr2 f1)) u) = w) /\ ((((((sigma_fan x) V) E) w) (pr2 f1)) = u))))) (pr2 f2))
T * / ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT cpr2 f3 * * part cINSERT b0 part cEMPTY f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT cpr2 f3 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b0 b1 cpr2 f3 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 f2 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 f2 c/\ c= csigma_fan f0 f1 f2 cpr2 f3 b0 b1 c= csigma_fan f0 f1 f2 b1 cpr2 f3 b0 cpr2 f4
+ |- ((t \/ T) = T)
T c= c\/ f0 cT cT
+ |- (((((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)) = (pr3 f3)) ==> (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul ((real_add ((((dihV x) (pr3 f3)) (pr3 f1)) (pr3 f2))) ((real_add ((((dihV x) (pr3 f1)) (pr3 f2)) (pr3 f3))) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (pr3 f1))) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (pr3 f2))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (pr3 f1))) pi))))))
T c==> c= csigma_fan f0 f1 f2 cpr3 f3 cpr3 f4 cpr3 f5 c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_add cdihV f0 cpr3 f5 cpr3 f3 cpr3 f4 creal_add cdihV f0 cpr3 f3 cpr3 f4 cpr3 f5 creal_sub cdihV f0 cpr3 f4 cpr3 f5 cpr3 f3 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f0 cpr3 f5 cpr3 f3 cpr3 f4 cpi creal_add creal_sub cdihV f0 cpr3 f3 cpr3 f4 csigma_fan f0 f1 f2 cpr3 f3 cpr3 f4 cpi creal_sub cdihV f0 cpr3 f4 cpr3 f5 cpr3 f3 cpi
+ ((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))), ((\x. (((x = f1) /\ ((x = f2) \/ (x = f3))) \/ ((x = f2) /\ (x = f3)))) x) |- (((\x. (((x = f1) /\ ((x = f2) \/ (x = f3))) \/ ((x = f2) /\ (x = f3)))) x) /\ F)
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c==> * / c\/ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 c/\ c= b0 f2 c= b0 f1 f3 c/\ * / c\/ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 c/\ c= b0 f2 c= b0 f1 f3 cF
- |- (!x. ((x IN ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi))))
T c==> cIN f0 * * part cUNION * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= creal_sub cazim_fan f3 f4 f5 cpr2 f0 cpr3 f0 cpi creal_sub cazim_fan f3 f4 f5 cpr2 f0 cpr3 f0 cpi
- (~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) |- ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) /\ F)
T c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 c/\ c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF
+ (((A x) /\ (B x)) /\ ((~ (B x)) \/ (~ (A x)))) |- ((~ (A x)) ==> F)
T c==> c/\ c/\ * f0 f1 * f2 f1 c\/ c~ * f2 f1 c~ * f0 f1 c==> c~ * f0 f1 cF
+ |- ((\s. (!t. (((FINITE s) /\ ((FINITE t) /\ ((DISJOINT s) t))) ==> (((sum (s UNION t)) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((sum s) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))) ((sum t) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))) (f1 INSERT EMPTY))
T * / ! c==> c/\ cFINITE b0 c/\ cFINITE b1 cDISJOINT b0 b1 c= csum * * part cUNION b0 b1 / creal_sub cazim_fan f0 f1 f2 cpr2 b2 cpr3 b2 cpi creal_add csum b0 / creal_sub cazim_fan f0 f1 f2 cpr2 b2 cpr3 b2 cpi csum b1 / creal_sub cazim_fan f0 f1 f2 cpr2 b2 cpr3 b2 cpi * * part cINSERT f3 part cEMPTY
+ |- ((\ds. (!e. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt e) (real_of_num (NUMERAL _0)))))))) ==> (measurable (((((dartset_leads_into_fan x) V) E) ds) INTER (ball (x , e))))))) ds)
T * / ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN b0 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c= cCARD b0 cNUMERAL cBIT1 cBIT1 c_0 creal_gt b1 creal_of_num cNUMERAL c_0 cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f0 f1 f2 b0 * part cball c, f0 b1 f3
- |- (((!f2. (!f1. ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F))) ==> ((\f2. (!f1. ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F))) f2)) = ((\f2. (!f1. ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F))) f2))
T c= c==> ! ! c==> c~ c==> ! c==> c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cd1_fan c, f1 c, f2 f3 b2 c/\ cd1_fan c, f1 c, f2 f3 b1 c/\ cd1_fan c, f1 c, f2 f3 b0 cd1_fan c, f1 c, f2 f3 f0 cF * / ! c==> c~ c==> ! c==> c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cd1_fan c, f1 c, f2 f3 b2 c/\ cd1_fan c, f1 c, f2 f3 b1 c/\ cd1_fan c, f1 c, f2 f3 b0 cd1_fan c, f1 c, f2 f3 f0 cF f4 * / ! c==> c~ c==> ! c==> c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cd1_fan c, f1 c, f2 f3 b2 c/\ cd1_fan c, f1 c, f2 f3 b1 c/\ cd1_fan c, f1 c, f2 f3 b0 cd1_fan c, f1 c, f2 f3 f0 cF f4
+ (!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))), (~ ((d1_fan (x , (V , E))) f1)) |- ((~ ((d1_fan (x , (V , E))) f1)) /\ F)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c==> c~ cd1_fan c, f3 c, f4 f5 f0 c/\ c~ cd1_fan c, f3 c, f4 f5 f0 cF
+ |- ((\v0. (!v1. (!v2. (!v3. ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((measure ((ball (v0 , (real_of_num (NUMERAL (BIT1 _0))))) INTER ((aff_gt (v0 INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) = ((LET (\a123. (LET_END ((LET (\a231. (LET_END ((LET (\a312. (LET_END ((real_mul ((real_add a123) ((real_add a231) ((real_sub a312) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) ((((dihV v0) v3) v1) v2))))) ((((dihV v0) v2) v3) v1))))) ((((dihV v0) v1) v2) v3)))))))) x)
T * / ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= cmeasure * * part cINTER * part cball c, b0 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END creal_mul creal_add b4 creal_add b5 creal_sub b6 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdihV b0 b3 b1 b2 cdihV b0 b2 b3 b1 cdihV b0 b1 b2 b3 f0
+ ((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))), ((x = f1) /\ ((x = f2) \/ (x = f3))) |- ((x = f3) ==> F)
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c==> c/\ c= f3 f0 c\/ c= f3 f2 c= f3 f1 c==> c= f3 f1 cF
+ |- (((!x. (!V. (!E. (!ds. (((FAN (x , (V , E))) /\ (ds IN (face_set (hypermap1_of_fanx (x , (V , E)))))) ==> (ds SUBSET (d_fan (x , (V , E))))))))) ==> ((\x. (!V. (!E. (!ds. (((FAN (x , (V , E))) /\ (ds IN (face_set (hypermap1_of_fanx (x , (V , E)))))) ==> (ds SUBSET (d_fan (x , (V , E))))))))) x)) = ((\x. (!V. (!E. (!ds. (((FAN (x , (V , E))) /\ (ds IN (face_set (hypermap1_of_fanx (x , (V , E)))))) ==> (ds SUBSET (d_fan (x , (V , E))))))))) x))
T c= c==> ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 cIN b3 * part cface_set chypermap1_of_fanx c, b0 c, b1 b2 cSUBSET b3 * part cd_fan c, b0 c, b1 b2 * / ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 cIN b3 * part cface_set chypermap1_of_fanx c, b0 c, b1 b2 cSUBSET b3 * part cd_fan c, b0 c, b1 b2 f0 * / ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 cIN b3 * part cface_set chypermap1_of_fanx c, b0 c, b1 b2 cSUBSET b3 * part cd_fan c, b0 c, b1 b2 f0
+ (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))) |- ((\v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))) (pr2 f2))
T c==> ! ! c==> cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 creal_lt cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 cpi * / ! c==> cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 creal_lt cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 cpi cpr2 f3
- ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F), (((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F) ==> ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F)) |- (((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F) /\ ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F))
T c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c/\ c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0))) = (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0)))
T c= c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0
+ ((\f1. (?f2. (?f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))))))))))))) f1) |- (?f2. (?f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))))))))))))
T c==> * / c? / c? / c/\ c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cf1_fan f1 f2 f3 b0 b1 c/\ c= cf1_fan f1 f2 f3 b1 b2 c/\ c= cf1_fan f1 f2 f3 b2 b0 c/\ cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr2 b2 part cEMPTY f3 c/\ cIN * * part cINSERT cpr2 b2 * * part cINSERT cpr2 b0 part cEMPTY f3 c/\ cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr2 b1 part cEMPTY f3 c/\ c= csigma_fan f1 f2 f3 cpr2 b1 cpr2 b2 cpr2 b0 c/\ c= cpr2 b2 cpr3 b1 c/\ c= cpr2 b1 cpr3 b0 c= cpr2 b0 cpr3 b2 f4 c? / c? / c/\ c= f0 * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c= cf1_fan f1 f2 f3 f4 b0 c/\ c= cf1_fan f1 f2 f3 b0 b1 c/\ c= cf1_fan f1 f2 f3 b1 f4 c/\ cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr2 b1 part cEMPTY f3 c/\ cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr2 f4 part cEMPTY f3 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 b0 part cEMPTY f3 c/\ c= csigma_fan f1 f2 f3 cpr2 b0 cpr2 b1 cpr2 f4 c/\ c= cpr2 b1 cpr3 b0 c/\ c= cpr2 b0 cpr3 f4 c= cpr2 f4 cpr3 b1
+ |- ((!x. ((x IN (A INTER B)) = (x IN (B INTER A)))) = ((A INTER B) = (B INTER A)))
T c= ! c= cIN b0 * * part cINTER f0 f1 cIN b0 * * part cINTER f1 f0 c= * * part cINTER f0 f1 * * part cINTER f1 f0
- |- ((((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F) ==> ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F)) = ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F))
T c= c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF
+ |- ((\x. (!r. ((ball (x , r)) = ((normball x) r)))) x)
T * / ! c= * part cball c, b0 b1 * * part cnormball b0 b1 f0
- |- (((x IN ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi))) = T)
T c= c==> cIN f0 * * part cUNION * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= creal_sub cazim_fan f3 f4 f5 cpr2 f0 cpr3 f0 cpi creal_sub cazim_fan f3 f4 f5 cpr2 f0 cpr3 f0 cpi cT
+ |- (((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0))))))) ==> (?f1. (?f2. (?f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3)))))))))))))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c/\ c= f3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cf1_fan f0 f1 f2 b0 b1 c/\ c= cf1_fan f0 f1 f2 b1 b2 c/\ c= cf1_fan f0 f1 f2 b2 b0 c/\ cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr2 b2 part cEMPTY f2 c/\ cIN * * part cINSERT cpr2 b2 * * part cINSERT cpr2 b0 part cEMPTY f2 c/\ cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr2 b1 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 cpr2 b1 cpr2 b2 cpr2 b0 c/\ c= cpr2 b2 cpr3 b1 c/\ c= cpr2 b1 cpr3 b0 c= cpr2 b0 cpr3 b2 c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cpi c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cpi
- |- ((\x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) x)
T * / ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 f0
- |- (((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F) = ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3)))))
T c= c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2
- |- (((!V. (!x. (!f2. (!f1. ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F))))) ==> ((\V. (!x. (!f2. (!f1. ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F))))) V)) = ((\V. (!x. (!f2. (!f1. ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F))))) V))
T c= c==> ! ! ! ! c==> c~ c==> ! c==> c\/ c= b4 b3 c\/ c= b4 b2 c= b4 f0 cd1_fan c, b1 c, b0 f1 b4 c/\ cd1_fan c, b1 c, b0 f1 b3 c/\ cd1_fan c, b1 c, b0 f1 b2 cd1_fan c, b1 c, b0 f1 f0 cF * / ! ! ! c==> c~ c==> ! c==> c\/ c= b4 b3 c\/ c= b4 b2 c= b4 f0 cd1_fan c, b1 c, b0 f1 b4 c/\ cd1_fan c, b1 c, b0 f1 b3 c/\ cd1_fan c, b1 c, b0 f1 b2 cd1_fan c, b1 c, b0 f1 f0 cF f2 * / ! ! ! c==> c~ c==> ! c==> c\/ c= b4 b3 c\/ c= b4 b2 c= b4 f0 cd1_fan c, b1 c, b0 f1 b4 c/\ cd1_fan c, b1 c, b0 f1 b3 c/\ cd1_fan c, b1 c, b0 f1 b2 cd1_fan c, b1 c, b0 f1 f0 cF f2
- (((~ (A x)) \/ (~ (B x))) /\ ((B x) /\ (A x))) |- ((~ (A x)) ==> (A x))
T c==> c/\ c\/ c~ * f0 f1 c~ * f2 f1 c/\ * f2 f1 * f0 f1 c==> c~ * f0 f1 * f0 f1
+ (!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) |- ((_3043538 = f2) ==> ((d1_fan (x , (V , E))) _3043538))
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c==> c= f6 f1 cd1_fan c, f3 c, f4 f5 f6
+ |- ((A INTER B) = (B INTER A))
T c= * * part cINTER f0 f1 * * part cINTER f1 f0
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (?f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))))))))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c? / c/\ c= f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY c/\ c= cf1_fan f5 f0 f1 f3 f4 c/\ c= cf1_fan f5 f0 f1 f4 b0 c/\ c= cf1_fan f5 f0 f1 b0 f3 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 b0 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr2 f3 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ c= csigma_fan f5 f0 f1 cpr2 f4 cpr2 b0 cpr2 f3 c/\ c= cpr2 b0 cpr3 f4 c/\ c= cpr2 f4 cpr3 f3 c= cpr2 f3 cpr3 b0 c==> cFAN c, f5 c, f0 f1 c==> cfan80 c, f5 c, f0 f1 c==> c= cCARD f2 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f2 * part cface_set chypermap1_of_fanx c, f5 c, f0 f1 c= csol f5 * * * * part cdartset_leads_into_fan f5 f0 f1 f2 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f2 / creal_sub cazim_fan f5 f0 f1 cpr2 b0 cpr3 b0 cpi
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((FINITE (f2 INSERT EMPTY)) /\ (FINITE (f3 INSERT EMPTY))) ==> (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))) |- ((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> c==> c/\ cFINITE * * part cINSERT f5 part cEMPTY cFINITE * * part cINSERT f6 part cEMPTY c= csum * * part cUNION * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f6 cpi c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c==> cIN f5 * part cd1_fan c, f2 c, f0 f1 c==> cIN f6 * part cd1_fan c, f2 c, f0 f1 c==> c= csum * * part cUNION * * part cINSERT f4 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f6 cpr3 f4 cpi csum * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
+ |- ((\x. (!V. (!E. (!ds. (!r. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt r) (real_of_num (NUMERAL _0)))))))) ==> (((radial_norm r) x) (((((dartset_leads_into_fan x) V) E) ds) INTER ((normball x) r))))))))) x)
T * / ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b5 b1 c> cCARD * * * part cset_of_edge b5 b1 b2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, b0 c, b1 b2 c/\ cIN b3 * part cface_set chypermap1_of_fanx c, b0 c, b1 b2 c/\ c= cCARD b3 cNUMERAL cBIT1 cBIT1 c_0 creal_gt b4 creal_of_num cNUMERAL c_0 cradial_norm b4 b0 * * part cINTER * * * * part cdartset_leads_into_fan b0 b1 b2 b3 * * part cnormball b0 b4 f0
+ |- (((!p'. (!q'. ((((FINITE (f2 INSERT EMPTY)) /\ (FINITE (f3 INSERT EMPTY))) = p') ==> ((p' ==> ((((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))) = q')) ==> ((((FINITE (f2 INSERT EMPTY)) /\ (FINITE (f3 INSERT EMPTY))) ==> (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((FINITE (f2 INSERT EMPTY)) /\ (FINITE (f3 INSERT EMPTY))) = p') ==> ((p' ==> ((((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))) = q')) ==> ((((FINITE (f2 INSERT EMPTY)) /\ (FINITE (f3 INSERT EMPTY))) ==> (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((FINITE (f2 INSERT EMPTY)) /\ (FINITE (f3 INSERT EMPTY))) = p') ==> ((p' ==> ((((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))) = q')) ==> ((((FINITE (f2 INSERT EMPTY)) /\ (FINITE (f3 INSERT EMPTY))) ==> (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b2 cpr3 b2 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi b1 c= c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 part cEMPTY c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b2 cpr3 b2 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi c==> b0 b1 * / ! c==> c= c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b2 cpr3 b2 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi b1 c= c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 part cEMPTY c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b2 cpr3 b2 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi c==> b0 b1 f6 * / ! c==> c= c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b2 cpr3 b2 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi b1 c= c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 part cEMPTY c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b2 cpr3 b2 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi c==> b0 b1 f6
+ |- (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) = ((real_div ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_div creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x IN (f2 INSERT (f3 INSERT EMPTY))) |- ((x IN (f2 INSERT (f3 INSERT EMPTY))) /\ (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi)))
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_sub cazim_fan f3 f4 f5 cpr2 f0 cpr3 f0 cpi creal_sub cazim_fan f3 f4 f5 cpr2 f0 cpr3 f0 cpi
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))) |- ((((FAN (x , (V , E))) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((aff_gt (x INSERT EMPTY)) ((pr2 f1) INSERT ((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)))) = (((((dart_leads_into x) V) E) (pr2 f2)) (pr2 f3)))) ==> ((measurable (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c==> cIN f5 * part cd1_fan c, f2 c, f0 f1 c==> cIN f6 * part cd1_fan c, f2 c, f0 f1 c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 cfan80 c, f2 c, f0 f1 c= * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY * * * * * part cdart_leads_into f2 f0 f1 cpr2 f5 cpr2 f6 c==> cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f2 * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f6 cpr3 f4 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f6 cpi
+ ((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) |- (!x. (((\x. (((x = f1) /\ ((x = f2) \/ (x = f3))) \/ ((x = f2) /\ (x = f3)))) x) ==> F))
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 ! c==> * / c\/ c/\ c= b1 f0 c\/ c= b1 f2 c= b1 f1 c/\ c= b1 f2 c= b1 f1 b0 cF
+ (((A x) /\ (B x)) /\ ((~ (B x)) \/ (~ (A x)))), ((~ (A x)) ==> F), ((~ (B x)) ==> F) |- F
T c==> c/\ c/\ * f0 f1 * f2 f1 c\/ c~ * f2 f1 c~ * f0 f1 c==> c==> c~ * f0 f1 cF c==> c==> c~ * f2 f1 cF cF
+ (!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) |- ((~ ((d1_fan (x , (V , E))) f3)) ==> F)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c==> c~ cd1_fan c, f3 c, f4 f5 f2 cF
- |- ((?x'. ((x = f2) /\ (x' = f3))) = ((x = f2) /\ (?x. (x = f3))))
T c= c? / c/\ c= f0 f1 c= b0 f2 c/\ c= f0 f1 c? / c= b0 f2
+ |- (((((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0)) ==> ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 (BIT1 _0))) = (BIT1 _0))))) = ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 (BIT1 _0))) = (BIT1 _0)))))
T c= c==> c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 cBIT1 c_0 cBIT1 c_0
+ ((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) |- ((?x. (((x = f1) /\ ((x = f2) \/ (x = f3))) \/ ((x = f2) /\ (x = f3)))) ==> F)
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c==> c? / c\/ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 c/\ c= b0 f2 c= b0 f1 cF
+ |- (((BIT1 _0) * (BIT1 _0)) = (BIT1 _0))
T c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0
+ |- (((!w. (((FAN (x , (V , E))) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ ((((pr2 f2) INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) (pr2 f2)) w) (pr2 f1))) /\ ((real_lt ((((azim x) (pr2 f2)) w) (pr2 f1))) pi))))) ==> (~ (coplanar (x INSERT ((pr2 f1) INSERT ((pr2 f2) INSERT (w INSERT EMPTY)))))))) ==> ((\w. (((FAN (x , (V , E))) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ ((((pr2 f2) INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) (pr2 f2)) w) (pr2 f1))) /\ ((real_lt ((((azim x) (pr2 f2)) w) (pr2 f1))) pi))))) ==> (~ (coplanar (x INSERT ((pr2 f1) INSERT ((pr2 f2) INSERT (w INSERT EMPTY)))))))) (pr2 f3))) = ((\w. (((FAN (x , (V , E))) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ ((((pr2 f2) INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) (pr2 f2)) w) (pr2 f1))) /\ ((real_lt ((((azim x) (pr2 f2)) w) (pr2 f1))) pi))))) ==> (~ (coplanar (x INSERT ((pr2 f1) INSERT ((pr2 f2) INSERT (w INSERT EMPTY)))))))) (pr2 f3)))
T c= c==> ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f4 part cEMPTY f2 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT b0 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 cpr2 f4 b0 cpr2 f3 creal_lt cazim f0 cpr2 f4 b0 cpr2 f3 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f4 * * part cINSERT b0 part cEMPTY * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f4 part cEMPTY f2 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT b0 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 cpr2 f4 b0 cpr2 f3 creal_lt cazim f0 cpr2 f4 b0 cpr2 f3 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f4 * * part cINSERT b0 part cEMPTY cpr2 f5 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f4 part cEMPTY f2 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT b0 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 cpr2 f4 b0 cpr2 f3 creal_lt cazim f0 cpr2 f4 b0 cpr2 f3 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f4 * * part cINSERT b0 part cEMPTY cpr2 f5
+ (((A x) /\ (B x)) /\ ((~ (B x)) \/ (~ (A x)))) |- (((A x) ==> F) = F)
T c==> c/\ c/\ * f0 f1 * f2 f1 c\/ c~ * f2 f1 c~ * f0 f1 c= c==> * f0 f1 cF cF
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), (((((f1_fan x) V) E) f3) = f1), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- (((pr2 f1) = (pr3 f3)) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f6 c==> c= cf1_fan f2 f0 f1 f6 f4 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> c= cpr2 f4 cpr3 f6 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
- |- (((!B. ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F)) ==> ((\B. ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F)) B)) = ((\B. ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F)) B))
T c= c==> ! c==> c~ ! c= c/\ * f0 b1 * b0 b1 c/\ * b0 b1 * f0 b1 cF * / c==> c~ ! c= c/\ * f0 b1 * b0 b1 c/\ * b0 b1 * f0 b1 cF f1 * / c==> c~ ! c= c/\ * f0 b1 * b0 b1 c/\ * b0 b1 * f0 b1 cF f1
- |- ((!f1. ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) = T)
T c= ! c==> ! c==> c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 cd1_fan c, f2 c, f3 f4 b1 c/\ cd1_fan c, f2 c, f3 f4 b0 c/\ cd1_fan c, f2 c, f3 f4 f0 cd1_fan c, f2 c, f3 f4 f1 cT
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
- |- (((!x. (!f2. (!f1. ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F)))) ==> ((\x. (!f2. (!f1. ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F)))) x)) = ((\x. (!f2. (!f1. ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F)))) x))
T c= c==> ! ! ! c==> c~ c==> ! c==> c\/ c= b3 b2 c\/ c= b3 b1 c= b3 f0 cd1_fan c, b0 c, f1 f2 b3 c/\ cd1_fan c, b0 c, f1 f2 b2 c/\ cd1_fan c, b0 c, f1 f2 b1 cd1_fan c, b0 c, f1 f2 f0 cF * / ! ! c==> c~ c==> ! c==> c\/ c= b3 b2 c\/ c= b3 b1 c= b3 f0 cd1_fan c, b0 c, f1 f2 b3 c/\ cd1_fan c, b0 c, f1 f2 b2 c/\ cd1_fan c, b0 c, f1 f2 b1 cd1_fan c, b0 c, f1 f2 f0 cF f3 * / ! ! c==> c~ c==> ! c==> c\/ c= b3 b2 c\/ c= b3 b1 c= b3 f0 cd1_fan c, b0 c, f1 f2 b3 c/\ cd1_fan c, b0 c, f1 f2 b2 c/\ cd1_fan c, b0 c, f1 f2 b1 cd1_fan c, b0 c, f1 f2 f0 cF f3
- (_3043565 = _3043567) |- ((_3043564 = _3043566) ==> (((d1_fan _3043566) _3043567) \/ (~ ((d1_fan _3043564) _3043565))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cd1_fan f3 f1 c~ cd1_fan f2 f0
+ (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (measure (((normball x) (real_of_num (NUMERAL (BIT1 _0)))) INTER ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi)))))
T c==> ! ! c==> cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 creal_lt cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 cpi c==> ! c==> cIN b0 f2 c> cCARD * * * part cset_of_edge b0 f2 f0 cNUMERAL cBIT1 c_0 c==> cFAN c, f1 c, f2 f0 c==> cfan80 c, f1 c, f2 f0 c==> c= cpr2 f3 cpr3 f4 c==> c= cpr2 f5 cpr3 f3 c==> c= cpr2 f4 cpr3 f5 c==> c= csigma_fan f1 f2 f0 cpr2 f5 cpr2 f4 cpr2 f3 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f5 part cEMPTY f0 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f4 part cEMPTY f0 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f3 part cEMPTY f0 c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * * part cnormball f1 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f1 cpr3 f4 cpr3 f3 csigma_fan f1 f2 f0 cpr3 f4 cpr3 f3 cpi creal_add creal_sub cdihV f1 cpr3 f3 cpr3 f5 csigma_fan f1 f2 f0 cpr3 f3 cpr3 f5 cpi creal_sub cdihV f1 cpr3 f5 cpr3 f4 csigma_fan f1 f2 f0 cpr3 f5 cpr3 f4 cpi
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), (((((f1_fan x) V) E) f1) = f2), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3)))))))))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ c= cf1_fan f2 f0 f1 f5 f6 c/\ c= cf1_fan f2 f0 f1 f6 f4 c/\ cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c/\ c= cpr2 f6 cpr3 f5 c/\ c= cpr2 f5 cpr3 f4 c= cpr2 f4 cpr3 f6 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
- |- (((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\x. ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi))))
T c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((\f2. (?f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3)))))))))))))) f2) |- (((\f2. (?f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3)))))))))))))) f2) /\ (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> * / c? / c/\ c= f3 * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c= cf1_fan f2 f0 f1 f4 b0 c/\ c= cf1_fan f2 f0 f1 b0 b1 c/\ c= cf1_fan f2 f0 f1 b1 f4 c/\ cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr2 b1 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 b0 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 b0 cpr2 b1 cpr2 f4 c/\ c= cpr2 b1 cpr3 b0 c/\ c= cpr2 b0 cpr3 f4 c= cpr2 f4 cpr3 b1 f5 c/\ * / c? / c/\ c= f3 * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c= cf1_fan f2 f0 f1 f4 b0 c/\ c= cf1_fan f2 f0 f1 b0 b1 c/\ c= cf1_fan f2 f0 f1 b1 f4 c/\ cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr2 b1 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 b0 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 b0 cpr2 b1 cpr2 f4 c/\ c= cpr2 b1 cpr3 b0 c/\ c= cpr2 b0 cpr3 f4 c= cpr2 f4 cpr3 b1 f5 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
- |- ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))
T c= cHAS_SIZE f0 f1 c/\ cFINITE f0 c= cCARD f0 f1
- |- (((!g. ((!x. ((x IN ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = (g x)))) ==> (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) g)))) ==> ((\g. ((!x. ((x IN ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = (g x)))) ==> (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) g)))) g)) = ((\g. ((!x. ((x IN ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = (g x)))) ==> (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) g)))) g))
T c= c==> ! c==> ! c==> cIN b1 * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c= creal_sub cazim_fan f2 f3 f4 cpr2 b1 cpr3 b1 cpi * b0 b1 c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b1 cpr3 b1 cpi csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 * / c==> ! c==> cIN b1 * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c= creal_sub cazim_fan f2 f3 f4 cpr2 b1 cpr3 b1 cpi * b0 b1 c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b1 cpr3 b1 cpi csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 f5 * / c==> ! c==> cIN b1 * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c= creal_sub cazim_fan f2 f3 f4 cpr2 b1 cpr3 b1 cpi * b0 b1 c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b1 cpr3 b1 cpi csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 f5
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), (((((f1_fan x) V) E) f3) = f1), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))) |- (((FAN (x , (V , E))) ==> (!a. ((a IN (d1_fan (x , (V , E)))) ==> (~ (((((f1_fan x) V) E) a) = a))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f6 c==> c= cf1_fan f2 f0 f1 f6 f4 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c==> cIN f5 * part cd1_fan c, f2 c, f0 f1 c==> cIN f6 * part cd1_fan c, f2 c, f0 f1 c==> c==> cFAN c, f2 c, f0 f1 ! c==> cIN b0 * part cd1_fan c, f2 c, f0 f1 c~ c= cf1_fan f2 f0 f1 b0 b0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ F), (~ (A x)), (((A x) /\ (B x)) /\ ((~ (B x)) \/ (~ (A x)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> c/\ c/\ * f0 f1 * f2 f1 c\/ c~ * f2 f1 c~ * f0 f1 c/\ c~ cF cF
+ |- ((!ds. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))) = T)
T c= ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN b0 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c= cCARD b0 cNUMERAL cBIT1 cBIT1 c_0 c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 b0 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum b0 / creal_sub cazim_fan f0 f1 f2 cpr2 b1 cpr3 b1 cpi cT
+ |- (((((FAN (x , (V , E))) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) (pr2 f2)) (pr2 f3)) (pr2 f1))) /\ ((real_lt ((((azim x) (pr2 f2)) (pr2 f3)) (pr2 f1))) pi))))) ==> (~ (coplanar (x INSERT ((pr2 f1) INSERT ((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY))))))) ==> (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (measure (((normball x) (real_of_num (NUMERAL (BIT1 _0)))) INTER ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi)))))) = (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (measure (((normball x) (real_of_num (NUMERAL (BIT1 _0)))) INTER ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi))))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f4 part cEMPTY f2 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 cpr2 f4 cpr2 f5 cpr2 f3 creal_lt cazim f0 cpr2 f4 cpr2 f5 cpr2 f3 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f5 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f0 cpr3 f5 cpr3 f3 csigma_fan f0 f1 f2 cpr3 f5 cpr3 f3 cpi creal_add creal_sub cdihV f0 cpr3 f3 cpr3 f4 csigma_fan f0 f1 f2 cpr3 f3 cpr3 f4 cpi creal_sub cdihV f0 cpr3 f4 cpr3 f5 csigma_fan f0 f1 f2 cpr3 f4 cpr3 f5 cpi c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f5 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f0 cpr3 f5 cpr3 f3 csigma_fan f0 f1 f2 cpr3 f5 cpr3 f3 cpi creal_add creal_sub cdihV f0 cpr3 f3 cpr3 f4 csigma_fan f0 f1 f2 cpr3 f3 cpr3 f4 cpi creal_sub cdihV f0 cpr3 f4 cpr3 f5 csigma_fan f0 f1 f2 cpr3 f4 cpr3 f5 cpi
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- (((((FINITE (f2 INSERT EMPTY)) /\ (FINITE (f3 INSERT EMPTY))) ==> (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))) = p') ==> ((p' ==> (((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = q')) ==> (((((FINITE (f2 INSERT EMPTY)) /\ (FINITE (f3 INSERT EMPTY))) ==> (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))) ==> ((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))) = (p' ==> q'))))
T c==> c= c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 part cEMPTY c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi f6 c==> c==> f6 c= c==> c= csum * * part cUNION * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f1 cpr3 f5 cpi csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi c= csol f2 * * * * part cdartset_leads_into_fan f2 f3 f4 * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi f7 c= c==> c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 part cEMPTY c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi c==> c= csum * * part cUNION * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f1 cpr3 f5 cpi csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi c= csol f2 * * * * part cdartset_leads_into_fan f2 f3 f4 * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi c==> f6 f7
- (x IN ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) |- ((x IN ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) = T)
T c==> cIN f0 * * part cUNION * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= cIN f0 * * part cUNION * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cT
+ |- (((!C. (!r. ((((real_gt r) (real_of_num (NUMERAL _0))) /\ ((measurable (C INTER ((normball x) r))) /\ (((radial_norm r) x) (C INTER ((normball x) r))))) ==> (((sol x) C) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_div (measure (C INTER ((normball x) r)))) ((real_pow r) (NUMERAL (BIT1 (BIT1 _0)))))))))) ==> ((\C. (!r. ((((real_gt r) (real_of_num (NUMERAL _0))) /\ ((measurable (C INTER ((normball x) r))) /\ (((radial_norm r) x) (C INTER ((normball x) r))))) ==> (((sol x) C) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_div (measure (C INTER ((normball x) r)))) ((real_pow r) (NUMERAL (BIT1 (BIT1 _0)))))))))) ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))))) = ((\C. (!r. ((((real_gt r) (real_of_num (NUMERAL _0))) /\ ((measurable (C INTER ((normball x) r))) /\ (((radial_norm r) x) (C INTER ((normball x) r))))) ==> (((sol x) C) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_div (measure (C INTER ((normball x) r)))) ((real_pow r) (NUMERAL (BIT1 (BIT1 _0)))))))))) ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))))
T c= c==> ! ! c==> c/\ creal_gt b1 creal_of_num cNUMERAL c_0 c/\ cmeasurable * * part cINTER b0 * * part cnormball f0 b1 cradial_norm b1 f0 * * part cINTER b0 * * part cnormball f0 b1 c= csol f0 b0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_div cmeasure * * part cINTER b0 * * part cnormball f0 b1 creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 * / ! c==> c/\ creal_gt b1 creal_of_num cNUMERAL c_0 c/\ cmeasurable * * part cINTER b0 * * part cnormball f0 b1 cradial_norm b1 f0 * * part cINTER b0 * * part cnormball f0 b1 c= csol f0 b0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_div cmeasure * * part cINTER b0 * * part cnormball f0 b1 creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f1 * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 part cEMPTY * / ! c==> c/\ creal_gt b1 creal_of_num cNUMERAL c_0 c/\ cmeasurable * * part cINTER b0 * * part cnormball f0 b1 cradial_norm b1 f0 * * part cINTER b0 * * part cnormball f0 b1 c= csol f0 b0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_div cmeasure * * part cINTER b0 * * part cnormball f0 b1 creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f1 * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 part cEMPTY
+ (~ ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3)))))), ((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) |- ((~ ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3)))))) /\ F)
T c==> c~ c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c~ c/\ c= b0 f1 c= b0 f2 c==> c/\ c~ c= f0 f2 c/\ c~ c= f2 f1 c~ c= f1 f0 c/\ c~ c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c~ c/\ c= b0 f1 c= b0 f2 cF
+ |- ((FINITE EMPTY) = T)
T c= cFINITE part cEMPTY cT
+ (FAN (x , (V , E))), ((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))))))) |- (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cpi
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), (((((f1_fan x) V) E) f3) = f1), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f6 c==> c= cf1_fan f2 f0 f1 f6 f4 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c/\ c= cpr2 f6 cpr3 f5 c/\ c= cpr2 f5 cpr3 f4 c= cpr2 f4 cpr3 f6 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
+ (~ (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3)))), ((~ ((d1_fan (x , (V , E))) f1)) ==> F), (((~ ((d1_fan (x , (V , E))) f2)) \/ (~ ((d1_fan (x , (V , E))) f3))) ==> F) |- F
T c==> c~ c/\ cd1_fan c, f0 c, f1 f2 f3 c/\ cd1_fan c, f0 c, f1 f2 f4 cd1_fan c, f0 c, f1 f2 f5 c==> c==> c~ cd1_fan c, f0 c, f1 f2 f3 cF c==> c==> c\/ c~ cd1_fan c, f0 c, f1 f2 f4 c~ cd1_fan c, f0 c, f1 f2 f5 cF cF
+ ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)) |- ((((((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)) = (pr3 f3)) ==> (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul ((real_add ((((dihV x) (pr3 f3)) (pr3 f1)) (pr3 f2))) ((real_add ((((dihV x) (pr3 f1)) (pr3 f2)) (pr3 f3))) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (pr3 f1))) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (pr3 f2))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (pr3 f1))) pi)))))) = (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) ==> (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul ((real_add ((((dihV x) (pr3 f3)) (pr3 f1)) (pr3 f2))) ((real_add ((((dihV x) (pr3 f1)) (pr3 f2)) (pr3 f3))) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (pr3 f1))) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (pr3 f2))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (pr3 f1))) pi)))))))
T c==> c= cpr2 f0 cpr3 f1 c==> c= cpr2 f2 cpr3 f0 c==> c= cpr2 f1 cpr3 f2 c= c==> c= csigma_fan f3 f4 f5 cpr3 f0 cpr3 f2 cpr3 f1 c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_add cdihV f3 cpr3 f1 cpr3 f0 cpr3 f2 creal_add cdihV f3 cpr3 f0 cpr3 f2 cpr3 f1 creal_sub cdihV f3 cpr3 f2 cpr3 f1 cpr3 f0 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f3 cpr3 f1 cpr3 f0 cpr3 f2 cpi creal_add creal_sub cdihV f3 cpr3 f0 cpr3 f2 csigma_fan f3 f4 f5 cpr3 f0 cpr3 f2 cpi creal_sub cdihV f3 cpr3 f2 cpr3 f1 cpr3 f0 cpi c==> c= csigma_fan f3 f4 f5 cpr2 f2 cpr2 f1 cpr2 f0 c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_add cdihV f3 cpr3 f1 cpr3 f0 cpr3 f2 creal_add cdihV f3 cpr3 f0 cpr3 f2 cpr3 f1 creal_sub cdihV f3 cpr3 f2 cpr3 f1 cpr3 f0 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f3 cpr3 f1 cpr3 f0 cpr3 f2 cpi creal_add creal_sub cdihV f3 cpr3 f0 cpr3 f2 csigma_fan f3 f4 f5 cpr3 f0 cpr3 f2 cpi creal_sub cdihV f3 cpr3 f2 cpr3 f1 cpr3 f0 cpi
+ |- (((!E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))))) ==> ((\E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))))) E)) = ((\E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))))) E))
T c= c==> ! c= cfan80 c, f0 c, f1 b0 ! ! c==> cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b1 b2 csigma_fan f0 f1 b0 b1 b2 creal_lt cazim f0 b1 b2 csigma_fan f0 f1 b0 b1 b2 cpi * / c= cfan80 c, f0 c, f1 b0 ! ! c==> cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b1 b2 csigma_fan f0 f1 b0 b1 b2 creal_lt cazim f0 b1 b2 csigma_fan f0 f1 b0 b1 b2 cpi f2 * / c= cfan80 c, f0 c, f1 b0 ! ! c==> cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b1 b2 csigma_fan f0 f1 b0 b1 b2 creal_lt cazim f0 b1 b2 csigma_fan f0 f1 b0 b1 b2 cpi f2
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
+ |- (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((y IN ds) /\ (((aff_gt (x INSERT EMPTY)) ((pr2 f1) INSERT ((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)))) = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y)))))))) ==> (((((dartset_leads_into_fan x) V) E) ds) = ((aff_gt (x INSERT EMPTY)) ((pr2 f1) INSERT ((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ cIN f4 f3 c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f7 part cEMPTY * * * * * part cdart_leads_into f0 f1 f2 cpr2 f4 cpr3 f4 c= * * * * part cdartset_leads_into_fan f0 f1 f2 f3 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f7 part cEMPTY
+ ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET (d1_fan (x , (V , E)))) |- ((((f1 IN (d1_fan (x , (V , E)))) /\ ((f2 IN (d1_fan (x , (V , E)))) /\ (f3 IN (d1_fan (x , (V , E)))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = ((((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET (d1_fan (x , (V , E)))) ==> ((f1 IN (d1_fan (x , (V , E)))) /\ ((f2 IN (d1_fan (x , (V , E)))) /\ (f3 IN (d1_fan (x , (V , E))))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))
T c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cd1_fan c, f3 c, f4 f5 c= c==> c/\ cIN f0 * part cd1_fan c, f3 c, f4 f5 c/\ cIN f1 * part cd1_fan c, f3 c, f4 f5 cIN f2 * part cd1_fan c, f3 c, f4 f5 c= csol f3 * * * * part cdartset_leads_into_fan f3 f4 f5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c==> c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cd1_fan c, f3 c, f4 f5 c/\ cIN f0 * part cd1_fan c, f3 c, f4 f5 c/\ cIN f1 * part cd1_fan c, f3 c, f4 f5 cIN f2 * part cd1_fan c, f3 c, f4 f5 c= csol f3 * * * * part cdartset_leads_into_fan f3 f4 f5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- ((x = f2) /\ (x = f3)) |- ((~ (f1 = f3)) = (~ (f1 = f2)))
T c==> c/\ c= f0 f1 c= f0 f2 c= c~ c= f3 f2 c~ c= f3 f1
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F), (((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F) ==> ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F)) |- ((((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F) ==> ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F)) /\ ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F))
T c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c/\ c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF
+ |- ((~ ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c~ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- |- (((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F) = (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3)))))))
T c= c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1
+ (((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))) |- (((((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = ((((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))
T c==> c= csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi c= c==> c= csum * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f1 cpr3 f5 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi c= csol f2 * * * * part cdartset_leads_into_fan f2 f3 f4 * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi c==> c= csum * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f1 cpr3 f5 cpi csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi c= csol f2 * * * * part cdartset_leads_into_fan f2 f3 f4 * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi
+ |- (!r. ((((real_gt r) (real_of_num (NUMERAL _0))) /\ ((measurable (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) r))) /\ (((radial_norm r) x) (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) r))))) ==> (((sol x) ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_div (measure (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) r)))) ((real_pow r) (NUMERAL (BIT1 (BIT1 _0)))))))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 c/\ cmeasurable * * part cINTER * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 part cEMPTY * * part cnormball f1 f0 cradial_norm f0 f1 * * part cINTER * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 part cEMPTY * * part cnormball f1 f0 c= csol f1 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 part cEMPTY creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_div cmeasure * * part cINTER * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 part cEMPTY * * part cnormball f1 f0 creal_pow f0 cNUMERAL cBIT1 cBIT1 c_0
+ |- ((\r. ((((real_gt r) (real_of_num (NUMERAL _0))) /\ ((measurable (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) r))) /\ (((radial_norm r) x) (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) r))))) ==> (((sol x) ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_div (measure (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) r)))) ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 _0))))
T * / c==> c/\ creal_gt b0 creal_of_num cNUMERAL c_0 c/\ cmeasurable * * part cINTER * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f1 * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 part cEMPTY * * part cnormball f0 b0 cradial_norm b0 f0 * * part cINTER * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f1 * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 part cEMPTY * * part cnormball f0 b0 c= csol f0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f1 * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 part cEMPTY creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_div cmeasure * * part cINTER * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f1 * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 part cEMPTY * * part cnormball f0 b0 creal_pow b0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((\f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))))))))))) f3) |- ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))))))))))
T c==> * / c/\ c= f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ c= cf1_fan f3 f4 f5 f1 f2 c/\ c= cf1_fan f3 f4 f5 f2 b0 c/\ c= cf1_fan f3 f4 f5 b0 f1 c/\ cIN * * part cINSERT cpr2 f2 * * part cINSERT cpr2 b0 part cEMPTY f5 c/\ cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr2 f1 part cEMPTY f5 c/\ cIN * * part cINSERT cpr2 f1 * * part cINSERT cpr2 f2 part cEMPTY f5 c/\ c= csigma_fan f3 f4 f5 cpr2 f2 cpr2 b0 cpr2 f1 c/\ c= cpr2 b0 cpr3 f2 c/\ c= cpr2 f2 cpr3 f1 c= cpr2 f1 cpr3 b0 f6 c/\ c= f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f6 part cEMPTY c/\ c= cf1_fan f3 f4 f5 f1 f2 c/\ c= cf1_fan f3 f4 f5 f2 f6 c/\ c= cf1_fan f3 f4 f5 f6 f1 c/\ cIN * * part cINSERT cpr2 f2 * * part cINSERT cpr2 f6 part cEMPTY f5 c/\ cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f1 part cEMPTY f5 c/\ cIN * * part cINSERT cpr2 f1 * * part cINSERT cpr2 f2 part cEMPTY f5 c/\ c= csigma_fan f3 f4 f5 cpr2 f2 cpr2 f6 cpr2 f1 c/\ c= cpr2 f6 cpr3 f2 c/\ c= cpr2 f2 cpr3 f1 c= cpr2 f1 cpr3 f6
+ (((sol x) ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (measure (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))))) |- ((((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (measure (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi))))) = (((sol x) ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi))))))
T c==> c= csol f0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f1 * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 part cEMPTY creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f1 * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 part cEMPTY * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f1 * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 part cEMPTY * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f0 cpr3 f1 cpr3 f2 csigma_fan f0 f4 f5 cpr3 f1 cpr3 f2 cpi creal_add creal_sub cdihV f0 cpr3 f2 cpr3 f3 csigma_fan f0 f4 f5 cpr3 f2 cpr3 f3 cpi creal_sub cdihV f0 cpr3 f3 cpr3 f1 csigma_fan f0 f4 f5 cpr3 f3 cpr3 f1 cpi c= csol f0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f1 * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f0 cpr3 f1 cpr3 f2 csigma_fan f0 f4 f5 cpr3 f1 cpr3 f2 cpi creal_add creal_sub cdihV f0 cpr3 f2 cpr3 f3 csigma_fan f0 f4 f5 cpr3 f2 cpr3 f3 cpi creal_sub cdihV f0 cpr3 f3 cpr3 f1 csigma_fan f0 f4 f5 cpr3 f3 cpr3 f1 cpi
+ |- ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0)))
T c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0
- (x = f2), ((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))), ((x = f1) /\ ((x = f2) \/ (x = f3))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c~ c= f2 f3 c/\ c~ c= f3 f1 c~ c= f1 f2 c==> c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c==> c~ cF cF
+ |- ((\E. (!ds. (!r. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt r) (real_of_num (NUMERAL _0)))))))) ==> (((radial_norm r) x) (((((dartset_leads_into_fan x) V) E) ds) INTER ((normball x) r))))))) E)
T * / ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ ! c==> cIN b3 f1 c> cCARD * * * part cset_of_edge b3 f1 b0 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 b0 c/\ cIN b1 * part cface_set chypermap1_of_fanx c, f0 c, f1 b0 c/\ c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 creal_gt b2 creal_of_num cNUMERAL c_0 cradial_norm b2 f0 * * part cINTER * * * * part cdartset_leads_into_fan f0 f1 b0 b1 * * part cnormball f0 b2 f2
+ |- (((!s. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((y IN ds) /\ (s = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y)))))))) ==> (((((dartset_leads_into_fan x) V) E) ds) = s)))) ==> ((\s. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((y IN ds) /\ (s = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y)))))))) ==> (((((dartset_leads_into_fan x) V) E) ds) = s)))) ((aff_gt (x INSERT EMPTY)) ((pr2 f1) INSERT ((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)))))) = ((\s. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((y IN ds) /\ (s = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y)))))))) ==> (((((dartset_leads_into_fan x) V) E) ds) = s)))) ((aff_gt (x INSERT EMPTY)) ((pr2 f1) INSERT ((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY))))))
T c= c==> ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ cIN b1 f3 c= b0 * * * * * part cdart_leads_into f0 f1 f2 cpr2 b1 cpr3 b1 c= * * * * part cdartset_leads_into_fan f0 f1 f2 f3 b0 * / ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ cIN b1 f3 c= b0 * * * * * part cdart_leads_into f0 f1 f2 cpr2 b1 cpr3 b1 c= * * * * part cdartset_leads_into_fan f0 f1 f2 f3 b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY * / ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ cIN b1 f3 c= b0 * * * * * part cdart_leads_into f0 f1 f2 cpr2 b1 cpr3 b1 c= * * * * part cdartset_leads_into_fan f0 f1 f2 f3 b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY
+ |- (!x. ((x IN ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) = (x IN (f2 INSERT (f3 INSERT EMPTY)))))
T c= cIN f0 * * part cUNION * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((!v3. ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (coplanar (x INSERT ((pr2 f1) INSERT ((pr2 f2) INSERT (v3 INSERT EMPTY))))))) ==> ((measure ((ball (x , (real_of_num (NUMERAL (BIT1 _0))))) INTER ((aff_gt (x INSERT EMPTY)) ((pr2 f1) INSERT ((pr2 f2) INSERT (v3 INSERT EMPTY)))))) = ((LET (\a123. (LET_END ((LET (\a231. (LET_END ((LET (\a312. (LET_END ((real_mul ((real_add a123) ((real_add a231) ((real_sub a312) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) ((((dihV x) v3) (pr2 f1)) (pr2 f2)))))) ((((dihV x) (pr2 f2)) v3) (pr2 f1)))))) ((((dihV x) (pr2 f1)) (pr2 f2)) v3))))) ==> ((\v3. ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (coplanar (x INSERT ((pr2 f1) INSERT ((pr2 f2) INSERT (v3 INSERT EMPTY))))))) ==> ((measure ((ball (x , (real_of_num (NUMERAL (BIT1 _0))))) INTER ((aff_gt (x INSERT EMPTY)) ((pr2 f1) INSERT ((pr2 f2) INSERT (v3 INSERT EMPTY)))))) = ((LET (\a123. (LET_END ((LET (\a231. (LET_END ((LET (\a312. (LET_END ((real_mul ((real_add a123) ((real_add a231) ((real_sub a312) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) ((((dihV x) v3) (pr2 f1)) (pr2 f2)))))) ((((dihV x) (pr2 f2)) v3) (pr2 f1)))))) ((((dihV x) (pr2 f1)) (pr2 f2)) v3))))) (pr2 f3))) = ((\v3. ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (coplanar (x INSERT ((pr2 f1) INSERT ((pr2 f2) INSERT (v3 INSERT EMPTY))))))) ==> ((measure ((ball (x , (real_of_num (NUMERAL (BIT1 _0))))) INTER ((aff_gt (x INSERT EMPTY)) ((pr2 f1) INSERT ((pr2 f2) INSERT (v3 INSERT EMPTY)))))) = ((LET (\a123. (LET_END ((LET (\a231. (LET_END ((LET (\a312. (LET_END ((real_mul ((real_add a123) ((real_add a231) ((real_sub a312) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) ((((dihV x) v3) (pr2 f1)) (pr2 f2)))))) ((((dihV x) (pr2 f2)) v3) (pr2 f1)))))) ((((dihV x) (pr2 f1)) (pr2 f2)) v3))))) (pr2 f3)))
T c= c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c~ ccoplanar * * part cINSERT f0 * * part cINSERT cpr2 f1 * * part cINSERT cpr2 f2 * * part cINSERT b0 part cEMPTY c= cmeasure * * part cINTER * part cball c, f0 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f1 * * part cINSERT cpr2 f2 * * part cINSERT b0 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END creal_mul creal_add b1 creal_add b2 creal_sub b3 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdihV f0 b0 cpr2 f1 cpr2 f2 cdihV f0 cpr2 f2 b0 cpr2 f1 cdihV f0 cpr2 f1 cpr2 f2 b0 * / c==> c/\ creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c~ ccoplanar * * part cINSERT f0 * * part cINSERT cpr2 f1 * * part cINSERT cpr2 f2 * * part cINSERT b0 part cEMPTY c= cmeasure * * part cINTER * part cball c, f0 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f1 * * part cINSERT cpr2 f2 * * part cINSERT b0 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END creal_mul creal_add b1 creal_add b2 creal_sub b3 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdihV f0 b0 cpr2 f1 cpr2 f2 cdihV f0 cpr2 f2 b0 cpr2 f1 cdihV f0 cpr2 f1 cpr2 f2 b0 cpr2 f3 * / c==> c/\ creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c~ ccoplanar * * part cINSERT f0 * * part cINSERT cpr2 f1 * * part cINSERT cpr2 f2 * * part cINSERT b0 part cEMPTY c= cmeasure * * part cINTER * part cball c, f0 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f1 * * part cINSERT cpr2 f2 * * part cINSERT b0 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END creal_mul creal_add b1 creal_add b2 creal_sub b3 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdihV f0 b0 cpr2 f1 cpr2 f2 cdihV f0 cpr2 f2 b0 cpr2 f1 cdihV f0 cpr2 f1 cpr2 f2 b0 cpr2 f3
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F) ==> ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F)) ==> (((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F) ==> ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F)))
T c==> c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF
+ |- (((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (?f2. (?f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3)))))))))))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- ((?f2. (?f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3)))))))))))))) /\ (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c? / c? / c/\ c= f2 * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c= cf1_fan f4 f0 f1 f3 b0 c/\ c= cf1_fan f4 f0 f1 b0 b1 c/\ c= cf1_fan f4 f0 f1 b1 f3 c/\ cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr2 b1 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr2 f3 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 b0 part cEMPTY f1 c/\ c= csigma_fan f4 f0 f1 cpr2 b0 cpr2 b1 cpr2 f3 c/\ c= cpr2 b1 cpr3 b0 c/\ c= cpr2 b0 cpr3 f3 c= cpr2 f3 cpr3 b1 c==> cFAN c, f4 c, f0 f1 c==> cfan80 c, f4 c, f0 f1 c==> c= cCARD f2 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f2 * part cface_set chypermap1_of_fanx c, f4 c, f0 f1 c/\ c? / c? / c/\ c= f2 * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c= cf1_fan f4 f0 f1 f3 b0 c/\ c= cf1_fan f4 f0 f1 b0 b1 c/\ c= cf1_fan f4 f0 f1 b1 f3 c/\ cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr2 b1 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr2 f3 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 b0 part cEMPTY f1 c/\ c= csigma_fan f4 f0 f1 cpr2 b0 cpr2 b1 cpr2 f3 c/\ c= cpr2 b1 cpr3 b0 c/\ c= cpr2 b0 cpr3 f3 c= cpr2 f3 cpr3 b1 c= csol f4 * * * * part cdartset_leads_into_fan f4 f0 f1 f2 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f2 / creal_sub cazim_fan f4 f0 f1 cpr2 b0 cpr3 b0 cpi
+ (((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) |- ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) = T)
T c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f0 * * part cINTER * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f1 * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 part cEMPTY * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 c= cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f0 * * part cINTER * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f1 * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 part cEMPTY * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 cT
+ |- ((((FINITE (f1 INSERT EMPTY)) /\ (FINITE (f2 INSERT (f3 INSERT EMPTY)))) = p') ==> ((p' ==> ((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) = q')) ==> ((((FINITE (f1 INSERT EMPTY)) /\ (FINITE (f2 INSERT (f3 INSERT EMPTY)))) ==> (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = (p' ==> q'))))
T c==> c= c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f4 f5 f6 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f4 f5 f6 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f4 f5 f6 cpr2 b0 cpr3 b0 cpi f7 c= c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f4 f5 f6 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f4 f5 f6 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f4 f5 f6 cpr2 b0 cpr3 b0 cpi c==> f3 f7
- (~ (((real_div A) ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) = A)) |- ((~ (((real_div A) ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) = A)) /\ F)
T c==> c~ c= creal_div f0 creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c/\ c~ c= creal_div f0 creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 cF
+ |- ((\s. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((y IN ds) /\ (s = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y)))))))) ==> (((((dartset_leads_into_fan x) V) E) ds) = s)))) ((aff_gt (x INSERT EMPTY)) ((pr2 f1) INSERT ((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)))))
T * / ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ cIN b1 f3 c= b0 * * * * * part cdart_leads_into f0 f1 f2 cpr2 b1 cpr3 b1 c= * * * * part cdartset_leads_into_fan f0 f1 f2 f3 b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY
+ |- (((!V. (!E. (!ds. (!r. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt r) (real_of_num (NUMERAL _0)))))))) ==> (((radial_norm r) x) (((((dartset_leads_into_fan x) V) E) ds) INTER ((normball x) r)))))))) ==> ((\V. (!E. (!ds. (!r. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt r) (real_of_num (NUMERAL _0)))))))) ==> (((radial_norm r) x) (((((dartset_leads_into_fan x) V) E) ds) INTER ((normball x) r)))))))) V)) = ((\V. (!E. (!ds. (!r. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt r) (real_of_num (NUMERAL _0)))))))) ==> (((radial_norm r) x) (((((dartset_leads_into_fan x) V) E) ds) INTER ((normball x) r)))))))) V))
T c= c==> ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b4 b0 c> cCARD * * * part cset_of_edge b4 b0 b1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, b0 b1 c/\ cIN b2 * part cface_set chypermap1_of_fanx c, f0 c, b0 b1 c/\ c= cCARD b2 cNUMERAL cBIT1 cBIT1 c_0 creal_gt b3 creal_of_num cNUMERAL c_0 cradial_norm b3 f0 * * part cINTER * * * * part cdartset_leads_into_fan f0 b0 b1 b2 * * part cnormball f0 b3 * / ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b4 b0 c> cCARD * * * part cset_of_edge b4 b0 b1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, b0 b1 c/\ cIN b2 * part cface_set chypermap1_of_fanx c, f0 c, b0 b1 c/\ c= cCARD b2 cNUMERAL cBIT1 cBIT1 c_0 creal_gt b3 creal_of_num cNUMERAL c_0 cradial_norm b3 f0 * * part cINTER * * * * part cdartset_leads_into_fan f0 b0 b1 b2 * * part cnormball f0 b3 f1 * / ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b4 b0 c> cCARD * * * part cset_of_edge b4 b0 b1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, b0 b1 c/\ cIN b2 * part cface_set chypermap1_of_fanx c, f0 c, b0 b1 c/\ c= cCARD b2 cNUMERAL cBIT1 cBIT1 c_0 creal_gt b3 creal_of_num cNUMERAL c_0 cradial_norm b3 f0 * * part cINTER * * * * part cdartset_leads_into_fan f0 b0 b1 b2 * * part cnormball f0 b3 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- (((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))))) = ((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))))) ==> (((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((((dartset_leads_into_fan x) V) E) ds) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0))))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c= c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f2 * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f6 cpr3 f4 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f6 cpi c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f2 c, f0 f1 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c/\ c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f2 * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 f3 * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f6 cpr3 f4 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f6 cpi
- |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((T ==> ((((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))) = q')) ==> ((((FINITE (f2 INSERT EMPTY)) /\ (FINITE (f3 INSERT EMPTY))) ==> (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))) = (T ==> q')))
T c==> c==> cT c= c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi f6 c= c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 part cEMPTY c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi c==> cT f6
- (~ (((real_div A) ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) = A)) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_div f0 creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (~ (A x)), (((A x) /\ (B x)) /\ ((~ (B x)) \/ (~ (A x)))) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f1 * f2 f1 c\/ c~ * f2 f1 c~ * f0 f1 c==> c~ cF cF
+ |- (((!r. (!v0. (!v1. (!v2. (!v3. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((measure ((ball (v0 , r)) INTER ((aff_gt (v0 INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) = ((LET (\a123. (LET_END ((LET (\a231. (LET_END ((LET (\a312. (LET_END ((real_mul ((real_add a123) ((real_add a231) ((real_sub a312) pi)))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) ((((dihV v0) v3) v1) v2))))) ((((dihV v0) v2) v3) v1))))) ((((dihV v0) v1) v2) v3))))))))) ==> ((\r. (!v0. (!v1. (!v2. (!v3. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((measure ((ball (v0 , r)) INTER ((aff_gt (v0 INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) = ((LET (\a123. (LET_END ((LET (\a231. (LET_END ((LET (\a312. (LET_END ((real_mul ((real_add a123) ((real_add a231) ((real_sub a312) pi)))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) ((((dihV v0) v3) v1) v2))))) ((((dihV v0) v2) v3) v1))))) ((((dihV v0) v1) v2) v3))))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\r. (!v0. (!v1. (!v2. (!v3. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ (~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((measure ((ball (v0 , r)) INTER ((aff_gt (v0 INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) = ((LET (\a123. (LET_END ((LET (\a231. (LET_END ((LET (\a312. (LET_END ((real_mul ((real_add a123) ((real_add a231) ((real_sub a312) pi)))) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) ((((dihV v0) v3) v1) v2))))) ((((dihV v0) v2) v3) v1))))) ((((dihV v0) v1) v2) v3))))))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c~ ccoplanar * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= cmeasure * * part cINTER * part cball c, b1 b0 * * part caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END creal_mul creal_add b5 creal_add b6 creal_sub b7 cpi creal_div creal_pow b0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdihV b1 b4 b2 b3 cdihV b1 b3 b4 b2 cdihV b1 b2 b3 b4 * / ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c~ ccoplanar * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= cmeasure * * part cINTER * part cball c, b1 b0 * * part caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END creal_mul creal_add b5 creal_add b6 creal_sub b7 cpi creal_div creal_pow b0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdihV b1 b4 b2 b3 cdihV b1 b3 b4 b2 cdihV b1 b2 b3 b4 creal_of_num cNUMERAL cBIT1 c_0 * / ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c~ ccoplanar * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= cmeasure * * part cINTER * part cball c, b1 b0 * * part caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END creal_mul creal_add b5 creal_add b6 creal_sub b7 cpi creal_div creal_pow b0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdihV b1 b4 b2 b3 cdihV b1 b3 b4 b2 cdihV b1 b2 b3 b4 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))))))))) ==> ((\V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))))))))) V)) = ((\V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))))))))) V))
T c= c==> ! ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b3 b4 b2 creal_lt cazim f0 b3 b4 b2 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * / ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b3 b4 b2 creal_lt cazim f0 b3 b4 b2 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f1 * / ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b3 b4 b2 creal_lt cazim f0 b3 b4 b2 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (?f1. (?f2. (?f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))))))))))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c? / c? / c? / c/\ c= f2 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cf1_fan f3 f0 f1 b0 b1 c/\ c= cf1_fan f3 f0 f1 b1 b2 c/\ c= cf1_fan f3 f0 f1 b2 b0 c/\ cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr2 b2 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b2 * * part cINSERT cpr2 b0 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr2 b1 part cEMPTY f1 c/\ c= csigma_fan f3 f0 f1 cpr2 b1 cpr2 b2 cpr2 b0 c/\ c= cpr2 b2 cpr3 b1 c/\ c= cpr2 b1 cpr3 b0 c= cpr2 b0 cpr3 b2 c==> cFAN c, f3 c, f0 f1 c==> cfan80 c, f3 c, f0 f1 c==> c= cCARD f2 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f2 * part cface_set chypermap1_of_fanx c, f3 c, f0 f1 c= csol f3 * * * * part cdartset_leads_into_fan f3 f0 f1 f2 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f2 / creal_sub cazim_fan f3 f0 f1 cpr2 b0 cpr3 b0 cpi
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))) |- ((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))))) ==> (measurable (((((dartset_leads_into_fan x) V) E) ds) INTER (ball (x , (real_of_num (NUMERAL (BIT1 _0)))))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c==> cIN f5 * part cd1_fan c, f2 c, f0 f1 c==> cIN f6 * part cd1_fan c, f2 c, f0 f1 c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f2 c, f0 f1 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c/\ c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 f3 * part cball c, f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f6 cpr3 f4 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f6 cpi
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- ((\w. (((FAN (x , (V , E))) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ ((((pr2 f2) INSERT (w INSERT EMPTY)) IN E) /\ (((w INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) w) = (pr2 f1)) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((((((sigma_fan x) V) E) (pr2 f1)) (pr2 f2)) = w) /\ ((((((sigma_fan x) V) E) w) (pr2 f1)) = (pr2 f2))))) (pr2 f3))
T * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f4 part cEMPTY f2 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT b0 part cEMPTY f2 c/\ cIN * * part cINSERT b0 * * part cINSERT cpr2 f3 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 cpr2 f4 b0 cpr2 f3 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 f2 c/\ c= csigma_fan f0 f1 f2 cpr2 f3 cpr2 f4 b0 c= csigma_fan f0 f1 f2 b0 cpr2 f3 cpr2 f4 cpr2 f5
- |- ((\n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) n)
T * / c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 f1
+ |- ((\E. (!ds. (!e. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt e) (real_of_num (NUMERAL _0)))))))) ==> (measurable (((((dartset_leads_into_fan x) V) E) ds) INTER (ball (x , e)))))))) E)
T * / ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ ! c==> cIN b3 f1 c> cCARD * * * part cset_of_edge b3 f1 b0 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 b0 c/\ cIN b1 * part cface_set chypermap1_of_fanx c, f0 c, f1 b0 c/\ c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 creal_gt b2 creal_of_num cNUMERAL c_0 cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f0 f1 b0 b1 * part cball c, f0 b2 f2
+ (~ (((A x) /\ (B x)) = ((B x) /\ (A x)))) |- ((((A x) /\ (B x)) /\ ((~ (B x)) \/ (~ (A x)))) \/ (((~ (A x)) \/ (~ (B x))) /\ ((B x) /\ (A x))))
T c==> c~ c= c/\ * f0 f1 * f2 f1 c/\ * f2 f1 * f0 f1 c\/ c/\ c/\ * f0 f1 * f2 f1 c\/ c~ * f2 f1 c~ * f0 f1 c/\ c\/ c~ * f0 f1 c~ * f2 f1 c/\ * f2 f1 * f0 f1
+ |- ((\x. (!V. (!E. (!ds. (!e. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt e) (real_of_num (NUMERAL _0)))))))) ==> (measurable (((((dartset_leads_into_fan x) V) E) ds) INTER (ball (x , e)))))))))) x)
T * / ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b5 b1 c> cCARD * * * part cset_of_edge b5 b1 b2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, b0 c, b1 b2 c/\ cIN b3 * part cface_set chypermap1_of_fanx c, b0 c, b1 b2 c/\ c= cCARD b3 cNUMERAL cBIT1 cBIT1 c_0 creal_gt b4 creal_of_num cNUMERAL c_0 cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan b0 b1 b2 b3 * part cball c, b0 b4 f0
+ |- (((((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))) ==> ((((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))) = ((((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))) ==> ((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))))
T c= c==> c= csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi c==> c= csum * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f1 cpr3 f5 cpi csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi c= csol f2 * * * * part cdartset_leads_into_fan f2 f3 f4 * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi c==> c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi c==> c= csum * * part cUNION * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f1 cpr3 f5 cpi csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi c= csol f2 * * * * part cdartset_leads_into_fan f2 f3 f4 * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi
- |- ((~ (_3043565 = _3043567)) \/ ((~ (_3043564 = _3043566)) \/ (((d1_fan _3043566) _3043567) \/ (~ ((d1_fan _3043564) _3043565)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cd1_fan f3 f1 c~ cd1_fan f2 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))))) |- (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> c/\ cfan80 c, f2 c, f0 f1 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) = (((((dart_leads_into x) V) E) (pr3 f1)) (pr3 f2))), (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) = (((((dart_leads_into x) V) E) (pr3 f1)) (pr3 f2))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))) |- ((((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) = (((((dart_leads_into x) V) E) (pr3 f1)) (pr3 f2))) /\ ((measurable (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY * * * * * part cdart_leads_into f2 f0 f1 cpr3 f4 cpr3 f5 c==> c= * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * * * * * part cdart_leads_into f2 f0 f1 cpr3 f4 cpr3 f5 c==> c= cpr2 f4 cpr3 f3 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f3 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f3 cpr2 f4 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f3 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c==> cIN f5 * part cd1_fan c, f2 c, f0 f1 c==> cIN f3 * part cd1_fan c, f2 c, f0 f1 c/\ c= * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * * * * * part cdart_leads_into f2 f0 f1 cpr3 f4 cpr3 f5 c==> cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f2 * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f3 cpr3 f4 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f3 cpi
+ |- (((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 (BIT1 _0))) = (BIT1 _0)))) = ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 (BIT1 _0))) = (BIT1 _0))))
T c= c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 cBIT1 c_0 cBIT1 c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) = (((((dart_leads_into x) V) E) (pr3 f1)) (pr3 f2))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))) |- ((measurable (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f6 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY * * * * * part cdart_leads_into f2 f0 f1 cpr3 f4 cpr3 f5 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c==> cIN f5 * part cd1_fan c, f2 c, f0 f1 c==> cIN f6 * part cd1_fan c, f2 c, f0 f1 c==> cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f2 * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f6 cpr3 f4 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f6 cpi
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), (((((f1_fan x) V) E) f3) = f1), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3)))))))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) |- (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f6 c==> c= cf1_fan f2 f0 f1 f6 f4 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c/\ c= cpr2 f6 cpr3 f5 c/\ c= cpr2 f5 cpr3 f4 c= cpr2 f4 cpr3 f6 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
+ |- (((!E. (!ds. (!r. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt r) (real_of_num (NUMERAL _0)))))))) ==> (((radial_norm r) x) (((((dartset_leads_into_fan x) V) E) ds) INTER ((normball x) r))))))) ==> ((\E. (!ds. (!r. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt r) (real_of_num (NUMERAL _0)))))))) ==> (((radial_norm r) x) (((((dartset_leads_into_fan x) V) E) ds) INTER ((normball x) r))))))) E)) = ((\E. (!ds. (!r. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt r) (real_of_num (NUMERAL _0)))))))) ==> (((radial_norm r) x) (((((dartset_leads_into_fan x) V) E) ds) INTER ((normball x) r))))))) E))
T c= c==> ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ ! c==> cIN b3 f1 c> cCARD * * * part cset_of_edge b3 f1 b0 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 b0 c/\ cIN b1 * part cface_set chypermap1_of_fanx c, f0 c, f1 b0 c/\ c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 creal_gt b2 creal_of_num cNUMERAL c_0 cradial_norm b2 f0 * * part cINTER * * * * part cdartset_leads_into_fan f0 f1 b0 b1 * * part cnormball f0 b2 * / ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ ! c==> cIN b3 f1 c> cCARD * * * part cset_of_edge b3 f1 b0 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 b0 c/\ cIN b1 * part cface_set chypermap1_of_fanx c, f0 c, f1 b0 c/\ c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 creal_gt b2 creal_of_num cNUMERAL c_0 cradial_norm b2 f0 * * part cINTER * * * * part cdartset_leads_into_fan f0 f1 b0 b1 * * part cnormball f0 b2 f2 * / ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ ! c==> cIN b3 f1 c> cCARD * * * part cset_of_edge b3 f1 b0 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 b0 c/\ cIN b1 * part cface_set chypermap1_of_fanx c, f0 c, f1 b0 c/\ c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 creal_gt b2 creal_of_num cNUMERAL c_0 cradial_norm b2 f0 * * part cINTER * * * * part cdartset_leads_into_fan f0 f1 b0 b1 * * part cnormball f0 b2 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- ((((\f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))))))))))) f3) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = T)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c= c==> * / c/\ c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c/\ c= cf1_fan f2 f0 f1 f4 f5 c/\ c= cf1_fan f2 f0 f1 f5 b0 c/\ c= cf1_fan f2 f0 f1 b0 f4 c/\ cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 b0 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 b0 cpr2 f4 c/\ c= cpr2 b0 cpr3 f5 c/\ c= cpr2 f5 cpr3 f4 c= cpr2 f4 cpr3 b0 f6 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi cT
+ (!a. ((a IN (d1_fan (x , (V , E)))) ==> (~ (((((f1_fan x) V) E) a) = a)))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (f1 = f3)), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))) |- (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c~ c= cf1_fan f0 f1 f2 b0 b0 c==> ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c==> c~ c= f3 f4 c==> cFAN c, f0 c, f1 f2 c==> cfan80 c, f0 c, f1 f2 c==> c= f5 * * part cINSERT f3 * * part cINSERT f6 * * part cINSERT f4 part cEMPTY c==> c= * part cd_fan c, f0 c, f1 f2 * part cd1_fan c, f0 c, f1 f2 c==> c= cf1_fan f0 f1 f2 f3 f6 c==> c= cf1_fan f0 f1 f2 f6 f4 c==> c= cCARD f5 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f3 cpr3 f4 c==> c= cpr2 f6 cpr3 f3 c==> c= cpr2 f4 cpr3 f6 c==> c= csigma_fan f0 f1 f2 cpr2 f6 cpr2 f4 cpr2 f3 c==> cIN f5 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f6 part cEMPTY f2 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f2 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f3 part cEMPTY f2 c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c==> cIN f6 * part cd1_fan c, f0 c, f1 f2 c==> cIN f4 * part cd1_fan c, f0 c, f1 f2 c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f3 * * part cINSERT f6 * * part cINSERT f4 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f3 * * part cINSERT f6 * * part cINSERT f4 part cEMPTY / creal_sub cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cpi
+ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ (!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) |- ((((d1_fan (x , (V , E))) f1) ==> F) = F)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c= c==> cd1_fan c, f3 c, f4 f5 f0 cF cF
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?f3. t) = t)
T c= c? / f0 f0
- |- ((~ (((real_div A) ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) = A)) ==> F)
T c==> c~ c= creal_div f0 creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 cF
+ |- (((~ (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3)))) ==> F) = (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))
T c= c==> c~ c/\ cd1_fan c, f0 c, f1 f2 f3 c/\ cd1_fan c, f0 c, f1 f2 f4 cd1_fan c, f0 c, f1 f2 f5 cF c/\ cd1_fan c, f0 c, f1 f2 f3 c/\ cd1_fan c, f0 c, f1 f2 f4 cd1_fan c, f0 c, f1 f2 f5
+ |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = T)
T c= creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cT
- (x = f3) |- ((~ (f2 = f1)) = (~ (f2 = f1)))
T c==> c= f0 f1 c= c~ c= f2 f3 c~ c= f2 f3
+ |- ((\x. (!V. (!E. (!ds. (((FAN (x , (V , E))) /\ (ds IN (face_set (hypermap1_of_fanx (x , (V , E)))))) ==> (ds SUBSET (d_fan (x , (V , E))))))))) x)
T * / ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 cIN b3 * part cface_set chypermap1_of_fanx c, b0 c, b1 b2 cSUBSET b3 * part cd_fan c, b0 c, b1 b2 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- (((((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) = (((((dart_leads_into x) V) E) (pr3 f1)) (pr3 f2))) ==> ((measurable (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))))))) = ((((FAN (x , (V , E))) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((aff_gt (x INSERT EMPTY)) ((pr2 f1) INSERT ((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)))) = (((((dart_leads_into x) V) E) (pr2 f2)) (pr2 f3)))) ==> ((measurable (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 cpr3 f4 c==> c= cpr2 f5 cpr3 f3 c==> c= cpr2 f4 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f4 cpr2 f3 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f3 part cEMPTY f1 c= c==> c= * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 part cEMPTY * * * * * part cdart_leads_into f2 f0 f1 cpr3 f3 cpr3 f5 c==> cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f3 * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f2 * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f3 * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f3 * * part cINSERT f5 * * part cINSERT f4 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f3 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f3 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f4 cpi c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f5 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f3 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f4 cpr2 f3 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 cfan80 c, f2 c, f0 f1 c= * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f4 part cEMPTY * * * * * part cdart_leads_into f2 f0 f1 cpr2 f5 cpr2 f4 c==> cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f3 * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f2 * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f3 * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f3 * * part cINSERT f5 * * part cINSERT f4 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f3 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f3 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f4 cpi
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F), (((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F) ==> ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F)) |- ((((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F) ==> ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F)) /\ ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F))
T c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c/\ c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF
- |- (((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((sum s) (\y. (f y))) = ((sum s) g))) = T)
T c= c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= csum f0 / * f1 b0 csum f0 f2 cT
+ |- (((((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))) ==> ((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))) = ((((FINITE (f2 INSERT EMPTY)) /\ (FINITE (f3 INSERT EMPTY))) ==> (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))) ==> ((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))))
T c= c==> c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi c==> c= csum * * part cUNION * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f1 cpr3 f5 cpi csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi c= csol f2 * * * * part cdartset_leads_into_fan f2 f3 f4 * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi c==> c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 part cEMPTY c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi c==> c= csum * * part cUNION * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f1 cpr3 f5 cpi csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi c= csol f2 * * * * part cdartset_leads_into_fan f2 f3 f4 * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi
+ ((pr2 f1) = (pr3 f3)), ((DISJOINT (f1 INSERT EMPTY)) (f2 INSERT (f3 INSERT EMPTY))) |- (((((FINITE (f1 INSERT EMPTY)) /\ (FINITE (f2 INSERT (f3 INSERT EMPTY)))) ==> (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = ((((FINITE (f1 INSERT EMPTY)) /\ ((FINITE (f2 INSERT (f3 INSERT EMPTY))) /\ ((DISJOINT (f1 INSERT EMPTY)) (f2 INSERT (f3 INSERT EMPTY))))) ==> (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((sum (f1 INSERT EMPTY)) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))
T c==> c= cpr2 f0 cpr3 f1 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c= c==> c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f1 cpr3 f0 cpi csum * * part cINSERT f2 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= csol f3 * * * * part cdartset_leads_into_fan f3 f4 f5 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c==> c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY c/\ cFINITE * * part cINSERT f2 * * part cINSERT f1 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_add csum * * part cINSERT f0 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi csum * * part cINSERT f2 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= csol f3 * * * * part cdartset_leads_into_fan f3 f4 f5 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi
+ |- (((!E. (((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))))) ==> ((\E. (((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))))) E)) = ((\E. (((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))))) E))
T c= c==> ! c==> c/\ cFAN c, f0 c, f1 b0 ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 b0 cNUMERAL cBIT1 c_0 c= * part cd_fan c, f0 c, f1 b0 * part cd1_fan c, f0 c, f1 b0 * / c==> c/\ cFAN c, f0 c, f1 b0 ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 b0 cNUMERAL cBIT1 c_0 c= * part cd_fan c, f0 c, f1 b0 * part cd1_fan c, f0 c, f1 b0 f2 * / c==> c/\ cFAN c, f0 c, f1 b0 ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 b0 cNUMERAL cBIT1 c_0 c= * part cd_fan c, f0 c, f1 b0 * part cd1_fan c, f0 c, f1 b0 f2
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), (((((f1_fan x) V) E) f3) = f1), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) ==> (((pr2 f3) = (pr3 f2)) ==> (((pr2 f2) = (pr3 f1)) ==> (((pr2 f1) = (pr3 f3)) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f6 c==> c= cf1_fan f2 f0 f1 f6 f4 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f4 cpr3 f6 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
+ |- (!w. (((FAN (x , (V , E))) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ ((((pr2 f2) INSERT (w INSERT EMPTY)) IN E) /\ (((w INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) w) = (pr2 f1)) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((((((sigma_fan x) V) E) (pr2 f1)) (pr2 f2)) = w) /\ ((((((sigma_fan x) V) E) w) (pr2 f1)) = (pr2 f2)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f4 part cEMPTY f2 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT f5 part cEMPTY f2 c/\ cIN * * part cINSERT f5 * * part cINSERT cpr2 f3 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 cpr2 f4 f5 cpr2 f3 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 f2 c/\ c= csigma_fan f0 f1 f2 cpr2 f3 cpr2 f4 f5 c= csigma_fan f0 f1 f2 f5 cpr2 f3 cpr2 f4
- |- ((\g. ((!x. ((x IN (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = (g x)))) ==> (((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) g)))) g)
T * / c==> ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_sub cazim_fan f3 f4 f5 cpr2 b1 cpr3 b1 cpi * b0 b1 c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b1 cpr3 b1 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 f6
+ |- ((\E. ((FAN (x , (V , E))) ==> (!a. ((a IN (d1_fan (x , (V , E)))) ==> (~ (((((f1_fan x) V) E) a) = a)))))) E)
T * / c==> cFAN c, f0 c, f1 b0 ! c==> cIN b1 * part cd1_fan c, f0 c, f1 b0 c~ c= cf1_fan f0 f1 b0 b1 b1 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (measurable (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((measurable (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) /\ (((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))))) ==> (((sol x) ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_div (measure (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0)))))))) ==> (((sol x) ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cmeasurable * * part cINTER * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f4 cpr3 f3 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f3 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f3 cpr2 f4 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f3 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f2 * * part cINTER * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c==> c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ cmeasurable * * part cINTER * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f2 * * part cINTER * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_div cmeasure * * part cINTER * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c= csol f2 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f2 cpr3 f3 cpr3 f4 csigma_fan f2 f0 f1 cpr3 f3 cpr3 f4 cpi creal_add creal_sub cdihV f2 cpr3 f4 cpr3 f5 csigma_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cdihV f2 cpr3 f5 cpr3 f3 csigma_fan f2 f0 f1 cpr3 f5 cpr3 f3 cpi
+ |- (((!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((y IN ds) /\ (((aff_gt (x INSERT EMPTY)) ((pr2 f1) INSERT ((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)))) = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y)))))))) ==> (((((dartset_leads_into_fan x) V) E) ds) = ((aff_gt (x INSERT EMPTY)) ((pr2 f1) INSERT ((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY))))))) ==> ((\y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((y IN ds) /\ (((aff_gt (x INSERT EMPTY)) ((pr2 f1) INSERT ((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)))) = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y)))))))) ==> (((((dartset_leads_into_fan x) V) E) ds) = ((aff_gt (x INSERT EMPTY)) ((pr2 f1) INSERT ((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY))))))) f2)) = ((\y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((y IN ds) /\ (((aff_gt (x INSERT EMPTY)) ((pr2 f1) INSERT ((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)))) = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y)))))))) ==> (((((dartset_leads_into_fan x) V) E) ds) = ((aff_gt (x INSERT EMPTY)) ((pr2 f1) INSERT ((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY))))))) f2))
T c= c==> ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ cIN b0 f3 c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY * * * * * part cdart_leads_into f0 f1 f2 cpr2 b0 cpr3 b0 c= * * * * part cdartset_leads_into_fan f0 f1 f2 f3 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ cIN b0 f3 c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY * * * * * part cdart_leads_into f0 f1 f2 cpr2 b0 cpr3 b0 c= * * * * part cdartset_leads_into_fan f0 f1 f2 f3 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f5 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ cIN b0 f3 c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY * * * * * part cdart_leads_into f0 f1 f2 cpr2 b0 cpr3 b0 c= * * * * part cdartset_leads_into_fan f0 f1 f2 f3 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f5
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))))))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f6 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ c= cf1_fan f2 f0 f1 f6 f4 c/\ cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c/\ c= cpr2 f6 cpr3 f5 c/\ c= cpr2 f5 cpr3 f4 c= cpr2 f4 cpr3 f6 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
- |- ((\f3. (!f2. (!f1. ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F)))) f3)
T * / ! ! c==> c~ c==> c/\ c~ c= b2 b0 c/\ c~ c= b0 b1 c~ c= b1 b2 c/\ ! c~ c/\ c= b3 b2 c\/ c= b3 b1 c= b3 b0 ! c~ c/\ c= b3 b1 c= b3 b0 cF f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), (((((f1_fan x) V) E) f3) = f1), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), ((f1 IN (d1_fan (x , (V , E)))) /\ ((f2 IN (d1_fan (x , (V , E)))) /\ (f3 IN (d1_fan (x , (V , E)))))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))) |- (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f6 c==> c= cf1_fan f2 f0 f1 f6 f4 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> c/\ cIN f4 * part cd1_fan c, f2 c, f0 f1 c/\ cIN f5 * part cd1_fan c, f2 c, f0 f1 cIN f6 * part cd1_fan c, f2 c, f0 f1 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
+ |- ((\V. (!E. (!ds. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0))))))) ==> (?f1. (?f2. (?f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))))))))))))))))) V)
T * / ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b3 b0 c> cCARD * * * part cset_of_edge b3 b0 b1 cNUMERAL cBIT1 c_0 c/\ cIN b2 * part cface_set chypermap1_of_fanx c, f0 c, b0 b1 c= cCARD b2 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c/\ c= b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ c= cf1_fan f0 b0 b1 b3 b4 c/\ c= cf1_fan f0 b0 b1 b4 b5 c/\ c= cf1_fan f0 b0 b1 b5 b3 c/\ cIN * * part cINSERT cpr2 b4 * * part cINSERT cpr2 b5 part cEMPTY b1 c/\ cIN * * part cINSERT cpr2 b5 * * part cINSERT cpr2 b3 part cEMPTY b1 c/\ cIN * * part cINSERT cpr2 b3 * * part cINSERT cpr2 b4 part cEMPTY b1 c/\ c= csigma_fan f0 b0 b1 cpr2 b4 cpr2 b5 cpr2 b3 c/\ c= cpr2 b5 cpr3 b4 c/\ c= cpr2 b4 cpr3 b3 c= cpr2 b3 cpr3 b5 f1
+ T |- (T /\ ((((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))) = (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))))
T c==> cT c/\ cT c= c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi
+ |- (((!E. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (y IN (d_fan (x , (V , E))))))) ==> ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))))) ==> ((\E. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (y IN (d_fan (x , (V , E))))))) ==> ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))))) E)) = ((\E. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (y IN (d_fan (x , (V , E))))))) ==> ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))))) E))
T c= c==> ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 b0 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 b0 cIN b1 * part cd_fan c, f0 c, f1 b0 c= cazim_fan f0 f1 b0 cpr2 b1 cpr3 b1 cdihV f0 cpr2 b1 cpr3 b1 csigma_fan f0 f1 b0 cpr2 b1 cpr3 b1 * / ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 b0 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 b0 cIN b1 * part cd_fan c, f0 c, f1 b0 c= cazim_fan f0 f1 b0 cpr2 b1 cpr3 b1 cdihV f0 cpr2 b1 cpr3 b1 csigma_fan f0 f1 b0 cpr2 b1 cpr3 b1 f2 * / ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 b0 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 b0 cIN b1 * part cd_fan c, f0 c, f1 b0 c= cazim_fan f0 f1 b0 cpr2 b1 cpr3 b1 cdihV f0 cpr2 b1 cpr3 b1 csigma_fan f0 f1 b0 cpr2 b1 cpr3 b1 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))) |- ((measurable (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER (ball (x , (real_of_num (NUMERAL (BIT1 _0))))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c==> cIN f5 * part cd1_fan c, f2 c, f0 f1 c==> cIN f6 * part cd1_fan c, f2 c, f0 f1 c==> cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * part cball c, f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f6 cpr3 f4 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f6 cpi
+ (!a. ((a IN (d1_fan (x , (V , E)))) ==> (~ (((((f1_fan x) V) E) a) = a)))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (f1 = f3)), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))) |- (((f2 IN (d1_fan (x , (V , E)))) ==> (~ (((((f1_fan x) V) E) f2) = f2))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c~ c= cf1_fan f0 f1 f2 b0 b0 c==> ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c==> c~ c= f3 f4 c==> cFAN c, f0 c, f1 f2 c==> cfan80 c, f0 c, f1 f2 c==> c= f5 * * part cINSERT f3 * * part cINSERT f6 * * part cINSERT f4 part cEMPTY c==> c= * part cd_fan c, f0 c, f1 f2 * part cd1_fan c, f0 c, f1 f2 c==> c= cf1_fan f0 f1 f2 f3 f6 c==> c= cf1_fan f0 f1 f2 f6 f4 c==> c= cCARD f5 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f3 cpr3 f4 c==> c= cpr2 f6 cpr3 f3 c==> c= cpr2 f4 cpr3 f6 c==> c= csigma_fan f0 f1 f2 cpr2 f6 cpr2 f4 cpr2 f3 c==> cIN f5 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f6 part cEMPTY f2 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f2 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f3 part cEMPTY f2 c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c==> cIN f6 * part cd1_fan c, f0 c, f1 f2 c==> cIN f4 * part cd1_fan c, f0 c, f1 f2 c==> c==> cIN f6 * part cd1_fan c, f0 c, f1 f2 c~ c= cf1_fan f0 f1 f2 f6 f6 c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f3 * * part cINSERT f6 * * part cINSERT f4 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f3 * * part cINSERT f6 * * part cINSERT f4 part cEMPTY / creal_sub cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cpi
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- ((((FAN (x , (V , E))) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((((((sigma_fan x) V) E) (pr2 f1)) (pr2 f2)) = (pr2 f3)) /\ ((((((sigma_fan x) V) E) (pr2 f3)) (pr2 f1)) = (pr2 f2)))) ==> (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul ((real_add ((((dihV x) (pr3 f3)) (pr3 f1)) (pr3 f2))) ((real_add ((((dihV x) (pr3 f1)) (pr3 f2)) (pr3 f3))) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (pr3 f1))) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 cpr3 f4 c==> c= cpr2 f5 cpr3 f3 c==> c= cpr2 f4 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f4 cpr2 f3 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f3 part cEMPTY f1 c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f5 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f3 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f4 cpr2 f3 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 cfan80 c, f2 c, f0 f1 c/\ c= csigma_fan f2 f0 f1 cpr2 f3 cpr2 f5 cpr2 f4 c= csigma_fan f2 f0 f1 cpr2 f4 cpr2 f3 cpr2 f5 c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_add cdihV f2 cpr3 f4 cpr3 f3 cpr3 f5 creal_add cdihV f2 cpr3 f3 cpr3 f5 cpr3 f4 creal_sub cdihV f2 cpr3 f5 cpr3 f4 cpr3 f3 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f2 cpr3 f4 cpr3 f3 csigma_fan f2 f0 f1 cpr3 f4 cpr3 f3 cpi creal_add creal_sub cdihV f2 cpr3 f3 cpr3 f5 csigma_fan f2 f0 f1 cpr3 f3 cpr3 f5 cpi creal_sub cdihV f2 cpr3 f5 cpr3 f4 csigma_fan f2 f0 f1 cpr3 f5 cpr3 f4 cpi
- |- ((!E. (!V. (!x. (!f2. (!f1. ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))))))) = T)
T c= ! ! ! ! ! c==> ! c==> c\/ c= b5 b4 c\/ c= b5 b3 c= b5 f0 cd1_fan c, b2 c, b1 b0 b5 c/\ cd1_fan c, b2 c, b1 b0 b4 c/\ cd1_fan c, b2 c, b1 b0 b3 cd1_fan c, b2 c, b1 b0 f0 cT
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- (!f2. (((\f2. (?f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3)))))))))))))) f2) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 ! c==> * / c? / c/\ c= f3 * * part cINSERT f4 * * part cINSERT b1 * * part cINSERT b1 part cEMPTY c/\ c= cf1_fan f2 f0 f1 f4 b1 c/\ c= cf1_fan f2 f0 f1 b1 b1 c/\ c= cf1_fan f2 f0 f1 b1 f4 c/\ cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr2 b1 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 b1 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 b1 cpr2 b1 cpr2 f4 c/\ c= cpr2 b1 cpr3 b1 c/\ c= cpr2 b1 cpr3 f4 c= cpr2 f4 cpr3 b1 b0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b1 cpr3 b1 cpi
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((~ (A x)) \/ (~ (B x))) /\ ((B x) /\ (A x))) |- ((~ (B x)) ==> F)
T c==> c/\ c\/ c~ * f0 f1 c~ * f2 f1 c/\ * f2 f1 * f0 f1 c==> c~ * f2 f1 cF
- |- ((~ (_3043572 = _3043574)) \/ ((~ (_3043573 = _3043575)) \/ ((_3043572 , _3043573) = (_3043574 , _3043575))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ |- (((?x. ((x = f1) /\ ((x = f2) \/ (x = f3)))) \/ (?x. ((x = f2) /\ (x = f3)))) = (?x. (((x = f1) /\ ((x = f2) \/ (x = f3))) \/ ((x = f2) /\ (x = f3)))))
T c= c\/ c? / c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c? / c/\ c= b0 f1 c= b0 f2 c? / c\/ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c/\ c= b0 f1 c= b0 f2
+ |- (((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY)) = (f2 INSERT (f3 INSERT EMPTY)))
T c= * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- ((\y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (y IN (d_fan (x , (V , E))))))) ==> ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))) f1)
T * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 cIN b0 * part cd_fan c, f0 c, f1 f2 c= cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cdihV f0 cpr2 b0 cpr3 b0 csigma_fan f0 f1 f2 cpr2 b0 cpr3 b0 f3
+ (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))) |- ((\u. ((((pr2 f2) INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) (pr2 f2)) u) (((((sigma_fan x) V) E) (pr2 f2)) u))) /\ ((real_lt ((((azim x) (pr2 f2)) u) (((((sigma_fan x) V) E) (pr2 f2)) u))) pi)))) (pr2 f3))
T c==> ! ! c==> cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 creal_lt cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 cpi * / c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT b0 part cEMPTY f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 cpr2 f3 b0 csigma_fan f1 f2 f0 cpr2 f3 b0 creal_lt cazim f1 cpr2 f3 b0 csigma_fan f1 f2 f0 cpr2 f3 b0 cpi cpr2 f4
- (!a. ((a IN (d1_fan (x , (V , E)))) ==> (~ (((((f1_fan x) V) E) a) = a)))) |- (((a IN (d1_fan (x , (V , E)))) ==> (~ (((((f1_fan x) V) E) a) = a))) = T)
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c~ c= cf1_fan f0 f1 f2 b0 b0 c= c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c~ c= cf1_fan f0 f1 f2 f3 f3 cT
+ |- (((!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((w INSERT (v INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = (((((dart_leads_into x) V) E) u) w)))))))) ==> ((\V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((w INSERT (v INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = (((((dart_leads_into x) V) E) u) w)))))))) V)) = ((\V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((w INSERT (v INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = (((((dart_leads_into x) V) E) u) w)))))))) V))
T c= c==> ! ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ cIN * * part cINSERT b4 * * part cINSERT b2 part cEMPTY b1 c/\ c= csigma_fan f0 b0 b1 b3 b4 b2 c/\ ! c==> cIN b5 b0 c> cCARD * * * part cset_of_edge b5 b0 b1 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, b0 b1 c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * * * * * part cdart_leads_into f0 b0 b1 b3 b4 * / ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ cIN * * part cINSERT b4 * * part cINSERT b2 part cEMPTY b1 c/\ c= csigma_fan f0 b0 b1 b3 b4 b2 c/\ ! c==> cIN b5 b0 c> cCARD * * * part cset_of_edge b5 b0 b1 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, b0 b1 c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * * * * * part cdart_leads_into f0 b0 b1 b3 b4 f1 * / ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ cIN * * part cINSERT b4 * * part cINSERT b2 part cEMPTY b1 c/\ c= csigma_fan f0 b0 b1 b3 b4 b2 c/\ ! c==> cIN b5 b0 c> cCARD * * * part cset_of_edge b5 b0 b1 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, b0 b1 c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * * * * * part cdart_leads_into f0 b0 b1 b3 b4 f1
+ |- ((!V. (!E. (!ds. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))))) = T)
T c= ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b3 b0 c> cCARD * * * part cset_of_edge b3 b0 b1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, b0 b1 c/\ cIN b2 * part cface_set chypermap1_of_fanx c, f0 c, b0 b1 c= cCARD b2 cNUMERAL cBIT1 cBIT1 c_0 c= csol f0 * * * * part cdartset_leads_into_fan f0 b0 b1 b2 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum b2 / creal_sub cazim_fan f0 b0 b1 cpr2 b3 cpr3 b3 cpi cT
+ (~ (coplanar (x INSERT ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))))) |- ((coplanar (x INSERT ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))) = F)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT cpr3 f1 * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 part cEMPTY c= ccoplanar * * part cINSERT f0 * * part cINSERT cpr3 f1 * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 part cEMPTY cF
+ |- (((!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((w INSERT (v INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = (((((dart_leads_into x) V) E) u) w))))))) ==> ((\E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((w INSERT (v INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = (((((dart_leads_into x) V) E) u) w))))))) E)) = ((\E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((w INSERT (v INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = (((((dart_leads_into x) V) E) u) w))))))) E))
T c= c==> ! ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c/\ cIN * * part cINSERT b3 * * part cINSERT b1 part cEMPTY b0 c/\ c= csigma_fan f0 f1 b0 b2 b3 b1 c/\ ! c==> cIN b4 f1 c> cCARD * * * part cset_of_edge b4 f1 b0 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 b0 c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * * * * part cdart_leads_into f0 f1 b0 b2 b3 * / ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c/\ cIN * * part cINSERT b3 * * part cINSERT b1 part cEMPTY b0 c/\ c= csigma_fan f0 f1 b0 b2 b3 b1 c/\ ! c==> cIN b4 f1 c> cCARD * * * part cset_of_edge b4 f1 b0 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 b0 c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * * * * part cdart_leads_into f0 f1 b0 b2 b3 f2 * / ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c/\ cIN * * part cINSERT b3 * * part cINSERT b1 part cEMPTY b0 c/\ c= csigma_fan f0 f1 b0 b2 b3 b1 c/\ ! c==> cIN b4 f1 c> cCARD * * * part cset_of_edge b4 f1 b0 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 b0 c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * * * * part cdart_leads_into f0 f1 b0 b2 b3 f2
- ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F), (((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F) ==> ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F)) |- (((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F) /\ ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F))
T c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c/\ c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF
- |- (((!x. ((x IN (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi)))) ==> (((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\x. ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi))))) = (((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\x. ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi)))))
T c= c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), ((pr2 f3) = (pr3 f2)), (f3 IN (d1_fan (x , (V , E)))) |- ((((((((azim_fan x) V) E) (pr3 f2)) (pr3 f3)) = ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) ==> ((measurable (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))))))) = ((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (f3 IN (d_fan (x , (V , E))))))) ==> ((((((azim_fan x) V) E) (pr2 f3)) (pr3 f3)) = ((((dihV x) (pr2 f3)) (pr3 f3)) (((((sigma_fan x) V) E) (pr2 f3)) (pr3 f3))))) ==> ((measurable (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cpr2 f3 cpr3 f4 c==> cIN f3 * part cd1_fan c, f2 c, f0 f1 c= c==> c= cazim_fan f2 f0 f1 cpr3 f4 cpr3 f3 cdihV f2 cpr3 f4 cpr3 f3 csigma_fan f2 f0 f1 cpr3 f4 cpr3 f3 c==> cmeasurable * * part cINTER * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 * * part cINSERT cpr3 f4 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f2 * * part cINTER * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 * * part cINSERT cpr3 f4 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 * * part cINSERT cpr3 f4 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f2 cpr3 f3 cpr3 f5 csigma_fan f2 f0 f1 cpr3 f3 cpr3 f5 cpi creal_add creal_sub cdihV f2 cpr3 f5 cpr3 f4 csigma_fan f2 f0 f1 cpr3 f5 cpr3 f4 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f3 cpi c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f2 c, f0 f1 cIN f3 * part cd_fan c, f2 c, f0 f1 c= cazim_fan f2 f0 f1 cpr2 f3 cpr3 f3 cdihV f2 cpr2 f3 cpr3 f3 csigma_fan f2 f0 f1 cpr2 f3 cpr3 f3 c==> cmeasurable * * part cINTER * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 * * part cINSERT cpr3 f4 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f2 * * part cINTER * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 * * part cINSERT cpr3 f4 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 * * part cINSERT cpr3 f4 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f2 cpr3 f3 cpr3 f5 csigma_fan f2 f0 f1 cpr3 f3 cpr3 f5 cpi creal_add creal_sub cdihV f2 cpr3 f5 cpr3 f4 csigma_fan f2 f0 f1 cpr3 f5 cpr3 f4 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f3 cpi
+ |- ((\p'. (!q'. (((((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))) = p') ==> ((p' ==> (((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = q')) ==> (((((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))) ==> ((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b2 cpr3 b2 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi b0 c==> c==> b0 c= c==> c= csum * * part cUNION * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b2 cpr3 b2 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f1 cpr3 f5 cpi csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b2 cpr3 b2 cpi c= csol f2 * * * * part cdartset_leads_into_fan f2 f3 f4 * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b2 cpr3 b2 cpi b1 c= c==> c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b2 cpr3 b2 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi c==> c= csum * * part cUNION * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b2 cpr3 b2 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f1 cpr3 f5 cpi csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b2 cpr3 b2 cpi c= csol f2 * * * * part cdartset_leads_into_fan f2 f3 f4 * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b2 cpr3 b2 cpi c==> b0 b1 f6
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), ((pr2 f1) = (pr3 f3)), (f1 IN (d1_fan (x , (V , E)))) |- ((((((((azim_fan x) V) E) (pr3 f3)) (pr3 f1)) = ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) ==> ((measurable (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))))))) = ((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (f1 IN (d_fan (x , (V , E))))))) ==> ((((((azim_fan x) V) E) (pr2 f1)) (pr3 f1)) = ((((dihV x) (pr2 f1)) (pr3 f1)) (((((sigma_fan x) V) E) (pr2 f1)) (pr3 f1))))) ==> ((measurable (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cpr2 f3 cpr3 f4 c==> cIN f3 * part cd1_fan c, f2 c, f0 f1 c= c==> c= cazim_fan f2 f0 f1 cpr3 f4 cpr3 f3 cdihV f2 cpr3 f4 cpr3 f3 csigma_fan f2 f0 f1 cpr3 f4 cpr3 f3 c==> cmeasurable * * part cINTER * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f2 * * part cINTER * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f3 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f3 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f4 cpi c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f2 c, f0 f1 cIN f3 * part cd_fan c, f2 c, f0 f1 c= cazim_fan f2 f0 f1 cpr2 f3 cpr3 f3 cdihV f2 cpr2 f3 cpr3 f3 csigma_fan f2 f0 f1 cpr2 f3 cpr3 f3 c==> cmeasurable * * part cINTER * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f2 * * part cINTER * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f3 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f3 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f4 cpi
+ |- ((\q'. ((((FINITE (f1 INSERT EMPTY)) /\ (FINITE (f2 INSERT (f3 INSERT EMPTY)))) = p') ==> ((p' ==> ((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) = q')) ==> ((((FINITE (f1 INSERT EMPTY)) /\ (FINITE (f2 INSERT (f3 INSERT EMPTY)))) ==> (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f4 f5 f6 cpr2 b1 cpr3 b1 cpi creal_add creal_sub cazim_fan f4 f5 f6 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f4 f5 f6 cpr2 b1 cpr3 b1 cpi b0 c= c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f4 f5 f6 cpr2 b1 cpr3 b1 cpi creal_add creal_sub cazim_fan f4 f5 f6 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f4 f5 f6 cpr2 b1 cpr3 b1 cpi c==> f3 b0 f7
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))) |- ((measurable (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c==> cIN f5 * part cd1_fan c, f2 c, f0 f1 c==> cIN f6 * part cd1_fan c, f2 c, f0 f1 c==> cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f2 * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f6 cpr3 f4 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f6 cpi
+ (((A x) /\ (B x)) /\ ((~ (B x)) \/ (~ (A x)))) |- (A x)
T c==> c/\ c/\ * f0 f1 * f2 f1 c\/ c~ * f2 f1 c~ * f0 f1 * f0 f1
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- ((\V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((w INSERT (v INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((((((sigma_fan x) V) E) v) u) = w) /\ ((((((sigma_fan x) V) E) w) v) = u)))))))) V)
T * / ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ cIN * * part cINSERT b4 * * part cINSERT b2 part cEMPTY b1 c/\ c= csigma_fan f0 b0 b1 b3 b4 b2 c/\ ! c==> cIN b5 b0 c> cCARD * * * part cset_of_edge b5 b0 b1 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, b0 b1 c/\ c= csigma_fan f0 b0 b1 b2 b3 b4 c= csigma_fan f0 b0 b1 b4 b2 b3 f1
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
- ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F) |- ((((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F) ==> ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F)) ==> ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F))
T c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF
+ (~ (((A x) /\ (B x)) = ((B x) /\ (A x)))) |- ((~ (((A x) /\ (B x)) = ((B x) /\ (A x)))) /\ F)
T c==> c~ c= c/\ * f0 f1 * f2 f1 c/\ * f2 f1 * f0 f1 c/\ c~ c= c/\ * f0 f1 * f2 f1 c/\ * f2 f1 * f0 f1 cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3)))))))))))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c= cf1_fan f2 f0 f1 f4 f5 c/\ c= cf1_fan f2 f0 f1 f5 f6 c/\ c= cf1_fan f2 f0 f1 f6 f4 c/\ cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c/\ c= cpr2 f6 cpr3 f5 c/\ c= cpr2 f5 cpr3 f4 c= cpr2 f4 cpr3 f6 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
- |- ((\s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))) s)
T * / c==> cFINITE b0 c= cCARD * * part cINSERT f0 b0 cCOND cIN f0 b0 cCARD b0 cSUC cCARD b0 f1
- (~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) |- F
T c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF
+ |- ((~ ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_neg (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))
T c/\ c~ c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) = (((((dart_leads_into x) V) E) (pr3 f1)) (pr3 f2))), (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) = (((((dart_leads_into x) V) E) (pr3 f1)) (pr3 f2))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))) |- ((measurable (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY * * * * * part cdart_leads_into f2 f0 f1 cpr3 f4 cpr3 f5 c==> c= * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * * * * * part cdart_leads_into f2 f0 f1 cpr3 f4 cpr3 f5 c==> c= cpr2 f4 cpr3 f3 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f3 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f3 cpr2 f4 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f3 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c==> cIN f5 * part cd1_fan c, f2 c, f0 f1 c==> cIN f3 * part cd1_fan c, f2 c, f0 f1 c==> cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f2 * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f3 cpr3 f4 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f3 cpi
+ (~ ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) |- ((~ ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c~ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (coplanar (x INSERT ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- (((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (coplanar (x INSERT ((pr2 f1) INSERT ((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY))))))) ==> ((measure ((ball (x , (real_of_num (NUMERAL (BIT1 _0))))) INTER ((aff_gt (x INSERT EMPTY)) ((pr2 f1) INSERT ((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)))))) = ((LET (\a123. (LET_END ((LET (\a231. (LET_END ((LET (\a312. (LET_END ((real_mul ((real_add a123) ((real_add a231) ((real_sub a312) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) ((((dihV x) (pr2 f3)) (pr2 f1)) (pr2 f2)))))) ((((dihV x) (pr2 f2)) (pr2 f3)) (pr2 f1)))))) ((((dihV x) (pr2 f1)) (pr2 f2)) (pr2 f3))))) ==> (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (measure (((normball x) (real_of_num (NUMERAL (BIT1 _0)))) INTER ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccoplanar * * part cINSERT f2 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f4 cpr3 f3 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f3 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f3 cpr2 f4 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f3 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> c==> c/\ creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c~ ccoplanar * * part cINSERT f2 * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f3 part cEMPTY c= cmeasure * * part cINTER * part cball c, f2 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f3 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END creal_mul creal_add b0 creal_add b1 creal_sub b2 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdihV f2 cpr2 f3 cpr2 f4 cpr2 f5 cdihV f2 cpr2 f5 cpr2 f3 cpr2 f4 cdihV f2 cpr2 f4 cpr2 f5 cpr2 f3 c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f2 cpr3 f3 cpr3 f4 csigma_fan f2 f0 f1 cpr3 f3 cpr3 f4 cpi creal_add creal_sub cdihV f2 cpr3 f4 cpr3 f5 csigma_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cdihV f2 cpr3 f5 cpr3 f3 csigma_fan f2 f0 f1 cpr3 f5 cpr3 f3 cpi
- T |- (T = T)
T c==> cT c= cT cT
- ((x = f2) /\ (x = f3)) |- ((~ (f1 = f3)) = (~ (f1 = f3)))
T c==> c/\ c= f0 f1 c= f0 f2 c= c~ c= f3 f2 c~ c= f3 f2
+ |- (!t. (((FINITE (f1 INSERT EMPTY)) /\ ((FINITE t) /\ ((DISJOINT (f1 INSERT EMPTY)) t))) ==> (((sum ((f1 INSERT EMPTY) UNION t)) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((sum (f1 INSERT EMPTY)) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))) ((sum t) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))
T c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY c/\ cFINITE f1 cDISJOINT * * part cINSERT f0 part cEMPTY f1 c= csum * * part cUNION * * part cINSERT f0 part cEMPTY f1 / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add csum * * part cINSERT f0 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi csum f1 / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi
+ (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) = (((((dart_leads_into x) V) E) (pr3 f1)) (pr3 f2))) |- ((((((dart_leads_into x) V) E) (pr3 f1)) (pr3 f2)) = ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))))
T c==> c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f1 * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 part cEMPTY * * * * * part cdart_leads_into f0 f4 f5 cpr3 f2 cpr3 f3 c= * * * * * part cdart_leads_into f0 f4 f5 cpr3 f2 cpr3 f3 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f1 * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 part cEMPTY
- (!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))), (~ F), (~ ((d1_fan (x , (V , E))) f2)) |- ((~ F) /\ F)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c==> c~ cF c==> c~ cd1_fan c, f3 c, f4 f5 f1 c/\ c~ cF cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- (!f3. (((\f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))))))))))) f3) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 ! c==> * / c/\ c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b1 part cEMPTY c/\ c= cf1_fan f2 f0 f1 f4 f5 c/\ c= cf1_fan f2 f0 f1 f5 b1 c/\ c= cf1_fan f2 f0 f1 b1 f4 c/\ cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 b1 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 b1 cpr2 f4 c/\ c= cpr2 b1 cpr3 f5 c/\ c= cpr2 f5 cpr3 f4 c= cpr2 f4 cpr3 b1 b0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b1 cpr3 b1 cpi
+ |- (((!x. (((sum (x INSERT EMPTY)) f) = (f x))) ==> ((\x. (((sum (x INSERT EMPTY)) f) = (f x))) x)) = ((\x. (((sum (x INSERT EMPTY)) f) = (f x))) x))
T c= c==> ! c= csum * * part cINSERT b0 part cEMPTY f0 * f0 b0 * / c= csum * * part cINSERT b0 part cEMPTY f0 * f0 b0 f1 * / c= csum * * part cINSERT b0 part cEMPTY f0 * f0 b0 f1
+ |- ((~ (((A x) /\ (B x)) = ((B x) /\ (A x)))) ==> F)
T c==> c~ c= c/\ * f0 f1 * f2 f1 c/\ * f2 f1 * f0 f1 cF
- (x = f3) |- ((~ (f1 = f3)) = (~ (f1 = f3)))
T c==> c= f0 f1 c= c~ c= f2 f1 c~ c= f2 f1
+ |- (((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (f3 IN (d_fan (x , (V , E))))))) ==> ((((((azim_fan x) V) E) (pr2 f3)) (pr3 f3)) = ((((dihV x) (pr2 f3)) (pr3 f3)) (((((sigma_fan x) V) E) (pr2 f3)) (pr3 f3))))) ==> ((measurable (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))))))) = ((measurable (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))))))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 cIN f3 * part cd_fan c, f0 c, f1 f2 c= cazim_fan f0 f1 f2 cpr2 f3 cpr3 f3 cdihV f0 cpr2 f3 cpr3 f3 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 c==> cmeasurable * * part cINTER * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f0 * * part cINTER * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 c= csol f0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f0 cpr3 f3 cpr3 f4 csigma_fan f0 f1 f2 cpr3 f3 cpr3 f4 cpi creal_add creal_sub cdihV f0 cpr3 f4 cpr3 f5 csigma_fan f0 f1 f2 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f0 f1 f2 cpr3 f5 cpr3 f3 cpi c==> cmeasurable * * part cINTER * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f0 * * part cINTER * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 c= csol f0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f0 cpr3 f3 cpr3 f4 csigma_fan f0 f1 f2 cpr3 f3 cpr3 f4 cpi creal_add creal_sub cdihV f0 cpr3 f4 cpr3 f5 csigma_fan f0 f1 f2 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f0 f1 f2 cpr3 f5 cpr3 f3 cpi
+ (((A x) /\ (B x)) /\ ((~ (B x)) \/ (~ (A x)))), ((~ (A x)) ==> F) |- F
T c==> c/\ c/\ * f0 f1 * f2 f1 c\/ c~ * f2 f1 c~ * f0 f1 c==> c==> c~ * f0 f1 cF cF
- (!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) |- ((~ ((d1_fan (x , (V , E))) f2)) ==> ((d1_fan (x , (V , E))) f2))
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c==> c~ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f1
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((!x. (~ (x IN EMPTY))) ==> ((\x. (~ (x IN EMPTY))) x)) = ((\x. (~ (x IN EMPTY))) x))
T c= c==> ! c~ cIN b0 part cEMPTY * / c~ cIN b0 part cEMPTY f0 * / c~ cIN b0 part cEMPTY f0
+ (~ (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul ((real_add ((((dihV x) (pr3 f3)) (pr3 f1)) (pr3 f2))) ((real_add ((((dihV x) (pr3 f1)) (pr3 f2)) (pr3 f3))) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (pr3 f1))) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (pr3 f2))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (pr3 f3))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (pr3 f1))) pi)))))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_add cdihV f0 cpr3 f1 cpr3 f2 cpr3 f3 creal_add cdihV f0 cpr3 f2 cpr3 f3 cpr3 f1 creal_sub cdihV f0 cpr3 f3 cpr3 f1 cpr3 f2 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f0 cpr3 f1 cpr3 f2 cpr3 f3 cpi creal_add creal_sub cdihV f0 cpr3 f2 cpr3 f3 cpr3 f1 cpi creal_sub cdihV f0 cpr3 f3 cpr3 f1 cpr3 f2 cpi c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (~ (A x)) |- ((A x) ==> F)
T c==> c~ * f0 f1 c==> * f0 f1 cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))))))))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ c= cf1_fan f2 f0 f1 f4 f5 c/\ c= cf1_fan f2 f0 f1 f5 f6 c/\ c= cf1_fan f2 f0 f1 f6 f4 c/\ cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c/\ c= cpr2 f6 cpr3 f5 c/\ c= cpr2 f5 cpr3 f4 c= cpr2 f4 cpr3 f6 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
+ (!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) |- (!x. (((~ (x = f1)) \/ ((d1_fan (x , (V , E))) x)) /\ (((~ (x = f2)) \/ ((d1_fan (x , (V , E))) x)) /\ ((~ (x = f3)) \/ ((d1_fan (x , (V , E))) x)))))
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 ! c/\ c\/ c~ c= b0 f0 cd1_fan c, f3 c, f4 f5 b0 c/\ c\/ c~ c= b0 f1 cd1_fan c, f3 c, f4 f5 b0 c\/ c~ c= b0 f2 cd1_fan c, f3 c, f4 f5 b0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((DISJOINT (f1 INSERT EMPTY)) (f2 INSERT (f3 INSERT EMPTY))) /\ ((DISJOINT (f2 INSERT EMPTY)) (f3 INSERT EMPTY))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))) |- (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> c/\ cDISJOINT * * part cINSERT f4 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cDISJOINT * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c==> cIN f5 * part cd1_fan c, f2 c, f0 f1 c==> cIN f6 * part cd1_fan c, f2 c, f0 f1 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
+ (!a. ((a IN (d1_fan (x , (V , E)))) ==> (~ (((((f1_fan x) V) E) a) = a)))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (f1 = f3)), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), (((((f1_fan x) V) E) f1) = f2), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))) |- ((~ (f3 = f2)) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c~ c= cf1_fan f0 f1 f2 b0 b0 c==> ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c==> c~ c= f3 f4 c==> cFAN c, f0 c, f1 f2 c==> cfan80 c, f0 c, f1 f2 c==> c= f5 * * part cINSERT f3 * * part cINSERT f6 * * part cINSERT f4 part cEMPTY c==> c= * part cd_fan c, f0 c, f1 f2 * part cd1_fan c, f0 c, f1 f2 c==> c= cf1_fan f0 f1 f2 f3 f6 c==> c= cCARD f5 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f3 cpr3 f4 c==> c= cpr2 f6 cpr3 f3 c==> c= cpr2 f4 cpr3 f6 c==> c= csigma_fan f0 f1 f2 cpr2 f6 cpr2 f4 cpr2 f3 c==> cIN f5 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f6 part cEMPTY f2 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f2 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f3 part cEMPTY f2 c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c==> cIN f6 * part cd1_fan c, f0 c, f1 f2 c==> cIN f4 * part cd1_fan c, f0 c, f1 f2 c==> c~ c= f4 f6 c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f3 * * part cINSERT f6 * * part cINSERT f4 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f3 * * part cINSERT f6 * * part cINSERT f4 part cEMPTY / creal_sub cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cpi
+ |- (((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = ((((FINITE (f1 INSERT EMPTY)) /\ (FINITE (f2 INSERT (f3 INSERT EMPTY)))) ==> (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))
T c= c==> c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= csol f3 * * * * part cdartset_leads_into_fan f3 f4 f5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c==> c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= csol f3 * * * * part cdartset_leads_into_fan f3 f4 f5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) = (((((dart_leads_into x) V) E) (pr3 f1)) (pr3 f2))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- (((((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) = (((((dart_leads_into x) V) E) (pr3 f1)) (pr3 f2))) ==> ((measurable (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))))))) = ((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((f2 IN ds) /\ (((aff_gt (x INSERT EMPTY)) ((pr2 f1) INSERT ((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)))) = (((((dart_leads_into x) V) E) (pr2 f2)) (pr3 f2)))))))) ==> (((((dartset_leads_into_fan x) V) E) ds) = ((aff_gt (x INSERT EMPTY)) ((pr2 f1) INSERT ((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)))))) ==> ((measurable (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f6 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY * * * * * part cdart_leads_into f2 f0 f1 cpr3 f4 cpr3 f5 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c= c==> c= * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * * * * part cdart_leads_into f2 f0 f1 cpr3 f4 cpr3 f5 c==> cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f2 * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f6 cpr3 f4 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f6 cpi c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f2 c, f0 f1 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c/\ cIN f5 f3 c= * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY * * * * * part cdart_leads_into f2 f0 f1 cpr2 f5 cpr3 f5 c= * * * * part cdartset_leads_into_fan f2 f0 f1 f3 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY c==> cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f2 * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f6 cpr3 f4 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f6 cpi
+ |- (((!e. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt e) (real_of_num (NUMERAL _0)))))))) ==> (measurable (((((dartset_leads_into_fan x) V) E) ds) INTER (ball (x , e)))))) ==> ((\e. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt e) (real_of_num (NUMERAL _0)))))))) ==> (measurable (((((dartset_leads_into_fan x) V) E) ds) INTER (ball (x , e)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\e. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt e) (real_of_num (NUMERAL _0)))))))) ==> (measurable (((((dartset_leads_into_fan x) V) E) ds) INTER (ball (x , e)))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= c==> ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 creal_gt b0 creal_of_num cNUMERAL c_0 cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f0 f1 f2 f3 * part cball c, f0 b0 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 creal_gt b0 creal_of_num cNUMERAL c_0 cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f0 f1 f2 f3 * part cball c, f0 b0 creal_of_num cNUMERAL cBIT1 c_0 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 creal_gt b0 creal_of_num cNUMERAL c_0 cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f0 f1 f2 f3 * part cball c, f0 b0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\ds. (((FAN (x , (V , E))) /\ (ds IN (face_set (hypermap1_of_fanx (x , (V , E)))))) ==> (ds SUBSET (d_fan (x , (V , E)))))) ds)
T * / c==> c/\ cFAN c, f0 c, f1 f2 cIN b0 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 cSUBSET b0 * part cd_fan c, f0 c, f1 f2 f3
+ (!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) |- ((_3043539 = f3) ==> ((d1_fan (x , (V , E))) _3043539))
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c==> c= f6 f2 cd1_fan c, f3 c, f4 f5 f6
+ |- (((!u. (!w. (((FAN (x , (V , E))) /\ ((((pr2 f1) INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((w INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = (pr2 f1)) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((((((sigma_fan x) V) E) (pr2 f1)) u) = w) /\ ((((((sigma_fan x) V) E) w) (pr2 f1)) = u))))) ==> ((\u. (!w. (((FAN (x , (V , E))) /\ ((((pr2 f1) INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((w INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = (pr2 f1)) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((((((sigma_fan x) V) E) (pr2 f1)) u) = w) /\ ((((((sigma_fan x) V) E) w) (pr2 f1)) = u))))) (pr2 f2))) = ((\u. (!w. (((FAN (x , (V , E))) /\ ((((pr2 f1) INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((w INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = (pr2 f1)) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((((((sigma_fan x) V) E) (pr2 f1)) u) = w) /\ ((((((sigma_fan x) V) E) w) (pr2 f1)) = u))))) (pr2 f2)))
T c= c==> ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT cpr2 f3 * * part cINSERT b0 part cEMPTY f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT cpr2 f3 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b0 b1 cpr2 f3 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 f2 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 f2 c/\ c= csigma_fan f0 f1 f2 cpr2 f3 b0 b1 c= csigma_fan f0 f1 f2 b1 cpr2 f3 b0 * / ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT cpr2 f3 * * part cINSERT b0 part cEMPTY f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT cpr2 f3 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b0 b1 cpr2 f3 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 f2 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 f2 c/\ c= csigma_fan f0 f1 f2 cpr2 f3 b0 b1 c= csigma_fan f0 f1 f2 b1 cpr2 f3 b0 cpr2 f4 * / ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT cpr2 f3 * * part cINSERT b0 part cEMPTY f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT cpr2 f3 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b0 b1 cpr2 f3 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 f2 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 f2 c/\ c= csigma_fan f0 f1 f2 cpr2 f3 b0 b1 c= csigma_fan f0 f1 f2 b1 cpr2 f3 b0 cpr2 f4
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) |- ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cIN f2 f0 c> cCARD * * * part cset_of_edge f2 f0 f1 cNUMERAL cBIT1 c_0
+ |- ((\v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((w INSERT (v INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((((((sigma_fan x) V) E) v) u) = w) /\ ((((((sigma_fan x) V) E) w) v) = u)))))) (pr2 f1))
T * / ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ cIN * * part cINSERT b2 * * part cINSERT b0 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b1 b2 b0 c/\ ! c==> cIN b3 f1 c> cCARD * * * part cset_of_edge b3 f1 f2 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 f2 c/\ c= csigma_fan f0 f1 f2 b0 b1 b2 c= csigma_fan f0 f1 f2 b2 b0 b1 cpr2 f3
- |- ((\B. ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F)) B)
T * / c==> c~ ! c= c/\ * f0 b1 * b0 b1 c/\ * b0 b1 * f0 b1 cF f1
+ |- (((!f. (!s. (!t. (((FINITE s) /\ ((FINITE t) /\ ((DISJOINT s) t))) ==> (((sum (s UNION t)) f) = ((real_add ((sum s) f)) ((sum t) f))))))) ==> ((\f. (!s. (!t. (((FINITE s) /\ ((FINITE t) /\ ((DISJOINT s) t))) ==> (((sum (s UNION t)) f) = ((real_add ((sum s) f)) ((sum t) f))))))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))) = ((\f. (!s. (!t. (((FINITE s) /\ ((FINITE t) /\ ((DISJOINT s) t))) ==> (((sum (s UNION t)) f) = ((real_add ((sum s) f)) ((sum t) f))))))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))
T c= c==> ! ! ! c==> c/\ cFINITE b1 c/\ cFINITE b2 cDISJOINT b1 b2 c= csum * * part cUNION b1 b2 b0 creal_add csum b1 b0 csum b2 b0 * / ! ! c==> c/\ cFINITE b1 c/\ cFINITE b2 cDISJOINT b1 b2 c= csum * * part cUNION b1 b2 b0 creal_add csum b1 b0 csum b2 b0 / creal_sub cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cpi * / ! ! c==> c/\ cFINITE b1 c/\ cFINITE b2 cDISJOINT b1 b2 c= csum * * part cUNION b1 b2 b0 creal_add csum b1 b0 csum b2 b0 / creal_sub cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cpi
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((LET (\a123. (LET_END ((LET (\a231. (LET_END ((LET (\a312. (LET_END ((real_mul ((real_add a123) ((real_add a231) ((real_sub a312) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) ((((dihV x) (pr3 f2)) (pr3 f3)) (pr3 f1)))))) ((((dihV x) (pr3 f1)) (pr3 f2)) (pr3 f3)))))) ((((dihV x) (pr3 f3)) (pr3 f1)) (pr3 f2)))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 cpr3 f4 c==> c= cpr2 f5 cpr3 f3 c==> c= cpr2 f4 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f4 cpr2 f3 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f3 part cEMPTY f1 c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cLET / cLET_END cLET / cLET_END cLET / cLET_END creal_mul creal_add b0 creal_add b1 creal_sub b2 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdihV f2 cpr3 f5 cpr3 f4 cpr3 f3 cdihV f2 cpr3 f3 cpr3 f5 cpr3 f4 cdihV f2 cpr3 f4 cpr3 f3 cpr3 f5 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f2 cpr3 f4 cpr3 f3 csigma_fan f2 f0 f1 cpr3 f4 cpr3 f3 cpi creal_add creal_sub cdihV f2 cpr3 f3 cpr3 f5 csigma_fan f2 f0 f1 cpr3 f3 cpr3 f5 cpi creal_sub cdihV f2 cpr3 f5 cpr3 f4 csigma_fan f2 f0 f1 cpr3 f5 cpr3 f4 cpi
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ (((((f1_fan x) V) E) f1) = f2), (f1 IN (d1_fan (x , (V , E)))) |- (((~ (f2 = f1)) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = (((f1 IN (d1_fan (x , (V , E)))) ==> (~ (((((f1_fan x) V) E) f1) = f1))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))
T c==> c= cf1_fan f0 f1 f2 f3 f4 c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c= c==> c~ c= f4 f3 c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY / creal_sub cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cpi c==> c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c~ c= cf1_fan f0 f1 f2 f3 f3 c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY / creal_sub cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cpi
+ |- ((\v1. (!v2. (!v3. ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (coplanar (x INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((measure ((ball (x , (real_of_num (NUMERAL (BIT1 _0))))) INTER ((aff_gt (x INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) = ((LET (\a123. (LET_END ((LET (\a231. (LET_END ((LET (\a312. (LET_END ((real_mul ((real_add a123) ((real_add a231) ((real_sub a312) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) ((((dihV x) v3) v1) v2))))) ((((dihV x) v2) v3) v1))))) ((((dihV x) v1) v2) v3))))))) (pr2 f1))
T * / ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= cmeasure * * part cINTER * part cball c, f0 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END creal_mul creal_add b3 creal_add b4 creal_sub b5 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdihV f0 b2 b0 b1 cdihV f0 b1 b2 b0 cdihV f0 b0 b1 b2 cpr2 f1
+ |- (((!s. (!t. (((FINITE s) /\ ((FINITE t) /\ ((DISJOINT s) t))) ==> (((sum (s UNION t)) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((sum s) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))) ((sum t) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))) ==> ((\s. (!t. (((FINITE s) /\ ((FINITE t) /\ ((DISJOINT s) t))) ==> (((sum (s UNION t)) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((sum s) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))) ((sum t) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))) (f1 INSERT EMPTY))) = ((\s. (!t. (((FINITE s) /\ ((FINITE t) /\ ((DISJOINT s) t))) ==> (((sum (s UNION t)) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((sum s) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))) ((sum t) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))) (f1 INSERT EMPTY)))
T c= c==> ! ! c==> c/\ cFINITE b0 c/\ cFINITE b1 cDISJOINT b0 b1 c= csum * * part cUNION b0 b1 / creal_sub cazim_fan f0 f1 f2 cpr2 b2 cpr3 b2 cpi creal_add csum b0 / creal_sub cazim_fan f0 f1 f2 cpr2 b2 cpr3 b2 cpi csum b1 / creal_sub cazim_fan f0 f1 f2 cpr2 b2 cpr3 b2 cpi * / ! c==> c/\ cFINITE b0 c/\ cFINITE b1 cDISJOINT b0 b1 c= csum * * part cUNION b0 b1 / creal_sub cazim_fan f0 f1 f2 cpr2 b2 cpr3 b2 cpi creal_add csum b0 / creal_sub cazim_fan f0 f1 f2 cpr2 b2 cpr3 b2 cpi csum b1 / creal_sub cazim_fan f0 f1 f2 cpr2 b2 cpr3 b2 cpi * * part cINSERT f3 part cEMPTY * / ! c==> c/\ cFINITE b0 c/\ cFINITE b1 cDISJOINT b0 b1 c= csum * * part cUNION b0 b1 / creal_sub cazim_fan f0 f1 f2 cpr2 b2 cpr3 b2 cpi creal_add csum b0 / creal_sub cazim_fan f0 f1 f2 cpr2 b2 cpr3 b2 cpi csum b1 / creal_sub cazim_fan f0 f1 f2 cpr2 b2 cpr3 b2 cpi * * part cINSERT f3 part cEMPTY
+ |- ((!x. ((x IN ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) = (x IN (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))))) = (((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY))) = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))))
T c= ! c= cIN b0 * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F), (((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F)) |- ((((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F)) /\ ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F))
T c==> c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c==> c==> c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c/\ c==> c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF
+ |- (((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))))) ==> (measurable (((((dartset_leads_into_fan x) V) E) ds) INTER (ball (x , (real_of_num (NUMERAL (BIT1 _0)))))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))))) = (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f0 f1 f2 f3 * part cball c, f0 creal_of_num cNUMERAL cBIT1 c_0 c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f0 f1 f2 cpr3 f6 cpr3 f4 cpi creal_add creal_sub cazim_fan f0 f1 f2 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f0 f1 f2 cpr3 f5 cpr3 f6 cpi c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f0 f1 f2 cpr3 f6 cpr3 f4 cpi creal_add creal_sub cazim_fan f0 f1 f2 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f0 f1 f2 cpr3 f5 cpr3 f6 cpi
+ |- (((!p'. (!q'. ((((FINITE (f1 INSERT EMPTY)) /\ (FINITE (f2 INSERT (f3 INSERT EMPTY)))) = p') ==> ((p' ==> ((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) = q')) ==> ((((FINITE (f1 INSERT EMPTY)) /\ (FINITE (f2 INSERT (f3 INSERT EMPTY)))) ==> (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((FINITE (f1 INSERT EMPTY)) /\ (FINITE (f2 INSERT (f3 INSERT EMPTY)))) = p') ==> ((p' ==> ((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) = q')) ==> ((((FINITE (f1 INSERT EMPTY)) /\ (FINITE (f2 INSERT (f3 INSERT EMPTY)))) ==> (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((FINITE (f1 INSERT EMPTY)) /\ (FINITE (f2 INSERT (f3 INSERT EMPTY)))) = p') ==> ((p' ==> ((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) = q')) ==> ((((FINITE (f1 INSERT EMPTY)) /\ (FINITE (f2 INSERT (f3 INSERT EMPTY)))) ==> (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b2 cpr3 b2 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b2 cpr3 b2 cpi b1 c= c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b2 cpr3 b2 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b2 cpr3 b2 cpi c==> b0 b1 * / ! c==> c= c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b2 cpr3 b2 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b2 cpr3 b2 cpi b1 c= c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b2 cpr3 b2 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b2 cpr3 b2 cpi c==> b0 b1 f6 * / ! c==> c= c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b2 cpr3 b2 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b2 cpr3 b2 cpi b1 c= c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b2 cpr3 b2 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b2 cpr3 b2 cpi c==> b0 b1 f6
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), (((((f1_fan x) V) E) f3) = f1), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))))))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f6 c==> c= cf1_fan f2 f0 f1 f6 f4 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ c= cf1_fan f2 f0 f1 f6 f4 c/\ cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c/\ c= cpr2 f6 cpr3 f5 c/\ c= cpr2 f5 cpr3 f4 c= cpr2 f4 cpr3 f6 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
- (~ (f2 = f1)) |- (((~ (f1 = f2)) ==> ((f1 = f2) = F)) = ((f1 = f2) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))) |- ((((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) = (((((dart_leads_into x) V) E) (pr3 f1)) (pr3 f2))) ==> ((measurable (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c==> cIN f5 * part cd1_fan c, f2 c, f0 f1 c==> cIN f6 * part cd1_fan c, f2 c, f0 f1 c==> c= * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f6 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY * * * * * part cdart_leads_into f2 f0 f1 cpr3 f4 cpr3 f5 c==> cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f2 * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f6 cpr3 f4 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f6 cpi
+ (!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) |- (!x. (((~ (x = f1)) /\ ((~ (x = f2)) /\ (~ (x = f3)))) \/ ((d1_fan (x , (V , E))) x)))
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 cd1_fan c, f3 c, f4 f5 b0
- (!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))), (~ F), (~ ((d1_fan (x , (V , E))) f3)) |- ((~ F) /\ F)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c==> c~ cF c==> c~ cd1_fan c, f3 c, f4 f5 f2 c/\ c~ cF cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- (((((((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)) = (pr3 f2)) /\ ((((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)) = (pr3 f1))) ==> (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul ((real_add ((((dihV x) (pr3 f3)) (pr3 f1)) (pr3 f2))) ((real_add ((((dihV x) (pr3 f1)) (pr3 f2)) (pr3 f3))) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (pr3 f1))) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi)))))) = ((((FAN (x , (V , E))) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((((((sigma_fan x) V) E) (pr2 f1)) (pr2 f2)) = (pr2 f3)) /\ ((((((sigma_fan x) V) E) (pr2 f3)) (pr2 f1)) = (pr2 f2)))) ==> (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul ((real_add ((((dihV x) (pr3 f3)) (pr3 f1)) (pr3 f2))) ((real_add ((((dihV x) (pr3 f1)) (pr3 f2)) (pr3 f3))) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (pr3 f1))) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi)))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 cpr3 f4 c==> c= cpr2 f5 cpr3 f3 c==> c= cpr2 f4 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f4 cpr2 f3 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f3 part cEMPTY f1 c= c==> c/\ c= csigma_fan f2 f0 f1 cpr3 f4 cpr3 f3 cpr3 f5 c= csigma_fan f2 f0 f1 cpr3 f5 cpr3 f4 cpr3 f3 c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_add cdihV f2 cpr3 f4 cpr3 f3 cpr3 f5 creal_add cdihV f2 cpr3 f3 cpr3 f5 cpr3 f4 creal_sub cdihV f2 cpr3 f5 cpr3 f4 cpr3 f3 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f2 cpr3 f4 cpr3 f3 csigma_fan f2 f0 f1 cpr3 f4 cpr3 f3 cpi creal_add creal_sub cdihV f2 cpr3 f3 cpr3 f5 csigma_fan f2 f0 f1 cpr3 f3 cpr3 f5 cpi creal_sub cdihV f2 cpr3 f5 cpr3 f4 csigma_fan f2 f0 f1 cpr3 f5 cpr3 f4 cpi c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f5 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f3 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f4 cpr2 f3 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 cfan80 c, f2 c, f0 f1 c/\ c= csigma_fan f2 f0 f1 cpr2 f3 cpr2 f5 cpr2 f4 c= csigma_fan f2 f0 f1 cpr2 f4 cpr2 f3 cpr2 f5 c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_add cdihV f2 cpr3 f4 cpr3 f3 cpr3 f5 creal_add cdihV f2 cpr3 f3 cpr3 f5 cpr3 f4 creal_sub cdihV f2 cpr3 f5 cpr3 f4 cpr3 f3 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f2 cpr3 f4 cpr3 f3 csigma_fan f2 f0 f1 cpr3 f4 cpr3 f3 cpi creal_add creal_sub cdihV f2 cpr3 f3 cpr3 f5 csigma_fan f2 f0 f1 cpr3 f3 cpr3 f5 cpi creal_sub cdihV f2 cpr3 f5 cpr3 f4 csigma_fan f2 f0 f1 cpr3 f5 cpr3 f4 cpi
+ |- ((((~ ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) ==> F) ==> ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= c==> c==> c~ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- (((\f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))))))))))) f3) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> * / c/\ c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c/\ c= cf1_fan f2 f0 f1 f4 f5 c/\ c= cf1_fan f2 f0 f1 f5 b0 c/\ c= cf1_fan f2 f0 f1 b0 f4 c/\ cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 b0 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 b0 cpr2 f4 c/\ c= cpr2 b0 cpr3 f5 c/\ c= cpr2 f5 cpr3 f4 c= cpr2 f4 cpr3 b0 f6 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
+ |- (((!V. (!E. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (y IN (d_fan (x , (V , E))))))) ==> ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))))) ==> ((\V. (!E. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (y IN (d_fan (x , (V , E))))))) ==> ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))))) V)) = ((\V. (!E. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (y IN (d_fan (x , (V , E))))))) ==> ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))))) V))
T c= c==> ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b3 b0 c> cCARD * * * part cset_of_edge b3 b0 b1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, b0 b1 cIN b2 * part cd_fan c, f0 c, b0 b1 c= cazim_fan f0 b0 b1 cpr2 b2 cpr3 b2 cdihV f0 cpr2 b2 cpr3 b2 csigma_fan f0 b0 b1 cpr2 b2 cpr3 b2 * / ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b3 b0 c> cCARD * * * part cset_of_edge b3 b0 b1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, b0 b1 cIN b2 * part cd_fan c, f0 c, b0 b1 c= cazim_fan f0 b0 b1 cpr2 b2 cpr3 b2 cdihV f0 cpr2 b2 cpr3 b2 csigma_fan f0 b0 b1 cpr2 b2 cpr3 b2 f1 * / ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b3 b0 c> cCARD * * * part cset_of_edge b3 b0 b1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, b0 b1 cIN b2 * part cd_fan c, f0 c, b0 b1 c= cazim_fan f0 b0 b1 cpr2 b2 cpr3 b2 cdihV f0 cpr2 b2 cpr3 b2 csigma_fan f0 b0 b1 cpr2 b2 cpr3 b2 f1
+ ((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) |- ((~ ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3)))))) ==> F)
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c==> c~ c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF
+ (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))) |- ((((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))) /\ (((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = ((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))))
T c==> c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi c/\ c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi c= c==> c= csum * * part cUNION * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f1 cpr3 f5 cpi csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi c= csol f2 * * * * part cdartset_leads_into_fan f2 f3 f4 * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi c==> c= csum * * part cUNION * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f1 cpr3 f5 cpi csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi c= csol f2 * * * * part cdartset_leads_into_fan f2 f3 f4 * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi
+ |- ((\V. (!E. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (y IN (d_fan (x , (V , E))))))) ==> ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))))) V)
T * / ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b3 b0 c> cCARD * * * part cset_of_edge b3 b0 b1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, b0 b1 cIN b2 * part cd_fan c, f0 c, b0 b1 c= cazim_fan f0 b0 b1 cpr2 b2 cpr3 b2 cdihV f0 cpr2 b2 cpr3 b2 csigma_fan f0 b0 b1 cpr2 b2 cpr3 b2 f1
+ (!a. ((a IN (d1_fan (x , (V , E)))) ==> (~ (((((f1_fan x) V) E) a) = a)))) |- ((((f1 IN (d1_fan (x , (V , E)))) ==> (~ (((((f1_fan x) V) E) f1) = f1))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c~ c= cf1_fan f0 f1 f2 b0 b0 c= c==> c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c~ c= cf1_fan f0 f1 f2 f3 f3 c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY / creal_sub cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cpi c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY / creal_sub cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cpi
+ (~ (f2 = f1)) |- ((f2 = f1) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
+ |- (((!x. (!V. (!E. (!ds. (!r. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt r) (real_of_num (NUMERAL _0)))))))) ==> (((radial_norm r) x) (((((dartset_leads_into_fan x) V) E) ds) INTER ((normball x) r))))))))) ==> ((\x. (!V. (!E. (!ds. (!r. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt r) (real_of_num (NUMERAL _0)))))))) ==> (((radial_norm r) x) (((((dartset_leads_into_fan x) V) E) ds) INTER ((normball x) r))))))))) x)) = ((\x. (!V. (!E. (!ds. (!r. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt r) (real_of_num (NUMERAL _0)))))))) ==> (((radial_norm r) x) (((((dartset_leads_into_fan x) V) E) ds) INTER ((normball x) r))))))))) x))
T c= c==> ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b5 b1 c> cCARD * * * part cset_of_edge b5 b1 b2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, b0 c, b1 b2 c/\ cIN b3 * part cface_set chypermap1_of_fanx c, b0 c, b1 b2 c/\ c= cCARD b3 cNUMERAL cBIT1 cBIT1 c_0 creal_gt b4 creal_of_num cNUMERAL c_0 cradial_norm b4 b0 * * part cINTER * * * * part cdartset_leads_into_fan b0 b1 b2 b3 * * part cnormball b0 b4 * / ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b5 b1 c> cCARD * * * part cset_of_edge b5 b1 b2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, b0 c, b1 b2 c/\ cIN b3 * part cface_set chypermap1_of_fanx c, b0 c, b1 b2 c/\ c= cCARD b3 cNUMERAL cBIT1 cBIT1 c_0 creal_gt b4 creal_of_num cNUMERAL c_0 cradial_norm b4 b0 * * part cINTER * * * * part cdartset_leads_into_fan b0 b1 b2 b3 * * part cnormball b0 b4 f0 * / ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b5 b1 c> cCARD * * * part cset_of_edge b5 b1 b2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, b0 c, b1 b2 c/\ cIN b3 * part cface_set chypermap1_of_fanx c, b0 c, b1 b2 c/\ c= cCARD b3 cNUMERAL cBIT1 cBIT1 c_0 creal_gt b4 creal_of_num cNUMERAL c_0 cradial_norm b4 b0 * * part cINTER * * * * part cdartset_leads_into_fan b0 b1 b2 b3 * * part cnormball b0 b4 f0
+ (fan80 (x , (V , E))) |- ((fan80 (x , (V , E))) = T)
T c==> cfan80 c, f0 c, f1 f2 c= cfan80 c, f0 c, f1 f2 cT
+ |- (((!V. (!E. (((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> ((d_fan (x , (V , E))) = (d1_fan (x , (V , E))))))) ==> ((\V. (!E. (((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> ((d_fan (x , (V , E))) = (d1_fan (x , (V , E))))))) V)) = ((\V. (!E. (((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> ((d_fan (x , (V , E))) = (d1_fan (x , (V , E))))))) V))
T c= c==> ! ! c==> c/\ cFAN c, f0 c, b0 b1 ! c==> cIN b2 b0 c> cCARD * * * part cset_of_edge b2 b0 b1 cNUMERAL cBIT1 c_0 c= * part cd_fan c, f0 c, b0 b1 * part cd1_fan c, f0 c, b0 b1 * / ! c==> c/\ cFAN c, f0 c, b0 b1 ! c==> cIN b2 b0 c> cCARD * * * part cset_of_edge b2 b0 b1 cNUMERAL cBIT1 c_0 c= * part cd_fan c, f0 c, b0 b1 * part cd1_fan c, f0 c, b0 b1 f1 * / ! c==> c/\ cFAN c, f0 c, b0 b1 ! c==> cIN b2 b0 c> cCARD * * * part cset_of_edge b2 b0 b1 cNUMERAL cBIT1 c_0 c= * part cd_fan c, f0 c, b0 b1 * part cd1_fan c, f0 c, b0 b1 f1
+ (~ ((d1_fan (x , (V , E))) f3)) |- (((d1_fan (x , (V , E))) f3) ==> F)
T c==> c~ cd1_fan c, f0 c, f1 f2 f3 c==> cd1_fan c, f0 c, f1 f2 f3 cF
- |- ((((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F) ==> ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F)) ==> (((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F) ==> ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF
+ ((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))), ((x = f2) /\ (x = f3)) |- (~ (f2 = f2))
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c==> c/\ c= f3 f2 c= f3 f1 c~ c= f2 f2
- (!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))), (~ F), (~ ((d1_fan (x , (V , E))) f1)) |- ((~ F) /\ F)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c==> c~ cF c==> c~ cd1_fan c, f3 c, f4 f5 f0 c/\ c~ cF cF
+ ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET (d1_fan (x , (V , E)))) |- (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET (d1_fan (x , (V , E)))) = T)
T c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cd1_fan c, f3 c, f4 f5 c= cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cd1_fan c, f3 c, f4 f5 cT
+ |- (((((FINITE (f1 INSERT EMPTY)) /\ ((FINITE (f2 INSERT (f3 INSERT EMPTY))) /\ ((DISJOINT (f1 INSERT EMPTY)) (f2 INSERT (f3 INSERT EMPTY))))) ==> (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((sum (f1 INSERT EMPTY)) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c= c==> c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY c/\ cFINITE * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_add csum * * part cINSERT f0 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= csol f3 * * * * part cdartset_leads_into_fan f3 f4 f5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= csol f3 * * * * part cdartset_leads_into_fan f3 f4 f5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi
+ |- (((!x. (!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))))))))))) ==> ((\x. (!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))))))))))) x)) = ((\x. (!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))))))))))) x))
T c= c==> ! ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY b2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim b0 b4 b5 b3 creal_lt cazim b0 b4 b5 b3 cpi c~ ccoplanar * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * / ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY b2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim b0 b4 b5 b3 creal_lt cazim b0 b4 b5 b3 cpi c~ ccoplanar * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f0 * / ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY b2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim b0 b4 b5 b3 creal_lt cazim b0 b4 b5 b3 cpi c~ ccoplanar * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))) |- (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c==> cIN f5 * part cd1_fan c, f2 c, f0 f1 c==> cIN f6 * part cd1_fan c, f2 c, f0 f1 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f6 cpr3 f4 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f6 cpi
+ (~ (f1 = f3)), (~ (f2 = f1)), (~ (f3 = f2)) |- (((((DISJOINT (f1 INSERT EMPTY)) (f2 INSERT (f3 INSERT EMPTY))) /\ ((DISJOINT (f2 INSERT EMPTY)) (f3 INSERT EMPTY))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = ((((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> (((DISJOINT (f1 INSERT EMPTY)) (f2 INSERT (f3 INSERT EMPTY))) /\ ((DISJOINT (f2 INSERT EMPTY)) (f3 INSERT EMPTY)))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))
T c==> c~ c= f0 f1 c==> c~ c= f2 f0 c==> c~ c= f1 f2 c= c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f1 part cEMPTY cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c= csol f3 * * * * part cdartset_leads_into_fan f3 f4 f5 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c==> c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f1 part cEMPTY cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c= csol f3 * * * * part cdartset_leads_into_fan f3 f4 f5 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi
+ |- (((((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> ((d_fan (x , (V , E))) = (d1_fan (x , (V , E))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= * part cd_fan c, f0 c, f1 f2 * part cd1_fan c, f0 c, f1 f2 c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY / creal_sub cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cpi c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY / creal_sub cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cpi
- ((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))), ((x = f2) /\ (x = f3)) |- ((~ F) ==> F)
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c==> c/\ c= f3 f2 c= f3 f1 c==> c~ cF cF
+ |- ((\x. (!V. (!E. ((FAN (x , (V , E))) ==> (!a. ((a IN (d1_fan (x , (V , E)))) ==> (~ (((((f1_fan x) V) E) a) = a)))))))) x)
T * / ! ! c==> cFAN c, b0 c, b1 b2 ! c==> cIN b3 * part cd1_fan c, b0 c, b1 b2 c~ c= cf1_fan b0 b1 b2 b3 b3 f0
- |- ((!x'. (((~ (x' = f1)) /\ ((~ (x' = f2)) /\ (~ (x' = f3)))) \/ ((d1_fan (x , (V , E))) x))) = ((!x. ((~ (x = f1)) /\ ((~ (x = f2)) /\ (~ (x = f3))))) \/ ((d1_fan (x , (V , E))) x)))
T c= ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 cd1_fan c, f3 c, f4 f5 f6 c\/ ! c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 cd1_fan c, f3 c, f4 f5 f6
- |- (((!x. ((x IN ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi)))) ==> (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\x. ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi))))) = (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\x. ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi)))))
T c= c==> ! c==> cIN b0 * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi
+ |- ((\x. (!V. (!E. (((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))))))) x)
T * / ! ! c==> c/\ cFAN c, b0 c, b1 b2 ! c==> cIN b3 b1 c> cCARD * * * part cset_of_edge b3 b1 b2 cNUMERAL cBIT1 c_0 c= * part cd_fan c, b0 c, b1 b2 * part cd1_fan c, b0 c, b1 b2 f0
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!x. ((P x) \/ Q)) = ((!x. (P x)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
- (~ (B x)), (((A x) /\ (B x)) /\ ((~ (B x)) \/ (~ (A x)))) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> c/\ c/\ * f2 f1 * f0 f1 c\/ c~ * f0 f1 c~ * f2 f1 c==> c~ cF cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), (((((f1_fan x) V) E) f3) = f1), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- ((((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> ((d_fan (x , (V , E))) = (d1_fan (x , (V , E))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f6 c==> c= cf1_fan f2 f0 f1 f6 f4 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> c==> c/\ cFAN c, f2 c, f0 f1 ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
+ (!a. ((a IN (d1_fan (x , (V , E)))) ==> (~ (((((f1_fan x) V) E) a) = a)))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), (((((f1_fan x) V) E) f3) = f1), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))) |- (((f3 IN (d1_fan (x , (V , E)))) ==> (~ (((((f1_fan x) V) E) f3) = f3))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c~ c= cf1_fan f0 f1 f2 b0 b0 c==> ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c==> cFAN c, f0 c, f1 f2 c==> cfan80 c, f0 c, f1 f2 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * part cd_fan c, f0 c, f1 f2 * part cd1_fan c, f0 c, f1 f2 c==> c= cf1_fan f0 f1 f2 f4 f5 c==> c= cf1_fan f0 f1 f2 f5 f6 c==> c= cf1_fan f0 f1 f2 f6 f4 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f0 f1 f2 cpr2 f5 cpr2 f6 cpr2 f4 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f2 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f2 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f2 c==> cIN f4 * part cd1_fan c, f0 c, f1 f2 c==> cIN f5 * part cd1_fan c, f0 c, f1 f2 c==> cIN f6 * part cd1_fan c, f0 c, f1 f2 c==> c==> cIN f6 * part cd1_fan c, f0 c, f1 f2 c~ c= cf1_fan f0 f1 f2 f6 f6 c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cpi
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0))))) |- (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
+ |- ((\r. ((ball (x , r)) = ((normball x) r))) r)
T * / c= * part cball c, f0 b0 * * part cnormball f0 b0 f1
+ (!a. ((a IN (d1_fan (x , (V , E)))) ==> (~ (((((f1_fan x) V) E) a) = a)))) |- ((((f2 IN (d1_fan (x , (V , E)))) ==> (~ (((((f1_fan x) V) E) f2) = f2))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c~ c= cf1_fan f0 f1 f2 b0 b0 c= c==> c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c~ c= cf1_fan f0 f1 f2 f3 f3 c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f4 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY / creal_sub cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cpi c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f4 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY / creal_sub cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cpi
- |- (((!x. ((x IN ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi)))) ==> (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\x. ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi))))) = (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\x. ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi)))))
T c= c==> ! c==> cIN b0 * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c= creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))), ((DISJOINT (f1 INSERT EMPTY)) (f2 INSERT (f3 INSERT EMPTY))), ((DISJOINT (f2 INSERT EMPTY)) (f3 INSERT EMPTY)) |- ((((FINITE (f1 INSERT EMPTY)) /\ ((FINITE (f2 INSERT (f3 INSERT EMPTY))) /\ ((DISJOINT (f1 INSERT EMPTY)) (f2 INSERT (f3 INSERT EMPTY))))) ==> (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((sum (f1 INSERT EMPTY)) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c==> cIN f5 * part cd1_fan c, f2 c, f0 f1 c==> cIN f6 * part cd1_fan c, f2 c, f0 f1 c==> cDISJOINT * * part cINSERT f4 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cDISJOINT * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY c==> c==> c/\ cFINITE * * part cINSERT f4 part cEMPTY c/\ cFINITE * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cDISJOINT * * part cINSERT f4 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c= csum * * part cUNION * * part cINSERT f4 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi creal_add csum * * part cINSERT f4 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi csum * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
- |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((NUMERAL (BIT1 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((!x. ((x IN (f2 INSERT (f3 INSERT EMPTY))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi)))) ==> (((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum (f2 INSERT (f3 INSERT EMPTY))) (\x. ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi))))) = (((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum (f2 INSERT (f3 INSERT EMPTY))) (\x. ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi)))))
T c= c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi c= csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi c= csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi
+ |- ((\x. (((sum (x INSERT EMPTY)) f) = (f x))) x)
T * / c= csum * * part cINSERT b0 part cEMPTY f0 * f0 b0 f1
- |- (((x IN ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi))) = T)
T c= c==> cIN f0 * * part cUNION * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= creal_sub cazim_fan f4 f5 f6 cpr2 f0 cpr3 f0 cpi creal_sub cazim_fan f4 f5 f6 cpr2 f0 cpr3 f0 cpi cT
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- (((measurable (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER (ball (x , (real_of_num (NUMERAL (BIT1 _0))))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))))) = ((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))))) ==> (measurable (((((dartset_leads_into_fan x) V) E) ds) INTER (ball (x , (real_of_num (NUMERAL (BIT1 _0)))))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c= c==> cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * part cball c, f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f6 cpr3 f4 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f6 cpi c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f2 c, f0 f1 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c/\ c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 f3 * part cball c, f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f6 cpr3 f4 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f6 cpi
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- ((fan80 (x , (V , E))) /\ (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (measure (((normball x) (real_of_num (NUMERAL (BIT1 _0)))) INTER ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 cpr3 f4 c==> c= cpr2 f5 cpr3 f3 c==> c= cpr2 f4 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f4 cpr2 f3 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f3 part cEMPTY f1 c/\ cfan80 c, f2 c, f0 f1 c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f2 cpr3 f4 cpr3 f3 csigma_fan f2 f0 f1 cpr3 f4 cpr3 f3 cpi creal_add creal_sub cdihV f2 cpr3 f3 cpr3 f5 csigma_fan f2 f0 f1 cpr3 f3 cpr3 f5 cpi creal_sub cdihV f2 cpr3 f5 cpr3 f4 csigma_fan f2 f0 f1 cpr3 f5 cpr3 f4 cpi
- |- (A IN (B INSERT (A INSERT (C INSERT EMPTY))))
T cIN f0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((x = f1) /\ ((x = f2) \/ (x = f3))), ((x = f2) ==> F), ((x = f3) ==> F) |- F
T c==> c/\ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c==> c= f0 f2 cF c==> c==> c= f0 f3 cF cF
+ |- (((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = ((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))
T c= c==> c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= csol f3 * * * * part cdartset_leads_into_fan f3 f4 f5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c==> c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= csol f3 * * * * part cdartset_leads_into_fan f3 f4 f5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi
+ |- ((\u. (!w. (((FAN (x , (V , E))) /\ ((((pr2 f1) INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((w INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = (pr2 f1)) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((aff_gt (x INSERT EMPTY)) ((pr2 f1) INSERT (u INSERT (w INSERT EMPTY)))) = (((((dart_leads_into x) V) E) u) w))))) (pr2 f2))
T * / ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT cpr2 f3 * * part cINSERT b0 part cEMPTY f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT cpr2 f3 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b0 b1 cpr2 f3 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 f2 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 f2 c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * * * * part cdart_leads_into f0 f1 f2 b0 b1 cpr2 f4
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3)))))))))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f6 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ c= cf1_fan f2 f0 f1 f5 f6 c/\ c= cf1_fan f2 f0 f1 f6 f4 c/\ cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c/\ c= cpr2 f6 cpr3 f5 c/\ c= cpr2 f5 cpr3 f4 c= cpr2 f4 cpr3 f6 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
+ |- ((((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (measure (((normball x) (real_of_num (NUMERAL (BIT1 _0)))) INTER ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi))))) = (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (measure (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi))))))
T c= c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f1 * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f0 cpr3 f1 cpr3 f2 csigma_fan f0 f4 f5 cpr3 f1 cpr3 f2 cpi creal_add creal_sub cdihV f0 cpr3 f2 cpr3 f3 csigma_fan f0 f4 f5 cpr3 f2 cpr3 f3 cpi creal_sub cdihV f0 cpr3 f3 cpr3 f1 csigma_fan f0 f4 f5 cpr3 f3 cpr3 f1 cpi c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f1 * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 part cEMPTY * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f0 cpr3 f1 cpr3 f2 csigma_fan f0 f4 f5 cpr3 f1 cpr3 f2 cpi creal_add creal_sub cdihV f0 cpr3 f2 cpr3 f3 csigma_fan f0 f4 f5 cpr3 f2 cpr3 f3 cpi creal_sub cdihV f0 cpr3 f3 cpr3 f1 csigma_fan f0 f4 f5 cpr3 f3 cpr3 f1 cpi
- |- (((!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) ==> ((\n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) n)) = ((\n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) n))
T c= c==> ! c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 * / c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 f1 * / c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), (((((f1_fan x) V) E) f3) = f1), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), ((f2 IN (d1_fan (x , (V , E)))) /\ (f3 IN (d1_fan (x , (V , E))))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))) |- (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f6 c==> c= cf1_fan f2 f0 f1 f6 f4 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> c/\ cIN f5 * part cd1_fan c, f2 c, f0 f1 cIN f6 * part cd1_fan c, f2 c, f0 f1 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
- (x IN (f2 INSERT (f3 INSERT EMPTY))) |- ((x IN (f2 INSERT (f3 INSERT EMPTY))) = T)
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ |- (((!x. (!V. (!E. (((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))))))) ==> ((\x. (!V. (!E. (((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))))))) x)) = ((\x. (!V. (!E. (((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))))))) x))
T c= c==> ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 ! c==> cIN b3 b1 c> cCARD * * * part cset_of_edge b3 b1 b2 cNUMERAL cBIT1 c_0 c= * part cd_fan c, b0 c, b1 b2 * part cd1_fan c, b0 c, b1 b2 * / ! ! c==> c/\ cFAN c, b0 c, b1 b2 ! c==> cIN b3 b1 c> cCARD * * * part cset_of_edge b3 b1 b2 cNUMERAL cBIT1 c_0 c= * part cd_fan c, b0 c, b1 b2 * part cd1_fan c, b0 c, b1 b2 f0 * / ! ! c==> c/\ cFAN c, b0 c, b1 b2 ! c==> cIN b3 b1 c> cCARD * * * part cset_of_edge b3 b1 b2 cNUMERAL cBIT1 c_0 c= * part cd_fan c, b0 c, b1 b2 * part cd1_fan c, b0 c, b1 b2 f0
+ |- (((!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((w INSERT (v INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((((((sigma_fan x) V) E) v) u) = w) /\ ((((((sigma_fan x) V) E) w) v) = u))))))) ==> ((\E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((w INSERT (v INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((((((sigma_fan x) V) E) v) u) = w) /\ ((((((sigma_fan x) V) E) w) v) = u))))))) E)) = ((\E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((w INSERT (v INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((((((sigma_fan x) V) E) v) u) = w) /\ ((((((sigma_fan x) V) E) w) v) = u))))))) E))
T c= c==> ! ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c/\ cIN * * part cINSERT b3 * * part cINSERT b1 part cEMPTY b0 c/\ c= csigma_fan f0 f1 b0 b2 b3 b1 c/\ ! c==> cIN b4 f1 c> cCARD * * * part cset_of_edge b4 f1 b0 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 b0 c/\ c= csigma_fan f0 f1 b0 b1 b2 b3 c= csigma_fan f0 f1 b0 b3 b1 b2 * / ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c/\ cIN * * part cINSERT b3 * * part cINSERT b1 part cEMPTY b0 c/\ c= csigma_fan f0 f1 b0 b2 b3 b1 c/\ ! c==> cIN b4 f1 c> cCARD * * * part cset_of_edge b4 f1 b0 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 b0 c/\ c= csigma_fan f0 f1 b0 b1 b2 b3 c= csigma_fan f0 f1 b0 b3 b1 b2 f2 * / ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c/\ cIN * * part cINSERT b3 * * part cINSERT b1 part cEMPTY b0 c/\ c= csigma_fan f0 f1 b0 b2 b3 b1 c/\ ! c==> cIN b4 f1 c> cCARD * * * part cset_of_edge b4 f1 b0 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 b0 c/\ c= csigma_fan f0 f1 b0 b1 b2 b3 c= csigma_fan f0 f1 b0 b3 b1 b2 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))) |- ((measurable (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER (ball (x , (real_of_num (NUMERAL (BIT1 _0))))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c==> cIN f5 * part cd1_fan c, f2 c, f0 f1 c==> cIN f6 * part cd1_fan c, f2 c, f0 f1 c==> cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * part cball c, f2 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f2 * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f6 cpr3 f4 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f6 cpi
- |- ((\E. (!V. (!x. (!f2. (!f1. ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F)))))) E)
T * / ! ! ! ! c==> c~ c==> ! c==> c\/ c= b5 b4 c\/ c= b5 b3 c= b5 f0 cd1_fan c, b2 c, b1 b0 b5 c/\ cd1_fan c, b2 c, b1 b0 b4 c/\ cd1_fan c, b2 c, b1 b0 b3 cd1_fan c, b2 c, b1 b0 f0 cF f1
+ |- ((\x. (!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((w INSERT (v INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = (((((dart_leads_into x) V) E) u) w))))))))) x)
T * / ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY b2 c/\ cIN * * part cINSERT b5 * * part cINSERT b3 part cEMPTY b2 c/\ c= csigma_fan b0 b1 b2 b4 b5 b3 c/\ ! c==> cIN b6 b1 c> cCARD * * * part cset_of_edge b6 b1 b2 cNUMERAL cBIT1 c_0 cfan80 c, b0 c, b1 b2 c= * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * * * * part cdart_leads_into b0 b1 b2 b4 b5 f0
- |- ((real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!E. (!ds. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))) = T)
T c= ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 b0 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 b0 c/\ cIN b1 * part cface_set chypermap1_of_fanx c, f0 c, f1 b0 c= cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 b0 b1 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum b1 / creal_sub cazim_fan f0 f1 b0 cpr2 b2 cpr3 b2 cpi cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!v0. (!v1. (!v2. (!v3. ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((measure ((ball (v0 , (real_of_num (NUMERAL (BIT1 _0))))) INTER ((aff_gt (v0 INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) = ((LET (\a123. (LET_END ((LET (\a231. (LET_END ((LET (\a312. (LET_END ((real_mul ((real_add a123) ((real_add a231) ((real_sub a312) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) ((((dihV v0) v3) v1) v2))))) ((((dihV v0) v2) v3) v1))))) ((((dihV v0) v1) v2) v3)))))))) ==> ((\v0. (!v1. (!v2. (!v3. ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((measure ((ball (v0 , (real_of_num (NUMERAL (BIT1 _0))))) INTER ((aff_gt (v0 INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) = ((LET (\a123. (LET_END ((LET (\a231. (LET_END ((LET (\a312. (LET_END ((real_mul ((real_add a123) ((real_add a231) ((real_sub a312) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) ((((dihV v0) v3) v1) v2))))) ((((dihV v0) v2) v3) v1))))) ((((dihV v0) v1) v2) v3)))))))) x)) = ((\v0. (!v1. (!v2. (!v3. ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((measure ((ball (v0 , (real_of_num (NUMERAL (BIT1 _0))))) INTER ((aff_gt (v0 INSERT EMPTY)) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) = ((LET (\a123. (LET_END ((LET (\a231. (LET_END ((LET (\a312. (LET_END ((real_mul ((real_add a123) ((real_add a231) ((real_sub a312) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) ((((dihV v0) v3) v1) v2))))) ((((dihV v0) v2) v3) v1))))) ((((dihV v0) v1) v2) v3)))))))) x))
T c= c==> ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= cmeasure * * part cINTER * part cball c, b0 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END creal_mul creal_add b4 creal_add b5 creal_sub b6 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdihV b0 b3 b1 b2 cdihV b0 b2 b3 b1 cdihV b0 b1 b2 b3 * / ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= cmeasure * * part cINTER * part cball c, b0 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END creal_mul creal_add b4 creal_add b5 creal_sub b6 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdihV b0 b3 b1 b2 cdihV b0 b2 b3 b1 cdihV b0 b1 b2 b3 f0 * / ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= cmeasure * * part cINTER * part cball c, b0 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END creal_mul creal_add b4 creal_add b5 creal_sub b6 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdihV b0 b3 b1 b2 cdihV b0 b2 b3 b1 cdihV b0 b1 b2 b3 f0
+ |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (FAN (x , (V , E))) |- (((!a. ((a IN (d1_fan (x , (V , E)))) ==> (~ (((((f1_fan x) V) E) a) = a)))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = (((FAN (x , (V , E))) ==> (!a. ((a IN (d1_fan (x , (V , E)))) ==> (~ (((((f1_fan x) V) E) a) = a))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))
T c==> cFAN c, f0 c, f1 f2 c= c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c~ c= cf1_fan f0 f1 f2 b0 b0 c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY / creal_sub cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cpi c==> c==> cFAN c, f0 c, f1 f2 ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c~ c= cf1_fan f0 f1 f2 b0 b0 c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY / creal_sub cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cpi
+ |- (((f2 = f2) ==> F) = F)
T c= c==> c= f0 f0 cF cF
+ |- (((!x. (!r. ((ball (x , r)) = ((normball x) r)))) ==> ((\x. (!r. ((ball (x , r)) = ((normball x) r)))) x)) = ((\x. (!r. ((ball (x , r)) = ((normball x) r)))) x))
T c= c==> ! ! c= * part cball c, b0 b1 * * part cnormball b0 b1 * / ! c= * part cball c, b0 b1 * * part cnormball b0 b1 f0 * / ! c= * part cball c, b0 b1 * * part cnormball b0 b1 f0
+ |- (T = ((~ ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_neg (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))))))
T c= cT c/\ c~ c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
+ (((((f1_fan x) V) E) f2) = f3), (f2 IN (d1_fan (x , (V , E)))) |- (((~ (f3 = f2)) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = (((f2 IN (d1_fan (x , (V , E)))) ==> (~ (((((f1_fan x) V) E) f2) = f2))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))
T c==> c= cf1_fan f0 f1 f2 f3 f4 c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c= c==> c~ c= f4 f3 c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY / creal_sub cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cpi c==> c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c~ c= cf1_fan f0 f1 f2 f3 f3 c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY / creal_sub cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cpi
+ |- (!u. (!w. (((FAN (x , (V , E))) /\ ((((pr2 f1) INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((w INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = (pr2 f1)) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((aff_gt (x INSERT EMPTY)) ((pr2 f1) INSERT (u INSERT (w INSERT EMPTY)))) = (((((dart_leads_into x) V) E) u) w)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT cpr2 f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ cIN * * part cINSERT f5 * * part cINSERT cpr2 f3 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f4 f5 cpr2 f3 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 f2 c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * * * * part cdart_leads_into f0 f1 f2 f4 f5
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (measurable (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER (ball (x , (real_of_num (NUMERAL (BIT1 _0))))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))), (((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) |- ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) /\ (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cball c, f2 creal_of_num cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f6 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cpr2 f3 cpr3 f5 c==> c= cpr2 f4 cpr3 f3 c==> c= cpr2 f5 cpr3 f4 c==> c= csigma_fan f2 f0 f1 cpr2 f4 cpr2 f5 cpr2 f3 c==> cIN f6 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f3 part cEMPTY f1 c==> cIN f3 * part cd1_fan c, f2 c, f0 f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c==> cIN f5 * part cd1_fan c, f2 c, f0 f1 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f2 * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f2 * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f3 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f3 cpr3 f4 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi
+ |- ((\E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))))))))) E)
T * / ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b2 b3 b1 creal_lt cazim f0 b2 b3 b1 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), (((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))) |- ((((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))) /\ ((((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= csum * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f6 cpi c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c==> cIN f5 * part cd1_fan c, f2 c, f0 f1 c==> cIN f6 * part cd1_fan c, f2 c, f0 f1 c/\ c= csum * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f6 cpi c==> c= csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f6 cpr3 f4 cpi csum * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
+ ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), ((((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)) = (pr3 f1)), ((((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)) = (pr3 f2)) |- (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul ((real_add ((((dihV x) (pr3 f3)) (pr3 f1)) (pr3 f2))) ((real_add ((((dihV x) (pr3 f1)) (pr3 f2)) (pr3 f3))) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (pr3 f1))) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi)))))
T c==> c= cpr2 f0 cpr3 f1 c==> c= cpr2 f2 cpr3 f0 c==> c= cpr2 f1 cpr3 f2 c==> c= csigma_fan f3 f4 f5 cpr2 f2 cpr2 f1 cpr2 f0 c==> c= csigma_fan f3 f4 f5 cpr3 f2 cpr3 f1 cpr3 f0 c==> c= csigma_fan f3 f4 f5 cpr3 f1 cpr3 f0 cpr3 f2 c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_add cdihV f3 cpr3 f1 cpr3 f0 cpr3 f2 creal_add cdihV f3 cpr3 f0 cpr3 f2 cpr3 f1 creal_sub cdihV f3 cpr3 f2 cpr3 f1 cpr3 f0 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f3 cpr3 f1 cpr3 f0 csigma_fan f3 f4 f5 cpr3 f1 cpr3 f0 cpi creal_add creal_sub cdihV f3 cpr3 f0 cpr3 f2 csigma_fan f3 f4 f5 cpr3 f0 cpr3 f2 cpi creal_sub cdihV f3 cpr3 f2 cpr3 f1 csigma_fan f3 f4 f5 cpr3 f2 cpr3 f1 cpi
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- (((!x. (((\f2. (?f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3)))))))))))))) x) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))) ==> ((?f2. (?f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3)))))))))))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))) = ((?f2. (?f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3)))))))))))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c= c==> ! c==> * / c? / c/\ c= f3 * * part cINSERT f4 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cf1_fan f2 f0 f1 f4 b1 c/\ c= cf1_fan f2 f0 f1 b1 b2 c/\ c= cf1_fan f2 f0 f1 b2 f4 c/\ cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr2 b2 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b2 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 b1 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 b1 cpr2 b2 cpr2 f4 c/\ c= cpr2 b2 cpr3 b1 c/\ c= cpr2 b1 cpr3 f4 c= cpr2 f4 cpr3 b2 b0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b1 cpr3 b1 cpi c==> c? / c? / c/\ c= f3 * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c= cf1_fan f2 f0 f1 f4 b0 c/\ c= cf1_fan f2 f0 f1 b0 b1 c/\ c= cf1_fan f2 f0 f1 b1 f4 c/\ cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr2 b1 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 b0 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 b0 cpr2 b1 cpr2 f4 c/\ c= cpr2 b1 cpr3 b0 c/\ c= cpr2 b0 cpr3 f4 c= cpr2 f4 cpr3 b1 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi c==> c? / c? / c/\ c= f3 * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c= cf1_fan f2 f0 f1 f4 b0 c/\ c= cf1_fan f2 f0 f1 b0 b1 c/\ c= cf1_fan f2 f0 f1 b1 f4 c/\ cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr2 b1 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 b0 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 b0 cpr2 b1 cpr2 f4 c/\ c= cpr2 b1 cpr3 b0 c/\ c= cpr2 b0 cpr3 f4 c= cpr2 f4 cpr3 b1 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
- |- ((\A. (!B. ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F))) A)
T * / ! c==> c~ ! c= c/\ * b0 b2 * b1 b2 c/\ * b1 b2 * b0 b2 cF f0
- |- (((~ (x IN EMPTY)) ==> ((x IN EMPTY) = F)) = ((x IN EMPTY) = F))
T c= c==> c~ cIN f0 part cEMPTY c= cIN f0 part cEMPTY cF c= cIN f0 part cEMPTY cF
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((measure (((normball x) (real_of_num (NUMERAL (BIT1 _0)))) INTER ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))))) = ((LET (\a123. (LET_END ((LET (\a231. (LET_END ((LET (\a312. (LET_END ((real_mul ((real_add a123) ((real_add a231) ((real_sub a312) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) ((((dihV x) (pr3 f2)) (pr3 f3)) (pr3 f1)))))) ((((dihV x) (pr3 f1)) (pr3 f2)) (pr3 f3)))))) ((((dihV x) (pr3 f3)) (pr3 f1)) (pr3 f2)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (measure (((normball x) (real_of_num (NUMERAL (BIT1 _0)))) INTER ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cmeasure * * part cINTER * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END creal_mul creal_add b0 creal_add b1 creal_sub b2 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdihV f2 cpr3 f5 cpr3 f3 cpr3 f4 cdihV f2 cpr3 f4 cpr3 f5 cpr3 f3 cdihV f2 cpr3 f3 cpr3 f4 cpr3 f5 c==> c= cpr2 f4 cpr3 f3 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f3 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f3 cpr2 f4 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f3 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f4 part cEMPTY f1 c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f2 cpr3 f3 cpr3 f4 csigma_fan f2 f0 f1 cpr3 f3 cpr3 f4 cpi creal_add creal_sub cdihV f2 cpr3 f4 cpr3 f5 csigma_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cdihV f2 cpr3 f5 cpr3 f3 csigma_fan f2 f0 f1 cpr3 f5 cpr3 f3 cpi
+ |- (((!E. (!ds. (((FAN (x , (V , E))) /\ (ds IN (face_set (hypermap1_of_fanx (x , (V , E)))))) ==> (ds SUBSET (d_fan (x , (V , E))))))) ==> ((\E. (!ds. (((FAN (x , (V , E))) /\ (ds IN (face_set (hypermap1_of_fanx (x , (V , E)))))) ==> (ds SUBSET (d_fan (x , (V , E))))))) E)) = ((\E. (!ds. (((FAN (x , (V , E))) /\ (ds IN (face_set (hypermap1_of_fanx (x , (V , E)))))) ==> (ds SUBSET (d_fan (x , (V , E))))))) E))
T c= c==> ! ! c==> c/\ cFAN c, f0 c, f1 b0 cIN b1 * part cface_set chypermap1_of_fanx c, f0 c, f1 b0 cSUBSET b1 * part cd_fan c, f0 c, f1 b0 * / ! c==> c/\ cFAN c, f0 c, f1 b0 cIN b1 * part cface_set chypermap1_of_fanx c, f0 c, f1 b0 cSUBSET b1 * part cd_fan c, f0 c, f1 b0 f2 * / ! c==> c/\ cFAN c, f0 c, f1 b0 cIN b1 * part cface_set chypermap1_of_fanx c, f0 c, f1 b0 cSUBSET b1 * part cd_fan c, f0 c, f1 b0 f2
+ |- ((\p'. (!q'. (((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) = p') ==> ((p' ==> ((((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) = q')) ==> (((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = (p' ==> q')))))) p')
T * / ! c==> c= c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b2 cpr3 b2 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b2 cpr3 b2 cpi b0 c==> c==> b0 c= c= csol f3 * * * * part cdartset_leads_into_fan f3 f4 f5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b2 cpr3 b2 cpi b1 c= c==> c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b2 cpr3 b2 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b2 cpr3 b2 cpi c= csol f3 * * * * part cdartset_leads_into_fan f3 f4 f5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b2 cpr3 b2 cpi c==> b0 b1 f6
+ |- (((!x. (!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((w INSERT (v INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((((((sigma_fan x) V) E) v) u) = w) /\ ((((((sigma_fan x) V) E) w) v) = u))))))))) ==> ((\x. (!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((w INSERT (v INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((((((sigma_fan x) V) E) v) u) = w) /\ ((((((sigma_fan x) V) E) w) v) = u))))))))) x)) = ((\x. (!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((w INSERT (v INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((((((sigma_fan x) V) E) v) u) = w) /\ ((((((sigma_fan x) V) E) w) v) = u))))))))) x))
T c= c==> ! ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY b2 c/\ cIN * * part cINSERT b5 * * part cINSERT b3 part cEMPTY b2 c/\ c= csigma_fan b0 b1 b2 b4 b5 b3 c/\ ! c==> cIN b6 b1 c> cCARD * * * part cset_of_edge b6 b1 b2 cNUMERAL cBIT1 c_0 cfan80 c, b0 c, b1 b2 c/\ c= csigma_fan b0 b1 b2 b3 b4 b5 c= csigma_fan b0 b1 b2 b5 b3 b4 * / ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY b2 c/\ cIN * * part cINSERT b5 * * part cINSERT b3 part cEMPTY b2 c/\ c= csigma_fan b0 b1 b2 b4 b5 b3 c/\ ! c==> cIN b6 b1 c> cCARD * * * part cset_of_edge b6 b1 b2 cNUMERAL cBIT1 c_0 cfan80 c, b0 c, b1 b2 c/\ c= csigma_fan b0 b1 b2 b3 b4 b5 c= csigma_fan b0 b1 b2 b5 b3 b4 f0 * / ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY b2 c/\ cIN * * part cINSERT b5 * * part cINSERT b3 part cEMPTY b2 c/\ c= csigma_fan b0 b1 b2 b4 b5 b3 c/\ ! c==> cIN b6 b1 c> cCARD * * * part cset_of_edge b6 b1 b2 cNUMERAL cBIT1 c_0 cfan80 c, b0 c, b1 b2 c/\ c= csigma_fan b0 b1 b2 b3 b4 b5 c= csigma_fan b0 b1 b2 b5 b3 b4 f0
- |- ((\f1. ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F)) f1)
T * / c==> c~ c==> c/\ c~ c= b0 f0 c/\ c~ c= f0 f1 c~ c= f1 b0 c/\ ! c~ c/\ c= b1 b0 c\/ c= b1 f1 c= b1 f0 ! c~ c/\ c= b1 f1 c= b1 f0 cF f2
- |- (T = (((~ (_3043539 = f3)) \/ ((d1_fan (x , (V , E))) _3043539)) = (((d1_fan (x , (V , E))) _3043539) \/ (~ (_3043539 = f3)))))
T c= cT c= c\/ c~ c= f0 f1 cd1_fan c, f2 c, f3 f4 f0 c\/ cd1_fan c, f2 c, f3 f4 f0 c~ c= f0 f1
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((\g. ((!x. ((x IN ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = (g x)))) ==> (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) g)))) g)
T * / c==> ! c==> cIN b1 * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c= creal_sub cazim_fan f2 f3 f4 cpr2 b1 cpr3 b1 cpi * b0 b1 c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b1 cpr3 b1 cpi csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 f5
- |- ((\x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) x)
T * / ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 f0
- |- ((!x. (((A x) /\ (B x)) = ((B x) /\ (A x)))) = T)
T c= ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cT
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), (((((f1_fan x) V) E) f3) = f1), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) ==> (((pr2 f2) = (pr3 f1)) ==> (((pr2 f1) = (pr3 f3)) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f6 c==> c= cf1_fan f2 f0 f1 f6 f4 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f4 cpr3 f6 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
- |- (((!E. (!V. (!x. (!f2. (!f1. ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F)))))) ==> ((\E. (!V. (!x. (!f2. (!f1. ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F)))))) E)) = ((\E. (!V. (!x. (!f2. (!f1. ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F)))))) E))
T c= c==> ! ! ! ! ! c==> c~ c==> ! c==> c\/ c= b5 b4 c\/ c= b5 b3 c= b5 f0 cd1_fan c, b2 c, b1 b0 b5 c/\ cd1_fan c, b2 c, b1 b0 b4 c/\ cd1_fan c, b2 c, b1 b0 b3 cd1_fan c, b2 c, b1 b0 f0 cF * / ! ! ! ! c==> c~ c==> ! c==> c\/ c= b5 b4 c\/ c= b5 b3 c= b5 f0 cd1_fan c, b2 c, b1 b0 b5 c/\ cd1_fan c, b2 c, b1 b0 b4 c/\ cd1_fan c, b2 c, b1 b0 b3 cd1_fan c, b2 c, b1 b0 f0 cF f1 * / ! ! ! ! c==> c~ c==> ! c==> c\/ c= b5 b4 c\/ c= b5 b3 c= b5 f0 cd1_fan c, b2 c, b1 b0 b5 c/\ cd1_fan c, b2 c, b1 b0 b4 c/\ cd1_fan c, b2 c, b1 b0 b3 cd1_fan c, b2 c, b1 b0 f0 cF f1
+ |- (((!f. (!x. (((sum (x INSERT EMPTY)) f) = (f x)))) ==> ((\f. (!x. (((sum (x INSERT EMPTY)) f) = (f x)))) f)) = ((\f. (!x. (((sum (x INSERT EMPTY)) f) = (f x)))) f))
T c= c==> ! ! c= csum * * part cINSERT b1 part cEMPTY b0 * b0 b1 * / ! c= csum * * part cINSERT b1 part cEMPTY b0 * b0 b1 f0 * / ! c= csum * * part cINSERT b1 part cEMPTY b0 * b0 b1 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) (pr3 f1)) (pr3 f2)) (pr3 f3))), ((real_lt ((((azim x) (pr3 f1)) (pr3 f2)) (pr3 f3))) pi), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- ((((FAN (x , (V , E))) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) (pr2 f2)) (pr2 f3)) (pr2 f1))) /\ ((real_lt ((((azim x) (pr2 f2)) (pr2 f3)) (pr2 f1))) pi))))) ==> (~ (coplanar (x INSERT ((pr2 f1) INSERT ((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY))))))) ==> (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (measure (((normball x) (real_of_num (NUMERAL (BIT1 _0)))) INTER ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 cpr3 f4 c==> c= cpr2 f5 cpr3 f3 c==> c= cpr2 f4 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f4 cpr2 f3 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f2 cpr3 f3 cpr3 f5 cpr3 f4 c==> creal_lt cazim f2 cpr3 f3 cpr3 f5 cpr3 f4 cpi c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f3 part cEMPTY f1 c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f5 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f2 cpr2 f5 cpr2 f4 cpr2 f3 creal_lt cazim f2 cpr2 f5 cpr2 f4 cpr2 f3 cpi c~ ccoplanar * * part cINSERT f2 * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f4 part cEMPTY c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f2 cpr3 f4 cpr3 f3 csigma_fan f2 f0 f1 cpr3 f4 cpr3 f3 cpi creal_add creal_sub cdihV f2 cpr3 f3 cpr3 f5 csigma_fan f2 f0 f1 cpr3 f3 cpr3 f5 cpi creal_sub cdihV f2 cpr3 f5 cpr3 f4 csigma_fan f2 f0 f1 cpr3 f5 cpr3 f4 cpi
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) = (((((dart_leads_into x) V) E) (pr3 f1)) (pr3 f2))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))) |- ((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((f2 IN ds) /\ (((aff_gt (x INSERT EMPTY)) ((pr2 f1) INSERT ((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)))) = (((((dart_leads_into x) V) E) (pr2 f2)) (pr3 f2)))))))) ==> (((((dartset_leads_into_fan x) V) E) ds) = ((aff_gt (x INSERT EMPTY)) ((pr2 f1) INSERT ((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)))))) ==> ((measurable (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f6 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY * * * * * part cdart_leads_into f2 f0 f1 cpr3 f4 cpr3 f5 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c==> cIN f5 * part cd1_fan c, f2 c, f0 f1 c==> cIN f6 * part cd1_fan c, f2 c, f0 f1 c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f2 c, f0 f1 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c/\ cIN f5 f3 c= * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY * * * * * part cdart_leads_into f2 f0 f1 cpr2 f5 cpr3 f5 c= * * * * part cdartset_leads_into_fan f2 f0 f1 f3 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY c==> cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f2 * * part cINTER * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f6 cpr3 f4 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f6 cpi
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))))) |- (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c/\ cfan80 c, f2 c, f0 f1 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
+ |- (((!t. (((FINITE (f2 INSERT EMPTY)) /\ ((FINITE t) /\ ((DISJOINT (f2 INSERT EMPTY)) t))) ==> (((sum ((f2 INSERT EMPTY) UNION t)) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((sum (f2 INSERT EMPTY)) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))) ((sum t) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))) ==> ((\t. (((FINITE (f2 INSERT EMPTY)) /\ ((FINITE t) /\ ((DISJOINT (f2 INSERT EMPTY)) t))) ==> (((sum ((f2 INSERT EMPTY) UNION t)) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((sum (f2 INSERT EMPTY)) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))) ((sum t) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))) (f3 INSERT EMPTY))) = ((\t. (((FINITE (f2 INSERT EMPTY)) /\ ((FINITE t) /\ ((DISJOINT (f2 INSERT EMPTY)) t))) ==> (((sum ((f2 INSERT EMPTY) UNION t)) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((sum (f2 INSERT EMPTY)) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))) ((sum t) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))) (f3 INSERT EMPTY)))
T c= c==> ! c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY c/\ cFINITE b0 cDISJOINT * * part cINSERT f0 part cEMPTY b0 c= csum * * part cUNION * * part cINSERT f0 part cEMPTY b0 / creal_sub cazim_fan f1 f2 f3 cpr2 b1 cpr3 b1 cpi creal_add csum * * part cINSERT f0 part cEMPTY / creal_sub cazim_fan f1 f2 f3 cpr2 b1 cpr3 b1 cpi csum b0 / creal_sub cazim_fan f1 f2 f3 cpr2 b1 cpr3 b1 cpi * / c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY c/\ cFINITE b0 cDISJOINT * * part cINSERT f0 part cEMPTY b0 c= csum * * part cUNION * * part cINSERT f0 part cEMPTY b0 / creal_sub cazim_fan f1 f2 f3 cpr2 b1 cpr3 b1 cpi creal_add csum * * part cINSERT f0 part cEMPTY / creal_sub cazim_fan f1 f2 f3 cpr2 b1 cpr3 b1 cpi csum b0 / creal_sub cazim_fan f1 f2 f3 cpr2 b1 cpr3 b1 cpi * * part cINSERT f4 part cEMPTY * / c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY c/\ cFINITE b0 cDISJOINT * * part cINSERT f0 part cEMPTY b0 c= csum * * part cUNION * * part cINSERT f0 part cEMPTY b0 / creal_sub cazim_fan f1 f2 f3 cpr2 b1 cpr3 b1 cpi creal_add csum * * part cINSERT f0 part cEMPTY / creal_sub cazim_fan f1 f2 f3 cpr2 b1 cpr3 b1 cpi csum b0 / creal_sub cazim_fan f1 f2 f3 cpr2 b1 cpr3 b1 cpi * * part cINSERT f4 part cEMPTY
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), (((((f1_fan x) V) E) f3) = f1), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- (((pr2 f3) = (pr3 f2)) ==> (((pr2 f2) = (pr3 f1)) ==> (((pr2 f1) = (pr3 f3)) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f6 c==> c= cf1_fan f2 f0 f1 f6 f4 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> c= cpr2 f6 cpr3 f5 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f4 cpr3 f6 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
+ |- ((\v3. ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (coplanar (x INSERT ((pr2 f1) INSERT ((pr2 f2) INSERT (v3 INSERT EMPTY))))))) ==> ((measure ((ball (x , (real_of_num (NUMERAL (BIT1 _0))))) INTER ((aff_gt (x INSERT EMPTY)) ((pr2 f1) INSERT ((pr2 f2) INSERT (v3 INSERT EMPTY)))))) = ((LET (\a123. (LET_END ((LET (\a231. (LET_END ((LET (\a312. (LET_END ((real_mul ((real_add a123) ((real_add a231) ((real_sub a312) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) ((((dihV x) v3) (pr2 f1)) (pr2 f2)))))) ((((dihV x) (pr2 f2)) v3) (pr2 f1)))))) ((((dihV x) (pr2 f1)) (pr2 f2)) v3))))) (pr2 f3))
T * / c==> c/\ creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c~ ccoplanar * * part cINSERT f0 * * part cINSERT cpr2 f1 * * part cINSERT cpr2 f2 * * part cINSERT b0 part cEMPTY c= cmeasure * * part cINTER * part cball c, f0 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f1 * * part cINSERT cpr2 f2 * * part cINSERT b0 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END creal_mul creal_add b1 creal_add b2 creal_sub b3 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdihV f0 b0 cpr2 f1 cpr2 f2 cdihV f0 cpr2 f2 b0 cpr2 f1 cdihV f0 cpr2 f1 cpr2 f2 b0 cpr2 f3
+ |- (((!ds. (!r. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt r) (real_of_num (NUMERAL _0)))))))) ==> (((radial_norm r) x) (((((dartset_leads_into_fan x) V) E) ds) INTER ((normball x) r)))))) ==> ((\ds. (!r. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt r) (real_of_num (NUMERAL _0)))))))) ==> (((radial_norm r) x) (((((dartset_leads_into_fan x) V) E) ds) INTER ((normball x) r)))))) ds)) = ((\ds. (!r. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((real_gt r) (real_of_num (NUMERAL _0)))))))) ==> (((radial_norm r) x) (((((dartset_leads_into_fan x) V) E) ds) INTER ((normball x) r)))))) ds))
T c= c==> ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN b0 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c= cCARD b0 cNUMERAL cBIT1 cBIT1 c_0 creal_gt b1 creal_of_num cNUMERAL c_0 cradial_norm b1 f0 * * part cINTER * * * * part cdartset_leads_into_fan f0 f1 f2 b0 * * part cnormball f0 b1 * / ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN b0 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c= cCARD b0 cNUMERAL cBIT1 cBIT1 c_0 creal_gt b1 creal_of_num cNUMERAL c_0 cradial_norm b1 f0 * * part cINTER * * * * part cdartset_leads_into_fan f0 f1 f2 b0 * * part cnormball f0 b1 f3 * / ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN b0 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c= cCARD b0 cNUMERAL cBIT1 cBIT1 c_0 creal_gt b1 creal_of_num cNUMERAL c_0 cradial_norm b1 f0 * * part cINTER * * * * part cdartset_leads_into_fan f0 f1 f2 b0 * * part cnormball f0 b1 f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- (((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) (pr2 f2)) (pr2 f3)) (((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)))) /\ ((real_lt ((((azim x) (pr2 f2)) (pr2 f3)) (((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)))) pi))) ==> (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (measure (((normball x) (real_of_num (NUMERAL (BIT1 _0)))) INTER ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 cpr3 f4 c==> c= cpr2 f5 cpr3 f3 c==> c= cpr2 f4 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f4 cpr2 f3 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f3 part cEMPTY f1 c==> c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f2 cpr2 f5 cpr2 f4 csigma_fan f2 f0 f1 cpr2 f5 cpr2 f4 creal_lt cazim f2 cpr2 f5 cpr2 f4 csigma_fan f2 f0 f1 cpr2 f5 cpr2 f4 cpi c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f2 cpr3 f4 cpr3 f3 csigma_fan f2 f0 f1 cpr3 f4 cpr3 f3 cpi creal_add creal_sub cdihV f2 cpr3 f3 cpr3 f5 csigma_fan f2 f0 f1 cpr3 f3 cpr3 f5 cpi creal_sub cdihV f2 cpr3 f5 cpr3 f4 csigma_fan f2 f0 f1 cpr3 f5 cpr3 f4 cpi
+ |- ((\V. (!E. (!ds. (((FAN (x , (V , E))) /\ (ds IN (face_set (hypermap1_of_fanx (x , (V , E)))))) ==> (ds SUBSET (d_fan (x , (V , E)))))))) V)
T * / ! ! c==> c/\ cFAN c, f0 c, b0 b1 cIN b2 * part cface_set chypermap1_of_fanx c, f0 c, b0 b1 cSUBSET b2 * part cd_fan c, f0 c, b0 b1 f1
+ (~ (A x)), (((A x) /\ (B x)) /\ ((~ (B x)) \/ (~ (A x)))) |- F
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f1 * f2 f1 c\/ c~ * f2 f1 c~ * f0 f1 cF
+ |- (((((FAN (x , (V , E))) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E))))))))) ==> (((aff_gt (x INSERT EMPTY)) ((pr2 f1) INSERT ((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)))) = (((((dart_leads_into x) V) E) (pr2 f2)) (pr2 f3)))) ==> ((measurable (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))))))) = ((measurable (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))))))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f4 part cEMPTY f2 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f2 c/\ cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f3 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 cpr2 f4 cpr2 f5 cpr2 f3 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 f2 c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY * * * * * part cdart_leads_into f0 f1 f2 cpr2 f4 cpr2 f5 c==> cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f0 * * part cINTER * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f0 f1 f2 cpr3 f5 cpr3 f3 cpi creal_add creal_sub cazim_fan f0 f1 f2 cpr3 f3 cpr3 f4 cpi creal_sub cazim_fan f0 f1 f2 cpr3 f4 cpr3 f5 cpi c==> cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f0 * * part cINTER * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cazim_fan f0 f1 f2 cpr3 f5 cpr3 f3 cpi creal_add creal_sub cazim_fan f0 f1 f2 cpr3 f3 cpr3 f4 cpi creal_sub cazim_fan f0 f1 f2 cpr3 f4 cpr3 f5 cpi
+ |- (((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> ((((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) = q')) ==> (((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = ((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> q')))
T c==> c==> c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= c= csol f3 * * * * part cdartset_leads_into_fan f3 f4 f5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi f6 c= c==> c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= csol f3 * * * * part cdartset_leads_into_fan f3 f4 f5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c==> c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi f6
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), (((((f1_fan x) V) E) f3) = f1), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) |- (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f6 c==> c= cf1_fan f2 f0 f1 f6 f4 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c/\ c= cpr2 f6 cpr3 f5 c/\ c= cpr2 f5 cpr3 f4 c= cpr2 f4 cpr3 f6 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
- |- ((\f1. ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F)) f1)
T * / c==> c~ c==> ! c==> c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 cd1_fan c, f2 c, f3 f4 b1 c/\ cd1_fan c, f2 c, f3 f4 b0 c/\ cd1_fan c, f2 c, f3 f4 f0 cd1_fan c, f2 c, f3 f4 f1 cF f5
+ (!a. ((a IN (d1_fan (x , (V , E)))) ==> (~ (((((f1_fan x) V) E) a) = a)))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (f1 = f3)), (~ (f3 = f2)), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), (((((f1_fan x) V) E) f1) = f2), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))) |- (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c~ c= cf1_fan f0 f1 f2 b0 b0 c==> ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c==> c~ c= f3 f4 c==> c~ c= f4 f5 c==> cFAN c, f0 c, f1 f2 c==> cfan80 c, f0 c, f1 f2 c==> c= f6 * * part cINSERT f3 * * part cINSERT f5 * * part cINSERT f4 part cEMPTY c==> c= * part cd_fan c, f0 c, f1 f2 * part cd1_fan c, f0 c, f1 f2 c==> c= cf1_fan f0 f1 f2 f3 f5 c==> c= cCARD f6 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f3 cpr3 f4 c==> c= cpr2 f5 cpr3 f3 c==> c= cpr2 f4 cpr3 f5 c==> c= csigma_fan f0 f1 f2 cpr2 f5 cpr2 f4 cpr2 f3 c==> cIN f6 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f5 part cEMPTY f2 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f4 part cEMPTY f2 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f3 part cEMPTY f2 c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c==> cIN f5 * part cd1_fan c, f0 c, f1 f2 c==> cIN f4 * part cd1_fan c, f0 c, f1 f2 c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f3 * * part cINSERT f5 * * part cINSERT f4 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f3 * * part cINSERT f5 * * part cINSERT f4 part cEMPTY / creal_sub cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cpi
+ (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))) |- (!u. ((((pr2 f2) INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) (pr2 f2)) u) (((((sigma_fan x) V) E) (pr2 f2)) u))) /\ ((real_lt ((((azim x) (pr2 f2)) u) (((((sigma_fan x) V) E) (pr2 f2)) u))) pi))))
T c==> ! ! c==> cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 creal_lt cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 cpi ! c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT b0 part cEMPTY f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 cpr2 f3 b0 csigma_fan f1 f2 f0 cpr2 f3 b0 creal_lt cazim f1 cpr2 f3 b0 csigma_fan f1 f2 f0 cpr2 f3 b0 cpi
+ (!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) |- ((\x. (((~ (x = f1)) \/ ((d1_fan (x , (V , E))) x)) /\ (((~ (x = f2)) \/ ((d1_fan (x , (V , E))) x)) /\ ((~ (x = f3)) \/ ((d1_fan (x , (V , E))) x))))) _3043539)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 * / c/\ c\/ c~ c= b0 f0 cd1_fan c, f3 c, f4 f5 b0 c/\ c\/ c~ c= b0 f1 cd1_fan c, f3 c, f4 f5 b0 c\/ c~ c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 f6
+ (x = f3), ((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))), ((x = f1) /\ ((x = f2) \/ (x = f3))) |- F
T c==> c= f0 f1 c==> c/\ c~ c= f2 f1 c/\ c~ c= f1 f3 c~ c= f3 f2 c==> c/\ c= f0 f2 c\/ c= f0 f3 c= f0 f1 cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((\f1. (?f2. (?f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))))))))))))) f1) |- (((\f1. (?f2. (?f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))))))))))))) f1) /\ (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> * / c? / c? / c/\ c= f3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cf1_fan f2 f0 f1 b0 b1 c/\ c= cf1_fan f2 f0 f1 b1 b2 c/\ c= cf1_fan f2 f0 f1 b2 b0 c/\ cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr2 b2 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b2 * * part cINSERT cpr2 b0 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr2 b1 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 b1 cpr2 b2 cpr2 b0 c/\ c= cpr2 b2 cpr3 b1 c/\ c= cpr2 b1 cpr3 b0 c= cpr2 b0 cpr3 b2 f4 c/\ * / c? / c? / c/\ c= f3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cf1_fan f2 f0 f1 b0 b1 c/\ c= cf1_fan f2 f0 f1 b1 b2 c/\ c= cf1_fan f2 f0 f1 b2 b0 c/\ cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr2 b2 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b2 * * part cINSERT cpr2 b0 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr2 b1 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 b1 cpr2 b2 cpr2 b0 c/\ c= cpr2 b2 cpr3 b1 c/\ c= cpr2 b1 cpr3 b0 c= cpr2 b0 cpr3 b2 f4 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
+ ((measure (((normball x) (real_of_num (NUMERAL (BIT1 _0)))) INTER ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))))) = ((LET (\a123. (LET_END ((LET (\a231. (LET_END ((LET (\a312. (LET_END ((real_mul ((real_add a123) ((real_add a231) ((real_sub a312) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) ((((dihV x) (pr3 f2)) (pr3 f3)) (pr3 f1)))))) ((((dihV x) (pr3 f1)) (pr3 f2)) (pr3 f3)))))) ((((dihV x) (pr3 f3)) (pr3 f1)) (pr3 f2)))) |- ((((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((LET (\a123. (LET_END ((LET (\a231. (LET_END ((LET (\a312. (LET_END ((real_mul ((real_add a123) ((real_add a231) ((real_sub a312) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))) ((((dihV x) (pr3 f2)) (pr3 f3)) (pr3 f1)))))) ((((dihV x) (pr3 f1)) (pr3 f2)) (pr3 f3)))))) ((((dihV x) (pr3 f3)) (pr3 f1)) (pr3 f2)))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi))))) = (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (measure (((normball x) (real_of_num (NUMERAL (BIT1 _0)))) INTER ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi))))))
T c==> c= cmeasure * * part cINTER * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f1 * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END creal_mul creal_add b0 creal_add b1 creal_sub b2 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdihV f0 cpr3 f3 cpr3 f1 cpr3 f2 cdihV f0 cpr3 f2 cpr3 f3 cpr3 f1 cdihV f0 cpr3 f1 cpr3 f2 cpr3 f3 c= c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cLET / cLET_END cLET / cLET_END cLET / cLET_END creal_mul creal_add b0 creal_add b1 creal_sub b2 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cdihV f0 cpr3 f3 cpr3 f1 cpr3 f2 cdihV f0 cpr3 f2 cpr3 f3 cpr3 f1 cdihV f0 cpr3 f1 cpr3 f2 cpr3 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f0 cpr3 f1 cpr3 f2 csigma_fan f0 f4 f5 cpr3 f1 cpr3 f2 cpi creal_add creal_sub cdihV f0 cpr3 f2 cpr3 f3 csigma_fan f0 f4 f5 cpr3 f2 cpr3 f3 cpi creal_sub cdihV f0 cpr3 f3 cpr3 f1 csigma_fan f0 f4 f5 cpr3 f3 cpr3 f1 cpi c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f1 * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f0 cpr3 f1 cpr3 f2 csigma_fan f0 f4 f5 cpr3 f1 cpr3 f2 cpi creal_add creal_sub cdihV f0 cpr3 f2 cpr3 f3 csigma_fan f0 f4 f5 cpr3 f2 cpr3 f3 cpi creal_sub cdihV f0 cpr3 f3 cpr3 f1 csigma_fan f0 f4 f5 cpr3 f3 cpr3 f1 cpi
+ |- (!x. ((x IN ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) = (x IN (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))))
T c= cIN f0 * * part cUNION * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F) ==> ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F)) ==> (((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F) ==> ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F))) = (((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F) ==> ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F)))
T c= c==> c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF
- (((FINITE (f2 INSERT EMPTY)) /\ (FINITE (f3 INSERT EMPTY))) ==> (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))) |- ((((FINITE (f2 INSERT EMPTY)) /\ (FINITE (f3 INSERT EMPTY))) ==> (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))) = T)
T c==> c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 part cEMPTY c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi c= c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 part cEMPTY c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi cT
- ((x = f2) /\ (x = f3)) |- ((~ (f3 = f2)) = (~ (f3 = f2)))
T c==> c/\ c= f0 f1 c= f0 f2 c= c~ c= f2 f1 c~ c= f2 f1
+ (!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))), (~ (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3)))), (((~ ((d1_fan (x , (V , E))) f2)) \/ (~ ((d1_fan (x , (V , E))) f3))) ==> F) |- F
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c==> c~ c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 c==> c==> c\/ c~ cd1_fan c, f3 c, f4 f5 f1 c~ cd1_fan c, f3 c, f4 f5 f2 cF cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((DISJOINT (f1 INSERT EMPTY)) (f2 INSERT (f3 INSERT EMPTY))) |- (((DISJOINT (f1 INSERT EMPTY)) (f2 INSERT (f3 INSERT EMPTY))) = T)
T c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ |- ((((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> ((((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) = (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))) ==> (((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = ((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))) = (((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = ((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))))
T c= c==> c==> c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= c= csol f3 * * * * part cdartset_leads_into_fan f3 f4 f5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= csol f3 * * * * part cdartset_leads_into_fan f3 f4 f5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= c==> c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= csol f3 * * * * part cdartset_leads_into_fan f3 f4 f5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c==> c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= csol f3 * * * * part cdartset_leads_into_fan f3 f4 f5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= c==> c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= csol f3 * * * * part cdartset_leads_into_fan f3 f4 f5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c==> c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= csol f3 * * * * part cdartset_leads_into_fan f3 f4 f5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi
- (((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F) ==> ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F)) |- ((((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F) ==> ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F)) /\ (((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F) ==> ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F)))
T c==> c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c/\ c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF
- |- (((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum (f2 INSERT (f3 INSERT EMPTY))) (\x. ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi))))
T c= csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi
+ |- ((\C. (!r. ((((real_gt r) (real_of_num (NUMERAL _0))) /\ ((measurable (C INTER ((normball x) r))) /\ (((radial_norm r) x) (C INTER ((normball x) r))))) ==> (((sol x) C) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_div (measure (C INTER ((normball x) r)))) ((real_pow r) (NUMERAL (BIT1 (BIT1 _0)))))))))) ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))))
T * / ! c==> c/\ creal_gt b1 creal_of_num cNUMERAL c_0 c/\ cmeasurable * * part cINTER b0 * * part cnormball f0 b1 cradial_norm b1 f0 * * part cINTER b0 * * part cnormball f0 b1 c= csol f0 b0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_div cmeasure * * part cINTER b0 * * part cnormball f0 b1 creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f1 * * part cINSERT cpr3 f2 * * part cINSERT cpr3 f3 part cEMPTY
- (!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) |- ((~ ((d1_fan (x , (V , E))) f3)) ==> ((d1_fan (x , (V , E))) f3))
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c==> c~ cd1_fan c, f3 c, f4 f5 f2 cd1_fan c, f3 c, f4 f5 f2
+ |- (((T ==> ((((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))) = (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))))) ==> ((((FINITE (f2 INSERT EMPTY)) /\ (FINITE (f3 INSERT EMPTY))) ==> (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))) = (T ==> (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))))) = ((((FINITE (f2 INSERT EMPTY)) /\ (FINITE (f3 INSERT EMPTY))) ==> (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))) = (T ==> (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))))))
T c= c==> c==> cT c= c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi c= c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 part cEMPTY c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi c==> cT c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi c= c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 part cEMPTY c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi c==> cT c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi
+ |- (((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3)))) = ((!x. ((x IN (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) ==> (x IN (d1_fan (x , (V , E)))))) ==> ((f1 IN (d1_fan (x , (V , E)))) /\ ((f2 IN (d1_fan (x , (V , E)))) /\ (f3 IN (d1_fan (x , (V , E))))))))
T c= c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * part cd1_fan c, f3 c, f4 f5 c/\ cIN f0 * part cd1_fan c, f3 c, f4 f5 c/\ cIN f1 * part cd1_fan c, f3 c, f4 f5 cIN f2 * part cd1_fan c, f3 c, f4 f5
+ (x = f3), ((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))), ((x = f1) /\ ((x = f2) \/ (x = f3))) |- (~ (f1 = f1))
T c==> c= f0 f1 c==> c/\ c~ c= f2 f1 c/\ c~ c= f1 f3 c~ c= f3 f2 c==> c/\ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c~ c= f2 f2
- (x IN (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) |- ((x IN (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) = T)
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 (BIT1 _0))) = (BIT1 _0))))
T c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 cBIT1 c_0 cBIT1 c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (((sol x) ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (measure (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- ((((sol x) ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (measure (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (((sol x) ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= csol f2 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c==> c= cpr2 f4 cpr3 f3 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f3 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f3 cpr2 f4 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f3 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ c= csol f2 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f2 cpr3 f3 cpr3 f4 csigma_fan f2 f0 f1 cpr3 f3 cpr3 f4 cpi creal_add creal_sub cdihV f2 cpr3 f4 cpr3 f5 csigma_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cdihV f2 cpr3 f5 cpr3 f3 csigma_fan f2 f0 f1 cpr3 f5 cpr3 f3 cpi
+ (((A x) /\ (B x)) /\ ((~ (B x)) \/ (~ (A x)))) |- ((~ (B x)) ==> F)
T c==> c/\ c/\ * f0 f1 * f2 f1 c\/ c~ * f2 f1 c~ * f0 f1 c==> c~ * f2 f1 cF
+ |- (((((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))) = p') ==> ((p' ==> (((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = q')) ==> (((((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))) ==> ((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))) = (p' ==> q'))))
T c==> c= c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi f6 c==> c==> f6 c= c==> c= csum * * part cUNION * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f1 cpr3 f5 cpi csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi c= csol f2 * * * * part cdartset_leads_into_fan f2 f3 f4 * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi f7 c= c==> c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f5 cpr3 f0 cpi creal_sub cazim_fan f2 f3 f4 cpr3 f0 cpr3 f1 cpi c==> c= csum * * part cUNION * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f3 f4 cpr3 f1 cpr3 f5 cpi csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi c= csol f2 * * * * part cdartset_leads_into_fan f2 f3 f4 * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi c==> f6 f7
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), (((((f1_fan x) V) E) f3) = f1), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- (((f1 IN (d1_fan (x , (V , E)))) /\ ((f2 IN (d1_fan (x , (V , E)))) /\ (f3 IN (d1_fan (x , (V , E)))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f6 c==> c= cf1_fan f2 f0 f1 f6 f4 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> c/\ cIN f4 * part cd1_fan c, f2 c, f0 f1 c/\ cIN f5 * part cd1_fan c, f2 c, f0 f1 cIN f6 * part cd1_fan c, f2 c, f0 f1 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
- (~ F), (~ (B x)), (((A x) /\ (B x)) /\ ((~ (B x)) \/ (~ (A x)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> c/\ c/\ * f2 f1 * f0 f1 c\/ c~ * f0 f1 c~ * f2 f1 c/\ c~ cF cF
+ |- (((!ds. (((FAN (x , (V , E))) /\ (ds IN (face_set (hypermap1_of_fanx (x , (V , E)))))) ==> (ds SUBSET (d_fan (x , (V , E)))))) ==> ((\ds. (((FAN (x , (V , E))) /\ (ds IN (face_set (hypermap1_of_fanx (x , (V , E)))))) ==> (ds SUBSET (d_fan (x , (V , E)))))) ds)) = ((\ds. (((FAN (x , (V , E))) /\ (ds IN (face_set (hypermap1_of_fanx (x , (V , E)))))) ==> (ds SUBSET (d_fan (x , (V , E)))))) ds))
T c= c==> ! c==> c/\ cFAN c, f0 c, f1 f2 cIN b0 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 cSUBSET b0 * part cd_fan c, f0 c, f1 f2 * / c==> c/\ cFAN c, f0 c, f1 f2 cIN b0 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 cSUBSET b0 * part cd_fan c, f0 c, f1 f2 f3 * / c==> c/\ cFAN c, f0 c, f1 f2 cIN b0 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 cSUBSET b0 * part cd_fan c, f0 c, f1 f2 f3
- |- ((\y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) y)
T * / ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- ((?f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))))))))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> c? / c/\ c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c/\ c= cf1_fan f2 f0 f1 f4 f5 c/\ c= cf1_fan f2 f0 f1 f5 b0 c/\ c= cf1_fan f2 f0 f1 b0 f4 c/\ cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 b0 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 b0 cpr2 f4 c/\ c= cpr2 b0 cpr3 f5 c/\ c= cpr2 f5 cpr3 f4 c= cpr2 f4 cpr3 b0 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
+ (((~ (A x)) \/ (~ (B x))) /\ ((B x) /\ (A x))) |- ((((~ (A x)) \/ (~ (B x))) /\ ((B x) /\ (A x))) /\ F)
T c==> c/\ c\/ c~ * f0 f1 c~ * f2 f1 c/\ * f2 f1 * f0 f1 c/\ c/\ c\/ c~ * f0 f1 c~ * f2 f1 c/\ * f2 f1 * f0 f1 cF
+ |- ((!x. ((x IN (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) ==> (x IN (d1_fan (x , (V , E)))))) ==> ((f1 IN (d1_fan (x , (V , E)))) /\ ((f2 IN (d1_fan (x , (V , E)))) /\ (f3 IN (d1_fan (x , (V , E)))))))
T c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * part cd1_fan c, f3 c, f4 f5 c/\ cIN f0 * part cd1_fan c, f3 c, f4 f5 c/\ cIN f1 * part cd1_fan c, f3 c, f4 f5 cIN f2 * part cd1_fan c, f3 c, f4 f5
+ |- (((!x. (!V. (!E. (!ds. (!s. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((y IN ds) /\ (s = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y)))))))) ==> (((((dartset_leads_into_fan x) V) E) ds) = s)))))))) ==> ((\x. (!V. (!E. (!ds. (!s. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((y IN ds) /\ (s = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y)))))))) ==> (((((dartset_leads_into_fan x) V) E) ds) = s)))))))) x)) = ((\x. (!V. (!E. (!ds. (!s. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((y IN ds) /\ (s = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y)))))))) ==> (((((dartset_leads_into_fan x) V) E) ds) = s)))))))) x))
T c= c==> ! ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b6 b1 c> cCARD * * * part cset_of_edge b6 b1 b2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, b0 c, b1 b2 c/\ cIN b3 * part cface_set chypermap1_of_fanx c, b0 c, b1 b2 c/\ cIN b5 b3 c= b4 * * * * * part cdart_leads_into b0 b1 b2 cpr2 b5 cpr3 b5 c= * * * * part cdartset_leads_into_fan b0 b1 b2 b3 b4 * / ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b6 b1 c> cCARD * * * part cset_of_edge b6 b1 b2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, b0 c, b1 b2 c/\ cIN b3 * part cface_set chypermap1_of_fanx c, b0 c, b1 b2 c/\ cIN b5 b3 c= b4 * * * * * part cdart_leads_into b0 b1 b2 cpr2 b5 cpr3 b5 c= * * * * part cdartset_leads_into_fan b0 b1 b2 b3 b4 f0 * / ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b6 b1 c> cCARD * * * part cset_of_edge b6 b1 b2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, b0 c, b1 b2 c/\ cIN b3 * part cface_set chypermap1_of_fanx c, b0 c, b1 b2 c/\ cIN b5 b3 c= b4 * * * * * part cdart_leads_into b0 b1 b2 cpr2 b5 cpr3 b5 c= * * * * part cdartset_leads_into_fan b0 b1 b2 b3 b4 f0
- (!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))), (~ ((d1_fan (x , (V , E))) f2)) |- ((~ ((d1_fan (x , (V , E))) f2)) /\ ((d1_fan (x , (V , E))) f2))
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c==> c~ cd1_fan c, f3 c, f4 f5 f1 c/\ c~ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f1
+ ((((((azim_fan x) V) E) (pr3 f1)) (pr3 f2)) = ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) |- (((measurable (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))))))) = ((measurable (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi))))))))
T c==> c= cazim_fan f0 f1 f2 cpr3 f3 cpr3 f4 cdihV f0 cpr3 f3 cpr3 f4 csigma_fan f0 f1 f2 cpr3 f3 cpr3 f4 c= c==> cmeasurable * * part cINTER * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f5 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 part cEMPTY * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f0 * * part cINTER * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f5 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 part cEMPTY * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 c= csol f0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f5 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f0 cpr3 f5 cpr3 f3 csigma_fan f0 f1 f2 cpr3 f5 cpr3 f3 cpi creal_add creal_sub cdihV f0 cpr3 f3 cpr3 f4 csigma_fan f0 f1 f2 cpr3 f3 cpr3 f4 cpi creal_sub cazim_fan f0 f1 f2 cpr3 f4 cpr3 f5 cpi c==> cmeasurable * * part cINTER * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f5 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 part cEMPTY * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f0 * * part cINTER * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f5 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 part cEMPTY * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 c= csol f0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f5 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f4 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f0 cpr3 f5 cpr3 f3 csigma_fan f0 f1 f2 cpr3 f5 cpr3 f3 cpi creal_add creal_sub cazim_fan f0 f1 f2 cpr3 f3 cpr3 f4 cpi creal_sub cazim_fan f0 f1 f2 cpr3 f4 cpr3 f5 cpi
- (x = f3), ((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))), ((x = f1) /\ ((x = f2) \/ (x = f3))) |- (~ (f1 = f2))
T c==> c= f0 f1 c==> c/\ c~ c= f2 f1 c/\ c~ c= f1 f3 c~ c= f3 f2 c==> c/\ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c~ c= f2 f3
- (f1 = f2) |- (f2 = f1)
T c==> c= f0 f1 c= f1 f0
+ |- ((real_neg ((real_sub ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul ((real_add ((((dihV x) (pr3 f3)) (pr3 f1)) (pr3 f2))) ((real_add ((((dihV x) (pr3 f1)) (pr3 f2)) (pr3 f3))) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (pr3 f1))) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))) ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (pr3 f2))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (pr3 f3))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (pr3 f1))) pi)))))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_add cdihV f0 cpr3 f1 cpr3 f2 cpr3 f3 creal_add cdihV f0 cpr3 f2 cpr3 f3 cpr3 f1 creal_sub cdihV f0 cpr3 f3 cpr3 f1 cpr3 f2 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f0 cpr3 f1 cpr3 f2 cpr3 f3 cpi creal_add creal_sub cdihV f0 cpr3 f2 cpr3 f3 cpr3 f1 cpi creal_sub cdihV f0 cpr3 f3 cpr3 f1 cpr3 f2 cpi creal_of_num cNUMERAL c_0
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
+ |- ((~ ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))))))
T c/\ c~ c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0
- |- (((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3)))) = T)
T c= c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cT
+ |- ((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = T)
T c= c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c= csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 f3 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f3 / creal_sub cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cpi cT
+ (FAN (x , (V , E))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) (pr3 f1)) (pr3 f2)) (pr3 f3))), ((real_lt ((((azim x) (pr3 f1)) (pr3 f2)) (pr3 f3))) pi), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) |- (((~ (coplanar (x INSERT ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))))) ==> (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (measure (((normball x) (real_of_num (NUMERAL (BIT1 _0)))) INTER ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi)))))) = ((((FAN (x , (V , E))) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) (pr2 f2)) (pr2 f3)) (pr2 f1))) /\ ((real_lt ((((azim x) (pr2 f2)) (pr2 f3)) (pr2 f1))) pi))))) ==> (~ (coplanar (x INSERT ((pr2 f1) INSERT ((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY))))))) ==> (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (measure (((normball x) (real_of_num (NUMERAL (BIT1 _0)))) INTER ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi)))))))
T c==> cFAN c, f0 c, f1 f2 c==> c= cpr2 f3 cpr3 f4 c==> c= cpr2 f5 cpr3 f3 c==> c= cpr2 f4 cpr3 f5 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 cpr3 f3 cpr3 f5 cpr3 f4 c==> creal_lt cazim f0 cpr3 f3 cpr3 f5 cpr3 f4 cpi c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f5 part cEMPTY f2 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f4 part cEMPTY f2 c= c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 part cEMPTY c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f0 cpr3 f4 cpr3 f3 csigma_fan f0 f1 f2 cpr3 f4 cpr3 f3 cpi creal_add creal_sub cdihV f0 cpr3 f3 cpr3 f5 csigma_fan f0 f1 f2 cpr3 f3 cpr3 f5 cpi creal_sub cdihV f0 cpr3 f5 cpr3 f4 csigma_fan f0 f1 f2 cpr3 f5 cpr3 f4 cpi c==> c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f5 part cEMPTY f2 c/\ cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f4 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 cpr2 f5 cpr2 f4 cpr2 f3 creal_lt cazim f0 cpr2 f5 cpr2 f4 cpr2 f3 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f4 part cEMPTY c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f0 cpr3 f4 cpr3 f3 csigma_fan f0 f1 f2 cpr3 f4 cpr3 f3 cpi creal_add creal_sub cdihV f0 cpr3 f3 cpr3 f5 csigma_fan f0 f1 f2 cpr3 f3 cpr3 f5 cpi creal_sub cdihV f0 cpr3 f5 cpr3 f4 csigma_fan f0 f1 f2 cpr3 f5 cpr3 f4 cpi
+ ((((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)) = (pr3 f3)) |- ((((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul ((real_add ((((dihV x) (pr3 f3)) (pr3 f1)) (pr3 f2))) ((real_add ((((dihV x) (pr3 f1)) (pr3 f2)) (pr3 f3))) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (pr3 f1))) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (pr3 f2))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (pr3 f3))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (pr3 f1))) pi))))) = (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul ((real_add ((((dihV x) (pr3 f3)) (pr3 f1)) (pr3 f2))) ((real_add ((((dihV x) (pr3 f1)) (pr3 f2)) (pr3 f3))) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (pr3 f1))) pi)))) ((real_div ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (pr3 f2))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (pr3 f1))) pi))))))
T c==> c= csigma_fan f0 f1 f2 cpr3 f3 cpr3 f4 cpr3 f5 c= c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_add cdihV f0 cpr3 f5 cpr3 f3 cpr3 f4 creal_add cdihV f0 cpr3 f3 cpr3 f4 cpr3 f5 creal_sub cdihV f0 cpr3 f4 cpr3 f5 cpr3 f3 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f0 cpr3 f5 cpr3 f3 cpr3 f4 cpi creal_add creal_sub cdihV f0 cpr3 f3 cpr3 f4 cpr3 f5 cpi creal_sub cdihV f0 cpr3 f4 cpr3 f5 cpr3 f3 cpi c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_add cdihV f0 cpr3 f5 cpr3 f3 cpr3 f4 creal_add cdihV f0 cpr3 f3 cpr3 f4 cpr3 f5 creal_sub cdihV f0 cpr3 f4 cpr3 f5 cpr3 f3 cpi creal_div creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f0 cpr3 f5 cpr3 f3 cpr3 f4 cpi creal_add creal_sub cdihV f0 cpr3 f3 cpr3 f4 csigma_fan f0 f1 f2 cpr3 f3 cpr3 f4 cpi creal_sub cdihV f0 cpr3 f4 cpr3 f5 cpr3 f3 cpi
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), ((pr2 f2) = (pr3 f1)), (f2 IN (d1_fan (x , (V , E)))) |- ((((((((azim_fan x) V) E) (pr3 f1)) (pr3 f2)) = ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) ==> ((measurable (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))))))) = ((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (f2 IN (d_fan (x , (V , E))))))) ==> ((((((azim_fan x) V) E) (pr2 f2)) (pr3 f2)) = ((((dihV x) (pr2 f2)) (pr3 f2)) (((((sigma_fan x) V) E) (pr2 f2)) (pr3 f2))))) ==> ((measurable (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((sol x) ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cpr2 f3 cpr3 f4 c==> cIN f3 * part cd1_fan c, f2 c, f0 f1 c= c==> c= cazim_fan f2 f0 f1 cpr3 f4 cpr3 f3 cdihV f2 cpr3 f4 cpr3 f3 csigma_fan f2 f0 f1 cpr3 f4 cpr3 f3 c==> cmeasurable * * part cINTER * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f5 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f2 * * part cINTER * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f5 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f5 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f2 cpr3 f5 cpr3 f4 csigma_fan f2 f0 f1 cpr3 f5 cpr3 f4 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f3 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f3 cpr3 f5 cpi c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f2 c, f0 f1 cIN f3 * part cd_fan c, f2 c, f0 f1 c= cazim_fan f2 f0 f1 cpr2 f3 cpr3 f3 cdihV f2 cpr2 f3 cpr3 f3 csigma_fan f2 f0 f1 cpr2 f3 cpr3 f3 c==> cmeasurable * * part cINTER * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f5 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f2 * * part cINTER * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f5 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 part cEMPTY * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 c= csol f2 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f5 * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f2 cpr3 f5 cpr3 f4 csigma_fan f2 f0 f1 cpr3 f5 cpr3 f4 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f3 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f3 cpr3 f5 cpi
+ (((A x) /\ (B x)) /\ ((~ (B x)) \/ (~ (A x)))) |- (B x)
T c==> c/\ c/\ * f0 f1 * f2 f1 c\/ c~ * f2 f1 c~ * f0 f1 * f2 f1
- |- ((_3043565 = _3043567) ==> ((~ (_3043564 = _3043566)) \/ (((d1_fan _3043566) _3043567) \/ (~ ((d1_fan _3043564) _3043565)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cd1_fan f3 f1 c~ cd1_fan f2 f0
- |- ((real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!A. (!B. ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F))) ==> ((\A. (!B. ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F))) A)) = ((\A. (!B. ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F))) A))
T c= c==> ! ! c==> c~ ! c= c/\ * b0 b2 * b1 b2 c/\ * b1 b2 * b0 b2 cF * / ! c==> c~ ! c= c/\ * b0 b2 * b1 b2 c/\ * b1 b2 * b0 b2 cF f0 * / ! c==> c~ ! c= c/\ * b0 b2 * b1 b2 c/\ * b1 b2 * b0 b2 cF f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ F), (~ (A x)), (((~ (A x)) \/ (~ (B x))) /\ ((B x) /\ (A x))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> c/\ c\/ c~ * f0 f1 c~ * f2 f1 c/\ * f2 f1 * f0 f1 c/\ c~ cF cF
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), (((((f1_fan x) V) E) f3) = f1), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- (((pr2 f2) = (pr3 f1)) /\ (((pr2 f1) = (pr3 f3)) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f6 c==> c= cf1_fan f2 f0 f1 f6 f4 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ c= cpr2 f5 cpr3 f4 c==> c= cpr2 f4 cpr3 f6 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
- |- ((\g. ((!x. ((x IN (f2 INSERT (f3 INSERT EMPTY))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = (g x)))) ==> (((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum (f2 INSERT (f3 INSERT EMPTY))) g)))) g)
T * / c==> ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= creal_sub cazim_fan f2 f3 f4 cpr2 b1 cpr3 b1 cpi * b0 b1 c= csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b1 cpr3 b1 cpi csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 f5
- |- (((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F))
T c==> c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!A. (!B. (!x. (((A x) /\ (B x)) = ((B x) /\ (A x)))))) = (!A. (!B. ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F))))
T c= ! ! ! c= c/\ * b0 b2 * b1 b2 c/\ * b1 b2 * b0 b2 ! ! c==> c~ ! c= c/\ * b0 b2 * b1 b2 c/\ * b1 b2 * b0 b2 cF
- |- ((\V. (!x. (!f2. (!f1. ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F))))) V)
T * / ! ! ! c==> c~ c==> ! c==> c\/ c= b4 b3 c\/ c= b4 b2 c= b4 f0 cd1_fan c, b1 c, b0 f1 b4 c/\ cd1_fan c, b1 c, b0 f1 b3 c/\ cd1_fan c, b1 c, b0 f1 b2 cd1_fan c, b1 c, b0 f1 f0 cF f2
- |- ((!f3. (!E. (!V. (!x. (!f2. (!f1. ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3)))))))))) = (!f3. (!E. (!V. (!x. (!f2. (!f1. ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F))))))))
T c= ! ! ! ! ! ! c==> ! c==> c\/ c= b6 b5 c\/ c= b6 b4 c= b6 b0 cd1_fan c, b3 c, b2 b1 b6 c/\ cd1_fan c, b3 c, b2 b1 b5 c/\ cd1_fan c, b3 c, b2 b1 b4 cd1_fan c, b3 c, b2 b1 b0 ! ! ! ! ! ! c==> c~ c==> ! c==> c\/ c= b6 b5 c\/ c= b6 b4 c= b6 b0 cd1_fan c, b3 c, b2 b1 b6 c/\ cd1_fan c, b3 c, b2 b1 b5 c/\ cd1_fan c, b3 c, b2 b1 b4 cd1_fan c, b3 c, b2 b1 b0 cF
- (((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F) ==> ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F)) |- ((((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F) ==> ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F)) /\ (((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F) ==> ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c/\ c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF
- (_3043573 = _3043575), (_3043572 = _3043574) |- ((_3043573 = _3043575) /\ ((_3043572 , _3043573) = (_3043574 , _3043575)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= c, f2 f0 c, f3 f1
- (!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))), (~ ((d1_fan (x , (V , E))) f2)) |- ((~ F) ==> F)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c==> c~ cd1_fan c, f3 c, f4 f5 f1 c==> c~ cF cF
- ((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))), ((x = f2) /\ (x = f3)) |- (~ (f1 = f2))
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c==> c/\ c= f3 f2 c= f3 f1 c~ c= f0 f2
- (((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F)) |- ((((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F)) /\ (((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F)))
T c==> c==> c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c/\ c==> c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c==> c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF
- |- ((?x'. ((x' = f1) /\ ((x = f2) \/ (x = f3)))) = ((?x. (x = f1)) /\ ((x = f2) \/ (x = f3))))
T c= c? / c/\ c= b0 f0 c\/ c= f1 f2 c= f1 f3 c/\ c? / c= b0 f0 c\/ c= f1 f2 c= f1 f3
- (x = f3) |- (F = F)
T c==> c= f0 f1 c= cF cF
- (~ (A x)), (((~ (A x)) \/ (~ (B x))) /\ ((B x) /\ (A x))) |- ((~ (A x)) /\ (A x))
T c==> c~ * f0 f1 c==> c/\ c\/ c~ * f0 f1 c~ * f2 f1 c/\ * f2 f1 * f0 f1 c/\ c~ * f0 f1 * f0 f1
- (((~ (A x)) \/ (~ (B x))) /\ ((B x) /\ (A x))) |- ((~ (B x)) ==> (B x))
T c==> c/\ c\/ c~ * f0 f1 c~ * f2 f1 c/\ * f2 f1 * f0 f1 c==> c~ * f2 f1 * f2 f1
- (~ F), (~ (B x)), (((~ (A x)) \/ (~ (B x))) /\ ((B x) /\ (A x))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> c/\ c\/ c~ * f2 f1 c~ * f0 f1 c/\ * f0 f1 * f2 f1 c/\ c~ cF cF
- |- (((!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) ==> ((\s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) s)) = ((\s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) s))
T c= c==> ! c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 * / c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 f2 * / c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 f2
- |- ((\f3. (!E. (!V. (!x. (!f2. (!f1. ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F))))))) f3)
T * / ! ! ! ! ! c==> c~ c==> ! c==> c\/ c= b6 b5 c\/ c= b6 b4 c= b6 b0 cd1_fan c, b3 c, b2 b1 b6 c/\ cd1_fan c, b3 c, b2 b1 b5 c/\ cd1_fan c, b3 c, b2 b1 b4 cd1_fan c, b3 c, b2 b1 b0 cF f0
- |- ((\x. (~ (x IN EMPTY))) x)
T * / c~ cIN b0 part cEMPTY f0
- ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F) |- (((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F) /\ ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F))
T c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c/\ c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF
- |- ((((~ (((real_div A) ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) = A)) ==> F) ==> (((real_div A) ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) = A)) = (((real_div A) ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0))))) = A))
T c= c==> c==> c~ c= creal_div f0 creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 cF c= creal_div f0 creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c= creal_div f0 creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((FINITE (f2 INSERT EMPTY)) /\ (FINITE (f3 INSERT EMPTY))) ==> (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))) |- ((((FINITE (f2 INSERT EMPTY)) /\ (FINITE (f3 INSERT EMPTY))) ==> (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f1)) (pr3 f2))) pi)) ((real_sub (((((azim_fan x) V) E) (pr3 f2)) (pr3 f3))) pi)))) /\ ((((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> c==> c/\ cFINITE * * part cINSERT f5 part cEMPTY cFINITE * * part cINSERT f6 part cEMPTY c= csum * * part cUNION * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f6 cpi c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c==> cIN f5 * part cd1_fan c, f2 c, f0 f1 c==> cIN f6 * part cd1_fan c, f2 c, f0 f1 c/\ c==> c/\ cFINITE * * part cINSERT f5 part cEMPTY cFINITE * * part cINSERT f6 part cEMPTY c= csum * * part cUNION * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f4 cpr3 f5 cpi creal_sub cazim_fan f2 f0 f1 cpr3 f5 cpr3 f6 cpi c==> c= csum * * part cUNION * * part cINSERT f4 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f6 cpr3 f4 cpi csum * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
- |- ((!x. ((x IN (f2 INSERT (f3 INSERT EMPTY))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = (g x)))) ==> (((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum (f2 INSERT (f3 INSERT EMPTY))) g)))
T c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi * f5 b0 c= csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f5
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F) ==> ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F))
T c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF
- (((FINITE (f1 INSERT EMPTY)) /\ (FINITE (f2 INSERT (f3 INSERT EMPTY)))) ==> (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) |- ((((FINITE (f1 INSERT EMPTY)) /\ (FINITE (f2 INSERT (f3 INSERT EMPTY)))) ==> (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))) = T)
T c==> c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= c==> c/\ cFINITE * * part cINSERT f0 part cEMPTY cFINITE * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f3 f4 f5 cpr3 f2 cpr3 f0 cpi csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi cT
- (x IN (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) |- ((x IN (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi)))
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= creal_sub cazim_fan f4 f5 f6 cpr2 f0 cpr3 f0 cpi creal_sub cazim_fan f4 f5 f6 cpr2 f0 cpr3 f0 cpi
- |- ((!B. (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) = T)
T c= ! ! c= c/\ * f0 b1 * b0 b1 c/\ * b0 b1 * f0 b1 cT
- (~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) |- ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) /\ F)
T c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 c/\ c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((FINITE (f1 INSERT EMPTY)) /\ (FINITE (f2 INSERT (f3 INSERT EMPTY)))) ==> (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((real_add ((real_sub (((((azim_fan x) V) E) (pr3 f3)) (pr3 f1))) pi)) ((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E), (f1 IN (d1_fan (x , (V , E)))), (f2 IN (d1_fan (x , (V , E)))), (f3 IN (d1_fan (x , (V , E)))), ((DISJOINT (f2 INSERT EMPTY)) (f3 INSERT EMPTY)) |- (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> c==> c/\ cFINITE * * part cINSERT f4 part cEMPTY cFINITE * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c= csum * * part cUNION * * part cINSERT f4 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi creal_add creal_sub cazim_fan f2 f0 f1 cpr3 f6 cpr3 f4 cpi csum * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN f4 * part cd1_fan c, f2 c, f0 f1 c==> cIN f5 * part cd1_fan c, f2 c, f0 f1 c==> cIN f6 * part cd1_fan c, f2 c, f0 f1 c==> cDISJOINT * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
- |- (((x IN (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi))) = T)
T c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= creal_sub cazim_fan f4 f5 f6 cpr2 f0 cpr3 f0 cpi creal_sub cazim_fan f4 f5 f6 cpr2 f0 cpr3 f0 cpi cT
- |- ((~ ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ==> F)
T c==> c~ creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F) ==> ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F))
T c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF
- (x IN ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) |- ((x IN ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) /\ (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi)))
T c==> cIN f0 * * part cUNION * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f0 * * part cUNION * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= creal_sub cazim_fan f4 f5 f6 cpr2 f0 cpr3 f0 cpi creal_sub cazim_fan f4 f5 f6 cpr2 f0 cpr3 f0 cpi
- |- ((\x. (!f2. (!f1. ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F)))) x)
T * / ! ! c==> c~ c==> ! c==> c\/ c= b3 b2 c\/ c= b3 b1 c= b3 f0 cd1_fan c, b0 c, f1 f2 b3 c/\ cd1_fan c, b0 c, f1 f2 b2 c/\ cd1_fan c, b0 c, f1 f2 b1 cd1_fan c, b0 c, f1 f2 f0 cF f3
- |- (((!f3. (!E. (!V. (!x. (!f2. (!f1. ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F))))))) ==> ((\f3. (!E. (!V. (!x. (!f2. (!f1. ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F))))))) f3)) = ((\f3. (!E. (!V. (!x. (!f2. (!f1. ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F))))))) f3))
T c= c==> ! ! ! ! ! ! c==> c~ c==> ! c==> c\/ c= b6 b5 c\/ c= b6 b4 c= b6 b0 cd1_fan c, b3 c, b2 b1 b6 c/\ cd1_fan c, b3 c, b2 b1 b5 c/\ cd1_fan c, b3 c, b2 b1 b4 cd1_fan c, b3 c, b2 b1 b0 cF * / ! ! ! ! ! c==> c~ c==> ! c==> c\/ c= b6 b5 c\/ c= b6 b4 c= b6 b0 cd1_fan c, b3 c, b2 b1 b6 c/\ cd1_fan c, b3 c, b2 b1 b5 c/\ cd1_fan c, b3 c, b2 b1 b4 cd1_fan c, b3 c, b2 b1 b0 cF f0 * / ! ! ! ! ! c==> c~ c==> ! c==> c\/ c= b6 b5 c\/ c= b6 b4 c= b6 b0 cd1_fan c, b3 c, b2 b1 b6 c/\ cd1_fan c, b3 c, b2 b1 b5 c/\ cd1_fan c, b3 c, b2 b1 b4 cd1_fan c, b3 c, b2 b1 b0 cF f0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (A x)), (((~ (A x)) \/ (~ (B x))) /\ ((B x) /\ (A x))) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> c/\ c\/ c~ * f0 f1 c~ * f2 f1 c/\ * f2 f1 * f0 f1 c==> c~ cF cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (!g. ((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((sum s) (\y. (f y))) = ((sum s) g))))
T c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= csum f0 / * f1 b0 csum f0 f2
- (x = f2), ((x = f1) /\ ((x = f2) \/ (x = f3))) |- ((~ (f3 = f2)) = (~ (f3 = f1)))
T c==> c= f0 f1 c==> c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c= c~ c= f3 f1 c~ c= f3 f2
- (~ (B x)), (((~ (A x)) \/ (~ (B x))) /\ ((B x) /\ (A x))) |- ((~ (B x)) /\ (B x))
T c==> c~ * f0 f1 c==> c/\ c\/ c~ * f2 f1 c~ * f0 f1 c/\ * f0 f1 * f2 f1 c/\ c~ * f0 f1 * f0 f1
- |- ((!x. ((x IN ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi)))) ==> (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\x. ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi)))))
T c==> ! c==> cIN b0 * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!x. (P \/ (Q x))) = (P \/ (!x. (Q x))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- (~ (B x)), (((A x) /\ (B x)) /\ ((~ (B x)) \/ (~ (A x)))) |- ((~ (B x)) /\ (B x))
T c==> c~ * f0 f1 c==> c/\ c/\ * f2 f1 * f0 f1 c\/ c~ * f0 f1 c~ * f2 f1 c/\ c~ * f0 f1 * f0 f1
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((\s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) s)
T * / c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 f2
- (!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) |- ((~ ((d1_fan (x , (V , E))) f1)) ==> ((d1_fan (x , (V , E))) f1))
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c==> c~ cd1_fan c, f3 c, f4 f5 f0 cd1_fan c, f3 c, f4 f5 f0
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- ((fan80 (x , (V , E))) ==> (((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (measure (((normball x) (real_of_num (NUMERAL (BIT1 _0)))) INTER ((aff_gt (x INSERT EMPTY)) ((pr3 f3) INSERT ((pr3 f1) INSERT ((pr3 f2) INSERT EMPTY))))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f3)) (pr3 f1)) (((((sigma_fan x) V) E) (pr3 f3)) (pr3 f1)))) pi)) ((real_add ((real_sub ((((dihV x) (pr3 f1)) (pr3 f2)) (((((sigma_fan x) V) E) (pr3 f1)) (pr3 f2)))) pi)) ((real_sub ((((dihV x) (pr3 f2)) (pr3 f3)) (((((sigma_fan x) V) E) (pr3 f2)) (pr3 f3)))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> c= cpr2 f3 cpr3 f4 c==> c= cpr2 f5 cpr3 f3 c==> c= cpr2 f4 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f4 cpr2 f3 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f3 part cEMPTY f1 c==> cfan80 c, f2 c, f0 f1 c= creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 cmeasure * * part cINTER * * part cnormball f2 creal_of_num cNUMERAL cBIT1 c_0 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr3 f4 * * part cINSERT cpr3 f3 * * part cINSERT cpr3 f5 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_add creal_sub cdihV f2 cpr3 f4 cpr3 f3 csigma_fan f2 f0 f1 cpr3 f4 cpr3 f3 cpi creal_add creal_sub cdihV f2 cpr3 f3 cpr3 f5 csigma_fan f2 f0 f1 cpr3 f3 cpr3 f5 cpi creal_sub cdihV f2 cpr3 f5 cpr3 f4 csigma_fan f2 f0 f1 cpr3 f5 cpr3 f4 cpi
- |- ((?x'. ((x = f1) /\ ((x' = f2) \/ (x' = f3)))) = ((x = f1) /\ (?x. ((x = f2) \/ (x = f3)))))
T c= c? / c/\ c= f0 f1 c\/ c= b0 f2 c= b0 f3 c/\ c= f0 f1 c? / c\/ c= b0 f2 c= b0 f3
- |- (((!g. ((!x. ((x IN (f2 INSERT (f3 INSERT EMPTY))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = (g x)))) ==> (((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum (f2 INSERT (f3 INSERT EMPTY))) g)))) ==> ((\g. ((!x. ((x IN (f2 INSERT (f3 INSERT EMPTY))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = (g x)))) ==> (((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum (f2 INSERT (f3 INSERT EMPTY))) g)))) g)) = ((\g. ((!x. ((x IN (f2 INSERT (f3 INSERT EMPTY))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = (g x)))) ==> (((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum (f2 INSERT (f3 INSERT EMPTY))) g)))) g))
T c= c==> ! c==> ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= creal_sub cazim_fan f2 f3 f4 cpr2 b1 cpr3 b1 cpi * b0 b1 c= csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b1 cpr3 b1 cpi csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 * / c==> ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= creal_sub cazim_fan f2 f3 f4 cpr2 b1 cpr3 b1 cpi * b0 b1 c= csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b1 cpr3 b1 cpi csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 f5 * / c==> ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= creal_sub cazim_fan f2 f3 f4 cpr2 b1 cpr3 b1 cpi * b0 b1 c= csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b1 cpr3 b1 cpi csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 f5
- |- (T = (A IN (B INSERT (A INSERT (C INSERT EMPTY)))))
T c= cT cIN f0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- (~ ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) |- ((~ ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) /\ F)
T c==> c~ creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c~ creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((real_neg ((real_sub ((real_div A) ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT1 (BIT1 _0)))))) A)) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_div f0 creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- (~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) |- ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) /\ F)
T c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 c/\ c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF
- |- ((!x. ((x IN (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = (g x)))) ==> (((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) g)))
T c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi * f6 b0 c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6
- |- (((NUMERAL (BIT0 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((!x. (!f2. (!f1. ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))))) = T)
T c= ! ! ! c==> ! c==> c\/ c= b3 b2 c\/ c= b3 b1 c= b3 f0 cd1_fan c, b0 c, f1 f2 b3 c/\ cd1_fan c, b0 c, f1 f2 b2 c/\ cd1_fan c, b0 c, f1 f2 b1 cd1_fan c, b0 c, f1 f2 f0 cT
- |- (((!g. ((!x. ((x IN ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = (g x)))) ==> (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) g)))) ==> ((\g. ((!x. ((x IN ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = (g x)))) ==> (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) g)))) g)) = ((\g. ((!x. ((x IN ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = (g x)))) ==> (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) g)))) g))
T c= c==> ! c==> ! c==> cIN b1 * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_sub cazim_fan f3 f4 f5 cpr2 b1 cpr3 b1 cpi * b0 b1 c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b1 cpr3 b1 cpi csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * / c==> ! c==> cIN b1 * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_sub cazim_fan f3 f4 f5 cpr2 b1 cpr3 b1 cpi * b0 b1 c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b1 cpr3 b1 cpi csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 f6 * / c==> ! c==> cIN b1 * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_sub cazim_fan f3 f4 f5 cpr2 b1 cpr3 b1 cpi * b0 b1 c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b1 cpr3 b1 cpi csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 f6
- (_3043572 = _3043574) |- ((_3043572 = _3043574) /\ ((~ (_3043573 = _3043575)) \/ ((_3043572 , _3043573) = (_3043574 , _3043575))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- (~ (f2 = f1)) |- (~ (f1 = f2))
T c==> c~ c= f0 f1 c~ c= f1 f0
- |- ((\g. ((!x. ((x IN ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = (g x)))) ==> (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) g)))) g)
T * / c==> ! c==> cIN b1 * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_sub cazim_fan f3 f4 f5 cpr2 b1 cpr3 b1 cpi * b0 b1 c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b1 cpr3 b1 cpi csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 f6
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (FINITE s) |- ((FINITE s) /\ ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))
T c==> cFINITE f0 c/\ cFINITE f0 c= cCARD * * part cINSERT f1 f0 cCOND cIN f1 f0 cCARD f0 cSUC cCARD f0
- |- (((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) (\x. ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi))))
T c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi
- |- ((!x. ((x IN (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi)))) ==> (((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\x. ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi)))))
T c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi c= csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi csum * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / creal_sub cazim_fan f3 f4 f5 cpr2 b0 cpr3 b0 cpi
- ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F) |- ((((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F)) ==> ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F))
T c==> c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c==> c==> c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF
- (~ (B x)), (((~ (A x)) \/ (~ (B x))) /\ ((B x) /\ (A x))) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> c/\ c\/ c~ * f2 f1 c~ * f0 f1 c/\ * f0 f1 * f2 f1 c==> c~ cF cF
- (measurable (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER (ball (x , (real_of_num (NUMERAL (BIT1 _0))))))) |- ((measurable (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER (ball (x , (real_of_num (NUMERAL (BIT1 _0))))))) = T)
T c==> cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cball c, f0 creal_of_num cNUMERAL cBIT1 c_0 c= cmeasurable * * part cINTER * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cball c, f0 creal_of_num cNUMERAL cBIT1 c_0 cT
- (_3043564 = _3043566), (_3043565 = _3043567) |- (((d1_fan _3043566) _3043567) \/ (~ ((d1_fan _3043564) _3043565)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cd1_fan f1 f3 c~ cd1_fan f0 f2
- |- ((((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3)))))) = T)
T c= c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cT
- (~ (A x)), (((A x) /\ (B x)) /\ ((~ (B x)) \/ (~ (A x)))) |- ((~ (A x)) /\ (A x))
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f1 * f2 f1 c\/ c~ * f2 f1 c~ * f0 f1 c/\ c~ * f0 f1 * f0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\x. ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi))))
T c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi
- (~ (f2 = f1)) |- ((f1 = f2) = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
- |- (((!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))) ==> ((\s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))) s)) = ((\s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))) s))
T c= c==> ! c==> cFINITE b0 c= cCARD * * part cINSERT f0 b0 cCOND cIN f0 b0 cCARD b0 cSUC cCARD b0 * / c==> cFINITE b0 c= cCARD * * part cINSERT f0 b0 cCOND cIN f0 b0 cCARD b0 cSUC cCARD b0 f1 * / c==> cFINITE b0 c= cCARD * * part cINSERT f0 b0 cCOND cIN f0 b0 cCARD b0 cSUC cCARD b0 f1
- (_3043564 = _3043566), (_3043565 = _3043567) |- (((((d1_fan _3043564) _3043565) = ((d1_fan _3043566) _3043567)) ==> (((d1_fan _3043566) _3043567) \/ (~ ((d1_fan _3043564) _3043565)))) = (((d1_fan _3043566) _3043567) \/ (~ ((d1_fan _3043564) _3043565))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cd1_fan f0 f2 cd1_fan f1 f3 c\/ cd1_fan f1 f3 c~ cd1_fan f0 f2 c\/ cd1_fan f1 f3 c~ cd1_fan f0 f2
- (x IN ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) |- ((x IN ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) = T)
T c==> cIN f0 * * part cUNION * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cIN f0 * * part cUNION * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
- |- ((!f2. (!f1. ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3)))))) = T)
T c= ! ! c==> ! c==> c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cd1_fan c, f1 c, f2 f3 b2 c/\ cd1_fan c, f1 c, f2 f3 b1 c/\ cd1_fan c, f1 c, f2 f3 b0 cd1_fan c, f1 c, f2 f3 f0 cT
- (_3043564 = _3043566), (_3043565 = _3043567) |- ((_3043564 = _3043566) /\ (((d1_fan _3043566) _3043567) \/ (~ ((d1_fan _3043564) _3043565))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ cd1_fan f1 f3 c~ cd1_fan f0 f2
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F), (((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F)) |- (((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F) /\ ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F))
T c==> c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c==> c==> c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c/\ c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF
- |- ((!f1. (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) = T)
T c= ! c==> c/\ c~ c= b0 f0 c/\ c~ c= f0 f1 c~ c= f1 b0 c/\ ! c~ c/\ c= b1 b0 c\/ c= b1 f1 c= b1 f0 ! c~ c/\ c= b1 f1 c= b1 f0 cT
- |- (!x. ((x IN (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi))))
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= creal_sub cazim_fan f4 f5 f6 cpr2 f0 cpr3 f0 cpi creal_sub cazim_fan f4 f5 f6 cpr2 f0 cpr3 f0 cpi
- (x = f3), ((x = f1) /\ ((x = f2) \/ (x = f3))) |- ((~ (f3 = f2)) = (~ (f1 = f2)))
T c==> c= f0 f1 c==> c/\ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c= c~ c= f1 f3 c~ c= f2 f3
- (((A x) /\ (B x)) /\ ((~ (B x)) \/ (~ (A x)))) |- ((~ (A x)) ==> (A x))
T c==> c/\ c/\ * f0 f1 * f2 f1 c\/ c~ * f2 f1 c~ * f0 f1 c==> c~ * f0 f1 * f0 f1
- (~ ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c~ creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))), (~ ((d1_fan (x , (V , E))) f3)) |- ((~ ((d1_fan (x , (V , E))) f3)) /\ ((d1_fan (x , (V , E))) f3))
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c==> c~ cd1_fan c, f3 c, f4 f5 f2 c/\ c~ cd1_fan c, f3 c, f4 f5 f2 cd1_fan c, f3 c, f4 f5 f2
- |- ((!V. (P V)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- ((!f2. (!f1. (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3)))))))) = T)
T c= ! ! c==> c/\ c~ c= b1 f0 c/\ c~ c= f0 b0 c~ c= b0 b1 c/\ ! c~ c/\ c= b2 b1 c\/ c= b2 b0 c= b2 f0 ! c~ c/\ c= b2 b0 c= b2 f0 cT
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) |- F
T c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF
- (FINITE s) |- ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))
T c==> cFINITE f0 c= cCARD * * part cINSERT f1 f0 cCOND cIN f1 f0 cCARD f0 cSUC cCARD f0
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), (((((f1_fan x) V) E) f3) = f1), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- (((pr2 f2) = (pr3 f1)) ==> (((pr2 f1) = (pr3 f3)) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f6 c==> c= cf1_fan f2 f0 f1 f6 f4 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f4 cpr3 f6 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
- (~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) |- F
T c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- (((x IN (f2 INSERT (f3 INSERT EMPTY))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi))) = T)
T c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_sub cazim_fan f3 f4 f5 cpr2 f0 cpr3 f0 cpi creal_sub cazim_fan f3 f4 f5 cpr2 f0 cpr3 f0 cpi cT
- ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F) |- ((((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F) ==> ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F)) ==> ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F))
T c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> c==> c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF c==> c~ c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c/\ cd1_fan c, f3 c, f4 f5 f0 c/\ cd1_fan c, f3 c, f4 f5 f1 cd1_fan c, f3 c, f4 f5 f2 cF
- |- (((!f3. (!f2. (!f1. ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F)))) ==> ((\f3. (!f2. (!f1. ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F)))) f3)) = ((\f3. (!f2. (!f1. ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F)))) f3))
T c= c==> ! ! ! c==> c~ c==> c/\ c~ c= b2 b0 c/\ c~ c= b0 b1 c~ c= b1 b2 c/\ ! c~ c/\ c= b3 b2 c\/ c= b3 b1 c= b3 b0 ! c~ c/\ c= b3 b1 c= b3 b0 cF * / ! ! c==> c~ c==> c/\ c~ c= b2 b0 c/\ c~ c= b0 b1 c~ c= b1 b2 c/\ ! c~ c/\ c= b3 b2 c\/ c= b3 b1 c= b3 b0 ! c~ c/\ c= b3 b1 c= b3 b0 cF f0 * / ! ! c==> c~ c==> c/\ c~ c= b2 b0 c/\ c~ c= b0 b1 c~ c= b1 b2 c/\ ! c~ c/\ c= b3 b2 c\/ c= b3 b1 c= b3 b0 ! c~ c/\ c= b3 b1 c= b3 b0 cF f0
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), (((((f1_fan x) V) E) f3) = f1), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) ==> (((pr2 f1) = (pr3 f3)) ==> (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f6 c==> c= cf1_fan f2 f0 f1 f6 f4 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ c= cpr2 f6 cpr3 f5 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f4 cpr3 f6 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (!x. ((x IN ((f1 INSERT EMPTY) UNION (f2 INSERT (f3 INSERT EMPTY)))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi))))
T c==> cIN f0 * * part cUNION * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= creal_sub cazim_fan f4 f5 f6 cpr2 f0 cpr3 f0 cpi creal_sub cazim_fan f4 f5 f6 cpr2 f0 cpr3 f0 cpi
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!x'. (((~ (x = f1)) /\ ((~ (x = f2)) /\ (~ (x = f3)))) \/ ((d1_fan (x , (V , E))) x'))) = (((~ (x = f1)) /\ ((~ (x = f2)) /\ (~ (x = f3)))) \/ (!x. ((d1_fan (x , (V , E))) x))))
T c= ! c\/ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 cd1_fan c, f4 c, f5 f6 b0 c\/ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 ! cd1_fan c, f4 c, f5 f6 b0
- |- ((!x. ((x IN ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = (g x)))) ==> (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) g)))
T c==> ! c==> cIN b0 * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c= creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi * f5 b0 c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f5
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) s)
T * / ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 f0
- (!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))), (~ ((d1_fan (x , (V , E))) f3)) |- ((~ F) ==> F)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c==> c~ cd1_fan c, f3 c, f4 f5 f2 c==> c~ cF cF
- |- ((!x. ((x IN ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi)))) ==> (((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) (\x. ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi)))))
T c==> ! c==> cIN b0 * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c= creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi c= csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi csum * * part cUNION * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (?f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))))))))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- ((?f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))))))))))) /\ (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c? / c/\ c= f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY c/\ c= cf1_fan f5 f0 f1 f3 f4 c/\ c= cf1_fan f5 f0 f1 f4 b0 c/\ c= cf1_fan f5 f0 f1 b0 f3 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 b0 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr2 f3 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ c= csigma_fan f5 f0 f1 cpr2 f4 cpr2 b0 cpr2 f3 c/\ c= cpr2 b0 cpr3 f4 c/\ c= cpr2 f4 cpr3 f3 c= cpr2 f3 cpr3 b0 c==> cFAN c, f5 c, f0 f1 c==> cfan80 c, f5 c, f0 f1 c==> c= cCARD f2 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f2 * part cface_set chypermap1_of_fanx c, f5 c, f0 f1 c/\ c? / c/\ c= f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY c/\ c= cf1_fan f5 f0 f1 f3 f4 c/\ c= cf1_fan f5 f0 f1 f4 b0 c/\ c= cf1_fan f5 f0 f1 b0 f3 c/\ cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 b0 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr2 f3 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ c= csigma_fan f5 f0 f1 cpr2 f4 cpr2 b0 cpr2 f3 c/\ c= cpr2 b0 cpr3 f4 c/\ c= cpr2 f4 cpr3 f3 c= cpr2 f3 cpr3 b0 c= csol f5 * * * * part cdartset_leads_into_fan f5 f0 f1 f2 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f2 / creal_sub cazim_fan f5 f0 f1 cpr2 b0 cpr3 b0 cpi
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- |- ((!V. (!x. (!f2. (!f1. ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3)))))))) = T)
T c= ! ! ! ! c==> ! c==> c\/ c= b4 b3 c\/ c= b4 b2 c= b4 f0 cd1_fan c, b1 c, b0 f1 b4 c/\ cd1_fan c, b1 c, b0 f1 b3 c/\ cd1_fan c, b1 c, b0 f1 b2 cd1_fan c, b1 c, b0 f1 f0 cT
- |- ((!x. ((x IN (f2 INSERT (f3 INSERT EMPTY))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi)))) ==> (((sum (f2 INSERT (f3 INSERT EMPTY))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))) = ((sum (f2 INSERT (f3 INSERT EMPTY))) (\x. ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi)))))
T c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi c= csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / creal_sub cazim_fan f2 f3 f4 cpr2 b0 cpr3 b0 cpi
- |- ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x))))
T c= c? / c/\ f0 * f1 b0 c/\ f0 c? / * f1 b0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) ==> ((\y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) y)) = ((\y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) y))
T c= c==> ! ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 * / ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 f1 * / ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 f1
- ((x = f2) /\ (x = f3)) |- (F = F)
T c==> c/\ c= f0 f1 c= f0 f2 c= cF cF
- |- (((\y. (f y)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F)) = ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F))
T c= c==> c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF
- (~ F), ((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))), ((x = f2) /\ (x = f3)) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c==> c/\ c= f3 f2 c= f3 f1 c/\ c~ cF cF
- |- (((!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) ==> ((\x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) x)) = ((\x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) x))
T c= c==> ! ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 * / ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 f0 * / ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 f0
- |- ((((~ ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ==> F) ==> ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= c==> c==> c~ creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cF creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F) = (!x. (((A x) /\ (B x)) = ((B x) /\ (A x)))))
T c= c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0
- |- (((!f1. ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F)) ==> ((\f1. ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F)) f1)) = ((\f1. ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F)) f1))
T c= c==> ! c==> c~ c==> ! c==> c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 cd1_fan c, f2 c, f3 f4 b1 c/\ cd1_fan c, f2 c, f3 f4 b0 c/\ cd1_fan c, f2 c, f3 f4 f0 cd1_fan c, f2 c, f3 f4 f1 cF * / c==> c~ c==> ! c==> c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 cd1_fan c, f2 c, f3 f4 b1 c/\ cd1_fan c, f2 c, f3 f4 b0 c/\ cd1_fan c, f2 c, f3 f4 f0 cd1_fan c, f2 c, f3 f4 f1 cF f5 * / c==> c~ c==> ! c==> c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 cd1_fan c, f2 c, f3 f4 b1 c/\ cd1_fan c, f2 c, f3 f4 b0 c/\ cd1_fan c, f2 c, f3 f4 f0 cd1_fan c, f2 c, f3 f4 f1 cF f5
- ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F) |- (((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F) /\ ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F))
T c==> c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c/\ c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF
- |- (((!f2. (!f1. ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F))) ==> ((\f2. (!f1. ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F))) f2)) = ((\f2. (!f1. ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F))) f2))
T c= c==> ! ! c==> c~ c==> c/\ c~ c= b1 f0 c/\ c~ c= f0 b0 c~ c= b0 b1 c/\ ! c~ c/\ c= b2 b1 c\/ c= b2 b0 c= b2 f0 ! c~ c/\ c= b2 b0 c= b2 f0 cF * / ! c==> c~ c==> c/\ c~ c= b1 f0 c/\ c~ c= f0 b0 c~ c= b0 b1 c/\ ! c~ c/\ c= b2 b1 c\/ c= b2 b0 c= b2 f0 ! c~ c/\ c= b2 b0 c= b2 f0 cF f1 * / ! c==> c~ c==> c/\ c~ c= b1 f0 c/\ c~ c= f0 b0 c~ c= b0 b1 c/\ ! c~ c/\ c= b2 b1 c\/ c= b2 b0 c= b2 f0 ! c~ c/\ c= b2 b0 c= b2 f0 cF f1
- (~ (f3 = f3)) |- ((~ (f3 = f3)) /\ (f3 = f3))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- (((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) |- ((((radial_norm (real_of_num (NUMERAL (BIT1 _0)))) x) (((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) INTER ((normball x) (real_of_num (NUMERAL (BIT1 _0)))))) = T)
T c==> cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f0 * * part cINTER * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 c= cradial_norm creal_of_num cNUMERAL cBIT1 c_0 f0 * * part cINTER * * * * part cdartset_leads_into_fan f0 f1 f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cnormball f0 creal_of_num cNUMERAL cBIT1 c_0 cT
- |- ((((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F)) ==> (((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) = ((B x) /\ (A x))))) ==> F)))
T c==> c==> c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c==> c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF c==> c~ ! c= c/\ * f0 b0 * f1 b0 c/\ * f1 b0 * f0 b0 cF
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (x IN ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) |- ((x IN ((f2 INSERT EMPTY) UNION (f3 INSERT EMPTY))) /\ (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi)))
T c==> cIN f0 * * part cUNION * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cIN f0 * * part cUNION * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= creal_sub cazim_fan f3 f4 f5 cpr2 f0 cpr3 f0 cpi creal_sub cazim_fan f3 f4 f5 cpr2 f0 cpr3 f0 cpi
- |- (((((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F) ==> ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F)) ==> (((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F) ==> ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F))) = (((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F) ==> ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F)))
T c= c==> c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF c==> c~ c==> c/\ c~ c= f0 f1 c/\ c~ c= f1 f2 c~ c= f2 f0 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c~ c/\ c= b0 f2 c= b0 f1 cF
- (!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))), (~ ((d1_fan (x , (V , E))) f1)) |- ((~ F) ==> F)
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c==> c~ cd1_fan c, f3 c, f4 f5 f0 c==> c~ cF cF
- (~ F), (x = f3), ((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))), ((x = f1) /\ ((x = f2) \/ (x = f3))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c~ c= f2 f1 c/\ c~ c= f1 f3 c~ c= f3 f2 c==> c/\ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ cF cF
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x = f3), ((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))), ((x = f1) /\ ((x = f2) \/ (x = f3))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c~ c= f2 f1 c/\ c~ c= f1 f3 c~ c= f3 f2 c==> c/\ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c==> c~ cF cF
- (~ F), (x = f2), ((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))), ((x = f1) /\ ((x = f2) \/ (x = f3))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c~ c= f2 f3 c/\ c~ c= f3 f1 c~ c= f1 f2 c==> c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ cF cF
- (_3043572 = _3043574) |- ((_3043573 = _3043575) ==> ((_3043572 , _3043573) = (_3043574 , _3043575)))
T c==> c= f0 f1 c==> c= f2 f3 c= c, f0 f2 c, f1 f3
- (x = f3) |- ((~ (f3 = f2)) = (~ (f3 = f2)))
T c==> c= f0 f1 c= c~ c= f1 f2 c~ c= f1 f2
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), (((((f1_fan x) V) E) f3) = f1), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), ((pr2 f1) = (pr3 f3)), ((pr2 f2) = (pr3 f1)), ((pr2 f3) = (pr3 f2)), ((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E), (((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E), (((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) |- (((pr2 f1) = (pr3 f3)) /\ (((sol x) ((((dartset_leads_into_fan x) V) E) (f1 INSERT (f2 INSERT (f3 INSERT EMPTY))))) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f6 c==> c= cf1_fan f2 f0 f1 f6 f4 c==> c= cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cpr2 f4 cpr3 f6 c==> c= cpr2 f5 cpr3 f4 c==> c= cpr2 f6 cpr3 f5 c==> c= csigma_fan f2 f0 f1 cpr2 f5 cpr2 f6 cpr2 f4 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr2 f5 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f5 * * part cINSERT cpr2 f6 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr2 f4 part cEMPTY f1 c/\ c= cpr2 f4 cpr3 f6 c= csol f2 * * * * part cdartset_leads_into_fan f2 f0 f1 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY / creal_sub cazim_fan f2 f0 f1 cpr2 b0 cpr3 b0 cpi
- |- (!x. ((x IN (f2 INSERT (f3 INSERT EMPTY))) ==> (((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi) = ((real_sub (((((azim_fan x) V) E) (pr2 x)) (pr3 x))) pi))))
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_sub cazim_fan f3 f4 f5 cpr2 f0 cpr3 f0 cpi creal_sub cazim_fan f3 f4 f5 cpr2 f0 cpr3 f0 cpi
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\f2. (!f1. ((~ (((~ (f1 = f3)) /\ ((~ (f3 = f2)) /\ (~ (f2 = f1)))) ==> ((!x. (~ ((x = f1) /\ ((x = f2) \/ (x = f3))))) /\ (!x. (~ ((x = f2) /\ (x = f3))))))) ==> F))) f2)
T * / ! c==> c~ c==> c/\ c~ c= b1 f0 c/\ c~ c= f0 b0 c~ c= b0 b1 c/\ ! c~ c/\ c= b2 b1 c\/ c= b2 b0 c= b2 f0 ! c~ c/\ c= b2 b0 c= b2 f0 cF f1
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (?f1. (?f2. (?f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))))))))))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((CARD ds) = (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- ((?f1. (?f2. (?f3. ((ds = (f1 INSERT (f2 INSERT (f3 INSERT EMPTY)))) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((((((f1_fan x) V) E) f3) = f1) /\ ((((pr2 f2) INSERT ((pr2 f3) INSERT EMPTY)) IN E) /\ ((((pr2 f3) INSERT ((pr2 f1) INSERT EMPTY)) IN E) /\ ((((pr2 f1) INSERT ((pr2 f2) INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) (pr2 f2)) (pr2 f3)) = (pr2 f1)) /\ (((pr2 f3) = (pr3 f2)) /\ (((pr2 f2) = (pr3 f1)) /\ ((pr2 f1) = (pr3 f3))))))))))))))) /\ (((sol x) ((((dartset_leads_into_fan x) V) E) ds)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ds) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c? / c? / c? / c/\ c= f2 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cf1_fan f3 f0 f1 b0 b1 c/\ c= cf1_fan f3 f0 f1 b1 b2 c/\ c= cf1_fan f3 f0 f1 b2 b0 c/\ cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr2 b2 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b2 * * part cINSERT cpr2 b0 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr2 b1 part cEMPTY f1 c/\ c= csigma_fan f3 f0 f1 cpr2 b1 cpr2 b2 cpr2 b0 c/\ c= cpr2 b2 cpr3 b1 c/\ c= cpr2 b1 cpr3 b0 c= cpr2 b0 cpr3 b2 c==> cFAN c, f3 c, f0 f1 c==> cfan80 c, f3 c, f0 f1 c==> c= cCARD f2 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f2 * part cface_set chypermap1_of_fanx c, f3 c, f0 f1 c/\ c? / c? / c? / c/\ c= f2 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cf1_fan f3 f0 f1 b0 b1 c/\ c= cf1_fan f3 f0 f1 b1 b2 c/\ c= cf1_fan f3 f0 f1 b2 b0 c/\ cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr2 b2 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b2 * * part cINSERT cpr2 b0 part cEMPTY f1 c/\ cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr2 b1 part cEMPTY f1 c/\ c= csigma_fan f3 f0 f1 cpr2 b1 cpr2 b2 cpr2 b0 c/\ c= cpr2 b2 cpr3 b1 c/\ c= cpr2 b1 cpr3 b0 c= cpr2 b0 cpr3 b2 c= csol f3 * * * * part cdartset_leads_into_fan f3 f0 f1 f2 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum f2 / creal_sub cazim_fan f3 f0 f1 cpr2 b0 cpr3 b0 cpi
- |- ((?x. ((P x) /\ Q)) = ((?x. (P x)) /\ Q))
T c= c? / c/\ * f0 b0 f1 c/\ c? / * f0 b0 f1
- |- ((?x'. ((x' = f2) /\ (x = f3))) = ((?x. (x = f2)) /\ (x = f3)))
T c= c? / c/\ c= b0 f0 c= f1 f2 c/\ c? / c= b0 f0 c= f1 f2
- |- ((\f2. (!f1. ((~ ((!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))) ==> (((d1_fan (x , (V , E))) f1) /\ (((d1_fan (x , (V , E))) f2) /\ ((d1_fan (x , (V , E))) f3))))) ==> F))) f2)
T * / ! c==> c~ c==> ! c==> c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cd1_fan c, f1 c, f2 f3 b2 c/\ cd1_fan c, f1 c, f2 f3 b1 c/\ cd1_fan c, f1 c, f2 f3 b0 cd1_fan c, f1 c, f2 f3 f0 cF f4
- (!x. (((x = f1) \/ ((x = f2) \/ (x = f3))) ==> ((d1_fan (x , (V , E))) x))), (~ ((d1_fan (x , (V , E))) f1)) |- ((~ ((d1_fan (x , (V , E))) f1)) /\ ((d1_fan (x , (V , E))) f1))
T c==> ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 cd1_fan c, f3 c, f4 f5 b0 c==> c~ cd1_fan c, f3 c, f4 f5 f0 c/\ c~ cd1_fan c, f3 c, f4 f5 f0 cd1_fan c, f3 c, f4 f5 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x = f3), ((x = f1) /\ ((x = f2) \/ (x = f3))) |- ((~ (f2 = f1)) = (~ (f2 = f1)))
T c==> c= f0 f1 c==> c/\ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c= c~ c= f3 f2 c~ c= f3 f2
- (_3043565 = _3043567) |- ((_3043565 = _3043567) /\ ((~ (_3043564 = _3043566)) \/ (((d1_fan _3043566) _3043567) \/ (~ ((d1_fan _3043564) _3043565)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cd1_fan f3 f1 c~ cd1_fan f2 f0
- ((x = f2) /\ (x = f3)) |- ((~ (f2 = f1)) = (~ (f2 = f1)))
T c==> c/\ c= f0 f1 c= f0 f2 c= c~ c= f1 f3 c~ c= f1 f3
