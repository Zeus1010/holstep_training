N VSUM_COMBINE_L
C |- (!f. (!m. (!n. (!p. ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f)))))))
T c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f0 f2 f3 cvsum * * part c.. f1 f2 f3
D TRUTH
A |- T
T cT
D SUM_COMBINE_L
A |- (!f. (!m. (!n. (!p. ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((real_add ((sum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((sum (n .. p)) f)) = ((sum (m .. p)) f)))))))
T c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f3 csum * * part c.. f0 f2 f3 csum * * part c.. f1 f2 f3
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D VECTOR_ADD_COMPONENT
A |- (!x. (!y. (!i. ((((vector_add x) y) $ i) = ((real_add (x $ i)) (y $ i))))))
T c= c$ cvector_add f0 f1 f2 creal_add c$ f0 f2 c$ f1 f2
D VSUM_COMPONENT
A |- (!s. (!f. (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vsum s) f) $ i) = ((sum s) (\x. ((f x) $ i))))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvsum f1 f2 f0 csum f1 / c$ * f2 b0 f0
+ |- ((\i. ((((vector_add x) y) $ i) = ((real_add (x $ i)) (y $ i)))) i)
T * / c= c$ cvector_add f0 f1 b0 creal_add c$ f0 b0 c$ f1 b0 f2
+ |- ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ cvector_add cvsum * * part c.. f1 c- f2 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f2 f4 f3 f0 c$ cvsum * * part c.. f1 f4 f3 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvsum * * part c.. f1 c- f2 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f2 f4 f3 f0 c$ cvsum * * part c.. f1 f4 f3 f0 c==> b0 b1 f5
- |- (((!x. (((m <= x) /\ (x <= p)) ==> (((f x) $ i) = ((f x) $ i)))) ==> (((sum (m .. p)) (\x. ((f x) $ i))) = ((sum (m .. p)) (\x. ((f x) $ i))))) = (((sum (m .. p)) (\x. ((f x) $ i))) = ((sum (m .. p)) (\x. ((f x) $ i)))))
T c= c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= c$ * f2 b0 f3 c$ * f2 b0 f3 c= csum * * part c.. f0 f1 / c$ * f2 b0 f3 csum * * part c.. f0 f1 / c$ * f2 b0 f3 c= csum * * part c.. f0 f1 / c$ * f2 b0 f3 csum * * part c.. f0 f1 / c$ * f2 b0 f3
+ |- ((\y. (!i. ((((vector_add x) y) $ i) = ((real_add (x $ i)) (y $ i))))) y)
T * / ! c= c$ cvector_add f0 b0 b1 creal_add c$ f0 b1 c$ b0 b1 f1
- |- (((!x. ((x IN (m .. p)) ==> (((f x) $ i) = ((f x) $ i)))) ==> (((sum (m .. p)) (\x. ((f x) $ i))) = ((sum (m .. p)) (\x. ((f x) $ i))))) = (((sum (m .. p)) (\x. ((f x) $ i))) = ((sum (m .. p)) (\x. ((f x) $ i)))))
T c= c==> ! c==> cIN b0 * * part c.. f0 f1 c= c$ * f2 b0 f3 c$ * f2 b0 f3 c= csum * * part c.. f0 f1 / c$ * f2 b0 f3 csum * * part c.. f0 f1 / c$ * f2 b0 f3 c= csum * * part c.. f0 f1 / c$ * f2 b0 f3 csum * * part c.. f0 f1 / c$ * f2 b0 f3
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))), (((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i)) = T))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c/\ c< cNUMERAL c_0 f1 c/\ c<= f2 f1 c<= f1 c+ f3 cNUMERAL cBIT1 c_0 c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= c$ cvector_add cvsum * * part c.. f2 c- f1 cNUMERAL cBIT1 c_0 f4 cvsum * * part c.. f1 f3 f4 f0 c$ cvsum * * part c.. f2 f3 f4 f0 cT
- |- (((!g. ((!x. ((x IN (m .. (n - (NUMERAL (BIT1 _0))))) ==> (((f x) $ i) = (g x)))) ==> (((sum (m .. (n - (NUMERAL (BIT1 _0))))) (\x. ((f x) $ i))) = ((sum (m .. (n - (NUMERAL (BIT1 _0))))) g)))) ==> ((\g. ((!x. ((x IN (m .. (n - (NUMERAL (BIT1 _0))))) ==> (((f x) $ i) = (g x)))) ==> (((sum (m .. (n - (NUMERAL (BIT1 _0))))) (\x. ((f x) $ i))) = ((sum (m .. (n - (NUMERAL (BIT1 _0))))) g)))) g)) = ((\g. ((!x. ((x IN (m .. (n - (NUMERAL (BIT1 _0))))) ==> (((f x) $ i) = (g x)))) ==> (((sum (m .. (n - (NUMERAL (BIT1 _0))))) (\x. ((f x) $ i))) = ((sum (m .. (n - (NUMERAL (BIT1 _0))))) g)))) g))
T c= c==> ! c==> ! c==> cIN b1 * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 c= c$ * f2 b1 f3 * b0 b1 c= csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 / c$ * f2 b1 f3 csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 b0 * / c==> ! c==> cIN b1 * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 c= c$ * f2 b1 f3 * b0 b1 c= csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 / c$ * f2 b1 f3 csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 b0 f4 * / c==> ! c==> cIN b1 * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 c= c$ * f2 b1 f3 * b0 b1 c= csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 / c$ * f2 b1 f3 csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 b0 f4
- |- (((!x. ((x IN (m .. (n - (NUMERAL (BIT1 _0))))) ==> (((f x) $ i) = ((f x) $ i)))) ==> (((sum (m .. (n - (NUMERAL (BIT1 _0))))) (\x. ((f x) $ i))) = ((sum (m .. (n - (NUMERAL (BIT1 _0))))) (\x. ((f x) $ i))))) = (((sum (m .. (n - (NUMERAL (BIT1 _0))))) (\x. ((f x) $ i))) = ((sum (m .. (n - (NUMERAL (BIT1 _0))))) (\x. ((f x) $ i)))))
T c= c==> ! c==> cIN b0 * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 c= c$ * f2 b0 f3 c$ * f2 b0 f3 c= csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 / c$ * f2 b0 f3 csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 / c$ * f2 b0 f3 c= csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 / c$ * f2 b0 f3 csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 / c$ * f2 b0 f3
- |- (((!x. (((m <= x) /\ (x <= (n - (NUMERAL (BIT1 _0))))) ==> (((f x) $ i) = ((f x) $ i)))) ==> (((sum (m .. (n - (NUMERAL (BIT1 _0))))) (\x. ((f x) $ i))) = ((sum (m .. (n - (NUMERAL (BIT1 _0))))) (\x. ((f x) $ i))))) = (((sum (m .. (n - (NUMERAL (BIT1 _0))))) (\x. ((f x) $ i))) = ((sum (m .. (n - (NUMERAL (BIT1 _0))))) (\x. ((f x) $ i)))))
T c= c==> ! c==> c/\ c<= f0 b0 c<= b0 c- f1 cNUMERAL cBIT1 c_0 c= c$ * f2 b0 f3 c$ * f2 b0 f3 c= csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 / c$ * f2 b0 f3 csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 / c$ * f2 b0 f3 c= csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 / c$ * f2 b0 f3 csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 / c$ * f2 b0 f3
- |- ((\g. ((!x. ((x IN (m .. p)) ==> (((f x) $ i) = (g x)))) ==> (((sum (m .. p)) (\x. ((f x) $ i))) = ((sum (m .. p)) g)))) g)
T * / c==> ! c==> cIN b1 * * part c.. f0 f1 c= c$ * f2 b1 f3 * b0 b1 c= csum * * part c.. f0 f1 / c$ * f2 b1 f3 csum * * part c.. f0 f1 b0 f4
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> q')))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= c$ cvector_add cvsum * * part c.. f1 c- f2 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f2 f4 f3 f0 c$ cvsum * * part c.. f1 f4 f3 f0 f5 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvsum * * part c.. f1 c- f2 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f2 f4 f3 f0 c$ cvsum * * part c.. f1 f4 f3 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f5
+ |- (((!p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ cvector_add cvsum * * part c.. f1 c- f2 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f2 f4 f3 f0 c$ cvsum * * part c.. f1 f4 f3 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvsum * * part c.. f1 c- f2 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f2 f4 f3 f0 c$ cvsum * * part c.. f1 f4 f3 f0 c==> b0 b1 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ cvector_add cvsum * * part c.. f1 c- f2 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f2 f4 f3 f0 c$ cvsum * * part c.. f1 f4 f3 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvsum * * part c.. f1 c- f2 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f2 f4 f3 f0 c$ cvsum * * part c.. f1 f4 f3 f0 c==> b0 b1 f5 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ cvector_add cvsum * * part c.. f1 c- f2 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f2 f4 f3 f0 c$ cvsum * * part c.. f1 f4 f3 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvsum * * part c.. f1 c- f2 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f2 f4 f3 f0 c$ cvsum * * part c.. f1 f4 f3 f0 c==> b0 b1 f5
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
- |- ((\g. ((!x. (((m <= x) /\ (x <= (n - (NUMERAL (BIT1 _0))))) ==> (((f x) $ i) = (g x)))) ==> (((sum (m .. (n - (NUMERAL (BIT1 _0))))) (\x. ((f x) $ i))) = ((sum (m .. (n - (NUMERAL (BIT1 _0))))) g)))) g)
T * / c==> ! c==> c/\ c<= f0 b1 c<= b1 c- f1 cNUMERAL cBIT1 c_0 c= c$ * f2 b1 f3 * b0 b1 c= csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 / c$ * f2 b1 f3 csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 b0 f4
+ |- (((!f. (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vsum s) f) $ i) = ((sum s) (\x. ((f x) $ i))))))) ==> ((\f. (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vsum s) f) $ i) = ((sum s) (\x. ((f x) $ i))))))) f)) = ((\f. (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vsum s) f) $ i) = ((sum s) (\x. ((f x) $ i))))))) f))
T c= c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ cvsum f0 b0 b1 csum f0 / c$ * b0 b2 b1 * / ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ cvsum f0 b0 b1 csum f0 / c$ * b0 b2 b1 f1 * / ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ cvsum f0 b0 b1 csum f0 / c$ * b0 b2 b1 f1
+ (((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i)) = T))
T c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f3 c<= f3 cdimindex part cUNIV c= c= c$ cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f4 cvsum * * part c.. f0 f2 f4 f3 c$ cvsum * * part c.. f1 f2 f4 f3 cT
+ |- ((\f. (!m. (!n. (!p. ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((real_add ((sum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((sum (n .. p)) f)) = ((sum (m .. p)) f))))))) f)
T * / ! ! ! c==> c/\ c< cNUMERAL c_0 b2 c/\ c<= b1 b2 c<= b2 c+ b3 cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. b1 c- b2 cNUMERAL cBIT1 c_0 b0 csum * * part c.. b2 b3 b0 csum * * part c.. b1 b3 b0 f0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((((m <= x) /\ (x <= p)) ==> (((f x) $ i) = ((f x) $ i))) = T)
T c= c==> c/\ c<= f0 f1 c<= f1 f2 c= c$ * f3 f1 f4 c$ * f3 f1 f4 cT
+ |- ((((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) = (((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0))))))) ==> (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f)) = q')) ==> (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f))) = ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> q')))) = (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f)) = q')) ==> (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f))) = ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> q'))))
T c= c==> c= c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c==> c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f0 f2 f3 cvsum * * part c.. f1 f2 f3 f4 c= c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f0 f2 f3 cvsum * * part c.. f1 f2 f3 c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 f4 c==> c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f0 f2 f3 cvsum * * part c.. f1 f2 f3 f4 c= c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f0 f2 f3 cvsum * * part c.. f1 f2 f3 c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 f4
+ |- ((!i. t) = t)
T c= ! f0 f0
- (((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) |- (T = (((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))))
T c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= cT c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vsum s) f) $ i) = ((sum s) (\x. ((f x) $ i)))))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvsum f0 f1 b0 csum f0 / c$ * f1 b1 b0 f2
- (x IN (m .. (n - (NUMERAL (BIT1 _0))))) |- ((x IN (m .. (n - (NUMERAL (BIT1 _0))))) /\ (((f x) $ i) = ((f x) $ i)))
T c==> cIN f0 * * part c.. f1 c- f2 cNUMERAL cBIT1 c_0 c/\ cIN f0 * * part c.. f1 c- f2 cNUMERAL cBIT1 c_0 c= c$ * f3 f0 f4 c$ * f3 f0 f4
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- (((NUMERAL (BIT1 _0)) <= i) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c<= cNUMERAL cBIT1 c_0 f0 cT
- |- ((!x. (((m <= x) /\ (x <= (n - (NUMERAL (BIT1 _0))))) ==> (((f x) $ i) = (g x)))) ==> (((sum (m .. (n - (NUMERAL (BIT1 _0))))) (\x. ((f x) $ i))) = ((sum (m .. (n - (NUMERAL (BIT1 _0))))) g)))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 c- f1 cNUMERAL cBIT1 c_0 c= c$ * f2 b0 f3 * f4 b0 c= csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 / c$ * f2 b0 f3 csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 f4
+ |- (T = (!f. (!m. (!n. (!p. ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f))))))))
T c= cT ! ! ! ! c==> c/\ c< cNUMERAL c_0 b2 c/\ c<= b1 b2 c<= b2 c+ b3 cNUMERAL cBIT1 c_0 c= cvector_add cvsum * * part c.. b1 c- b2 cNUMERAL cBIT1 c_0 b0 cvsum * * part c.. b2 b3 b0 cvsum * * part c.. b1 b3 b0
+ |- ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ cvector_add cvsum * * part c.. f2 c- f3 cNUMERAL cBIT1 c_0 f4 cvsum * * part c.. f3 f5 f4 f0 c$ cvsum * * part c.. f2 f5 f4 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvsum * * part c.. f2 c- f3 cNUMERAL cBIT1 c_0 f4 cvsum * * part c.. f3 f5 f4 f0 c$ cvsum * * part c.. f2 f5 f4 f0 c==> f1 b0 f6
- |- (!x. ((x IN (m .. (n - (NUMERAL (BIT1 _0))))) ==> (((f x) $ i) = ((f x) $ i))))
T c==> cIN f0 * * part c.. f1 c- f2 cNUMERAL cBIT1 c_0 c= c$ * f3 f0 f4 c$ * f3 f0 f4
- |- (((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((sum s) (\x. (f x))) = ((sum s) g))) = T)
T c= c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= csum f0 / * f1 b0 csum f0 f2 cT
+ |- (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f))) = ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> T))
T c= c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f0 f2 f3 cvsum * * part c.. f1 f2 f3 c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 cT
- (((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) |- ((m <= n) = T)
T c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= c<= f1 f0 cT
+ |- (((!i. ((((vector_add x) y) $ i) = ((real_add (x $ i)) (y $ i)))) ==> ((\i. ((((vector_add x) y) $ i) = ((real_add (x $ i)) (y $ i)))) i)) = ((\i. ((((vector_add x) y) $ i) = ((real_add (x $ i)) (y $ i)))) i))
T c= c==> ! c= c$ cvector_add f0 f1 b0 creal_add c$ f0 b0 c$ f1 b0 * / c= c$ cvector_add f0 f1 b0 creal_add c$ f0 b0 c$ f1 b0 f2 * / c= c$ cvector_add f0 f1 b0 creal_add c$ f0 b0 c$ f1 b0 f2
+ |- (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f)) = q')) ==> (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f))) = ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> q')))
T c==> c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f0 f2 f3 cvsum * * part c.. f1 f2 f3 f4 c= c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f0 f2 f3 cvsum * * part c.. f1 f2 f3 c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 f4
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f) $ i) = ((sum (m .. (n - (NUMERAL (BIT1 _0))))) (\x. ((f x) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvsum * * part c.. f1 c- f2 cNUMERAL cBIT1 c_0 f3 f0 csum * * part c.. f1 c- f2 cNUMERAL cBIT1 c_0 / c$ * f3 b0 f0
+ (((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> T))
T c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f3 c<= f3 cdimindex part cUNIV c= c$ cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f4 cvsum * * part c.. f0 f2 f4 f3 c$ cvsum * * part c.. f1 f2 f4 f3 c==> c/\ c<= cNUMERAL cBIT1 c_0 f3 c<= f3 cdimindex part cUNIV cT
- |- (!x. (((m <= x) /\ (x <= (n - (NUMERAL (BIT1 _0))))) ==> (((f x) $ i) = ((f x) $ i))))
T c==> c/\ c<= f0 f1 c<= f1 c- f2 cNUMERAL cBIT1 c_0 c= c$ * f3 f1 f4 c$ * f3 f1 f4
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
- |- (((!g. ((!x. (((m <= x) /\ (x <= (n - (NUMERAL (BIT1 _0))))) ==> (((f x) $ i) = (g x)))) ==> (((sum (m .. (n - (NUMERAL (BIT1 _0))))) (\x. ((f x) $ i))) = ((sum (m .. (n - (NUMERAL (BIT1 _0))))) g)))) ==> ((\g. ((!x. (((m <= x) /\ (x <= (n - (NUMERAL (BIT1 _0))))) ==> (((f x) $ i) = (g x)))) ==> (((sum (m .. (n - (NUMERAL (BIT1 _0))))) (\x. ((f x) $ i))) = ((sum (m .. (n - (NUMERAL (BIT1 _0))))) g)))) g)) = ((\g. ((!x. (((m <= x) /\ (x <= (n - (NUMERAL (BIT1 _0))))) ==> (((f x) $ i) = (g x)))) ==> (((sum (m .. (n - (NUMERAL (BIT1 _0))))) (\x. ((f x) $ i))) = ((sum (m .. (n - (NUMERAL (BIT1 _0))))) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= f0 b1 c<= b1 c- f1 cNUMERAL cBIT1 c_0 c= c$ * f2 b1 f3 * b0 b1 c= csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 / c$ * f2 b1 f3 csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 b0 * / c==> ! c==> c/\ c<= f0 b1 c<= b1 c- f1 cNUMERAL cBIT1 c_0 c= c$ * f2 b1 f3 * b0 b1 c= csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 / c$ * f2 b1 f3 csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 b0 f4 * / c==> ! c==> c/\ c<= f0 b1 c<= b1 c- f1 cNUMERAL cBIT1 c_0 c= c$ * f2 b1 f3 * b0 b1 c= csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 / c$ * f2 b1 f3 csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 b0 f4
+ |- (((!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i))) = (p' ==> q'))))) ==> ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i))) = (p' ==> q'))))) q')) = ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ cvector_add cvsum * * part c.. f2 c- f3 cNUMERAL cBIT1 c_0 f4 cvsum * * part c.. f3 f5 f4 f0 c$ cvsum * * part c.. f2 f5 f4 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvsum * * part c.. f2 c- f3 cNUMERAL cBIT1 c_0 f4 cvsum * * part c.. f3 f5 f4 f0 c$ cvsum * * part c.. f2 f5 f4 f0 c==> f1 b0 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ cvector_add cvsum * * part c.. f2 c- f3 cNUMERAL cBIT1 c_0 f4 cvsum * * part c.. f3 f5 f4 f0 c$ cvsum * * part c.. f2 f5 f4 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvsum * * part c.. f2 c- f3 cNUMERAL cBIT1 c_0 f4 cvsum * * part c.. f3 f5 f4 f0 c$ cvsum * * part c.. f2 f5 f4 f0 c==> f1 b0 f6 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ cvector_add cvsum * * part c.. f2 c- f3 cNUMERAL cBIT1 c_0 f4 cvsum * * part c.. f3 f5 f4 f0 c$ cvsum * * part c.. f2 f5 f4 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvsum * * part c.. f2 c- f3 cNUMERAL cBIT1 c_0 f4 cvsum * * part c.. f3 f5 f4 f0 c$ cvsum * * part c.. f2 f5 f4 f0 c==> f1 b0 f6
+ |- ((\p. ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((real_add ((sum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((sum (n .. p)) f)) = ((sum (m .. p)) f)))) p)
T * / c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ b0 cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f2 csum * * part c.. f0 b0 f2 csum * * part c.. f1 b0 f2 f3
- ((m <= x) /\ (x <= (n - (NUMERAL (BIT1 _0))))) |- ((x <= (n - (NUMERAL (BIT1 _0)))) = T)
T c==> c/\ c<= f0 f1 c<= f1 c- f2 cNUMERAL cBIT1 c_0 c= c<= f1 c- f2 cNUMERAL cBIT1 c_0 cT
+ |- (((!m. (!n. (!p. ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((real_add ((sum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((sum (n .. p)) f)) = ((sum (m .. p)) f)))))) ==> ((\m. (!n. (!p. ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((real_add ((sum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((sum (n .. p)) f)) = ((sum (m .. p)) f)))))) m)) = ((\m. (!n. (!p. ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((real_add ((sum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((sum (n .. p)) f)) = ((sum (m .. p)) f)))))) m))
T c= c==> ! ! ! c==> c/\ c< cNUMERAL c_0 b1 c/\ c<= b0 b1 c<= b1 c+ b2 cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. b0 c- b1 cNUMERAL cBIT1 c_0 f0 csum * * part c.. b1 b2 f0 csum * * part c.. b0 b2 f0 * / ! ! c==> c/\ c< cNUMERAL c_0 b1 c/\ c<= b0 b1 c<= b1 c+ b2 cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. b0 c- b1 cNUMERAL cBIT1 c_0 f0 csum * * part c.. b1 b2 f0 csum * * part c.. b0 b2 f0 f1 * / ! ! c==> c/\ c< cNUMERAL c_0 b1 c/\ c<= b0 b1 c<= b1 c+ b2 cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. b0 c- b1 cNUMERAL cBIT1 c_0 f0 csum * * part c.. b1 b2 f0 csum * * part c.. b0 b2 f0 f1
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ ((((vsum s) f) $ i) = ((sum s) (\x. ((f x) $ i)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvsum f1 f2 f0 csum f1 / c$ * f2 b0 f0
- (x IN (m .. (n - (NUMERAL (BIT1 _0))))) |- ((x IN (m .. (n - (NUMERAL (BIT1 _0))))) = T)
T c==> cIN f0 * * part c.. f1 c- f2 cNUMERAL cBIT1 c_0 c= cIN f0 * * part c.. f1 c- f2 cNUMERAL cBIT1 c_0 cT
+ (((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) |- (((real_add ((sum (m .. (n - (NUMERAL (BIT1 _0))))) (\x. ((f x) $ i)))) ((sum (n .. p)) (\x. ((f x) $ i)))) = ((sum (m .. p)) (\x. ((f x) $ i))))
T c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 / c$ * f3 b0 f4 csum * * part c.. f0 f2 / c$ * f3 b0 f4 csum * * part c.. f1 f2 / c$ * f3 b0 f4
- |- (((sum (m .. (n - (NUMERAL (BIT1 _0))))) (\x. ((f x) $ i))) = ((sum (m .. (n - (NUMERAL (BIT1 _0))))) (\x. ((f x) $ i))))
T c= csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 / c$ * f2 b0 f3 csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 / c$ * f2 b0 f3
- |- (!x. ((x IN (m .. p)) ==> (((f x) $ i) = ((f x) $ i))))
T c==> cIN f0 * * part c.. f1 f2 c= c$ * f3 f0 f4 c$ * f3 f0 f4
+ |- (((!y. (!i. ((((vector_add x) y) $ i) = ((real_add (x $ i)) (y $ i))))) ==> ((\y. (!i. ((((vector_add x) y) $ i) = ((real_add (x $ i)) (y $ i))))) y)) = ((\y. (!i. ((((vector_add x) y) $ i) = ((real_add (x $ i)) (y $ i))))) y))
T c= c==> ! ! c= c$ cvector_add f0 b0 b1 creal_add c$ f0 b1 c$ b0 b1 * / ! c= c$ cvector_add f0 b0 b1 creal_add c$ f0 b1 c$ b0 b1 f1 * / ! c= c$ cvector_add f0 b0 b1 creal_add c$ f0 b1 c$ b0 b1 f1
+ |- ((((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f)) = T)) ==> (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f))) = ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> T))) = (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f))) = ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> T)))
T c= c==> c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f0 f2 f3 cvsum * * part c.. f1 f2 f3 cT c= c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f0 f2 f3 cvsum * * part c.. f1 f2 f3 c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 cT c= c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f0 f2 f3 cvsum * * part c.. f1 f2 f3 c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 cT
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((\g. ((!x. ((x IN (m .. (n - (NUMERAL (BIT1 _0))))) ==> (((f x) $ i) = (g x)))) ==> (((sum (m .. (n - (NUMERAL (BIT1 _0))))) (\x. ((f x) $ i))) = ((sum (m .. (n - (NUMERAL (BIT1 _0))))) g)))) g)
T * / c==> ! c==> cIN b1 * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 c= c$ * f2 b1 f3 * b0 b1 c= csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 / c$ * f2 b1 f3 csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 b0 f4
- |- (((x IN (m .. (n - (NUMERAL (BIT1 _0))))) ==> (((f x) $ i) = ((f x) $ i))) = T)
T c= c==> cIN f0 * * part c.. f1 c- f2 cNUMERAL cBIT1 c_0 c= c$ * f3 f0 f4 c$ * f3 f0 f4 cT
+ (((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) |- ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) /\ ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f)) = T))
T c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c/\ c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f0 f2 f3 cvsum * * part c.. f1 f2 f3 cT
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV)))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> q')))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> q'))))
T c= c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= c$ cvector_add cvsum * * part c.. f1 c- f2 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f2 f4 f3 f0 c$ cvsum * * part c.. f1 f4 f3 f0 f5 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvsum * * part c.. f1 c- f2 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f2 f4 f3 f0 c$ cvsum * * part c.. f1 f4 f3 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f5 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= c$ cvector_add cvsum * * part c.. f1 c- f2 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f2 f4 f3 f0 c$ cvsum * * part c.. f1 f4 f3 f0 f5 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvsum * * part c.. f1 c- f2 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f2 f4 f3 f0 c$ cvsum * * part c.. f1 f4 f3 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f5
- |- ((!x. ((x IN (m .. (n - (NUMERAL (BIT1 _0))))) ==> (((f x) $ i) = ((f x) $ i)))) ==> (((sum (m .. (n - (NUMERAL (BIT1 _0))))) (\x. ((f x) $ i))) = ((sum (m .. (n - (NUMERAL (BIT1 _0))))) (\x. ((f x) $ i)))))
T c==> ! c==> cIN b0 * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 c= c$ * f2 b0 f3 c$ * f2 b0 f3 c= csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 / c$ * f2 b0 f3 csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 / c$ * f2 b0 f3
- |- ((!x. (((m <= x) /\ (x <= (n - (NUMERAL (BIT1 _0))))) ==> (((f x) $ i) = ((f x) $ i)))) ==> (((sum (m .. (n - (NUMERAL (BIT1 _0))))) (\x. ((f x) $ i))) = ((sum (m .. (n - (NUMERAL (BIT1 _0))))) (\x. ((f x) $ i)))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 c- f1 cNUMERAL cBIT1 c_0 c= c$ * f2 b0 f3 c$ * f2 b0 f3 c= csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 / c$ * f2 b0 f3 csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 / c$ * f2 b0 f3
+ |- (((!s. (!f. (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vsum s) f) $ i) = ((sum s) (\x. ((f x) $ i)))))))) ==> ((\s. (!f. (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vsum s) f) $ i) = ((sum s) (\x. ((f x) $ i)))))))) s)) = ((\s. (!f. (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vsum s) f) $ i) = ((sum s) (\x. ((f x) $ i)))))))) s))
T c= c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV c= c$ cvsum b0 b1 b2 csum b0 / c$ * b1 b3 b2 * / ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV c= c$ cvsum b0 b1 b2 csum b0 / c$ * b1 b3 b2 f0 * / ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV c= c$ cvsum b0 b1 b2 csum b0 / c$ * b1 b3 b2 f0
- ((m <= x) /\ (x <= p)) |- ((m <= x) = T)
T c==> c/\ c<= f0 f1 c<= f1 f2 c= c<= f0 f1 cT
- ((m <= x) /\ (x <= p)) |- ((x <= p) = T)
T c==> c/\ c<= f0 f1 c<= f1 f2 c= c<= f1 f2 cT
- ((m <= x) /\ (x <= (n - (NUMERAL (BIT1 _0))))) |- (((m <= x) /\ (x <= (n - (NUMERAL (BIT1 _0))))) /\ (((f x) $ i) = ((f x) $ i)))
T c==> c/\ c<= f0 f1 c<= f1 c- f2 cNUMERAL cBIT1 c_0 c/\ c/\ c<= f0 f1 c<= f1 c- f2 cNUMERAL cBIT1 c_0 c= c$ * f3 f1 f4 c$ * f3 f1 f4
- |- (((!x. (((a <= x) /\ (x <= b)) ==> ((f x) = (g x)))) ==> (((sum (a .. b)) (\x. (f x))) = ((sum (a .. b)) g))) = T)
T c= c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 / * f2 b0 csum * * part c.. f0 f1 f3 cT
+ |- ((\n. (!p. ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((real_add ((sum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((sum (n .. p)) f)) = ((sum (m .. p)) f))))) n)
T * / ! c==> c/\ c< cNUMERAL c_0 b0 c/\ c<= f0 b0 c<= b0 c+ b1 cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. f0 c- b0 cNUMERAL cBIT1 c_0 f1 csum * * part c.. b0 b1 f1 csum * * part c.. f0 b1 f1 f2
- |- (((sum (m .. p)) (\x. ((f x) $ i))) = ((sum (m .. p)) (\x. ((f x) $ i))))
T c= csum * * part c.. f0 f1 / c$ * f2 b0 f3 csum * * part c.. f0 f1 / c$ * f2 b0 f3
- |- ((!x. ((x IN (m .. p)) ==> (((f x) $ i) = (g x)))) ==> (((sum (m .. p)) (\x. ((f x) $ i))) = ((sum (m .. p)) g)))
T c==> ! c==> cIN b0 * * part c.. f0 f1 c= c$ * f2 b0 f3 * f4 b0 c= csum * * part c.. f0 f1 / c$ * f2 b0 f3 csum * * part c.. f0 f1 f4
- |- ((\g. ((!x. (((m <= x) /\ (x <= p)) ==> (((f x) $ i) = (g x)))) ==> (((sum (m .. p)) (\x. ((f x) $ i))) = ((sum (m .. p)) g)))) g)
T * / c==> ! c==> c/\ c<= f0 b1 c<= b1 f1 c= c$ * f2 b1 f3 * b0 b1 c= csum * * part c.. f0 f1 / c$ * f2 b1 f3 csum * * part c.. f0 f1 b0 f4
- |- ((((m <= x) /\ (x <= (n - (NUMERAL (BIT1 _0))))) ==> (((f x) $ i) = ((f x) $ i))) = T)
T c= c==> c/\ c<= f0 f1 c<= f1 c- f2 cNUMERAL cBIT1 c_0 c= c$ * f3 f1 f4 c$ * f3 f1 f4 cT
- (((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) |- ((n <= (p + (NUMERAL (BIT1 _0)))) = T)
T c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= c<= f0 c+ f2 cNUMERAL cBIT1 c_0 cT
- ((m <= x) /\ (x <= p)) |- (((m <= x) /\ (x <= p)) /\ (((f x) $ i) = ((f x) $ i)))
T c==> c/\ c<= f0 f1 c<= f1 f2 c/\ c/\ c<= f0 f1 c<= f1 f2 c= c$ * f3 f1 f4 c$ * f3 f1 f4
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((i <= (dimindex UNIV)) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c<= f0 cdimindex part cUNIV cT
- |- (!g. ((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((sum s) (\x. (f x))) = ((sum s) g))))
T c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= csum f0 / * f1 b0 csum f0 f2
- |- ((!x. ((x IN (m .. p)) ==> (((f x) $ i) = ((f x) $ i)))) ==> (((sum (m .. p)) (\x. ((f x) $ i))) = ((sum (m .. p)) (\x. ((f x) $ i)))))
T c==> ! c==> cIN b0 * * part c.. f0 f1 c= c$ * f2 b0 f3 c$ * f2 b0 f3 c= csum * * part c.. f0 f1 / c$ * f2 b0 f3 csum * * part c.. f0 f1 / c$ * f2 b0 f3
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((vsum (m .. p)) f) $ i) = ((sum (m .. p)) (\x. ((f x) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvsum * * part c.. f1 f2 f3 f0 csum * * part c.. f1 f2 / c$ * f3 b0 f0
- |- (!g. ((!x. (((a <= x) /\ (x <= b)) ==> ((f x) = (g x)))) ==> (((sum (a .. b)) (\x. (f x))) = ((sum (a .. b)) g))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 / * f2 b0 csum * * part c.. f0 f1 f3
+ |- (((!p'. (!q'. (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) = p') ==> ((p' ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f)) = q')) ==> (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) = p') ==> ((p' ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f)) = q')) ==> (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) = p') ==> ((p' ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f)) = q')) ==> (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f0 f2 f3 cvsum * * part c.. f1 f2 f3 b1 c= c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f0 f2 f3 cvsum * * part c.. f1 f2 f3 c==> b0 b1 * / ! c==> c= c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f0 f2 f3 cvsum * * part c.. f1 f2 f3 b1 c= c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f0 f2 f3 cvsum * * part c.. f1 f2 f3 c==> b0 b1 f4 * / ! c==> c= c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f0 f2 f3 cvsum * * part c.. f1 f2 f3 b1 c= c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f0 f2 f3 cvsum * * part c.. f1 f2 f3 c==> b0 b1 f4
+ |- (((!f. (!m. (!n. (!p. ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((real_add ((sum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((sum (n .. p)) f)) = ((sum (m .. p)) f))))))) ==> ((\f. (!m. (!n. (!p. ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((real_add ((sum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((sum (n .. p)) f)) = ((sum (m .. p)) f))))))) f)) = ((\f. (!m. (!n. (!p. ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((real_add ((sum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((sum (n .. p)) f)) = ((sum (m .. p)) f))))))) f))
T c= c==> ! ! ! ! c==> c/\ c< cNUMERAL c_0 b2 c/\ c<= b1 b2 c<= b2 c+ b3 cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. b1 c- b2 cNUMERAL cBIT1 c_0 b0 csum * * part c.. b2 b3 b0 csum * * part c.. b1 b3 b0 * / ! ! ! c==> c/\ c< cNUMERAL c_0 b2 c/\ c<= b1 b2 c<= b2 c+ b3 cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. b1 c- b2 cNUMERAL cBIT1 c_0 b0 csum * * part c.. b2 b3 b0 csum * * part c.. b1 b3 b0 f0 * / ! ! ! c==> c/\ c< cNUMERAL c_0 b2 c/\ c<= b1 b2 c<= b2 c+ b3 cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. b1 c- b2 cNUMERAL cBIT1 c_0 b0 csum * * part c.. b2 b3 b0 csum * * part c.. b1 b3 b0 f0
- |- ((!x. (((m <= x) /\ (x <= p)) ==> (((f x) $ i) = (g x)))) ==> (((sum (m .. p)) (\x. ((f x) $ i))) = ((sum (m .. p)) g)))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= c$ * f2 b0 f3 * f4 b0 c= csum * * part c.. f0 f1 / c$ * f2 b0 f3 csum * * part c.. f0 f1 f4
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
+ |- ((\s. (!f. (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vsum s) f) $ i) = ((sum s) (\x. ((f x) $ i)))))))) s)
T * / ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV c= c$ cvsum b0 b1 b2 csum b0 / c$ * b1 b3 b2 f0
+ |- ((\p'. (!q'. (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) = p') ==> ((p' ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f)) = q')) ==> (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f0 f2 f3 cvsum * * part c.. f1 f2 f3 b1 c= c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f0 f2 f3 cvsum * * part c.. f1 f2 f3 c==> b0 b1 f4
+ |- ((\f. (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vsum s) f) $ i) = ((sum s) (\x. ((f x) $ i))))))) f)
T * / ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ cvsum f0 b0 b1 csum f0 / c$ * b0 b2 b1 f1
+ |- (((!x. (!y. (!i. ((((vector_add x) y) $ i) = ((real_add (x $ i)) (y $ i)))))) ==> ((\x. (!y. (!i. ((((vector_add x) y) $ i) = ((real_add (x $ i)) (y $ i)))))) x)) = ((\x. (!y. (!i. ((((vector_add x) y) $ i) = ((real_add (x $ i)) (y $ i)))))) x))
T c= c==> ! ! ! c= c$ cvector_add b0 b1 b2 creal_add c$ b0 b2 c$ b1 b2 * / ! ! c= c$ cvector_add b0 b1 b2 creal_add c$ b0 b2 c$ b1 b2 f0 * / ! ! c= c$ cvector_add b0 b1 b2 creal_add c$ b0 b2 c$ b1 b2 f0
- (((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) |- (m <= n)
T c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c<= f1 f0
+ |- ((\x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i))))))) x)
T * / ! c= c= b0 b1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV c= c$ b0 b2 c$ b1 b2 f0
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i))) = (p' ==> q'))))
T c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ cvector_add cvsum * * part c.. f2 c- f3 cNUMERAL cBIT1 c_0 f4 cvsum * * part c.. f3 f5 f4 f0 c$ cvsum * * part c.. f2 f5 f4 f0 f6 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvsum * * part c.. f2 c- f3 cNUMERAL cBIT1 c_0 f4 cvsum * * part c.. f3 f5 f4 f0 c$ cvsum * * part c.. f2 f5 f4 f0 c==> f1 f6
+ |- ((\q'. (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) = p') ==> ((p' ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f)) = q')) ==> (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 f3 c==> c==> f3 c= c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f4 cvsum * * part c.. f0 f2 f4 cvsum * * part c.. f1 f2 f4 b0 c= c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f4 cvsum * * part c.. f0 f2 f4 cvsum * * part c.. f1 f2 f4 c==> f3 b0 f5
+ (((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i)) = T)) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> T))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) $ i) = (((vsum (m .. p)) f) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> T)))
T c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f3 c<= f3 cdimindex part cUNIV c= c= c$ cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f4 cvsum * * part c.. f0 f2 f4 f3 c$ cvsum * * part c.. f1 f2 f4 f3 cT c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f3 c<= f3 cdimindex part cUNIV c= c$ cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f4 cvsum * * part c.. f0 f2 f4 f3 c$ cvsum * * part c.. f1 f2 f4 f3 c==> c/\ c<= cNUMERAL cBIT1 c_0 f3 c<= f3 cdimindex part cUNIV cT c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f3 c<= f3 cdimindex part cUNIV c= c$ cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f4 cvsum * * part c.. f0 f2 f4 f3 c$ cvsum * * part c.. f1 f2 f4 f3 c==> c/\ c<= cNUMERAL cBIT1 c_0 f3 c<= f3 cdimindex part cUNIV cT
- |- (((x IN (m .. p)) ==> (((f x) $ i) = ((f x) $ i))) = T)
T c= c==> cIN f0 * * part c.. f1 f2 c= c$ * f3 f0 f4 c$ * f3 f0 f4 cT
+ |- ((\y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))) y)
T * / c= c= f0 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ f0 b1 c$ b0 b1 f1
- |- (((!g. ((!x. ((x IN (m .. p)) ==> (((f x) $ i) = (g x)))) ==> (((sum (m .. p)) (\x. ((f x) $ i))) = ((sum (m .. p)) g)))) ==> ((\g. ((!x. ((x IN (m .. p)) ==> (((f x) $ i) = (g x)))) ==> (((sum (m .. p)) (\x. ((f x) $ i))) = ((sum (m .. p)) g)))) g)) = ((\g. ((!x. ((x IN (m .. p)) ==> (((f x) $ i) = (g x)))) ==> (((sum (m .. p)) (\x. ((f x) $ i))) = ((sum (m .. p)) g)))) g))
T c= c==> ! c==> ! c==> cIN b1 * * part c.. f0 f1 c= c$ * f2 b1 f3 * b0 b1 c= csum * * part c.. f0 f1 / c$ * f2 b1 f3 csum * * part c.. f0 f1 b0 * / c==> ! c==> cIN b1 * * part c.. f0 f1 c= c$ * f2 b1 f3 * b0 b1 c= csum * * part c.. f0 f1 / c$ * f2 b1 f3 csum * * part c.. f0 f1 b0 f4 * / c==> ! c==> cIN b1 * * part c.. f0 f1 c= c$ * f2 b1 f3 * b0 b1 c= csum * * part c.. f0 f1 / c$ * f2 b1 f3 csum * * part c.. f0 f1 b0 f4
+ |- (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) = p') ==> ((p' ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f)) = q')) ==> (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f))) = (p' ==> q'))))
T c==> c= c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 f3 c==> c==> f3 c= c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f4 cvsum * * part c.. f0 f2 f4 cvsum * * part c.. f1 f2 f4 f5 c= c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f4 cvsum * * part c.. f0 f2 f4 cvsum * * part c.. f1 f2 f4 c==> f3 f5
- (((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) |- (n <= (p + (NUMERAL (BIT1 _0))))
T c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0
+ |- ((\x. (!y. (!i. ((((vector_add x) y) $ i) = ((real_add (x $ i)) (y $ i)))))) x)
T * / ! ! c= c$ cvector_add b0 b1 b2 creal_add c$ b0 b2 c$ b1 b2 f0
- |- (!x. (((m <= x) /\ (x <= p)) ==> (((f x) $ i) = ((f x) $ i))))
T c==> c/\ c<= f0 f1 c<= f1 f2 c= c$ * f3 f1 f4 c$ * f3 f1 f4
+ |- ((\m. (!n. (!p. ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((real_add ((sum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((sum (n .. p)) f)) = ((sum (m .. p)) f)))))) m)
T * / ! ! c==> c/\ c< cNUMERAL c_0 b1 c/\ c<= b0 b1 c<= b1 c+ b2 cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. b0 c- b1 cNUMERAL cBIT1 c_0 f0 csum * * part c.. b1 b2 f0 csum * * part c.. b0 b2 f0 f1
+ |- (!p'. (!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3
- (x IN (m .. p)) |- ((x IN (m .. p)) = T)
T c==> cIN f0 * * part c.. f1 f2 c= cIN f0 * * part c.. f1 f2 cT
+ |- (((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q')))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3 cT
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- (T = (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= cT c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV
- (((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) |- ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) /\ (((real_add ((sum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((sum (n .. p)) f)) = ((sum (m .. p)) f)))
T c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c/\ c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f3 csum * * part c.. f0 f2 f3 csum * * part c.. f1 f2 f3
- |- ((T /\ t) = t)
T c= c/\ cT f0 f0
+ |- (((!p. ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((real_add ((sum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((sum (n .. p)) f)) = ((sum (m .. p)) f)))) ==> ((\p. ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((real_add ((sum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((sum (n .. p)) f)) = ((sum (m .. p)) f)))) p)) = ((\p. ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((real_add ((sum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((sum (n .. p)) f)) = ((sum (m .. p)) f)))) p))
T c= c==> ! c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ b0 cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f2 csum * * part c.. f0 b0 f2 csum * * part c.. f1 b0 f2 * / c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ b0 cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f2 csum * * part c.. f0 b0 f2 csum * * part c.. f1 b0 f2 f3 * / c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ b0 cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f2 csum * * part c.. f0 b0 f2 csum * * part c.. f1 b0 f2 f3
- |- ((!x. (((m <= x) /\ (x <= p)) ==> (((f x) $ i) = ((f x) $ i)))) ==> (((sum (m .. p)) (\x. ((f x) $ i))) = ((sum (m .. p)) (\x. ((f x) $ i)))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= c$ * f2 b0 f3 c$ * f2 b0 f3 c= csum * * part c.. f0 f1 / c$ * f2 b0 f3 csum * * part c.. f0 f1 / c$ * f2 b0 f3
- |- ((!x. ((x IN (m .. (n - (NUMERAL (BIT1 _0))))) ==> (((f x) $ i) = (g x)))) ==> (((sum (m .. (n - (NUMERAL (BIT1 _0))))) (\x. ((f x) $ i))) = ((sum (m .. (n - (NUMERAL (BIT1 _0))))) g)))
T c==> ! c==> cIN b0 * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 c= c$ * f2 b0 f3 * f4 b0 c= csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 / c$ * f2 b0 f3 csum * * part c.. f0 c- f1 cNUMERAL cBIT1 c_0 f4
+ |- (((!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))) ==> ((\y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))) y)) = ((\y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))) y))
T c= c==> ! c= c= f0 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ f0 b1 c$ b0 b1 * / c= c= f0 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ f0 b1 c$ b0 b1 f1 * / c= c= f0 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ f0 b1 c$ b0 b1 f1
+ |- (((!q'. (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) = p') ==> ((p' ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f)) = q')) ==> (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f))) = (p' ==> q'))))) ==> ((\q'. (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) = p') ==> ((p' ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f)) = q')) ==> (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f))) = (p' ==> q'))))) q')) = ((\q'. (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) = p') ==> ((p' ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f)) = q')) ==> (((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 f3 c==> c==> f3 c= c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f4 cvsum * * part c.. f0 f2 f4 cvsum * * part c.. f1 f2 f4 b0 c= c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f4 cvsum * * part c.. f0 f2 f4 cvsum * * part c.. f1 f2 f4 c==> f3 b0 * / c==> c= c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 f3 c==> c==> f3 c= c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f4 cvsum * * part c.. f0 f2 f4 cvsum * * part c.. f1 f2 f4 b0 c= c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f4 cvsum * * part c.. f0 f2 f4 cvsum * * part c.. f1 f2 f4 c==> f3 b0 f5 * / c==> c= c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 f3 c==> c==> f3 c= c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f4 cvsum * * part c.. f0 f2 f4 cvsum * * part c.. f1 f2 f4 b0 c= c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f4 cvsum * * part c.. f0 f2 f4 cvsum * * part c.. f1 f2 f4 c==> f3 b0 f5
- ((m <= x) /\ (x <= (n - (NUMERAL (BIT1 _0))))) |- ((m <= x) = T)
T c==> c/\ c<= f0 f1 c<= f1 c- f2 cNUMERAL cBIT1 c_0 c= c<= f0 f1 cT
- |- (((!g. ((!x. (((m <= x) /\ (x <= p)) ==> (((f x) $ i) = (g x)))) ==> (((sum (m .. p)) (\x. ((f x) $ i))) = ((sum (m .. p)) g)))) ==> ((\g. ((!x. (((m <= x) /\ (x <= p)) ==> (((f x) $ i) = (g x)))) ==> (((sum (m .. p)) (\x. ((f x) $ i))) = ((sum (m .. p)) g)))) g)) = ((\g. ((!x. (((m <= x) /\ (x <= p)) ==> (((f x) $ i) = (g x)))) ==> (((sum (m .. p)) (\x. ((f x) $ i))) = ((sum (m .. p)) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= f0 b1 c<= b1 f1 c= c$ * f2 b1 f3 * b0 b1 c= csum * * part c.. f0 f1 / c$ * f2 b1 f3 csum * * part c.. f0 f1 b0 * / c==> ! c==> c/\ c<= f0 b1 c<= b1 f1 c= c$ * f2 b1 f3 * b0 b1 c= csum * * part c.. f0 f1 / c$ * f2 b1 f3 csum * * part c.. f0 f1 b0 f4 * / c==> ! c==> c/\ c<= f0 b1 c<= b1 f1 c= c$ * f2 b1 f3 * b0 b1 c= csum * * part c.. f0 f1 / c$ * f2 b1 f3 csum * * part c.. f0 f1 b0 f4
+ |- ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> ((((vector_add ((vsum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((vsum (n .. p)) f)) = ((vsum (m .. p)) f)) = T))
T c==> c/\ c< cNUMERAL c_0 f0 c/\ c<= f1 f0 c<= f0 c+ f2 cNUMERAL cBIT1 c_0 c= c= cvector_add cvsum * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f3 cvsum * * part c.. f0 f2 f3 cvsum * * part c.. f1 f2 f3 cT
+ |- (((!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i))))))) ==> ((\x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i))))))) x)) = ((\x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i))))))) x))
T c= c==> ! ! c= c= b0 b1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV c= c$ b0 b2 c$ b1 b2 * / ! c= c= b0 b1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV c= c$ b0 b2 c$ b1 b2 f0 * / ! c= c= b0 b1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV c= c$ b0 b2 c$ b1 b2 f0
+ |- (((!n. (!p. ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((real_add ((sum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((sum (n .. p)) f)) = ((sum (m .. p)) f))))) ==> ((\n. (!p. ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((real_add ((sum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((sum (n .. p)) f)) = ((sum (m .. p)) f))))) n)) = ((\n. (!p. ((((NUMERAL _0) < n) /\ ((m <= n) /\ (n <= (p + (NUMERAL (BIT1 _0)))))) ==> (((real_add ((sum (m .. (n - (NUMERAL (BIT1 _0))))) f)) ((sum (n .. p)) f)) = ((sum (m .. p)) f))))) n))
T c= c==> ! ! c==> c/\ c< cNUMERAL c_0 b0 c/\ c<= f0 b0 c<= b0 c+ b1 cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. f0 c- b0 cNUMERAL cBIT1 c_0 f1 csum * * part c.. b0 b1 f1 csum * * part c.. f0 b1 f1 * / ! c==> c/\ c< cNUMERAL c_0 b0 c/\ c<= f0 b0 c<= b0 c+ b1 cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. f0 c- b0 cNUMERAL cBIT1 c_0 f1 csum * * part c.. b0 b1 f1 csum * * part c.. f0 b1 f1 f2 * / ! c==> c/\ c< cNUMERAL c_0 b0 c/\ c<= f0 b0 c<= b0 c+ b1 cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. f0 c- b0 cNUMERAL cBIT1 c_0 f1 csum * * part c.. b0 b1 f1 csum * * part c.. f0 b1 f1 f2
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vsum s) f) $ i) = ((sum s) (\x. ((f x) $ i)))))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vsum s) f) $ i) = ((sum s) (\x. ((f x) $ i)))))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vsum s) f) $ i) = ((sum s) (\x. ((f x) $ i)))))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvsum f0 f1 b0 csum f0 / c$ * f1 b1 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvsum f0 f1 b0 csum f0 / c$ * f1 b1 b0 f2 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvsum f0 f1 b0 csum f0 / c$ * f1 b1 b0 f2
