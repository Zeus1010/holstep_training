N INTEGRABLE_COMPONENTWISE
C |- (!f. (!s. (((integrable_on f) s) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((integrable_on (\x. (lift ((f x) $ i)))) s))))))
T c= cintegrable_on f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV cintegrable_on / clift c$ * f0 b1 b0 f1
D LAMBDA_SKOLEM
A |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (?x. ((P i) x)))) = (?x. (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((P i) (x $ i))))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c? / * * f0 b0 b1 c? / ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV * * f0 b1 c$ b0 b1
D EXISTS_LIFT
A |- ((?x. (P x)) = (?x. (P (lift x))))
T c= c? / * f0 b0 c? / * f0 clift b0
D integrable_on
A |- (!f. (!i. (((integrable_on f) i) = (?y. (((has_integral f) y) i)))))
T c= cintegrable_on f0 f1 c? / chas_integral f0 b0 f1
D HAS_INTEGRAL_COMPONENTWISE
A |- (!f. (!s. (!y. ((((has_integral f) y) s) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((has_integral (\x. (lift ((f x) $ i)))) (lift (y $ i))) s)))))))
T c= chas_integral f0 f1 f2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV chas_integral / clift c$ * f0 b1 b0 clift c$ f1 b0 f2
+ |- ((\i. (((integrable_on f) i) = (?y. (((has_integral f) y) i)))) i)
T * / c= cintegrable_on f0 b0 c? / chas_integral f0 b1 b0 f1
+ |- ((\f. (!s. (!y. ((((has_integral f) y) s) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((has_integral (\x. (lift ((f x) $ i)))) (lift (y $ i))) s))))))) f)
T * / ! ! c= chas_integral b0 b2 b1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cdimindex part cUNIV chas_integral / clift c$ * b0 b4 b3 clift c$ b2 b3 b1 f0
- |- (T = ((?y. (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((has_integral (\x. (lift ((f x) $ i)))) (lift (y $ i))) s)))) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (?y. (((has_integral (\x. (lift ((f x) $ i)))) y) s))))))
T c= cT c= c? / ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV chas_integral / clift c$ * f0 b2 b1 clift c$ b0 b1 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c? / chas_integral / clift c$ * f0 b2 b0 b1 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (?x. ((P i) x)))) = (?x. (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((P i) (x $ i)))))) |- ((?x. (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((P i) (x $ i))))) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (?x. ((P i) x)))))
T c==> c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c? / * * f0 b0 b1 c? / ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV * * f0 b1 c$ b0 b1 c= c? / ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV * * f0 b1 c$ b0 b1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c? / * * f0 b0 b1
+ |- ((\s. (!y. ((((has_integral f) y) s) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((has_integral (\x. (lift ((f x) $ i)))) (lift (y $ i))) s)))))) s)
T * / ! c= chas_integral f0 b1 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV chas_integral / clift c$ * f0 b3 b2 clift c$ b1 b2 b0 f1
+ |- ((?y. (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((P i) (y $ i))))) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (?y. ((P i) y)))))
T c= c? / ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV * * f0 b1 c$ b0 b1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c? / * * f0 b0 b1
- |- ((!i. t) = t)
T c= ! f0 f0
+ |- ((?y. (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((has_integral (\x. (lift ((f x) $ i)))) (lift (y $ i))) s)))) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (?y. (((has_integral (\x. (lift ((f x) $ i)))) (lift y)) s)))))
T c= c? / ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV chas_integral / clift c$ * f0 b2 b1 clift c$ b0 b1 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c? / chas_integral / clift c$ * f0 b2 b0 clift b1 f1
- |- ((?y. t) = t)
T c= c? / f0 f0
- |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
